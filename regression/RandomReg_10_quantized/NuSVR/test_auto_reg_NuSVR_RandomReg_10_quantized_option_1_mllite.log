      X_0  X_1  X_2  X_3  X_4  X_5  X_6  X_7  X_8  X_9      target
0       3    5    9    6    5    5    5    6    8    4  205.867746
1       8    2    5    8    3    8    5    6    8    4  159.579234
2       5    9    5    9    4    2    3    6    5    1   52.888003
3       1    8    8    3    7    0    2    5    9    8   -2.429778
4       3    8    0    8    1    2    1    1    5    6 -259.773644
...   ...  ...  ...  ...  ...  ...  ...  ...  ...  ...         ...
1019    6    3    1    1    9    8    7    2    8    2   27.323824
1020    8    4    3    6    4    0    7    3    3    8   48.978196
1021    1    4    9    9    1    9    7    8    5    2  216.354737
1022    4    5    8    1    8    5    3    7    3    8  102.545750
1023    2    6    4    1    1    4    7    2    4    6  -30.061527

[1024 rows x 11 columns]
MLLITE_MODEL_SET_OPTIONS NuSVR {"nu" : 0.1}
MLLITE_MODEL_OPTIONS_DEFAULT NuSVR { "max_iter" : 128 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING NuSVR { "nu" : 0.1,  "max_iter" : 128  , }
MLLITE_MODEL_JSON_AFTER_SETTING NuSVR None
('OPERATION_START', 'TRAINING')
[[3. 5. 9. 6. 5. 5. 5. 6. 8. 4.]
 [8. 2. 5. 8. 3. 8. 5. 6. 8. 4.]
 [5. 9. 5. 9. 4. 2. 3. 6. 5. 1.]
 [1. 8. 8. 3. 7. 0. 2. 5. 9. 8.]
 [3. 8. 0. 8. 1. 2. 1. 1. 5. 6.]] [ 205.86775    159.57924     52.888004    -2.4297783 -259.77365  ]
MLLITE_FIT_USING_MODEL mllite_nu_svm_reg.NuSVR_ff4_ff4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_NU_REGRESSOR_FIT' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_NU_REGRESSOR_FIT' 2 4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_NU_REGRESSOR_FIT' 3 4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:NuSVR_Global' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:NuSVR_Global' 24 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:NuSVR_Global' 36 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:NuSVR_Global' 48 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:NuSVR_Global' 60 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:NuSVR_Global' 72 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:NuSVR_Global' 84 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:NuSVR_Global' 96 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:NuSVR_Global' 108 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:NuSVR_Global' 120 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:NuSVR_Global' 128 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_NU_REGRESSOR_FIT' 4 4
('OPERATION_END_ELAPSED', 0.274, 'TRAINING')
{ "nu" : 0.1,  "max_iter" : 128  , }
{ "nu" : 0.1,  "max_iter" : 128  , }
{
	"metadata" : { "model" : "Vapnik_NuSVR_RBF", "version" : "2024-W13", "signature" : "ff4_ff4"},
	"options" : {"svm_type" : "nu_svr", "kernel" : "rbf", "degree" : 3, "gamma" : 0.012721, "coef0" : 0.000000, "cache_size" : 300, "tol" : 0.001000, "nu" : 0.100000, "epsilon" : 0.000000, "shrinking" : 0, "probability" : 0, "C" : 1.000000, "max_iter" : 128, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 1024, "dataset_features" : 10 },
	"svm_model" : {
	"classes" : 2,
	"L" : 104,
	"SupportVectors" : {
		"SV_000" : [ 3.000000, 8.000000, 0.000000, 8.000000, 1.000000, 2.000000, 1.000000, 1.000000, 5.000000, 6.000000 ],
		"SV_001" : [ 9.000000, 8.000000, 3.000000, 2.000000, 7.000000, 7.000000, 8.000000, 6.000000, 9.000000, 8.000000 ],
		"SV_002" : [ 9.000000, 5.000000, 5.000000, 9.000000, 8.000000, 4.000000, 7.000000, 5.000000, 8.000000, 4.000000 ],
		"SV_003" : [ 0.000000, 3.000000, 4.000000, 0.000000, 7.000000, 0.000000, 0.000000, 7.000000, 4.000000, 5.000000 ],
		"SV_004" : [ 7.000000, 3.000000, 9.000000, 3.000000, 4.000000, 1.000000, 8.000000, 4.000000, 9.000000, 1.000000 ],
		"SV_005" : [ 4.000000, 9.000000, 9.000000, 4.000000, 6.000000, 8.000000, 6.000000, 8.000000, 9.000000, 7.000000 ],
		"SV_006" : [ 8.000000, 6.000000, 9.000000, 6.000000, 7.000000, 8.000000, 1.000000, 4.000000, 9.000000, 8.000000 ],
		"SV_007" : [ 1.000000, 0.000000, 1.000000, 1.000000, 8.000000, 2.000000, 4.000000, 2.000000, 7.000000, 6.000000 ],
		"SV_008" : [ 9.000000, 7.000000, 8.000000, 4.000000, 6.000000, 2.000000, 7.000000, 7.000000, 1.000000, 9.000000 ],
		"SV_009" : [ 1.000000, 2.000000, 4.000000, 2.000000, 1.000000, 2.000000, 1.000000, 1.000000, 7.000000, 5.000000 ],
		"SV_010" : [ 1.000000, 0.000000, 7.000000, 2.000000, 1.000000, 7.000000, 3.000000, 7.000000, 1.000000, 0.000000 ],
		"SV_011" : [ 6.000000, 6.000000, 9.000000, 8.000000, 8.000000, 7.000000, 7.000000, 2.000000, 7.000000, 0.000000 ],
		"SV_012" : [ 0.000000, 6.000000, 5.000000, 2.000000, 4.000000, 7.000000, 1.000000, 2.000000, 1.000000, 1.000000 ],
		"SV_013" : [ 4.000000, 0.000000, 1.000000, 2.000000, 3.000000, 1.000000, 0.000000, 1.000000, 8.000000, 9.000000 ],
		"SV_014" : [ 0.000000, 0.000000, 1.000000, 6.000000, 1.000000, 8.000000, 1.000000, 7.000000, 8.000000, 6.000000 ],
		"SV_015" : [ 9.000000, 8.000000, 2.000000, 4.000000, 3.000000, 9.000000, 9.000000, 8.000000, 1.000000, 3.000000 ],
		"SV_016" : [ 1.000000, 1.000000, 0.000000, 9.000000, 8.000000, 6.000000, 0.000000, 0.000000, 8.000000, 6.000000 ],
		"SV_017" : [ 9.000000, 6.000000, 3.000000, 8.000000, 3.000000, 7.000000, 8.000000, 8.000000, 5.000000, 7.000000 ],
		"SV_018" : [ 6.000000, 9.000000, 9.000000, 9.000000, 8.000000, 1.000000, 9.000000, 0.000000, 5.000000, 0.000000 ],
		"SV_019" : [ 0.000000, 1.000000, 2.000000, 4.000000, 1.000000, 1.000000, 1.000000, 1.000000, 2.000000, 5.000000 ],
		"SV_020" : [ 8.000000, 7.000000, 7.000000, 4.000000, 9.000000, 2.000000, 9.000000, 2.000000, 9.000000, 8.000000 ],
		"SV_021" : [ 1.000000, 1.000000, 0.000000, 6.000000, 5.000000, 3.000000, 5.000000, 9.000000, 1.000000, 6.000000 ],
		"SV_022" : [ 9.000000, 7.000000, 3.000000, 6.000000, 9.000000, 3.000000, 5.000000, 8.000000, 8.000000, 7.000000 ],
		"SV_023" : [ 8.000000, 8.000000, 7.000000, 4.000000, 5.000000, 2.000000, 9.000000, 7.000000, 9.000000, 5.000000 ],
		"SV_024" : [ 1.000000, 3.000000, 1.000000, 1.000000, 6.000000, 6.000000, 1.000000, 1.000000, 4.000000, 4.000000 ],
		"SV_025" : [ 9.000000, 4.000000, 6.000000, 8.000000, 10.000000, 7.000000, 9.000000, 7.000000, 8.000000, 5.000000 ],
		"SV_026" : [ 4.000000, 1.000000, 0.000000, 2.000000, 4.000000, 4.000000, 1.000000, 1.000000, 7.000000, 6.000000 ],
		"SV_027" : [ 4.000000, 5.000000, 2.000000, 2.000000, 2.000000, 5.000000, 0.000000, 2.000000, 4.000000, 0.000000 ],
		"SV_028" : [ 9.000000, 5.000000, 3.000000, 8.000000, 1.000000, 3.000000, 8.000000, 9.000000, 8.000000, 5.000000 ],
		"SV_029" : [ 9.000000, 4.000000, 8.000000, 4.000000, 1.000000, 9.000000, 7.000000, 7.000000, 7.000000, 7.000000 ],
		"SV_030" : [ 2.000000, 0.000000, 6.000000, 4.000000, 8.000000, 0.000000, 1.000000, 6.000000, 3.000000, 1.000000 ],
		"SV_031" : [ 2.000000, 4.000000, 9.000000, 7.000000, 6.000000, 4.000000, 9.000000, 9.000000, 5.000000, 8.000000 ],
		"SV_032" : [ 9.000000, 7.000000, 3.000000, 6.000000, 6.000000, 8.000000, 8.000000, 6.000000, 9.000000, 6.000000 ],
		"SV_033" : [ 0.000000, 3.000000, 0.000000, 5.000000, 7.000000, 8.000000, 8.000000, 6.000000, 1.000000, 7.000000 ],
		"SV_034" : [ 9.000000, 4.000000, 9.000000, 7.000000, 7.000000, 6.000000, 6.000000, 3.000000, 6.000000, 7.000000 ],
		"SV_035" : [ 8.000000, 0.000000, 0.000000, 4.000000, 9.000000, 1.000000, 0.000000, 2.000000, 8.000000, 8.000000 ],
		"SV_036" : [ 1.000000, 4.000000, 0.000000, 0.000000, 3.000000, 2.000000, 6.000000, 0.000000, 5.000000, 1.000000 ],
		"SV_037" : [ 1.000000, 2.000000, 4.000000, 8.000000, 1.000000, 5.000000, 1.000000, 1.000000, 1.000000, 2.000000 ],
		"SV_038" : [ 1.000000, 0.000000, 5.000000, 6.000000, 0.000000, 7.000000, 1.000000, 0.000000, 5.000000, 7.000000 ],
		"SV_039" : [ 9.000000, 2.000000, 5.000000, 7.000000, 0.000000, 1.000000, 9.000000, 4.000000, 9.000000, 1.000000 ],
		"SV_040" : [ 7.000000, 7.000000, 9.000000, 2.000000, 9.000000, 1.000000, 9.000000, 8.000000, 7.000000, 8.000000 ],
		"SV_041" : [ 2.000000, 3.000000, 1.000000, 5.000000, 6.000000, 0.000000, 1.000000, 8.000000, 0.000000, 3.000000 ],
		"SV_042" : [ 7.000000, 4.000000, 10.000000, 7.000000, 6.000000, 6.000000, 4.000000, 3.000000, 2.000000, 9.000000 ],
		"SV_043" : [ 9.000000, 8.000000, 9.000000, 5.000000, 9.000000, 3.000000, 6.000000, 4.000000, 1.000000, 1.000000 ],
		"SV_044" : [ 8.000000, 5.000000, 9.000000, 9.000000, 8.000000, 1.000000, 9.000000, 7.000000, 3.000000, 4.000000 ],
		"SV_045" : [ 4.000000, 6.000000, 8.000000, 8.000000, 1.000000, 6.000000, 10.000000, 5.000000, 0.000000, 1.000000 ],
		"SV_046" : [ 3.000000, 8.000000, 9.000000, 9.000000, 7.000000, 4.000000, 9.000000, 8.000000, 9.000000, 7.000000 ],
		"SV_047" : [ 1.000000, 1.000000, 1.000000, 2.000000, 8.000000, 4.000000, 0.000000, 1.000000, 2.000000, 9.000000 ],
		"SV_048" : [ 7.000000, 9.000000, 8.000000, 4.000000, 2.000000, 3.000000, 6.000000, 5.000000, 9.000000, 5.000000 ],
		"SV_049" : [ 0.000000, 7.000000, 1.000000, 6.000000, 6.000000, 2.000000, 0.000000, 3.000000, 4.000000, 7.000000 ],
		"SV_050" : [ 1.000000, 2.000000, 6.000000, 8.000000, 7.000000, 1.000000, 0.000000, 0.000000, 4.000000, 2.000000 ],
		"SV_051" : [ 3.000000, 5.000000, 0.000000, 8.000000, 8.000000, 3.000000, 0.000000, 3.000000, 1.000000, 9.000000 ],
		"SV_052" : [ 6.000000, 9.000000, 9.000000, 8.000000, 5.000000, 6.000000, 7.000000, 2.000000, 4.000000, 1.000000 ],
		"SV_053" : [ 4.000000, 6.000000, 2.000000, 8.000000, 2.000000, 2.000000, 0.000000, 0.000000, 4.000000, 1.000000 ],
		"SV_054" : [ 9.000000, 6.000000, 9.000000, 3.000000, 7.000000, 9.000000, 7.000000, 8.000000, 6.000000, 1.000000 ],
		"SV_055" : [ 1.000000, 4.000000, 0.000000, 3.000000, 0.000000, 1.000000, 7.000000, 6.000000, 0.000000, 0.000000 ],
		"SV_056" : [ 8.000000, 8.000000, 6.000000, 0.000000, 1.000000, 4.000000, 8.000000, 4.000000, 8.000000, 8.000000 ],
		"SV_057" : [ 9.000000, 2.000000, 6.000000, 6.000000, 2.000000, 9.000000, 6.000000, 9.000000, 8.000000, 5.000000 ],
		"SV_058" : [ 0.000000, 0.000000, 8.000000, 6.000000, 6.000000, 8.000000, 1.000000, 1.000000, 3.000000, 3.000000 ],
		"SV_059" : [ 9.000000, 1.000000, 7.000000, 0.000000, 8.000000, 6.000000, 3.000000, 8.000000, 8.000000, 5.000000 ],
		"SV_060" : [ 9.000000, 4.000000, 8.000000, 8.000000, 7.000000, 4.000000, 6.000000, 3.000000, 7.000000, 5.000000 ],
		"SV_061" : [ 2.000000, 6.000000, 0.000000, 5.000000, 8.000000, 7.000000, 1.000000, 5.000000, 5.000000, 4.000000 ],
		"SV_062" : [ 6.000000, 8.000000, 9.000000, 7.000000, 8.000000, 9.000000, 7.000000, 1.000000, 8.000000, 6.000000 ],
		"SV_063" : [ 1.000000, 7.000000, 1.000000, 3.000000, 1.000000, 4.000000, 1.000000, 0.000000, 7.000000, 3.000000 ],
		"SV_064" : [ 1.000000, 2.000000, 0.000000, 3.000000, 6.000000, 7.000000, 2.000000, 4.000000, 7.000000, 3.000000 ],
		"SV_065" : [ 1.000000, 2.000000, 1.000000, 2.000000, 6.000000, 2.000000, 2.000000, 5.000000, 0.000000, 7.000000 ],
		"SV_066" : [ 9.000000, 3.000000, 8.000000, 8.000000, 9.000000, 2.000000, 6.000000, 0.000000, 3.000000, 8.000000 ],
		"SV_067" : [ 7.000000, 2.000000, 9.000000, 9.000000, 5.000000, 5.000000, 8.000000, 3.000000, 1.000000, 8.000000 ],
		"SV_068" : [ 8.000000, 7.000000, 3.000000, 0.000000, 4.000000, 4.000000, 9.000000, 9.000000, 5.000000, 9.000000 ],
		"SV_069" : [ 0.000000, 4.000000, 0.000000, 0.000000, 5.000000, 0.000000, 5.000000, 9.000000, 7.000000, 8.000000 ],
		"SV_070" : [ 8.000000, 9.000000, 1.000000, 9.000000, 5.000000, 6.000000, 9.000000, 8.000000, 1.000000, 7.000000 ],
		"SV_071" : [ 0.000000, 2.000000, 1.000000, 4.000000, 9.000000, 9.000000, 2.000000, 1.000000, 7.000000, 1.000000 ],
		"SV_072" : [ 1.000000, 6.000000, 0.000000, 5.000000, 9.000000, 8.000000, 5.000000, 2.000000, 0.000000, 8.000000 ],
		"SV_073" : [ 9.000000, 3.000000, 8.000000, 9.000000, 5.000000, 2.000000, 5.000000, 1.000000, 9.000000, 3.000000 ],
		"SV_074" : [ 1.000000, 1.000000, 1.000000, 5.000000, 4.000000, 0.000000, 0.000000, 9.000000, 1.000000, 2.000000 ],
		"SV_075" : [ 1.000000, 1.000000, 3.000000, 6.000000, 5.000000, 8.000000, 2.000000, 4.000000, 3.000000, 1.000000 ],
		"SV_076" : [ 0.000000, 4.000000, 3.000000, 8.000000, 7.000000, 0.000000, 1.000000, 1.000000, 0.000000, 6.000000 ],
		"SV_077" : [ 0.000000, 1.000000, 2.000000, 5.000000, 5.000000, 1.000000, 2.000000, 1.000000, 7.000000, 4.000000 ],
		"SV_078" : [ 9.000000, 1.000000, 7.000000, 3.000000, 5.000000, 2.000000, 8.000000, 3.000000, 9.000000, 7.000000 ],
		"SV_079" : [ 9.000000, 8.000000, 3.000000, 5.000000, 9.000000, 4.000000, 4.000000, 6.000000, 4.000000, 9.000000 ],
		"SV_080" : [ 3.000000, 5.000000, 5.000000, 8.000000, 0.000000, 7.000000, 9.000000, 8.000000, 10.000000, 1.000000 ],
		"SV_081" : [ 5.000000, 3.000000, 1.000000, 8.000000, 8.000000, 0.000000, 1.000000, 0.000000, 2.000000, 4.000000 ],
		"SV_082" : [ 1.000000, 1.000000, 5.000000, 1.000000, 1.000000, 4.000000, 2.000000, 3.000000, 1.000000, 5.000000 ],
		"SV_083" : [ 9.000000, 8.000000, 5.000000, 5.000000, 4.000000, 2.000000, 5.000000, 9.000000, 5.000000, 8.000000 ],
		"SV_084" : [ 0.000000, 0.000000, 0.000000, 8.000000, 5.000000, 4.000000, 5.000000, 5.000000, 8.000000, 8.000000 ],
		"SV_085" : [ 1.000000, 1.000000, 4.000000, 8.000000, 9.000000, 7.000000, 0.000000, 1.000000, 3.000000, 2.000000 ],
		"SV_086" : [ 0.000000, 7.000000, 7.000000, 4.000000, 1.000000, 1.000000, 0.000000, 6.000000, 1.000000, 4.000000 ],
		"SV_087" : [ 4.000000, 2.000000, 0.000000, 3.000000, 3.000000, 1.000000, 0.000000, 8.000000, 9.000000, 9.000000 ],
		"SV_088" : [ 0.000000, 5.000000, 6.000000, 4.000000, 8.000000, 0.000000, 0.000000, 4.000000, 1.000000, 6.000000 ],
		"SV_089" : [ 1.000000, 5.000000, 0.000000, 8.000000, 6.000000, 6.000000, 1.000000, 6.000000, 6.000000, 8.000000 ],
		"SV_090" : [ 9.000000, 2.000000, 9.000000, 1.000000, 5.000000, 0.000000, 7.000000, 1.000000, 9.000000, 1.000000 ],
		"SV_091" : [ 1.000000, 5.000000, 3.000000, 4.000000, 4.000000, 2.000000, 1.000000, 4.000000, 0.000000, 2.000000 ],
		"SV_092" : [ 5.000000, 9.000000, 7.000000, 7.000000, 5.000000, 4.000000, 7.000000, 4.000000, 8.000000, 9.000000 ],
		"SV_093" : [ 0.000000, 3.000000, 7.000000, 6.000000, 0.000000, 6.000000, 0.000000, 7.000000, 1.000000, 1.000000 ],
		"SV_094" : [ 4.000000, 2.000000, 9.000000, 8.000000, 1.000000, 9.000000, 9.000000, 8.000000, 3.000000, 1.000000 ],
		"SV_095" : [ 8.000000, 6.000000, 8.000000, 7.000000, 1.000000, 5.000000, 9.000000, 9.000000, 0.000000, 6.000000 ],
		"SV_096" : [ 1.000000, 6.000000, 5.000000, 1.000000, 2.000000, 1.000000, 1.000000, 1.000000, 4.000000, 1.000000 ],
		"SV_097" : [ 9.000000, 6.000000, 3.000000, 3.000000, 9.000000, 6.000000, 6.000000, 4.000000, 7.000000, 6.000000 ],
		"SV_098" : [ 0.000000, 2.000000, 3.000000, 5.000000, 9.000000, 1.000000, 0.000000, 1.000000, 8.000000, 1.000000 ],
		"SV_099" : [ 4.000000, 7.000000, 9.000000, 0.000000, 3.000000, 1.000000, 7.000000, 8.000000, 3.000000, 4.000000 ],
		"SV_100" : [ 7.000000, 2.000000, 8.000000, 8.000000, 6.000000, 1.000000, 9.000000, 8.000000, 8.000000, 9.000000 ],
		"SV_101" : [ 8.000000, 6.000000, 8.000000, 2.000000, 8.000000, 9.000000, 5.000000, 7.000000, 4.000000, 3.000000 ],
		"SV_102" : [ 0.000000, 1.000000, 4.000000, 6.000000, 3.000000, 3.000000, 3.000000, 5.000000, 3.000000, 4.000000 ],
		"SV_103" : [ 7.000000, 8.000000, 6.000000, 2.000000, 8.000000, 6.000000, 8.000000, 1.000000, 9.000000, 2.000000 ]
	},
	"SupportVectorsCoefs" : {
		"SV_coef
	},
	"rho" : [ -9.099823 ],
	"nSV" : [ 104 ],
	"probA" : [ ],
	"probB" : [ ],
	"n_iter" : [ 128 ]
}
}
WRITING_JSON_CODE 'logs/auto_tests/regression/NuSVR/mllite.NuSVR_RandomReg_10_quantized_option_1.json'

MLLITE_MODEL_SET_OPTIONS NuSVR {"nu" : 0.1}
MLLITE_MODEL_OPTIONS_DEFAULT NuSVR { "max_iter" : 128 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING NuSVR { "nu" : 0.1,  "max_iter" : 128  , }
MLLITE_MODEL_JSON_AFTER_SETTING NuSVR None
MLLITE_RELOADING_MODEL mllite_nu_svm_reg.NuSVR_ff4_ff4
{
	"metadata" : { "model" : "Vapnik_NuSVR_RBF", "version" : "2024-W13", "signature" : "ff4_ff4"},
	"options" : {"svm_type" : "nu_svr", "kernel" : "rbf", "degree" : 3, "gamma" : 0.012721, "coef0" : 0.000000, "cache_size" : 300, "tol" : 0.001000, "nu" : 0.100000, "epsilon" : 0.000000, "shrinking" : 0, "probability" : 0, "C" : 1.000000, "max_iter" : 128, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 1024, "dataset_features" : 10 },
	"svm_model" : {
	"classes" : 2,
	"L" : 104,
	"SupportVectors" : {
		"SV_000" : [ 3.000000, 8.000000, 0.000000, 8.000000, 1.000000, 2.000000, 1.000000, 1.000000, 5.000000, 6.000000 ],
		"SV_001" : [ 9.000000, 8.000000, 3.000000, 2.000000, 7.000000, 7.000000, 8.000000, 6.000000, 9.000000, 8.000000 ],
		"SV_002" : [ 9.000000, 5.000000, 5.000000, 9.000000, 8.000000, 4.000000, 7.000000, 5.000000, 8.000000, 4.000000 ],
		"SV_003" : [ 0.000000, 3.000000, 4.000000, 0.000000, 7.000000, 0.000000, 0.000000, 7.000000, 4.000000, 5.000000 ],
		"SV_004" : [ 7.000000, 3.000000, 9.000000, 3.000000, 4.000000, 1.000000, 8.000000, 4.000000, 9.000000, 1.000000 ],
		"SV_005" : [ 4.000000, 9.000000, 9.000000, 4.000000, 6.000000, 8.000000, 6.000000, 8.000000, 9.000000, 7.000000 ],
		"SV_006" : [ 8.000000, 6.000000, 9.000000, 6.000000, 7.000000, 8.000000, 1.000000, 4.000000, 9.000000, 8.000000 ],
		"SV_007" : [ 1.000000, 0.000000, 1.000000, 1.000000, 8.000000, 2.000000, 4.000000, 2.000000, 7.000000, 6.000000 ],
		"SV_008" : [ 9.000000, 7.000000, 8.000000, 4.000000, 6.000000, 2.000000, 7.000000, 7.000000, 1.000000, 9.000000 ],
		"SV_009" : [ 1.000000, 2.000000, 4.000000, 2.000000, 1.000000, 2.000000, 1.000000, 1.000000, 7.000000, 5.000000 ],
		"SV_010" : [ 1.000000, 0.000000, 7.000000, 2.000000, 1.000000, 7.000000, 3.000000, 7.000000, 1.000000, 0.000000 ],
		"SV_011" : [ 6.000000, 6.000000, 9.000000, 8.000000, 8.000000, 7.000000, 7.000000, 2.000000, 7.000000, 0.000000 ],
		"SV_012" : [ 0.000000, 6.000000, 5.000000, 2.000000, 4.000000, 7.000000, 1.000000, 2.000000, 1.000000, 1.000000 ],
		"SV_013" : [ 4.000000, 0.000000, 1.000000, 2.000000, 3.000000, 1.000000, 0.000000, 1.000000, 8.000000, 9.000000 ],
		"SV_014" : [ 0.000000, 0.000000, 1.000000, 6.000000, 1.000000, 8.000000, 1.000000, 7.000000, 8.000000, 6.000000 ],
		"SV_015" : [ 9.000000, 8.000000, 2.000000, 4.000000, 3.000000, 9.000000, 9.000000, 8.000000, 1.000000, 3.000000 ],
		"SV_016" : [ 1.000000, 1.000000, 0.000000, 9.000000, 8.000000, 6.000000, 0.000000, 0.000000, 8.000000, 6.000000 ],
		"SV_017" : [ 9.000000, 6.000000, 3.000000, 8.000000, 3.000000, 7.000000, 8.000000, 8.000000, 5.000000, 7.000000 ],
		"SV_018" : [ 6.000000, 9.000000, 9.000000, 9.000000, 8.000000, 1.000000, 9.000000, 0.000000, 5.000000, 0.000000 ],
		"SV_019" : [ 0.000000, 1.000000, 2.000000, 4.000000, 1.000000, 1.000000, 1.000000, 1.000000, 2.000000, 5.000000 ],
		"SV_020" : [ 8.000000, 7.000000, 7.000000, 4.000000, 9.000000, 2.000000, 9.000000, 2.000000, 9.000000, 8.000000 ],
		"SV_021" : [ 1.000000, 1.000000, 0.000000, 6.000000, 5.000000, 3.000000, 5.000000, 9.000000, 1.000000, 6.000000 ],
		"SV_022" : [ 9.000000, 7.000000, 3.000000, 6.000000, 9.000000, 3.000000, 5.000000, 8.000000, 8.000000, 7.000000 ],
		"SV_023" : [ 8.000000, 8.000000, 7.000000, 4.000000, 5.000000, 2.000000, 9.000000, 7.000000, 9.000000, 5.000000 ],
		"SV_024" : [ 1.000000, 3.000000, 1.000000, 1.000000, 6.000000, 6.000000, 1.000000, 1.000000, 4.000000, 4.000000 ],
		"SV_025" : [ 9.000000, 4.000000, 6.000000, 8.000000, 10.000000, 7.000000, 9.000000, 7.000000, 8.000000, 5.000000 ],
		"SV_026" : [ 4.000000, 1.000000, 0.000000, 2.000000, 4.000000, 4.000000, 1.000000, 1.000000, 7.000000, 6.000000 ],
		"SV_027" : [ 4.000000, 5.000000, 2.000000, 2.000000, 2.000000, 5.000000, 0.000000, 2.000000, 4.000000, 0.000000 ],
		"SV_028" : [ 9.000000, 5.000000, 3.000000, 8.000000, 1.000000, 3.000000, 8.000000, 9.000000, 8.000000, 5.000000 ],
		"SV_029" : [ 9.000000, 4.000000, 8.000000, 4.000000, 1.000000, 9.000000, 7.000000, 7.000000, 7.000000, 7.000000 ],
		"SV_030" : [ 2.000000, 0.000000, 6.000000, 4.000000, 8.000000, 0.000000, 1.000000, 6.000000, 3.000000, 1.000000 ],
		"SV_031" : [ 2.000000, 4.000000, 9.000000, 7.000000, 6.000000, 4.000000, 9.000000, 9.000000, 5.000000, 8.000000 ],
		"SV_032" : [ 9.000000, 7.000000, 3.000000, 6.000000, 6.000000, 8.000000, 8.000000, 6.000000, 9.000000, 6.000000 ],
		"SV_033" : [ 0.000000, 3.000000, 0.000000, 5.000000, 7.000000, 8.000000, 8.000000, 6.000000, 1.000000, 7.000000 ],
		"SV_034" : [ 9.000000, 4.000000, 9.000000, 7.000000, 7.000000, 6.000000, 6.000000, 3.000000, 6.000000, 7.000000 ],
		"SV_035" : [ 8.000000, 0.000000, 0.000000, 4.000000, 9.000000, 1.000000, 0.000000, 2.000000, 8.000000, 8.000000 ],
		"SV_036" : [ 1.000000, 4.000000, 0.000000, 0.000000, 3.000000, 2.000000, 6.000000, 0.000000, 5.000000, 1.000000 ],
		"SV_037" : [ 1.000000, 2.000000, 4.000000, 8.000000, 1.000000, 5.000000, 1.000000, 1.000000, 1.000000, 2.000000 ],
		"SV_038" : [ 1.000000, 0.000000, 5.000000, 6.000000, 0.000000, 7.000000, 1.000000, 0.000000, 5.000000, 7.000000 ],
		"SV_039" : [ 9.000000, 2.000000, 5.000000, 7.000000, 0.000000, 1.000000, 9.000000, 4.000000, 9.000000, 1.000000 ],
		"SV_040" : [ 7.000000, 7.000000, 9.000000, 2.000000, 9.000000, 1.000000, 9.000000, 8.000000, 7.000000, 8.000000 ],
		"SV_041" : [ 2.000000, 3.000000, 1.000000, 5.000000, 6.000000, 0.000000, 1.000000, 8.000000, 0.000000, 3.000000 ],
		"SV_042" : [ 7.000000, 4.000000, 10.000000, 7.000000, 6.000000, 6.000000, 4.000000, 3.000000, 2.000000, 9.000000 ],
		"SV_043" : [ 9.000000, 8.000000, 9.000000, 5.000000, 9.000000, 3.000000, 6.000000, 4.000000, 1.000000, 1.000000 ],
		"SV_044" : [ 8.000000, 5.000000, 9.000000, 9.000000, 8.000000, 1.000000, 9.000000, 7.000000, 3.000000, 4.000000 ],
		"SV_045" : [ 4.000000, 6.000000, 8.000000, 8.000000, 1.000000, 6.000000, 10.000000, 5.000000, 0.000000, 1.000000 ],
		"SV_046" : [ 3.000000, 8.000000, 9.000000, 9.000000, 7.000000, 4.000000, 9.000000, 8.000000, 9.000000, 7.000000 ],
		"SV_047" : [ 1.000000, 1.000000, 1.000000, 2.000000, 8.000000, 4.000000, 0.000000, 1.000000, 2.000000, 9.000000 ],
		"SV_048" : [ 7.000000, 9.000000, 8.000000, 4.000000, 2.000000, 3.000000, 6.000000, 5.000000, 9.000000, 5.000000 ],
		"SV_049" : [ 0.000000, 7.000000, 1.000000, 6.000000, 6.000000, 2.000000, 0.000000, 3.000000, 4.000000, 7.000000 ],
		"SV_050" : [ 1.000000, 2.000000, 6.000000, 8.000000, 7.000000, 1.000000, 0.000000, 0.000000, 4.000000, 2.000000 ],
		"SV_051" : [ 3.000000, 5.000000, 0.000000, 8.000000, 8.000000, 3.000000, 0.000000, 3.000000, 1.000000, 9.000000 ],
		"SV_052" : [ 6.000000, 9.000000, 9.000000, 8.000000, 5.000000, 6.000000, 7.000000, 2.000000, 4.000000, 1.000000 ],
		"SV_053" : [ 4.000000, 6.000000, 2.000000, 8.000000, 2.000000, 2.000000, 0.000000, 0.000000, 4.000000, 1.000000 ],
		"SV_054" : [ 9.000000, 6.000000, 9.000000, 3.000000, 7.000000, 9.000000, 7.000000, 8.000000, 6.000000, 1.000000 ],
		"SV_055" : [ 1.000000, 4.000000, 0.000000, 3.000000, 0.000000, 1.000000, 7.000000, 6.000000, 0.000000, 0.000000 ],
		"SV_056" : [ 8.000000, 8.000000, 6.000000, 0.000000, 1.000000, 4.000000, 8.000000, 4.000000, 8.000000, 8.000000 ],
		"SV_057" : [ 9.000000, 2.000000, 6.000000, 6.000000, 2.000000, 9.000000, 6.000000, 9.000000, 8.000000, 5.000000 ],
		"SV_058" : [ 0.000000, 0.000000, 8.000000, 6.000000, 6.000000, 8.000000, 1.000000, 1.000000, 3.000000, 3.000000 ],
		"SV_059" : [ 9.000000, 1.000000, 7.000000, 0.000000, 8.000000, 6.000000, 3.000000, 8.000000, 8.000000, 5.000000 ],
		"SV_060" : [ 9.000000, 4.000000, 8.000000, 8.000000, 7.000000, 4.000000, 6.000000, 3.000000, 7.000000, 5.000000 ],
		"SV_061" : [ 2.000000, 6.000000, 0.000000, 5.000000, 8.000000, 7.000000, 1.000000, 5.000000, 5.000000, 4.000000 ],
		"SV_062" : [ 6.000000, 8.000000, 9.000000, 7.000000, 8.000000, 9.000000, 7.000000, 1.000000, 8.000000, 6.000000 ],
		"SV_063" : [ 1.000000, 7.000000, 1.000000, 3.000000, 1.000000, 4.000000, 1.000000, 0.000000, 7.000000, 3.000000 ],
		"SV_064" : [ 1.000000, 2.000000, 0.000000, 3.000000, 6.000000, 7.000000, 2.000000, 4.000000, 7.000000, 3.000000 ],
		"SV_065" : [ 1.000000, 2.000000, 1.000000, 2.000000, 6.000000, 2.000000, 2.000000, 5.000000, 0.000000, 7.000000 ],
		"SV_066" : [ 9.000000, 3.000000, 8.000000, 8.000000, 9.000000, 2.000000, 6.000000, 0.000000, 3.000000, 8.000000 ],
		"SV_067" : [ 7.000000, 2.000000, 9.000000, 9.000000, 5.000000, 5.000000, 8.000000, 3.000000, 1.000000, 8.000000 ],
		"SV_068" : [ 8.000000, 7.000000, 3.000000, 0.000000, 4.000000, 4.000000, 9.000000, 9.000000, 5.000000, 9.000000 ],
		"SV_069" : [ 0.000000, 4.000000, 0.000000, 0.000000, 5.000000, 0.000000, 5.000000, 9.000000, 7.000000, 8.000000 ],
		"SV_070" : [ 8.000000, 9.000000, 1.000000, 9.000000, 5.000000, 6.000000, 9.000000, 8.000000, 1.000000, 7.000000 ],
		"SV_071" : [ 0.000000, 2.000000, 1.000000, 4.000000, 9.000000, 9.000000, 2.000000, 1.000000, 7.000000, 1.000000 ],
		"SV_072" : [ 1.000000, 6.000000, 0.000000, 5.000000, 9.000000, 8.000000, 5.000000, 2.000000, 0.000000, 8.000000 ],
		"SV_073" : [ 9.000000, 3.000000, 8.000000, 9.000000, 5.000000, 2.000000, 5.000000, 1.000000, 9.000000, 3.000000 ],
		"SV_074" : [ 1.000000, 1.000000, 1.000000, 5.000000, 4.000000, 0.000000, 0.000000, 9.000000, 1.000000, 2.000000 ],
		"SV_075" : [ 1.000000, 1.000000, 3.000000, 6.000000, 5.000000, 8.000000, 2.000000, 4.000000, 3.000000, 1.000000 ],
		"SV_076" : [ 0.000000, 4.000000, 3.000000, 8.000000, 7.000000, 0.000000, 1.000000, 1.000000, 0.000000, 6.000000 ],
		"SV_077" : [ 0.000000, 1.000000, 2.000000, 5.000000, 5.000000, 1.000000, 2.000000, 1.000000, 7.000000, 4.000000 ],
		"SV_078" : [ 9.000000, 1.000000, 7.000000, 3.000000, 5.000000, 2.000000, 8.000000, 3.000000, 9.000000, 7.000000 ],
		"SV_079" : [ 9.000000, 8.000000, 3.000000, 5.000000, 9.000000, 4.000000, 4.000000, 6.000000, 4.000000, 9.000000 ],
		"SV_080" : [ 3.000000, 5.000000, 5.000000, 8.000000, 0.000000, 7.000000, 9.000000, 8.000000, 10.000000, 1.000000 ],
		"SV_081" : [ 5.000000, 3.000000, 1.000000, 8.000000, 8.000000, 0.000000, 1.000000, 0.000000, 2.000000, 4.000000 ],
		"SV_082" : [ 1.000000, 1.000000, 5.000000, 1.000000, 1.000000, 4.000000, 2.000000, 3.000000, 1.000000, 5.000000 ],
		"SV_083" : [ 9.000000, 8.000000, 5.000000, 5.000000, 4.000000, 2.000000, 5.000000, 9.000000, 5.000000, 8.000000 ],
		"SV_084" : [ 0.000000, 0.000000, 0.000000, 8.000000, 5.000000, 4.000000, 5.000000, 5.000000, 8.000000, 8.000000 ],
		"SV_085" : [ 1.000000, 1.000000, 4.000000, 8.000000, 9.000000, 7.000000, 0.000000, 1.000000, 3.000000, 2.000000 ],
		"SV_086" : [ 0.000000, 7.000000, 7.000000, 4.000000, 1.000000, 1.000000, 0.000000, 6.000000, 1.000000, 4.000000 ],
		"SV_087" : [ 4.000000, 2.000000, 0.000000, 3.000000, 3.000000, 1.000000, 0.000000, 8.000000, 9.000000, 9.000000 ],
		"SV_088" : [ 0.000000, 5.000000, 6.000000, 4.000000, 8.000000, 0.000000, 0.000000, 4.000000, 1.000000, 6.000000 ],
		"SV_089" : [ 1.000000, 5.000000, 0.000000, 8.000000, 6.000000, 6.000000, 1.000000, 6.000000, 6.000000, 8.000000 ],
		"SV_090" : [ 9.000000, 2.000000, 9.000000, 1.000000, 5.000000, 0.000000, 7.000000, 1.000000, 9.000000, 1.000000 ],
		"SV_091" : [ 1.000000, 5.000000, 3.000000, 4.000000, 4.000000, 2.000000, 1.000000, 4.000000, 0.000000, 2.000000 ],
		"SV_092" : [ 5.000000, 9.000000, 7.000000, 7.000000, 5.000000, 4.000000, 7.000000, 4.000000, 8.000000, 9.000000 ],
		"SV_093" : [ 0.000000, 3.000000, 7.000000, 6.000000, 0.000000, 6.000000, 0.000000, 7.000000, 1.000000, 1.000000 ],
		"SV_094" : [ 4.000000, 2.000000, 9.000000, 8.000000, 1.000000, 9.000000, 9.000000, 8.000000, 3.000000, 1.000000 ],
		"SV_095" : [ 8.000000, 6.000000, 8.000000, 7.000000, 1.000000, 5.000000, 9.000000, 9.000000, 0.000000, 6.000000 ],
		"SV_096" : [ 1.000000, 6.000000, 5.000000, 1.000000, 2.000000, 1.000000, 1.000000, 1.000000, 4.000000, 1.000000 ],
		"SV_097" : [ 9.000000, 6.000000, 3.000000, 3.000000, 9.000000, 6.000000, 6.000000, 4.000000, 7.000000, 6.000000 ],
		"SV_098" : [ 0.000000, 2.000000, 3.000000, 5.000000, 9.000000, 1.000000, 0.000000, 1.000000, 8.000000, 1.000000 ],
		"SV_099" : [ 4.000000, 7.000000, 9.000000, 0.000000, 3.000000, 1.000000, 7.000000, 8.000000, 3.000000, 4.000000 ],
		"SV_100" : [ 7.000000, 2.000000, 8.000000, 8.000000, 6.000000, 1.000000, 9.000000, 8.000000, 8.000000, 9.000000 ],
		"SV_101" : [ 8.000000, 6.000000, 8.000000, 2.000000, 8.000000, 9.000000, 5.000000, 7.000000, 4.000000, 3.000000 ],
		"SV_102" : [ 0.000000, 1.000000, 4.000000, 6.000000, 3.000000, 3.000000, 3.000000, 5.000000, 3.000000, 4.000000 ],
		"SV_103" : [ 7.000000, 8.000000, 6.000000, 2.000000, 8.000000, 6.000000, 8.000000, 1.000000, 9.000000, 2.000000 ]
	},
	"SupportVectorsCoefs" : {
		"SV_coef
	},
	"rho" : [ -9.099823 ],
	"nSV" : [ 104 ],
	"probA" : [ ],
	"probB" : [ ],
	"n_iter" : [ 128 ]
}
}
BEAUTIFIED_JSON_START
{
	"dataset" : 	{
		"dataset_features" : 10,
		"dataset_rows" : 1024
	},
	"metadata" :  { "model" : "Vapnik_NuSVR_RBF", "signature" : "ff4_ff4", "version" : "2024-W13" },
	"options" :  { "C" : 1.0, "cache_size" : 300, "coef0" : 0.0, "degree" : 3, "epsilon" : 0.0, "gamma" : 0.012721, "kernel" : "rbf", "max_iter" : 128, "nu" : 0.1, "probability" : 0, "random_state" : 1789, "shrinking" : 0, "svm_type" : "nu_svr", "tol" : 0.001 },
	"svm_model" : 	{
		"L" : 104,
		"SupportVectors" : 	{
			"SV_000" : [ 3.0, 8.0, 0.0, 8.0, 1.0, 2.0, 1.0, 1.0, 5.0, 6.0 ],
			"SV_001" : [ 9.0, 8.0, 3.0, 2.0, 7.0, 7.0, 8.0, 6.0, 9.0, 8.0 ],
			"SV_002" : [ 9.0, 5.0, 5.0, 9.0, 8.0, 4.0, 7.0, 5.0, 8.0, 4.0 ],
			"SV_003" : [ 0.0, 3.0, 4.0, 0.0, 7.0, 0.0, 0.0, 7.0, 4.0, 5.0 ],
			"SV_004" : [ 7.0, 3.0, 9.0, 3.0, 4.0, 1.0, 8.0, 4.0, 9.0, 1.0 ],
			"SV_005" : [ 4.0, 9.0, 9.0, 4.0, 6.0, 8.0, 6.0, 8.0, 9.0, 7.0 ],
			"SV_006" : [ 8.0, 6.0, 9.0, 6.0, 7.0, 8.0, 1.0, 4.0, 9.0, 8.0 ],
			"SV_007" : [ 1.0, 0.0, 1.0, 1.0, 8.0, 2.0, 4.0, 2.0, 7.0, 6.0 ],
			"SV_008" : [ 9.0, 7.0, 8.0, 4.0, 6.0, 2.0, 7.0, 7.0, 1.0, 9.0 ],
			"SV_009" : [ 1.0, 2.0, 4.0, 2.0, 1.0, 2.0, 1.0, 1.0, 7.0, 5.0 ],
			"SV_010" : [ 1.0, 0.0, 7.0, 2.0, 1.0, 7.0, 3.0, 7.0, 1.0, 0.0 ],
			"SV_011" : [ 6.0, 6.0, 9.0, 8.0, 8.0, 7.0, 7.0, 2.0, 7.0, 0.0 ],
			"SV_012" : [ 0.0, 6.0, 5.0, 2.0, 4.0, 7.0, 1.0, 2.0, 1.0, 1.0 ],
			"SV_013" : [ 4.0, 0.0, 1.0, 2.0, 3.0, 1.0, 0.0, 1.0, 8.0, 9.0 ],
			"SV_014" : [ 0.0, 0.0, 1.0, 6.0, 1.0, 8.0, 1.0, 7.0, 8.0, 6.0 ],
			"SV_015" : [ 9.0, 8.0, 2.0, 4.0, 3.0, 9.0, 9.0, 8.0, 1.0, 3.0 ],
			"SV_016" : [ 1.0, 1.0, 0.0, 9.0, 8.0, 6.0, 0.0, 0.0, 8.0, 6.0 ],
			"SV_017" : [ 9.0, 6.0, 3.0, 8.0, 3.0, 7.0, 8.0, 8.0, 5.0, 7.0 ],
			"SV_018" : [ 6.0, 9.0, 9.0, 9.0, 8.0, 1.0, 9.0, 0.0, 5.0, 0.0 ],
			"SV_019" : [ 0.0, 1.0, 2.0, 4.0, 1.0, 1.0, 1.0, 1.0, 2.0, 5.0 ],
			"SV_020" : [ 8.0, 7.0, 7.0, 4.0, 9.0, 2.0, 9.0, 2.0, 9.0, 8.0 ],
			"SV_021" : [ 1.0, 1.0, 0.0, 6.0, 5.0, 3.0, 5.0, 9.0, 1.0, 6.0 ],
			"SV_022" : [ 9.0, 7.0, 3.0, 6.0, 9.0, 3.0, 5.0, 8.0, 8.0, 7.0 ],
			"SV_023" : [ 8.0, 8.0, 7.0, 4.0, 5.0, 2.0, 9.0, 7.0, 9.0, 5.0 ],
			"SV_024" : [ 1.0, 3.0, 1.0, 1.0, 6.0, 6.0, 1.0, 1.0, 4.0, 4.0 ],
			"SV_025" : [ 9.0, 4.0, 6.0, 8.0, 10.0, 7.0, 9.0, 7.0, 8.0, 5.0 ],
			"SV_026" : [ 4.0, 1.0, 0.0, 2.0, 4.0, 4.0, 1.0, 1.0, 7.0, 6.0 ],
			"SV_027" : [ 4.0, 5.0, 2.0, 2.0, 2.0, 5.0, 0.0, 2.0, 4.0, 0.0 ],
			"SV_028" : [ 9.0, 5.0, 3.0, 8.0, 1.0, 3.0, 8.0, 9.0, 8.0, 5.0 ],
			"SV_029" : [ 9.0, 4.0, 8.0, 4.0, 1.0, 9.0, 7.0, 7.0, 7.0, 7.0 ],
			"SV_030" : [ 2.0, 0.0, 6.0, 4.0, 8.0, 0.0, 1.0, 6.0, 3.0, 1.0 ],
			"SV_031" : [ 2.0, 4.0, 9.0, 7.0, 6.0, 4.0, 9.0, 9.0, 5.0, 8.0 ],
			"SV_032" : [ 9.0, 7.0, 3.0, 6.0, 6.0, 8.0, 8.0, 6.0, 9.0, 6.0 ],
			"SV_033" : [ 0.0, 3.0, 0.0, 5.0, 7.0, 8.0, 8.0, 6.0, 1.0, 7.0 ],
			"SV_034" : [ 9.0, 4.0, 9.0, 7.0, 7.0, 6.0, 6.0, 3.0, 6.0, 7.0 ],
			"SV_035" : [ 8.0, 0.0, 0.0, 4.0, 9.0, 1.0, 0.0, 2.0, 8.0, 8.0 ],
			"SV_036" : [ 1.0, 4.0, 0.0, 0.0, 3.0, 2.0, 6.0, 0.0, 5.0, 1.0 ],
			"SV_037" : [ 1.0, 2.0, 4.0, 8.0, 1.0, 5.0, 1.0, 1.0, 1.0, 2.0 ],
			"SV_038" : [ 1.0, 0.0, 5.0, 6.0, 0.0, 7.0, 1.0, 0.0, 5.0, 7.0 ],
			"SV_039" : [ 9.0, 2.0, 5.0, 7.0, 0.0, 1.0, 9.0, 4.0, 9.0, 1.0 ],
			"SV_040" : [ 7.0, 7.0, 9.0, 2.0, 9.0, 1.0, 9.0, 8.0, 7.0, 8.0 ],
			"SV_041" : [ 2.0, 3.0, 1.0, 5.0, 6.0, 0.0, 1.0, 8.0, 0.0, 3.0 ],
			"SV_042" : [ 7.0, 4.0, 10.0, 7.0, 6.0, 6.0, 4.0, 3.0, 2.0, 9.0 ],
			"SV_043" : [ 9.0, 8.0, 9.0, 5.0, 9.0, 3.0, 6.0, 4.0, 1.0, 1.0 ],
			"SV_044" : [ 8.0, 5.0, 9.0, 9.0, 8.0, 1.0, 9.0, 7.0, 3.0, 4.0 ],
			"SV_045" : [ 4.0, 6.0, 8.0, 8.0, 1.0, 6.0, 10.0, 5.0, 0.0, 1.0 ],
			"SV_046" : [ 3.0, 8.0, 9.0, 9.0, 7.0, 4.0, 9.0, 8.0, 9.0, 7.0 ],
			"SV_047" : [ 1.0, 1.0, 1.0, 2.0, 8.0, 4.0, 0.0, 1.0, 2.0, 9.0 ],
			"SV_048" : [ 7.0, 9.0, 8.0, 4.0, 2.0, 3.0, 6.0, 5.0, 9.0, 5.0 ],
			"SV_049" : [ 0.0, 7.0, 1.0, 6.0, 6.0, 2.0, 0.0, 3.0, 4.0, 7.0 ],
			"SV_050" : [ 1.0, 2.0, 6.0, 8.0, 7.0, 1.0, 0.0, 0.0, 4.0, 2.0 ],
			"SV_051" : [ 3.0, 5.0, 0.0, 8.0, 8.0, 3.0, 0.0, 3.0, 1.0, 9.0 ],
			"SV_052" : [ 6.0, 9.0, 9.0, 8.0, 5.0, 6.0, 7.0, 2.0, 4.0, 1.0 ],
			"SV_053" : [ 4.0, 6.0, 2.0, 8.0, 2.0, 2.0, 0.0, 0.0, 4.0, 1.0 ],
			"SV_054" : [ 9.0, 6.0, 9.0, 3.0, 7.0, 9.0, 7.0, 8.0, 6.0, 1.0 ],
			"SV_055" : [ 1.0, 4.0, 0.0, 3.0, 0.0, 1.0, 7.0, 6.0, 0.0, 0.0 ],
			"SV_056" : [ 8.0, 8.0, 6.0, 0.0, 1.0, 4.0, 8.0, 4.0, 8.0, 8.0 ],
			"SV_057" : [ 9.0, 2.0, 6.0, 6.0, 2.0, 9.0, 6.0, 9.0, 8.0, 5.0 ],
			"SV_058" : [ 0.0, 0.0, 8.0, 6.0, 6.0, 8.0, 1.0, 1.0, 3.0, 3.0 ],
			"SV_059" : [ 9.0, 1.0, 7.0, 0.0, 8.0, 6.0, 3.0, 8.0, 8.0, 5.0 ],
			"SV_060" : [ 9.0, 4.0, 8.0, 8.0, 7.0, 4.0, 6.0, 3.0, 7.0, 5.0 ],
			"SV_061" : [ 2.0, 6.0, 0.0, 5.0, 8.0, 7.0, 1.0, 5.0, 5.0, 4.0 ],
			"SV_062" : [ 6.0, 8.0, 9.0, 7.0, 8.0, 9.0, 7.0, 1.0, 8.0, 6.0 ],
			"SV_063" : [ 1.0, 7.0, 1.0, 3.0, 1.0, 4.0, 1.0, 0.0, 7.0, 3.0 ],
			"SV_064" : [ 1.0, 2.0, 0.0, 3.0, 6.0, 7.0, 2.0, 4.0, 7.0, 3.0 ],
			"SV_065" : [ 1.0, 2.0, 1.0, 2.0, 6.0, 2.0, 2.0, 5.0, 0.0, 7.0 ],
			"SV_066" : [ 9.0, 3.0, 8.0, 8.0, 9.0, 2.0, 6.0, 0.0, 3.0, 8.0 ],
			"SV_067" : [ 7.0, 2.0, 9.0, 9.0, 5.0, 5.0, 8.0, 3.0, 1.0, 8.0 ],
			"SV_068" : [ 8.0, 7.0, 3.0, 0.0, 4.0, 4.0, 9.0, 9.0, 5.0, 9.0 ],
			"SV_069" : [ 0.0, 4.0, 0.0, 0.0, 5.0, 0.0, 5.0, 9.0, 7.0, 8.0 ],
			"SV_070" : [ 8.0, 9.0, 1.0, 9.0, 5.0, 6.0, 9.0, 8.0, 1.0, 7.0 ],
			"SV_071" : [ 0.0, 2.0, 1.0, 4.0, 9.0, 9.0, 2.0, 1.0, 7.0, 1.0 ],
			"SV_072" : [ 1.0, 6.0, 0.0, 5.0, 9.0, 8.0, 5.0, 2.0, 0.0, 8.0 ],
			"SV_073" : [ 9.0, 3.0, 8.0, 9.0, 5.0, 2.0, 5.0, 1.0, 9.0, 3.0 ],
			"SV_074" : [ 1.0, 1.0, 1.0, 5.0, 4.0, 0.0, 0.0, 9.0, 1.0, 2.0 ],
			"SV_075" : [ 1.0, 1.0, 3.0, 6.0, 5.0, 8.0, 2.0, 4.0, 3.0, 1.0 ],
			"SV_076" : [ 0.0, 4.0, 3.0, 8.0, 7.0, 0.0, 1.0, 1.0, 0.0, 6.0 ],
			"SV_077" : [ 0.0, 1.0, 2.0, 5.0, 5.0, 1.0, 2.0, 1.0, 7.0, 4.0 ],
			"SV_078" : [ 9.0, 1.0, 7.0, 3.0, 5.0, 2.0, 8.0, 3.0, 9.0, 7.0 ],
			"SV_079" : [ 9.0, 8.0, 3.0, 5.0, 9.0, 4.0, 4.0, 6.0, 4.0, 9.0 ],
			"SV_080" : [ 3.0, 5.0, 5.0, 8.0, 0.0, 7.0, 9.0, 8.0, 10.0, 1.0 ],
			"SV_081" : [ 5.0, 3.0, 1.0, 8.0, 8.0, 0.0, 1.0, 0.0, 2.0, 4.0 ],
			"SV_082" : [ 1.0, 1.0, 5.0, 1.0, 1.0, 4.0, 2.0, 3.0, 1.0, 5.0 ],
			"SV_083" : [ 9.0, 8.0, 5.0, 5.0, 4.0, 2.0, 5.0, 9.0, 5.0, 8.0 ],
			"SV_084" : [ 0.0, 0.0, 0.0, 8.0, 5.0, 4.0, 5.0, 5.0, 8.0, 8.0 ],
			"SV_085" : [ 1.0, 1.0, 4.0, 8.0, 9.0, 7.0, 0.0, 1.0, 3.0, 2.0 ],
			"SV_086" : [ 0.0, 7.0, 7.0, 4.0, 1.0, 1.0, 0.0, 6.0, 1.0, 4.0 ],
			"SV_087" : [ 4.0, 2.0, 0.0, 3.0, 3.0, 1.0, 0.0, 8.0, 9.0, 9.0 ],
			"SV_088" : [ 0.0, 5.0, 6.0, 4.0, 8.0, 0.0, 0.0, 4.0, 1.0, 6.0 ],
			"SV_089" : [ 1.0, 5.0, 0.0, 8.0, 6.0, 6.0, 1.0, 6.0, 6.0, 8.0 ],
			"SV_090" : [ 9.0, 2.0, 9.0, 1.0, 5.0, 0.0, 7.0, 1.0, 9.0, 1.0 ],
			"SV_091" : [ 1.0, 5.0, 3.0, 4.0, 4.0, 2.0, 1.0, 4.0, 0.0, 2.0 ],
			"SV_092" : [ 5.0, 9.0, 7.0, 7.0, 5.0, 4.0, 7.0, 4.0, 8.0, 9.0 ],
			"SV_093" : [ 0.0, 3.0, 7.0, 6.0, 0.0, 6.0, 0.0, 7.0, 1.0, 1.0 ],
			"SV_094" : [ 4.0, 2.0, 9.0, 8.0, 1.0, 9.0, 9.0, 8.0, 3.0, 1.0 ],
			"SV_095" : [ 8.0, 6.0, 8.0, 7.0, 1.0, 5.0, 9.0, 9.0, 0.0, 6.0 ],
			"SV_096" : [ 1.0, 6.0, 5.0, 1.0, 2.0, 1.0, 1.0, 1.0, 4.0, 1.0 ],
			"SV_097" : [ 9.0, 6.0, 3.0, 3.0, 9.0, 6.0, 6.0, 4.0, 7.0, 6.0 ],
			"SV_098" : [ 0.0, 2.0, 3.0, 5.0, 9.0, 1.0, 0.0, 1.0, 8.0, 1.0 ],
			"SV_099" : [ 4.0, 7.0, 9.0, 0.0, 3.0, 1.0, 7.0, 8.0, 3.0, 4.0 ],
			"SV_100" : [ 7.0, 2.0, 8.0, 8.0, 6.0, 1.0, 9.0, 8.0, 8.0, 9.0 ],
			"SV_101" : [ 8.0, 6.0, 8.0, 2.0, 8.0, 9.0, 5.0, 7.0, 4.0, 3.0 ],
			"SV_102" : [ 0.0, 1.0, 4.0, 6.0, 3.0, 3.0, 3.0, 5.0, 3.0, 4.0 ],
			"SV_103" : [ 7.0, 8.0, 6.0, 2.0, 8.0, 6.0, 8.0, 1.0, 9.0, 2.0 ]
		},
		"SupportVectorsCoefs" : 	{
			"SV_coef_0" : [ -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -0.199505, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 0.199505, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0 ]
		},
		"classes" : 2,
		"nSV" : [ 104 ],
		"n_iter" : [ 128 ],
		"probA" : [  ],
		"probB" : [  ],
		"rho" : [ -9.099823 ]
	}
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
[16.863344 17.14977  10.967656 ... 12.26229  11.434387  5.850938]
('OPERATION_END_ELAPSED', 0.011, 'PREDICT')
('OPERATION_START', 'PREDICT')
[16.863258  17.149658  10.967613  ... 12.262218  11.434357   5.8509846]
('OPERATION_END_ELAPSED', 0.011, 'PREDICT')
MODEL_PERFS {'class_name': 'mllite.NuSVR', 'model_name': 'NuSVR', 'options': '{"nu" : 0.1}', 'dataset': 'RandomReg_10_quantized', 'size': 1024, 'mse': 23256.898, 'mae': 121.7162, 'mape': 1.1708184, 'r2': 0.06151121567053319}
WRITING_PERF_CODE 'logs/auto_tests/regression/NuSVR/mllite.NuSVR_RandomReg_10_quantized_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.NuSVR', 'model_name': 'NuSVR', 'options': '{"nu" : 0.1}', 'dataset': 'RandomReg_10_quantized', 'training_time_in_sec': 0.274, 'prediction_time_in_sec': 0.011}
WRITING_SQL_CODE 'logs/auto_tests/regression/NuSVR/mllite.NuSVR_RandomReg_10_quantized_option_1_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('RandomReg_10_quantized', 'NuSVR', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 )
,"SV_data" AS
 ( SELECT 
   "Values"."sv_idx" AS "sv_idx",
   "Values"."coeff" AS "coeff",
   "Values"."sv_0" AS "sv_0",
   "Values"."sv_1" AS "sv_1",
   "Values"."sv_2" AS "sv_2",
   "Values"."sv_3" AS "sv_3",
   "Values"."sv_4" AS "sv_4",
   "Values"."sv_5" AS "sv_5",
   "Values"."sv_6" AS "sv_6",
   "Values"."sv_7" AS "sv_7",
   "Values"."sv_8" AS "sv_8",
   "Values"."sv_9" AS "sv_9"
  FROM
  (
     SELECT 0 AS "sv_idx", -1.000000 AS "coeff", 3.000000 AS "sv_0", 8.000000 AS "sv_1", 0.000000 AS "sv_2", 8.000000 AS "sv_3", 1.000000 AS "sv_4", 2.00
SQL_OUT_PUT_FIRST_LINES_END ('RandomReg_10_quantized', 'NuSVR', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('RandomReg_10_quantized', 'NuSVR', 'duckdb')
M
    (SELECT
      full_join_data_sv."index" AS "index",
      sum(CAST(full_join_data_sv.dot_prod AS FLOAT)) - -9.099823 AS dot_product
     FROM
       (SELECT
          model_input."index" AS "index",
          "SV_data"."coeff" *  EXP( LEAST( GREATEST( CAST(-32.0 AS FLOAT), -0.012721 * (power(model_input."X_0" - "SV_data".sv_0, 2) + power(model_input."X_1" - "SV_data".sv_1, 2) + power(model_input."X_2" - "SV_data".sv_2, 2) + power(model_input."X_3" - "SV_data".sv_3, 2) + power(model_input."X_4" - "SV_data".sv_4, 2) + power(model_input."X_5" - "SV_data".sv_5, 2) + power(model_input."X_6" - "SV_data".sv_6, 2) + power(model_input."X_7" - "SV_data".sv_7, 2) + power(model_input."X_8" - "SV_data".sv_8, 2) + power(model_input."X_9" - "SV_data".sv_9, 2)) ), CAST(32.0 AS FLOAT) ) )  AS "dot_prod" 
        FROM
          model_input, "SV_data"
       ) AS full_join_data_sv
     GROUP BY full_join_data_sv."index"
    ) AS dp )
SELECT
  t."index" as "index",
  t."Estimator" as "Estimator"
FROM "Kernel_DotProd" AS t

SQL_OUT_PUT_LAST_LINES_END ('RandomReg_10_quantized', 'NuSVR', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 1024 entries, 0 to 1023
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     1024 non-null   float32
 1   X_1     1024 non-null   float32
 2   X_2     1024 non-null   float32
 3   X_3     1024 non-null   float32
 4   X_4     1024 non-null   float32
 5   X_5     1024 non-null   float32
 6   X_6     1024 non-null   float32
 7   X_7     1024 non-null   float32
 8   X_8     1024 non-null   float32
 9   X_9     1024 non-null   float32
dtypes: float32(10)
memory usage: 48.0 KB
       X_0  X_1  X_2  X_3  X_4  X_5  X_6  X_7  X_8  X_9
index                                                  
0      3.0  5.0  9.0  6.0  5.0  5.0  5.0  6.0  8.0  4.0
1      8.0  2.0  5.0  8.0  3.0  8.0  5.0  6.0  8.0  4.0
2      5.0  9.0  5.0  9.0  4.0  2.0  3.0  6.0  5.0  1.0
3      1.0  8.0  8.0  3.0  7.0  0.0  2.0  5.0  9.0  8.0
4      3.0  8.0  0.0  8.0  1.0  2.0  1.0  1.0  5.0  6.0
...    ...  ...  ...  ...  ...  ...  ...  ...  ...  ...
1019   6.0  3.0  1.0  1.0  9.0  8.0  7.0  2.0  8.0  2.0
1020   8.0  4.0  3.0  6.0  4.0  0.0  7.0  3.0  3.0  8.0
1021   1.0  4.0  9.0  9.0  1.0  9.0  7.0  8.0  5.0  2.0
1022   4.0  5.0  8.0  1.0  8.0  5.0  3.0  7.0  3.0  8.0
1023   2.0  6.0  4.0  1.0  1.0  4.0  7.0  2.0  4.0  6.0

[1024 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 1024 entries, 0 to 1023
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      1024 non-null   int64  
 1   Estimator  1024 non-null   float64
dtypes: float64(1), int64(1)
memory usage: 16.1 KB
      index  Estimator
0         0  16.863258
1         1  17.149656
2         2  10.967613
3         3   9.323169
4         4   1.205526
...     ...        ...
1019   1019   9.552653
1020   1020  13.210368
1021   1021  12.262219
1022   1022  11.434357
1023   1023   5.850985

[1024 rows x 2 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('RandomReg_10_quantized', 'NuSVR') Estimator 7.770676709936697e-05
      index  SQL_Estimator  Py_Estimator  SQL_Error
1008   1008       4.594832      4.594782   0.000051
1009   1009      -5.397725     -5.397879   0.000153
1010   1010      10.375383     10.375396  -0.000012
1011   1011      10.544925     10.544957  -0.000032
1012   1012      11.984242     11.984327  -0.000085
1013   1013       7.013847      7.013819   0.000028
1014   1014      12.415506     12.415569  -0.000063
1015   1015      13.118074     13.118131  -0.000056
1016   1016       4.740681      4.740607   0.000074
1017   1017       6.273954      6.273885   0.000069
1018   1018      17.776461     17.776623  -0.000161
1019   1019       9.552653      9.552670  -0.000017
1020   1020      13.210368     13.210428  -0.000061
1021   1021      12.262219     12.262290  -0.000071
1022   1022      11.434357     11.434387  -0.000030
1023   1023       5.850985      5.850938   0.000047
MLLITE_REG_SQL_EXECUTION_STATUS ('RandomReg_10_quantized', 'NuSVR', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/regression/NuSVR/mllite.NuSVR_RandomReg_10_quantized_option_1_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('RandomReg_10_quantized', 'NuSVR', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 )
,"SV_data" AS
 ( SELECT 
   "Values"."sv_idx" AS "sv_idx",
   "Values"."coeff" AS "coeff",
   "Values"."sv_0" AS "sv_0",
   "Values"."sv_1" AS "sv_1",
   "Values"."sv_2" AS "sv_2",
   "Values"."sv_3" AS "sv_3",
   "Values"."sv_4" AS "sv_4",
   "Values"."sv_5" AS "sv_5",
   "Values"."sv_6" AS "sv_6",
   "Values"."sv_7" AS "sv_7",
   "Values"."sv_8" AS "sv_8",
   "Values"."sv_9" AS "sv_9"
  FROM
  (
     SELECT 0 AS "sv_idx", -1.000000 AS "coeff", 3.000000 AS "sv_0", 8.000000 AS "sv_1", 0.000000 AS "sv_2", 8.000000 AS "sv_3", 1.000000 AS "sv_4", 2.00
SQL_OUT_PUT_FIRST_LINES_END ('RandomReg_10_quantized', 'NuSVR', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('RandomReg_10_quantized', 'NuSVR', 'sqlite')

   FROM
    (SELECT
      full_join_data_sv."index" AS "index",
      sum(CAST(full_join_data_sv.dot_prod AS FLOAT)) - -9.099823 AS dot_product
     FROM
       (SELECT
          model_input."index" AS "index",
          "SV_data"."coeff" *  EXP( MIN( MAX( CAST(-32.0 AS FLOAT), -0.012721 * (power(model_input."X_0" - "SV_data".sv_0, 2) + power(model_input."X_1" - "SV_data".sv_1, 2) + power(model_input."X_2" - "SV_data".sv_2, 2) + power(model_input."X_3" - "SV_data".sv_3, 2) + power(model_input."X_4" - "SV_data".sv_4, 2) + power(model_input."X_5" - "SV_data".sv_5, 2) + power(model_input."X_6" - "SV_data".sv_6, 2) + power(model_input."X_7" - "SV_data".sv_7, 2) + power(model_input."X_8" - "SV_data".sv_8, 2) + power(model_input."X_9" - "SV_data".sv_9, 2)) ), CAST(32.0 AS FLOAT) ) )  AS "dot_prod" 
        FROM
          model_input, "SV_data"
       ) AS full_join_data_sv
     GROUP BY full_join_data_sv."index"
    ) AS dp )
SELECT
  t."index" as "index",
  t."Estimator" as "Estimator"
FROM "Kernel_DotProd" AS t

SQL_OUT_PUT_LAST_LINES_END ('RandomReg_10_quantized', 'NuSVR', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 1024 entries, 0 to 1023
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     1024 non-null   float32
 1   X_1     1024 non-null   float32
 2   X_2     1024 non-null   float32
 3   X_3     1024 non-null   float32
 4   X_4     1024 non-null   float32
 5   X_5     1024 non-null   float32
 6   X_6     1024 non-null   float32
 7   X_7     1024 non-null   float32
 8   X_8     1024 non-null   float32
 9   X_9     1024 non-null   float32
dtypes: float32(10)
memory usage: 48.0 KB
       X_0  X_1  X_2  X_3  X_4  X_5  X_6  X_7  X_8  X_9
index                                                  
0      3.0  5.0  9.0  6.0  5.0  5.0  5.0  6.0  8.0  4.0
1      8.0  2.0  5.0  8.0  3.0  8.0  5.0  6.0  8.0  4.0
2      5.0  9.0  5.0  9.0  4.0  2.0  3.0  6.0  5.0  1.0
3      1.0  8.0  8.0  3.0  7.0  0.0  2.0  5.0  9.0  8.0
4      3.0  8.0  0.0  8.0  1.0  2.0  1.0  1.0  5.0  6.0
...    ...  ...  ...  ...  ...  ...  ...  ...  ...  ...
1019   6.0  3.0  1.0  1.0  9.0  8.0  7.0  2.0  8.0  2.0
1020   8.0  4.0  3.0  6.0  4.0  0.0  7.0  3.0  3.0  8.0
1021   1.0  4.0  9.0  9.0  1.0  9.0  7.0  8.0  5.0  2.0
1022   4.0  5.0  8.0  1.0  8.0  5.0  3.0  7.0  3.0  8.0
1023   2.0  6.0  4.0  1.0  1.0  4.0  7.0  2.0  4.0  6.0

[1024 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 1024 entries, 0 to 1023
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      1024 non-null   int64  
 1   Estimator  1024 non-null   float64
dtypes: float64(1), int64(1)
memory usage: 16.1 KB
      index  Estimator
0         0  16.863258
1         1  17.149656
2         2  10.967613
3         3   9.323169
4         4   1.205526
...     ...        ...
1019   1019   9.552653
1020   1020  13.210368
1021   1021  12.262219
1022   1022  11.434357
1023   1023   5.850985

[1024 rows x 2 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('RandomReg_10_quantized', 'NuSVR') Estimator 7.770002905631637e-05
      index  SQL_Estimator  Py_Estimator  SQL_Error
1008   1008       4.594832      4.594782   0.000051
1009   1009      -5.397725     -5.397879   0.000153
1010   1010      10.375383     10.375396  -0.000012
1011   1011      10.544925     10.544957  -0.000032
1012   1012      11.984242     11.984327  -0.000085
1013   1013       7.013847      7.013819   0.000028
1014   1014      12.415506     12.415569  -0.000063
1015   1015      13.118074     13.118131  -0.000056
1016   1016       4.740681      4.740607   0.000074
1017   1017       6.273954      6.273885   0.000069
1018   1018      17.776461     17.776623  -0.000161
1019   1019       9.552653      9.552670  -0.000017
1020   1020      13.210368     13.210428  -0.000060
1021   1021      12.262219     12.262290  -0.000071
1022   1022      11.434357     11.434387  -0.000030
1023   1023       5.850985      5.850938   0.000047
MLLITE_REG_SQL_EXECUTION_STATUS ('RandomReg_10_quantized', 'NuSVR', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/regression/NuSVR/mllite.NuSVR_RandomReg_10_quantized_option_1_pgsql.sql'



SQL_OUT_PUT_FIRST_LINES_START ('RandomReg_10_quantized', 'NuSVR', 'pgsql')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 )
,"SV_data" AS
 ( SELECT 
   "Values"."sv_idx" AS "sv_idx",
   "Values"."coeff" AS "coeff",
   "Values"."sv_0" AS "sv_0",
   "Values"."sv_1" AS "sv_1",
   "Values"."sv_2" AS "sv_2",
   "Values"."sv_3" AS "sv_3",
   "Values"."sv_4" AS "sv_4",
   "Values"."sv_5" AS "sv_5",
   "Values"."sv_6" AS "sv_6",
   "Values"."sv_7" AS "sv_7",
   "Values"."sv_8" AS "sv_8",
   "Values"."sv_9" AS "sv_9"
  FROM
  (
     SELECT 0 AS "sv_idx", -1.000000 AS "coeff", 3.000000 AS "sv_0", 8.000000 AS "sv_1", 0.000000 AS "sv_2", 8.000000 AS "sv_3", 1.000000 AS "sv_4", 2.00
SQL_OUT_PUT_FIRST_LINES_END ('RandomReg_10_quantized', 'NuSVR', 'pgsql')
SQL_OUT_PUT_LAST_LINES_START ('RandomReg_10_quantized', 'NuSVR', 'pgsql')
M
    (SELECT
      full_join_data_sv."index" AS "index",
      sum(CAST(full_join_data_sv.dot_prod AS FLOAT)) - -9.099823 AS dot_product
     FROM
       (SELECT
          model_input."index" AS "index",
          "SV_data"."coeff" *  EXP( LEAST( GREATEST( CAST(-32.0 AS FLOAT), -0.012721 * (power(model_input."X_0" - "SV_data".sv_0, 2) + power(model_input."X_1" - "SV_data".sv_1, 2) + power(model_input."X_2" - "SV_data".sv_2, 2) + power(model_input."X_3" - "SV_data".sv_3, 2) + power(model_input."X_4" - "SV_data".sv_4, 2) + power(model_input."X_5" - "SV_data".sv_5, 2) + power(model_input."X_6" - "SV_data".sv_6, 2) + power(model_input."X_7" - "SV_data".sv_7, 2) + power(model_input."X_8" - "SV_data".sv_8, 2) + power(model_input."X_9" - "SV_data".sv_9, 2)) ), CAST(32.0 AS FLOAT) ) )  AS "dot_prod" 
        FROM
          model_input, "SV_data"
       ) AS full_join_data_sv
     GROUP BY full_join_data_sv."index"
    ) AS dp )
SELECT
  t."index" as "index",
  t."Estimator" as "Estimator"
FROM "Kernel_DotProd" AS t

SQL_OUT_PUT_LAST_LINES_END ('RandomReg_10_quantized', 'NuSVR', 'pgsql') 




COPY_TRAINING_DATA_TO_SQLITE_START
