      X_0  X_1  X_2  X_3  X_4  X_5  X_6  X_7  X_8  X_9      target
0       3    5    9    6    5    5    5    6    8    4  205.867746
1       8    2    5    8    3    8    5    6    8    4  159.579234
2       5    9    5    9    4    2    3    6    5    1   52.888003
3       1    8    8    3    7    0    2    5    9    8   -2.429778
4       3    8    0    8    1    2    1    1    5    6 -259.773644
...   ...  ...  ...  ...  ...  ...  ...  ...  ...  ...         ...
1019    6    3    1    1    9    8    7    2    8    2   27.323824
1020    8    4    3    6    4    0    7    3    3    8   48.978196
1021    1    4    9    9    1    9    7    8    5    2  216.354737
1022    4    5    8    1    8    5    3    7    3    8  102.545750
1023    2    6    4    1    1    4    7    2    4    6  -30.061527

[1024 rows x 11 columns]
MLLITE_MODEL_SET_OPTIONS RidgeRegressor None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeRegressor { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeRegressor { ,   , }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeRegressor None
('OPERATION_START', 'TRAINING')
[[3. 5. 9. 6. 5. 5. 5. 6. 8. 4.]
 [8. 2. 5. 8. 3. 8. 5. 6. 8. 4.]
 [5. 9. 5. 9. 4. 2. 3. 6. 5. 1.]
 [1. 8. 8. 3. 7. 0. 2. 5. 9. 8.]
 [3. 8. 0. 8. 1. 2. 1. 1. 5. 6.]] [ 205.86775    159.57924     52.888004    -2.4297783 -259.77365  ]
MLLITE_FIT_USING_MODEL mllite_ridge_reg.RidgeRegressor_ff4_ff4
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_REGRESSOR_FIT' 1 2
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_REGRESSOR_FIT' 2 2
('OPERATION_END_ELAPSED', 0.011, 'TRAINING')
{ ,   , }
{ ,   , }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W13", "signature" : "ff4_ff4"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 1024, "dataset_features" : 10 },
	"equations" : {
			"intercept" : -629.546265,
			"coeffs" : [ 30.402140, 16.246965, 25.457283, 2.199723, 1.837180, 9.243998, 27.938166, 12.397970, 9.286277, 5.514602 ]
		}
}
WRITING_JSON_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_RandomReg_10_quantized.json'

MLLITE_MODEL_SET_OPTIONS RidgeRegressor None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeRegressor { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeRegressor { ,   , }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeRegressor None
MLLITE_RELOADING_MODEL mllite_ridge_reg.RidgeRegressor_ff4_ff4
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W13", "signature" : "ff4_ff4"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 1024, "dataset_features" : 10 },
	"equations" : {
			"intercept" : -629.546265,
			"coeffs" : [ 30.402140, 16.246965, 25.457283, 2.199723, 1.837180, 9.243998, 27.938166, 12.397970, 9.286277, 5.514602 ]
		}
}
BEAUTIFIED_JSON_START
{
	"dataset" : 	{
		"dataset_features" : 10,
		"dataset_rows" : 1024
	},
	"equations" : 	{
		"coeffs" : [ 30.40214, 16.246965, 25.457283, 2.199723, 1.83718, 9.243998, 27.938166, 12.39797, 9.286277, 5.514602 ],
		"intercept" : -629.546265
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_ff4", "version" : "2024-W13" },
	"options" :  { "alpha" : 1.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
[151.04202  180.93973   51.75603  ... 152.00148   82.64847  -37.822334]
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
('OPERATION_START', 'PREDICT')
[151.04202 180.93973  51.75603 ... 152.00148  82.64846 -37.82233]
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
MODEL_PERFS {'class_name': 'mllite.RidgeRegressor', 'model_name': 'RidgeRegressor', 'options': None, 'dataset': 'RandomReg_10_quantized', 'size': 1024, 'mse': 1576.2803, 'mae': 29.722698, 'mape': 0.9199023, 'r2': 0.9363921520690069}
WRITING_PERF_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_RandomReg_10_quantized.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeRegressor', 'model_name': 'RidgeRegressor', 'options': None, 'dataset': 'RandomReg_10_quantized', 'training_time_in_sec': 0.011, 'prediction_time_in_sec': 0.001}
WRITING_SQL_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_RandomReg_10_quantized_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('RandomReg_10_quantized', 'RidgeRegressor', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   -629.546265 + 30.402140 * t."X_0" + 16.246965 * t."X_1" + 25.457283 * t."X_2" + 2.199723 * t."X_3" + 1.837180 * t."X_4" + 9.243998 * t."X_5" + 27.938166 * t."X_6" + 12.397970 * t."X_7" + 9.286277 * t."X_8" + 5.514602 * t."X_9" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_FIRST_LINES_END ('RandomReg_10_quantized', 'RidgeRegressor', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('RandomReg_10_quantized', 'RidgeRegressor', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   -629.546265 + 30.402140 * t."X_0" + 16.246965 * t."X_1" + 25.457283 * t."X_2" + 2.199723 * t."X_3" + 1.837180 * t."X_4" + 9.243998 * t."X_5" + 27.938166 * t."X_6" + 12.397970 * t."X_7" + 9.286277 * t."X_8" + 5.514602 * t."X_9" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_LAST_LINES_END ('RandomReg_10_quantized', 'RidgeRegressor', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 1024 entries, 0 to 1023
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     1024 non-null   float32
 1   X_1     1024 non-null   float32
 2   X_2     1024 non-null   float32
 3   X_3     1024 non-null   float32
 4   X_4     1024 non-null   float32
 5   X_5     1024 non-null   float32
 6   X_6     1024 non-null   float32
 7   X_7     1024 non-null   float32
 8   X_8     1024 non-null   float32
 9   X_9     1024 non-null   float32
dtypes: float32(10)
memory usage: 48.0 KB
       X_0  X_1  X_2  X_3  X_4  X_5  X_6  X_7  X_8  X_9
index                                                  
0      3.0  5.0  9.0  6.0  5.0  5.0  5.0  6.0  8.0  4.0
1      8.0  2.0  5.0  8.0  3.0  8.0  5.0  6.0  8.0  4.0
2      5.0  9.0  5.0  9.0  4.0  2.0  3.0  6.0  5.0  1.0
3      1.0  8.0  8.0  3.0  7.0  0.0  2.0  5.0  9.0  8.0
4      3.0  8.0  0.0  8.0  1.0  2.0  1.0  1.0  5.0  6.0
...    ...  ...  ...  ...  ...  ...  ...  ...  ...  ...
1019   6.0  3.0  1.0  1.0  9.0  8.0  7.0  2.0  8.0  2.0
1020   8.0  4.0  3.0  6.0  4.0  0.0  7.0  3.0  3.0  8.0
1021   1.0  4.0  9.0  9.0  1.0  9.0  7.0  8.0  5.0  2.0
1022   4.0  5.0  8.0  1.0  8.0  5.0  3.0  7.0  3.0  8.0
1023   2.0  6.0  4.0  1.0  1.0  4.0  7.0  2.0  4.0  6.0

[1024 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 1024 entries, 0 to 1023
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      1024 non-null   int64  
 1   Estimator  1024 non-null   float64
dtypes: float64(1), int64(1)
memory usage: 16.1 KB
      index   Estimator
0         0  151.042053
1         1  180.939758
2         2   51.756046
3         3   -0.491199
4         4 -250.585999
...     ...         ...
1019   1019   25.433613
1020   1020   80.314316
1021   1021  152.001511
1022   1022   82.648476
1023   1023  -37.822330

[1024 rows x 2 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('RandomReg_10_quantized', 'RidgeRegressor') Estimator 1.2364238500595093e-05
      index  SQL_Estimator  Py_Estimator  SQL_Error
1008   1008     -70.742416    -70.742424   0.000008
1009   1009    -269.306702   -269.306702   0.000000
1010   1010      27.304647     27.304646   0.000002
1011   1011      37.294350     37.294346   0.000004
1012   1012     168.297974    168.297974   0.000000
1013   1013     -54.458218    -54.458221   0.000004
1014   1014      83.915421     83.915382   0.000038
1015   1015      63.389297     63.389297   0.000000
1016   1016     -86.868744    -86.868744   0.000000
1017   1017     -65.335815    -65.335815   0.000000
1018   1018     271.058014    271.058014   0.000000
1019   1019      25.433613     25.433611   0.000002
1020   1020      80.314316     80.314316   0.000000
1021   1021     152.001511    152.001480   0.000031
1022   1022      82.648476     82.648468   0.000008
1023   1023     -37.822330    -37.822334   0.000004
MLLITE_REG_SQL_EXECUTION_STATUS ('RandomReg_10_quantized', 'RidgeRegressor', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_RandomReg_10_quantized_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('RandomReg_10_quantized', 'RidgeRegressor', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   -629.546265 + 30.402140 * t."X_0" + 16.246965 * t."X_1" + 25.457283 * t."X_2" + 2.199723 * t."X_3" + 1.837180 * t."X_4" + 9.243998 * t."X_5" + 27.938166 * t."X_6" + 12.397970 * t."X_7" + 9.286277 * t."X_8" + 5.514602 * t."X_9" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_FIRST_LINES_END ('RandomReg_10_quantized', 'RidgeRegressor', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('RandomReg_10_quantized', 'RidgeRegressor', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   -629.546265 + 30.402140 * t."X_0" + 16.246965 * t."X_1" + 25.457283 * t."X_2" + 2.199723 * t."X_3" + 1.837180 * t."X_4" + 9.243998 * t."X_5" + 27.938166 * t."X_6" + 12.397970 * t."X_7" + 9.286277 * t."X_8" + 5.514602 * t."X_9" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_LAST_LINES_END ('RandomReg_10_quantized', 'RidgeRegressor', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 1024 entries, 0 to 1023
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     1024 non-null   float32
 1   X_1     1024 non-null   float32
 2   X_2     1024 non-null   float32
 3   X_3     1024 non-null   float32
 4   X_4     1024 non-null   float32
 5   X_5     1024 non-null   float32
 6   X_6     1024 non-null   float32
 7   X_7     1024 non-null   float32
 8   X_8     1024 non-null   float32
 9   X_9     1024 non-null   float32
dtypes: float32(10)
memory usage: 48.0 KB
       X_0  X_1  X_2  X_3  X_4  X_5  X_6  X_7  X_8  X_9
index                                                  
0      3.0  5.0  9.0  6.0  5.0  5.0  5.0  6.0  8.0  4.0
1      8.0  2.0  5.0  8.0  3.0  8.0  5.0  6.0  8.0  4.0
2      5.0  9.0  5.0  9.0  4.0  2.0  3.0  6.0  5.0  1.0
3      1.0  8.0  8.0  3.0  7.0  0.0  2.0  5.0  9.0  8.0
4      3.0  8.0  0.0  8.0  1.0  2.0  1.0  1.0  5.0  6.0
...    ...  ...  ...  ...  ...  ...  ...  ...  ...  ...
1019   6.0  3.0  1.0  1.0  9.0  8.0  7.0  2.0  8.0  2.0
1020   8.0  4.0  3.0  6.0  4.0  0.0  7.0  3.0  3.0  8.0
1021   1.0  4.0  9.0  9.0  1.0  9.0  7.0  8.0  5.0  2.0
1022   4.0  5.0  8.0  1.0  8.0  5.0  3.0  7.0  3.0  8.0
1023   2.0  6.0  4.0  1.0  1.0  4.0  7.0  2.0  4.0  6.0

[1024 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 1024 entries, 0 to 1023
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      1024 non-null   int64  
 1   Estimator  1024 non-null   float64
dtypes: float64(1), int64(1)
memory usage: 16.1 KB
      index   Estimator
0         0  151.042029
1         1  180.939782
2         2   51.756063
3         3   -0.491221
4         4 -250.586032
...     ...         ...
1019   1019   25.433602
1020   1020   80.314341
1021   1021  152.001462
1022   1022   82.648472
1023   1023  -37.822346

[1024 rows x 2 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('RandomReg_10_quantized', 'RidgeRegressor') Estimator 1.991695064694661e-05
      index  SQL_Estimator  Py_Estimator  SQL_Error
1008   1008     -70.742458    -70.742424  -0.000034
1009   1009    -269.306709   -269.306702  -0.000007
1010   1010      27.304612     27.304646  -0.000034
1011   1011      37.294385     37.294346   0.000039
1012   1012     168.298021    168.297974   0.000047
1013   1013     -54.458198    -54.458221   0.000023
1014   1014      83.915425     83.915382   0.000043
1015   1015      63.389307     63.389297   0.000010
1016   1016     -86.868776    -86.868744  -0.000032
1017   1017     -65.335783    -65.335815   0.000032
1018   1018     271.058002    271.058014  -0.000012
1019   1019      25.433602     25.433611  -0.000009
1020   1020      80.314341     80.314316   0.000025
1021   1021     152.001462    152.001480  -0.000018
1022   1022      82.648472     82.648468   0.000004
1023   1023     -37.822346    -37.822334  -0.000012
MLLITE_REG_SQL_EXECUTION_STATUS ('RandomReg_10_quantized', 'RidgeRegressor', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_RandomReg_10_quantized_pgsql.sql'



SQL_OUT_PUT_FIRST_LINES_START ('RandomReg_10_quantized', 'RidgeRegressor', 'pgsql')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   -629.546265 + 30.402140 * t."X_0" + 16.246965 * t."X_1" + 25.457283 * t."X_2" + 2.199723 * t."X_3" + 1.837180 * t."X_4" + 9.243998 * t."X_5" + 27.938166 * t."X_6" + 12.397970 * t."X_7" + 9.286277 * t."X_8" + 5.514602 * t."X_9" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_FIRST_LINES_END ('RandomReg_10_quantized', 'RidgeRegressor', 'pgsql')
SQL_OUT_PUT_LAST_LINES_START ('RandomReg_10_quantized', 'RidgeRegressor', 'pgsql')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   -629.546265 + 30.402140 * t."X_0" + 16.246965 * t."X_1" + 25.457283 * t."X_2" + 2.199723 * t."X_3" + 1.837180 * t."X_4" + 9.243998 * t."X_5" + 27.938166 * t."X_6" + 12.397970 * t."X_7" + 9.286277 * t."X_8" + 5.514602 * t."X_9" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_LAST_LINES_END ('RandomReg_10_quantized', 'RidgeRegressor', 'pgsql') 




COPY_TRAINING_DATA_TO_SQLITE_START
