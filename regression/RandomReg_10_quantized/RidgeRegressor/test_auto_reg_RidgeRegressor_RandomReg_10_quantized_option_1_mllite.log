      X_0  X_1  X_2  X_3  X_4  X_5  X_6  X_7  X_8  X_9      target
0       3    5    9    6    5    5    5    6    8    4  205.867746
1       8    2    5    8    3    8    5    6    8    4  159.579234
2       5    9    5    9    4    2    3    6    5    1   52.888003
3       1    8    8    3    7    0    2    5    9    8   -2.429778
4       3    8    0    8    1    2    1    1    5    6 -259.773644
...   ...  ...  ...  ...  ...  ...  ...  ...  ...  ...         ...
1019    6    3    1    1    9    8    7    2    8    2   27.323824
1020    8    4    3    6    4    0    7    3    3    8   48.978196
1021    1    4    9    9    1    9    7    8    5    2  216.354737
1022    4    5    8    1    8    5    3    7    3    8  102.545750
1023    2    6    4    1    1    4    7    2    4    6  -30.061527

[1024 rows x 11 columns]
MLLITE_MODEL_SET_OPTIONS RidgeRegressor {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeRegressor { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeRegressor { "alpha" : 0.0000001,   , }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeRegressor None
('OPERATION_START', 'TRAINING')
[[3. 5. 9. 6. 5. 5. 5. 6. 8. 4.]
 [8. 2. 5. 8. 3. 8. 5. 6. 8. 4.]
 [5. 9. 5. 9. 4. 2. 3. 6. 5. 1.]
 [1. 8. 8. 3. 7. 0. 2. 5. 9. 8.]
 [3. 8. 0. 8. 1. 2. 1. 1. 5. 6.]] [ 205.86775    159.57924     52.888004    -2.4297783 -259.77365  ]
MLLITE_FIT_USING_MODEL mllite_ridge_reg.RidgeRegressor_ff4_ff4
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_REGRESSOR_FIT' 1 2
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_REGRESSOR_FIT' 2 2
('OPERATION_END_ELAPSED', 0.011, 'TRAINING')
{ "alpha" : 0.0000001,   , }
{ "alpha" : 0.0000001,   , }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_ff4"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 1024, "dataset_features" : 10 },
	"equations" : {
			"intercept" : -630.176208,
			"coeffs" : [ 30.431307, 16.261839, 25.484423, 2.200887, 1.838324, 9.254494, 27.966387, 12.409963, 9.294753, 5.521595 ]
		}
}
WRITING_JSON_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_RandomReg_10_quantized_option_1.json'

MLLITE_MODEL_SET_OPTIONS RidgeRegressor {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeRegressor { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeRegressor { "alpha" : 0.0000001,   , }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeRegressor None
MLLITE_RELOADING_MODEL mllite_ridge_reg.RidgeRegressor_ff4_ff4
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_ff4"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 1024, "dataset_features" : 10 },
	"equations" : {
			"intercept" : -630.176208,
			"coeffs" : [ 30.431307, 16.261839, 25.484423, 2.200887, 1.838324, 9.254494, 27.966387, 12.409963, 9.294753, 5.521595 ]
		}
}
BEAUTIFIED_JSON_START
{
	"dataset" : 	{
		"dataset_features" : 10,
		"dataset_rows" : 1024
	},
	"equations" : 	{
		"coeffs" : [ 30.431307, 16.261839, 25.484423, 2.200887, 1.838324, 9.254494, 27.966387, 12.409963, 9.294753, 5.521595 ],
		"intercept" : -630.176208
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_ff4", "version" : "2024-W14" },
	"options" :  { "alpha" : 0.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
[151.19228  181.11415   51.783607 ... 152.1604    82.73946  -37.854465]
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
('OPERATION_START', 'PREDICT')
[151.19228  181.11418   51.783607 ... 152.1604    82.739456 -37.85447 ]
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
MODEL_PERFS {'class_name': 'mllite.RidgeRegressor', 'model_name': 'RidgeRegressor', 'options': '{"alpha" : 0.0000001}', 'dataset': 'RandomReg_10_quantized', 'size': 1024, 'mse': 1576.2571, 'mae': 29.737762, 'mape': 0.9208983, 'r2': 0.9363930888686549}
WRITING_PERF_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_RandomReg_10_quantized_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeRegressor', 'model_name': 'RidgeRegressor', 'options': '{"alpha" : 0.0000001}', 'dataset': 'RandomReg_10_quantized', 'training_time_in_sec': 0.01, 'prediction_time_in_sec': 0.001}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 0 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 1 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 2 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 3 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 4 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 5 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 6 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 7 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 8 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 9 10
{
   "Contributions" : {
      "X_0" : [ 5.676144 ],
      "X_1" : [ 20.454365 ],
      "X_2" : [ 4.479685 ],
      "X_3" : [ -1.038112 ],
      "X_4" : [ 0.985587 ],
      "X_5" : [ -1.961153 ],
      "X_6" : [ -4.014703 ],
      "X_7" : [ 2.957065 ],
      "X_8" : [ -4.130001 ],
      "X_9" : [ 1.321084 ]   
   },
   "Most_Contributive_Features" : {
      "y" : [ 1, 0, 2, 8, 6, 7, 5, 9, 3, 4 ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_RandomReg_10_quantized_option_1_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_RandomReg_10_quantized_option_1_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('RandomReg_10_quantized', 'RidgeRegressor', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "RandomReg_10_quantized" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   -630.176208 + 30.431307 * t."X_0" + 16.261839 * t."X_1" + 25.484423 * t."X_2" + 2.200887 * t."X_3" + 1.838324 * t."X_4" + 9.254494 * t."X_5" + 27.966387 * t."X_6" + 12.409963 * t."X_7" + 9.294753 * t."X_8" + 5.521595 * t."X_9" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_FIRST_LINES_END ('RandomReg_10_quantized', 'RidgeRegressor', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('RandomReg_10_quantized', 'RidgeRegressor', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "RandomReg_10_quantized" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   -630.176208 + 30.431307 * t."X_0" + 16.261839 * t."X_1" + 25.484423 * t."X_2" + 2.200887 * t."X_3" + 1.838324 * t."X_4" + 9.254494 * t."X_5" + 27.966387 * t."X_6" + 12.409963 * t."X_7" + 9.294753 * t."X_8" + 5.521595 * t."X_9" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_LAST_LINES_END ('RandomReg_10_quantized', 'RidgeRegressor', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 1024 entries, 0 to 1023
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     1024 non-null   float32
 1   X_1     1024 non-null   float32
 2   X_2     1024 non-null   float32
 3   X_3     1024 non-null   float32
 4   X_4     1024 non-null   float32
 5   X_5     1024 non-null   float32
 6   X_6     1024 non-null   float32
 7   X_7     1024 non-null   float32
 8   X_8     1024 non-null   float32
 9   X_9     1024 non-null   float32
dtypes: float32(10)
memory usage: 48.0 KB
       X_0  X_1  X_2  X_3  X_4  X_5  X_6  X_7  X_8  X_9
index                                                  
0      3.0  5.0  9.0  6.0  5.0  5.0  5.0  6.0  8.0  4.0
1      8.0  2.0  5.0  8.0  3.0  8.0  5.0  6.0  8.0  4.0
2      5.0  9.0  5.0  9.0  4.0  2.0  3.0  6.0  5.0  1.0
3      1.0  8.0  8.0  3.0  7.0  0.0  2.0  5.0  9.0  8.0
4      3.0  8.0  0.0  8.0  1.0  2.0  1.0  1.0  5.0  6.0
...    ...  ...  ...  ...  ...  ...  ...  ...  ...  ...
1019   6.0  3.0  1.0  1.0  9.0  8.0  7.0  2.0  8.0  2.0
1020   8.0  4.0  3.0  6.0  4.0  0.0  7.0  3.0  3.0  8.0
1021   1.0  4.0  9.0  9.0  1.0  9.0  7.0  8.0  5.0  2.0
1022   4.0  5.0  8.0  1.0  8.0  5.0  3.0  7.0  3.0  8.0
1023   2.0  6.0  4.0  1.0  1.0  4.0  7.0  2.0  4.0  6.0

[1024 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 1024 entries, 0 to 1023
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      1024 non-null   int64  
 1   Estimator  1024 non-null   float64
dtypes: float64(1), int64(1)
memory usage: 16.1 KB
      index   Estimator
0         0  151.192307
1         1  181.114212
2         2   51.783615
3         3   -0.495689
4         4 -250.853424
...     ...         ...
1019   1019   25.449242
1020   1020   80.385162
1021   1021  152.160400
1022   1022   82.739471
1023   1023  -37.854454

[1024 rows x 2 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('RandomReg_10_quantized', 'RidgeRegressor') Estimator 1.89049169421196e-05
      index  SQL_Estimator  Py_Estimator  SQL_Error
1008   1008     -70.808075    -70.808090   0.000015
1009   1009    -269.573303   -269.573273  -0.000031
1010   1010      27.326324     27.326311   0.000013
1011   1011      37.310947     37.310951  -0.000004
1012   1012     168.458405    168.458374   0.000031
1013   1013     -54.509464    -54.509476   0.000011
1014   1014      83.987679     83.987671   0.000008
1015   1015      63.435024     63.434982   0.000042
1016   1016     -86.962173    -86.962181   0.000008
1017   1017     -65.381958    -65.381981   0.000023
1018   1018     271.316589    271.316559   0.000031
1019   1019      25.449242     25.449196   0.000046
1020   1020      80.385162     80.385117   0.000046
1021   1021     152.160400    152.160400   0.000000
1022   1022      82.739471     82.739464   0.000008
1023   1023     -37.854454    -37.854465   0.000011
MLLITE_REG_SQL_EXECUTION_STATUS ('RandomReg_10_quantized', 'RidgeRegressor', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_RandomReg_10_quantized_option_1_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('RandomReg_10_quantized', 'RidgeRegressor', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "RandomReg_10_quantized" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   -630.176208 + 30.431307 * t."X_0" + 16.261839 * t."X_1" + 25.484423 * t."X_2" + 2.200887 * t."X_3" + 1.838324 * t."X_4" + 9.254494 * t."X_5" + 27.966387 * t."X_6" + 12.409963 * t."X_7" + 9.294753 * t."X_8" + 5.521595 * t."X_9" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_FIRST_LINES_END ('RandomReg_10_quantized', 'RidgeRegressor', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('RandomReg_10_quantized', 'RidgeRegressor', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "RandomReg_10_quantized" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   -630.176208 + 30.431307 * t."X_0" + 16.261839 * t."X_1" + 25.484423 * t."X_2" + 2.200887 * t."X_3" + 1.838324 * t."X_4" + 9.254494 * t."X_5" + 27.966387 * t."X_6" + 12.409963 * t."X_7" + 9.294753 * t."X_8" + 5.521595 * t."X_9" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_LAST_LINES_END ('RandomReg_10_quantized', 'RidgeRegressor', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 1024 entries, 0 to 1023
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     1024 non-null   float32
 1   X_1     1024 non-null   float32
 2   X_2     1024 non-null   float32
 3   X_3     1024 non-null   float32
 4   X_4     1024 non-null   float32
 5   X_5     1024 non-null   float32
 6   X_6     1024 non-null   float32
 7   X_7     1024 non-null   float32
 8   X_8     1024 non-null   float32
 9   X_9     1024 non-null   float32
dtypes: float32(10)
memory usage: 48.0 KB
       X_0  X_1  X_2  X_3  X_4  X_5  X_6  X_7  X_8  X_9
index                                                  
0      3.0  5.0  9.0  6.0  5.0  5.0  5.0  6.0  8.0  4.0
1      8.0  2.0  5.0  8.0  3.0  8.0  5.0  6.0  8.0  4.0
2      5.0  9.0  5.0  9.0  4.0  2.0  3.0  6.0  5.0  1.0
3      1.0  8.0  8.0  3.0  7.0  0.0  2.0  5.0  9.0  8.0
4      3.0  8.0  0.0  8.0  1.0  2.0  1.0  1.0  5.0  6.0
...    ...  ...  ...  ...  ...  ...  ...  ...  ...  ...
1019   6.0  3.0  1.0  1.0  9.0  8.0  7.0  2.0  8.0  2.0
1020   8.0  4.0  3.0  6.0  4.0  0.0  7.0  3.0  3.0  8.0
1021   1.0  4.0  9.0  9.0  1.0  9.0  7.0  8.0  5.0  2.0
1022   4.0  5.0  8.0  1.0  8.0  5.0  3.0  7.0  3.0  8.0
1023   2.0  6.0  4.0  1.0  1.0  4.0  7.0  2.0  4.0  6.0

[1024 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 1024 entries, 0 to 1023
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      1024 non-null   int64  
 1   Estimator  1024 non-null   float64
dtypes: float64(1), int64(1)
memory usage: 16.1 KB
      index   Estimator
0         0  151.192244
1         1  181.114178
2         2   51.783559
3         3   -0.495750
4         4 -250.853482
...     ...         ...
1019   1019   25.449178
1020   1020   80.385108
1021   1021  152.160383
1022   1022   82.739469
1023   1023  -37.854464

[1024 rows x 2 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('RandomReg_10_quantized', 'RidgeRegressor') Estimator 2.1711581540288794e-05
      index  SQL_Estimator  Py_Estimator  SQL_Error
1008   1008     -70.808121    -70.808090  -0.000031
1009   1009    -269.573286   -269.573273  -0.000013
1010   1010      27.326287     27.326311  -0.000024
1011   1011      37.310949     37.310951  -0.000002
1012   1012     168.458378    168.458374   0.000004
1013   1013     -54.509471    -54.509476   0.000005
1014   1014      83.987653     83.987671  -0.000018
1015   1015      63.434985     63.434982   0.000003
1016   1016     -86.962238    -86.962181  -0.000057
1017   1017     -65.381956    -65.381981   0.000025
1018   1018     271.316547    271.316559  -0.000012
1019   1019      25.449178     25.449196  -0.000018
1020   1020      80.385108     80.385117  -0.000009
1021   1021     152.160383    152.160400  -0.000017
1022   1022      82.739469     82.739464   0.000005
1023   1023     -37.854464    -37.854465   0.000001
MLLITE_REG_SQL_EXECUTION_STATUS ('RandomReg_10_quantized', 'RidgeRegressor', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
