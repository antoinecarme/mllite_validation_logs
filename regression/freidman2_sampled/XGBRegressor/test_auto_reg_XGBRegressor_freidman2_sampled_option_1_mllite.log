          X_0          X_1       X_2        X_3       target
0   17.761710   423.498320  0.135270  10.148129    59.976816
1   45.437614   168.841197  0.343817   3.279963    73.717247
2   69.792322   473.447926  0.233546   3.411073   130.755488
3   67.667095   938.672588  0.652046   9.523154   615.786950
4   55.118421  1002.086076  0.726658   4.570617   730.257013
5   52.067586   534.256140  0.155164   8.526538    97.892577
6   50.992903   814.561313  0.257439   5.994628   215.810735
7   34.347892   205.928122  0.720020   9.414677   152.198309
8   63.010204   221.354390  0.814630   5.897069   191.013194
9   22.605109  1660.837003  0.731124   9.374556  1214.488603
10  13.280703   643.716771  0.520814   4.842079   335.519300
11   7.606344  1112.226604  0.732761   6.140375   815.031479
MLLITE_MODEL_SET_OPTIONS XGBRegressor {"max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 }
MLLITE_MODEL_OPTIONS_DEFAULT XGBRegressor { "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING XGBRegressor { "max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 ,  "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32  , }
MLLITE_MODEL_JSON_AFTER_SETTING XGBRegressor None
('OPERATION_START', 'TRAINING')
[[1.77617092e+01 4.23498322e+02 1.35270208e-01 1.01481285e+01]
 [4.54376144e+01 1.68841202e+02 3.43817413e-01 3.27996254e+00]
 [6.97923203e+01 4.73447937e+02 2.33546272e-01 3.41107249e+00]
 [6.76670914e+01 9.38672607e+02 6.52046204e-01 9.52315426e+00]
 [5.51184196e+01 1.00208606e+03 7.26658285e-01 4.57061768e+00]] [ 59.976818  73.71725  130.7555   615.7869   730.257   ]
MLLITE_FIT_USING_MODEL mllite_xgb_reg.XGBRegressor_ff4_ff4
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 1 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 2 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 3 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 4 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 5 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 6 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 7 7
('OPERATION_END_ELAPSED', 0.009, 'TRAINING')
{ "max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 ,  "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32  , }
{ "max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 ,  "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32  , }
{
	"metadata" : { "model" : "Friedman_XGB", "version" : "2024-W13", "signature" : "ff4_ff4"},
	"options" : { "base_score" : [ ], "early_stopping_rounds" : 0, "eval_metric" : "", "gamma" : 0.000000, "grow_policy" : 0, "learning_rate" : 0.300000, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 32, "min_child_weight" : 5.000000, "n_estimators" : 5, "objective" : "reg:squarederror", "reg_alpha" : 0.000000, "reg_lambda" : 1.000000, "tree_method" : "auto" },
	"dataset" : { "dataset_rows" : 12, "dataset_features" : 4 },
	"booster" : {
		"BaseScore" : [ 386.037323 ],
		"Trees" : 5,
		"Tree_0" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : 814.561340, "sindex" : 1 },
			"Node_1" : { "leaf_value" : [ -62.294559 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_2" : { "leaf_value" : [ 83.059418 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_1" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : 814.561340, "sindex" : 1 },
			"Node_1" : { "leaf_value" : [ -45.942249 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_2" : { "leaf_value" : [ 62.294556 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_2" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : 0.652046, "sindex" : 2 },
			"Node_1" : { "leaf_value" : [ -43.145218 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_2" : { "leaf_value" : [ 44.468971 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_3" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : 643.716797, "sindex" : 1 },
			"Node_1" : { "leaf_value" : [ -37.611706 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_2" : { "leaf_value" : [ 38.595074 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_4" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : 0.720020, "sindex" : 2 },
			"Node_1" : { "leaf_value" : [ -25.247334 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_2" : { "leaf_value" : [ 34.515347 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/regression/XGBRegressor/mllite.XGBRegressor_freidman2_sampled_option_1.json'

MLLITE_MODEL_SET_OPTIONS XGBRegressor {"max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 }
MLLITE_MODEL_OPTIONS_DEFAULT XGBRegressor { "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING XGBRegressor { "max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 ,  "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32  , }
MLLITE_MODEL_JSON_AFTER_SETTING XGBRegressor None
MLLITE_RELOADING_MODEL mllite_xgb_reg.XGBRegressor_ff4_ff4
{
	"metadata" : { "model" : "Friedman_XGB", "version" : "2024-W13", "signature" : "ff4_ff4"},
	"options" : { "base_score" : [ ], "early_stopping_rounds" : 0, "eval_metric" : "", "gamma" : 0.000000, "grow_policy" : 0, "learning_rate" : 0.300000, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 32, "min_child_weight" : 5.000000, "n_estimators" : 5, "objective" : "reg:squarederror", "reg_alpha" : 0.000000, "reg_lambda" : 1.000000, "tree_method" : "auto" },
	"dataset" : { "dataset_rows" : 12, "dataset_features" : 4 },
	"booster" : {
		"BaseScore" : [ 386.037323 ],
		"Trees" : 5,
		"Tree_0" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : 814.561340, "sindex" : 1 },
			"Node_1" : { "leaf_value" : [ -62.294559 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_2" : { "leaf_value" : [ 83.059418 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_1" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : 814.561340, "sindex" : 1 },
			"Node_1" : { "leaf_value" : [ -45.942249 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_2" : { "leaf_value" : [ 62.294556 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_2" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : 0.652046, "sindex" : 2 },
			"Node_1" : { "leaf_value" : [ -43.145218 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_2" : { "leaf_value" : [ 44.468971 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_3" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : 643.716797, "sindex" : 1 },
			"Node_1" : { "leaf_value" : [ -37.611706 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_2" : { "leaf_value" : [ 38.595074 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_4" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : 0.720020, "sindex" : 2 },
			"Node_1" : { "leaf_value" : [ -25.247334 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_2" : { "leaf_value" : [ 34.515347 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		}
	}
}
BEAUTIFIED_JSON_START
{
	"booster" : 	{
		"BaseScore" : [ 386.037323 ],
		"Tree_0" : 	{
			"Node_0" : 	{
				"leaf_value" : [  ],
				"left" : 1,
				"parent" : null,
				"right" : 2,
				"sindex" : 1,
				"svalue" : 814.56134
			},
			"Node_1" : 	{
				"leaf_value" : [ -62.294559 ],
				"left" : null,
				"parent" : 0,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_2" : 	{
				"leaf_value" : [ 83.059418 ],
				"left" : null,
				"parent" : 0,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			}
		},
		"Tree_1" : 	{
			"Node_0" : 	{
				"leaf_value" : [  ],
				"left" : 1,
				"parent" : null,
				"right" : 2,
				"sindex" : 1,
				"svalue" : 814.56134
			},
			"Node_1" : 	{
				"leaf_value" : [ -45.942249 ],
				"left" : null,
				"parent" : 0,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_2" : 	{
				"leaf_value" : [ 62.294556 ],
				"left" : null,
				"parent" : 0,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			}
		},
		"Tree_2" : 	{
			"Node_0" : 	{
				"leaf_value" : [  ],
				"left" : 1,
				"parent" : null,
				"right" : 2,
				"sindex" : 2,
				"svalue" : 0.652046
			},
			"Node_1" : 	{
				"leaf_value" : [ -43.145218 ],
				"left" : null,
				"parent" : 0,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_2" : 	{
				"leaf_value" : [ 44.468971 ],
				"left" : null,
				"parent" : 0,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			}
		},
		"Tree_3" : 	{
			"Node_0" : 	{
				"leaf_value" : [  ],
				"left" : 1,
				"parent" : null,
				"right" : 2,
				"sindex" : 1,
				"svalue" : 643.716797
			},
			"Node_1" : 	{
				"leaf_value" : [ -37.611706 ],
				"left" : null,
				"parent" : 0,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_2" : 	{
				"leaf_value" : [ 38.595074 ],
				"left" : null,
				"parent" : 0,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			}
		},
		"Tree_4" : 	{
			"Node_0" : 	{
				"leaf_value" : [  ],
				"left" : 1,
				"parent" : null,
				"right" : 2,
				"sindex" : 2,
				"svalue" : 0.72002
			},
			"Node_1" : 	{
				"leaf_value" : [ -25.247334 ],
				"left" : null,
				"parent" : 0,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_2" : 	{
				"leaf_value" : [ 34.515347 ],
				"left" : null,
				"parent" : 0,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			}
		},
		"Trees" : 5
	},
	"dataset" : 	{
		"dataset_features" : 4,
		"dataset_rows" : 12
	},
	"metadata" :  { "model" : "Friedman_XGB", "signature" : "ff4_ff4", "version" : "2024-W13" },
	"options" :  { "base_score" : [ ], "early_stopping_rounds" : 0, "eval_metric" : "", "gamma" : 0.0, "grow_policy" : 0, "learning_rate" : 0.3, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 32, "min_child_weight" : 5.0, "n_estimators" : 5, "objective" : "reg:squarederror", "reg_alpha" : 0.0, "reg_lambda" : 1.0, "tree_method" : "auto" }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
[171.79625 171.79625 171.79625 589.20807 648.9707  171.79625 501.59384
 319.17313 319.17313 648.9707  248.00304 648.9707 ]
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
('OPERATION_START', 'PREDICT')
[171.79625 171.79625 171.79625 589.20807 648.9707  171.79625 501.59384
 319.17313 319.17313 648.9707  248.00304 648.9707 ]
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
MODEL_PERFS {'class_name': 'mllite.XGBRegressor', 'model_name': 'XGBRegressor', 'options': '{"max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 }', 'dataset': 'freidman2_sampled', 'size': 12, 'mse': 43133.87, 'mae': 152.72673, 'mape': 0.70338696, 'r2': 0.6590071857236033}
WRITING_PERF_CODE 'logs/auto_tests/regression/XGBRegressor/mllite.XGBRegressor_freidman2_sampled_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.XGBRegressor', 'model_name': 'XGBRegressor', 'options': '{"max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 }', 'dataset': 'freidman2_sampled', 'training_time_in_sec': 0.009, 'prediction_time_in_sec': 0.001}
WRITING_SQL_CODE 'logs/auto_tests/regression/XGBRegressor/mllite.XGBRegressor_freidman2_sampled_option_1_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('freidman2_sampled', 'XGBRegressor', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
"DT_node_lookup_0" AS 
 (SELECT
    t."index" AS "index",
    CASE WHEN (t."X_1" < 814.561340) THEN 1 ELSE 2 END AS node_id
  FROM model_input AS t
 )
,
"DT_node_data_0" AS 
 (SELECT
    "Values".nid AS nid,
    "Values"."E" AS "E"
  FROM (
    SELECT 1 AS nid,  -62.294559 AS "E"
    UNION ALL
    SELECT 2 AS nid,  83.059418 AS "E"
  ) AS "Values"
 )
,
"DT_output_0" AS 
 (SELECT
   t1."index" AS "index",
   t1.node_id AS node_id,
   t2.nid AS nid,
   t2."E" AS "E"
  FROM
   "DT_node_lookup_0" AS t1
   LEFT OUTER JOIN
   "DT_node_data_0" AS t2
   ON t1.node_id = t2.nid
 )
,
"DT_node_lookup_1" AS 
 (SELECT
    t."index" AS "index",
    CASE WHEN (t."X_1" < 814.561340) THEN 1 ELSE 2 END AS node_id
  FROM model_input AS t
 )
,
"DT_node_data_1" AS 
 (SELECT
    "Values"
SQL_OUT_PUT_FIRST_LINES_END ('freidman2_sampled', 'XGBRegressor', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('freidman2_sampled', 'XGBRegressor', 'duckdb')

    "Values".nid AS nid,
    "Values"."E" AS "E"
  FROM (
    SELECT 1 AS nid,  -25.247334 AS "E"
    UNION ALL
    SELECT 2 AS nid,  34.515347 AS "E"
  ) AS "Values"
 )
,
"DT_output_4" AS 
 (SELECT
   t1."index" AS "index",
   t1.node_id AS node_id,
   t2.nid AS nid,
   t2."E" AS "E"
  FROM
   "DT_node_lookup_4" AS t1
   LEFT OUTER JOIN
   "DT_node_data_4" AS t2
   ON t1.node_id = t2.nid
 )
,
"union_of_trees" AS
 (SELECT scu."index_u" AS "index", scu."E" AS "E"
 FROM (
    SELECT t."index" AS "index_u", t."E" AS "E" FROM "DT_output_0" AS t
    UNION ALL
    SELECT t."index" AS "index_u", t."E" AS "E" FROM "DT_output_1" AS t
    UNION ALL
    SELECT t."index" AS "index_u", t."E" AS "E" FROM "DT_output_2" AS t
    UNION ALL
    SELECT t."index" AS "index_u", t."E" AS "E" FROM "DT_output_3" AS t
    UNION ALL
    SELECT t."index" AS "index_u", t."E" AS "E" FROM "DT_output_4" AS t
  ) AS scu
)
SELECT
   t."index" AS "index",
   386.037323 + SUM(t."E") AS "Estimator"
FROM "union_of_trees" AS t
GROUP BY t."index"
SQL_OUT_PUT_LAST_LINES_END ('freidman2_sampled', 'XGBRegressor', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 12 entries, 0 to 11
Data columns (total 4 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     12 non-null     float32
 1   X_1     12 non-null     float32
 2   X_2     12 non-null     float32
 3   X_3     12 non-null     float32
dtypes: float32(4)
memory usage: 288.0 bytes
             X_0          X_1       X_2        X_3
index                                             
0      17.761709   423.498322  0.135270  10.148129
1      45.437614   168.841202  0.343817   3.279963
2      69.792320   473.447937  0.233546   3.411072
3      67.667091   938.672607  0.652046   9.523154
4      55.118420  1002.086060  0.726658   4.570618
5      52.067585   534.256165  0.155164   8.526538
6      50.992905   814.561340  0.257439   5.994627
7      34.347893   205.928116  0.720020   9.414678
8      63.010204   221.354385  0.814630   5.897069
9      22.605108  1660.837036  0.731124   9.374556
10     13.280704   643.716797  0.520814   4.842079
11      7.606344  1112.226562  0.732761   6.140375
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 12 entries, 0 to 11
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      12 non-null     int64  
 1   Estimator  12 non-null     float64
dtypes: float64(1), int64(1)
memory usage: 324.0 bytes
    index   Estimator
0       0  171.796257
1       1  171.796257
2       2  171.796257
3       3  589.208008
4       4  648.970689
5       5  171.796257
6       6  501.593819
7       7  319.173127
8       8  319.173127
9       9  648.970689
10     10  248.003037
11     11  648.970689
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('freidman2_sampled', 'XGBRegressor') Estimator 1.3189697275114062e-05
    index  SQL_Estimator  Py_Estimator     SQL_Error
0       0     171.796257    171.796249  7.610352e-06
1       1     171.796257    171.796249  7.610352e-06
2       2     171.796257    171.796249  7.610352e-06
3       3     589.208008    589.208069 -6.084766e-05
4       4     648.970689    648.970703 -1.412500e-05
5       5     171.796257    171.796249  7.610352e-06
6       6     501.593819    501.593842 -2.255273e-05
7       7     319.173127    319.173126  7.792969e-07
8       8     319.173127    319.173126  7.792969e-07
9       9     648.970689    648.970703 -1.412500e-05
10     10     248.003037    248.003036  5.009766e-07
11     11     648.970689    648.970703 -1.412500e-05
MLLITE_REG_SQL_EXECUTION_STATUS ('freidman2_sampled', 'XGBRegressor', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/regression/XGBRegressor/mllite.XGBRegressor_freidman2_sampled_option_1_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('freidman2_sampled', 'XGBRegressor', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
"DT_node_lookup_0" AS 
 (SELECT
    t."index" AS "index",
    CASE WHEN (t."X_1" < 814.561340) THEN 1 ELSE 2 END AS node_id
  FROM model_input AS t
 )
,
"DT_node_data_0" AS 
 (SELECT
    "Values".nid AS nid,
    "Values"."E" AS "E"
  FROM (
    SELECT 1 AS nid,  -62.294559 AS "E"
    UNION ALL
    SELECT 2 AS nid,  83.059418 AS "E"
  ) AS "Values"
 )
,
"DT_output_0" AS 
 (SELECT
   t1."index" AS "index",
   t1.node_id AS node_id,
   t2.nid AS nid,
   t2."E" AS "E"
  FROM
   "DT_node_lookup_0" AS t1
   LEFT OUTER JOIN
   "DT_node_data_0" AS t2
   ON t1.node_id = t2.nid
 )
,
"DT_node_lookup_1" AS 
 (SELECT
    t."index" AS "index",
    CASE WHEN (t."X_1" < 814.561340) THEN 1 ELSE 2 END AS node_id
  FROM model_input AS t
 )
,
"DT_node_data_1" AS 
 (SELECT
    "Values"
SQL_OUT_PUT_FIRST_LINES_END ('freidman2_sampled', 'XGBRegressor', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('freidman2_sampled', 'XGBRegressor', 'sqlite')

    "Values".nid AS nid,
    "Values"."E" AS "E"
  FROM (
    SELECT 1 AS nid,  -25.247334 AS "E"
    UNION ALL
    SELECT 2 AS nid,  34.515347 AS "E"
  ) AS "Values"
 )
,
"DT_output_4" AS 
 (SELECT
   t1."index" AS "index",
   t1.node_id AS node_id,
   t2.nid AS nid,
   t2."E" AS "E"
  FROM
   "DT_node_lookup_4" AS t1
   LEFT OUTER JOIN
   "DT_node_data_4" AS t2
   ON t1.node_id = t2.nid
 )
,
"union_of_trees" AS
 (SELECT scu."index_u" AS "index", scu."E" AS "E"
 FROM (
    SELECT t."index" AS "index_u", t."E" AS "E" FROM "DT_output_0" AS t
    UNION ALL
    SELECT t."index" AS "index_u", t."E" AS "E" FROM "DT_output_1" AS t
    UNION ALL
    SELECT t."index" AS "index_u", t."E" AS "E" FROM "DT_output_2" AS t
    UNION ALL
    SELECT t."index" AS "index_u", t."E" AS "E" FROM "DT_output_3" AS t
    UNION ALL
    SELECT t."index" AS "index_u", t."E" AS "E" FROM "DT_output_4" AS t
  ) AS scu
)
SELECT
   t."index" AS "index",
   386.037323 + SUM(t."E") AS "Estimator"
FROM "union_of_trees" AS t
GROUP BY t."index"
SQL_OUT_PUT_LAST_LINES_END ('freidman2_sampled', 'XGBRegressor', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 12 entries, 0 to 11
Data columns (total 4 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     12 non-null     float32
 1   X_1     12 non-null     float32
 2   X_2     12 non-null     float32
 3   X_3     12 non-null     float32
dtypes: float32(4)
memory usage: 288.0 bytes
             X_0          X_1       X_2        X_3
index                                             
0      17.761709   423.498322  0.135270  10.148129
1      45.437614   168.841202  0.343817   3.279963
2      69.792320   473.447937  0.233546   3.411072
3      67.667091   938.672607  0.652046   9.523154
4      55.118420  1002.086060  0.726658   4.570618
5      52.067585   534.256165  0.155164   8.526538
6      50.992905   814.561340  0.257439   5.994627
7      34.347893   205.928116  0.720020   9.414678
8      63.010204   221.354385  0.814630   5.897069
9      22.605108  1660.837036  0.731124   9.374556
10     13.280704   643.716797  0.520814   4.842079
11      7.606344  1112.226562  0.732761   6.140375
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 12 entries, 0 to 11
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      12 non-null     int64  
 1   Estimator  12 non-null     float64
dtypes: float64(1), int64(1)
memory usage: 324.0 bytes
    index   Estimator
0       0  171.796257
1       1  171.796257
2       2  171.796257
3       3  589.208008
4       4  648.970689
5       5  171.796257
6       6  501.593819
7       7  319.173127
8       8  319.173127
9       9  648.970689
10     10  171.796257
11     11  648.970689
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('freidman2_sampled', 'XGBRegressor') Estimator 6.350578106201179
    index  SQL_Estimator  Py_Estimator     SQL_Error
0       0     171.796257    171.796249  7.610352e-06
1       1     171.796257    171.796249  7.610352e-06
2       2     171.796257    171.796249  7.610352e-06
3       3     589.208008    589.208069 -6.084766e-05
4       4     648.970689    648.970703 -1.412500e-05
5       5     171.796257    171.796249  7.610352e-06
6       6     501.593819    501.593842 -2.255273e-05
7       7     319.173127    319.173126  7.792969e-07
8       8     319.173127    319.173126  7.792969e-07
9       9     648.970689    648.970703 -1.412500e-05
10     10     171.796257    248.003036 -7.620678e+01
11     11     648.970689    648.970703 -1.412500e-05
MLLITE_REG_SQL_EXECUTION_STATUS ('freidman2_sampled', 'XGBRegressor', 'Failure')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/regression/XGBRegressor/mllite.XGBRegressor_freidman2_sampled_option_1_pgsql.sql'



SQL_OUT_PUT_FIRST_LINES_START ('freidman2_sampled', 'XGBRegressor', 'pgsql')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
"DT_node_lookup_0" AS 
 (SELECT
    t."index" AS "index",
    CASE WHEN (t."X_1" < 814.561340) THEN 1 ELSE 2 END AS node_id
  FROM model_input AS t
 )
,
"DT_node_data_0" AS 
 (SELECT
    "Values".nid AS nid,
    "Values"."E" AS "E"
  FROM (
    SELECT 1 AS nid,  -62.294559 AS "E"
    UNION ALL
    SELECT 2 AS nid,  83.059418 AS "E"
  ) AS "Values"
 )
,
"DT_output_0" AS 
 (SELECT
   t1."index" AS "index",
   t1.node_id AS node_id,
   t2.nid AS nid,
   t2."E" AS "E"
  FROM
   "DT_node_lookup_0" AS t1
   LEFT OUTER JOIN
   "DT_node_data_0" AS t2
   ON t1.node_id = t2.nid
 )
,
"DT_node_lookup_1" AS 
 (SELECT
    t."index" AS "index",
    CASE WHEN (t."X_1" < 814.561340) THEN 1 ELSE 2 END AS node_id
  FROM model_input AS t
 )
,
"DT_node_data_1" AS 
 (SELECT
    "Values"
SQL_OUT_PUT_FIRST_LINES_END ('freidman2_sampled', 'XGBRegressor', 'pgsql')
SQL_OUT_PUT_LAST_LINES_START ('freidman2_sampled', 'XGBRegressor', 'pgsql')

    "Values".nid AS nid,
    "Values"."E" AS "E"
  FROM (
    SELECT 1 AS nid,  -25.247334 AS "E"
    UNION ALL
    SELECT 2 AS nid,  34.515347 AS "E"
  ) AS "Values"
 )
,
"DT_output_4" AS 
 (SELECT
   t1."index" AS "index",
   t1.node_id AS node_id,
   t2.nid AS nid,
   t2."E" AS "E"
  FROM
   "DT_node_lookup_4" AS t1
   LEFT OUTER JOIN
   "DT_node_data_4" AS t2
   ON t1.node_id = t2.nid
 )
,
"union_of_trees" AS
 (SELECT scu."index_u" AS "index", scu."E" AS "E"
 FROM (
    SELECT t."index" AS "index_u", t."E" AS "E" FROM "DT_output_0" AS t
    UNION ALL
    SELECT t."index" AS "index_u", t."E" AS "E" FROM "DT_output_1" AS t
    UNION ALL
    SELECT t."index" AS "index_u", t."E" AS "E" FROM "DT_output_2" AS t
    UNION ALL
    SELECT t."index" AS "index_u", t."E" AS "E" FROM "DT_output_3" AS t
    UNION ALL
    SELECT t."index" AS "index_u", t."E" AS "E" FROM "DT_output_4" AS t
  ) AS scu
)
SELECT
   t."index" AS "index",
   386.037323 + SUM(t."E") AS "Estimator"
FROM "union_of_trees" AS t
GROUP BY t."index"
SQL_OUT_PUT_LAST_LINES_END ('freidman2_sampled', 'XGBRegressor', 'pgsql') 




COPY_TRAINING_DATA_TO_SQLITE_START
