          X_0          X_1       X_2        X_3       target
0   17.761710   423.498320  0.135270  10.148129    59.976816
1   45.437614   168.841197  0.343817   3.279963    73.717247
2   69.792322   473.447926  0.233546   3.411073   130.755488
3   67.667095   938.672588  0.652046   9.523154   615.786950
4   55.118421  1002.086076  0.726658   4.570617   730.257013
5   52.067586   534.256140  0.155164   8.526538    97.892577
6   50.992903   814.561313  0.257439   5.994628   215.810735
7   34.347892   205.928122  0.720020   9.414677   152.198309
8   63.010204   221.354390  0.814630   5.897069   191.013194
9   22.605109  1660.837003  0.731124   9.374556  1214.488603
10  13.280703   643.716771  0.520814   4.842079   335.519300
11   7.606344  1112.226604  0.732761   6.140375   815.031479
MLLITE_MODEL_SET_OPTIONS SVR {"C" : 2}
MLLITE_MODEL_OPTIONS_DEFAULT SVR { "max_iter" : 128 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING SVR { "C" : 2,  "max_iter" : 128  , }
MLLITE_MODEL_JSON_AFTER_SETTING SVR None
('OPERATION_START', 'TRAINING')
[[1.77617092e+01 4.23498322e+02 1.35270208e-01 1.01481285e+01]
 [4.54376144e+01 1.68841202e+02 3.43817413e-01 3.27996254e+00]
 [6.97923203e+01 4.73447937e+02 2.33546272e-01 3.41107249e+00]
 [6.76670914e+01 9.38672607e+02 6.52046204e-01 9.52315426e+00]
 [5.51184196e+01 1.00208606e+03 7.26658285e-01 4.57061768e+00]] [ 59.976818  73.71725  130.7555   615.7869   730.257   ]
MLLITE_FIT_USING_MODEL mllite_svm_reg.SVR_ff4_ff4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_REGRESSOR_FIT' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_REGRESSOR_FIT' 2 4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_REGRESSOR_FIT' 3 4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_REGRESSOR_FIT' 4 4
('OPERATION_END_ELAPSED', 0.006, 'TRAINING')
{ "C" : 2,  "max_iter" : 128  , }
{ "C" : 2,  "max_iter" : 128  , }
{
	"metadata" : { "model" : "Vapnik_SVR_RBF", "version" : "2024-W14", "signature" : "ff4_ff4"},
	"options" : {"svm_type" : "epsilon_svr", "kernel" : "rbf", "degree" : 3, "gamma" : 0.000002, "coef0" : 0.000000, "cache_size" : 300, "tol" : 0.001000, "nu" : 0.500000, "epsilon" : 0.100000, "shrinking" : 0, "probability" : 0, "C" : 2.000000, "max_iter" : 128, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 12, "dataset_features" : 4 },
	"svm_model" : {
	"classes" : 2,
	"L" : 12,
	"SupportVectors" : {
		"SV_00" : [ 17.761709, 423.498322, 0.135270, 10.148129 ],
		"SV_01" : [ 45.437614, 168.841202, 0.343817, 3.279963 ],
		"SV_02" : [ 69.792320, 473.447937, 0.233546, 3.411072 ],
		"SV_03" : [ 67.667091, 938.672607, 0.652046, 9.523154 ],
		"SV_04" : [ 55.118420, 1002.086060, 0.726658, 4.570618 ],
		"SV_05" : [ 52.067585, 534.256165, 0.155164, 8.526538 ],
		"SV_06" : [ 50.992905, 814.561340, 0.257439, 5.994627 ],
		"SV_07" : [ 34.347893, 205.928116, 0.720020, 9.414678 ],
		"SV_08" : [ 63.010204, 221.354385, 0.814630, 5.897069 ],
		"SV_09" : [ 22.605108, 1660.837036, 0.731124, 9.374556 ],
		"SV_10" : [ 13.280704, 643.716797, 0.520814, 4.842079 ],
		"SV_11" : [ 7.606344, 1112.226562, 0.732761, 6.140375 ]
	},
	"SupportVectorsCoefs" : {
		"SV_coef_0" : [ -2.000000, -2.000000, -2.000000, 2.000000, 2.000000, -2.000000, 2.000000, -2.000000, -2.000000, 2.000000, 2.000000, 2.000000 ]
	},
	"rho" : [ -205.820526 ],
	"nSV" : [ 12 ],
	"probA" : [ ],
	"probB" : [ ],
	"n_iter" : [ 8 ]
}
}
WRITING_JSON_CODE 'logs/auto_tests/regression/SVR/mllite.SVR_freidman2_sampled_option_1.json'

MLLITE_MODEL_SET_OPTIONS SVR {"C" : 2}
MLLITE_MODEL_OPTIONS_DEFAULT SVR { "max_iter" : 128 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING SVR { "C" : 2,  "max_iter" : 128  , }
MLLITE_MODEL_JSON_AFTER_SETTING SVR None
MLLITE_RELOADING_MODEL mllite_svm_reg.SVR_ff4_ff4
{
	"metadata" : { "model" : "Vapnik_SVR_RBF", "version" : "2024-W14", "signature" : "ff4_ff4"},
	"options" : {"svm_type" : "epsilon_svr", "kernel" : "rbf", "degree" : 3, "gamma" : 0.000002, "coef0" : 0.000000, "cache_size" : 300, "tol" : 0.001000, "nu" : 0.500000, "epsilon" : 0.100000, "shrinking" : 0, "probability" : 0, "C" : 2.000000, "max_iter" : 128, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 12, "dataset_features" : 4 },
	"svm_model" : {
	"classes" : 2,
	"L" : 12,
	"SupportVectors" : {
		"SV_00" : [ 17.761709, 423.498322, 0.135270, 10.148129 ],
		"SV_01" : [ 45.437614, 168.841202, 0.343817, 3.279963 ],
		"SV_02" : [ 69.792320, 473.447937, 0.233546, 3.411072 ],
		"SV_03" : [ 67.667091, 938.672607, 0.652046, 9.523154 ],
		"SV_04" : [ 55.118420, 1002.086060, 0.726658, 4.570618 ],
		"SV_05" : [ 52.067585, 534.256165, 0.155164, 8.526538 ],
		"SV_06" : [ 50.992905, 814.561340, 0.257439, 5.994627 ],
		"SV_07" : [ 34.347893, 205.928116, 0.720020, 9.414678 ],
		"SV_08" : [ 63.010204, 221.354385, 0.814630, 5.897069 ],
		"SV_09" : [ 22.605108, 1660.837036, 0.731124, 9.374556 ],
		"SV_10" : [ 13.280704, 643.716797, 0.520814, 4.842079 ],
		"SV_11" : [ 7.606344, 1112.226562, 0.732761, 6.140375 ]
	},
	"SupportVectorsCoefs" : {
		"SV_coef_0" : [ -2.000000, -2.000000, -2.000000, 2.000000, 2.000000, -2.000000, 2.000000, -2.000000, -2.000000, 2.000000, 2.000000, 2.000000 ]
	},
	"rho" : [ -205.820526 ],
	"nSV" : [ 12 ],
	"probA" : [ ],
	"probB" : [ ],
	"n_iter" : [ 8 ]
}
}
BEAUTIFIED_JSON_START
{
	"dataset" : 	{
		"dataset_features" : 4,
		"dataset_rows" : 12
	},
	"metadata" :  { "model" : "Vapnik_SVR_RBF", "signature" : "ff4_ff4", "version" : "2024-W14" },
	"options" :  { "C" : 2.0, "cache_size" : 300, "coef0" : 0.0, "degree" : 3, "epsilon" : 0.1, "gamma" : 2e-06, "kernel" : "rbf", "max_iter" : 128, "nu" : 0.5, "probability" : 0, "random_state" : 1789, "shrinking" : 0, "svm_type" : "epsilon_svr", "tol" : 0.001 },
	"svm_model" : 	{
		"L" : 12,
		"SupportVectors" : 	{
			"SV_00" : [ 17.761709, 423.498322, 0.13527, 10.148129 ],
			"SV_01" : [ 45.437614, 168.841202, 0.343817, 3.279963 ],
			"SV_02" : [ 69.79232, 473.447937, 0.233546, 3.411072 ],
			"SV_03" : [ 67.667091, 938.672607, 0.652046, 9.523154 ],
			"SV_04" : [ 55.11842, 1002.08606, 0.726658, 4.570618 ],
			"SV_05" : [ 52.067585, 534.256165, 0.155164, 8.526538 ],
			"SV_06" : [ 50.992905, 814.56134, 0.257439, 5.994627 ],
			"SV_07" : [ 34.347893, 205.928116, 0.72002, 9.414678 ],
			"SV_08" : [ 63.010204, 221.354385, 0.81463, 5.897069 ],
			"SV_09" : [ 22.605108, 1660.837036, 0.731124, 9.374556 ],
			"SV_10" : [ 13.280704, 643.716797, 0.520814, 4.842079 ],
			"SV_11" : [ 7.606344, 1112.226562, 0.732761, 6.140375 ]
		},
		"SupportVectorsCoefs" : 	{
			"SV_coef_0" : [ -2.0, -2.0, -2.0, 2.0, 2.0, -2.0, 2.0, -2.0, -2.0, 2.0, 2.0, 2.0 ]
		},
		"classes" : 2,
		"nSV" : [ 12 ],
		"n_iter" : [ 8 ],
		"probA" : [  ],
		"probB" : [  ],
		"rho" : [ -205.820526 ]
	}
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
[200.90186 198.57925 201.66263 209.98831 210.80133 202.71051 208.0184
 198.72853 198.80556 210.78894 204.79153 211.8127 ]
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
[200.83073 198.50371 201.60376 210.06793 210.88335 202.67076 208.07663
 198.64711 198.72226 210.73064 204.79256 211.88422]
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
MODEL_PERFS {'class_name': 'mllite.SVR', 'model_name': 'SVR', 'options': '{"C" : 2}', 'dataset': 'freidman2_sampled', 'size': 12, 'mse': 156386.17, 'mae': 263.8773, 'mape': 0.7804682, 'r2': -0.23630367722768963}
WRITING_PERF_CODE 'logs/auto_tests/regression/SVR/mllite.SVR_freidman2_sampled_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.SVR', 'model_name': 'SVR', 'options': '{"C" : 2}', 'dataset': 'freidman2_sampled', 'training_time_in_sec': 0.006, 'prediction_time_in_sec': 0.0}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 0 4
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 2 4
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 3 4
{
   "Contributions" : {
      "X_0" : [ -0.000586 ],
      "X_1" : [ 0.642614 ],
      "X_2" : [ 0.000000 ],
      "X_3" : [ 0.000008 ]   
   },
   "Most_Contributive_Features" : {
      "y" : [ 1, 0, 3, 2 ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/regression/SVR/mllite.SVR_freidman2_sampled_option_1_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/regression/SVR/mllite.SVR_freidman2_sampled_option_1_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('freidman2_sampled', 'SVR', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "freidman2_sampled" AS "ADS" 
 )
,"SV_data" AS
 ( SELECT 
   "Values"."sv_idx" AS "sv_idx",
   "Values"."coeff" AS "coeff",
   "Values"."sv_0" AS "sv_0",
   "Values"."sv_1" AS "sv_1",
   "Values"."sv_2" AS "sv_2",
   "Values"."sv_3" AS "sv_3"
  FROM
  (
     SELECT 0 AS "sv_idx", -2.000000 AS "coeff", 17.761709 AS "sv_0", 423.498322 AS "sv_1", 0.135270 AS "sv_2", 10.148129 AS "sv_3"
     UNION ALL
     SELECT 1 AS "sv_idx", -2.000000 AS "coeff", 45.437614 AS "sv_0", 168.841202 AS "sv_1", 0.343817 AS "sv_2", 3.279963 AS "sv_3"
     UNION ALL
     SELECT 2 AS "sv_idx", -2.000000 AS "coeff", 69.792320 AS "sv_0", 473.447937 AS "sv_1", 0.233546 AS "sv_2", 3.411072 AS "sv_3"
     UNION ALL
     SELECT 3 AS "sv_idx", 2.000000 AS "coeff", 67.667091 AS "sv_0", 938.672607 AS "sv_1", 0.652046 AS "sv_2", 9.5231
SQL_OUT_PUT_FIRST_LINES_END ('freidman2_sampled', 'SVR', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('freidman2_sampled', 'SVR', 'duckdb')
079 AS "sv_3"
     UNION ALL
     SELECT 11 AS "sv_idx", 2.000000 AS "coeff", 7.606344 AS "sv_0", 1112.226562 AS "sv_1", 0.732761 AS "sv_2", 6.140375 AS "sv_3"
   ) AS "Values"
 )
,"Kernel_DotProd" AS
 ( SELECT
    dp."index" as "index",
    dp."dot_product" AS "Estimator"
   FROM
    (SELECT
      full_join_data_sv."index" AS "index",
      sum(CAST(full_join_data_sv.dot_prod AS FLOAT)) - -205.820526 AS dot_product
     FROM
       (SELECT
          model_input."index" AS "index",
          "SV_data"."coeff" *  EXP( LEAST( GREATEST( CAST(-32.0 AS FLOAT), -0.000002 * (power(model_input."X_0" - "SV_data".sv_0, 2) + power(model_input."X_1" - "SV_data".sv_1, 2) + power(model_input."X_2" - "SV_data".sv_2, 2) + power(model_input."X_3" - "SV_data".sv_3, 2)) ), CAST(32.0 AS FLOAT) ) )  AS "dot_prod" 
        FROM
          model_input, "SV_data"
       ) AS full_join_data_sv
     GROUP BY full_join_data_sv."index"
    ) AS dp )
SELECT
  t."index" as "index",
  t."Estimator" as "Estimator"
FROM "Kernel_DotProd" AS t

SQL_OUT_PUT_LAST_LINES_END ('freidman2_sampled', 'SVR', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 12 entries, 0 to 11
Data columns (total 4 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     12 non-null     float32
 1   X_1     12 non-null     float32
 2   X_2     12 non-null     float32
 3   X_3     12 non-null     float32
dtypes: float32(4)
memory usage: 288.0 bytes
             X_0          X_1       X_2        X_3
index                                             
0      17.761709   423.498322  0.135270  10.148129
1      45.437614   168.841202  0.343817   3.279963
2      69.792320   473.447937  0.233546   3.411072
3      67.667091   938.672607  0.652046   9.523154
4      55.118420  1002.086060  0.726658   4.570618
5      52.067585   534.256165  0.155164   8.526538
6      50.992905   814.561340  0.257439   5.994627
7      34.347893   205.928116  0.720020   9.414678
8      63.010204   221.354385  0.814630   5.897069
9      22.605108  1660.837036  0.731124   9.374556
10     13.280704   643.716797  0.520814   4.842079
11      7.606344  1112.226562  0.732761   6.140375
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 12 entries, 0 to 11
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      12 non-null     int64  
 1   Estimator  12 non-null     float64
dtypes: float64(1), int64(1)
memory usage: 324.0 bytes
    index   Estimator
0       0  200.830740
1       1  198.503709
2       2  201.603765
3       3  210.067925
4       4  210.883353
5       5  202.670760
6       6  208.076631
7       7  198.647111
8       8  198.722266
9       9  210.730630
10     10  204.792563
11     11  211.884217
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('freidman2_sampled', 'SVR') Estimator 0.06339211329205814
    index  SQL_Estimator  Py_Estimator  SQL_Error
0       0     200.830740    200.901855  -0.071115
1       1     198.503709    198.579254  -0.075545
2       2     201.603765    201.662628  -0.058864
3       3     210.067925    209.988312   0.079613
4       4     210.883353    210.801331   0.082022
5       5     202.670760    202.710510  -0.039750
6       6     208.076631    208.018402   0.058229
7       7     198.647111    198.728531  -0.081420
8       8     198.722266    198.805557  -0.083291
9       9     210.730630    210.788940  -0.058310
10     10     204.792563    204.791534   0.001028
11     11     211.884217    211.812698   0.071519
MLLITE_REG_SQL_EXECUTION_STATUS ('freidman2_sampled', 'SVR', 'Failure')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/regression/SVR/mllite.SVR_freidman2_sampled_option_1_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('freidman2_sampled', 'SVR', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "freidman2_sampled" AS "ADS" 
 )
,"SV_data" AS
 ( SELECT 
   "Values"."sv_idx" AS "sv_idx",
   "Values"."coeff" AS "coeff",
   "Values"."sv_0" AS "sv_0",
   "Values"."sv_1" AS "sv_1",
   "Values"."sv_2" AS "sv_2",
   "Values"."sv_3" AS "sv_3"
  FROM
  (
     SELECT 0 AS "sv_idx", -2.000000 AS "coeff", 17.761709 AS "sv_0", 423.498322 AS "sv_1", 0.135270 AS "sv_2", 10.148129 AS "sv_3"
     UNION ALL
     SELECT 1 AS "sv_idx", -2.000000 AS "coeff", 45.437614 AS "sv_0", 168.841202 AS "sv_1", 0.343817 AS "sv_2", 3.279963 AS "sv_3"
     UNION ALL
     SELECT 2 AS "sv_idx", -2.000000 AS "coeff", 69.792320 AS "sv_0", 473.447937 AS "sv_1", 0.233546 AS "sv_2", 3.411072 AS "sv_3"
     UNION ALL
     SELECT 3 AS "sv_idx", 2.000000 AS "coeff", 67.667091 AS "sv_0", 938.672607 AS "sv_1", 0.652046 AS "sv_2", 9.5231
SQL_OUT_PUT_FIRST_LINES_END ('freidman2_sampled', 'SVR', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('freidman2_sampled', 'SVR', 'sqlite')
, 4.842079 AS "sv_3"
     UNION ALL
     SELECT 11 AS "sv_idx", 2.000000 AS "coeff", 7.606344 AS "sv_0", 1112.226562 AS "sv_1", 0.732761 AS "sv_2", 6.140375 AS "sv_3"
   ) AS "Values"
 )
,"Kernel_DotProd" AS
 ( SELECT
    dp."index" as "index",
    dp."dot_product" AS "Estimator"
   FROM
    (SELECT
      full_join_data_sv."index" AS "index",
      sum(CAST(full_join_data_sv.dot_prod AS FLOAT)) - -205.820526 AS dot_product
     FROM
       (SELECT
          model_input."index" AS "index",
          "SV_data"."coeff" *  EXP( MIN( MAX( CAST(-32.0 AS FLOAT), -0.000002 * (power(model_input."X_0" - "SV_data".sv_0, 2) + power(model_input."X_1" - "SV_data".sv_1, 2) + power(model_input."X_2" - "SV_data".sv_2, 2) + power(model_input."X_3" - "SV_data".sv_3, 2)) ), CAST(32.0 AS FLOAT) ) )  AS "dot_prod" 
        FROM
          model_input, "SV_data"
       ) AS full_join_data_sv
     GROUP BY full_join_data_sv."index"
    ) AS dp )
SELECT
  t."index" as "index",
  t."Estimator" as "Estimator"
FROM "Kernel_DotProd" AS t

SQL_OUT_PUT_LAST_LINES_END ('freidman2_sampled', 'SVR', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 12 entries, 0 to 11
Data columns (total 4 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     12 non-null     float32
 1   X_1     12 non-null     float32
 2   X_2     12 non-null     float32
 3   X_3     12 non-null     float32
dtypes: float32(4)
memory usage: 288.0 bytes
             X_0          X_1       X_2        X_3
index                                             
0      17.761709   423.498322  0.135270  10.148129
1      45.437614   168.841202  0.343817   3.279963
2      69.792320   473.447937  0.233546   3.411072
3      67.667091   938.672607  0.652046   9.523154
4      55.118420  1002.086060  0.726658   4.570618
5      52.067585   534.256165  0.155164   8.526538
6      50.992905   814.561340  0.257439   5.994627
7      34.347893   205.928116  0.720020   9.414678
8      63.010204   221.354385  0.814630   5.897069
9      22.605108  1660.837036  0.731124   9.374556
10     13.280704   643.716797  0.520814   4.842079
11      7.606344  1112.226562  0.732761   6.140375
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 12 entries, 0 to 11
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      12 non-null     int64  
 1   Estimator  12 non-null     float64
dtypes: float64(1), int64(1)
memory usage: 324.0 bytes
    index   Estimator
0       0  200.830740
1       1  198.503709
2       2  201.603764
3       3  210.067924
4       4  210.883352
5       5  202.670760
6       6  208.076631
7       7  198.647111
8       8  198.722266
9       9  210.730630
10     10  204.792563
11     11  211.884217
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('freidman2_sampled', 'SVR') Estimator 0.06339210052695658
    index  SQL_Estimator  Py_Estimator  SQL_Error
0       0     200.830740    200.901855  -0.071115
1       1     198.503709    198.579254  -0.075545
2       2     201.603764    201.662628  -0.058864
3       3     210.067924    209.988312   0.079613
4       4     210.883352    210.801331   0.082022
5       5     202.670760    202.710510  -0.039750
6       6     208.076631    208.018402   0.058229
7       7     198.647111    198.728531  -0.081420
8       8     198.722266    198.805557  -0.083291
9       9     210.730630    210.788940  -0.058310
10     10     204.792563    204.791534   0.001028
11     11     211.884217    211.812698   0.071518
MLLITE_REG_SQL_EXECUTION_STATUS ('freidman2_sampled', 'SVR', 'Failure')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
