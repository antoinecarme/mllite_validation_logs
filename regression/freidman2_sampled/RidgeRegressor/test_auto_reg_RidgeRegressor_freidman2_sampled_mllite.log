          X_0          X_1       X_2        X_3       target
0   17.761710   423.498320  0.135270  10.148129    59.976816
1   45.437614   168.841197  0.343817   3.279963    73.717247
2   69.792322   473.447926  0.233546   3.411073   130.755488
3   67.667095   938.672588  0.652046   9.523154   615.786950
4   55.118421  1002.086076  0.726658   4.570617   730.257013
5   52.067586   534.256140  0.155164   8.526538    97.892577
6   50.992903   814.561313  0.257439   5.994628   215.810735
7   34.347892   205.928122  0.720020   9.414677   152.198309
8   63.010204   221.354390  0.814630   5.897069   191.013194
9   22.605109  1660.837003  0.731124   9.374556  1214.488603
10  13.280703   643.716771  0.520814   4.842079   335.519300
11   7.606344  1112.226604  0.732761   6.140375   815.031479
MLLITE_MODEL_SET_OPTIONS RidgeRegressor None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeRegressor { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeRegressor { ,   , }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeRegressor None
('OPERATION_START', 'TRAINING')
[[1.77617092e+01 4.23498322e+02 1.35270208e-01 1.01481285e+01]
 [4.54376144e+01 1.68841202e+02 3.43817413e-01 3.27996254e+00]
 [6.97923203e+01 4.73447937e+02 2.33546272e-01 3.41107249e+00]
 [6.76670914e+01 9.38672607e+02 6.52046204e-01 9.52315426e+00]
 [5.51184196e+01 1.00208606e+03 7.26658285e-01 4.57061768e+00]] [ 59.976818  73.71725  130.7555   615.7869   730.257   ]
MLLITE_FIT_USING_MODEL mllite_ridge_reg.RidgeRegressor_ff4_ff4
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_REGRESSOR_FIT' 1 2
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_REGRESSOR_FIT' 2 2
('OPERATION_END_ELAPSED', 0.009, 'TRAINING')
{ ,   , }
{ ,   , }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W13", "signature" : "ff4_ff4"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 12, "dataset_features" : 4 },
	"equations" : {
			"intercept" : -232.170578,
			"coeffs" : [ -0.886536, 0.618438, 492.323822, -2.154232 ]
		}
}
WRITING_JSON_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_freidman2_sampled.json'

MLLITE_MODEL_SET_OPTIONS RidgeRegressor None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeRegressor { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeRegressor { ,   , }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeRegressor None
MLLITE_RELOADING_MODEL mllite_ridge_reg.RidgeRegressor_ff4_ff4
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W13", "signature" : "ff4_ff4"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 12, "dataset_features" : 4 },
	"equations" : {
			"intercept" : -232.170578,
			"coeffs" : [ -0.886536, 0.618438, 492.323822, -2.154232 ]
		}
}
BEAUTIFIED_JSON_START
{
	"dataset" : 	{
		"dataset_features" : 4,
		"dataset_rows" : 12
	},
	"equations" : 	{
		"coeffs" : [ -0.886536, 0.618438, 492.323822, -2.154232 ],
		"intercept" : -232.170578
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_ff4", "version" : "2024-W13" },
	"options" :  { "alpha" : 1.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
[  58.72567    -5.831211  106.38618   588.8534    686.59766   110.09649
  340.2074    198.93414   237.22081  1114.6683    400.13245   796.4567  ]
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
('OPERATION_START', 'PREDICT')
[  58.72582     -5.8311505  106.38636    588.8537     686.598
  110.0967     340.20767    198.93422    237.22089   1114.6688
  400.1327     796.45715  ]
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
MODEL_PERFS {'class_name': 'mllite.RidgeRegressor', 'model_name': 'RidgeRegressor', 'options': None, 'dataset': 'freidman2_sampled', 'size': 12, 'mse': 3665.1475, 'mae': 49.026173, 'mape': 0.24479006, 'r2': 0.9710253464562214}
WRITING_PERF_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_freidman2_sampled.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeRegressor', 'model_name': 'RidgeRegressor', 'options': None, 'dataset': 'freidman2_sampled', 'training_time_in_sec': 0.009, 'prediction_time_in_sec': 0.001}
WRITING_SQL_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_freidman2_sampled_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('freidman2_sampled', 'RidgeRegressor', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   -232.170578 + -0.886536 * t."X_0" + 0.618438 * t."X_1" + 492.323822 * t."X_2" + -2.154232 * t."X_3" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_FIRST_LINES_END ('freidman2_sampled', 'RidgeRegressor', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('freidman2_sampled', 'RidgeRegressor', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   -232.170578 + -0.886536 * t."X_0" + 0.618438 * t."X_1" + 492.323822 * t."X_2" + -2.154232 * t."X_3" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_LAST_LINES_END ('freidman2_sampled', 'RidgeRegressor', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 12 entries, 0 to 11
Data columns (total 4 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     12 non-null     float32
 1   X_1     12 non-null     float32
 2   X_2     12 non-null     float32
 3   X_3     12 non-null     float32
dtypes: float32(4)
memory usage: 288.0 bytes
             X_0          X_1       X_2        X_3
index                                             
0      17.761709   423.498322  0.135270  10.148129
1      45.437614   168.841202  0.343817   3.279963
2      69.792320   473.447937  0.233546   3.411072
3      67.667091   938.672607  0.652046   9.523154
4      55.118420  1002.086060  0.726658   4.570618
5      52.067585   534.256165  0.155164   8.526538
6      50.992905   814.561340  0.257439   5.994627
7      34.347893   205.928116  0.720020   9.414678
8      63.010204   221.354385  0.814630   5.897069
9      22.605108  1660.837036  0.731124   9.374556
10     13.280704   643.716797  0.520814   4.842079
11      7.606344  1112.226562  0.732761   6.140375
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 12 entries, 0 to 11
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      12 non-null     int64  
 1   Estimator  12 non-null     float64
dtypes: float64(1), int64(1)
memory usage: 324.0 bytes
    index    Estimator
0       0    58.725819
1       1    -5.831151
2       2   106.386360
3       3   588.853699
4       4   686.598022
5       5   110.096703
6       6   340.207672
7       7   198.934219
8       8   237.220886
9       9  1114.668823
10     10   400.132690
11     11   796.457153
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('freidman2_sampled', 'RidgeRegressor') Estimator 0.00023869673411051431
    index  SQL_Estimator  Py_Estimator  SQL_Error
0       0      58.725819     58.725670   0.000149
1       1      -5.831151     -5.831211   0.000061
2       2     106.386360    106.386177   0.000183
3       3     588.853699    588.853394   0.000305
4       4     686.598022    686.597656   0.000366
5       5     110.096703    110.096489   0.000214
6       6     340.207672    340.207397   0.000275
7       7     198.934219    198.934143   0.000076
8       8     237.220886    237.220810   0.000076
9       9    1114.668823   1114.668335   0.000488
10     10     400.132690    400.132446   0.000244
11     11     796.457153    796.456726   0.000427
MLLITE_REG_SQL_EXECUTION_STATUS ('freidman2_sampled', 'RidgeRegressor', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_freidman2_sampled_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('freidman2_sampled', 'RidgeRegressor', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   -232.170578 + -0.886536 * t."X_0" + 0.618438 * t."X_1" + 492.323822 * t."X_2" + -2.154232 * t."X_3" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_FIRST_LINES_END ('freidman2_sampled', 'RidgeRegressor', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('freidman2_sampled', 'RidgeRegressor', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   -232.170578 + -0.886536 * t."X_0" + 0.618438 * t."X_1" + 492.323822 * t."X_2" + -2.154232 * t."X_3" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_LAST_LINES_END ('freidman2_sampled', 'RidgeRegressor', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 12 entries, 0 to 11
Data columns (total 4 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     12 non-null     float32
 1   X_1     12 non-null     float32
 2   X_2     12 non-null     float32
 3   X_3     12 non-null     float32
dtypes: float32(4)
memory usage: 288.0 bytes
             X_0          X_1       X_2        X_3
index                                             
0      17.761709   423.498322  0.135270  10.148129
1      45.437614   168.841202  0.343817   3.279963
2      69.792320   473.447937  0.233546   3.411072
3      67.667091   938.672607  0.652046   9.523154
4      55.118420  1002.086060  0.726658   4.570618
5      52.067585   534.256165  0.155164   8.526538
6      50.992905   814.561340  0.257439   5.994627
7      34.347893   205.928116  0.720020   9.414678
8      63.010204   221.354385  0.814630   5.897069
9      22.605108  1660.837036  0.731124   9.374556
10     13.280704   643.716797  0.520814   4.842079
11      7.606344  1112.226562  0.732761   6.140375
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 12 entries, 0 to 11
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      12 non-null     int64  
 1   Estimator  12 non-null     float64
dtypes: float64(1), int64(1)
memory usage: 324.0 bytes
    index    Estimator
0       0    58.725805
1       1    -5.831141
2       2   106.386365
3       3   588.853715
4       4   686.598070
5       5   110.096705
6       6   340.207678
7       7   198.934206
8       8   237.220892
9       9  1114.668848
10     10   400.132678
11     11   796.457123
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('freidman2_sampled', 'RidgeRegressor') Estimator 0.00024269132847454244
    index  SQL_Estimator  Py_Estimator  SQL_Error
0       0      58.725805     58.725670   0.000135
1       1      -5.831141     -5.831211   0.000070
2       2     106.386365    106.386177   0.000187
3       3     588.853715    588.853394   0.000321
4       4     686.598070    686.597656   0.000414
5       5     110.096705    110.096489   0.000216
6       6     340.207678    340.207397   0.000281
7       7     198.934206    198.934143   0.000063
8       8     237.220892    237.220810   0.000082
9       9    1114.668848   1114.668335   0.000513
10     10     400.132678    400.132446   0.000232
11     11     796.457123    796.456726   0.000397
MLLITE_REG_SQL_EXECUTION_STATUS ('freidman2_sampled', 'RidgeRegressor', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_freidman2_sampled_pgsql.sql'



SQL_OUT_PUT_FIRST_LINES_START ('freidman2_sampled', 'RidgeRegressor', 'pgsql')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   -232.170578 + -0.886536 * t."X_0" + 0.618438 * t."X_1" + 492.323822 * t."X_2" + -2.154232 * t."X_3" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_FIRST_LINES_END ('freidman2_sampled', 'RidgeRegressor', 'pgsql')
SQL_OUT_PUT_LAST_LINES_START ('freidman2_sampled', 'RidgeRegressor', 'pgsql')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   -232.170578 + -0.886536 * t."X_0" + 0.618438 * t."X_1" + 492.323822 * t."X_2" + -2.154232 * t."X_3" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_LAST_LINES_END ('freidman2_sampled', 'RidgeRegressor', 'pgsql') 




COPY_TRAINING_DATA_TO_SQLITE_START
