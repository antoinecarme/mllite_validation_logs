          X_0          X_1       X_2        X_3    target
0   17.761710   423.498320  0.135270  10.148129  1.270144
1   45.437614   168.841197  0.343817   3.279963  0.906663
2   69.792322   473.447926  0.233546   3.411073  1.007753
3   67.667095   938.672588  0.652046   9.523154  1.460687
4   55.118421  1002.086076  0.726658   4.570617  1.495246
..        ...          ...       ...        ...       ...
59  82.923828  1535.997616  0.287537   7.396835  1.385201
60  17.167281  1104.656206  0.421381   6.591000  1.533932
61  48.198019   353.104245  0.725143  10.405507  1.384737
62  17.373148   483.680246  0.685229   2.728044  1.518426
63   7.321981   487.752848  0.993317   5.340956  1.555685

[64 rows x 5 columns]
MLLITE_MODEL_SET_OPTIONS RidgeRegressor {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeRegressor { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeRegressor { "alpha" : 0.0000001,   , }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeRegressor None
('OPERATION_START', 'TRAINING')
[[1.77617092e+01 4.23498322e+02 1.35270208e-01 1.01481285e+01]
 [4.54376144e+01 1.68841202e+02 3.43817413e-01 3.27996254e+00]
 [6.97923203e+01 4.73447937e+02 2.33546272e-01 3.41107249e+00]
 [6.76670914e+01 9.38672607e+02 6.52046204e-01 9.52315426e+00]
 [5.51184196e+01 1.00208606e+03 7.26658285e-01 4.57061768e+00]] [1.2701445 0.9066629 1.0077531 1.4606868 1.4952464]
MLLITE_FIT_USING_MODEL mllite_ridge_reg.RidgeRegressor_ff4_ff4
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_REGRESSOR_FIT' 1 2
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_REGRESSOR_FIT' 2 2
('OPERATION_END_ELAPSED', 0.009, 'TRAINING')
{ "alpha" : 0.0000001,   , }
{ "alpha" : 0.0000001,   , }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_ff4"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 4 },
	"equations" : {
			"intercept" : 0.981980,
			"coeffs" : [ -0.004656, 0.000230, 0.603277, 0.012646 ]
		}
}
WRITING_JSON_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_freidman3_small_option_1.json'

MLLITE_MODEL_SET_OPTIONS RidgeRegressor {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeRegressor { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeRegressor { "alpha" : 0.0000001,   , }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeRegressor None
MLLITE_RELOADING_MODEL mllite_ridge_reg.RidgeRegressor_ff4_ff4
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_ff4"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 4 },
	"equations" : {
			"intercept" : 0.981980,
			"coeffs" : [ -0.004656, 0.000230, 0.603277, 0.012646 ]
		}
}
BEAUTIFIED_JSON_START
{
	"dataset" : 	{
		"dataset_features" : 4,
		"dataset_rows" : 64
	},
	"equations" : 	{
		"coeffs" : [ -0.004656, 0.00023, 0.603277, 0.012646 ],
		"intercept" : 0.98198
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_ff4", "version" : "2024-W12" },
	"options" :  { "alpha" : 0.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
[1.2068241  1.0582136  0.9501477  1.3970366  1.4524654  1.0641025
 1.1633935  1.4229357  1.3056183  1.8191392  1.4439343  1.7226217
 1.4115119  1.2961951  1.5898197  1.272998   1.058096   1.2830685
 0.76979053 1.1363089  1.1282405  1.1872151  1.6702489  0.80604243
 1.6922191  1.6170591  1.5484197  1.4927605  1.210181   1.2530631
 1.3872731  1.2486656  1.235621   1.4227934  1.3701631  1.0093247
 1.2470084  1.5887432  1.2034678  0.8462189  1.987013   1.3178701
 1.1022105  1.5753216  1.413993   1.1104058  1.6472819  1.1124266
 1.296706   1.2149678  1.478481   1.4025064  1.4575402  1.2060009
 1.2683796  1.0644882  1.4545449  1.2749122  0.891293   1.216878
 1.4942075  1.407986   1.4604455  1.7270932 ]
('OPERATION_END_ELAPSED', 0.002, 'PREDICT')
('OPERATION_START', 'PREDICT')
[1.2066247  1.0581515  0.94994956 1.396611   1.4520047  1.0638657
 1.1630213  1.4228493  1.3055382  1.8183442  1.443628   1.7220861
 1.4109732  1.2959155  1.5890638  1.272374   1.0577927  1.282254
 0.7696104  1.1362027  1.1280112  1.1871347  1.6697863  0.8056621
 1.6918921  1.6165057  1.5479823  1.4924239  1.2099712  1.2528514
 1.386729   1.2481661  1.2353652  1.4224654  1.3695132  1.0090182
 1.2467867  1.5884914  1.2031764  0.84619874 1.9862472  1.3178014
 1.1019036  1.5745786  1.4132437  1.1101768  1.6468658  1.111855
 1.2964326  1.214732   1.477833   1.4021404  1.4571149  1.2056814
 1.26759    1.0642986  1.4539577  1.2747879  0.8908236  1.2161713
 1.4936796  1.4078343  1.4602187  1.7268592 ]
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
MODEL_PERFS {'class_name': 'mllite.RidgeRegressor', 'model_name': 'RidgeRegressor', 'options': '{"alpha" : 0.0000001}', 'dataset': 'freidman3_small', 'size': 64, 'mse': 0.03823901, 'mae': 0.14293182, 'mape': 0.72590494, 'r2': 0.6088813381891978}
WRITING_PERF_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_freidman3_small_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeRegressor', 'model_name': 'RidgeRegressor', 'options': '{"alpha" : 0.0000001}', 'dataset': 'freidman3_small', 'training_time_in_sec': 0.009, 'prediction_time_in_sec': 0.001}
WRITING_SQL_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_freidman3_small_option_1.sql'



SQL_OUT_PUT_FIRST_LINES_START
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  model_input."index" AS "index",
   0.981980 + -0.004656 * X_0 + 0.000230 * X_1 + 0.603277 * X_2 + 0.012646 * X_3 AS "Estimator"
  FROM model_input
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_FIRST_LINES_END
SQL_OUT_PUT_LAST_LINES_START
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  model_input."index" AS "index",
   0.981980 + -0.004656 * X_0 + 0.000230 * X_1 + 0.603277 * X_2 + 0.012646 * X_3 AS "Estimator"
  FROM model_input
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_LAST_LINES_END




COPY_TRAINING_DATA_TO_SQLITE_START
          X_0          X_1       X_2        X_3  KEY
0   17.761709   423.498322  0.135270  10.148129    0
1   45.437614   168.841202  0.343817   3.279963    1
2   69.792320   473.447937  0.233546   3.411072    2
3   67.667091   938.672607  0.652046   9.523154    3
4   55.118420  1002.086060  0.726658   4.570618    4
..        ...          ...       ...        ...  ...
59  82.923828  1535.997559  0.287537   7.396835   59
60  17.167280  1104.656250  0.421381   6.591000   60
61  48.198017   353.104248  0.725143  10.405507   61
62  17.373148   483.680237  0.685229   2.728044   62
63   7.321981   487.752838  0.993317   5.340956   63

[64 rows x 5 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
    index  Estimator
0       0   1.206625
1       1   1.058151
2       2   0.949949
3       3   1.396611
4       4   1.452005
..    ...        ...
59     59   1.216171
60     60   1.493680
61     61   1.407834
62     62   1.460219
63     63   1.726859

[64 rows x 2 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
    index  SQL_Estimator  Py_Estimator
48     48       1.296433      1.296706
49     49       1.214732      1.214968
50     50       1.477833      1.478481
51     51       1.402140      1.402506
52     52       1.457115      1.457540
53     53       1.205681      1.206001
54     54       1.267590      1.268380
55     55       1.064299      1.064488
56     56       1.453958      1.454545
57     57       1.274788      1.274912
58     58       0.890824      0.891293
59     59       1.216171      1.216878
60     60       1.493680      1.494208
61     61       1.407834      1.407986
62     62       1.460219      1.460446
63     63       1.726859      1.727093
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
