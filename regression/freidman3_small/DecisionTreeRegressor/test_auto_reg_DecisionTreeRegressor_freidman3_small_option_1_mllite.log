          X_0          X_1       X_2        X_3    target
0   17.761710   423.498320  0.135270  10.148129  1.270144
1   45.437614   168.841197  0.343817   3.279963  0.906663
2   69.792322   473.447926  0.233546   3.411073  1.007753
3   67.667095   938.672588  0.652046   9.523154  1.460687
4   55.118421  1002.086076  0.726658   4.570617  1.495246
..        ...          ...       ...        ...       ...
59  82.923828  1535.997616  0.287537   7.396835  1.385201
60  17.167281  1104.656206  0.421381   6.591000  1.533932
61  48.198019   353.104245  0.725143  10.405507  1.384737
62  17.373148   483.680246  0.685229   2.728044  1.518426
63   7.321981   487.752848  0.993317   5.340956  1.555685

[64 rows x 5 columns]
MLLITE_MODEL_SET_OPTIONS DecisionTreeRegressor {"max_depth" : 6, "max_leaf_nodes" : 32}
MLLITE_MODEL_OPTIONS_DEFAULT DecisionTreeRegressor { "max_leaf_nodes" : 64}
MLLITE_MODEL_OPTIONS_AFTER_SETTING DecisionTreeRegressor { "max_depth" : 6, "max_leaf_nodes" : 32,  "max_leaf_nodes" : 64 , }
MLLITE_MODEL_JSON_AFTER_SETTING DecisionTreeRegressor None
('OPERATION_START', 'TRAINING')
[[1.77617092e+01 4.23498322e+02 1.35270208e-01 1.01481285e+01]
 [4.54376144e+01 1.68841202e+02 3.43817413e-01 3.27996254e+00]
 [6.97923203e+01 4.73447937e+02 2.33546272e-01 3.41107249e+00]
 [6.76670914e+01 9.38672607e+02 6.52046204e-01 9.52315426e+00]
 [5.51184196e+01 1.00208606e+03 7.26658285e-01 4.57061768e+00]] [1.2701445 0.9066629 1.0077531 1.4606868 1.4952464]
MLLITE_FIT_USING_MODEL mllite_decision_tree_reg.DecisionTreeRegressor_ff4_ff4
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_REGRESSOR_FIT' 1 3
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 0 6
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_REGRESSOR_FIT' 2 3
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_REGRESSOR_FIT' 3 3
('OPERATION_END_ELAPSED', 0.007, 'TRAINING')
{ "max_depth" : 6, "max_leaf_nodes" : 32,  "max_leaf_nodes" : 64 , }
{ "max_depth" : 6, "max_leaf_nodes" : 32,  "max_leaf_nodes" : 64 , }
{
	"metadata" : { "model" : "Breiman_CART", "version" : "2024-W13", "signature" : "ff4_ff4"},
	"options" : { "ccp_alpha" : 0.000000, "criterion" : "", "max_depth" : 6, "max_features" : null, "max_leaf_nodes" : 32, "min_impurity_decrease" : 0.000000, "min_samples_leaf" : 1, "min_samples_split" : 2, "min_weight_fraction_leaf" : 0.000000, "random_state" : 1789, "splitter" : "best" },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 4 },
	"tree" : {
	"features" : 4,
	"outputs" : 1,
	"max_depth" : 5,
	"node_count" : 37,
	"nodes" : {
		"node_00" : {"left" : 1, "right" : 2, "feature" : 2, "threshold" : 0.046038, "impurity" : 0.097769, "n_samples" : 64, "w_samples" : 64.000000, "value" : [1.321436]},
		"node_01" : {"left" : 3, "right" : 4, "feature" : 2, "threshold" : 0.037129, "impurity" : 0.030772, "n_samples" : 3, "w_samples" : 3.000000, "value" : [0.224450]},
		"node_02" : {"left" : 5, "right" : 6, "feature" : 1, "threshold" : 187.384659, "impurity" : 0.038970, "n_samples" : 61, "w_samples" : 61.000000, "value" : [1.375386]},
		"node_03" : {"left" : 9, "right" : 10, "feature" : 2, "threshold" : 0.018615, "impurity" : 0.008217, "n_samples" : 2, "w_samples" : 2.000000, "value" : [0.111990]},
		"node_04" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.449370]},
		"node_05" : {"left" : 7, "right" : 8, "feature" : 0, "threshold" : 71.489639, "impurity" : 0.051229, "n_samples" : 2, "w_samples" : 2.000000, "value" : [0.680325]},
		"node_06" : {"left" : 11, "right" : 12, "feature" : 2, "threshold" : 0.260938, "impurity" : 0.021622, "n_samples" : 59, "w_samples" : 59.000000, "value" : [1.398947]},
		"node_07" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.906663]},
		"node_08" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : -0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.453986]},
		"node_09" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.021344]},
		"node_10" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.202636]},
		"node_11" : {"left" : 13, "right" : 14, "feature" : 0, "threshold" : 16.442682, "impurity" : 0.028229, "n_samples" : 13, "w_samples" : 13.000000, "value" : [1.245007]},
		"node_12" : {"left" : 15, "right" : 16, "feature" : 1, "threshold" : 340.413940, "impurity" : 0.011167, "n_samples" : 46, "w_samples" : 46.000000, "value" : [1.442452]},
		"node_13" : {"left" : 23, "right" : 24, "feature" : 0, "threshold" : 14.603495, "impurity" : 0.004584, "n_samples" : 4, "w_samples" : 4.000000, "value" : [1.436332]},
		"node_14" : {"left" : 17, "right" : 18, "feature" : 0, "threshold" : 51.530243, "impurity" : 0.015239, "n_samples" : 9, "w_samples" : 9.000000, "value" : [1.159974]},
		"node_15" : {"left" : 29, "right" : 30, "feature" : 0, "threshold" : 44.843964, "impurity" : 0.003132, "n_samples" : 6, "w_samples" : 6.000000, "value" : [1.237995]},
		"node_16" : {"left" : 25, "right" : 26, "feature" : 0, "threshold" : 36.854443, "impurity" : 0.005162, "n_samples" : 40, "w_samples" : 40.000000, "value" : [1.473121]},
		"node_17" : {"left" : 21, "right" : 22, "feature" : 3, "threshold" : 10.289057, "impurity" : 0.008171, "n_samples" : 5, "w_samples" : 5.000000, "value" : [1.229870]},
		"node_18" : {"left" : 19, "right" : 20, "feature" : 0, "threshold" : 79.828445, "impurity" : 0.010331, "n_samples" : 4, "w_samples" : 4.000000, "value" : [1.072603]},
		"node_19" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000054, "n_samples" : 3, "w_samples" : 3.000000, "value" : [1.014036]},
		"node_20" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.248302]},
		"node_21" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.002443, "n_samples" : 4, "w_samples" : 4.000000, "value" : [1.269293]},
		"node_22" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : -0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.072180]},
		"node_23" : {"left" : 33, "right" : 34, "feature" : 1, "threshold" : 903.066650, "impurity" : 0.000554, "n_samples" : 3, "w_samples" : 3.000000, "value" : [1.473608]},
		"node_24" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : -0.000001, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.324506]},
		"node_25" : {"left" : 35, "right" : 36, "feature" : 0, "threshold" : 23.623474, "impurity" : 0.000616, "n_samples" : 16, "w_samples" : 16.000000, "value" : [1.535861]},
		"node_26" : {"left" : 27, "right" : 28, "feature" : 1, "threshold" : 730.325134, "impurity" : 0.003817, "n_samples" : 24, "w_samples" : 24.000000, "value" : [1.431295]},
		"node_27" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.001312, "n_samples" : 10, "w_samples" : 10.000000, "value" : [1.372742]},
		"node_28" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.001406, "n_samples" : 14, "w_samples" : 14.000000, "value" : [1.473118]},
		"node_29" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.343157]},
		"node_30" : {"left" : 31, "right" : 32, "feature" : 2, "threshold" : 0.658563, "impurity" : 0.001104, "n_samples" : 5, "w_samples" : 5.000000, "value" : [1.216963]},
		"node_31" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.159392]},
		"node_32" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000345, "n_samples" : 4, "w_samples" : 4.000000, "value" : [1.231356]},
		"node_33" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000128, "n_samples" : 2, "w_samples" : 2.000000, "value" : [1.458304]},
		"node_34" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.504214]},
		"node_35" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000257, "n_samples" : 13, "w_samples" : 13.000000, "value" : [1.544874]},
		"node_36" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000294, "n_samples" : 3, "w_samples" : 3.000000, "value" : [1.496801]}
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/regression/DecisionTreeRegressor/mllite.DecisionTreeRegressor_freidman3_small_option_1.json'

MLLITE_MODEL_SET_OPTIONS DecisionTreeRegressor {"max_depth" : 6, "max_leaf_nodes" : 32}
MLLITE_MODEL_OPTIONS_DEFAULT DecisionTreeRegressor { "max_leaf_nodes" : 64}
MLLITE_MODEL_OPTIONS_AFTER_SETTING DecisionTreeRegressor { "max_depth" : 6, "max_leaf_nodes" : 32,  "max_leaf_nodes" : 64 , }
MLLITE_MODEL_JSON_AFTER_SETTING DecisionTreeRegressor None
MLLITE_RELOADING_MODEL mllite_decision_tree_reg.DecisionTreeRegressor_ff4_ff4
{
	"metadata" : { "model" : "Breiman_CART", "version" : "2024-W13", "signature" : "ff4_ff4"},
	"options" : { "ccp_alpha" : 0.000000, "criterion" : "", "max_depth" : 6, "max_features" : null, "max_leaf_nodes" : 32, "min_impurity_decrease" : 0.000000, "min_samples_leaf" : 1, "min_samples_split" : 2, "min_weight_fraction_leaf" : 0.000000, "random_state" : 1789, "splitter" : "best" },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 4 },
	"tree" : {
	"features" : 4,
	"outputs" : 1,
	"max_depth" : 5,
	"node_count" : 37,
	"nodes" : {
		"node_00" : {"left" : 1, "right" : 2, "feature" : 2, "threshold" : 0.046038, "impurity" : 0.097769, "n_samples" : 64, "w_samples" : 64.000000, "value" : [1.321436]},
		"node_01" : {"left" : 3, "right" : 4, "feature" : 2, "threshold" : 0.037129, "impurity" : 0.030772, "n_samples" : 3, "w_samples" : 3.000000, "value" : [0.224450]},
		"node_02" : {"left" : 5, "right" : 6, "feature" : 1, "threshold" : 187.384659, "impurity" : 0.038970, "n_samples" : 61, "w_samples" : 61.000000, "value" : [1.375386]},
		"node_03" : {"left" : 9, "right" : 10, "feature" : 2, "threshold" : 0.018615, "impurity" : 0.008217, "n_samples" : 2, "w_samples" : 2.000000, "value" : [0.111990]},
		"node_04" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.449370]},
		"node_05" : {"left" : 7, "right" : 8, "feature" : 0, "threshold" : 71.489639, "impurity" : 0.051229, "n_samples" : 2, "w_samples" : 2.000000, "value" : [0.680325]},
		"node_06" : {"left" : 11, "right" : 12, "feature" : 2, "threshold" : 0.260938, "impurity" : 0.021622, "n_samples" : 59, "w_samples" : 59.000000, "value" : [1.398947]},
		"node_07" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.906663]},
		"node_08" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : -0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.453986]},
		"node_09" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.021344]},
		"node_10" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.202636]},
		"node_11" : {"left" : 13, "right" : 14, "feature" : 0, "threshold" : 16.442682, "impurity" : 0.028229, "n_samples" : 13, "w_samples" : 13.000000, "value" : [1.245007]},
		"node_12" : {"left" : 15, "right" : 16, "feature" : 1, "threshold" : 340.413940, "impurity" : 0.011167, "n_samples" : 46, "w_samples" : 46.000000, "value" : [1.442452]},
		"node_13" : {"left" : 23, "right" : 24, "feature" : 0, "threshold" : 14.603495, "impurity" : 0.004584, "n_samples" : 4, "w_samples" : 4.000000, "value" : [1.436332]},
		"node_14" : {"left" : 17, "right" : 18, "feature" : 0, "threshold" : 51.530243, "impurity" : 0.015239, "n_samples" : 9, "w_samples" : 9.000000, "value" : [1.159974]},
		"node_15" : {"left" : 29, "right" : 30, "feature" : 0, "threshold" : 44.843964, "impurity" : 0.003132, "n_samples" : 6, "w_samples" : 6.000000, "value" : [1.237995]},
		"node_16" : {"left" : 25, "right" : 26, "feature" : 0, "threshold" : 36.854443, "impurity" : 0.005162, "n_samples" : 40, "w_samples" : 40.000000, "value" : [1.473121]},
		"node_17" : {"left" : 21, "right" : 22, "feature" : 3, "threshold" : 10.289057, "impurity" : 0.008171, "n_samples" : 5, "w_samples" : 5.000000, "value" : [1.229870]},
		"node_18" : {"left" : 19, "right" : 20, "feature" : 0, "threshold" : 79.828445, "impurity" : 0.010331, "n_samples" : 4, "w_samples" : 4.000000, "value" : [1.072603]},
		"node_19" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000054, "n_samples" : 3, "w_samples" : 3.000000, "value" : [1.014036]},
		"node_20" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.248302]},
		"node_21" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.002443, "n_samples" : 4, "w_samples" : 4.000000, "value" : [1.269293]},
		"node_22" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : -0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.072180]},
		"node_23" : {"left" : 33, "right" : 34, "feature" : 1, "threshold" : 903.066650, "impurity" : 0.000554, "n_samples" : 3, "w_samples" : 3.000000, "value" : [1.473608]},
		"node_24" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : -0.000001, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.324506]},
		"node_25" : {"left" : 35, "right" : 36, "feature" : 0, "threshold" : 23.623474, "impurity" : 0.000616, "n_samples" : 16, "w_samples" : 16.000000, "value" : [1.535861]},
		"node_26" : {"left" : 27, "right" : 28, "feature" : 1, "threshold" : 730.325134, "impurity" : 0.003817, "n_samples" : 24, "w_samples" : 24.000000, "value" : [1.431295]},
		"node_27" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.001312, "n_samples" : 10, "w_samples" : 10.000000, "value" : [1.372742]},
		"node_28" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.001406, "n_samples" : 14, "w_samples" : 14.000000, "value" : [1.473118]},
		"node_29" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.343157]},
		"node_30" : {"left" : 31, "right" : 32, "feature" : 2, "threshold" : 0.658563, "impurity" : 0.001104, "n_samples" : 5, "w_samples" : 5.000000, "value" : [1.216963]},
		"node_31" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.159392]},
		"node_32" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000345, "n_samples" : 4, "w_samples" : 4.000000, "value" : [1.231356]},
		"node_33" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000128, "n_samples" : 2, "w_samples" : 2.000000, "value" : [1.458304]},
		"node_34" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.504214]},
		"node_35" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000257, "n_samples" : 13, "w_samples" : 13.000000, "value" : [1.544874]},
		"node_36" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000294, "n_samples" : 3, "w_samples" : 3.000000, "value" : [1.496801]}
		}
	}
}
BEAUTIFIED_JSON_START
{
	"dataset" : 	{
		"dataset_features" : 4,
		"dataset_rows" : 64
	},
	"metadata" :  { "model" : "Breiman_CART", "signature" : "ff4_ff4", "version" : "2024-W13" },
	"options" :  { "ccp_alpha" : 0.0, "criterion" : "", "max_depth" : 6, "max_features" : null, "max_leaf_nodes" : 32, "min_impurity_decrease" : 0.0, "min_samples_leaf" : 1, "min_samples_split" : 2, "min_weight_fraction_leaf" : 0.0, "random_state" : 1789, "splitter" : "best" },
	"tree" : 	{
		"features" : 4,
		"max_depth" : 5,
		"node_count" : 37,
		"nodes" : 	{
			"node_00" :  { "feature" : 2, "impurity" : 0.097769, "left" : 1, "n_samples" : 64, "right" : 2, "threshold" : 0.046038, "value" : [ 1.321436 ], "w_samples" : 64.0 },
			"node_01" :  { "feature" : 2, "impurity" : 0.030772, "left" : 3, "n_samples" : 3, "right" : 4, "threshold" : 0.037129, "value" : [ 0.22445 ], "w_samples" : 3.0 },
			"node_02" :  { "feature" : 1, "impurity" : 0.03897, "left" : 5, "n_samples" : 61, "right" : 6, "threshold" : 187.384659, "value" : [ 1.375386 ], "w_samples" : 61.0 },
			"node_03" :  { "feature" : 2, "impurity" : 0.008217, "left" : 9, "n_samples" : 2, "right" : 10, "threshold" : 0.018615, "value" : [ 0.11199 ], "w_samples" : 2.0 },
			"node_04" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 0.44937 ], "w_samples" : 1.0 },
			"node_05" :  { "feature" : 0, "impurity" : 0.051229, "left" : 7, "n_samples" : 2, "right" : 8, "threshold" : 71.489639, "value" : [ 0.680325 ], "w_samples" : 2.0 },
			"node_06" :  { "feature" : 2, "impurity" : 0.021622, "left" : 11, "n_samples" : 59, "right" : 12, "threshold" : 0.260938, "value" : [ 1.398947 ], "w_samples" : 59.0 },
			"node_07" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 0.906663 ], "w_samples" : 1.0 },
			"node_08" :  { "feature" : null, "impurity" : -0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 0.453986 ], "w_samples" : 1.0 },
			"node_09" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 0.021344 ], "w_samples" : 1.0 },
			"node_10" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 0.202636 ], "w_samples" : 1.0 },
			"node_11" :  { "feature" : 0, "impurity" : 0.028229, "left" : 13, "n_samples" : 13, "right" : 14, "threshold" : 16.442682, "value" : [ 1.245007 ], "w_samples" : 13.0 },
			"node_12" :  { "feature" : 1, "impurity" : 0.011167, "left" : 15, "n_samples" : 46, "right" : 16, "threshold" : 340.41394, "value" : [ 1.442452 ], "w_samples" : 46.0 },
			"node_13" :  { "feature" : 0, "impurity" : 0.004584, "left" : 23, "n_samples" : 4, "right" : 24, "threshold" : 14.603495, "value" : [ 1.436332 ], "w_samples" : 4.0 },
			"node_14" :  { "feature" : 0, "impurity" : 0.015239, "left" : 17, "n_samples" : 9, "right" : 18, "threshold" : 51.530243, "value" : [ 1.159974 ], "w_samples" : 9.0 },
			"node_15" :  { "feature" : 0, "impurity" : 0.003132, "left" : 29, "n_samples" : 6, "right" : 30, "threshold" : 44.843964, "value" : [ 1.237995 ], "w_samples" : 6.0 },
			"node_16" :  { "feature" : 0, "impurity" : 0.005162, "left" : 25, "n_samples" : 40, "right" : 26, "threshold" : 36.854443, "value" : [ 1.473121 ], "w_samples" : 40.0 },
			"node_17" :  { "feature" : 3, "impurity" : 0.008171, "left" : 21, "n_samples" : 5, "right" : 22, "threshold" : 10.289057, "value" : [ 1.22987 ], "w_samples" : 5.0 },
			"node_18" :  { "feature" : 0, "impurity" : 0.010331, "left" : 19, "n_samples" : 4, "right" : 20, "threshold" : 79.828445, "value" : [ 1.072603 ], "w_samples" : 4.0 },
			"node_19" :  { "feature" : null, "impurity" : 5.4e-05, "left" : null, "n_samples" : 3, "right" : null, "threshold" : null, "value" : [ 1.014036 ], "w_samples" : 3.0 },
			"node_20" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 1.248302 ], "w_samples" : 1.0 },
			"node_21" :  { "feature" : null, "impurity" : 0.002443, "left" : null, "n_samples" : 4, "right" : null, "threshold" : null, "value" : [ 1.269293 ], "w_samples" : 4.0 },
			"node_22" :  { "feature" : null, "impurity" : -0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 1.07218 ], "w_samples" : 1.0 },
			"node_23" :  { "feature" : 1, "impurity" : 0.000554, "left" : 33, "n_samples" : 3, "right" : 34, "threshold" : 903.06665, "value" : [ 1.473608 ], "w_samples" : 3.0 },
			"node_24" :  { "feature" : null, "impurity" : -1e-06, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 1.324506 ], "w_samples" : 1.0 },
			"node_25" :  { "feature" : 0, "impurity" : 0.000616, "left" : 35, "n_samples" : 16, "right" : 36, "threshold" : 23.623474, "value" : [ 1.535861 ], "w_samples" : 16.0 },
			"node_26" :  { "feature" : 1, "impurity" : 0.003817, "left" : 27, "n_samples" : 24, "right" : 28, "threshold" : 730.325134, "value" : [ 1.431295 ], "w_samples" : 24.0 },
			"node_27" :  { "feature" : null, "impurity" : 0.001312, "left" : null, "n_samples" : 10, "right" : null, "threshold" : null, "value" : [ 1.372742 ], "w_samples" : 10.0 },
			"node_28" :  { "feature" : null, "impurity" : 0.001406, "left" : null, "n_samples" : 14, "right" : null, "threshold" : null, "value" : [ 1.473118 ], "w_samples" : 14.0 },
			"node_29" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 1.343157 ], "w_samples" : 1.0 },
			"node_30" :  { "feature" : 2, "impurity" : 0.001104, "left" : 31, "n_samples" : 5, "right" : 32, "threshold" : 0.658563, "value" : [ 1.216963 ], "w_samples" : 5.0 },
			"node_31" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 1.159392 ], "w_samples" : 1.0 },
			"node_32" :  { "feature" : null, "impurity" : 0.000345, "left" : null, "n_samples" : 4, "right" : null, "threshold" : null, "value" : [ 1.231356 ], "w_samples" : 4.0 },
			"node_33" :  { "feature" : null, "impurity" : 0.000128, "left" : null, "n_samples" : 2, "right" : null, "threshold" : null, "value" : [ 1.458304 ], "w_samples" : 2.0 },
			"node_34" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 1.504214 ], "w_samples" : 1.0 },
			"node_35" :  { "feature" : null, "impurity" : 0.000257, "left" : null, "n_samples" : 13, "right" : null, "threshold" : null, "value" : [ 1.544874 ], "w_samples" : 13.0 },
			"node_36" :  { "feature" : null, "impurity" : 0.000294, "left" : null, "n_samples" : 3, "right" : null, "threshold" : null, "value" : [ 1.496801 ], "w_samples" : 3.0 }
		},
		"outputs" : 1
	}
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
[1.269293   0.9066629  1.014036   1.473118   1.473118   1.014036
 1.269293   1.3431568  1.2313558  1.5448741  1.5448741  1.5448741
 1.473118   1.3727422  1.5448741  1.0721802  1.3727422  1.473118
 0.20263635 1.2313558  1.3245057  1.159392   1.5448741  0.02134389
 1.5448741  1.5448741  1.4968008  1.473118   1.3727422  1.4583044
 1.5042138  1.473118   1.3727422  1.473118   1.473118   1.014036
 1.3727422  1.5448741  1.3727422  0.45398647 1.5448741  1.2313558
 1.269293   1.473118   1.473118   1.3727422  1.473118   1.2483021
 1.3727422  1.3727422  1.4968008  1.4968008  1.5448741  1.4583044
 1.473118   1.269293   1.473118   1.2313558  0.44937    1.473118
 1.5448741  1.3727422  1.5448741  1.5448741 ]
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
('OPERATION_START', 'PREDICT')
[1.269293 0.906663 1.014036 1.473118 1.473118 1.014036 1.269293 1.343157
 1.231356 1.544874 1.544874 1.544874 1.473118 1.372742 1.544874 1.07218
 1.372742 1.473118 0.202636 1.231356 1.324506 1.159392 1.544874 0.021344
 1.544874 1.544874 1.496801 1.473118 1.372742 1.458304 1.504214 1.473118
 1.372742 1.473118 1.473118 1.014036 1.372742 1.544874 1.372742 0.453986
 1.544874 1.231356 1.269293 1.473118 1.473118 1.372742 1.473118 1.248302
 1.372742 1.372742 1.496801 1.496801 1.544874 1.458304 1.473118 1.269293
 1.473118 1.231356 0.44937  1.473118 1.544874 1.372742 1.544874 1.544874]
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
MODEL_PERFS {'class_name': 'mllite.DecisionTreeRegressor', 'model_name': 'DecisionTreeRegressor', 'options': '{"max_depth" : 6, "max_leaf_nodes" : 32}', 'dataset': 'freidman3_small', 'size': 64, 'mse': 0.00075941987, 'mae': 0.019129762, 'mape': 0.013692396, 'r2': 0.9922324537966102}
WRITING_PERF_CODE 'logs/auto_tests/regression/DecisionTreeRegressor/mllite.DecisionTreeRegressor_freidman3_small_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.DecisionTreeRegressor', 'model_name': 'DecisionTreeRegressor', 'options': '{"max_depth" : 6, "max_leaf_nodes" : 32}', 'dataset': 'freidman3_small', 'training_time_in_sec': 0.007, 'prediction_time_in_sec': 0.001}
WRITING_SQL_CODE 'logs/auto_tests/regression/DecisionTreeRegressor/mllite.DecisionTreeRegressor_freidman3_small_option_1_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('freidman3_small', 'DecisionTreeRegressor', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
"DT_node_lookup" AS 
 (SELECT
    model_input."index" AS "index",
    CASE WHEN (model_input."X_2" <= 0.046038) THEN CASE WHEN (model_input."X_2" <= 0.037129) THEN CASE WHEN (model_input."X_2" <= 0.018615) THEN 9 ELSE 10 END ELSE 4 END ELSE CASE WHEN (model_input."X_1" <= 187.384659) THEN CASE WHEN (model_input."X_0" <= 71.489639) THEN 7 ELSE 8 END ELSE CASE WHEN (model_input."X_2" <= 0.260938) THEN CASE WHEN (model_input."X_0" <= 16.442682) THEN CASE WHEN (model_input."X_0" <= 14.603495) THEN CASE WHEN (model_input."X_1" <= 903.066650) THEN 33 ELSE 34 END ELSE 24 END ELSE CASE WHEN (model_input."X_0" <= 51.530243) THEN CASE WHEN (model_input."X_3" <= 10.289057) THEN 21 ELSE 22 END ELSE CASE WHEN (model_input."X_0" <= 79.828445) THEN 19 ELSE 20 END END END ELSE CAS
SQL_OUT_PUT_FIRST_LINES_END ('freidman3_small', 'DecisionTreeRegressor', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('freidman3_small', 'DecisionTreeRegressor', 'duckdb')
d, 1.473608 AS "E"
    UNION ALL
    SELECT 24 AS nid, 1.324506 AS "E"
    UNION ALL
    SELECT 25 AS nid, 1.535861 AS "E"
    UNION ALL
    SELECT 26 AS nid, 1.431295 AS "E"
    UNION ALL
    SELECT 27 AS nid, 1.372742 AS "E"
    UNION ALL
    SELECT 28 AS nid, 1.473118 AS "E"
    UNION ALL
    SELECT 29 AS nid, 1.343157 AS "E"
    UNION ALL
    SELECT 30 AS nid, 1.216963 AS "E"
    UNION ALL
    SELECT 31 AS nid, 1.159392 AS "E"
    UNION ALL
    SELECT 32 AS nid, 1.231356 AS "E"
    UNION ALL
    SELECT 33 AS nid, 1.458304 AS "E"
    UNION ALL
    SELECT 34 AS nid, 1.504214 AS "E"
    UNION ALL
    SELECT 35 AS nid, 1.544874 AS "E"
    UNION ALL
    SELECT 36 AS nid, 1.496801 AS "E"
  ) AS "Values"
 ),
"DT_Output" AS 
 (SELECT
   t1."index" AS "index",
   t1.node_id AS node_id,
   t2.nid AS nid,
   t2."E" AS "E"
  FROM
   "DT_node_lookup" AS t1
   LEFT OUTER JOIN
   "DT_node_data" AS t2
   ON t1.node_id = t2.nid
 )
SELECT
   "DT_Output"."index" AS "index",
   "DT_Output"."E" AS "Estimator"
FROM "DT_Output"
SQL_OUT_PUT_LAST_LINES_END ('freidman3_small', 'DecisionTreeRegressor', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 64 entries, 0 to 63
Data columns (total 4 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     64 non-null     float32
 1   X_1     64 non-null     float32
 2   X_2     64 non-null     float32
 3   X_3     64 non-null     float32
dtypes: float32(4)
memory usage: 1.5 KB
             X_0          X_1       X_2        X_3
index                                             
0      17.761709   423.498322  0.135270  10.148129
1      45.437614   168.841202  0.343817   3.279963
2      69.792320   473.447937  0.233546   3.411072
3      67.667091   938.672607  0.652046   9.523154
4      55.118420  1002.086060  0.726658   4.570618
...          ...          ...       ...        ...
59     82.923828  1535.997559  0.287537   7.396835
60     17.167280  1104.656250  0.421381   6.591000
61     48.198017   353.104248  0.725143  10.405507
62     17.373148   483.680237  0.685229   2.728044
63      7.321981   487.752838  0.993317   5.340956

[64 rows x 4 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 64 entries, 0 to 63
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      64 non-null     int64  
 1   Estimator  64 non-null     float64
dtypes: float64(1), int64(1)
memory usage: 1.1 KB
    index  Estimator
0       0   1.269293
1       1   0.906663
2       2   1.014036
3       3   1.473118
4       4   1.473118
..    ...        ...
59     59   1.473118
60     60   1.544874
61     61   1.372742
62     62   1.544874
63     63   1.544874

[64 rows x 2 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('freidman3_small', 'DecisionTreeRegressor') Estimator 1.268176082297955e-07
    index  SQL_Estimator  Py_Estimator     SQL_Error
48     48       1.372742      1.372742 -1.760559e-07
49     49       1.372742      1.372742 -1.760559e-07
50     50       1.496801      1.496801  2.197037e-07
51     51       1.496801      1.496801  2.197037e-07
52     52       1.544874      1.544874 -7.207489e-08
53     53       1.458304      1.458304 -4.052124e-07
54     54       1.473118      1.473118  5.242157e-08
55     55       1.269293      1.269293  4.936981e-08
56     56       1.473118      1.473118  5.242157e-08
57     57       1.231356      1.231356  2.136765e-07
58     58       0.449370      0.449370  3.213882e-09
59     59       1.473118      1.473118  5.242157e-08
60     60       1.544874      1.544874 -7.207489e-08
61     61       1.372742      1.372742 -1.760559e-07
62     62       1.544874      1.544874 -7.207489e-08
63     63       1.544874      1.544874 -7.207489e-08
MLLITE_REG_SQL_EXECUTION_STATUS ('freidman3_small', 'DecisionTreeRegressor', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/regression/DecisionTreeRegressor/mllite.DecisionTreeRegressor_freidman3_small_option_1_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('freidman3_small', 'DecisionTreeRegressor', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
"DT_node_lookup" AS 
 (SELECT
    model_input."index" AS "index",
    CASE WHEN (model_input."X_2" <= 0.046038) THEN CASE WHEN (model_input."X_2" <= 0.037129) THEN CASE WHEN (model_input."X_2" <= 0.018615) THEN 9 ELSE 10 END ELSE 4 END ELSE CASE WHEN (model_input."X_1" <= 187.384659) THEN CASE WHEN (model_input."X_0" <= 71.489639) THEN 7 ELSE 8 END ELSE CASE WHEN (model_input."X_2" <= 0.260938) THEN CASE WHEN (model_input."X_0" <= 16.442682) THEN CASE WHEN (model_input."X_0" <= 14.603495) THEN CASE WHEN (model_input."X_1" <= 903.066650) THEN 33 ELSE 34 END ELSE 24 END ELSE CASE WHEN (model_input."X_0" <= 51.530243) THEN CASE WHEN (model_input."X_3" <= 10.289057) THEN 21 ELSE 22 END ELSE CASE WHEN (model_input."X_0" <= 79.828445) THEN 19 ELSE 20 END END END ELSE CAS
SQL_OUT_PUT_FIRST_LINES_END ('freidman3_small', 'DecisionTreeRegressor', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('freidman3_small', 'DecisionTreeRegressor', 'sqlite')
d, 1.473608 AS "E"
    UNION ALL
    SELECT 24 AS nid, 1.324506 AS "E"
    UNION ALL
    SELECT 25 AS nid, 1.535861 AS "E"
    UNION ALL
    SELECT 26 AS nid, 1.431295 AS "E"
    UNION ALL
    SELECT 27 AS nid, 1.372742 AS "E"
    UNION ALL
    SELECT 28 AS nid, 1.473118 AS "E"
    UNION ALL
    SELECT 29 AS nid, 1.343157 AS "E"
    UNION ALL
    SELECT 30 AS nid, 1.216963 AS "E"
    UNION ALL
    SELECT 31 AS nid, 1.159392 AS "E"
    UNION ALL
    SELECT 32 AS nid, 1.231356 AS "E"
    UNION ALL
    SELECT 33 AS nid, 1.458304 AS "E"
    UNION ALL
    SELECT 34 AS nid, 1.504214 AS "E"
    UNION ALL
    SELECT 35 AS nid, 1.544874 AS "E"
    UNION ALL
    SELECT 36 AS nid, 1.496801 AS "E"
  ) AS "Values"
 ),
"DT_Output" AS 
 (SELECT
   t1."index" AS "index",
   t1.node_id AS node_id,
   t2.nid AS nid,
   t2."E" AS "E"
  FROM
   "DT_node_lookup" AS t1
   LEFT OUTER JOIN
   "DT_node_data" AS t2
   ON t1.node_id = t2.nid
 )
SELECT
   "DT_Output"."index" AS "index",
   "DT_Output"."E" AS "Estimator"
FROM "DT_Output"
SQL_OUT_PUT_LAST_LINES_END ('freidman3_small', 'DecisionTreeRegressor', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 64 entries, 0 to 63
Data columns (total 4 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     64 non-null     float32
 1   X_1     64 non-null     float32
 2   X_2     64 non-null     float32
 3   X_3     64 non-null     float32
dtypes: float32(4)
memory usage: 1.5 KB
             X_0          X_1       X_2        X_3
index                                             
0      17.761709   423.498322  0.135270  10.148129
1      45.437614   168.841202  0.343817   3.279963
2      69.792320   473.447937  0.233546   3.411072
3      67.667091   938.672607  0.652046   9.523154
4      55.118420  1002.086060  0.726658   4.570618
...          ...          ...       ...        ...
59     82.923828  1535.997559  0.287537   7.396835
60     17.167280  1104.656250  0.421381   6.591000
61     48.198017   353.104248  0.725143  10.405507
62     17.373148   483.680237  0.685229   2.728044
63      7.321981   487.752838  0.993317   5.340956

[64 rows x 4 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 64 entries, 0 to 63
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      64 non-null     int64  
 1   Estimator  64 non-null     float64
dtypes: float64(1), int64(1)
memory usage: 1.1 KB
    index  Estimator
0       0   1.269293
1       1   0.906663
2       2   1.014036
3       3   1.473118
4       4   1.473118
..    ...        ...
59     59   1.473118
60     60   1.544874
61     61   1.372742
62     62   1.544874
63     63   1.544874

[64 rows x 2 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('freidman3_small', 'DecisionTreeRegressor') Estimator 1.268176082297955e-07
    index  SQL_Estimator  Py_Estimator     SQL_Error
48     48       1.372742      1.372742 -1.760559e-07
49     49       1.372742      1.372742 -1.760559e-07
50     50       1.496801      1.496801  2.197037e-07
51     51       1.496801      1.496801  2.197037e-07
52     52       1.544874      1.544874 -7.207489e-08
53     53       1.458304      1.458304 -4.052124e-07
54     54       1.473118      1.473118  5.242157e-08
55     55       1.269293      1.269293  4.936981e-08
56     56       1.473118      1.473118  5.242157e-08
57     57       1.231356      1.231356  2.136765e-07
58     58       0.449370      0.449370  3.213882e-09
59     59       1.473118      1.473118  5.242157e-08
60     60       1.544874      1.544874 -7.207489e-08
61     61       1.372742      1.372742 -1.760559e-07
62     62       1.544874      1.544874 -7.207489e-08
63     63       1.544874      1.544874 -7.207489e-08
MLLITE_REG_SQL_EXECUTION_STATUS ('freidman3_small', 'DecisionTreeRegressor', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/regression/DecisionTreeRegressor/mllite.DecisionTreeRegressor_freidman3_small_option_1_pgsql.sql'



SQL_OUT_PUT_FIRST_LINES_START ('freidman3_small', 'DecisionTreeRegressor', 'pgsql')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
"DT_node_lookup" AS 
 (SELECT
    model_input."index" AS "index",
    CASE WHEN (model_input."X_2" <= 0.046038) THEN CASE WHEN (model_input."X_2" <= 0.037129) THEN CASE WHEN (model_input."X_2" <= 0.018615) THEN 9 ELSE 10 END ELSE 4 END ELSE CASE WHEN (model_input."X_1" <= 187.384659) THEN CASE WHEN (model_input."X_0" <= 71.489639) THEN 7 ELSE 8 END ELSE CASE WHEN (model_input."X_2" <= 0.260938) THEN CASE WHEN (model_input."X_0" <= 16.442682) THEN CASE WHEN (model_input."X_0" <= 14.603495) THEN CASE WHEN (model_input."X_1" <= 903.066650) THEN 33 ELSE 34 END ELSE 24 END ELSE CASE WHEN (model_input."X_0" <= 51.530243) THEN CASE WHEN (model_input."X_3" <= 10.289057) THEN 21 ELSE 22 END ELSE CASE WHEN (model_input."X_0" <= 79.828445) THEN 19 ELSE 20 END END END ELSE CAS
SQL_OUT_PUT_FIRST_LINES_END ('freidman3_small', 'DecisionTreeRegressor', 'pgsql')
SQL_OUT_PUT_LAST_LINES_START ('freidman3_small', 'DecisionTreeRegressor', 'pgsql')
d, 1.473608 AS "E"
    UNION ALL
    SELECT 24 AS nid, 1.324506 AS "E"
    UNION ALL
    SELECT 25 AS nid, 1.535861 AS "E"
    UNION ALL
    SELECT 26 AS nid, 1.431295 AS "E"
    UNION ALL
    SELECT 27 AS nid, 1.372742 AS "E"
    UNION ALL
    SELECT 28 AS nid, 1.473118 AS "E"
    UNION ALL
    SELECT 29 AS nid, 1.343157 AS "E"
    UNION ALL
    SELECT 30 AS nid, 1.216963 AS "E"
    UNION ALL
    SELECT 31 AS nid, 1.159392 AS "E"
    UNION ALL
    SELECT 32 AS nid, 1.231356 AS "E"
    UNION ALL
    SELECT 33 AS nid, 1.458304 AS "E"
    UNION ALL
    SELECT 34 AS nid, 1.504214 AS "E"
    UNION ALL
    SELECT 35 AS nid, 1.544874 AS "E"
    UNION ALL
    SELECT 36 AS nid, 1.496801 AS "E"
  ) AS "Values"
 ),
"DT_Output" AS 
 (SELECT
   t1."index" AS "index",
   t1.node_id AS node_id,
   t2.nid AS nid,
   t2."E" AS "E"
  FROM
   "DT_node_lookup" AS t1
   LEFT OUTER JOIN
   "DT_node_data" AS t2
   ON t1.node_id = t2.nid
 )
SELECT
   "DT_Output"."index" AS "index",
   "DT_Output"."E" AS "Estimator"
FROM "DT_Output"
SQL_OUT_PUT_LAST_LINES_END ('freidman3_small', 'DecisionTreeRegressor', 'pgsql') 




COPY_TRAINING_DATA_TO_SQLITE_START
