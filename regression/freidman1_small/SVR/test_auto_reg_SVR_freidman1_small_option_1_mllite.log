         X_0       X_1       X_2  ...       X_8       X_9     target
0   0.544738  0.515912  0.990435  ...  0.898018  0.377159  15.807614
1   0.783459  0.095321  0.135945  ...  0.019766  0.833486  14.766437
2   0.652811  0.757719  0.306902  ...  0.894295  0.086598  22.842493
3   0.226051  0.939732  0.731124  ...  0.185038  0.248943  19.544314
4   0.764610  0.378970  0.823855  ...  0.814980  0.123688  21.897690
..       ...       ...       ...  ...       ...       ...        ...
59  0.652046  0.852315  0.661294  ...  0.682591  0.243739  18.364700
60  0.133169  0.898182  0.993566  ...  0.014059  0.907372  19.271183
61  0.771820  0.489723  0.677121  ...  0.039136  0.218690  15.917285
62  0.059807  0.098960  0.941488  ...  0.196262  0.732540  13.422214
63  0.672520  0.960422  0.271050  ...  0.918325  0.297702  12.990523

[64 rows x 11 columns]
MLLITE_MODEL_SET_OPTIONS SVR {"C" : 2}
MLLITE_MODEL_OPTIONS_DEFAULT SVR { "max_iter" : 128 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING SVR { "C" : 2,  "max_iter" : 128  , }
MLLITE_MODEL_JSON_AFTER_SETTING SVR None
('OPERATION_START', 'TRAINING')
[[0.54473835 0.51591223 0.99043506 0.25514543 0.14395337 0.33235115
  0.8686215  0.04108923 0.8980185  0.37715888]
 [0.78345853 0.09532096 0.1359447  0.858711   0.24078475 0.08367069
  0.05237448 0.42276597 0.01976581 0.8334865 ]
 [0.652811   0.75771934 0.3069025  0.8282855  0.7630638  0.85900337
  0.87337655 0.14607023 0.89429516 0.08659814]
 [0.22605109 0.9397324  0.7311243  0.8374556  0.7824477  0.3529266
  0.1832118  0.84345275 0.18503828 0.2489433 ]
 [0.76461023 0.37897    0.82385516 0.9136035  0.55340034 0.05504839
  0.58833206 0.36104986 0.81497955 0.12368783]] [15.807614 14.766437 22.842493 19.544313 21.89769 ]
MLLITE_FIT_USING_MODEL mllite_svm_reg.SVR_ff4_ff4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_REGRESSOR_FIT' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_REGRESSOR_FIT' 2 4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_REGRESSOR_FIT' 3 4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVR_Global' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVR_Global' 24 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVR_Global' 36 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVR_Global' 48 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_REGRESSOR_FIT' 4 4
('OPERATION_END_ELAPSED', 0.022, 'TRAINING')
{ "C" : 2,  "max_iter" : 128  , }
{ "C" : 2,  "max_iter" : 128  , }
{
	"metadata" : { "model" : "Vapnik_SVR_RBF", "version" : "2024-W13", "signature" : "ff4_ff4"},
	"options" : {"svm_type" : "epsilon_svr", "kernel" : "rbf", "degree" : 3, "gamma" : 1.117212, "coef0" : 0.000000, "cache_size" : 300, "tol" : 0.001000, "nu" : 0.500000, "epsilon" : 0.100000, "shrinking" : 0, "probability" : 0, "C" : 2.000000, "max_iter" : 128, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 10 },
	"svm_model" : {
	"classes" : 2,
	"L" : 63,
	"SupportVectors" : {
		"SV_00" : [ 0.544738, 0.515912, 0.990435, 0.255145, 0.143953, 0.332351, 0.868622, 0.041089, 0.898018, 0.377159 ],
		"SV_01" : [ 0.783459, 0.095321, 0.135945, 0.858711, 0.240785, 0.083671, 0.052374, 0.422766, 0.019766, 0.833486 ],
		"SV_02" : [ 0.652811, 0.757719, 0.306902, 0.828286, 0.763064, 0.859003, 0.873377, 0.146070, 0.894295, 0.086598 ],
		"SV_03" : [ 0.226051, 0.939732, 0.731124, 0.837456, 0.782448, 0.352927, 0.183212, 0.843453, 0.185038, 0.248943 ],
		"SV_04" : [ 0.764610, 0.378970, 0.823855, 0.913603, 0.553400, 0.055048, 0.588332, 0.361050, 0.814980, 0.123688 ],
		"SV_05" : [ 0.368356, 0.189593, 0.403483, 0.670145, 0.411066, 0.464093, 0.307388, 0.840440, 0.462841, 0.813023 ],
		"SV_06" : [ 0.888102, 0.149216, 0.426902, 0.180039, 0.792176, 0.085835, 0.603319, 0.653572, 0.865909, 0.986362 ],
		"SV_07" : [ 0.825366, 0.284076, 0.971058, 0.191878, 0.387555, 0.062500, 0.206877, 0.900471, 0.780397, 0.355315 ],
		"SV_08" : [ 0.235384, 0.117604, 0.514017, 0.633968, 0.618557, 0.121827, 0.576931, 0.091568, 0.527227, 0.211281 ],
		"SV_09" : [ 0.834709, 0.502155, 0.670056, 0.169213, 0.154568, 0.685113, 0.954394, 0.848192, 0.038824, 0.113899 ],
		"SV_10" : [ 0.287599, 0.939261, 0.380885, 0.731889, 0.052941, 0.942998, 0.527849, 0.812585, 0.329620, 0.003549 ],
		"SV_11" : [ 0.992031, 0.233387, 0.782862, 0.234139, 0.252201, 0.042487, 0.353661, 0.403574, 0.461541, 0.895167 ],
		"SV_12" : [ 0.020119, 0.541789, 0.751033, 0.996253, 0.717629, 0.991604, 0.412097, 0.708677, 0.950842, 0.143679 ],
		"SV_13" : [ 0.830477, 0.389094, 0.475292, 0.147457, 0.363702, 0.741192, 0.291713, 0.634453, 0.479506, 0.035941 ],
		"SV_14" : [ 0.399336, 0.628863, 0.606025, 0.837489, 0.772643, 0.257624, 0.166252, 0.040244, 0.521303, 0.455322 ],
		"SV_15" : [ 0.634220, 0.486969, 0.969793, 0.441636, 0.814121, 0.690923, 0.194226, 0.716476, 0.697923, 0.212891 ],
		"SV_16" : [ 0.772433, 0.764512, 0.960643, 0.302594, 0.292439, 0.441128, 0.688884, 0.145406, 0.532042, 0.749330 ],
		"SV_17" : [ 0.907576, 0.735434, 0.379983, 0.157810, 0.874279, 0.971871, 0.088356, 0.265155, 0.264531, 0.516615 ],
		"SV_18" : [ 0.073860, 0.684412, 0.937700, 0.715815, 0.671463, 0.675644, 0.715147, 0.319506, 0.552600, 0.675153 ],
		"SV_19" : [ 0.191682, 0.548477, 0.981609, 0.531261, 0.813478, 0.102625, 0.317443, 0.201464, 0.243298, 0.064135 ],
		"SV_20" : [ 0.604811, 0.984899, 0.598416, 0.783427, 0.739098, 0.893643, 0.193266, 0.096950, 0.547724, 0.389115 ],
		"SV_21" : [ 0.480054, 0.664308, 0.985340, 0.567078, 0.994149, 0.780890, 0.232756, 0.567089, 0.093123, 0.031981 ],
		"SV_22" : [ 0.257439, 0.499463, 0.260146, 0.239901, 0.156860, 0.590953, 0.077376, 0.340943, 0.943330, 0.056908 ],
		"SV_23" : [ 0.010500, 0.200190, 0.192366, 0.175831, 0.507530, 0.721218, 0.719388, 0.114770, 0.417354, 0.783886 ],
		"SV_24" : [ 0.341289, 0.059388, 0.275743, 0.885258, 0.018723, 0.985191, 0.272452, 0.138076, 0.832781, 0.073518 ],
		"SV_25" : [ 0.759884, 0.645603, 0.858346, 0.414192, 0.746659, 0.476919, 0.729435, 0.314409, 0.340241, 0.086284 ],
		"SV_26" : [ 0.361047, 0.160106, 0.219158, 0.010201, 0.471566, 0.488280, 0.020705, 0.852158, 0.667965, 0.378921 ],
		"SV_27" : [ 0.707837, 0.144074, 0.012616, 0.030879, 0.479881, 0.891077, 0.451813, 0.845402, 0.259907, 0.331544 ],
		"SV_28" : [ 0.387013, 0.186144, 0.843217, 0.273500, 0.175361, 0.010880, 0.338375, 0.530580, 0.739766, 0.316235 ],
		"SV_29" : [ 0.468597, 0.178458, 0.334268, 0.726481, 0.251948, 0.416145, 0.033750, 0.950958, 0.192608, 0.099539 ],
		"SV_30" : [ 0.705919, 0.335669, 0.829238, 0.863314, 0.287537, 0.639683, 0.745771, 0.787558, 0.582418, 0.363306 ],
		"SV_31" : [ 0.975417, 0.002660, 0.366127, 0.434512, 0.945664, 0.329085, 0.852323, 0.591908, 0.151237, 0.221160 ],
		"SV_32" : [ 0.479223, 0.684603, 0.324254, 0.801230, 0.871487, 0.937278, 0.292127, 0.900755, 0.827968, 0.568796 ],
		"SV_33" : [ 0.457487, 0.414129, 0.014223, 0.378696, 0.893256, 0.937627, 0.113897, 0.460844, 0.008495, 0.149271 ],
		"SV_34" : [ 0.734481, 0.482054, 0.789831, 0.806913, 0.681106, 0.602843, 0.333277, 0.147743, 0.020703, 0.509223 ],
		"SV_35" : [ 0.993297, 0.015448, 0.073074, 0.123516, 0.766918, 0.032547, 0.970468, 0.585911, 0.580508, 0.025791 ],
		"SV_36" : [ 0.140833, 0.617769, 0.186105, 0.667265, 0.836290, 0.880516, 0.798945, 0.198079, 0.648067, 0.563459 ],
		"SV_37" : [ 0.305323, 0.920127, 0.554815, 0.290412, 0.398567, 0.153044, 0.764948, 0.336047, 0.946082, 0.127173 ],
		"SV_38" : [ 0.962192, 0.293916, 0.643533, 0.533264, 0.651122, 0.658760, 0.177023, 0.587402, 0.910031, 0.612165 ],
		"SV_39" : [ 0.780402, 0.085852, 0.090657, 0.645854, 0.414723, 0.242054, 0.316598, 0.649726, 0.127717, 0.122979 ],
		"SV_40" : [ 0.774018, 0.202348, 0.142057, 0.873570, 0.310546, 0.683928, 0.650031, 0.492748, 0.253903, 0.786608 ],
		"SV_41" : [ 0.343479, 0.049133, 0.720020, 0.841468, 0.199002, 0.085445, 0.635873, 0.354635, 0.971117, 0.361298 ],
		"SV_42" : [ 0.175900, 0.912656, 0.761809, 0.442834, 0.780373, 0.425137, 0.228768, 0.916071, 0.814451, 0.264194 ],
		"SV_43" : [ 0.366207, 0.096199, 0.520676, 0.250113, 0.155164, 0.752654, 0.007439, 0.025310, 0.924844, 0.961402 ],
		"SV_44" : [ 0.827680, 0.741216, 0.967589, 0.359411, 0.243325, 0.911669, 0.829354, 0.787352, 0.791034, 0.782214 ],
		"SV_45" : [ 0.663564, 0.399281, 0.158547, 0.930965, 0.846977, 0.986627, 0.132816, 0.426558, 0.999950, 0.674509 ],
		"SV_46" : [ 0.225035, 0.267629, 0.997439, 0.660872, 0.911509, 0.036102, 0.310786, 0.232937, 0.166239, 0.314810 ],
		"SV_47" : [ 0.447627, 0.691429, 0.591546, 0.175425, 0.630102, 0.058576, 0.814630, 0.489707, 0.676671, 0.497671 ],
		"SV_48" : [ 0.071195, 0.704806, 0.073220, 0.221647, 0.993317, 0.434096, 0.481980, 0.139224, 0.725143, 0.940551 ],
		"SV_49" : [ 0.849990, 0.916139, 0.864912, 0.228437, 0.340806, 0.227606, 0.447862, 0.068150, 0.472487, 0.104133 ],
		"SV_50" : [ 0.823836, 0.504187, 0.034569, 0.308381, 0.003390, 0.039580, 0.879070, 0.101112, 0.747507, 0.958859 ],
		"SV_51" : [ 0.221163, 0.634851, 0.675740, 0.393459, 0.593254, 0.877299, 0.742170, 0.322286, 0.749472, 0.996954 ],
		"SV_52" : [ 0.509773, 0.341051, 0.395373, 0.566571, 0.346628, 0.931609, 0.107350, 0.085550, 0.260950, 0.128551 ],
		"SV_53" : [ 0.246418, 0.754389, 0.264436, 0.996826, 0.880107, 0.261948, 0.595422, 0.306809, 0.390167, 0.471118 ],
		"SV_54" : [ 0.412680, 0.457356, 0.683210, 0.556247, 0.427686, 0.733437, 0.557058, 0.987081, 0.262669, 0.112616 ],
		"SV_55" : [ 0.804101, 0.103050, 0.728795, 0.068628, 0.567613, 0.648562, 0.495718, 0.628355, 0.398738, 0.185100 ],
		"SV_56" : [ 0.101391, 0.213374, 0.964562, 0.911902, 0.755811, 0.963955, 0.532774, 0.985822, 0.912822, 0.720971 ],
		"SV_57" : [ 0.315183, 0.997390, 0.586190, 0.445598, 0.654557, 0.385768, 0.990681, 0.245576, 0.173731, 0.219154 ],
		"SV_58" : [ 0.652046, 0.852315, 0.661294, 0.458178, 0.683117, 0.988920, 0.959995, 0.609463, 0.682591, 0.243739 ],
		"SV_59" : [ 0.133169, 0.898182, 0.993566, 0.694676, 0.756484, 0.193983, 0.035123, 0.033415, 0.014059, 0.907372 ],
		"SV_60" : [ 0.771820, 0.489723, 0.677121, 0.147928, 0.907274, 0.355043, 0.851254, 0.565222, 0.039136, 0.218690 ],
		"SV_61" : [ 0.059807, 0.098960, 0.941488, 0.567316, 0.732979, 0.264147, 0.224463, 0.265461, 0.196262, 0.732540 ],
		"SV_62" : [ 0.672520, 0.960422, 0.271050, 0.259409, 0.076063, 0.603909, 0.732761, 0.514037, 0.918325, 0.297702 ]
	},
	"SupportVectorsCoefs" : {
		"SV_coef_0" : [ 2.000000, 0.364076, 2.000000, 2.000000, 2.000000, -2.000000, -2.000000, 2.000000, -2.000000, -2.000000, 1.938049, -2.000000, -2.000000, 0.075163, 2.000000, 2.000000, 2.000000, -2.000000, -1.443155, -0.068913, 2.000000, 2.000000, -2.000000, -2.000000, -2.000000, 2.000000, -2.000000, -1.102564, -2.000000, -2.000000, 2.000000, -2.000000, 2.000000, 2.000000, 2.000000, -2.000000, 0.340215, -1.244025, 1.423425, 2.000000, 2.000000, -2.000000, -2.000000, -2.000000, 2.000000, 2.000000, 2.000000, 0.364753, -0.977422, -2.000000, 2.000000, -2.000000, -2.000000, 2.000000, -2.000000, -2.000000, 2.000000, -1.162703, 1.388846, 2.000000, 2.000000, -2.000000, -1.895747 ]
	},
	"rho" : [ -14.313331 ],
	"nSV" : [ 63 ],
	"probA" : [ ],
	"probB" : [ ],
	"n_iter" : [ 57 ]
}
}
WRITING_JSON_CODE 'logs/auto_tests/regression/SVR/mllite.SVR_freidman1_small_option_1.json'

MLLITE_MODEL_SET_OPTIONS SVR {"C" : 2}
MLLITE_MODEL_OPTIONS_DEFAULT SVR { "max_iter" : 128 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING SVR { "C" : 2,  "max_iter" : 128  , }
MLLITE_MODEL_JSON_AFTER_SETTING SVR None
MLLITE_RELOADING_MODEL mllite_svm_reg.SVR_ff4_ff4
{
	"metadata" : { "model" : "Vapnik_SVR_RBF", "version" : "2024-W13", "signature" : "ff4_ff4"},
	"options" : {"svm_type" : "epsilon_svr", "kernel" : "rbf", "degree" : 3, "gamma" : 1.117212, "coef0" : 0.000000, "cache_size" : 300, "tol" : 0.001000, "nu" : 0.500000, "epsilon" : 0.100000, "shrinking" : 0, "probability" : 0, "C" : 2.000000, "max_iter" : 128, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 10 },
	"svm_model" : {
	"classes" : 2,
	"L" : 63,
	"SupportVectors" : {
		"SV_00" : [ 0.544738, 0.515912, 0.990435, 0.255145, 0.143953, 0.332351, 0.868622, 0.041089, 0.898018, 0.377159 ],
		"SV_01" : [ 0.783459, 0.095321, 0.135945, 0.858711, 0.240785, 0.083671, 0.052374, 0.422766, 0.019766, 0.833486 ],
		"SV_02" : [ 0.652811, 0.757719, 0.306902, 0.828286, 0.763064, 0.859003, 0.873377, 0.146070, 0.894295, 0.086598 ],
		"SV_03" : [ 0.226051, 0.939732, 0.731124, 0.837456, 0.782448, 0.352927, 0.183212, 0.843453, 0.185038, 0.248943 ],
		"SV_04" : [ 0.764610, 0.378970, 0.823855, 0.913603, 0.553400, 0.055048, 0.588332, 0.361050, 0.814980, 0.123688 ],
		"SV_05" : [ 0.368356, 0.189593, 0.403483, 0.670145, 0.411066, 0.464093, 0.307388, 0.840440, 0.462841, 0.813023 ],
		"SV_06" : [ 0.888102, 0.149216, 0.426902, 0.180039, 0.792176, 0.085835, 0.603319, 0.653572, 0.865909, 0.986362 ],
		"SV_07" : [ 0.825366, 0.284076, 0.971058, 0.191878, 0.387555, 0.062500, 0.206877, 0.900471, 0.780397, 0.355315 ],
		"SV_08" : [ 0.235384, 0.117604, 0.514017, 0.633968, 0.618557, 0.121827, 0.576931, 0.091568, 0.527227, 0.211281 ],
		"SV_09" : [ 0.834709, 0.502155, 0.670056, 0.169213, 0.154568, 0.685113, 0.954394, 0.848192, 0.038824, 0.113899 ],
		"SV_10" : [ 0.287599, 0.939261, 0.380885, 0.731889, 0.052941, 0.942998, 0.527849, 0.812585, 0.329620, 0.003549 ],
		"SV_11" : [ 0.992031, 0.233387, 0.782862, 0.234139, 0.252201, 0.042487, 0.353661, 0.403574, 0.461541, 0.895167 ],
		"SV_12" : [ 0.020119, 0.541789, 0.751033, 0.996253, 0.717629, 0.991604, 0.412097, 0.708677, 0.950842, 0.143679 ],
		"SV_13" : [ 0.830477, 0.389094, 0.475292, 0.147457, 0.363702, 0.741192, 0.291713, 0.634453, 0.479506, 0.035941 ],
		"SV_14" : [ 0.399336, 0.628863, 0.606025, 0.837489, 0.772643, 0.257624, 0.166252, 0.040244, 0.521303, 0.455322 ],
		"SV_15" : [ 0.634220, 0.486969, 0.969793, 0.441636, 0.814121, 0.690923, 0.194226, 0.716476, 0.697923, 0.212891 ],
		"SV_16" : [ 0.772433, 0.764512, 0.960643, 0.302594, 0.292439, 0.441128, 0.688884, 0.145406, 0.532042, 0.749330 ],
		"SV_17" : [ 0.907576, 0.735434, 0.379983, 0.157810, 0.874279, 0.971871, 0.088356, 0.265155, 0.264531, 0.516615 ],
		"SV_18" : [ 0.073860, 0.684412, 0.937700, 0.715815, 0.671463, 0.675644, 0.715147, 0.319506, 0.552600, 0.675153 ],
		"SV_19" : [ 0.191682, 0.548477, 0.981609, 0.531261, 0.813478, 0.102625, 0.317443, 0.201464, 0.243298, 0.064135 ],
		"SV_20" : [ 0.604811, 0.984899, 0.598416, 0.783427, 0.739098, 0.893643, 0.193266, 0.096950, 0.547724, 0.389115 ],
		"SV_21" : [ 0.480054, 0.664308, 0.985340, 0.567078, 0.994149, 0.780890, 0.232756, 0.567089, 0.093123, 0.031981 ],
		"SV_22" : [ 0.257439, 0.499463, 0.260146, 0.239901, 0.156860, 0.590953, 0.077376, 0.340943, 0.943330, 0.056908 ],
		"SV_23" : [ 0.010500, 0.200190, 0.192366, 0.175831, 0.507530, 0.721218, 0.719388, 0.114770, 0.417354, 0.783886 ],
		"SV_24" : [ 0.341289, 0.059388, 0.275743, 0.885258, 0.018723, 0.985191, 0.272452, 0.138076, 0.832781, 0.073518 ],
		"SV_25" : [ 0.759884, 0.645603, 0.858346, 0.414192, 0.746659, 0.476919, 0.729435, 0.314409, 0.340241, 0.086284 ],
		"SV_26" : [ 0.361047, 0.160106, 0.219158, 0.010201, 0.471566, 0.488280, 0.020705, 0.852158, 0.667965, 0.378921 ],
		"SV_27" : [ 0.707837, 0.144074, 0.012616, 0.030879, 0.479881, 0.891077, 0.451813, 0.845402, 0.259907, 0.331544 ],
		"SV_28" : [ 0.387013, 0.186144, 0.843217, 0.273500, 0.175361, 0.010880, 0.338375, 0.530580, 0.739766, 0.316235 ],
		"SV_29" : [ 0.468597, 0.178458, 0.334268, 0.726481, 0.251948, 0.416145, 0.033750, 0.950958, 0.192608, 0.099539 ],
		"SV_30" : [ 0.705919, 0.335669, 0.829238, 0.863314, 0.287537, 0.639683, 0.745771, 0.787558, 0.582418, 0.363306 ],
		"SV_31" : [ 0.975417, 0.002660, 0.366127, 0.434512, 0.945664, 0.329085, 0.852323, 0.591908, 0.151237, 0.221160 ],
		"SV_32" : [ 0.479223, 0.684603, 0.324254, 0.801230, 0.871487, 0.937278, 0.292127, 0.900755, 0.827968, 0.568796 ],
		"SV_33" : [ 0.457487, 0.414129, 0.014223, 0.378696, 0.893256, 0.937627, 0.113897, 0.460844, 0.008495, 0.149271 ],
		"SV_34" : [ 0.734481, 0.482054, 0.789831, 0.806913, 0.681106, 0.602843, 0.333277, 0.147743, 0.020703, 0.509223 ],
		"SV_35" : [ 0.993297, 0.015448, 0.073074, 0.123516, 0.766918, 0.032547, 0.970468, 0.585911, 0.580508, 0.025791 ],
		"SV_36" : [ 0.140833, 0.617769, 0.186105, 0.667265, 0.836290, 0.880516, 0.798945, 0.198079, 0.648067, 0.563459 ],
		"SV_37" : [ 0.305323, 0.920127, 0.554815, 0.290412, 0.398567, 0.153044, 0.764948, 0.336047, 0.946082, 0.127173 ],
		"SV_38" : [ 0.962192, 0.293916, 0.643533, 0.533264, 0.651122, 0.658760, 0.177023, 0.587402, 0.910031, 0.612165 ],
		"SV_39" : [ 0.780402, 0.085852, 0.090657, 0.645854, 0.414723, 0.242054, 0.316598, 0.649726, 0.127717, 0.122979 ],
		"SV_40" : [ 0.774018, 0.202348, 0.142057, 0.873570, 0.310546, 0.683928, 0.650031, 0.492748, 0.253903, 0.786608 ],
		"SV_41" : [ 0.343479, 0.049133, 0.720020, 0.841468, 0.199002, 0.085445, 0.635873, 0.354635, 0.971117, 0.361298 ],
		"SV_42" : [ 0.175900, 0.912656, 0.761809, 0.442834, 0.780373, 0.425137, 0.228768, 0.916071, 0.814451, 0.264194 ],
		"SV_43" : [ 0.366207, 0.096199, 0.520676, 0.250113, 0.155164, 0.752654, 0.007439, 0.025310, 0.924844, 0.961402 ],
		"SV_44" : [ 0.827680, 0.741216, 0.967589, 0.359411, 0.243325, 0.911669, 0.829354, 0.787352, 0.791034, 0.782214 ],
		"SV_45" : [ 0.663564, 0.399281, 0.158547, 0.930965, 0.846977, 0.986627, 0.132816, 0.426558, 0.999950, 0.674509 ],
		"SV_46" : [ 0.225035, 0.267629, 0.997439, 0.660872, 0.911509, 0.036102, 0.310786, 0.232937, 0.166239, 0.314810 ],
		"SV_47" : [ 0.447627, 0.691429, 0.591546, 0.175425, 0.630102, 0.058576, 0.814630, 0.489707, 0.676671, 0.497671 ],
		"SV_48" : [ 0.071195, 0.704806, 0.073220, 0.221647, 0.993317, 0.434096, 0.481980, 0.139224, 0.725143, 0.940551 ],
		"SV_49" : [ 0.849990, 0.916139, 0.864912, 0.228437, 0.340806, 0.227606, 0.447862, 0.068150, 0.472487, 0.104133 ],
		"SV_50" : [ 0.823836, 0.504187, 0.034569, 0.308381, 0.003390, 0.039580, 0.879070, 0.101112, 0.747507, 0.958859 ],
		"SV_51" : [ 0.221163, 0.634851, 0.675740, 0.393459, 0.593254, 0.877299, 0.742170, 0.322286, 0.749472, 0.996954 ],
		"SV_52" : [ 0.509773, 0.341051, 0.395373, 0.566571, 0.346628, 0.931609, 0.107350, 0.085550, 0.260950, 0.128551 ],
		"SV_53" : [ 0.246418, 0.754389, 0.264436, 0.996826, 0.880107, 0.261948, 0.595422, 0.306809, 0.390167, 0.471118 ],
		"SV_54" : [ 0.412680, 0.457356, 0.683210, 0.556247, 0.427686, 0.733437, 0.557058, 0.987081, 0.262669, 0.112616 ],
		"SV_55" : [ 0.804101, 0.103050, 0.728795, 0.068628, 0.567613, 0.648562, 0.495718, 0.628355, 0.398738, 0.185100 ],
		"SV_56" : [ 0.101391, 0.213374, 0.964562, 0.911902, 0.755811, 0.963955, 0.532774, 0.985822, 0.912822, 0.720971 ],
		"SV_57" : [ 0.315183, 0.997390, 0.586190, 0.445598, 0.654557, 0.385768, 0.990681, 0.245576, 0.173731, 0.219154 ],
		"SV_58" : [ 0.652046, 0.852315, 0.661294, 0.458178, 0.683117, 0.988920, 0.959995, 0.609463, 0.682591, 0.243739 ],
		"SV_59" : [ 0.133169, 0.898182, 0.993566, 0.694676, 0.756484, 0.193983, 0.035123, 0.033415, 0.014059, 0.907372 ],
		"SV_60" : [ 0.771820, 0.489723, 0.677121, 0.147928, 0.907274, 0.355043, 0.851254, 0.565222, 0.039136, 0.218690 ],
		"SV_61" : [ 0.059807, 0.098960, 0.941488, 0.567316, 0.732979, 0.264147, 0.224463, 0.265461, 0.196262, 0.732540 ],
		"SV_62" : [ 0.672520, 0.960422, 0.271050, 0.259409, 0.076063, 0.603909, 0.732761, 0.514037, 0.918325, 0.297702 ]
	},
	"SupportVectorsCoefs" : {
		"SV_coef_0" : [ 2.000000, 0.364076, 2.000000, 2.000000, 2.000000, -2.000000, -2.000000, 2.000000, -2.000000, -2.000000, 1.938049, -2.000000, -2.000000, 0.075163, 2.000000, 2.000000, 2.000000, -2.000000, -1.443155, -0.068913, 2.000000, 2.000000, -2.000000, -2.000000, -2.000000, 2.000000, -2.000000, -1.102564, -2.000000, -2.000000, 2.000000, -2.000000, 2.000000, 2.000000, 2.000000, -2.000000, 0.340215, -1.244025, 1.423425, 2.000000, 2.000000, -2.000000, -2.000000, -2.000000, 2.000000, 2.000000, 2.000000, 0.364753, -0.977422, -2.000000, 2.000000, -2.000000, -2.000000, 2.000000, -2.000000, -2.000000, 2.000000, -1.162703, 1.388846, 2.000000, 2.000000, -2.000000, -1.895747 ]
	},
	"rho" : [ -14.313331 ],
	"nSV" : [ 63 ],
	"probA" : [ ],
	"probB" : [ ],
	"n_iter" : [ 57 ]
}
}
BEAUTIFIED_JSON_START
{
	"dataset" : 	{
		"dataset_features" : 10,
		"dataset_rows" : 64
	},
	"metadata" :  { "model" : "Vapnik_SVR_RBF", "signature" : "ff4_ff4", "version" : "2024-W13" },
	"options" :  { "C" : 2.0, "cache_size" : 300, "coef0" : 0.0, "degree" : 3, "epsilon" : 0.1, "gamma" : 1.117212, "kernel" : "rbf", "max_iter" : 128, "nu" : 0.5, "probability" : 0, "random_state" : 1789, "shrinking" : 0, "svm_type" : "epsilon_svr", "tol" : 0.001 },
	"svm_model" : 	{
		"L" : 63,
		"SupportVectors" : 	{
			"SV_00" : [ 0.544738, 0.515912, 0.990435, 0.255145, 0.143953, 0.332351, 0.868622, 0.041089, 0.898018, 0.377159 ],
			"SV_01" : [ 0.783459, 0.095321, 0.135945, 0.858711, 0.240785, 0.083671, 0.052374, 0.422766, 0.019766, 0.833486 ],
			"SV_02" : [ 0.652811, 0.757719, 0.306902, 0.828286, 0.763064, 0.859003, 0.873377, 0.14607, 0.894295, 0.086598 ],
			"SV_03" : [ 0.226051, 0.939732, 0.731124, 0.837456, 0.782448, 0.352927, 0.183212, 0.843453, 0.185038, 0.248943 ],
			"SV_04" : [ 0.76461, 0.37897, 0.823855, 0.913603, 0.5534, 0.055048, 0.588332, 0.36105, 0.81498, 0.123688 ],
			"SV_05" : [ 0.368356, 0.189593, 0.403483, 0.670145, 0.411066, 0.464093, 0.307388, 0.84044, 0.462841, 0.813023 ],
			"SV_06" : [ 0.888102, 0.149216, 0.426902, 0.180039, 0.792176, 0.085835, 0.603319, 0.653572, 0.865909, 0.986362 ],
			"SV_07" : [ 0.825366, 0.284076, 0.971058, 0.191878, 0.387555, 0.0625, 0.206877, 0.900471, 0.780397, 0.355315 ],
			"SV_08" : [ 0.235384, 0.117604, 0.514017, 0.633968, 0.618557, 0.121827, 0.576931, 0.091568, 0.527227, 0.211281 ],
			"SV_09" : [ 0.834709, 0.502155, 0.670056, 0.169213, 0.154568, 0.685113, 0.954394, 0.848192, 0.038824, 0.113899 ],
			"SV_10" : [ 0.287599, 0.939261, 0.380885, 0.731889, 0.052941, 0.942998, 0.527849, 0.812585, 0.32962, 0.003549 ],
			"SV_11" : [ 0.992031, 0.233387, 0.782862, 0.234139, 0.252201, 0.042487, 0.353661, 0.403574, 0.461541, 0.895167 ],
			"SV_12" : [ 0.020119, 0.541789, 0.751033, 0.996253, 0.717629, 0.991604, 0.412097, 0.708677, 0.950842, 0.143679 ],
			"SV_13" : [ 0.830477, 0.389094, 0.475292, 0.147457, 0.363702, 0.741192, 0.291713, 0.634453, 0.479506, 0.035941 ],
			"SV_14" : [ 0.399336, 0.628863, 0.606025, 0.837489, 0.772643, 0.257624, 0.166252, 0.040244, 0.521303, 0.455322 ],
			"SV_15" : [ 0.63422, 0.486969, 0.969793, 0.441636, 0.814121, 0.690923, 0.194226, 0.716476, 0.697923, 0.212891 ],
			"SV_16" : [ 0.772433, 0.764512, 0.960643, 0.302594, 0.292439, 0.441128, 0.688884, 0.145406, 0.532042, 0.74933 ],
			"SV_17" : [ 0.907576, 0.735434, 0.379983, 0.15781, 0.874279, 0.971871, 0.088356, 0.265155, 0.264531, 0.516615 ],
			"SV_18" : [ 0.07386, 0.684412, 0.9377, 0.715815, 0.671463, 0.675644, 0.715147, 0.319506, 0.5526, 0.675153 ],
			"SV_19" : [ 0.191682, 0.548477, 0.981609, 0.531261, 0.813478, 0.102625, 0.317443, 0.201464, 0.243298, 0.064135 ],
			"SV_20" : [ 0.604811, 0.984899, 0.598416, 0.783427, 0.739098, 0.893643, 0.193266, 0.09695, 0.547724, 0.389115 ],
			"SV_21" : [ 0.480054, 0.664308, 0.98534, 0.567078, 0.994149, 0.78089, 0.232756, 0.567089, 0.093123, 0.031981 ],
			"SV_22" : [ 0.257439, 0.499463, 0.260146, 0.239901, 0.15686, 0.590953, 0.077376, 0.340943, 0.94333, 0.056908 ],
			"SV_23" : [ 0.0105, 0.20019, 0.192366, 0.175831, 0.50753, 0.721218, 0.719388, 0.11477, 0.417354, 0.783886 ],
			"SV_24" : [ 0.341289, 0.059388, 0.275743, 0.885258, 0.018723, 0.985191, 0.272452, 0.138076, 0.832781, 0.073518 ],
			"SV_25" : [ 0.759884, 0.645603, 0.858346, 0.414192, 0.746659, 0.476919, 0.729435, 0.314409, 0.340241, 0.086284 ],
			"SV_26" : [ 0.361047, 0.160106, 0.219158, 0.010201, 0.471566, 0.48828, 0.020705, 0.852158, 0.667965, 0.378921 ],
			"SV_27" : [ 0.707837, 0.144074, 0.012616, 0.030879, 0.479881, 0.891077, 0.451813, 0.845402, 0.259907, 0.331544 ],
			"SV_28" : [ 0.387013, 0.186144, 0.843217, 0.2735, 0.175361, 0.01088, 0.338375, 0.53058, 0.739766, 0.316235 ],
			"SV_29" : [ 0.468597, 0.178458, 0.334268, 0.726481, 0.251948, 0.416145, 0.03375, 0.950958, 0.192608, 0.099539 ],
			"SV_30" : [ 0.705919, 0.335669, 0.829238, 0.863314, 0.287537, 0.639683, 0.745771, 0.787558, 0.582418, 0.363306 ],
			"SV_31" : [ 0.975417, 0.00266, 0.366127, 0.434512, 0.945664, 0.329085, 0.852323, 0.591908, 0.151237, 0.22116 ],
			"SV_32" : [ 0.479223, 0.684603, 0.324254, 0.80123, 0.871487, 0.937278, 0.292127, 0.900755, 0.827968, 0.568796 ],
			"SV_33" : [ 0.457487, 0.414129, 0.014223, 0.378696, 0.893256, 0.937627, 0.113897, 0.460844, 0.008495, 0.149271 ],
			"SV_34" : [ 0.734481, 0.482054, 0.789831, 0.806913, 0.681106, 0.602843, 0.333277, 0.147743, 0.020703, 0.509223 ],
			"SV_35" : [ 0.993297, 0.015448, 0.073074, 0.123516, 0.766918, 0.032547, 0.970468, 0.585911, 0.580508, 0.025791 ],
			"SV_36" : [ 0.140833, 0.617769, 0.186105, 0.667265, 0.83629, 0.880516, 0.798945, 0.198079, 0.648067, 0.563459 ],
			"SV_37" : [ 0.305323, 0.920127, 0.554815, 0.290412, 0.398567, 0.153044, 0.764948, 0.336047, 0.946082, 0.127173 ],
			"SV_38" : [ 0.962192, 0.293916, 0.643533, 0.533264, 0.651122, 0.65876, 0.177023, 0.587402, 0.910031, 0.612165 ],
			"SV_39" : [ 0.780402, 0.085852, 0.090657, 0.645854, 0.414723, 0.242054, 0.316598, 0.649726, 0.127717, 0.122979 ],
			"SV_40" : [ 0.774018, 0.202348, 0.142057, 0.87357, 0.310546, 0.683928, 0.650031, 0.492748, 0.253903, 0.786608 ],
			"SV_41" : [ 0.343479, 0.049133, 0.72002, 0.841468, 0.199002, 0.085445, 0.635873, 0.354635, 0.971117, 0.361298 ],
			"SV_42" : [ 0.1759, 0.912656, 0.761809, 0.442834, 0.780373, 0.425137, 0.228768, 0.916071, 0.814451, 0.264194 ],
			"SV_43" : [ 0.366207, 0.096199, 0.520676, 0.250113, 0.155164, 0.752654, 0.007439, 0.02531, 0.924844, 0.961402 ],
			"SV_44" : [ 0.82768, 0.741216, 0.967589, 0.359411, 0.243325, 0.911669, 0.829354, 0.787352, 0.791034, 0.782214 ],
			"SV_45" : [ 0.663564, 0.399281, 0.158547, 0.930965, 0.846977, 0.986627, 0.132816, 0.426558, 0.99995, 0.674509 ],
			"SV_46" : [ 0.225035, 0.267629, 0.997439, 0.660872, 0.911509, 0.036102, 0.310786, 0.232937, 0.166239, 0.31481 ],
			"SV_47" : [ 0.447627, 0.691429, 0.591546, 0.175425, 0.630102, 0.058576, 0.81463, 0.489707, 0.676671, 0.497671 ],
			"SV_48" : [ 0.071195, 0.704806, 0.07322, 0.221647, 0.993317, 0.434096, 0.48198, 0.139224, 0.725143, 0.940551 ],
			"SV_49" : [ 0.84999, 0.916139, 0.864912, 0.228437, 0.340806, 0.227606, 0.447862, 0.06815, 0.472487, 0.104133 ],
			"SV_50" : [ 0.823836, 0.504187, 0.034569, 0.308381, 0.00339, 0.03958, 0.87907, 0.101112, 0.747507, 0.958859 ],
			"SV_51" : [ 0.221163, 0.634851, 0.67574, 0.393459, 0.593254, 0.877299, 0.74217, 0.322286, 0.749472, 0.996954 ],
			"SV_52" : [ 0.509773, 0.341051, 0.395373, 0.566571, 0.346628, 0.931609, 0.10735, 0.08555, 0.26095, 0.128551 ],
			"SV_53" : [ 0.246418, 0.754389, 0.264436, 0.996826, 0.880107, 0.261948, 0.595422, 0.306809, 0.390167, 0.471118 ],
			"SV_54" : [ 0.41268, 0.457356, 0.68321, 0.556247, 0.427686, 0.733437, 0.557058, 0.987081, 0.262669, 0.112616 ],
			"SV_55" : [ 0.804101, 0.10305, 0.728795, 0.068628, 0.567613, 0.648562, 0.495718, 0.628355, 0.398738, 0.1851 ],
			"SV_56" : [ 0.101391, 0.213374, 0.964562, 0.911902, 0.755811, 0.963955, 0.532774, 0.985822, 0.912822, 0.720971 ],
			"SV_57" : [ 0.315183, 0.99739, 0.58619, 0.445598, 0.654557, 0.385768, 0.990681, 0.245576, 0.173731, 0.219154 ],
			"SV_58" : [ 0.652046, 0.852315, 0.661294, 0.458178, 0.683117, 0.98892, 0.959995, 0.609463, 0.682591, 0.243739 ],
			"SV_59" : [ 0.133169, 0.898182, 0.993566, 0.694676, 0.756484, 0.193983, 0.035123, 0.033415, 0.014059, 0.907372 ],
			"SV_60" : [ 0.77182, 0.489723, 0.677121, 0.147928, 0.907274, 0.355043, 0.851254, 0.565222, 0.039136, 0.21869 ],
			"SV_61" : [ 0.059807, 0.09896, 0.941488, 0.567316, 0.732979, 0.264147, 0.224463, 0.265461, 0.196262, 0.73254 ],
			"SV_62" : [ 0.67252, 0.960422, 0.27105, 0.259409, 0.076063, 0.603909, 0.732761, 0.514037, 0.918325, 0.297702 ]
		},
		"SupportVectorsCoefs" : 	{
			"SV_coef_0" : [ 2.0, 0.364076, 2.0, 2.0, 2.0, -2.0, -2.0, 2.0, -2.0, -2.0, 1.938049, -2.0, -2.0, 0.075163, 2.0, 2.0, 2.0, -2.0, -1.443155, -0.068913, 2.0, 2.0, -2.0, -2.0, -2.0, 2.0, -2.0, -1.102564, -2.0, -2.0, 2.0, -2.0, 2.0, 2.0, 2.0, -2.0, 0.340215, -1.244025, 1.423425, 2.0, 2.0, -2.0, -2.0, -2.0, 2.0, 2.0, 2.0, 0.364753, -0.977422, -2.0, 2.0, -2.0, -2.0, 2.0, -2.0, -2.0, 2.0, -1.162703, 1.388846, 2.0, 2.0, -2.0, -1.895747 ]
		},
		"classes" : 2,
		"nSV" : [ 63 ],
		"n_iter" : [ 57 ],
		"probA" : [  ],
		"probB" : [  ],
		"rho" : [ -14.313331 ]
	}
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
[14.712628  14.666245  18.574314  18.807259  17.362215  12.122467
 11.650848  13.641474  12.504653  12.876247  15.27097   12.660427
 15.4917755 11.70112   19.080017  18.082834  16.835205  15.2812805
 16.028177  17.36194   20.150686  19.754246   8.9493475  9.778055
 11.054125  18.830599   8.625173  10.708466  10.246432  12.224044
 17.396399  13.284588  18.491682  15.312331  20.035992  11.152094
 15.424129  12.780757  16.66135   13.416192  16.040955  11.911672
 14.971494  12.986291  10.067756  17.38192   18.051758  17.099508
 13.234646  12.496044  15.378425  14.703319  13.445716  13.179843
 18.905428  14.471427  11.9351425 16.04497   16.324324  18.264307
 17.88953   15.571293  13.649151  13.090934 ]
('OPERATION_END_ELAPSED', 0.002, 'PREDICT')
('OPERATION_START', 'PREDICT')
[14.71263   14.666245  18.574312  18.807259  17.362217  12.122471
 11.650848  13.641475  12.504653  12.876247  15.270972  12.660427
 15.491778  11.701121  19.080013  18.082838  16.835205  15.2812805
 16.028177  17.361938  20.150684  19.754246   8.949345   9.778056
 11.054125  18.830597   8.625172  10.7084675 10.246433  12.224048
 17.396402  13.284589  18.491688  15.312333  20.035992  11.152093
 15.42413   12.780755  16.661354  13.416193  16.040956  11.911674
 14.971495  12.986287  10.067755  17.381924  18.051758  17.099504
 13.234645  12.496043  15.378421  14.70332   13.445718  13.179841
 18.905428  14.471431  11.9351425 16.044973  16.324322  18.264309
 17.889528  15.571293  13.649151  13.090932 ]
('OPERATION_END_ELAPSED', 0.002, 'PREDICT')
MODEL_PERFS {'class_name': 'mllite.SVR', 'model_name': 'SVR', 'options': '{"C" : 2}', 'dataset': 'freidman1_small', 'size': 64, 'mse': 4.17522, 'mae': 1.4398744, 'mape': 0.12205362, 'r2': 0.8015789976615808}
WRITING_PERF_CODE 'logs/auto_tests/regression/SVR/mllite.SVR_freidman1_small_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.SVR', 'model_name': 'SVR', 'options': '{"C" : 2}', 'dataset': 'freidman1_small', 'training_time_in_sec': 0.022, 'prediction_time_in_sec': 0.002}
WRITING_SQL_CODE 'logs/auto_tests/regression/SVR/mllite.SVR_freidman1_small_option_1_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('freidman1_small', 'SVR', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 )
,"SV_data" AS
 ( SELECT 
   "Values"."sv_idx" AS "sv_idx",
   "Values"."coeff" AS "coeff",
   "Values"."sv_0" AS "sv_0",
   "Values"."sv_1" AS "sv_1",
   "Values"."sv_2" AS "sv_2",
   "Values"."sv_3" AS "sv_3",
   "Values"."sv_4" AS "sv_4",
   "Values"."sv_5" AS "sv_5",
   "Values"."sv_6" AS "sv_6",
   "Values"."sv_7" AS "sv_7",
   "Values"."sv_8" AS "sv_8",
   "Values"."sv_9" AS "sv_9"
  FROM
  (
     SELECT 0 AS "sv_idx", 2.000000 AS "coeff", 0.544738 AS "sv_0", 0.515912 AS "sv_1", 0.990435 AS "sv_2", 0.255145 AS "sv_3", 0.143953 AS "sv_4", 0.332
SQL_OUT_PUT_FIRST_LINES_END ('freidman1_small', 'SVR', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('freidman1_small', 'SVR', 'duckdb')

    (SELECT
      full_join_data_sv."index" AS "index",
      sum(CAST(full_join_data_sv.dot_prod AS FLOAT)) - -14.313331 AS dot_product
     FROM
       (SELECT
          model_input."index" AS "index",
          "SV_data"."coeff" *  EXP( LEAST( GREATEST( CAST(-32.0 AS FLOAT), -1.117212 * (power(model_input."X_0" - "SV_data".sv_0, 2) + power(model_input."X_1" - "SV_data".sv_1, 2) + power(model_input."X_2" - "SV_data".sv_2, 2) + power(model_input."X_3" - "SV_data".sv_3, 2) + power(model_input."X_4" - "SV_data".sv_4, 2) + power(model_input."X_5" - "SV_data".sv_5, 2) + power(model_input."X_6" - "SV_data".sv_6, 2) + power(model_input."X_7" - "SV_data".sv_7, 2) + power(model_input."X_8" - "SV_data".sv_8, 2) + power(model_input."X_9" - "SV_data".sv_9, 2)) ), CAST(32.0 AS FLOAT) ) )  AS "dot_prod" 
        FROM
          model_input, "SV_data"
       ) AS full_join_data_sv
     GROUP BY full_join_data_sv."index"
    ) AS dp )
SELECT
  t."index" as "index",
  t."Estimator" as "Estimator"
FROM "Kernel_DotProd" AS t

SQL_OUT_PUT_LAST_LINES_END ('freidman1_small', 'SVR', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 64 entries, 0 to 63
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     64 non-null     float32
 1   X_1     64 non-null     float32
 2   X_2     64 non-null     float32
 3   X_3     64 non-null     float32
 4   X_4     64 non-null     float32
 5   X_5     64 non-null     float32
 6   X_6     64 non-null     float32
 7   X_7     64 non-null     float32
 8   X_8     64 non-null     float32
 9   X_9     64 non-null     float32
dtypes: float32(10)
memory usage: 3.0 KB
            X_0       X_1       X_2  ...       X_7       X_8       X_9
index                                ...                              
0      0.544738  0.515912  0.990435  ...  0.041089  0.898018  0.377159
1      0.783459  0.095321  0.135945  ...  0.422766  0.019766  0.833486
2      0.652811  0.757719  0.306902  ...  0.146070  0.894295  0.086598
3      0.226051  0.939732  0.731124  ...  0.843453  0.185038  0.248943
4      0.764610  0.378970  0.823855  ...  0.361050  0.814980  0.123688
...         ...       ...       ...  ...       ...       ...       ...
59     0.652046  0.852315  0.661294  ...  0.609463  0.682591  0.243739
60     0.133169  0.898182  0.993566  ...  0.033415  0.014059  0.907372
61     0.771820  0.489723  0.677121  ...  0.565222  0.039136  0.218690
62     0.059807  0.098960  0.941488  ...  0.265461  0.196262  0.732540
63     0.672520  0.960422  0.271050  ...  0.514037  0.918325  0.297702

[64 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 64 entries, 0 to 63
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      64 non-null     int64  
 1   Estimator  64 non-null     float64
dtypes: float64(1), int64(1)
memory usage: 1.1 KB
    index  Estimator
0       0  14.712630
1       1  14.666245
2       2  18.574312
3       3  18.807259
4       4  17.362217
..    ...        ...
59     59  18.264310
60     60  17.889528
61     61  15.571293
62     62  13.649151
63     63  13.090932

[64 rows x 2 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('freidman1_small', 'SVR') Estimator 1.68125719746115e-06
    index  SQL_Estimator  Py_Estimator     SQL_Error
48     48      13.234646     13.234646  2.929544e-08
49     49      12.496044     12.496044 -8.423120e-09
50     50      15.378421     15.378425 -3.826380e-06
51     51      14.703320     14.703319  1.360854e-06
52     52      13.445718     13.445716  2.273317e-06
53     53      13.179842     13.179843 -1.275487e-06
54     54      18.905428     18.905428  3.641059e-07
55     55      14.471431     14.471427  4.454009e-06
56     56      11.935144     11.935143  1.357361e-06
57     57      16.044973     16.044970  3.881246e-06
58     58      16.324323     16.324324 -9.132030e-07
59     59      18.264310     18.264307  2.555974e-06
60     60      17.889528     17.889530 -2.263854e-06
61     61      15.571293     15.571293  2.323238e-07
62     62      13.649151     13.649151  3.208941e-08
63     63      13.090932     13.090934 -1.548365e-06
MLLITE_REG_SQL_EXECUTION_STATUS ('freidman1_small', 'SVR', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/regression/SVR/mllite.SVR_freidman1_small_option_1_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('freidman1_small', 'SVR', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 )
,"SV_data" AS
 ( SELECT 
   "Values"."sv_idx" AS "sv_idx",
   "Values"."coeff" AS "coeff",
   "Values"."sv_0" AS "sv_0",
   "Values"."sv_1" AS "sv_1",
   "Values"."sv_2" AS "sv_2",
   "Values"."sv_3" AS "sv_3",
   "Values"."sv_4" AS "sv_4",
   "Values"."sv_5" AS "sv_5",
   "Values"."sv_6" AS "sv_6",
   "Values"."sv_7" AS "sv_7",
   "Values"."sv_8" AS "sv_8",
   "Values"."sv_9" AS "sv_9"
  FROM
  (
     SELECT 0 AS "sv_idx", 2.000000 AS "coeff", 0.544738 AS "sv_0", 0.515912 AS "sv_1", 0.990435 AS "sv_2", 0.255145 AS "sv_3", 0.143953 AS "sv_4", 0.332
SQL_OUT_PUT_FIRST_LINES_END ('freidman1_small', 'SVR', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('freidman1_small', 'SVR', 'sqlite')
   FROM
    (SELECT
      full_join_data_sv."index" AS "index",
      sum(CAST(full_join_data_sv.dot_prod AS FLOAT)) - -14.313331 AS dot_product
     FROM
       (SELECT
          model_input."index" AS "index",
          "SV_data"."coeff" *  EXP( MIN( MAX( CAST(-32.0 AS FLOAT), -1.117212 * (power(model_input."X_0" - "SV_data".sv_0, 2) + power(model_input."X_1" - "SV_data".sv_1, 2) + power(model_input."X_2" - "SV_data".sv_2, 2) + power(model_input."X_3" - "SV_data".sv_3, 2) + power(model_input."X_4" - "SV_data".sv_4, 2) + power(model_input."X_5" - "SV_data".sv_5, 2) + power(model_input."X_6" - "SV_data".sv_6, 2) + power(model_input."X_7" - "SV_data".sv_7, 2) + power(model_input."X_8" - "SV_data".sv_8, 2) + power(model_input."X_9" - "SV_data".sv_9, 2)) ), CAST(32.0 AS FLOAT) ) )  AS "dot_prod" 
        FROM
          model_input, "SV_data"
       ) AS full_join_data_sv
     GROUP BY full_join_data_sv."index"
    ) AS dp )
SELECT
  t."index" as "index",
  t."Estimator" as "Estimator"
FROM "Kernel_DotProd" AS t

SQL_OUT_PUT_LAST_LINES_END ('freidman1_small', 'SVR', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 64 entries, 0 to 63
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     64 non-null     float32
 1   X_1     64 non-null     float32
 2   X_2     64 non-null     float32
 3   X_3     64 non-null     float32
 4   X_4     64 non-null     float32
 5   X_5     64 non-null     float32
 6   X_6     64 non-null     float32
 7   X_7     64 non-null     float32
 8   X_8     64 non-null     float32
 9   X_9     64 non-null     float32
dtypes: float32(10)
memory usage: 3.0 KB
            X_0       X_1       X_2  ...       X_7       X_8       X_9
index                                ...                              
0      0.544738  0.515912  0.990435  ...  0.041089  0.898018  0.377159
1      0.783459  0.095321  0.135945  ...  0.422766  0.019766  0.833486
2      0.652811  0.757719  0.306902  ...  0.146070  0.894295  0.086598
3      0.226051  0.939732  0.731124  ...  0.843453  0.185038  0.248943
4      0.764610  0.378970  0.823855  ...  0.361050  0.814980  0.123688
...         ...       ...       ...  ...       ...       ...       ...
59     0.652046  0.852315  0.661294  ...  0.609463  0.682591  0.243739
60     0.133169  0.898182  0.993566  ...  0.033415  0.014059  0.907372
61     0.771820  0.489723  0.677121  ...  0.565222  0.039136  0.218690
62     0.059807  0.098960  0.941488  ...  0.265461  0.196262  0.732540
63     0.672520  0.960422  0.271050  ...  0.514037  0.918325  0.297702

[64 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 64 entries, 0 to 63
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      64 non-null     int64  
 1   Estimator  64 non-null     float64
dtypes: float64(1), int64(1)
memory usage: 1.1 KB
    index  Estimator
0       0  14.712630
1       1  14.666245
2       2  18.574312
3       3  18.807259
4       4  17.362217
..    ...        ...
59     59  18.264310
60     60  17.889528
61     61  15.571293
62     62  13.649151
63     63  13.090932

[64 rows x 2 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('freidman1_small', 'SVR') Estimator 1.7012582295972134e-06
    index  SQL_Estimator  Py_Estimator     SQL_Error
48     48      13.234646     13.234646  3.732423e-08
49     49      12.496044     12.496044  1.729876e-07
50     50      15.378421     15.378425 -3.861150e-06
51     51      14.703320     14.703319  1.529052e-06
52     52      13.445718     13.445716  2.459037e-06
53     53      13.179842     13.179843 -1.267589e-06
54     54      18.905428     18.905428  1.142594e-07
55     55      14.471431     14.471427  4.319532e-06
56     56      11.935144     11.935143  1.391393e-06
57     57      16.044974     16.044970  4.064958e-06
58     58      16.324323     16.324324 -8.591396e-07
59     59      18.264310     18.264307  2.535465e-06
60     60      17.889528     17.889530 -2.225998e-06
61     61      15.571293     15.571293  1.141810e-07
62     62      13.649151     13.649151  9.258847e-08
63     63      13.090932     13.090934 -1.725261e-06
MLLITE_REG_SQL_EXECUTION_STATUS ('freidman1_small', 'SVR', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/regression/SVR/mllite.SVR_freidman1_small_option_1_pgsql.sql'



SQL_OUT_PUT_FIRST_LINES_START ('freidman1_small', 'SVR', 'pgsql')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 )
,"SV_data" AS
 ( SELECT 
   "Values"."sv_idx" AS "sv_idx",
   "Values"."coeff" AS "coeff",
   "Values"."sv_0" AS "sv_0",
   "Values"."sv_1" AS "sv_1",
   "Values"."sv_2" AS "sv_2",
   "Values"."sv_3" AS "sv_3",
   "Values"."sv_4" AS "sv_4",
   "Values"."sv_5" AS "sv_5",
   "Values"."sv_6" AS "sv_6",
   "Values"."sv_7" AS "sv_7",
   "Values"."sv_8" AS "sv_8",
   "Values"."sv_9" AS "sv_9"
  FROM
  (
     SELECT 0 AS "sv_idx", 2.000000 AS "coeff", 0.544738 AS "sv_0", 0.515912 AS "sv_1", 0.990435 AS "sv_2", 0.255145 AS "sv_3", 0.143953 AS "sv_4", 0.332
SQL_OUT_PUT_FIRST_LINES_END ('freidman1_small', 'SVR', 'pgsql')
SQL_OUT_PUT_LAST_LINES_START ('freidman1_small', 'SVR', 'pgsql')

    (SELECT
      full_join_data_sv."index" AS "index",
      sum(CAST(full_join_data_sv.dot_prod AS FLOAT)) - -14.313331 AS dot_product
     FROM
       (SELECT
          model_input."index" AS "index",
          "SV_data"."coeff" *  EXP( LEAST( GREATEST( CAST(-32.0 AS FLOAT), -1.117212 * (power(model_input."X_0" - "SV_data".sv_0, 2) + power(model_input."X_1" - "SV_data".sv_1, 2) + power(model_input."X_2" - "SV_data".sv_2, 2) + power(model_input."X_3" - "SV_data".sv_3, 2) + power(model_input."X_4" - "SV_data".sv_4, 2) + power(model_input."X_5" - "SV_data".sv_5, 2) + power(model_input."X_6" - "SV_data".sv_6, 2) + power(model_input."X_7" - "SV_data".sv_7, 2) + power(model_input."X_8" - "SV_data".sv_8, 2) + power(model_input."X_9" - "SV_data".sv_9, 2)) ), CAST(32.0 AS FLOAT) ) )  AS "dot_prod" 
        FROM
          model_input, "SV_data"
       ) AS full_join_data_sv
     GROUP BY full_join_data_sv."index"
    ) AS dp )
SELECT
  t."index" as "index",
  t."Estimator" as "Estimator"
FROM "Kernel_DotProd" AS t

SQL_OUT_PUT_LAST_LINES_END ('freidman1_small', 'SVR', 'pgsql') 




COPY_TRAINING_DATA_TO_SQLITE_START
