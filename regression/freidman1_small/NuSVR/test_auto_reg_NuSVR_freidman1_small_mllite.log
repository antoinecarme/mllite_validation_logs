         X_0       X_1       X_2  ...       X_8       X_9     target
0   0.544738  0.515912  0.990435  ...  0.898018  0.377159  15.807614
1   0.783459  0.095321  0.135945  ...  0.019766  0.833486  14.766437
2   0.652811  0.757719  0.306902  ...  0.894295  0.086598  22.842493
3   0.226051  0.939732  0.731124  ...  0.185038  0.248943  19.544314
4   0.764610  0.378970  0.823855  ...  0.814980  0.123688  21.897690
..       ...       ...       ...  ...       ...       ...        ...
59  0.652046  0.852315  0.661294  ...  0.682591  0.243739  18.364700
60  0.133169  0.898182  0.993566  ...  0.014059  0.907372  19.271183
61  0.771820  0.489723  0.677121  ...  0.039136  0.218690  15.917285
62  0.059807  0.098960  0.941488  ...  0.196262  0.732540  13.422214
63  0.672520  0.960422  0.271050  ...  0.918325  0.297702  12.990523

[64 rows x 11 columns]
MLLITE_MODEL_SET_OPTIONS NuSVR None
MLLITE_MODEL_OPTIONS_DEFAULT NuSVR { "max_iter" : 128 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING NuSVR { ,  "max_iter" : 128  , }
MLLITE_MODEL_JSON_AFTER_SETTING NuSVR None
('OPERATION_START', 'TRAINING')
[[0.54473835 0.51591223 0.99043506 0.25514543 0.14395337 0.33235115
  0.8686215  0.04108923 0.8980185  0.37715888]
 [0.78345853 0.09532096 0.1359447  0.858711   0.24078475 0.08367069
  0.05237448 0.42276597 0.01976581 0.8334865 ]
 [0.652811   0.75771934 0.3069025  0.8282855  0.7630638  0.85900337
  0.87337655 0.14607023 0.89429516 0.08659814]
 [0.22605109 0.9397324  0.7311243  0.8374556  0.7824477  0.3529266
  0.1832118  0.84345275 0.18503828 0.2489433 ]
 [0.76461023 0.37897    0.82385516 0.9136035  0.55340034 0.05504839
  0.58833206 0.36104986 0.81497955 0.12368783]] [15.807614 14.766437 22.842493 19.544313 21.89769 ]
MLLITE_FIT_USING_MODEL mllite_nu_svm_reg.NuSVR_ff4_ff4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_NU_REGRESSOR_FIT' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_NU_REGRESSOR_FIT' 2 4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_NU_REGRESSOR_FIT' 3 4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:NuSVR_Global' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:NuSVR_Global' 24 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:NuSVR_Global' 36 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_NU_REGRESSOR_FIT' 4 4
('OPERATION_END_ELAPSED', 0.015, 'TRAINING')
{ ,  "max_iter" : 128  , }
{ ,  "max_iter" : 128  , }
{
	"metadata" : { "model" : "Vapnik_NuSVR_RBF", "version" : "2024-W14", "signature" : "ff4_ff4"},
	"options" : {"svm_type" : "nu_svr", "kernel" : "rbf", "degree" : 3, "gamma" : 1.117212, "coef0" : 0.000000, "cache_size" : 300, "tol" : 0.001000, "nu" : 0.500000, "epsilon" : 0.000000, "shrinking" : 0, "probability" : 0, "C" : 1.000000, "max_iter" : 128, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 10 },
	"svm_model" : {
	"classes" : 2,
	"L" : 37,
	"SupportVectors" : {
		"SV_00" : [ 0.652811, 0.757719, 0.306902, 0.828286, 0.763064, 0.859003, 0.873377, 0.146070, 0.894295, 0.086598 ],
		"SV_01" : [ 0.226051, 0.939732, 0.731124, 0.837456, 0.782448, 0.352927, 0.183212, 0.843453, 0.185038, 0.248943 ],
		"SV_02" : [ 0.764610, 0.378970, 0.823855, 0.913603, 0.553400, 0.055048, 0.588332, 0.361050, 0.814980, 0.123688 ],
		"SV_03" : [ 0.368356, 0.189593, 0.403483, 0.670145, 0.411066, 0.464093, 0.307388, 0.840440, 0.462841, 0.813023 ],
		"SV_04" : [ 0.888102, 0.149216, 0.426902, 0.180039, 0.792176, 0.085835, 0.603319, 0.653572, 0.865909, 0.986362 ],
		"SV_05" : [ 0.235384, 0.117604, 0.514017, 0.633968, 0.618557, 0.121827, 0.576931, 0.091568, 0.527227, 0.211281 ],
		"SV_06" : [ 0.399336, 0.628863, 0.606025, 0.837489, 0.772643, 0.257624, 0.166252, 0.040244, 0.521303, 0.455322 ],
		"SV_07" : [ 0.634220, 0.486969, 0.969793, 0.441636, 0.814121, 0.690923, 0.194226, 0.716476, 0.697923, 0.212891 ],
		"SV_08" : [ 0.772433, 0.764512, 0.960643, 0.302594, 0.292439, 0.441128, 0.688884, 0.145406, 0.532042, 0.749330 ],
		"SV_09" : [ 0.604811, 0.984899, 0.598416, 0.783427, 0.739098, 0.893643, 0.193266, 0.096950, 0.547724, 0.389115 ],
		"SV_10" : [ 0.480054, 0.664308, 0.985340, 0.567078, 0.994149, 0.780890, 0.232756, 0.567089, 0.093123, 0.031981 ],
		"SV_11" : [ 0.257439, 0.499463, 0.260146, 0.239901, 0.156860, 0.590953, 0.077376, 0.340943, 0.943330, 0.056908 ],
		"SV_12" : [ 0.010500, 0.200190, 0.192366, 0.175831, 0.507530, 0.721218, 0.719388, 0.114770, 0.417354, 0.783886 ],
		"SV_13" : [ 0.341289, 0.059388, 0.275743, 0.885258, 0.018723, 0.985191, 0.272452, 0.138076, 0.832781, 0.073518 ],
		"SV_14" : [ 0.759884, 0.645603, 0.858346, 0.414192, 0.746659, 0.476919, 0.729435, 0.314409, 0.340241, 0.086284 ],
		"SV_15" : [ 0.361047, 0.160106, 0.219158, 0.010201, 0.471566, 0.488280, 0.020705, 0.852158, 0.667965, 0.378921 ],
		"SV_16" : [ 0.707837, 0.144074, 0.012616, 0.030879, 0.479881, 0.891077, 0.451813, 0.845402, 0.259907, 0.331544 ],
		"SV_17" : [ 0.387013, 0.186144, 0.843217, 0.273500, 0.175361, 0.010880, 0.338375, 0.530580, 0.739766, 0.316235 ],
		"SV_18" : [ 0.468597, 0.178458, 0.334268, 0.726481, 0.251948, 0.416145, 0.033750, 0.950958, 0.192608, 0.099539 ],
		"SV_19" : [ 0.705919, 0.335669, 0.829238, 0.863314, 0.287537, 0.639683, 0.745771, 0.787558, 0.582418, 0.363306 ],
		"SV_20" : [ 0.975417, 0.002660, 0.366127, 0.434512, 0.945664, 0.329085, 0.852323, 0.591908, 0.151237, 0.221160 ],
		"SV_21" : [ 0.479223, 0.684603, 0.324254, 0.801230, 0.871487, 0.937278, 0.292127, 0.900755, 0.827968, 0.568796 ],
		"SV_22" : [ 0.457487, 0.414129, 0.014223, 0.378696, 0.893256, 0.937627, 0.113897, 0.460844, 0.008495, 0.149271 ],
		"SV_23" : [ 0.734481, 0.482054, 0.789831, 0.806913, 0.681106, 0.602843, 0.333277, 0.147743, 0.020703, 0.509223 ],
		"SV_24" : [ 0.993297, 0.015448, 0.073074, 0.123516, 0.766918, 0.032547, 0.970468, 0.585911, 0.580508, 0.025791 ],
		"SV_25" : [ 0.774018, 0.202348, 0.142057, 0.873570, 0.310546, 0.683928, 0.650031, 0.492748, 0.253903, 0.786608 ],
		"SV_26" : [ 0.343479, 0.049133, 0.720020, 0.841468, 0.199002, 0.085445, 0.635873, 0.354635, 0.971117, 0.361298 ],
		"SV_27" : [ 0.366207, 0.096199, 0.520676, 0.250113, 0.155164, 0.752654, 0.007439, 0.025310, 0.924844, 0.961402 ],
		"SV_28" : [ 0.827680, 0.741216, 0.967589, 0.359411, 0.243325, 0.911669, 0.829354, 0.787352, 0.791034, 0.782214 ],
		"SV_29" : [ 0.663564, 0.399281, 0.158547, 0.930965, 0.846977, 0.986627, 0.132816, 0.426558, 0.999950, 0.674509 ],
		"SV_30" : [ 0.849990, 0.916139, 0.864912, 0.228437, 0.340806, 0.227606, 0.447862, 0.068150, 0.472487, 0.104133 ],
		"SV_31" : [ 0.823836, 0.504187, 0.034569, 0.308381, 0.003390, 0.039580, 0.879070, 0.101112, 0.747507, 0.958859 ],
		"SV_32" : [ 0.221163, 0.634851, 0.675740, 0.393459, 0.593254, 0.877299, 0.742170, 0.322286, 0.749472, 0.996954 ],
		"SV_33" : [ 0.509773, 0.341051, 0.395373, 0.566571, 0.346628, 0.931609, 0.107350, 0.085550, 0.260950, 0.128551 ],
		"SV_34" : [ 0.246418, 0.754389, 0.264436, 0.996826, 0.880107, 0.261948, 0.595422, 0.306809, 0.390167, 0.471118 ],
		"SV_35" : [ 0.804101, 0.103050, 0.728795, 0.068628, 0.567613, 0.648562, 0.495718, 0.628355, 0.398738, 0.185100 ],
		"SV_36" : [ 0.133169, 0.898182, 0.993566, 0.694676, 0.756484, 0.193983, 0.035123, 0.033415, 0.014059, 0.907372 ]
	},
	"SupportVectorsCoefs" : {
		"SV_coef_0" : [ 1.000000, 0.167186, 1.000000, -1.000000, -1.000000, -1.000000, 0.452518, 1.000000, 0.641231, 1.000000, 1.000000, -1.000000, -1.000000, -1.000000, 1.000000, -1.000000, -0.937348, -1.000000, -0.222402, 1.000000, -1.000000, 1.000000, 1.000000, 1.000000, -1.000000, 0.437265, -1.000000, -1.000000, 0.802660, 1.000000, -0.829068, 0.499141, -1.000000, -0.011183, 1.000000, -1.000000, 1.000000 ]
	},
	"rho" : [ -14.879629 ],
	"nSV" : [ 37 ],
	"probA" : [ ],
	"probB" : [ ],
	"n_iter" : [ 42 ]
}
}
WRITING_JSON_CODE 'logs/auto_tests/regression/NuSVR/mllite.NuSVR_freidman1_small.json'

MLLITE_MODEL_SET_OPTIONS NuSVR None
MLLITE_MODEL_OPTIONS_DEFAULT NuSVR { "max_iter" : 128 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING NuSVR { ,  "max_iter" : 128  , }
MLLITE_MODEL_JSON_AFTER_SETTING NuSVR None
MLLITE_RELOADING_MODEL mllite_nu_svm_reg.NuSVR_ff4_ff4
{
	"metadata" : { "model" : "Vapnik_NuSVR_RBF", "version" : "2024-W14", "signature" : "ff4_ff4"},
	"options" : {"svm_type" : "nu_svr", "kernel" : "rbf", "degree" : 3, "gamma" : 1.117212, "coef0" : 0.000000, "cache_size" : 300, "tol" : 0.001000, "nu" : 0.500000, "epsilon" : 0.000000, "shrinking" : 0, "probability" : 0, "C" : 1.000000, "max_iter" : 128, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 10 },
	"svm_model" : {
	"classes" : 2,
	"L" : 37,
	"SupportVectors" : {
		"SV_00" : [ 0.652811, 0.757719, 0.306902, 0.828286, 0.763064, 0.859003, 0.873377, 0.146070, 0.894295, 0.086598 ],
		"SV_01" : [ 0.226051, 0.939732, 0.731124, 0.837456, 0.782448, 0.352927, 0.183212, 0.843453, 0.185038, 0.248943 ],
		"SV_02" : [ 0.764610, 0.378970, 0.823855, 0.913603, 0.553400, 0.055048, 0.588332, 0.361050, 0.814980, 0.123688 ],
		"SV_03" : [ 0.368356, 0.189593, 0.403483, 0.670145, 0.411066, 0.464093, 0.307388, 0.840440, 0.462841, 0.813023 ],
		"SV_04" : [ 0.888102, 0.149216, 0.426902, 0.180039, 0.792176, 0.085835, 0.603319, 0.653572, 0.865909, 0.986362 ],
		"SV_05" : [ 0.235384, 0.117604, 0.514017, 0.633968, 0.618557, 0.121827, 0.576931, 0.091568, 0.527227, 0.211281 ],
		"SV_06" : [ 0.399336, 0.628863, 0.606025, 0.837489, 0.772643, 0.257624, 0.166252, 0.040244, 0.521303, 0.455322 ],
		"SV_07" : [ 0.634220, 0.486969, 0.969793, 0.441636, 0.814121, 0.690923, 0.194226, 0.716476, 0.697923, 0.212891 ],
		"SV_08" : [ 0.772433, 0.764512, 0.960643, 0.302594, 0.292439, 0.441128, 0.688884, 0.145406, 0.532042, 0.749330 ],
		"SV_09" : [ 0.604811, 0.984899, 0.598416, 0.783427, 0.739098, 0.893643, 0.193266, 0.096950, 0.547724, 0.389115 ],
		"SV_10" : [ 0.480054, 0.664308, 0.985340, 0.567078, 0.994149, 0.780890, 0.232756, 0.567089, 0.093123, 0.031981 ],
		"SV_11" : [ 0.257439, 0.499463, 0.260146, 0.239901, 0.156860, 0.590953, 0.077376, 0.340943, 0.943330, 0.056908 ],
		"SV_12" : [ 0.010500, 0.200190, 0.192366, 0.175831, 0.507530, 0.721218, 0.719388, 0.114770, 0.417354, 0.783886 ],
		"SV_13" : [ 0.341289, 0.059388, 0.275743, 0.885258, 0.018723, 0.985191, 0.272452, 0.138076, 0.832781, 0.073518 ],
		"SV_14" : [ 0.759884, 0.645603, 0.858346, 0.414192, 0.746659, 0.476919, 0.729435, 0.314409, 0.340241, 0.086284 ],
		"SV_15" : [ 0.361047, 0.160106, 0.219158, 0.010201, 0.471566, 0.488280, 0.020705, 0.852158, 0.667965, 0.378921 ],
		"SV_16" : [ 0.707837, 0.144074, 0.012616, 0.030879, 0.479881, 0.891077, 0.451813, 0.845402, 0.259907, 0.331544 ],
		"SV_17" : [ 0.387013, 0.186144, 0.843217, 0.273500, 0.175361, 0.010880, 0.338375, 0.530580, 0.739766, 0.316235 ],
		"SV_18" : [ 0.468597, 0.178458, 0.334268, 0.726481, 0.251948, 0.416145, 0.033750, 0.950958, 0.192608, 0.099539 ],
		"SV_19" : [ 0.705919, 0.335669, 0.829238, 0.863314, 0.287537, 0.639683, 0.745771, 0.787558, 0.582418, 0.363306 ],
		"SV_20" : [ 0.975417, 0.002660, 0.366127, 0.434512, 0.945664, 0.329085, 0.852323, 0.591908, 0.151237, 0.221160 ],
		"SV_21" : [ 0.479223, 0.684603, 0.324254, 0.801230, 0.871487, 0.937278, 0.292127, 0.900755, 0.827968, 0.568796 ],
		"SV_22" : [ 0.457487, 0.414129, 0.014223, 0.378696, 0.893256, 0.937627, 0.113897, 0.460844, 0.008495, 0.149271 ],
		"SV_23" : [ 0.734481, 0.482054, 0.789831, 0.806913, 0.681106, 0.602843, 0.333277, 0.147743, 0.020703, 0.509223 ],
		"SV_24" : [ 0.993297, 0.015448, 0.073074, 0.123516, 0.766918, 0.032547, 0.970468, 0.585911, 0.580508, 0.025791 ],
		"SV_25" : [ 0.774018, 0.202348, 0.142057, 0.873570, 0.310546, 0.683928, 0.650031, 0.492748, 0.253903, 0.786608 ],
		"SV_26" : [ 0.343479, 0.049133, 0.720020, 0.841468, 0.199002, 0.085445, 0.635873, 0.354635, 0.971117, 0.361298 ],
		"SV_27" : [ 0.366207, 0.096199, 0.520676, 0.250113, 0.155164, 0.752654, 0.007439, 0.025310, 0.924844, 0.961402 ],
		"SV_28" : [ 0.827680, 0.741216, 0.967589, 0.359411, 0.243325, 0.911669, 0.829354, 0.787352, 0.791034, 0.782214 ],
		"SV_29" : [ 0.663564, 0.399281, 0.158547, 0.930965, 0.846977, 0.986627, 0.132816, 0.426558, 0.999950, 0.674509 ],
		"SV_30" : [ 0.849990, 0.916139, 0.864912, 0.228437, 0.340806, 0.227606, 0.447862, 0.068150, 0.472487, 0.104133 ],
		"SV_31" : [ 0.823836, 0.504187, 0.034569, 0.308381, 0.003390, 0.039580, 0.879070, 0.101112, 0.747507, 0.958859 ],
		"SV_32" : [ 0.221163, 0.634851, 0.675740, 0.393459, 0.593254, 0.877299, 0.742170, 0.322286, 0.749472, 0.996954 ],
		"SV_33" : [ 0.509773, 0.341051, 0.395373, 0.566571, 0.346628, 0.931609, 0.107350, 0.085550, 0.260950, 0.128551 ],
		"SV_34" : [ 0.246418, 0.754389, 0.264436, 0.996826, 0.880107, 0.261948, 0.595422, 0.306809, 0.390167, 0.471118 ],
		"SV_35" : [ 0.804101, 0.103050, 0.728795, 0.068628, 0.567613, 0.648562, 0.495718, 0.628355, 0.398738, 0.185100 ],
		"SV_36" : [ 0.133169, 0.898182, 0.993566, 0.694676, 0.756484, 0.193983, 0.035123, 0.033415, 0.014059, 0.907372 ]
	},
	"SupportVectorsCoefs" : {
		"SV_coef_0" : [ 1.000000, 0.167186, 1.000000, -1.000000, -1.000000, -1.000000, 0.452518, 1.000000, 0.641231, 1.000000, 1.000000, -1.000000, -1.000000, -1.000000, 1.000000, -1.000000, -0.937348, -1.000000, -0.222402, 1.000000, -1.000000, 1.000000, 1.000000, 1.000000, -1.000000, 0.437265, -1.000000, -1.000000, 0.802660, 1.000000, -0.829068, 0.499141, -1.000000, -0.011183, 1.000000, -1.000000, 1.000000 ]
	},
	"rho" : [ -14.879629 ],
	"nSV" : [ 37 ],
	"probA" : [ ],
	"probB" : [ ],
	"n_iter" : [ 42 ]
}
}
BEAUTIFIED_JSON_START
{
	"dataset" : 	{
		"dataset_features" : 10,
		"dataset_rows" : 64
	},
	"metadata" :  { "model" : "Vapnik_NuSVR_RBF", "signature" : "ff4_ff4", "version" : "2024-W14" },
	"options" :  { "C" : 1.0, "cache_size" : 300, "coef0" : 0.0, "degree" : 3, "epsilon" : 0.0, "gamma" : 1.117212, "kernel" : "rbf", "max_iter" : 128, "nu" : 0.5, "probability" : 0, "random_state" : 1789, "shrinking" : 0, "svm_type" : "nu_svr", "tol" : 0.001 },
	"svm_model" : 	{
		"L" : 37,
		"SupportVectors" : 	{
			"SV_00" : [ 0.652811, 0.757719, 0.306902, 0.828286, 0.763064, 0.859003, 0.873377, 0.14607, 0.894295, 0.086598 ],
			"SV_01" : [ 0.226051, 0.939732, 0.731124, 0.837456, 0.782448, 0.352927, 0.183212, 0.843453, 0.185038, 0.248943 ],
			"SV_02" : [ 0.76461, 0.37897, 0.823855, 0.913603, 0.5534, 0.055048, 0.588332, 0.36105, 0.81498, 0.123688 ],
			"SV_03" : [ 0.368356, 0.189593, 0.403483, 0.670145, 0.411066, 0.464093, 0.307388, 0.84044, 0.462841, 0.813023 ],
			"SV_04" : [ 0.888102, 0.149216, 0.426902, 0.180039, 0.792176, 0.085835, 0.603319, 0.653572, 0.865909, 0.986362 ],
			"SV_05" : [ 0.235384, 0.117604, 0.514017, 0.633968, 0.618557, 0.121827, 0.576931, 0.091568, 0.527227, 0.211281 ],
			"SV_06" : [ 0.399336, 0.628863, 0.606025, 0.837489, 0.772643, 0.257624, 0.166252, 0.040244, 0.521303, 0.455322 ],
			"SV_07" : [ 0.63422, 0.486969, 0.969793, 0.441636, 0.814121, 0.690923, 0.194226, 0.716476, 0.697923, 0.212891 ],
			"SV_08" : [ 0.772433, 0.764512, 0.960643, 0.302594, 0.292439, 0.441128, 0.688884, 0.145406, 0.532042, 0.74933 ],
			"SV_09" : [ 0.604811, 0.984899, 0.598416, 0.783427, 0.739098, 0.893643, 0.193266, 0.09695, 0.547724, 0.389115 ],
			"SV_10" : [ 0.480054, 0.664308, 0.98534, 0.567078, 0.994149, 0.78089, 0.232756, 0.567089, 0.093123, 0.031981 ],
			"SV_11" : [ 0.257439, 0.499463, 0.260146, 0.239901, 0.15686, 0.590953, 0.077376, 0.340943, 0.94333, 0.056908 ],
			"SV_12" : [ 0.0105, 0.20019, 0.192366, 0.175831, 0.50753, 0.721218, 0.719388, 0.11477, 0.417354, 0.783886 ],
			"SV_13" : [ 0.341289, 0.059388, 0.275743, 0.885258, 0.018723, 0.985191, 0.272452, 0.138076, 0.832781, 0.073518 ],
			"SV_14" : [ 0.759884, 0.645603, 0.858346, 0.414192, 0.746659, 0.476919, 0.729435, 0.314409, 0.340241, 0.086284 ],
			"SV_15" : [ 0.361047, 0.160106, 0.219158, 0.010201, 0.471566, 0.48828, 0.020705, 0.852158, 0.667965, 0.378921 ],
			"SV_16" : [ 0.707837, 0.144074, 0.012616, 0.030879, 0.479881, 0.891077, 0.451813, 0.845402, 0.259907, 0.331544 ],
			"SV_17" : [ 0.387013, 0.186144, 0.843217, 0.2735, 0.175361, 0.01088, 0.338375, 0.53058, 0.739766, 0.316235 ],
			"SV_18" : [ 0.468597, 0.178458, 0.334268, 0.726481, 0.251948, 0.416145, 0.03375, 0.950958, 0.192608, 0.099539 ],
			"SV_19" : [ 0.705919, 0.335669, 0.829238, 0.863314, 0.287537, 0.639683, 0.745771, 0.787558, 0.582418, 0.363306 ],
			"SV_20" : [ 0.975417, 0.00266, 0.366127, 0.434512, 0.945664, 0.329085, 0.852323, 0.591908, 0.151237, 0.22116 ],
			"SV_21" : [ 0.479223, 0.684603, 0.324254, 0.80123, 0.871487, 0.937278, 0.292127, 0.900755, 0.827968, 0.568796 ],
			"SV_22" : [ 0.457487, 0.414129, 0.014223, 0.378696, 0.893256, 0.937627, 0.113897, 0.460844, 0.008495, 0.149271 ],
			"SV_23" : [ 0.734481, 0.482054, 0.789831, 0.806913, 0.681106, 0.602843, 0.333277, 0.147743, 0.020703, 0.509223 ],
			"SV_24" : [ 0.993297, 0.015448, 0.073074, 0.123516, 0.766918, 0.032547, 0.970468, 0.585911, 0.580508, 0.025791 ],
			"SV_25" : [ 0.774018, 0.202348, 0.142057, 0.87357, 0.310546, 0.683928, 0.650031, 0.492748, 0.253903, 0.786608 ],
			"SV_26" : [ 0.343479, 0.049133, 0.72002, 0.841468, 0.199002, 0.085445, 0.635873, 0.354635, 0.971117, 0.361298 ],
			"SV_27" : [ 0.366207, 0.096199, 0.520676, 0.250113, 0.155164, 0.752654, 0.007439, 0.02531, 0.924844, 0.961402 ],
			"SV_28" : [ 0.82768, 0.741216, 0.967589, 0.359411, 0.243325, 0.911669, 0.829354, 0.787352, 0.791034, 0.782214 ],
			"SV_29" : [ 0.663564, 0.399281, 0.158547, 0.930965, 0.846977, 0.986627, 0.132816, 0.426558, 0.99995, 0.674509 ],
			"SV_30" : [ 0.84999, 0.916139, 0.864912, 0.228437, 0.340806, 0.227606, 0.447862, 0.06815, 0.472487, 0.104133 ],
			"SV_31" : [ 0.823836, 0.504187, 0.034569, 0.308381, 0.00339, 0.03958, 0.87907, 0.101112, 0.747507, 0.958859 ],
			"SV_32" : [ 0.221163, 0.634851, 0.67574, 0.393459, 0.593254, 0.877299, 0.74217, 0.322286, 0.749472, 0.996954 ],
			"SV_33" : [ 0.509773, 0.341051, 0.395373, 0.566571, 0.346628, 0.931609, 0.10735, 0.08555, 0.26095, 0.128551 ],
			"SV_34" : [ 0.246418, 0.754389, 0.264436, 0.996826, 0.880107, 0.261948, 0.595422, 0.306809, 0.390167, 0.471118 ],
			"SV_35" : [ 0.804101, 0.10305, 0.728795, 0.068628, 0.567613, 0.648562, 0.495718, 0.628355, 0.398738, 0.1851 ],
			"SV_36" : [ 0.133169, 0.898182, 0.993566, 0.694676, 0.756484, 0.193983, 0.035123, 0.033415, 0.014059, 0.907372 ]
		},
		"SupportVectorsCoefs" : 	{
			"SV_coef_0" : [ 1.0, 0.167186, 1.0, -1.0, -1.0, -1.0, 0.452518, 1.0, 0.641231, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -0.937348, -1.0, -0.222402, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.437265, -1.0, -1.0, 0.80266, 1.0, -0.829068, 0.499141, -1.0, -0.011183, 1.0, -1.0, 1.0 ]
		},
		"classes" : 2,
		"nSV" : [ 37 ],
		"n_iter" : [ 42 ],
		"probA" : [  ],
		"probB" : [  ],
		"rho" : [ -14.879629 ]
	}
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
[14.535302  14.626285  17.158625  17.1171    15.848842  13.701621
 13.142424  13.859838  13.743699  14.798632  15.592642  13.974222
 16.272024  13.980885  17.132439  16.839014  15.903567  16.222954
 16.28633   16.127285  18.305107  17.836792  12.844085  12.950718
 13.608454  16.946152  12.195845  13.035169  12.579525  14.098169
 16.278744  13.603344  17.15689   15.835658  17.742828  12.823497
 15.855722  14.775422  15.476884  13.828271  15.148635  13.380319
 16.041096  13.908557  12.887979  16.12767   16.69555   15.805661
 14.371401  14.584209  15.483298  14.65525   14.715578  15.238907
 17.11873   15.643511  13.568308  15.48652   16.293749  16.954815
 16.745167  15.0118265 14.885259  14.949161 ]
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
('OPERATION_START', 'PREDICT')
[14.535302  14.626285  17.158627  17.1171    15.848842  13.701622
 13.142424  13.859838  13.743698  14.798632  15.592643  13.974222
 16.272026  13.980885  17.132439  16.839016  15.903567  16.222954
 16.28633   16.127285  18.305107  17.836792  12.844085  12.950718
 13.608455  16.946152  12.195844  13.03517   12.579525  14.09817
 16.278746  13.603344  17.156893  15.835658  17.742828  12.823496
 15.855723  14.775422  15.476886  13.828271  15.148636  13.38032
 16.041098  13.908556  12.8879795 16.12767   16.695553  15.80566
 14.3714    14.584209  15.483297  14.655251  14.715579  15.238907
 17.11873   15.643513  13.568308  15.486521  16.293749  16.954817
 16.745167  15.0118265 14.885259  14.949162 ]
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
MODEL_PERFS {'class_name': 'mllite.NuSVR', 'model_name': 'NuSVR', 'options': None, 'dataset': 'freidman1_small', 'size': 64, 'mse': 10.945798, 'mae': 2.763978, 'mape': 0.23703496, 'r2': 0.47981753140821326}
WRITING_PERF_CODE 'logs/auto_tests/regression/NuSVR/mllite.NuSVR_freidman1_small.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.NuSVR', 'model_name': 'NuSVR', 'options': None, 'dataset': 'freidman1_small', 'training_time_in_sec': 0.015, 'prediction_time_in_sec': 0.001}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 0 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 1 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 2 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 3 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 4 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 5 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 6 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 7 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 8 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 9 10
{
   "Contributions" : {
      "X_0" : [ -0.002796 ],
      "X_1" : [ -0.253742 ],
      "X_2" : [ -0.095810 ],
      "X_3" : [ -0.222482 ],
      "X_4" : [ -0.071238 ],
      "X_5" : [ 0.030711 ],
      "X_6" : [ -0.011387 ],
      "X_7" : [ -0.001457 ],
      "X_8" : [ -0.031407 ],
      "X_9" : [ 0.000607 ]   
   },
   "Most_Contributive_Features" : {
      "y" : [ 1, 3, 2, 4, 8, 5, 6, 0, 7, 9 ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/regression/NuSVR/mllite.NuSVR_freidman1_small_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/regression/NuSVR/mllite.NuSVR_freidman1_small_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('freidman1_small', 'NuSVR', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "freidman1_small" AS "ADS" 
 )
,"SV_data" AS
 ( SELECT 
   "Values"."sv_idx" AS "sv_idx",
   "Values"."coeff" AS "coeff",
   "Values"."sv_0" AS "sv_0",
   "Values"."sv_1" AS "sv_1",
   "Values"."sv_2" AS "sv_2",
   "Values"."sv_3" AS "sv_3",
   "Values"."sv_4" AS "sv_4",
   "Values"."sv_5" AS "sv_5",
   "Values"."sv_6" AS "sv_6",
   "Values"."sv_7" AS "sv_7",
   "Values"."sv_8" AS "sv_8",
   "Values"."sv_9" AS "sv_9"
  FROM
  (
     SELECT 0 AS "sv_idx", 1.000000 AS "coeff", 0.652811 AS "sv_0", 0.757719 AS "sv_1", 0.306902 AS "sv_2", 0.828286 AS "sv_3", 0.763064 AS "sv_4", 0.859003
SQL_OUT_PUT_FIRST_LINES_END ('freidman1_small', 'NuSVR', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('freidman1_small', 'NuSVR', 'duckdb')

    (SELECT
      full_join_data_sv."index" AS "index",
      sum(CAST(full_join_data_sv.dot_prod AS FLOAT)) - -14.879629 AS dot_product
     FROM
       (SELECT
          model_input."index" AS "index",
          "SV_data"."coeff" *  EXP( LEAST( GREATEST( CAST(-32.0 AS FLOAT), -1.117212 * (power(model_input."X_0" - "SV_data".sv_0, 2) + power(model_input."X_1" - "SV_data".sv_1, 2) + power(model_input."X_2" - "SV_data".sv_2, 2) + power(model_input."X_3" - "SV_data".sv_3, 2) + power(model_input."X_4" - "SV_data".sv_4, 2) + power(model_input."X_5" - "SV_data".sv_5, 2) + power(model_input."X_6" - "SV_data".sv_6, 2) + power(model_input."X_7" - "SV_data".sv_7, 2) + power(model_input."X_8" - "SV_data".sv_8, 2) + power(model_input."X_9" - "SV_data".sv_9, 2)) ), CAST(32.0 AS FLOAT) ) )  AS "dot_prod" 
        FROM
          model_input, "SV_data"
       ) AS full_join_data_sv
     GROUP BY full_join_data_sv."index"
    ) AS dp )
SELECT
  t."index" as "index",
  t."Estimator" as "Estimator"
FROM "Kernel_DotProd" AS t

SQL_OUT_PUT_LAST_LINES_END ('freidman1_small', 'NuSVR', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 64 entries, 0 to 63
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     64 non-null     float32
 1   X_1     64 non-null     float32
 2   X_2     64 non-null     float32
 3   X_3     64 non-null     float32
 4   X_4     64 non-null     float32
 5   X_5     64 non-null     float32
 6   X_6     64 non-null     float32
 7   X_7     64 non-null     float32
 8   X_8     64 non-null     float32
 9   X_9     64 non-null     float32
dtypes: float32(10)
memory usage: 3.0 KB
            X_0       X_1       X_2  ...       X_7       X_8       X_9
index                                ...                              
0      0.544738  0.515912  0.990435  ...  0.041089  0.898018  0.377159
1      0.783459  0.095321  0.135945  ...  0.422766  0.019766  0.833486
2      0.652811  0.757719  0.306902  ...  0.146070  0.894295  0.086598
3      0.226051  0.939732  0.731124  ...  0.843453  0.185038  0.248943
4      0.764610  0.378970  0.823855  ...  0.361050  0.814980  0.123688
...         ...       ...       ...  ...       ...       ...       ...
59     0.652046  0.852315  0.661294  ...  0.609463  0.682591  0.243739
60     0.133169  0.898182  0.993566  ...  0.033415  0.014059  0.907372
61     0.771820  0.489723  0.677121  ...  0.565222  0.039136  0.218690
62     0.059807  0.098960  0.941488  ...  0.265461  0.196262  0.732540
63     0.672520  0.960422  0.271050  ...  0.514037  0.918325  0.297702

[64 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 64 entries, 0 to 63
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      64 non-null     int64  
 1   Estimator  64 non-null     float64
dtypes: float64(1), int64(1)
memory usage: 1.1 KB
    index  Estimator
0       0  14.535302
1       1  14.626285
2       2  17.158626
3       3  17.117099
4       4  15.848841
..    ...        ...
59     59  16.954817
60     60  16.745167
61     61  15.011827
62     62  14.885259
63     63  14.949161

[64 rows x 2 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('freidman1_small', 'NuSVR') Estimator 6.59743020131609e-07
    index  SQL_Estimator  Py_Estimator     SQL_Error
48     48      14.371400     14.371401 -5.622597e-07
49     49      14.584209     14.584209  5.002673e-08
50     50      15.483297     15.483298 -1.232695e-06
51     51      14.655250     14.655250  2.446732e-07
52     52      14.715578     14.715578  3.786090e-07
53     53      15.238907     15.238907 -2.310581e-07
54     54      17.118731     17.118731  4.215662e-07
55     55      15.643513     15.643511  1.733334e-06
56     56      13.568308     13.568308  3.943250e-07
57     57      15.486521     15.486520  7.376338e-07
58     58      16.293749     16.293749 -2.656334e-07
59     59      16.954817     16.954815  1.642064e-06
60     60      16.745167     16.745167  3.698822e-08
61     61      15.011827     15.011827  1.328562e-07
62     62      14.885259     14.885259  3.746509e-07
63     63      14.949161     14.949161  5.262236e-07
MLLITE_REG_SQL_EXECUTION_STATUS ('freidman1_small', 'NuSVR', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/regression/NuSVR/mllite.NuSVR_freidman1_small_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('freidman1_small', 'NuSVR', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "freidman1_small" AS "ADS" 
 )
,"SV_data" AS
 ( SELECT 
   "Values"."sv_idx" AS "sv_idx",
   "Values"."coeff" AS "coeff",
   "Values"."sv_0" AS "sv_0",
   "Values"."sv_1" AS "sv_1",
   "Values"."sv_2" AS "sv_2",
   "Values"."sv_3" AS "sv_3",
   "Values"."sv_4" AS "sv_4",
   "Values"."sv_5" AS "sv_5",
   "Values"."sv_6" AS "sv_6",
   "Values"."sv_7" AS "sv_7",
   "Values"."sv_8" AS "sv_8",
   "Values"."sv_9" AS "sv_9"
  FROM
  (
     SELECT 0 AS "sv_idx", 1.000000 AS "coeff", 0.652811 AS "sv_0", 0.757719 AS "sv_1", 0.306902 AS "sv_2", 0.828286 AS "sv_3", 0.763064 AS "sv_4", 0.859003
SQL_OUT_PUT_FIRST_LINES_END ('freidman1_small', 'NuSVR', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('freidman1_small', 'NuSVR', 'sqlite')
   FROM
    (SELECT
      full_join_data_sv."index" AS "index",
      sum(CAST(full_join_data_sv.dot_prod AS FLOAT)) - -14.879629 AS dot_product
     FROM
       (SELECT
          model_input."index" AS "index",
          "SV_data"."coeff" *  EXP( MIN( MAX( CAST(-32.0 AS FLOAT), -1.117212 * (power(model_input."X_0" - "SV_data".sv_0, 2) + power(model_input."X_1" - "SV_data".sv_1, 2) + power(model_input."X_2" - "SV_data".sv_2, 2) + power(model_input."X_3" - "SV_data".sv_3, 2) + power(model_input."X_4" - "SV_data".sv_4, 2) + power(model_input."X_5" - "SV_data".sv_5, 2) + power(model_input."X_6" - "SV_data".sv_6, 2) + power(model_input."X_7" - "SV_data".sv_7, 2) + power(model_input."X_8" - "SV_data".sv_8, 2) + power(model_input."X_9" - "SV_data".sv_9, 2)) ), CAST(32.0 AS FLOAT) ) )  AS "dot_prod" 
        FROM
          model_input, "SV_data"
       ) AS full_join_data_sv
     GROUP BY full_join_data_sv."index"
    ) AS dp )
SELECT
  t."index" as "index",
  t."Estimator" as "Estimator"
FROM "Kernel_DotProd" AS t

SQL_OUT_PUT_LAST_LINES_END ('freidman1_small', 'NuSVR', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 64 entries, 0 to 63
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     64 non-null     float32
 1   X_1     64 non-null     float32
 2   X_2     64 non-null     float32
 3   X_3     64 non-null     float32
 4   X_4     64 non-null     float32
 5   X_5     64 non-null     float32
 6   X_6     64 non-null     float32
 7   X_7     64 non-null     float32
 8   X_8     64 non-null     float32
 9   X_9     64 non-null     float32
dtypes: float32(10)
memory usage: 3.0 KB
            X_0       X_1       X_2  ...       X_7       X_8       X_9
index                                ...                              
0      0.544738  0.515912  0.990435  ...  0.041089  0.898018  0.377159
1      0.783459  0.095321  0.135945  ...  0.422766  0.019766  0.833486
2      0.652811  0.757719  0.306902  ...  0.146070  0.894295  0.086598
3      0.226051  0.939732  0.731124  ...  0.843453  0.185038  0.248943
4      0.764610  0.378970  0.823855  ...  0.361050  0.814980  0.123688
...         ...       ...       ...  ...       ...       ...       ...
59     0.652046  0.852315  0.661294  ...  0.609463  0.682591  0.243739
60     0.133169  0.898182  0.993566  ...  0.033415  0.014059  0.907372
61     0.771820  0.489723  0.677121  ...  0.565222  0.039136  0.218690
62     0.059807  0.098960  0.941488  ...  0.265461  0.196262  0.732540
63     0.672520  0.960422  0.271050  ...  0.514037  0.918325  0.297702

[64 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 64 entries, 0 to 63
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      64 non-null     int64  
 1   Estimator  64 non-null     float64
dtypes: float64(1), int64(1)
memory usage: 1.1 KB
    index  Estimator
0       0  14.535302
1       1  14.626285
2       2  17.158626
3       3  17.117099
4       4  15.848841
..    ...        ...
59     59  16.954817
60     60  16.745167
61     61  15.011827
62     62  14.885259
63     63  14.949161

[64 rows x 2 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('freidman1_small', 'NuSVR') Estimator 6.556984360750473e-07
    index  SQL_Estimator  Py_Estimator     SQL_Error
48     48      14.371400     14.371401 -5.587482e-07
49     49      14.584210     14.584209  1.435952e-07
50     50      15.483297     15.483298 -1.171088e-06
51     51      14.655250     14.655250  2.966857e-07
52     52      14.715578     14.715578  4.069090e-07
53     53      15.238907     15.238907 -2.154841e-07
54     54      17.118731     17.118731  3.366136e-07
55     55      15.643512     15.643511  1.650490e-06
56     56      13.568308     13.568308  4.262930e-07
57     57      15.486521     15.486520  8.123717e-07
58     58      16.293749     16.293749 -2.709784e-07
59     59      16.954817     16.954815  1.596562e-06
60     60      16.745167     16.745167  8.157051e-08
61     61      15.011827     15.011827  6.935038e-08
62     62      14.885259     14.885259  3.732208e-07
63     63      14.949161     14.949161  4.657017e-07
MLLITE_REG_SQL_EXECUTION_STATUS ('freidman1_small', 'NuSVR', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
