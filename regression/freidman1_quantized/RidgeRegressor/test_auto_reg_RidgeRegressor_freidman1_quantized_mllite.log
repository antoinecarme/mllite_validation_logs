    X_0  X_1  X_2  X_3  X_4  X_5  X_6  X_7  X_8  X_9     target
0     4    3    5    6    9    8   10    3    7    3  15.370928
1     6    4    4    2    4    0    3    5    1    1  13.065349
2     1    6    1    6    8    8    7    2    6    6  15.524062
3     0    7    0    2    9    4    5    1    7    9  12.395770
4     6    8    0    4    0    3    5    5    6    4  19.010028
..  ...  ...  ...  ...  ...  ...  ...  ...  ...  ...        ...
95    7    6    8    3    7    4    7    4    3    0  20.439077
96    1    9    2    4    8    5    0    4    6    6  14.384506
97    9    7    4    1    8    9    0    3    2    6  14.885318
98    3    2    4    6    3    4    3    8    4    8  11.119547
99    2    2    2    0    1    7    5    0    7    0   4.502946

[100 rows x 11 columns]
MLLITE_MODEL_SET_OPTIONS RidgeRegressor None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeRegressor { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeRegressor { ,   , }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeRegressor None
('OPERATION_START', 'TRAINING')
[[ 4.  3.  5.  6.  9.  8. 10.  3.  7.  3.]
 [ 6.  4.  4.  2.  4.  0.  3.  5.  1.  1.]
 [ 1.  6.  1.  6.  8.  8.  7.  2.  6.  6.]
 [ 0.  7.  0.  2.  9.  4.  5.  1.  7.  9.]
 [ 6.  8.  0.  4.  0.  3.  5.  5.  6.  4.]] [15.370928 13.06535  15.524062 12.39577  19.010029]
MLLITE_FIT_USING_MODEL mllite_ridge_reg.RidgeRegressor_ff4_ff4
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_REGRESSOR_FIT' 1 2
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_REGRESSOR_FIT' 2 2
('OPERATION_END_ELAPSED', 0.005, 'TRAINING')
{ ,   , }
{ ,   , }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_ff4"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 100, "dataset_features" : 10 },
	"equations" : {
			"intercept" : 0.879827,
			"coeffs" : [ 0.621218, 0.825622, 0.140775, 1.008025, 0.418655, 0.105499, -0.036877, 0.000643, -0.089087, 0.078681 ]
		}
}
WRITING_JSON_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_freidman1_quantized.json'

MLLITE_MODEL_SET_OPTIONS RidgeRegressor None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeRegressor { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeRegressor { ,   , }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeRegressor None
MLLITE_RELOADING_MODEL mllite_ridge_reg.RidgeRegressor_ff4_ff4
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_ff4"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 100, "dataset_features" : 10 },
	"equations" : {
			"intercept" : 0.879827,
			"coeffs" : [ 0.621218, 0.825622, 0.140775, 1.008025, 0.418655, 0.105499, -0.036877, 0.000643, -0.089087, 0.078681 ]
		}
}
BEAUTIFIED_JSON_START
{
	"dataset" : 	{
		"dataset_features" : 10,
		"dataset_rows" : 100
	},
	"equations" : 	{
		"coeffs" : [ 0.621218, 0.825622, 0.140775, 1.008025, 0.418655, 0.105499, -0.036877, 0.000643, -0.089087, 0.078681 ],
		"intercept" : 0.879827
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_ff4", "version" : "2024-W12" },
	"options" :  { "alpha" : 1.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
[16.451075  12.045572  16.51765   12.7659025 15.15975   18.265306
 14.557833   9.8831215 13.50028   15.238416  10.9847555 17.675135
 12.738011  18.3032    20.178368  11.963977  11.690194  14.234646
 19.270853  16.586525  21.80915   12.952126  20.47034   18.570175
 17.446724   8.467035  20.164425  20.453508  17.027607   7.6753387
 10.097108  11.55776   21.927914  24.645947  13.998155   9.815914
  9.5281105  8.276265  13.710943   6.9338713 11.664732  14.35433
 15.383066  15.469356  16.964544  16.788754  17.836246  10.019282
 18.534367  11.099245  16.219933  17.317253  20.42638   20.549238
 11.783884   9.474134  16.645784  11.377509  11.971499  17.323444
 17.69983    7.9455614 11.090053  13.749133  17.159115  14.426853
 20.306301  16.320736   9.036678  10.687773   5.0462217 15.939211
 21.019312  14.13548   19.747826  15.929094  19.214931  14.435862
 18.565208  20.3109    12.215288   9.249126  11.829964  17.602556
 16.020597  12.626933  12.395946  22.548126   6.6369214 15.41577
  7.5399733  6.1976776 12.507916  23.946007  11.252923  17.162113
 17.062168  18.415846  12.851551   4.4042172]
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
('OPERATION_START', 'PREDICT')
[16.451069  12.045571  16.517645  12.7659    15.1597395 18.265305
 14.557831   9.88312   13.500272  15.238414  10.984756  17.675125
 12.73801   18.303196  20.178366  11.96397   11.690193  14.234643
 19.270859  16.586517  21.809147  12.952125  20.470331  18.57017
 17.44672    8.46703   20.164423  20.4535    17.027607   7.6753373
 10.097104  11.55776   21.927917  24.645947  13.998154   9.815912
  9.528111   8.2762575 13.71094    6.933867  11.664731  14.354325
 15.383063  15.469353  16.964544  16.788748  17.836246  10.019278
 18.53436   11.099242  16.219933  17.317245  20.426374  20.54923
 11.783878   9.474132  16.645782  11.377507  11.971495  17.323439
 17.699827   7.945555  11.090057  13.749131  17.15911   14.426849
 20.306301  16.320734   9.036677  10.687772   5.0462213 15.939216
 21.019306  14.135475  19.74783   15.929095  19.214935  14.435857
 18.565203  20.310894  12.215282   9.249123  11.829961  17.602547
 16.020596  12.62693   12.39594   22.548124   6.6369185 15.415769
  7.539973   6.1976748 12.507915  23.946     11.252915  17.162111
 17.062164  18.41584   12.85155    4.404211 ]
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
MODEL_PERFS {'class_name': 'mllite.RidgeRegressor', 'model_name': 'RidgeRegressor', 'options': None, 'dataset': 'freidman1_quantized', 'size': 100, 'mse': 4.2682633, 'mae': 1.6799407, 'mape': 0.13201441, 'r2': 0.8214252945325784}
WRITING_PERF_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_freidman1_quantized.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeRegressor', 'model_name': 'RidgeRegressor', 'options': None, 'dataset': 'freidman1_quantized', 'training_time_in_sec': 0.005, 'prediction_time_in_sec': 0.001}
WRITING_SQL_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_freidman1_quantized.sql'



SQL_OUT_PUT_FIRST_LINES_START
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  model_input."index" AS "index",
   0.879827 + 0.621218 * X_0 + 0.825622 * X_1 + 0.140775 * X_2 + 1.008025 * X_3 + 0.418655 * X_4 + 0.105499 * X_5 + -0.036877 * X_6 + 0.000643 * X_7 + -0.089087 * X_8 + 0.078681 * X_9 AS "Estimator"
  FROM model_input
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_FIRST_LINES_END
SQL_OUT_PUT_LAST_LINES_START
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  model_input."index" AS "index",
   0.879827 + 0.621218 * X_0 + 0.825622 * X_1 + 0.140775 * X_2 + 1.008025 * X_3 + 0.418655 * X_4 + 0.105499 * X_5 + -0.036877 * X_6 + 0.000643 * X_7 + -0.089087 * X_8 + 0.078681 * X_9 AS "Estimator"
  FROM model_input
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_LAST_LINES_END




COPY_TRAINING_DATA_TO_SQLITE_START
    X_0  X_1  X_2  X_3  X_4  X_5   X_6  X_7  X_8  X_9  KEY
0   4.0  3.0  5.0  6.0  9.0  8.0  10.0  3.0  7.0  3.0    0
1   6.0  4.0  4.0  2.0  4.0  0.0   3.0  5.0  1.0  1.0    1
2   1.0  6.0  1.0  6.0  8.0  8.0   7.0  2.0  6.0  6.0    2
3   0.0  7.0  0.0  2.0  9.0  4.0   5.0  1.0  7.0  9.0    3
4   6.0  8.0  0.0  4.0  0.0  3.0   5.0  5.0  6.0  4.0    4
..  ...  ...  ...  ...  ...  ...   ...  ...  ...  ...  ...
95  7.0  6.0  8.0  3.0  7.0  4.0   7.0  4.0  3.0  0.0   95
96  1.0  9.0  2.0  4.0  8.0  5.0   0.0  4.0  6.0  6.0   96
97  9.0  7.0  4.0  1.0  8.0  9.0   0.0  3.0  2.0  6.0   97
98  3.0  2.0  4.0  6.0  3.0  4.0   3.0  8.0  4.0  8.0   98
99  2.0  2.0  2.0  0.0  1.0  7.0   5.0  0.0  7.0  0.0   99

[100 rows x 11 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
    index  Estimator
0       0  16.451070
1       1  12.045571
2       2  16.517645
3       3  12.765900
4       4  15.159740
..    ...        ...
95     95  17.162113
96     96  17.062164
97     97  18.415840
98     98  12.851549
99     99   4.404211

[100 rows x 2 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
    index  SQL_Estimator  Py_Estimator
84     84      16.020594     16.020597
85     85      12.626930     12.626933
86     86      12.395939     12.395946
87     87      22.548121     22.548126
88     88       6.636918      6.636921
89     89      15.415767     15.415770
90     90       7.539972      7.539973
91     91       6.197675      6.197678
92     92      12.507914     12.507916
93     93      23.945997     23.946007
94     94      11.252915     11.252923
95     95      17.162113     17.162113
96     96      17.062164     17.062168
97     97      18.415840     18.415846
98     98      12.851549     12.851551
99     99       4.404211      4.404217
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
