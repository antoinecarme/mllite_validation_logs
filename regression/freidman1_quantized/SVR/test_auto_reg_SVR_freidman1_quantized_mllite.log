    X_0  X_1  X_2  X_3  X_4  X_5  X_6  X_7  X_8  X_9     target
0     4    3    5    6    9    8   10    3    7    3  15.370928
1     6    4    4    2    4    0    3    5    1    1  13.065349
2     1    6    1    6    8    8    7    2    6    6  15.524062
3     0    7    0    2    9    4    5    1    7    9  12.395770
4     6    8    0    4    0    3    5    5    6    4  19.010028
..  ...  ...  ...  ...  ...  ...  ...  ...  ...  ...        ...
95    7    6    8    3    7    4    7    4    3    0  20.439077
96    1    9    2    4    8    5    0    4    6    6  14.384506
97    9    7    4    1    8    9    0    3    2    6  14.885318
98    3    2    4    6    3    4    3    8    4    8  11.119547
99    2    2    2    0    1    7    5    0    7    0   4.502946

[100 rows x 11 columns]
MLLITE_MODEL_SET_OPTIONS SVR None
MLLITE_MODEL_OPTIONS_DEFAULT SVR { "max_iter" : 128 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING SVR { ,  "max_iter" : 128  , }
MLLITE_MODEL_JSON_AFTER_SETTING SVR None
('OPERATION_START', 'TRAINING')
[[ 4.  3.  5.  6.  9.  8. 10.  3.  7.  3.]
 [ 6.  4.  4.  2.  4.  0.  3.  5.  1.  1.]
 [ 1.  6.  1.  6.  8.  8.  7.  2.  6.  6.]
 [ 0.  7.  0.  2.  9.  4.  5.  1.  7.  9.]
 [ 6.  8.  0.  4.  0.  3.  5.  5.  6.  4.]] [15.370928 13.06535  15.524062 12.39577  19.010029]
MLLITE_FIT_USING_MODEL mllite_svm_reg.SVR_ff4_ff4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_REGRESSOR_FIT' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_REGRESSOR_FIT' 2 4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_REGRESSOR_FIT' 3 4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVR_Global' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVR_Global' 24 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVR_Global' 36 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVR_Global' 48 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVR_Global' 60 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVR_Global' 72 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_REGRESSOR_FIT' 4 4
('OPERATION_END_ELAPSED', 0.024, 'TRAINING')
{ ,  "max_iter" : 128  , }
{ ,  "max_iter" : 128  , }
{
	"metadata" : { "model" : "Vapnik_SVR_RBF", "version" : "2024-W14", "signature" : "ff4_ff4"},
	"options" : {"svm_type" : "epsilon_svr", "kernel" : "rbf", "degree" : 3, "gamma" : 0.011928, "coef0" : 0.000000, "cache_size" : 300, "tol" : 0.001000, "nu" : 0.500000, "epsilon" : 0.100000, "shrinking" : 0, "probability" : 0, "C" : 1.000000, "max_iter" : 128, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 100, "dataset_features" : 10 },
	"svm_model" : {
	"classes" : 2,
	"L" : 97,
	"SupportVectors" : {
		"SV_00" : [ 4.000000, 3.000000, 5.000000, 6.000000, 9.000000, 8.000000, 10.000000, 3.000000, 7.000000, 3.000000 ],
		"SV_01" : [ 6.000000, 4.000000, 4.000000, 2.000000, 4.000000, 0.000000, 3.000000, 5.000000, 1.000000, 1.000000 ],
		"SV_02" : [ 0.000000, 7.000000, 0.000000, 2.000000, 9.000000, 4.000000, 5.000000, 1.000000, 7.000000, 9.000000 ],
		"SV_03" : [ 6.000000, 8.000000, 0.000000, 4.000000, 0.000000, 3.000000, 5.000000, 5.000000, 6.000000, 4.000000 ],
		"SV_04" : [ 6.000000, 4.000000, 8.000000, 8.000000, 2.000000, 6.000000, 7.000000, 8.000000, 5.000000, 5.000000 ],
		"SV_05" : [ 7.000000, 2.000000, 1.000000, 5.000000, 6.000000, 0.000000, 9.000000, 4.000000, 0.000000, 4.000000 ],
		"SV_06" : [ 1.000000, 0.000000, 1.000000, 6.000000, 3.000000, 5.000000, 4.000000, 10.000000, 0.000000, 7.000000 ],
		"SV_07" : [ 5.000000, 9.000000, 2.000000, 2.000000, 0.000000, 5.000000, 7.000000, 6.000000, 9.000000, 4.000000 ],
		"SV_08" : [ 7.000000, 5.000000, 6.000000, 1.000000, 9.000000, 3.000000, 8.000000, 6.000000, 0.000000, 3.000000 ],
		"SV_09" : [ 2.000000, 1.000000, 9.000000, 4.000000, 5.000000, 5.000000, 7.000000, 4.000000, 2.000000, 7.000000 ],
		"SV_10" : [ 2.000000, 9.000000, 4.000000, 7.000000, 0.000000, 9.000000, 5.000000, 8.000000, 3.000000, 0.000000 ],
		"SV_11" : [ 4.000000, 7.000000, 5.000000, 1.000000, 5.000000, 1.000000, 7.000000, 6.000000, 6.000000, 6.000000 ],
		"SV_12" : [ 5.000000, 8.000000, 6.000000, 4.000000, 6.000000, 9.000000, 9.000000, 7.000000, 6.000000, 3.000000 ],
		"SV_13" : [ 6.000000, 5.000000, 7.000000, 7.000000, 6.000000, 5.000000, 3.000000, 1.000000, 0.000000, 6.000000 ],
		"SV_14" : [ 6.000000, 2.000000, 1.000000, 4.000000, 3.000000, 7.000000, 7.000000, 9.000000, 5.000000, 3.000000 ],
		"SV_15" : [ 3.000000, 0.000000, 7.000000, 8.000000, 1.000000, 1.000000, 6.000000, 4.000000, 9.000000, 5.000000 ],
		"SV_16" : [ 4.000000, 4.000000, 4.000000, 5.000000, 3.000000, 8.000000, 1.000000, 1.000000, 2.000000, 1.000000 ],
		"SV_17" : [ 1.000000, 8.000000, 9.000000, 6.000000, 7.000000, 2.000000, 0.000000, 0.000000, 0.000000, 9.000000 ],
		"SV_18" : [ 3.000000, 8.000000, 1.000000, 4.000000, 4.000000, 8.000000, 2.000000, 2.000000, 1.000000, 9.000000 ],
		"SV_19" : [ 2.000000, 7.000000, 2.000000, 10.000000, 8.000000, 2.000000, 6.000000, 3.000000, 3.000000, 6.000000 ],
		"SV_20" : [ 9.000000, 3.000000, 7.000000, 2.000000, 2.000000, 0.000000, 3.000000, 5.000000, 4.000000, 8.000000 ],
		"SV_21" : [ 4.000000, 7.000000, 3.000000, 7.000000, 8.000000, 8.000000, 3.000000, 9.000000, 8.000000, 6.000000 ],
		"SV_22" : [ 4.000000, 6.000000, 1.000000, 9.000000, 2.000000, 3.000000, 4.000000, 9.000000, 5.000000, 6.000000 ],
		"SV_23" : [ 2.000000, 10.000000, 5.000000, 4.000000, 5.000000, 4.000000, 9.000000, 3.000000, 1.000000, 3.000000 ],
		"SV_24" : [ 6.000000, 2.000000, 0.000000, 1.000000, 1.000000, 6.000000, 4.000000, 4.000000, 2.000000, 6.000000 ],
		"SV_25" : [ 7.000000, 4.000000, 8.000000, 9.000000, 5.000000, 1.000000, 6.000000, 4.000000, 7.000000, 1.000000 ],
		"SV_26" : [ 7.000000, 9.000000, 1.000000, 7.000000, 2.000000, 1.000000, 4.000000, 2.000000, 4.000000, 2.000000 ],
		"SV_27" : [ 5.000000, 5.000000, 9.000000, 4.000000, 8.000000, 6.000000, 2.000000, 7.000000, 6.000000, 3.000000 ],
		"SV_28" : [ 2.000000, 3.000000, 6.000000, 0.000000, 5.000000, 2.000000, 1.000000, 9.000000, 4.000000, 4.000000 ],
		"SV_29" : [ 8.000000, 1.000000, 7.000000, 0.000000, 5.000000, 6.000000, 5.000000, 7.000000, 3.000000, 2.000000 ],
		"SV_30" : [ 2.000000, 1.000000, 5.000000, 6.000000, 5.000000, 1.000000, 6.000000, 1.000000, 4.000000, 3.000000 ],
		"SV_31" : [ 2.000000, 9.000000, 7.000000, 8.000000, 7.000000, 3.000000, 2.000000, 8.000000, 1.000000, 3.000000 ],
		"SV_32" : [ 6.000000, 9.000000, 4.000000, 8.000000, 9.000000, 2.000000, 4.000000, 4.000000, 1.000000, 3.000000 ],
		"SV_33" : [ 9.000000, 0.000000, 4.000000, 3.000000, 9.000000, 3.000000, 8.000000, 6.000000, 1.000000, 3.000000 ],
		"SV_34" : [ 1.000000, 1.000000, 3.000000, 4.000000, 6.000000, 7.000000, 5.000000, 0.000000, 3.000000, 3.000000 ],
		"SV_35" : [ 4.000000, 2.000000, 5.000000, 0.000000, 8.000000, 4.000000, 0.000000, 0.000000, 4.000000, 5.000000 ],
		"SV_36" : [ 2.000000, 5.000000, 2.000000, 2.000000, 0.000000, 5.000000, 0.000000, 4.000000, 9.000000, 0.000000 ],
		"SV_37" : [ 2.000000, 6.000000, 6.000000, 3.000000, 5.000000, 8.000000, 7.000000, 4.000000, 7.000000, 9.000000 ],
		"SV_38" : [ 3.000000, 1.000000, 5.000000, 2.000000, 0.000000, 7.000000, 0.000000, 0.000000, 9.000000, 9.000000 ],
		"SV_39" : [ 8.000000, 3.000000, 9.000000, 1.000000, 3.000000, 1.000000, 2.000000, 9.000000, 7.000000, 5.000000 ],
		"SV_40" : [ 8.000000, 0.000000, 0.000000, 5.000000, 8.000000, 5.000000, 8.000000, 5.000000, 4.000000, 3.000000 ],
		"SV_41" : [ 7.000000, 7.000000, 8.000000, 2.000000, 2.000000, 4.000000, 6.000000, 1.000000, 4.000000, 7.000000 ],
		"SV_42" : [ 0.000000, 4.000000, 2.000000, 9.000000, 4.000000, 2.000000, 8.000000, 2.000000, 5.000000, 10.000000 ],
		"SV_43" : [ 0.000000, 5.000000, 7.000000, 9.000000, 4.000000, 2.000000, 2.000000, 4.000000, 7.000000, 9.000000 ],
		"SV_44" : [ 7.000000, 2.000000, 1.000000, 8.000000, 2.000000, 6.000000, 6.000000, 6.000000, 2.000000, 8.000000 ],
		"SV_45" : [ 0.000000, 7.000000, 8.000000, 7.000000, 6.000000, 6.000000, 7.000000, 4.000000, 5.000000, 7.000000 ],
		"SV_46" : [ 8.000000, 3.000000, 6.000000, 0.000000, 2.000000, 5.000000, 9.000000, 6.000000, 3.000000, 1.000000 ],
		"SV_47" : [ 0.000000, 7.000000, 0.000000, 8.000000, 8.000000, 7.000000, 5.000000, 2.000000, 9.000000, 9.000000 ],
		"SV_48" : [ 5.000000, 5.000000, 9.000000, 2.000000, 0.000000, 3.000000, 8.000000, 0.000000, 8.000000, 5.000000 ],
		"SV_49" : [ 8.000000, 8.000000, 8.000000, 2.000000, 2.000000, 2.000000, 4.000000, 0.000000, 4.000000, 1.000000 ],
		"SV_50" : [ 8.000000, 7.000000, 9.000000, 3.000000, 2.000000, 8.000000, 8.000000, 8.000000, 7.000000, 8.000000 ],
		"SV_51" : [ 5.000000, 4.000000, 1.000000, 9.000000, 8.000000, 9.000000, 1.000000, 5.000000, 10.000000, 7.000000 ],
		"SV_52" : [ 6.000000, 5.000000, 1.000000, 9.000000, 4.000000, 7.000000, 0.000000, 6.000000, 5.000000, 8.000000 ],
		"SV_53" : [ 8.000000, 5.000000, 0.000000, 2.000000, 0.000000, 0.000000, 8.000000, 1.000000, 7.000000, 9.000000 ],
		"SV_54" : [ 9.000000, 0.000000, 3.000000, 2.000000, 2.000000, 0.000000, 1.000000, 8.000000, 8.000000, 6.000000 ],
		"SV_55" : [ 4.000000, 9.000000, 2.000000, 3.000000, 7.000000, 0.000000, 3.000000, 4.000000, 4.000000, 1.000000 ],
		"SV_56" : [ 1.000000, 4.000000, 3.000000, 2.000000, 9.000000, 4.000000, 9.000000, 7.000000, 4.000000, 8.000000 ],
		"SV_57" : [ 3.000000, 4.000000, 4.000000, 5.000000, 2.000000, 2.000000, 9.000000, 6.000000, 8.000000, 4.000000 ],
		"SV_58" : [ 9.000000, 7.000000, 7.000000, 4.000000, 0.000000, 5.000000, 9.000000, 2.000000, 6.000000, 5.000000 ],
		"SV_59" : [ 4.000000, 7.000000, 7.000000, 6.000000, 5.000000, 2.000000, 8.000000, 0.000000, 9.000000, 4.000000 ],
		"SV_60" : [ 6.000000, 1.000000, 0.000000, 0.000000, 4.000000, 8.000000, 4.000000, 8.000000, 2.000000, 4.000000 ],
		"SV_61" : [ 0.000000, 1.000000, 8.000000, 5.000000, 6.000000, 3.000000, 2.000000, 3.000000, 1.000000, 7.000000 ],
		"SV_62" : [ 4.000000, 2.000000, 3.000000, 7.000000, 2.000000, 4.000000, 0.000000, 9.000000, 1.000000, 1.000000 ],
		"SV_63" : [ 9.000000, 3.000000, 6.000000, 5.000000, 5.000000, 6.000000, 2.000000, 6.000000, 9.000000, 6.000000 ],
		"SV_64" : [ 4.000000, 4.000000, 0.000000, 3.000000, 9.000000, 8.000000, 1.000000, 5.000000, 0.000000, 2.000000 ],
		"SV_65" : [ 4.000000, 7.000000, 9.000000, 5.000000, 10.000000, 7.000000, 2.000000, 6.000000, 0.000000, 0.000000 ],
		"SV_66" : [ 0.000000, 2.000000, 9.000000, 9.000000, 7.000000, 9.000000, 5.000000, 9.000000, 9.000000, 7.000000 ],
		"SV_67" : [ 9.000000, 1.000000, 6.000000, 0.000000, 1.000000, 4.000000, 9.000000, 6.000000, 1.000000, 6.000000 ],
		"SV_68" : [ 4.000000, 1.000000, 5.000000, 0.000000, 0.000000, 2.000000, 8.000000, 0.000000, 0.000000, 3.000000 ],
		"SV_69" : [ 2.000000, 3.000000, 10.000000, 6.000000, 9.000000, 0.000000, 3.000000, 2.000000, 1.000000, 4.000000 ],
		"SV_70" : [ 5.000000, 7.000000, 3.000000, 8.000000, 7.000000, 8.000000, 8.000000, 1.000000, 8.000000, 0.000000 ],
		"SV_71" : [ 3.000000, 6.000000, 6.000000, 8.000000, 7.000000, 2.000000, 1.000000, 0.000000, 4.000000, 5.000000 ],
		"SV_72" : [ 1.000000, 6.000000, 9.000000, 5.000000, 8.000000, 1.000000, 3.000000, 2.000000, 2.000000, 0.000000 ],
		"SV_73" : [ 8.000000, 4.000000, 5.000000, 8.000000, 2.000000, 0.000000, 2.000000, 2.000000, 2.000000, 9.000000 ],
		"SV_74" : [ 3.000000, 5.000000, 6.000000, 5.000000, 3.000000, 7.000000, 6.000000, 9.000000, 2.000000, 1.000000 ],
		"SV_75" : [ 0.000000, 6.000000, 7.000000, 9.000000, 6.000000, 9.000000, 4.000000, 7.000000, 9.000000, 2.000000 ],
		"SV_76" : [ 9.000000, 4.000000, 5.000000, 7.000000, 6.000000, 4.000000, 2.000000, 1.000000, 8.000000, 8.000000 ],
		"SV_77" : [ 8.000000, 5.000000, 6.000000, 1.000000, 0.000000, 6.000000, 9.000000, 8.000000, 0.000000, 1.000000 ],
		"SV_78" : [ 10.000000, 0.000000, 0.000000, 0.000000, 7.000000, 0.000000, 9.000000, 6.000000, 5.000000, 0.000000 ],
		"SV_79" : [ 2.000000, 8.000000, 5.000000, 2.000000, 3.000000, 1.000000, 7.000000, 4.000000, 9.000000, 1.000000 ],
		"SV_80" : [ 9.000000, 4.000000, 3.000000, 4.000000, 7.000000, 6.000000, 3.000000, 8.000000, 8.000000, 8.000000 ],
		"SV_81" : [ 1.000000, 8.000000, 7.000000, 4.000000, 7.000000, 4.000000, 2.000000, 9.000000, 7.000000, 3.000000 ],
		"SV_82" : [ 7.000000, 0.000000, 0.000000, 6.000000, 3.000000, 2.000000, 3.000000, 7.000000, 1.000000, 1.000000 ],
		"SV_83" : [ 8.000000, 4.000000, 5.000000, 1.000000, 3.000000, 7.000000, 3.000000, 7.000000, 4.000000, 0.000000 ],
		"SV_84" : [ 5.000000, 9.000000, 6.000000, 7.000000, 6.000000, 8.000000, 2.000000, 1.000000, 5.000000, 5.000000 ],
		"SV_85" : [ 3.000000, 2.000000, 2.000000, 0.000000, 4.000000, 4.000000, 0.000000, 8.000000, 6.000000, 5.000000 ],
		"SV_86" : [ 7.000000, 1.000000, 1.000000, 8.000000, 1.000000, 1.000000, 0.000000, 5.000000, 0.000000, 8.000000 ],
		"SV_87" : [ 3.000000, 2.000000, 8.000000, 2.000000, 1.000000, 0.000000, 3.000000, 6.000000, 7.000000, 4.000000 ],
		"SV_88" : [ 0.000000, 2.000000, 1.000000, 1.000000, 4.000000, 7.000000, 7.000000, 1.000000, 3.000000, 8.000000 ],
		"SV_89" : [ 9.000000, 2.000000, 4.000000, 1.000000, 7.000000, 1.000000, 6.000000, 7.000000, 8.000000, 9.000000 ],
		"SV_90" : [ 7.000000, 8.000000, 3.000000, 9.000000, 5.000000, 10.000000, 6.000000, 0.000000, 7.000000, 4.000000 ],
		"SV_91" : [ 3.000000, 0.000000, 2.000000, 8.000000, 0.000000, 9.000000, 2.000000, 1.000000, 8.000000, 0.000000 ],
		"SV_92" : [ 7.000000, 6.000000, 8.000000, 3.000000, 7.000000, 4.000000, 7.000000, 4.000000, 3.000000, 0.000000 ],
		"SV_93" : [ 1.000000, 9.000000, 2.000000, 4.000000, 8.000000, 5.000000, 0.000000, 4.000000, 6.000000, 6.000000 ],
		"SV_94" : [ 9.000000, 7.000000, 4.000000, 1.000000, 8.000000, 9.000000, 0.000000, 3.000000, 2.000000, 6.000000 ],
		"SV_95" : [ 3.000000, 2.000000, 4.000000, 6.000000, 3.000000, 4.000000, 3.000000, 8.000000, 4.000000, 8.000000 ],
		"SV_96" : [ 2.000000, 2.000000, 2.000000, 0.000000, 1.000000, 7.000000, 5.000000, 0.000000, 7.000000, 0.000000 ]
	},
	"SupportVectorsCoefs" : {
		"SV_coef_0" : [ -0.780151, -0.441677, -1.000000, 1.000000, 1.000000, 1.000000, -1.000000, -1.000000, 1.000000, 0.719373, 0.861942, 0.306137, 1.000000, 1.000000, -0.201417, -1.000000, -1.000000, 1.000000, 1.000000, 1.000000, -1.000000, 1.000000, 1.000000, -0.241875, -1.000000, 1.000000, 1.000000, 1.000000, -1.000000, -1.000000, -1.000000, 1.000000, 1.000000, -1.000000, -1.000000, -1.000000, -1.000000, -1.000000, -1.000000, 1.000000, 1.000000, 1.000000, -0.695980, -1.000000, 1.000000, -0.198579, -1.000000, 1.000000, 1.000000, -1.000000, 1.000000, 1.000000, 1.000000, 1.000000, -1.000000, 1.000000, -1.000000, -1.000000, -1.000000, 1.000000, -0.903669, -0.849309, -1.000000, 1.000000, 1.000000, 1.000000, 1.000000, -1.000000, -1.000000, 1.000000, 1.000000, 1.000000, 0.891185, 1.000000, -0.684484, -1.000000, 1.000000, 0.120060, -1.000000, -1.000000, 1.000000, -1.000000, 1.000000, -0.715905, 1.000000, -1.000000, -0.185650, -1.000000, -1.000000, -1.000000, 1.000000, -1.000000, 1.000000, -1.000000, -1.000000, -1.000000, -1.000000 ]
	},
	"rho" : [ -14.432035 ],
	"nSV" : [ 97 ],
	"probA" : [ ],
	"probB" : [ ],
	"n_iter" : [ 82 ]
}
}
WRITING_JSON_CODE 'logs/auto_tests/regression/SVR/mllite.SVR_freidman1_quantized.json'

MLLITE_MODEL_SET_OPTIONS SVR None
MLLITE_MODEL_OPTIONS_DEFAULT SVR { "max_iter" : 128 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING SVR { ,  "max_iter" : 128  , }
MLLITE_MODEL_JSON_AFTER_SETTING SVR None
MLLITE_RELOADING_MODEL mllite_svm_reg.SVR_ff4_ff4
{
	"metadata" : { "model" : "Vapnik_SVR_RBF", "version" : "2024-W14", "signature" : "ff4_ff4"},
	"options" : {"svm_type" : "epsilon_svr", "kernel" : "rbf", "degree" : 3, "gamma" : 0.011928, "coef0" : 0.000000, "cache_size" : 300, "tol" : 0.001000, "nu" : 0.500000, "epsilon" : 0.100000, "shrinking" : 0, "probability" : 0, "C" : 1.000000, "max_iter" : 128, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 100, "dataset_features" : 10 },
	"svm_model" : {
	"classes" : 2,
	"L" : 97,
	"SupportVectors" : {
		"SV_00" : [ 4.000000, 3.000000, 5.000000, 6.000000, 9.000000, 8.000000, 10.000000, 3.000000, 7.000000, 3.000000 ],
		"SV_01" : [ 6.000000, 4.000000, 4.000000, 2.000000, 4.000000, 0.000000, 3.000000, 5.000000, 1.000000, 1.000000 ],
		"SV_02" : [ 0.000000, 7.000000, 0.000000, 2.000000, 9.000000, 4.000000, 5.000000, 1.000000, 7.000000, 9.000000 ],
		"SV_03" : [ 6.000000, 8.000000, 0.000000, 4.000000, 0.000000, 3.000000, 5.000000, 5.000000, 6.000000, 4.000000 ],
		"SV_04" : [ 6.000000, 4.000000, 8.000000, 8.000000, 2.000000, 6.000000, 7.000000, 8.000000, 5.000000, 5.000000 ],
		"SV_05" : [ 7.000000, 2.000000, 1.000000, 5.000000, 6.000000, 0.000000, 9.000000, 4.000000, 0.000000, 4.000000 ],
		"SV_06" : [ 1.000000, 0.000000, 1.000000, 6.000000, 3.000000, 5.000000, 4.000000, 10.000000, 0.000000, 7.000000 ],
		"SV_07" : [ 5.000000, 9.000000, 2.000000, 2.000000, 0.000000, 5.000000, 7.000000, 6.000000, 9.000000, 4.000000 ],
		"SV_08" : [ 7.000000, 5.000000, 6.000000, 1.000000, 9.000000, 3.000000, 8.000000, 6.000000, 0.000000, 3.000000 ],
		"SV_09" : [ 2.000000, 1.000000, 9.000000, 4.000000, 5.000000, 5.000000, 7.000000, 4.000000, 2.000000, 7.000000 ],
		"SV_10" : [ 2.000000, 9.000000, 4.000000, 7.000000, 0.000000, 9.000000, 5.000000, 8.000000, 3.000000, 0.000000 ],
		"SV_11" : [ 4.000000, 7.000000, 5.000000, 1.000000, 5.000000, 1.000000, 7.000000, 6.000000, 6.000000, 6.000000 ],
		"SV_12" : [ 5.000000, 8.000000, 6.000000, 4.000000, 6.000000, 9.000000, 9.000000, 7.000000, 6.000000, 3.000000 ],
		"SV_13" : [ 6.000000, 5.000000, 7.000000, 7.000000, 6.000000, 5.000000, 3.000000, 1.000000, 0.000000, 6.000000 ],
		"SV_14" : [ 6.000000, 2.000000, 1.000000, 4.000000, 3.000000, 7.000000, 7.000000, 9.000000, 5.000000, 3.000000 ],
		"SV_15" : [ 3.000000, 0.000000, 7.000000, 8.000000, 1.000000, 1.000000, 6.000000, 4.000000, 9.000000, 5.000000 ],
		"SV_16" : [ 4.000000, 4.000000, 4.000000, 5.000000, 3.000000, 8.000000, 1.000000, 1.000000, 2.000000, 1.000000 ],
		"SV_17" : [ 1.000000, 8.000000, 9.000000, 6.000000, 7.000000, 2.000000, 0.000000, 0.000000, 0.000000, 9.000000 ],
		"SV_18" : [ 3.000000, 8.000000, 1.000000, 4.000000, 4.000000, 8.000000, 2.000000, 2.000000, 1.000000, 9.000000 ],
		"SV_19" : [ 2.000000, 7.000000, 2.000000, 10.000000, 8.000000, 2.000000, 6.000000, 3.000000, 3.000000, 6.000000 ],
		"SV_20" : [ 9.000000, 3.000000, 7.000000, 2.000000, 2.000000, 0.000000, 3.000000, 5.000000, 4.000000, 8.000000 ],
		"SV_21" : [ 4.000000, 7.000000, 3.000000, 7.000000, 8.000000, 8.000000, 3.000000, 9.000000, 8.000000, 6.000000 ],
		"SV_22" : [ 4.000000, 6.000000, 1.000000, 9.000000, 2.000000, 3.000000, 4.000000, 9.000000, 5.000000, 6.000000 ],
		"SV_23" : [ 2.000000, 10.000000, 5.000000, 4.000000, 5.000000, 4.000000, 9.000000, 3.000000, 1.000000, 3.000000 ],
		"SV_24" : [ 6.000000, 2.000000, 0.000000, 1.000000, 1.000000, 6.000000, 4.000000, 4.000000, 2.000000, 6.000000 ],
		"SV_25" : [ 7.000000, 4.000000, 8.000000, 9.000000, 5.000000, 1.000000, 6.000000, 4.000000, 7.000000, 1.000000 ],
		"SV_26" : [ 7.000000, 9.000000, 1.000000, 7.000000, 2.000000, 1.000000, 4.000000, 2.000000, 4.000000, 2.000000 ],
		"SV_27" : [ 5.000000, 5.000000, 9.000000, 4.000000, 8.000000, 6.000000, 2.000000, 7.000000, 6.000000, 3.000000 ],
		"SV_28" : [ 2.000000, 3.000000, 6.000000, 0.000000, 5.000000, 2.000000, 1.000000, 9.000000, 4.000000, 4.000000 ],
		"SV_29" : [ 8.000000, 1.000000, 7.000000, 0.000000, 5.000000, 6.000000, 5.000000, 7.000000, 3.000000, 2.000000 ],
		"SV_30" : [ 2.000000, 1.000000, 5.000000, 6.000000, 5.000000, 1.000000, 6.000000, 1.000000, 4.000000, 3.000000 ],
		"SV_31" : [ 2.000000, 9.000000, 7.000000, 8.000000, 7.000000, 3.000000, 2.000000, 8.000000, 1.000000, 3.000000 ],
		"SV_32" : [ 6.000000, 9.000000, 4.000000, 8.000000, 9.000000, 2.000000, 4.000000, 4.000000, 1.000000, 3.000000 ],
		"SV_33" : [ 9.000000, 0.000000, 4.000000, 3.000000, 9.000000, 3.000000, 8.000000, 6.000000, 1.000000, 3.000000 ],
		"SV_34" : [ 1.000000, 1.000000, 3.000000, 4.000000, 6.000000, 7.000000, 5.000000, 0.000000, 3.000000, 3.000000 ],
		"SV_35" : [ 4.000000, 2.000000, 5.000000, 0.000000, 8.000000, 4.000000, 0.000000, 0.000000, 4.000000, 5.000000 ],
		"SV_36" : [ 2.000000, 5.000000, 2.000000, 2.000000, 0.000000, 5.000000, 0.000000, 4.000000, 9.000000, 0.000000 ],
		"SV_37" : [ 2.000000, 6.000000, 6.000000, 3.000000, 5.000000, 8.000000, 7.000000, 4.000000, 7.000000, 9.000000 ],
		"SV_38" : [ 3.000000, 1.000000, 5.000000, 2.000000, 0.000000, 7.000000, 0.000000, 0.000000, 9.000000, 9.000000 ],
		"SV_39" : [ 8.000000, 3.000000, 9.000000, 1.000000, 3.000000, 1.000000, 2.000000, 9.000000, 7.000000, 5.000000 ],
		"SV_40" : [ 8.000000, 0.000000, 0.000000, 5.000000, 8.000000, 5.000000, 8.000000, 5.000000, 4.000000, 3.000000 ],
		"SV_41" : [ 7.000000, 7.000000, 8.000000, 2.000000, 2.000000, 4.000000, 6.000000, 1.000000, 4.000000, 7.000000 ],
		"SV_42" : [ 0.000000, 4.000000, 2.000000, 9.000000, 4.000000, 2.000000, 8.000000, 2.000000, 5.000000, 10.000000 ],
		"SV_43" : [ 0.000000, 5.000000, 7.000000, 9.000000, 4.000000, 2.000000, 2.000000, 4.000000, 7.000000, 9.000000 ],
		"SV_44" : [ 7.000000, 2.000000, 1.000000, 8.000000, 2.000000, 6.000000, 6.000000, 6.000000, 2.000000, 8.000000 ],
		"SV_45" : [ 0.000000, 7.000000, 8.000000, 7.000000, 6.000000, 6.000000, 7.000000, 4.000000, 5.000000, 7.000000 ],
		"SV_46" : [ 8.000000, 3.000000, 6.000000, 0.000000, 2.000000, 5.000000, 9.000000, 6.000000, 3.000000, 1.000000 ],
		"SV_47" : [ 0.000000, 7.000000, 0.000000, 8.000000, 8.000000, 7.000000, 5.000000, 2.000000, 9.000000, 9.000000 ],
		"SV_48" : [ 5.000000, 5.000000, 9.000000, 2.000000, 0.000000, 3.000000, 8.000000, 0.000000, 8.000000, 5.000000 ],
		"SV_49" : [ 8.000000, 8.000000, 8.000000, 2.000000, 2.000000, 2.000000, 4.000000, 0.000000, 4.000000, 1.000000 ],
		"SV_50" : [ 8.000000, 7.000000, 9.000000, 3.000000, 2.000000, 8.000000, 8.000000, 8.000000, 7.000000, 8.000000 ],
		"SV_51" : [ 5.000000, 4.000000, 1.000000, 9.000000, 8.000000, 9.000000, 1.000000, 5.000000, 10.000000, 7.000000 ],
		"SV_52" : [ 6.000000, 5.000000, 1.000000, 9.000000, 4.000000, 7.000000, 0.000000, 6.000000, 5.000000, 8.000000 ],
		"SV_53" : [ 8.000000, 5.000000, 0.000000, 2.000000, 0.000000, 0.000000, 8.000000, 1.000000, 7.000000, 9.000000 ],
		"SV_54" : [ 9.000000, 0.000000, 3.000000, 2.000000, 2.000000, 0.000000, 1.000000, 8.000000, 8.000000, 6.000000 ],
		"SV_55" : [ 4.000000, 9.000000, 2.000000, 3.000000, 7.000000, 0.000000, 3.000000, 4.000000, 4.000000, 1.000000 ],
		"SV_56" : [ 1.000000, 4.000000, 3.000000, 2.000000, 9.000000, 4.000000, 9.000000, 7.000000, 4.000000, 8.000000 ],
		"SV_57" : [ 3.000000, 4.000000, 4.000000, 5.000000, 2.000000, 2.000000, 9.000000, 6.000000, 8.000000, 4.000000 ],
		"SV_58" : [ 9.000000, 7.000000, 7.000000, 4.000000, 0.000000, 5.000000, 9.000000, 2.000000, 6.000000, 5.000000 ],
		"SV_59" : [ 4.000000, 7.000000, 7.000000, 6.000000, 5.000000, 2.000000, 8.000000, 0.000000, 9.000000, 4.000000 ],
		"SV_60" : [ 6.000000, 1.000000, 0.000000, 0.000000, 4.000000, 8.000000, 4.000000, 8.000000, 2.000000, 4.000000 ],
		"SV_61" : [ 0.000000, 1.000000, 8.000000, 5.000000, 6.000000, 3.000000, 2.000000, 3.000000, 1.000000, 7.000000 ],
		"SV_62" : [ 4.000000, 2.000000, 3.000000, 7.000000, 2.000000, 4.000000, 0.000000, 9.000000, 1.000000, 1.000000 ],
		"SV_63" : [ 9.000000, 3.000000, 6.000000, 5.000000, 5.000000, 6.000000, 2.000000, 6.000000, 9.000000, 6.000000 ],
		"SV_64" : [ 4.000000, 4.000000, 0.000000, 3.000000, 9.000000, 8.000000, 1.000000, 5.000000, 0.000000, 2.000000 ],
		"SV_65" : [ 4.000000, 7.000000, 9.000000, 5.000000, 10.000000, 7.000000, 2.000000, 6.000000, 0.000000, 0.000000 ],
		"SV_66" : [ 0.000000, 2.000000, 9.000000, 9.000000, 7.000000, 9.000000, 5.000000, 9.000000, 9.000000, 7.000000 ],
		"SV_67" : [ 9.000000, 1.000000, 6.000000, 0.000000, 1.000000, 4.000000, 9.000000, 6.000000, 1.000000, 6.000000 ],
		"SV_68" : [ 4.000000, 1.000000, 5.000000, 0.000000, 0.000000, 2.000000, 8.000000, 0.000000, 0.000000, 3.000000 ],
		"SV_69" : [ 2.000000, 3.000000, 10.000000, 6.000000, 9.000000, 0.000000, 3.000000, 2.000000, 1.000000, 4.000000 ],
		"SV_70" : [ 5.000000, 7.000000, 3.000000, 8.000000, 7.000000, 8.000000, 8.000000, 1.000000, 8.000000, 0.000000 ],
		"SV_71" : [ 3.000000, 6.000000, 6.000000, 8.000000, 7.000000, 2.000000, 1.000000, 0.000000, 4.000000, 5.000000 ],
		"SV_72" : [ 1.000000, 6.000000, 9.000000, 5.000000, 8.000000, 1.000000, 3.000000, 2.000000, 2.000000, 0.000000 ],
		"SV_73" : [ 8.000000, 4.000000, 5.000000, 8.000000, 2.000000, 0.000000, 2.000000, 2.000000, 2.000000, 9.000000 ],
		"SV_74" : [ 3.000000, 5.000000, 6.000000, 5.000000, 3.000000, 7.000000, 6.000000, 9.000000, 2.000000, 1.000000 ],
		"SV_75" : [ 0.000000, 6.000000, 7.000000, 9.000000, 6.000000, 9.000000, 4.000000, 7.000000, 9.000000, 2.000000 ],
		"SV_76" : [ 9.000000, 4.000000, 5.000000, 7.000000, 6.000000, 4.000000, 2.000000, 1.000000, 8.000000, 8.000000 ],
		"SV_77" : [ 8.000000, 5.000000, 6.000000, 1.000000, 0.000000, 6.000000, 9.000000, 8.000000, 0.000000, 1.000000 ],
		"SV_78" : [ 10.000000, 0.000000, 0.000000, 0.000000, 7.000000, 0.000000, 9.000000, 6.000000, 5.000000, 0.000000 ],
		"SV_79" : [ 2.000000, 8.000000, 5.000000, 2.000000, 3.000000, 1.000000, 7.000000, 4.000000, 9.000000, 1.000000 ],
		"SV_80" : [ 9.000000, 4.000000, 3.000000, 4.000000, 7.000000, 6.000000, 3.000000, 8.000000, 8.000000, 8.000000 ],
		"SV_81" : [ 1.000000, 8.000000, 7.000000, 4.000000, 7.000000, 4.000000, 2.000000, 9.000000, 7.000000, 3.000000 ],
		"SV_82" : [ 7.000000, 0.000000, 0.000000, 6.000000, 3.000000, 2.000000, 3.000000, 7.000000, 1.000000, 1.000000 ],
		"SV_83" : [ 8.000000, 4.000000, 5.000000, 1.000000, 3.000000, 7.000000, 3.000000, 7.000000, 4.000000, 0.000000 ],
		"SV_84" : [ 5.000000, 9.000000, 6.000000, 7.000000, 6.000000, 8.000000, 2.000000, 1.000000, 5.000000, 5.000000 ],
		"SV_85" : [ 3.000000, 2.000000, 2.000000, 0.000000, 4.000000, 4.000000, 0.000000, 8.000000, 6.000000, 5.000000 ],
		"SV_86" : [ 7.000000, 1.000000, 1.000000, 8.000000, 1.000000, 1.000000, 0.000000, 5.000000, 0.000000, 8.000000 ],
		"SV_87" : [ 3.000000, 2.000000, 8.000000, 2.000000, 1.000000, 0.000000, 3.000000, 6.000000, 7.000000, 4.000000 ],
		"SV_88" : [ 0.000000, 2.000000, 1.000000, 1.000000, 4.000000, 7.000000, 7.000000, 1.000000, 3.000000, 8.000000 ],
		"SV_89" : [ 9.000000, 2.000000, 4.000000, 1.000000, 7.000000, 1.000000, 6.000000, 7.000000, 8.000000, 9.000000 ],
		"SV_90" : [ 7.000000, 8.000000, 3.000000, 9.000000, 5.000000, 10.000000, 6.000000, 0.000000, 7.000000, 4.000000 ],
		"SV_91" : [ 3.000000, 0.000000, 2.000000, 8.000000, 0.000000, 9.000000, 2.000000, 1.000000, 8.000000, 0.000000 ],
		"SV_92" : [ 7.000000, 6.000000, 8.000000, 3.000000, 7.000000, 4.000000, 7.000000, 4.000000, 3.000000, 0.000000 ],
		"SV_93" : [ 1.000000, 9.000000, 2.000000, 4.000000, 8.000000, 5.000000, 0.000000, 4.000000, 6.000000, 6.000000 ],
		"SV_94" : [ 9.000000, 7.000000, 4.000000, 1.000000, 8.000000, 9.000000, 0.000000, 3.000000, 2.000000, 6.000000 ],
		"SV_95" : [ 3.000000, 2.000000, 4.000000, 6.000000, 3.000000, 4.000000, 3.000000, 8.000000, 4.000000, 8.000000 ],
		"SV_96" : [ 2.000000, 2.000000, 2.000000, 0.000000, 1.000000, 7.000000, 5.000000, 0.000000, 7.000000, 0.000000 ]
	},
	"SupportVectorsCoefs" : {
		"SV_coef_0" : [ -0.780151, -0.441677, -1.000000, 1.000000, 1.000000, 1.000000, -1.000000, -1.000000, 1.000000, 0.719373, 0.861942, 0.306137, 1.000000, 1.000000, -0.201417, -1.000000, -1.000000, 1.000000, 1.000000, 1.000000, -1.000000, 1.000000, 1.000000, -0.241875, -1.000000, 1.000000, 1.000000, 1.000000, -1.000000, -1.000000, -1.000000, 1.000000, 1.000000, -1.000000, -1.000000, -1.000000, -1.000000, -1.000000, -1.000000, 1.000000, 1.000000, 1.000000, -0.695980, -1.000000, 1.000000, -0.198579, -1.000000, 1.000000, 1.000000, -1.000000, 1.000000, 1.000000, 1.000000, 1.000000, -1.000000, 1.000000, -1.000000, -1.000000, -1.000000, 1.000000, -0.903669, -0.849309, -1.000000, 1.000000, 1.000000, 1.000000, 1.000000, -1.000000, -1.000000, 1.000000, 1.000000, 1.000000, 0.891185, 1.000000, -0.684484, -1.000000, 1.000000, 0.120060, -1.000000, -1.000000, 1.000000, -1.000000, 1.000000, -0.715905, 1.000000, -1.000000, -0.185650, -1.000000, -1.000000, -1.000000, 1.000000, -1.000000, 1.000000, -1.000000, -1.000000, -1.000000, -1.000000 ]
	},
	"rho" : [ -14.432035 ],
	"nSV" : [ 97 ],
	"probA" : [ ],
	"probB" : [ ],
	"n_iter" : [ 82 ]
}
}
BEAUTIFIED_JSON_START
{
	"dataset" : 	{
		"dataset_features" : 10,
		"dataset_rows" : 100
	},
	"metadata" :  { "model" : "Vapnik_SVR_RBF", "signature" : "ff4_ff4", "version" : "2024-W14" },
	"options" :  { "C" : 1.0, "cache_size" : 300, "coef0" : 0.0, "degree" : 3, "epsilon" : 0.1, "gamma" : 0.011928, "kernel" : "rbf", "max_iter" : 128, "nu" : 0.5, "probability" : 0, "random_state" : 1789, "shrinking" : 0, "svm_type" : "epsilon_svr", "tol" : 0.001 },
	"svm_model" : 	{
		"L" : 97,
		"SupportVectors" : 	{
			"SV_00" : [ 4.0, 3.0, 5.0, 6.0, 9.0, 8.0, 10.0, 3.0, 7.0, 3.0 ],
			"SV_01" : [ 6.0, 4.0, 4.0, 2.0, 4.0, 0.0, 3.0, 5.0, 1.0, 1.0 ],
			"SV_02" : [ 0.0, 7.0, 0.0, 2.0, 9.0, 4.0, 5.0, 1.0, 7.0, 9.0 ],
			"SV_03" : [ 6.0, 8.0, 0.0, 4.0, 0.0, 3.0, 5.0, 5.0, 6.0, 4.0 ],
			"SV_04" : [ 6.0, 4.0, 8.0, 8.0, 2.0, 6.0, 7.0, 8.0, 5.0, 5.0 ],
			"SV_05" : [ 7.0, 2.0, 1.0, 5.0, 6.0, 0.0, 9.0, 4.0, 0.0, 4.0 ],
			"SV_06" : [ 1.0, 0.0, 1.0, 6.0, 3.0, 5.0, 4.0, 10.0, 0.0, 7.0 ],
			"SV_07" : [ 5.0, 9.0, 2.0, 2.0, 0.0, 5.0, 7.0, 6.0, 9.0, 4.0 ],
			"SV_08" : [ 7.0, 5.0, 6.0, 1.0, 9.0, 3.0, 8.0, 6.0, 0.0, 3.0 ],
			"SV_09" : [ 2.0, 1.0, 9.0, 4.0, 5.0, 5.0, 7.0, 4.0, 2.0, 7.0 ],
			"SV_10" : [ 2.0, 9.0, 4.0, 7.0, 0.0, 9.0, 5.0, 8.0, 3.0, 0.0 ],
			"SV_11" : [ 4.0, 7.0, 5.0, 1.0, 5.0, 1.0, 7.0, 6.0, 6.0, 6.0 ],
			"SV_12" : [ 5.0, 8.0, 6.0, 4.0, 6.0, 9.0, 9.0, 7.0, 6.0, 3.0 ],
			"SV_13" : [ 6.0, 5.0, 7.0, 7.0, 6.0, 5.0, 3.0, 1.0, 0.0, 6.0 ],
			"SV_14" : [ 6.0, 2.0, 1.0, 4.0, 3.0, 7.0, 7.0, 9.0, 5.0, 3.0 ],
			"SV_15" : [ 3.0, 0.0, 7.0, 8.0, 1.0, 1.0, 6.0, 4.0, 9.0, 5.0 ],
			"SV_16" : [ 4.0, 4.0, 4.0, 5.0, 3.0, 8.0, 1.0, 1.0, 2.0, 1.0 ],
			"SV_17" : [ 1.0, 8.0, 9.0, 6.0, 7.0, 2.0, 0.0, 0.0, 0.0, 9.0 ],
			"SV_18" : [ 3.0, 8.0, 1.0, 4.0, 4.0, 8.0, 2.0, 2.0, 1.0, 9.0 ],
			"SV_19" : [ 2.0, 7.0, 2.0, 10.0, 8.0, 2.0, 6.0, 3.0, 3.0, 6.0 ],
			"SV_20" : [ 9.0, 3.0, 7.0, 2.0, 2.0, 0.0, 3.0, 5.0, 4.0, 8.0 ],
			"SV_21" : [ 4.0, 7.0, 3.0, 7.0, 8.0, 8.0, 3.0, 9.0, 8.0, 6.0 ],
			"SV_22" : [ 4.0, 6.0, 1.0, 9.0, 2.0, 3.0, 4.0, 9.0, 5.0, 6.0 ],
			"SV_23" : [ 2.0, 10.0, 5.0, 4.0, 5.0, 4.0, 9.0, 3.0, 1.0, 3.0 ],
			"SV_24" : [ 6.0, 2.0, 0.0, 1.0, 1.0, 6.0, 4.0, 4.0, 2.0, 6.0 ],
			"SV_25" : [ 7.0, 4.0, 8.0, 9.0, 5.0, 1.0, 6.0, 4.0, 7.0, 1.0 ],
			"SV_26" : [ 7.0, 9.0, 1.0, 7.0, 2.0, 1.0, 4.0, 2.0, 4.0, 2.0 ],
			"SV_27" : [ 5.0, 5.0, 9.0, 4.0, 8.0, 6.0, 2.0, 7.0, 6.0, 3.0 ],
			"SV_28" : [ 2.0, 3.0, 6.0, 0.0, 5.0, 2.0, 1.0, 9.0, 4.0, 4.0 ],
			"SV_29" : [ 8.0, 1.0, 7.0, 0.0, 5.0, 6.0, 5.0, 7.0, 3.0, 2.0 ],
			"SV_30" : [ 2.0, 1.0, 5.0, 6.0, 5.0, 1.0, 6.0, 1.0, 4.0, 3.0 ],
			"SV_31" : [ 2.0, 9.0, 7.0, 8.0, 7.0, 3.0, 2.0, 8.0, 1.0, 3.0 ],
			"SV_32" : [ 6.0, 9.0, 4.0, 8.0, 9.0, 2.0, 4.0, 4.0, 1.0, 3.0 ],
			"SV_33" : [ 9.0, 0.0, 4.0, 3.0, 9.0, 3.0, 8.0, 6.0, 1.0, 3.0 ],
			"SV_34" : [ 1.0, 1.0, 3.0, 4.0, 6.0, 7.0, 5.0, 0.0, 3.0, 3.0 ],
			"SV_35" : [ 4.0, 2.0, 5.0, 0.0, 8.0, 4.0, 0.0, 0.0, 4.0, 5.0 ],
			"SV_36" : [ 2.0, 5.0, 2.0, 2.0, 0.0, 5.0, 0.0, 4.0, 9.0, 0.0 ],
			"SV_37" : [ 2.0, 6.0, 6.0, 3.0, 5.0, 8.0, 7.0, 4.0, 7.0, 9.0 ],
			"SV_38" : [ 3.0, 1.0, 5.0, 2.0, 0.0, 7.0, 0.0, 0.0, 9.0, 9.0 ],
			"SV_39" : [ 8.0, 3.0, 9.0, 1.0, 3.0, 1.0, 2.0, 9.0, 7.0, 5.0 ],
			"SV_40" : [ 8.0, 0.0, 0.0, 5.0, 8.0, 5.0, 8.0, 5.0, 4.0, 3.0 ],
			"SV_41" : [ 7.0, 7.0, 8.0, 2.0, 2.0, 4.0, 6.0, 1.0, 4.0, 7.0 ],
			"SV_42" : [ 0.0, 4.0, 2.0, 9.0, 4.0, 2.0, 8.0, 2.0, 5.0, 10.0 ],
			"SV_43" : [ 0.0, 5.0, 7.0, 9.0, 4.0, 2.0, 2.0, 4.0, 7.0, 9.0 ],
			"SV_44" : [ 7.0, 2.0, 1.0, 8.0, 2.0, 6.0, 6.0, 6.0, 2.0, 8.0 ],
			"SV_45" : [ 0.0, 7.0, 8.0, 7.0, 6.0, 6.0, 7.0, 4.0, 5.0, 7.0 ],
			"SV_46" : [ 8.0, 3.0, 6.0, 0.0, 2.0, 5.0, 9.0, 6.0, 3.0, 1.0 ],
			"SV_47" : [ 0.0, 7.0, 0.0, 8.0, 8.0, 7.0, 5.0, 2.0, 9.0, 9.0 ],
			"SV_48" : [ 5.0, 5.0, 9.0, 2.0, 0.0, 3.0, 8.0, 0.0, 8.0, 5.0 ],
			"SV_49" : [ 8.0, 8.0, 8.0, 2.0, 2.0, 2.0, 4.0, 0.0, 4.0, 1.0 ],
			"SV_50" : [ 8.0, 7.0, 9.0, 3.0, 2.0, 8.0, 8.0, 8.0, 7.0, 8.0 ],
			"SV_51" : [ 5.0, 4.0, 1.0, 9.0, 8.0, 9.0, 1.0, 5.0, 10.0, 7.0 ],
			"SV_52" : [ 6.0, 5.0, 1.0, 9.0, 4.0, 7.0, 0.0, 6.0, 5.0, 8.0 ],
			"SV_53" : [ 8.0, 5.0, 0.0, 2.0, 0.0, 0.0, 8.0, 1.0, 7.0, 9.0 ],
			"SV_54" : [ 9.0, 0.0, 3.0, 2.0, 2.0, 0.0, 1.0, 8.0, 8.0, 6.0 ],
			"SV_55" : [ 4.0, 9.0, 2.0, 3.0, 7.0, 0.0, 3.0, 4.0, 4.0, 1.0 ],
			"SV_56" : [ 1.0, 4.0, 3.0, 2.0, 9.0, 4.0, 9.0, 7.0, 4.0, 8.0 ],
			"SV_57" : [ 3.0, 4.0, 4.0, 5.0, 2.0, 2.0, 9.0, 6.0, 8.0, 4.0 ],
			"SV_58" : [ 9.0, 7.0, 7.0, 4.0, 0.0, 5.0, 9.0, 2.0, 6.0, 5.0 ],
			"SV_59" : [ 4.0, 7.0, 7.0, 6.0, 5.0, 2.0, 8.0, 0.0, 9.0, 4.0 ],
			"SV_60" : [ 6.0, 1.0, 0.0, 0.0, 4.0, 8.0, 4.0, 8.0, 2.0, 4.0 ],
			"SV_61" : [ 0.0, 1.0, 8.0, 5.0, 6.0, 3.0, 2.0, 3.0, 1.0, 7.0 ],
			"SV_62" : [ 4.0, 2.0, 3.0, 7.0, 2.0, 4.0, 0.0, 9.0, 1.0, 1.0 ],
			"SV_63" : [ 9.0, 3.0, 6.0, 5.0, 5.0, 6.0, 2.0, 6.0, 9.0, 6.0 ],
			"SV_64" : [ 4.0, 4.0, 0.0, 3.0, 9.0, 8.0, 1.0, 5.0, 0.0, 2.0 ],
			"SV_65" : [ 4.0, 7.0, 9.0, 5.0, 10.0, 7.0, 2.0, 6.0, 0.0, 0.0 ],
			"SV_66" : [ 0.0, 2.0, 9.0, 9.0, 7.0, 9.0, 5.0, 9.0, 9.0, 7.0 ],
			"SV_67" : [ 9.0, 1.0, 6.0, 0.0, 1.0, 4.0, 9.0, 6.0, 1.0, 6.0 ],
			"SV_68" : [ 4.0, 1.0, 5.0, 0.0, 0.0, 2.0, 8.0, 0.0, 0.0, 3.0 ],
			"SV_69" : [ 2.0, 3.0, 10.0, 6.0, 9.0, 0.0, 3.0, 2.0, 1.0, 4.0 ],
			"SV_70" : [ 5.0, 7.0, 3.0, 8.0, 7.0, 8.0, 8.0, 1.0, 8.0, 0.0 ],
			"SV_71" : [ 3.0, 6.0, 6.0, 8.0, 7.0, 2.0, 1.0, 0.0, 4.0, 5.0 ],
			"SV_72" : [ 1.0, 6.0, 9.0, 5.0, 8.0, 1.0, 3.0, 2.0, 2.0, 0.0 ],
			"SV_73" : [ 8.0, 4.0, 5.0, 8.0, 2.0, 0.0, 2.0, 2.0, 2.0, 9.0 ],
			"SV_74" : [ 3.0, 5.0, 6.0, 5.0, 3.0, 7.0, 6.0, 9.0, 2.0, 1.0 ],
			"SV_75" : [ 0.0, 6.0, 7.0, 9.0, 6.0, 9.0, 4.0, 7.0, 9.0, 2.0 ],
			"SV_76" : [ 9.0, 4.0, 5.0, 7.0, 6.0, 4.0, 2.0, 1.0, 8.0, 8.0 ],
			"SV_77" : [ 8.0, 5.0, 6.0, 1.0, 0.0, 6.0, 9.0, 8.0, 0.0, 1.0 ],
			"SV_78" : [ 10.0, 0.0, 0.0, 0.0, 7.0, 0.0, 9.0, 6.0, 5.0, 0.0 ],
			"SV_79" : [ 2.0, 8.0, 5.0, 2.0, 3.0, 1.0, 7.0, 4.0, 9.0, 1.0 ],
			"SV_80" : [ 9.0, 4.0, 3.0, 4.0, 7.0, 6.0, 3.0, 8.0, 8.0, 8.0 ],
			"SV_81" : [ 1.0, 8.0, 7.0, 4.0, 7.0, 4.0, 2.0, 9.0, 7.0, 3.0 ],
			"SV_82" : [ 7.0, 0.0, 0.0, 6.0, 3.0, 2.0, 3.0, 7.0, 1.0, 1.0 ],
			"SV_83" : [ 8.0, 4.0, 5.0, 1.0, 3.0, 7.0, 3.0, 7.0, 4.0, 0.0 ],
			"SV_84" : [ 5.0, 9.0, 6.0, 7.0, 6.0, 8.0, 2.0, 1.0, 5.0, 5.0 ],
			"SV_85" : [ 3.0, 2.0, 2.0, 0.0, 4.0, 4.0, 0.0, 8.0, 6.0, 5.0 ],
			"SV_86" : [ 7.0, 1.0, 1.0, 8.0, 1.0, 1.0, 0.0, 5.0, 0.0, 8.0 ],
			"SV_87" : [ 3.0, 2.0, 8.0, 2.0, 1.0, 0.0, 3.0, 6.0, 7.0, 4.0 ],
			"SV_88" : [ 0.0, 2.0, 1.0, 1.0, 4.0, 7.0, 7.0, 1.0, 3.0, 8.0 ],
			"SV_89" : [ 9.0, 2.0, 4.0, 1.0, 7.0, 1.0, 6.0, 7.0, 8.0, 9.0 ],
			"SV_90" : [ 7.0, 8.0, 3.0, 9.0, 5.0, 10.0, 6.0, 0.0, 7.0, 4.0 ],
			"SV_91" : [ 3.0, 0.0, 2.0, 8.0, 0.0, 9.0, 2.0, 1.0, 8.0, 0.0 ],
			"SV_92" : [ 7.0, 6.0, 8.0, 3.0, 7.0, 4.0, 7.0, 4.0, 3.0, 0.0 ],
			"SV_93" : [ 1.0, 9.0, 2.0, 4.0, 8.0, 5.0, 0.0, 4.0, 6.0, 6.0 ],
			"SV_94" : [ 9.0, 7.0, 4.0, 1.0, 8.0, 9.0, 0.0, 3.0, 2.0, 6.0 ],
			"SV_95" : [ 3.0, 2.0, 4.0, 6.0, 3.0, 4.0, 3.0, 8.0, 4.0, 8.0 ],
			"SV_96" : [ 2.0, 2.0, 2.0, 0.0, 1.0, 7.0, 5.0, 0.0, 7.0, 0.0 ]
		},
		"SupportVectorsCoefs" : 	{
			"SV_coef_0" : [ -0.780151, -0.441677, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 0.719373, 0.861942, 0.306137, 1.0, 1.0, -0.201417, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -0.241875, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, -0.69598, -1.0, 1.0, -0.198579, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, -1.0, 1.0, -0.903669, -0.849309, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 0.891185, 1.0, -0.684484, -1.0, 1.0, 0.12006, -1.0, -1.0, 1.0, -1.0, 1.0, -0.715905, 1.0, -1.0, -0.18565, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0 ]
		},
		"classes" : 2,
		"nSV" : [ 97 ],
		"n_iter" : [ 82 ],
		"probA" : [  ],
		"probB" : [  ],
		"rho" : [ -14.432035 ]
	}
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
[15.47138   13.16519   15.482431  13.348949  14.947588  16.374187
 15.079584  12.186089  13.524321  15.190804  13.163357  15.271284
 13.234216  16.424253  18.668468  12.60922   12.648192  13.505674
 17.124092  15.694195  18.46143   13.180791  17.70091   16.483286
 16.324724  10.717375  17.326468  17.86635   16.56561   10.55041
 11.307296  13.227883  18.17357   20.37211   13.821322  11.654411
 12.281618  10.901933  13.9937525 11.9122715 12.857652  14.528562
 15.37402   14.308193  14.754559  15.824331  16.028608  11.258784
 15.925261  13.779578  14.940049  15.871148  17.77375   17.98997
 14.610622  11.912906  16.43771   12.54488   12.466896  15.349294
 16.489891  10.708354  13.522262  13.159627  16.488428  14.695266
 17.672256  15.379919  11.370565  13.240973  11.176401  16.990377
 17.388721  14.078762  18.55552   17.161879  16.938     14.060095
 15.533685  18.127037  12.622579  12.656983  12.924262  16.403072
 14.717071  13.613819  11.901084  19.216188   9.652175  14.866046
 10.589091  10.674972  13.1151    18.500257  12.3264885 16.551298
 15.40568   15.113251  12.779426   9.991026 ]
('OPERATION_END_ELAPSED', 0.003, 'PREDICT')
('OPERATION_START', 'PREDICT')
[15.471353  13.165205  15.482404  13.348938  14.947602  16.374176
 15.0795965 12.186109  13.524326  15.190808  13.163377  15.2712755
 13.234223  16.424232  18.668438  12.609242  12.648198  13.505662
 17.124062  15.694186  18.461374  13.180799  17.700884  16.483273
 16.324694  10.717415  17.326437  17.866323  16.565603  10.550441
 11.307316  13.227886  18.173521  20.37205   13.821325  11.654416
 12.281635  10.901976  13.993743  11.912313  12.857684  14.528574
 15.374023  14.308167  14.7545185 15.824332  16.028564  11.258804
 15.925237  13.779615  14.940029  15.871149  17.773727  17.989948
 14.610656  11.912941  16.437702  12.544883  12.466902  15.349275
 16.489872  10.708395  13.522269  13.159626  16.488441  14.695271
 17.672222  15.379911  11.370594  13.240997  11.176453  16.990366
 17.388683  14.078767  18.55549   17.161873  16.937973  14.060092
 15.533643  18.127014  12.622595  12.657013  12.924271  16.403076
 14.717045  13.61385   11.9010935 19.21614    9.65222   14.866045
 10.58913   10.675012  13.11511   18.500206  12.326505  16.551292
 15.405643  15.113213  12.779425   9.991089 ]
('OPERATION_END_ELAPSED', 0.003, 'PREDICT')
MODEL_PERFS {'class_name': 'mllite.SVR', 'model_name': 'SVR', 'options': None, 'dataset': 'freidman1_quantized', 'size': 100, 'mse': 8.053538, 'mae': 2.129845, 'mape': 0.21042852, 'r2': 0.6630577668109089}
WRITING_PERF_CODE 'logs/auto_tests/regression/SVR/mllite.SVR_freidman1_quantized.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.SVR', 'model_name': 'SVR', 'options': None, 'dataset': 'freidman1_quantized', 'training_time_in_sec': 0.024, 'prediction_time_in_sec': 0.003}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 0 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 1 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 2 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 3 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 4 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 5 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 6 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 7 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 8 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 9 10
{
   "Contributions" : {
      "X_0" : [ -0.088387 ],
      "X_1" : [ 0.013794 ],
      "X_2" : [ 0.014807 ],
      "X_3" : [ -0.433473 ],
      "X_4" : [ 0.060945 ],
      "X_5" : [ -0.054784 ],
      "X_6" : [ 0.003668 ],
      "X_7" : [ 0.024601 ],
      "X_8" : [ -0.039390 ],
      "X_9" : [ -0.017525 ]   
   },
   "Most_Contributive_Features" : {
      "y" : [ 3, 0, 4, 5, 8, 7, 9, 2, 1, 6 ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/regression/SVR/mllite.SVR_freidman1_quantized_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/regression/SVR/mllite.SVR_freidman1_quantized_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('freidman1_quantized', 'SVR', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "freidman1_quantized" AS "ADS" 
 )
,"SV_data" AS
 ( SELECT 
   "Values"."sv_idx" AS "sv_idx",
   "Values"."coeff" AS "coeff",
   "Values"."sv_0" AS "sv_0",
   "Values"."sv_1" AS "sv_1",
   "Values"."sv_2" AS "sv_2",
   "Values"."sv_3" AS "sv_3",
   "Values"."sv_4" AS "sv_4",
   "Values"."sv_5" AS "sv_5",
   "Values"."sv_6" AS "sv_6",
   "Values"."sv_7" AS "sv_7",
   "Values"."sv_8" AS "sv_8",
   "Values"."sv_9" AS "sv_9"
  FROM
  (
     SELECT 0 AS "sv_idx", -0.780151 AS "coeff", 4.000000 AS "sv_0", 3.000000 AS "sv_1", 5.000000 AS "sv_2", 6.000000 AS "sv_3", 9.000000 AS "sv_4", 8.0
SQL_OUT_PUT_FIRST_LINES_END ('freidman1_quantized', 'SVR', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('freidman1_quantized', 'SVR', 'duckdb')

    (SELECT
      full_join_data_sv."index" AS "index",
      sum(CAST(full_join_data_sv.dot_prod AS FLOAT)) - -14.432035 AS dot_product
     FROM
       (SELECT
          model_input."index" AS "index",
          "SV_data"."coeff" *  EXP( LEAST( GREATEST( CAST(-32.0 AS FLOAT), -0.011928 * (power(model_input."X_0" - "SV_data".sv_0, 2) + power(model_input."X_1" - "SV_data".sv_1, 2) + power(model_input."X_2" - "SV_data".sv_2, 2) + power(model_input."X_3" - "SV_data".sv_3, 2) + power(model_input."X_4" - "SV_data".sv_4, 2) + power(model_input."X_5" - "SV_data".sv_5, 2) + power(model_input."X_6" - "SV_data".sv_6, 2) + power(model_input."X_7" - "SV_data".sv_7, 2) + power(model_input."X_8" - "SV_data".sv_8, 2) + power(model_input."X_9" - "SV_data".sv_9, 2)) ), CAST(32.0 AS FLOAT) ) )  AS "dot_prod" 
        FROM
          model_input, "SV_data"
       ) AS full_join_data_sv
     GROUP BY full_join_data_sv."index"
    ) AS dp )
SELECT
  t."index" as "index",
  t."Estimator" as "Estimator"
FROM "Kernel_DotProd" AS t

SQL_OUT_PUT_LAST_LINES_END ('freidman1_quantized', 'SVR', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 100 entries, 0 to 99
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     100 non-null    float32
 1   X_1     100 non-null    float32
 2   X_2     100 non-null    float32
 3   X_3     100 non-null    float32
 4   X_4     100 non-null    float32
 5   X_5     100 non-null    float32
 6   X_6     100 non-null    float32
 7   X_7     100 non-null    float32
 8   X_8     100 non-null    float32
 9   X_9     100 non-null    float32
dtypes: float32(10)
memory usage: 4.7 KB
       X_0  X_1  X_2  X_3  X_4  X_5   X_6  X_7  X_8  X_9
index                                                   
0      4.0  3.0  5.0  6.0  9.0  8.0  10.0  3.0  7.0  3.0
1      6.0  4.0  4.0  2.0  4.0  0.0   3.0  5.0  1.0  1.0
2      1.0  6.0  1.0  6.0  8.0  8.0   7.0  2.0  6.0  6.0
3      0.0  7.0  0.0  2.0  9.0  4.0   5.0  1.0  7.0  9.0
4      6.0  8.0  0.0  4.0  0.0  3.0   5.0  5.0  6.0  4.0
...    ...  ...  ...  ...  ...  ...   ...  ...  ...  ...
95     7.0  6.0  8.0  3.0  7.0  4.0   7.0  4.0  3.0  0.0
96     1.0  9.0  2.0  4.0  8.0  5.0   0.0  4.0  6.0  6.0
97     9.0  7.0  4.0  1.0  8.0  9.0   0.0  3.0  2.0  6.0
98     3.0  2.0  4.0  6.0  3.0  4.0   3.0  8.0  4.0  8.0
99     2.0  2.0  2.0  0.0  1.0  7.0   5.0  0.0  7.0  0.0

[100 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 100 entries, 0 to 99
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      100 non-null    int64  
 1   Estimator  100 non-null    float64
dtypes: float64(1), int64(1)
memory usage: 1.7 KB
    index  Estimator
0       0  15.471352
1       1  13.165204
2       2  15.482404
3       3  13.348937
4       4  14.947601
..    ...        ...
95     95  16.551292
96     96  15.405644
97     97  15.113212
98     98  12.779425
99     99   9.991089

[100 rows x 2 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('freidman1_quantized', 'SVR') Estimator 2.1732697019984927e-05
    index  SQL_Estimator  Py_Estimator     SQL_Error
84     84      14.717045     14.717071 -2.604683e-05
85     85      13.613849     13.613819  3.033684e-05
86     86      11.901093     11.901084  9.086851e-06
87     87      19.216139     19.216188 -4.918554e-05
88     88       9.652218      9.652175  4.350946e-05
89     89      14.866045     14.866046 -9.011181e-07
90     90      10.589130     10.589091  3.858277e-05
91     91      10.675011     10.674972  3.963237e-05
92     92      13.115110     13.115100  1.019047e-05
93     93      18.500204     18.500257 -5.312643e-05
94     94      12.326504     12.326488  1.533975e-05
95     95      16.551292     16.551298 -6.405234e-06
96     96      15.405644     15.405680 -3.615447e-05
97     97      15.113212     15.113251 -3.854937e-05
98     98      12.779425     12.779426 -8.838886e-07
99     99       9.991089      9.991026  6.301043e-05
MLLITE_REG_SQL_EXECUTION_STATUS ('freidman1_quantized', 'SVR', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/regression/SVR/mllite.SVR_freidman1_quantized_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('freidman1_quantized', 'SVR', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "freidman1_quantized" AS "ADS" 
 )
,"SV_data" AS
 ( SELECT 
   "Values"."sv_idx" AS "sv_idx",
   "Values"."coeff" AS "coeff",
   "Values"."sv_0" AS "sv_0",
   "Values"."sv_1" AS "sv_1",
   "Values"."sv_2" AS "sv_2",
   "Values"."sv_3" AS "sv_3",
   "Values"."sv_4" AS "sv_4",
   "Values"."sv_5" AS "sv_5",
   "Values"."sv_6" AS "sv_6",
   "Values"."sv_7" AS "sv_7",
   "Values"."sv_8" AS "sv_8",
   "Values"."sv_9" AS "sv_9"
  FROM
  (
     SELECT 0 AS "sv_idx", -0.780151 AS "coeff", 4.000000 AS "sv_0", 3.000000 AS "sv_1", 5.000000 AS "sv_2", 6.000000 AS "sv_3", 9.000000 AS "sv_4", 8.0
SQL_OUT_PUT_FIRST_LINES_END ('freidman1_quantized', 'SVR', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('freidman1_quantized', 'SVR', 'sqlite')
   FROM
    (SELECT
      full_join_data_sv."index" AS "index",
      sum(CAST(full_join_data_sv.dot_prod AS FLOAT)) - -14.432035 AS dot_product
     FROM
       (SELECT
          model_input."index" AS "index",
          "SV_data"."coeff" *  EXP( MIN( MAX( CAST(-32.0 AS FLOAT), -0.011928 * (power(model_input."X_0" - "SV_data".sv_0, 2) + power(model_input."X_1" - "SV_data".sv_1, 2) + power(model_input."X_2" - "SV_data".sv_2, 2) + power(model_input."X_3" - "SV_data".sv_3, 2) + power(model_input."X_4" - "SV_data".sv_4, 2) + power(model_input."X_5" - "SV_data".sv_5, 2) + power(model_input."X_6" - "SV_data".sv_6, 2) + power(model_input."X_7" - "SV_data".sv_7, 2) + power(model_input."X_8" - "SV_data".sv_8, 2) + power(model_input."X_9" - "SV_data".sv_9, 2)) ), CAST(32.0 AS FLOAT) ) )  AS "dot_prod" 
        FROM
          model_input, "SV_data"
       ) AS full_join_data_sv
     GROUP BY full_join_data_sv."index"
    ) AS dp )
SELECT
  t."index" as "index",
  t."Estimator" as "Estimator"
FROM "Kernel_DotProd" AS t

SQL_OUT_PUT_LAST_LINES_END ('freidman1_quantized', 'SVR', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 100 entries, 0 to 99
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     100 non-null    float32
 1   X_1     100 non-null    float32
 2   X_2     100 non-null    float32
 3   X_3     100 non-null    float32
 4   X_4     100 non-null    float32
 5   X_5     100 non-null    float32
 6   X_6     100 non-null    float32
 7   X_7     100 non-null    float32
 8   X_8     100 non-null    float32
 9   X_9     100 non-null    float32
dtypes: float32(10)
memory usage: 4.7 KB
       X_0  X_1  X_2  X_3  X_4  X_5   X_6  X_7  X_8  X_9
index                                                   
0      4.0  3.0  5.0  6.0  9.0  8.0  10.0  3.0  7.0  3.0
1      6.0  4.0  4.0  2.0  4.0  0.0   3.0  5.0  1.0  1.0
2      1.0  6.0  1.0  6.0  8.0  8.0   7.0  2.0  6.0  6.0
3      0.0  7.0  0.0  2.0  9.0  4.0   5.0  1.0  7.0  9.0
4      6.0  8.0  0.0  4.0  0.0  3.0   5.0  5.0  6.0  4.0
...    ...  ...  ...  ...  ...  ...   ...  ...  ...  ...
95     7.0  6.0  8.0  3.0  7.0  4.0   7.0  4.0  3.0  0.0
96     1.0  9.0  2.0  4.0  8.0  5.0   0.0  4.0  6.0  6.0
97     9.0  7.0  4.0  1.0  8.0  9.0   0.0  3.0  2.0  6.0
98     3.0  2.0  4.0  6.0  3.0  4.0   3.0  8.0  4.0  8.0
99     2.0  2.0  2.0  0.0  1.0  7.0   5.0  0.0  7.0  0.0

[100 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 100 entries, 0 to 99
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      100 non-null    int64  
 1   Estimator  100 non-null    float64
dtypes: float64(1), int64(1)
memory usage: 1.7 KB
    index  Estimator
0       0  15.471352
1       1  13.165204
2       2  15.482404
3       3  13.348937
4       4  14.947601
..    ...        ...
95     95  16.551292
96     96  15.405644
97     97  15.113212
98     98  12.779425
99     99   9.991089

[100 rows x 2 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('freidman1_quantized', 'SVR') Estimator 2.173274295859784e-05
    index  SQL_Estimator  Py_Estimator     SQL_Error
84     84      14.717044     14.717071 -2.608882e-05
85     85      13.613849     13.613819  3.031612e-05
86     86      11.901093     11.901084  9.024713e-06
87     87      19.216139     19.216188 -4.924812e-05
88     88       9.652219      9.652175  4.357640e-05
89     89      14.866045     14.866046 -8.656105e-07
90     90      10.589130     10.589091  3.857637e-05
91     91      10.675011     10.674972  3.961652e-05
92     92      13.115110     13.115100  1.018659e-05
93     93      18.500204     18.500257 -5.313063e-05
94     94      12.326504     12.326488  1.533084e-05
95     95      16.551292     16.551298 -6.409251e-06
96     96      15.405644     15.405680 -3.613468e-05
97     97      15.113212     15.113251 -3.855732e-05
98     98      12.779425     12.779426 -8.968335e-07
99     99       9.991089      9.991026  6.302710e-05
MLLITE_REG_SQL_EXECUTION_STATUS ('freidman1_quantized', 'SVR', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
