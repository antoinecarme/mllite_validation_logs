         X_0       X_1       X_2  ...       X_8       X_9     target
0   0.456887  0.295923  0.591968  ...  0.761317  0.245544  15.370928
1   0.716619  0.420279  0.400670  ...  0.167246  0.133911  13.065349
2   0.140833  0.617769  0.186105  ...  0.648067  0.563459  15.524062
3   0.071195  0.704806  0.073220  ...  0.725143  0.940551  12.395770
4   0.710411  0.866302  0.056103  ...  0.666595  0.305953  19.010028
..       ...       ...       ...  ...       ...       ...        ...
95  0.759884  0.645603  0.858346  ...  0.340241  0.086284  20.439077
96  0.133898  0.993722  0.247951  ...  0.685693  0.539265  14.384506
97  0.907576  0.735434  0.379983  ...  0.264531  0.516615  14.885318
98  0.368356  0.189593  0.403483  ...  0.462841  0.813023  11.119547
99  0.268993  0.202785  0.253928  ...  0.743187  0.015995   4.502946

[100 rows x 11 columns]
MLLITE_MODEL_SET_OPTIONS NuSVR None
MLLITE_MODEL_OPTIONS_DEFAULT NuSVR { "max_iter" : 128 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING NuSVR { ,  "max_iter" : 128  , }
MLLITE_MODEL_JSON_AFTER_SETTING NuSVR None
('OPERATION_START', 'TRAINING')
[[0.4568872  0.2959234  0.59196806 0.6449268  0.92630494 0.9157275
  0.99709725 0.2905369  0.7613175  0.24554443]
 [0.7166186  0.420279   0.40067008 0.24398686 0.46325052 0.05229123
  0.34726295 0.39939457 0.16724615 0.13391146]
 [0.14083336 0.61776936 0.18610482 0.667265   0.83628976 0.8805156
  0.79894525 0.1980786  0.6480668  0.5634588 ]
 [0.07119486 0.70480555 0.07321981 0.22164722 0.9933174  0.43409562
  0.48198017 0.13922417 0.72514343 0.9405507 ]
 [0.71041054 0.8663024  0.05610295 0.50554484 0.13280703 0.3171181
  0.52081394 0.3842079  0.6665948  0.30595312]] [15.370928 13.06535  15.524062 12.39577  19.010029]
MLLITE_FIT_USING_MODEL mllite_nu_svm_reg.NuSVR_ff4_ff4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_NU_REGRESSOR_FIT' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_NU_REGRESSOR_FIT' 2 4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_NU_REGRESSOR_FIT' 3 4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:NuSVR_Global' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:NuSVR_Global' 24 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:NuSVR_Global' 36 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:NuSVR_Global' 48 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:NuSVR_Global' 60 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:NuSVR_Global' 72 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_NU_REGRESSOR_FIT' 4 4
('OPERATION_END_ELAPSED', 0.045, 'TRAINING')
{ ,  "max_iter" : 128  , }
{ ,  "max_iter" : 128  , }
{
	"metadata" : { "model" : "Vapnik_NuSVR_RBF", "version" : "2024-W13", "signature" : "ff4_ff4"},
	"options" : {"svm_type" : "nu_svr", "kernel" : "rbf", "degree" : 3, "gamma" : 1.142622, "coef0" : 0.000000, "cache_size" : 300, "tol" : 0.001000, "nu" : 0.500000, "epsilon" : 0.000000, "shrinking" : 0, "probability" : 0, "C" : 1.000000, "max_iter" : 128, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 100, "dataset_features" : 10 },
	"svm_model" : {
	"classes" : 2,
	"L" : 59,
	"SupportVectors" : {
		"SV_00" : [ 0.710411, 0.866302, 0.056103, 0.505545, 0.132807, 0.317118, 0.520814, 0.384208, 0.666595, 0.305953 ],
		"SV_01" : [ 0.705919, 0.335669, 0.829238, 0.863314, 0.287537, 0.639683, 0.745771, 0.787558, 0.582418, 0.363306 ],
		"SV_02" : [ 0.172757, 0.057373, 0.171673, 0.599275, 0.421381, 0.559100, 0.417610, 0.998262, 0.074700, 0.708432 ],
		"SV_03" : [ 0.672520, 0.960422, 0.271050, 0.259409, 0.076063, 0.603909, 0.732761, 0.514037, 0.918325, 0.297702 ],
		"SV_04" : [ 0.734481, 0.482054, 0.789831, 0.806913, 0.681106, 0.602843, 0.333277, 0.147743, 0.020703, 0.509223 ],
		"SV_05" : [ 0.343479, 0.049133, 0.720020, 0.841468, 0.199002, 0.085445, 0.635873, 0.354635, 0.971117, 0.361298 ],
		"SV_06" : [ 0.133169, 0.898182, 0.993566, 0.694676, 0.756484, 0.193983, 0.035123, 0.033415, 0.014059, 0.907372 ],
		"SV_07" : [ 0.402955, 0.885042, 0.175049, 0.517694, 0.443807, 0.815622, 0.177617, 0.182315, 0.135270, 0.914813 ],
		"SV_08" : [ 0.246418, 0.754389, 0.264436, 0.996826, 0.880107, 0.261948, 0.595422, 0.306809, 0.390167, 0.471118 ],
		"SV_09" : [ 0.479223, 0.684603, 0.324254, 0.801230, 0.871487, 0.937278, 0.292127, 0.900755, 0.827968, 0.568796 ],
		"SV_10" : [ 0.437299, 0.556356, 0.184165, 0.982851, 0.269218, 0.292875, 0.402640, 0.897743, 0.611773, 0.543599 ],
		"SV_11" : [ 0.685229, 0.172804, 0.111791, 0.194990, 0.202220, 0.680954, 0.382914, 0.311856, 0.271890, 0.606771 ],
		"SV_12" : [ 0.764610, 0.378970, 0.823855, 0.913603, 0.553400, 0.055048, 0.588332, 0.361050, 0.814980, 0.123688 ],
		"SV_13" : [ 0.774569, 0.924882, 0.149506, 0.796391, 0.333866, 0.165815, 0.415960, 0.207386, 0.523104, 0.137733 ],
		"SV_14" : [ 0.634220, 0.486969, 0.969793, 0.441636, 0.814121, 0.690923, 0.194226, 0.716476, 0.697923, 0.212891 ],
		"SV_15" : [ 0.233546, 0.241107, 0.660121, 0.055376, 0.564663, 0.209055, 0.142822, 0.887287, 0.428596, 0.316988 ],
		"SV_16" : [ 0.804101, 0.103050, 0.728795, 0.068628, 0.567613, 0.648562, 0.495718, 0.628355, 0.398738, 0.185100 ],
		"SV_17" : [ 0.235384, 0.117604, 0.514017, 0.633968, 0.618557, 0.121827, 0.576931, 0.091568, 0.527227, 0.211281 ],
		"SV_18" : [ 0.721851, 0.965554, 0.435501, 0.818612, 0.939145, 0.215034, 0.443577, 0.336197, 0.220269, 0.203231 ],
		"SV_19" : [ 0.975417, 0.002660, 0.366127, 0.434512, 0.945664, 0.329085, 0.852323, 0.591908, 0.151237, 0.221160 ],
		"SV_20" : [ 0.123542, 0.136568, 0.354175, 0.494539, 0.674758, 0.762896, 0.454376, 0.026430, 0.343817, 0.227996 ],
		"SV_21" : [ 0.426792, 0.212467, 0.481987, 0.115089, 0.854095, 0.453031, 0.002107, 0.065711, 0.509929, 0.421698 ],
		"SV_22" : [ 0.257439, 0.499463, 0.260146, 0.239901, 0.156860, 0.590953, 0.077376, 0.340943, 0.943330, 0.056908 ],
		"SV_23" : [ 0.221163, 0.634851, 0.675740, 0.393459, 0.593254, 0.877299, 0.742170, 0.322286, 0.749472, 0.996954 ],
		"SV_24" : [ 0.366207, 0.096199, 0.520676, 0.250113, 0.155164, 0.752654, 0.007439, 0.025310, 0.924844, 0.961402 ],
		"SV_25" : [ 0.772433, 0.764512, 0.960643, 0.302594, 0.292439, 0.441128, 0.688884, 0.145406, 0.532042, 0.749330 ],
		"SV_26" : [ 0.814992, 0.273163, 0.627205, 0.072804, 0.252944, 0.523729, 0.937792, 0.491503, 0.365159, 0.128096 ],
		"SV_27" : [ 0.087465, 0.681611, 0.002105, 0.838984, 0.806677, 0.751159, 0.481177, 0.221279, 0.984524, 0.957584 ],
		"SV_28" : [ 0.849990, 0.916139, 0.864912, 0.228437, 0.340806, 0.227606, 0.447862, 0.068150, 0.472487, 0.104133 ],
		"SV_29" : [ 0.827680, 0.741216, 0.967589, 0.359411, 0.243325, 0.911669, 0.829354, 0.787352, 0.791034, 0.782214 ],
		"SV_30" : [ 0.663564, 0.399281, 0.158547, 0.930965, 0.846977, 0.986627, 0.132816, 0.426558, 0.999950, 0.674509 ],
		"SV_31" : [ 0.733847, 0.503559, 0.161205, 0.982267, 0.531810, 0.770971, 0.043226, 0.562131, 0.583390, 0.870415 ],
		"SV_32" : [ 0.823836, 0.504187, 0.034569, 0.308381, 0.003390, 0.039580, 0.879070, 0.101112, 0.747507, 0.958859 ],
		"SV_33" : [ 0.917115, 0.036220, 0.312429, 0.285258, 0.269077, 0.050048, 0.163158, 0.861914, 0.830921, 0.459571 ],
		"SV_34" : [ 0.470848, 0.950853, 0.250944, 0.381755, 0.767739, 0.052865, 0.321258, 0.310992, 0.507478, 0.114717 ],
		"SV_35" : [ 0.183906, 0.368316, 0.322211, 0.269664, 0.974516, 0.395748, 0.967284, 0.685479, 0.485286, 0.847430 ],
		"SV_36" : [ 0.466161, 0.730480, 0.747965, 0.642714, 0.630985, 0.230235, 0.892410, 0.026009, 0.980536, 0.282220 ],
		"SV_37" : [ 0.457487, 0.414129, 0.014223, 0.378696, 0.893256, 0.937627, 0.113897, 0.460844, 0.008495, 0.149271 ],
		"SV_38" : [ 0.480054, 0.664308, 0.985340, 0.567078, 0.994149, 0.780890, 0.232756, 0.567089, 0.093123, 0.031981 ],
		"SV_39" : [ 0.101391, 0.213374, 0.964562, 0.911902, 0.755811, 0.963955, 0.532774, 0.985822, 0.912822, 0.720971 ],
		"SV_40" : [ 0.937776, 0.125575, 0.655885, 0.096146, 0.187430, 0.485816, 0.973901, 0.496639, 0.139176, 0.557847 ],
		"SV_41" : [ 0.414708, 0.117089, 0.562469, 0.105808, 0.080834, 0.195908, 0.881411, 0.049262, 0.050168, 0.271948 ],
		"SV_42" : [ 0.225035, 0.267629, 0.997439, 0.660872, 0.911509, 0.036102, 0.310786, 0.232937, 0.166239, 0.314810 ],
		"SV_43" : [ 0.652811, 0.757719, 0.306902, 0.828286, 0.763064, 0.859003, 0.873377, 0.146070, 0.894295, 0.086598 ],
		"SV_44" : [ 0.853835, 0.368909, 0.474869, 0.879341, 0.260376, 0.013107, 0.183573, 0.214752, 0.246734, 0.931995 ],
		"SV_45" : [ 0.936277, 0.372295, 0.533309, 0.719398, 0.698320, 0.394020, 0.202381, 0.107294, 0.877483, 0.827543 ],
		"SV_46" : [ 0.993297, 0.015448, 0.073074, 0.123516, 0.766918, 0.032547, 0.970468, 0.585911, 0.580508, 0.025791 ],
		"SV_47" : [ 0.305323, 0.920127, 0.554815, 0.290412, 0.398567, 0.153044, 0.764948, 0.336047, 0.946082, 0.127173 ],
		"SV_48" : [ 0.888763, 0.378332, 0.317378, 0.494882, 0.790191, 0.695702, 0.329863, 0.789227, 0.826873, 0.877740 ],
		"SV_49" : [ 0.604811, 0.984899, 0.598416, 0.783427, 0.739098, 0.893643, 0.193266, 0.096950, 0.547724, 0.389115 ],
		"SV_50" : [ 0.361047, 0.160106, 0.219158, 0.010201, 0.471566, 0.488280, 0.020705, 0.852158, 0.667965, 0.378921 ],
		"SV_51" : [ 0.387013, 0.186144, 0.843217, 0.273500, 0.175361, 0.010880, 0.338375, 0.530580, 0.739766, 0.316235 ],
		"SV_52" : [ 0.010500, 0.200190, 0.192366, 0.175831, 0.507530, 0.721218, 0.719388, 0.114770, 0.417354, 0.783886 ],
		"SV_53" : [ 0.888102, 0.149216, 0.426902, 0.180039, 0.792176, 0.085835, 0.603319, 0.653572, 0.865909, 0.986362 ],
		"SV_54" : [ 0.760617, 0.894566, 0.346795, 0.929768, 0.625158, 0.995443, 0.581267, 0.012827, 0.748000, 0.341933 ],
		"SV_55" : [ 0.341289, 0.059388, 0.275743, 0.885258, 0.018723, 0.985191, 0.272452, 0.138076, 0.832781, 0.073518 ],
		"SV_56" : [ 0.759884, 0.645603, 0.858346, 0.414192, 0.746659, 0.476919, 0.729435, 0.314409, 0.340241, 0.086284 ],
		"SV_57" : [ 0.368356, 0.189593, 0.403483, 0.670145, 0.411066, 0.464093, 0.307388, 0.840440, 0.462841, 0.813023 ],
		"SV_58" : [ 0.268993, 0.202785, 0.253928, 0.049719, 0.217885, 0.770274, 0.487503, 0.076708, 0.743187, 0.015995 ]
	},
	"SupportVectorsCoefs" : {
		"SV_coef_0" : [ 1.000000, 1.000000, -0.576283, -0.182701, 1.000000, -1.000000, 1.000000, 0.003125, 1.000000, 1.000000, 1.000000, -0.014829, 1.000000, 0.107568, 1.000000, -1.000000, -1.000000, -1.000000, 0.764208, -1.000000, -1.000000, -1.000000, -1.000000, -1.000000, -1.000000, 1.000000, -1.000000, 1.000000, -0.958086, 1.000000, 1.000000, 1.000000, 0.545852, -1.000000, 0.679324, -1.000000, 1.000000, 1.000000, 1.000000, 0.167041, -1.000000, -1.000000, 0.789905, 1.000000, 0.515322, 1.000000, -1.000000, -0.268102, 0.258179, 0.169476, -1.000000, -1.000000, -1.000000, -1.000000, 1.000000, -1.000000, 1.000000, -1.000000, -1.000000 ]
	},
	"rho" : [ -14.703519 ],
	"nSV" : [ 59 ],
	"probA" : [ ],
	"probB" : [ ],
	"n_iter" : [ 73 ]
}
}
WRITING_JSON_CODE 'logs/auto_tests/regression/NuSVR/mllite.NuSVR_freidman1_medium.json'

MLLITE_MODEL_SET_OPTIONS NuSVR None
MLLITE_MODEL_OPTIONS_DEFAULT NuSVR { "max_iter" : 128 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING NuSVR { ,  "max_iter" : 128  , }
MLLITE_MODEL_JSON_AFTER_SETTING NuSVR None
MLLITE_RELOADING_MODEL mllite_nu_svm_reg.NuSVR_ff4_ff4
{
	"metadata" : { "model" : "Vapnik_NuSVR_RBF", "version" : "2024-W13", "signature" : "ff4_ff4"},
	"options" : {"svm_type" : "nu_svr", "kernel" : "rbf", "degree" : 3, "gamma" : 1.142622, "coef0" : 0.000000, "cache_size" : 300, "tol" : 0.001000, "nu" : 0.500000, "epsilon" : 0.000000, "shrinking" : 0, "probability" : 0, "C" : 1.000000, "max_iter" : 128, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 100, "dataset_features" : 10 },
	"svm_model" : {
	"classes" : 2,
	"L" : 59,
	"SupportVectors" : {
		"SV_00" : [ 0.710411, 0.866302, 0.056103, 0.505545, 0.132807, 0.317118, 0.520814, 0.384208, 0.666595, 0.305953 ],
		"SV_01" : [ 0.705919, 0.335669, 0.829238, 0.863314, 0.287537, 0.639683, 0.745771, 0.787558, 0.582418, 0.363306 ],
		"SV_02" : [ 0.172757, 0.057373, 0.171673, 0.599275, 0.421381, 0.559100, 0.417610, 0.998262, 0.074700, 0.708432 ],
		"SV_03" : [ 0.672520, 0.960422, 0.271050, 0.259409, 0.076063, 0.603909, 0.732761, 0.514037, 0.918325, 0.297702 ],
		"SV_04" : [ 0.734481, 0.482054, 0.789831, 0.806913, 0.681106, 0.602843, 0.333277, 0.147743, 0.020703, 0.509223 ],
		"SV_05" : [ 0.343479, 0.049133, 0.720020, 0.841468, 0.199002, 0.085445, 0.635873, 0.354635, 0.971117, 0.361298 ],
		"SV_06" : [ 0.133169, 0.898182, 0.993566, 0.694676, 0.756484, 0.193983, 0.035123, 0.033415, 0.014059, 0.907372 ],
		"SV_07" : [ 0.402955, 0.885042, 0.175049, 0.517694, 0.443807, 0.815622, 0.177617, 0.182315, 0.135270, 0.914813 ],
		"SV_08" : [ 0.246418, 0.754389, 0.264436, 0.996826, 0.880107, 0.261948, 0.595422, 0.306809, 0.390167, 0.471118 ],
		"SV_09" : [ 0.479223, 0.684603, 0.324254, 0.801230, 0.871487, 0.937278, 0.292127, 0.900755, 0.827968, 0.568796 ],
		"SV_10" : [ 0.437299, 0.556356, 0.184165, 0.982851, 0.269218, 0.292875, 0.402640, 0.897743, 0.611773, 0.543599 ],
		"SV_11" : [ 0.685229, 0.172804, 0.111791, 0.194990, 0.202220, 0.680954, 0.382914, 0.311856, 0.271890, 0.606771 ],
		"SV_12" : [ 0.764610, 0.378970, 0.823855, 0.913603, 0.553400, 0.055048, 0.588332, 0.361050, 0.814980, 0.123688 ],
		"SV_13" : [ 0.774569, 0.924882, 0.149506, 0.796391, 0.333866, 0.165815, 0.415960, 0.207386, 0.523104, 0.137733 ],
		"SV_14" : [ 0.634220, 0.486969, 0.969793, 0.441636, 0.814121, 0.690923, 0.194226, 0.716476, 0.697923, 0.212891 ],
		"SV_15" : [ 0.233546, 0.241107, 0.660121, 0.055376, 0.564663, 0.209055, 0.142822, 0.887287, 0.428596, 0.316988 ],
		"SV_16" : [ 0.804101, 0.103050, 0.728795, 0.068628, 0.567613, 0.648562, 0.495718, 0.628355, 0.398738, 0.185100 ],
		"SV_17" : [ 0.235384, 0.117604, 0.514017, 0.633968, 0.618557, 0.121827, 0.576931, 0.091568, 0.527227, 0.211281 ],
		"SV_18" : [ 0.721851, 0.965554, 0.435501, 0.818612, 0.939145, 0.215034, 0.443577, 0.336197, 0.220269, 0.203231 ],
		"SV_19" : [ 0.975417, 0.002660, 0.366127, 0.434512, 0.945664, 0.329085, 0.852323, 0.591908, 0.151237, 0.221160 ],
		"SV_20" : [ 0.123542, 0.136568, 0.354175, 0.494539, 0.674758, 0.762896, 0.454376, 0.026430, 0.343817, 0.227996 ],
		"SV_21" : [ 0.426792, 0.212467, 0.481987, 0.115089, 0.854095, 0.453031, 0.002107, 0.065711, 0.509929, 0.421698 ],
		"SV_22" : [ 0.257439, 0.499463, 0.260146, 0.239901, 0.156860, 0.590953, 0.077376, 0.340943, 0.943330, 0.056908 ],
		"SV_23" : [ 0.221163, 0.634851, 0.675740, 0.393459, 0.593254, 0.877299, 0.742170, 0.322286, 0.749472, 0.996954 ],
		"SV_24" : [ 0.366207, 0.096199, 0.520676, 0.250113, 0.155164, 0.752654, 0.007439, 0.025310, 0.924844, 0.961402 ],
		"SV_25" : [ 0.772433, 0.764512, 0.960643, 0.302594, 0.292439, 0.441128, 0.688884, 0.145406, 0.532042, 0.749330 ],
		"SV_26" : [ 0.814992, 0.273163, 0.627205, 0.072804, 0.252944, 0.523729, 0.937792, 0.491503, 0.365159, 0.128096 ],
		"SV_27" : [ 0.087465, 0.681611, 0.002105, 0.838984, 0.806677, 0.751159, 0.481177, 0.221279, 0.984524, 0.957584 ],
		"SV_28" : [ 0.849990, 0.916139, 0.864912, 0.228437, 0.340806, 0.227606, 0.447862, 0.068150, 0.472487, 0.104133 ],
		"SV_29" : [ 0.827680, 0.741216, 0.967589, 0.359411, 0.243325, 0.911669, 0.829354, 0.787352, 0.791034, 0.782214 ],
		"SV_30" : [ 0.663564, 0.399281, 0.158547, 0.930965, 0.846977, 0.986627, 0.132816, 0.426558, 0.999950, 0.674509 ],
		"SV_31" : [ 0.733847, 0.503559, 0.161205, 0.982267, 0.531810, 0.770971, 0.043226, 0.562131, 0.583390, 0.870415 ],
		"SV_32" : [ 0.823836, 0.504187, 0.034569, 0.308381, 0.003390, 0.039580, 0.879070, 0.101112, 0.747507, 0.958859 ],
		"SV_33" : [ 0.917115, 0.036220, 0.312429, 0.285258, 0.269077, 0.050048, 0.163158, 0.861914, 0.830921, 0.459571 ],
		"SV_34" : [ 0.470848, 0.950853, 0.250944, 0.381755, 0.767739, 0.052865, 0.321258, 0.310992, 0.507478, 0.114717 ],
		"SV_35" : [ 0.183906, 0.368316, 0.322211, 0.269664, 0.974516, 0.395748, 0.967284, 0.685479, 0.485286, 0.847430 ],
		"SV_36" : [ 0.466161, 0.730480, 0.747965, 0.642714, 0.630985, 0.230235, 0.892410, 0.026009, 0.980536, 0.282220 ],
		"SV_37" : [ 0.457487, 0.414129, 0.014223, 0.378696, 0.893256, 0.937627, 0.113897, 0.460844, 0.008495, 0.149271 ],
		"SV_38" : [ 0.480054, 0.664308, 0.985340, 0.567078, 0.994149, 0.780890, 0.232756, 0.567089, 0.093123, 0.031981 ],
		"SV_39" : [ 0.101391, 0.213374, 0.964562, 0.911902, 0.755811, 0.963955, 0.532774, 0.985822, 0.912822, 0.720971 ],
		"SV_40" : [ 0.937776, 0.125575, 0.655885, 0.096146, 0.187430, 0.485816, 0.973901, 0.496639, 0.139176, 0.557847 ],
		"SV_41" : [ 0.414708, 0.117089, 0.562469, 0.105808, 0.080834, 0.195908, 0.881411, 0.049262, 0.050168, 0.271948 ],
		"SV_42" : [ 0.225035, 0.267629, 0.997439, 0.660872, 0.911509, 0.036102, 0.310786, 0.232937, 0.166239, 0.314810 ],
		"SV_43" : [ 0.652811, 0.757719, 0.306902, 0.828286, 0.763064, 0.859003, 0.873377, 0.146070, 0.894295, 0.086598 ],
		"SV_44" : [ 0.853835, 0.368909, 0.474869, 0.879341, 0.260376, 0.013107, 0.183573, 0.214752, 0.246734, 0.931995 ],
		"SV_45" : [ 0.936277, 0.372295, 0.533309, 0.719398, 0.698320, 0.394020, 0.202381, 0.107294, 0.877483, 0.827543 ],
		"SV_46" : [ 0.993297, 0.015448, 0.073074, 0.123516, 0.766918, 0.032547, 0.970468, 0.585911, 0.580508, 0.025791 ],
		"SV_47" : [ 0.305323, 0.920127, 0.554815, 0.290412, 0.398567, 0.153044, 0.764948, 0.336047, 0.946082, 0.127173 ],
		"SV_48" : [ 0.888763, 0.378332, 0.317378, 0.494882, 0.790191, 0.695702, 0.329863, 0.789227, 0.826873, 0.877740 ],
		"SV_49" : [ 0.604811, 0.984899, 0.598416, 0.783427, 0.739098, 0.893643, 0.193266, 0.096950, 0.547724, 0.389115 ],
		"SV_50" : [ 0.361047, 0.160106, 0.219158, 0.010201, 0.471566, 0.488280, 0.020705, 0.852158, 0.667965, 0.378921 ],
		"SV_51" : [ 0.387013, 0.186144, 0.843217, 0.273500, 0.175361, 0.010880, 0.338375, 0.530580, 0.739766, 0.316235 ],
		"SV_52" : [ 0.010500, 0.200190, 0.192366, 0.175831, 0.507530, 0.721218, 0.719388, 0.114770, 0.417354, 0.783886 ],
		"SV_53" : [ 0.888102, 0.149216, 0.426902, 0.180039, 0.792176, 0.085835, 0.603319, 0.653572, 0.865909, 0.986362 ],
		"SV_54" : [ 0.760617, 0.894566, 0.346795, 0.929768, 0.625158, 0.995443, 0.581267, 0.012827, 0.748000, 0.341933 ],
		"SV_55" : [ 0.341289, 0.059388, 0.275743, 0.885258, 0.018723, 0.985191, 0.272452, 0.138076, 0.832781, 0.073518 ],
		"SV_56" : [ 0.759884, 0.645603, 0.858346, 0.414192, 0.746659, 0.476919, 0.729435, 0.314409, 0.340241, 0.086284 ],
		"SV_57" : [ 0.368356, 0.189593, 0.403483, 0.670145, 0.411066, 0.464093, 0.307388, 0.840440, 0.462841, 0.813023 ],
		"SV_58" : [ 0.268993, 0.202785, 0.253928, 0.049719, 0.217885, 0.770274, 0.487503, 0.076708, 0.743187, 0.015995 ]
	},
	"SupportVectorsCoefs" : {
		"SV_coef_0" : [ 1.000000, 1.000000, -0.576283, -0.182701, 1.000000, -1.000000, 1.000000, 0.003125, 1.000000, 1.000000, 1.000000, -0.014829, 1.000000, 0.107568, 1.000000, -1.000000, -1.000000, -1.000000, 0.764208, -1.000000, -1.000000, -1.000000, -1.000000, -1.000000, -1.000000, 1.000000, -1.000000, 1.000000, -0.958086, 1.000000, 1.000000, 1.000000, 0.545852, -1.000000, 0.679324, -1.000000, 1.000000, 1.000000, 1.000000, 0.167041, -1.000000, -1.000000, 0.789905, 1.000000, 0.515322, 1.000000, -1.000000, -0.268102, 0.258179, 0.169476, -1.000000, -1.000000, -1.000000, -1.000000, 1.000000, -1.000000, 1.000000, -1.000000, -1.000000 ]
	},
	"rho" : [ -14.703519 ],
	"nSV" : [ 59 ],
	"probA" : [ ],
	"probB" : [ ],
	"n_iter" : [ 73 ]
}
}
BEAUTIFIED_JSON_START
{
	"dataset" : 	{
		"dataset_features" : 10,
		"dataset_rows" : 100
	},
	"metadata" :  { "model" : "Vapnik_NuSVR_RBF", "signature" : "ff4_ff4", "version" : "2024-W13" },
	"options" :  { "C" : 1.0, "cache_size" : 300, "coef0" : 0.0, "degree" : 3, "epsilon" : 0.0, "gamma" : 1.142622, "kernel" : "rbf", "max_iter" : 128, "nu" : 0.5, "probability" : 0, "random_state" : 1789, "shrinking" : 0, "svm_type" : "nu_svr", "tol" : 0.001 },
	"svm_model" : 	{
		"L" : 59,
		"SupportVectors" : 	{
			"SV_00" : [ 0.710411, 0.866302, 0.056103, 0.505545, 0.132807, 0.317118, 0.520814, 0.384208, 0.666595, 0.305953 ],
			"SV_01" : [ 0.705919, 0.335669, 0.829238, 0.863314, 0.287537, 0.639683, 0.745771, 0.787558, 0.582418, 0.363306 ],
			"SV_02" : [ 0.172757, 0.057373, 0.171673, 0.599275, 0.421381, 0.5591, 0.41761, 0.998262, 0.0747, 0.708432 ],
			"SV_03" : [ 0.67252, 0.960422, 0.27105, 0.259409, 0.076063, 0.603909, 0.732761, 0.514037, 0.918325, 0.297702 ],
			"SV_04" : [ 0.734481, 0.482054, 0.789831, 0.806913, 0.681106, 0.602843, 0.333277, 0.147743, 0.020703, 0.509223 ],
			"SV_05" : [ 0.343479, 0.049133, 0.72002, 0.841468, 0.199002, 0.085445, 0.635873, 0.354635, 0.971117, 0.361298 ],
			"SV_06" : [ 0.133169, 0.898182, 0.993566, 0.694676, 0.756484, 0.193983, 0.035123, 0.033415, 0.014059, 0.907372 ],
			"SV_07" : [ 0.402955, 0.885042, 0.175049, 0.517694, 0.443807, 0.815622, 0.177617, 0.182315, 0.13527, 0.914813 ],
			"SV_08" : [ 0.246418, 0.754389, 0.264436, 0.996826, 0.880107, 0.261948, 0.595422, 0.306809, 0.390167, 0.471118 ],
			"SV_09" : [ 0.479223, 0.684603, 0.324254, 0.80123, 0.871487, 0.937278, 0.292127, 0.900755, 0.827968, 0.568796 ],
			"SV_10" : [ 0.437299, 0.556356, 0.184165, 0.982851, 0.269218, 0.292875, 0.40264, 0.897743, 0.611773, 0.543599 ],
			"SV_11" : [ 0.685229, 0.172804, 0.111791, 0.19499, 0.20222, 0.680954, 0.382914, 0.311856, 0.27189, 0.606771 ],
			"SV_12" : [ 0.76461, 0.37897, 0.823855, 0.913603, 0.5534, 0.055048, 0.588332, 0.36105, 0.81498, 0.123688 ],
			"SV_13" : [ 0.774569, 0.924882, 0.149506, 0.796391, 0.333866, 0.165815, 0.41596, 0.207386, 0.523104, 0.137733 ],
			"SV_14" : [ 0.63422, 0.486969, 0.969793, 0.441636, 0.814121, 0.690923, 0.194226, 0.716476, 0.697923, 0.212891 ],
			"SV_15" : [ 0.233546, 0.241107, 0.660121, 0.055376, 0.564663, 0.209055, 0.142822, 0.887287, 0.428596, 0.316988 ],
			"SV_16" : [ 0.804101, 0.10305, 0.728795, 0.068628, 0.567613, 0.648562, 0.495718, 0.628355, 0.398738, 0.1851 ],
			"SV_17" : [ 0.235384, 0.117604, 0.514017, 0.633968, 0.618557, 0.121827, 0.576931, 0.091568, 0.527227, 0.211281 ],
			"SV_18" : [ 0.721851, 0.965554, 0.435501, 0.818612, 0.939145, 0.215034, 0.443577, 0.336197, 0.220269, 0.203231 ],
			"SV_19" : [ 0.975417, 0.00266, 0.366127, 0.434512, 0.945664, 0.329085, 0.852323, 0.591908, 0.151237, 0.22116 ],
			"SV_20" : [ 0.123542, 0.136568, 0.354175, 0.494539, 0.674758, 0.762896, 0.454376, 0.02643, 0.343817, 0.227996 ],
			"SV_21" : [ 0.426792, 0.212467, 0.481987, 0.115089, 0.854095, 0.453031, 0.002107, 0.065711, 0.509929, 0.421698 ],
			"SV_22" : [ 0.257439, 0.499463, 0.260146, 0.239901, 0.15686, 0.590953, 0.077376, 0.340943, 0.94333, 0.056908 ],
			"SV_23" : [ 0.221163, 0.634851, 0.67574, 0.393459, 0.593254, 0.877299, 0.74217, 0.322286, 0.749472, 0.996954 ],
			"SV_24" : [ 0.366207, 0.096199, 0.520676, 0.250113, 0.155164, 0.752654, 0.007439, 0.02531, 0.924844, 0.961402 ],
			"SV_25" : [ 0.772433, 0.764512, 0.960643, 0.302594, 0.292439, 0.441128, 0.688884, 0.145406, 0.532042, 0.74933 ],
			"SV_26" : [ 0.814992, 0.273163, 0.627205, 0.072804, 0.252944, 0.523729, 0.937792, 0.491503, 0.365159, 0.128096 ],
			"SV_27" : [ 0.087465, 0.681611, 0.002105, 0.838984, 0.806677, 0.751159, 0.481177, 0.221279, 0.984524, 0.957584 ],
			"SV_28" : [ 0.84999, 0.916139, 0.864912, 0.228437, 0.340806, 0.227606, 0.447862, 0.06815, 0.472487, 0.104133 ],
			"SV_29" : [ 0.82768, 0.741216, 0.967589, 0.359411, 0.243325, 0.911669, 0.829354, 0.787352, 0.791034, 0.782214 ],
			"SV_30" : [ 0.663564, 0.399281, 0.158547, 0.930965, 0.846977, 0.986627, 0.132816, 0.426558, 0.99995, 0.674509 ],
			"SV_31" : [ 0.733847, 0.503559, 0.161205, 0.982267, 0.53181, 0.770971, 0.043226, 0.562131, 0.58339, 0.870415 ],
			"SV_32" : [ 0.823836, 0.504187, 0.034569, 0.308381, 0.00339, 0.03958, 0.87907, 0.101112, 0.747507, 0.958859 ],
			"SV_33" : [ 0.917115, 0.03622, 0.312429, 0.285258, 0.269077, 0.050048, 0.163158, 0.861914, 0.830921, 0.459571 ],
			"SV_34" : [ 0.470848, 0.950853, 0.250944, 0.381755, 0.767739, 0.052865, 0.321258, 0.310992, 0.507478, 0.114717 ],
			"SV_35" : [ 0.183906, 0.368316, 0.322211, 0.269664, 0.974516, 0.395748, 0.967284, 0.685479, 0.485286, 0.84743 ],
			"SV_36" : [ 0.466161, 0.73048, 0.747965, 0.642714, 0.630985, 0.230235, 0.89241, 0.026009, 0.980536, 0.28222 ],
			"SV_37" : [ 0.457487, 0.414129, 0.014223, 0.378696, 0.893256, 0.937627, 0.113897, 0.460844, 0.008495, 0.149271 ],
			"SV_38" : [ 0.480054, 0.664308, 0.98534, 0.567078, 0.994149, 0.78089, 0.232756, 0.567089, 0.093123, 0.031981 ],
			"SV_39" : [ 0.101391, 0.213374, 0.964562, 0.911902, 0.755811, 0.963955, 0.532774, 0.985822, 0.912822, 0.720971 ],
			"SV_40" : [ 0.937776, 0.125575, 0.655885, 0.096146, 0.18743, 0.485816, 0.973901, 0.496639, 0.139176, 0.557847 ],
			"SV_41" : [ 0.414708, 0.117089, 0.562469, 0.105808, 0.080834, 0.195908, 0.881411, 0.049262, 0.050168, 0.271948 ],
			"SV_42" : [ 0.225035, 0.267629, 0.997439, 0.660872, 0.911509, 0.036102, 0.310786, 0.232937, 0.166239, 0.31481 ],
			"SV_43" : [ 0.652811, 0.757719, 0.306902, 0.828286, 0.763064, 0.859003, 0.873377, 0.14607, 0.894295, 0.086598 ],
			"SV_44" : [ 0.853835, 0.368909, 0.474869, 0.879341, 0.260376, 0.013107, 0.183573, 0.214752, 0.246734, 0.931995 ],
			"SV_45" : [ 0.936277, 0.372295, 0.533309, 0.719398, 0.69832, 0.39402, 0.202381, 0.107294, 0.877483, 0.827543 ],
			"SV_46" : [ 0.993297, 0.015448, 0.073074, 0.123516, 0.766918, 0.032547, 0.970468, 0.585911, 0.580508, 0.025791 ],
			"SV_47" : [ 0.305323, 0.920127, 0.554815, 0.290412, 0.398567, 0.153044, 0.764948, 0.336047, 0.946082, 0.127173 ],
			"SV_48" : [ 0.888763, 0.378332, 0.317378, 0.494882, 0.790191, 0.695702, 0.329863, 0.789227, 0.826873, 0.87774 ],
			"SV_49" : [ 0.604811, 0.984899, 0.598416, 0.783427, 0.739098, 0.893643, 0.193266, 0.09695, 0.547724, 0.389115 ],
			"SV_50" : [ 0.361047, 0.160106, 0.219158, 0.010201, 0.471566, 0.48828, 0.020705, 0.852158, 0.667965, 0.378921 ],
			"SV_51" : [ 0.387013, 0.186144, 0.843217, 0.2735, 0.175361, 0.01088, 0.338375, 0.53058, 0.739766, 0.316235 ],
			"SV_52" : [ 0.0105, 0.20019, 0.192366, 0.175831, 0.50753, 0.721218, 0.719388, 0.11477, 0.417354, 0.783886 ],
			"SV_53" : [ 0.888102, 0.149216, 0.426902, 0.180039, 0.792176, 0.085835, 0.603319, 0.653572, 0.865909, 0.986362 ],
			"SV_54" : [ 0.760617, 0.894566, 0.346795, 0.929768, 0.625158, 0.995443, 0.581267, 0.012827, 0.748, 0.341933 ],
			"SV_55" : [ 0.341289, 0.059388, 0.275743, 0.885258, 0.018723, 0.985191, 0.272452, 0.138076, 0.832781, 0.073518 ],
			"SV_56" : [ 0.759884, 0.645603, 0.858346, 0.414192, 0.746659, 0.476919, 0.729435, 0.314409, 0.340241, 0.086284 ],
			"SV_57" : [ 0.368356, 0.189593, 0.403483, 0.670145, 0.411066, 0.464093, 0.307388, 0.84044, 0.462841, 0.813023 ],
			"SV_58" : [ 0.268993, 0.202785, 0.253928, 0.049719, 0.217885, 0.770274, 0.487503, 0.076708, 0.743187, 0.015995 ]
		},
		"SupportVectorsCoefs" : 	{
			"SV_coef_0" : [ 1.0, 1.0, -0.576283, -0.182701, 1.0, -1.0, 1.0, 0.003125, 1.0, 1.0, 1.0, -0.014829, 1.0, 0.107568, 1.0, -1.0, -1.0, -1.0, 0.764208, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -0.958086, 1.0, 1.0, 1.0, 0.545852, -1.0, 0.679324, -1.0, 1.0, 1.0, 1.0, 0.167041, -1.0, -1.0, 0.789905, 1.0, 0.515322, 1.0, -1.0, -0.268102, 0.258179, 0.169476, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0 ]
		},
		"classes" : 2,
		"nSV" : [ 59 ],
		"n_iter" : [ 73 ],
		"probA" : [  ],
		"probB" : [  ],
		"rho" : [ -14.703519 ]
	}
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
[15.7248535 12.955048  16.120068  14.581093  16.156153  16.266317
 13.357185  12.884328  15.30803   13.889699  13.418118  15.700408
 13.939353  17.014307  17.818497  13.326006  13.323629  14.299148
 16.761969  16.19363   18.181927  13.438427  18.153551  16.435234
 16.207167  11.927322  16.524433  17.549894  16.461351  11.264357
 11.635023  12.911234  17.34751   18.793247  12.660263  12.528231
 12.540621  12.043894  14.752861  12.533846  12.876517  13.420741
 15.950145  14.944317  15.573151  15.342871  16.345657  11.460408
 16.78619   14.102906  15.374486  16.169327  18.044817  18.02271
 14.764644  11.856838  16.444784  12.760161  13.152604  16.047611
 16.838205  12.4376335 14.2122345 13.840417  16.031979  15.357014
 17.450142  15.576159  11.722021  14.218675  11.376573  15.678435
 18.122793  14.9791155 17.912642  15.911274  16.148354  14.932746
 16.391222  17.065887  13.368496  11.972158  14.998074  15.954748
 15.94399   13.443076  12.87326   18.957527  10.887654  14.919141
 11.298912  11.465025  12.715407  18.865234  13.20304   16.555912
 16.635126  16.067379  13.582558  10.795214 ]
('OPERATION_END_ELAPSED', 0.003, 'PREDICT')
('OPERATION_START', 'PREDICT')
[15.724854  12.955048  16.12007   14.581095  16.156153  16.266317
 13.357185  12.884329  15.308031  13.889698  13.418118  15.700408
 13.939354  17.014307  17.818495  13.326007  13.323631  14.299148
 16.761967  16.193628  18.181927  13.438428  18.153553  16.435236
 16.207165  11.927322  16.524435  17.549892  16.461353  11.264357
 11.635025  12.911234  17.347507  18.79325   12.660263  12.528232
 12.540621  12.043894  14.752862  12.533847  12.876518  13.420742
 15.950145  14.944319  15.573152  15.342872  16.345657  11.460408
 16.78619   14.102907  15.374486  16.169329  18.044819  18.02271
 14.764645  11.85684   16.444784  12.760162  13.152606  16.047611
 16.838207  12.437634  14.2122345 13.840418  16.03198   15.357014
 17.450144  15.57616   11.72202   14.218676  11.376572  15.678434
 18.122793  14.979116  17.912642  15.911273  16.148354  14.932747
 16.391222  17.06589   13.368496  11.972158  14.998073  15.95475
 15.943991  13.443076  12.8732605 18.95753   10.887654  14.919141
 11.298914  11.465026  12.715409  18.865234  13.203042  16.555912
 16.635126  16.067379  13.58256   10.795212 ]
('OPERATION_END_ELAPSED', 0.003, 'PREDICT')
MODEL_PERFS {'class_name': 'mllite.NuSVR', 'model_name': 'NuSVR', 'options': None, 'dataset': 'freidman1_medium', 'size': 100, 'mse': 9.423275, 'mae': 2.5620708, 'mape': 0.24892464, 'r2': 0.6057510472456045}
WRITING_PERF_CODE 'logs/auto_tests/regression/NuSVR/mllite.NuSVR_freidman1_medium.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.NuSVR', 'model_name': 'NuSVR', 'options': None, 'dataset': 'freidman1_medium', 'training_time_in_sec': 0.045, 'prediction_time_in_sec': 0.003}
WRITING_SQL_CODE 'logs/auto_tests/regression/NuSVR/mllite.NuSVR_freidman1_medium_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('freidman1_medium', 'NuSVR', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 )
,"SV_data" AS
 ( SELECT 
   "Values"."sv_idx" AS "sv_idx",
   "Values"."coeff" AS "coeff",
   "Values"."sv_0" AS "sv_0",
   "Values"."sv_1" AS "sv_1",
   "Values"."sv_2" AS "sv_2",
   "Values"."sv_3" AS "sv_3",
   "Values"."sv_4" AS "sv_4",
   "Values"."sv_5" AS "sv_5",
   "Values"."sv_6" AS "sv_6",
   "Values"."sv_7" AS "sv_7",
   "Values"."sv_8" AS "sv_8",
   "Values"."sv_9" AS "sv_9"
  FROM
  (
     SELECT 0 AS "sv_idx", 1.000000 AS "coeff", 0.710411 AS "sv_0", 0.866302 AS "sv_1", 0.056103 AS "sv_2", 0.505545 AS "sv_3", 0.132807 AS "sv_4", 0.317
SQL_OUT_PUT_FIRST_LINES_END ('freidman1_medium', 'NuSVR', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('freidman1_medium', 'NuSVR', 'duckdb')

    (SELECT
      full_join_data_sv."index" AS "index",
      sum(CAST(full_join_data_sv.dot_prod AS FLOAT)) - -14.703519 AS dot_product
     FROM
       (SELECT
          model_input."index" AS "index",
          "SV_data"."coeff" *  EXP( LEAST( GREATEST( CAST(-32.0 AS FLOAT), -1.142622 * (power(model_input."X_0" - "SV_data".sv_0, 2) + power(model_input."X_1" - "SV_data".sv_1, 2) + power(model_input."X_2" - "SV_data".sv_2, 2) + power(model_input."X_3" - "SV_data".sv_3, 2) + power(model_input."X_4" - "SV_data".sv_4, 2) + power(model_input."X_5" - "SV_data".sv_5, 2) + power(model_input."X_6" - "SV_data".sv_6, 2) + power(model_input."X_7" - "SV_data".sv_7, 2) + power(model_input."X_8" - "SV_data".sv_8, 2) + power(model_input."X_9" - "SV_data".sv_9, 2)) ), CAST(32.0 AS FLOAT) ) )  AS "dot_prod" 
        FROM
          model_input, "SV_data"
       ) AS full_join_data_sv
     GROUP BY full_join_data_sv."index"
    ) AS dp )
SELECT
  t."index" as "index",
  t."Estimator" as "Estimator"
FROM "Kernel_DotProd" AS t

SQL_OUT_PUT_LAST_LINES_END ('freidman1_medium', 'NuSVR', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 100 entries, 0 to 99
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     100 non-null    float32
 1   X_1     100 non-null    float32
 2   X_2     100 non-null    float32
 3   X_3     100 non-null    float32
 4   X_4     100 non-null    float32
 5   X_5     100 non-null    float32
 6   X_6     100 non-null    float32
 7   X_7     100 non-null    float32
 8   X_8     100 non-null    float32
 9   X_9     100 non-null    float32
dtypes: float32(10)
memory usage: 4.7 KB
            X_0       X_1       X_2  ...       X_7       X_8       X_9
index                                ...                              
0      0.456887  0.295923  0.591968  ...  0.290537  0.761317  0.245544
1      0.716619  0.420279  0.400670  ...  0.399395  0.167246  0.133911
2      0.140833  0.617769  0.186105  ...  0.198079  0.648067  0.563459
3      0.071195  0.704806  0.073220  ...  0.139224  0.725143  0.940551
4      0.710411  0.866302  0.056103  ...  0.384208  0.666595  0.305953
...         ...       ...       ...  ...       ...       ...       ...
95     0.759884  0.645603  0.858346  ...  0.314409  0.340241  0.086284
96     0.133898  0.993722  0.247951  ...  0.342368  0.685693  0.539265
97     0.907576  0.735434  0.379983  ...  0.265155  0.264531  0.516615
98     0.368356  0.189593  0.403483  ...  0.840440  0.462841  0.813023
99     0.268993  0.202785  0.253928  ...  0.076708  0.743187  0.015995

[100 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 100 entries, 0 to 99
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      100 non-null    int64  
 1   Estimator  100 non-null    float64
dtypes: float64(1), int64(1)
memory usage: 1.7 KB
    index  Estimator
0       0  15.724855
1       1  12.955048
2       2  16.120069
3       3  14.581095
4       4  16.156153
..    ...        ...
95     95  16.555913
96     96  16.635127
97     97  16.067380
98     98  13.582560
99     99  10.795213

[100 rows x 2 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('freidman1_medium', 'NuSVR') Estimator 9.065373581051972e-07
    index  SQL_Estimator  Py_Estimator     SQL_Error
84     84      15.943990     15.943990  5.188316e-07
85     85      13.443076     13.443076  8.352558e-08
86     86      12.873260     12.873260  8.163891e-07
87     87      18.957527     18.957527 -7.215081e-08
88     88      10.887654     10.887654 -4.804548e-09
89     89      14.919141     14.919141  6.471795e-07
90     90      11.298913     11.298912  1.096965e-06
91     91      11.465026     11.465025  1.013422e-06
92     92      12.715409     12.715407  1.791324e-06
93     93      18.865234     18.865234 -8.308877e-07
94     94      13.203042     13.203040  1.661230e-06
95     95      16.555913     16.555912  1.012258e-06
96     96      16.635127     16.635126  6.519525e-07
97     97      16.067380     16.067379  1.302831e-06
98     98      13.582560     13.582558  2.081416e-06
99     99      10.795213     10.795214 -1.026233e-06
MLLITE_REG_SQL_EXECUTION_STATUS ('freidman1_medium', 'NuSVR', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/regression/NuSVR/mllite.NuSVR_freidman1_medium_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('freidman1_medium', 'NuSVR', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 )
,"SV_data" AS
 ( SELECT 
   "Values"."sv_idx" AS "sv_idx",
   "Values"."coeff" AS "coeff",
   "Values"."sv_0" AS "sv_0",
   "Values"."sv_1" AS "sv_1",
   "Values"."sv_2" AS "sv_2",
   "Values"."sv_3" AS "sv_3",
   "Values"."sv_4" AS "sv_4",
   "Values"."sv_5" AS "sv_5",
   "Values"."sv_6" AS "sv_6",
   "Values"."sv_7" AS "sv_7",
   "Values"."sv_8" AS "sv_8",
   "Values"."sv_9" AS "sv_9"
  FROM
  (
     SELECT 0 AS "sv_idx", 1.000000 AS "coeff", 0.710411 AS "sv_0", 0.866302 AS "sv_1", 0.056103 AS "sv_2", 0.505545 AS "sv_3", 0.132807 AS "sv_4", 0.317
SQL_OUT_PUT_FIRST_LINES_END ('freidman1_medium', 'NuSVR', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('freidman1_medium', 'NuSVR', 'sqlite')
   FROM
    (SELECT
      full_join_data_sv."index" AS "index",
      sum(CAST(full_join_data_sv.dot_prod AS FLOAT)) - -14.703519 AS dot_product
     FROM
       (SELECT
          model_input."index" AS "index",
          "SV_data"."coeff" *  EXP( MIN( MAX( CAST(-32.0 AS FLOAT), -1.142622 * (power(model_input."X_0" - "SV_data".sv_0, 2) + power(model_input."X_1" - "SV_data".sv_1, 2) + power(model_input."X_2" - "SV_data".sv_2, 2) + power(model_input."X_3" - "SV_data".sv_3, 2) + power(model_input."X_4" - "SV_data".sv_4, 2) + power(model_input."X_5" - "SV_data".sv_5, 2) + power(model_input."X_6" - "SV_data".sv_6, 2) + power(model_input."X_7" - "SV_data".sv_7, 2) + power(model_input."X_8" - "SV_data".sv_8, 2) + power(model_input."X_9" - "SV_data".sv_9, 2)) ), CAST(32.0 AS FLOAT) ) )  AS "dot_prod" 
        FROM
          model_input, "SV_data"
       ) AS full_join_data_sv
     GROUP BY full_join_data_sv."index"
    ) AS dp )
SELECT
  t."index" as "index",
  t."Estimator" as "Estimator"
FROM "Kernel_DotProd" AS t

SQL_OUT_PUT_LAST_LINES_END ('freidman1_medium', 'NuSVR', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 100 entries, 0 to 99
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     100 non-null    float32
 1   X_1     100 non-null    float32
 2   X_2     100 non-null    float32
 3   X_3     100 non-null    float32
 4   X_4     100 non-null    float32
 5   X_5     100 non-null    float32
 6   X_6     100 non-null    float32
 7   X_7     100 non-null    float32
 8   X_8     100 non-null    float32
 9   X_9     100 non-null    float32
dtypes: float32(10)
memory usage: 4.7 KB
            X_0       X_1       X_2  ...       X_7       X_8       X_9
index                                ...                              
0      0.456887  0.295923  0.591968  ...  0.290537  0.761317  0.245544
1      0.716619  0.420279  0.400670  ...  0.399395  0.167246  0.133911
2      0.140833  0.617769  0.186105  ...  0.198079  0.648067  0.563459
3      0.071195  0.704806  0.073220  ...  0.139224  0.725143  0.940551
4      0.710411  0.866302  0.056103  ...  0.384208  0.666595  0.305953
...         ...       ...       ...  ...       ...       ...       ...
95     0.759884  0.645603  0.858346  ...  0.314409  0.340241  0.086284
96     0.133898  0.993722  0.247951  ...  0.342368  0.685693  0.539265
97     0.907576  0.735434  0.379983  ...  0.265155  0.264531  0.516615
98     0.368356  0.189593  0.403483  ...  0.840440  0.462841  0.813023
99     0.268993  0.202785  0.253928  ...  0.076708  0.743187  0.015995

[100 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 100 entries, 0 to 99
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      100 non-null    int64  
 1   Estimator  100 non-null    float64
dtypes: float64(1), int64(1)
memory usage: 1.7 KB
    index  Estimator
0       0  15.724855
1       1  12.955048
2       2  16.120069
3       3  14.581095
4       4  16.156153
..    ...        ...
95     95  16.555913
96     96  16.635127
97     97  16.067380
98     98  13.582560
99     99  10.795213

[100 rows x 2 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('freidman1_medium', 'NuSVR') Estimator 9.267295683734745e-07
    index  SQL_Estimator  Py_Estimator     SQL_Error
84     84      15.943990     15.943990  6.815828e-07
85     85      13.443076     13.443076 -3.037408e-08
86     86      12.873260     12.873260  9.251407e-07
87     87      18.957527     18.957527  1.071065e-07
88     88      10.887655     10.887654  2.088382e-07
89     89      14.919141     14.919141  6.326154e-07
90     90      11.298913     11.298912  1.153962e-06
91     91      11.465026     11.465025  1.082177e-06
92     92      12.715409     12.715407  1.829899e-06
93     93      18.865234     18.865234 -6.965155e-07
94     94      13.203042     13.203040  1.663596e-06
95     95      16.555913     16.555912  8.905927e-07
96     96      16.635127     16.635126  8.431742e-07
97     97      16.067380     16.067379  1.432906e-06
98     98      13.582560     13.582558  2.198975e-06
99     99      10.795213     10.795214 -9.674621e-07
MLLITE_REG_SQL_EXECUTION_STATUS ('freidman1_medium', 'NuSVR', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/regression/NuSVR/mllite.NuSVR_freidman1_medium_pgsql.sql'



SQL_OUT_PUT_FIRST_LINES_START ('freidman1_medium', 'NuSVR', 'pgsql')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 )
,"SV_data" AS
 ( SELECT 
   "Values"."sv_idx" AS "sv_idx",
   "Values"."coeff" AS "coeff",
   "Values"."sv_0" AS "sv_0",
   "Values"."sv_1" AS "sv_1",
   "Values"."sv_2" AS "sv_2",
   "Values"."sv_3" AS "sv_3",
   "Values"."sv_4" AS "sv_4",
   "Values"."sv_5" AS "sv_5",
   "Values"."sv_6" AS "sv_6",
   "Values"."sv_7" AS "sv_7",
   "Values"."sv_8" AS "sv_8",
   "Values"."sv_9" AS "sv_9"
  FROM
  (
     SELECT 0 AS "sv_idx", 1.000000 AS "coeff", 0.710411 AS "sv_0", 0.866302 AS "sv_1", 0.056103 AS "sv_2", 0.505545 AS "sv_3", 0.132807 AS "sv_4", 0.317
SQL_OUT_PUT_FIRST_LINES_END ('freidman1_medium', 'NuSVR', 'pgsql')
SQL_OUT_PUT_LAST_LINES_START ('freidman1_medium', 'NuSVR', 'pgsql')

    (SELECT
      full_join_data_sv."index" AS "index",
      sum(CAST(full_join_data_sv.dot_prod AS FLOAT)) - -14.703519 AS dot_product
     FROM
       (SELECT
          model_input."index" AS "index",
          "SV_data"."coeff" *  EXP( LEAST( GREATEST( CAST(-32.0 AS FLOAT), -1.142622 * (power(model_input."X_0" - "SV_data".sv_0, 2) + power(model_input."X_1" - "SV_data".sv_1, 2) + power(model_input."X_2" - "SV_data".sv_2, 2) + power(model_input."X_3" - "SV_data".sv_3, 2) + power(model_input."X_4" - "SV_data".sv_4, 2) + power(model_input."X_5" - "SV_data".sv_5, 2) + power(model_input."X_6" - "SV_data".sv_6, 2) + power(model_input."X_7" - "SV_data".sv_7, 2) + power(model_input."X_8" - "SV_data".sv_8, 2) + power(model_input."X_9" - "SV_data".sv_9, 2)) ), CAST(32.0 AS FLOAT) ) )  AS "dot_prod" 
        FROM
          model_input, "SV_data"
       ) AS full_join_data_sv
     GROUP BY full_join_data_sv."index"
    ) AS dp )
SELECT
  t."index" as "index",
  t."Estimator" as "Estimator"
FROM "Kernel_DotProd" AS t

SQL_OUT_PUT_LAST_LINES_END ('freidman1_medium', 'NuSVR', 'pgsql') 




COPY_TRAINING_DATA_TO_SQLITE_START
