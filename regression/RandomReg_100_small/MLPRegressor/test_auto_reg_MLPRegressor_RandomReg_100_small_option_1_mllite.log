         X_0       X_1       X_2  ...      X_98      X_99      target
0  -0.301125  1.387725  1.263659  ... -0.345798  0.839573  -54.486094
1  -0.155583 -1.181091  2.934304  ... -1.884572 -0.938959 -244.069750
2   1.079390 -0.496549 -1.240677  ... -0.569426  0.970424   50.603288
3  -1.027789 -0.022726  0.110301  ...  2.721471 -0.697773  200.907470
4   0.155319  0.126152  0.905780  ...  1.218228  0.672223 -138.968166
..       ...       ...       ...  ...       ...       ...         ...
59  0.389605 -0.609059 -0.373385  ... -0.652537  0.037929  211.129681
60 -0.553760 -0.158458  0.247315  ...  0.434919 -1.537177   -7.629069
61  0.261579  0.836463  0.899340  ... -0.770119 -0.320833   18.431094
62  0.578196 -0.097941  0.019108  ...  1.115285  0.315342  -11.260213
63 -0.080896  0.160145  1.489778  ... -0.028132  0.637110  266.257878

[64 rows x 101 columns]
MLLITE_MODEL_SET_OPTIONS MLPRegressor {"hidden_layer_sizes" : [4, 8, 6]}
MLLITE_MODEL_OPTIONS_DEFAULT MLPRegressor { "max_iter" : 32}
MLLITE_MODEL_OPTIONS_AFTER_SETTING MLPRegressor { "hidden_layer_sizes" : [4, 8, 6],  "max_iter" : 32 , }
MLLITE_MODEL_JSON_AFTER_SETTING MLPRegressor None
('OPERATION_START', 'TRAINING')
[[-3.01124662e-01  1.38772476e+00  1.26365924e+00 -6.82732940e-01
  -1.34683120e+00  5.14777362e-01  1.62561178e-01 -1.08774674e+00
   2.71217942e-01  1.01093900e+00 -2.49382392e-01 -1.65061939e+00
  -9.93423760e-01  1.09921061e-01 -5.43385804e-01  1.32529700e+00
   1.88495958e+00  7.49242187e-01  1.60594404e+00  1.60841656e+00
   9.63199854e-01 -3.32925580e-02  1.82730234e+00 -8.89043733e-02
   1.03326552e-01  1.23202717e+00 -1.62939775e+00  8.68012488e-01
   4.37752008e-01  5.41352630e-01  4.58516777e-01 -1.81859002e-01
  -1.24955714e-01 -4.90596294e-02  1.27540767e+00  3.60171229e-01
   9.01617110e-01 -2.70372570e-01  5.28253436e-01  1.62672818e-01
  -7.59159401e-02 -1.01459682e+00 -1.15195643e-02  1.09213448e+00
   1.62921584e+00 -4.38633710e-01 -1.36951172e+00 -3.69843543e-01
  -8.60606253e-01 -5.75633466e-01  1.27469802e+00  4.84667391e-01
  -1.51542473e+00  1.16384223e-01 -8.54173601e-01 -7.89357781e-01
  -3.20154727e-01  6.83034718e-01 -4.90488261e-01 -1.72152758e+00
  -5.88555992e-01  2.26808488e-01  1.35770679e+00 -7.94542491e-01
  -2.14967608e+00 -2.36072704e-01 -8.44686925e-01 -1.26111269e+00
  -8.60300481e-01  1.04535091e+00  1.55022159e-01  3.35658103e-01
  -1.93393087e+00 -3.61082911e-01  1.09404229e-01 -1.99066043e-01
   4.23870265e-01  1.72599167e-01  8.43244314e-01  3.28669012e-01
   5.97395658e-01 -3.46147346e+00 -1.11853528e+00  1.95144802e-01
   1.27475369e+00 -6.44126832e-01  1.99323013e-01 -3.13881099e-01
   8.67388427e-01  1.60537791e+00 -4.69321199e-02  2.43432593e+00
   1.97670710e+00 -2.16416430e+00 -3.69843096e-01 -3.87633115e-01
  -1.22007036e+00 -1.98171616e+00 -3.45797569e-01  8.39573085e-01]
 [-1.55582651e-01 -1.18109095e+00  2.93430400e+00 -6.94847047e-01
   7.65346646e-01 -1.38265729e-01 -1.87197840e+00 -5.47255754e-01
  -1.02196300e+00 -2.40618020e-01  1.53626862e-03 -1.30697155e+00
   1.12571657e+00 -6.09562814e-01  1.84250534e+00  5.26184618e-01
  -1.34199113e-01 -4.64435697e-01 -2.08943471e-01 -7.25073040e-01
  -3.43274266e-01 -4.16672796e-01 -1.43184513e-01 -1.58227885e+00
   5.83837748e-01 -6.71794951e-01  1.48207486e+00  8.79976228e-02
  -1.44496679e+00 -1.04719102e+00 -7.33625665e-02  7.97347367e-01
  -1.49433851e+00 -4.77036446e-01  1.96962878e-01  9.63585079e-01
  -1.06893802e+00  6.35676011e-02 -2.22821608e-01  2.68229580e+00
  -1.22432196e+00  2.33570918e-01  3.37046921e-01 -8.80938113e-01
   3.74312043e-01  4.75478441e-01 -4.31405723e-01 -1.49277854e+00
  -7.05678761e-01  8.41879070e-01 -9.39537287e-01 -1.32261544e-01
   1.27473974e+00 -2.45601356e-01 -1.09500504e+00 -1.12451386e+00
  -1.68831348e+00 -1.66038191e+00  8.83513212e-01 -2.12799621e+00
   1.85301650e+00  1.06351781e+00 -1.55932271e+00 -3.31427574e-01
  -4.71284389e-01 -8.42893183e-01  2.66877890e-01 -2.19565415e+00
  -1.28610337e+00  2.07863837e-01  2.12718658e-02 -1.87917411e-01
   2.03328684e-01 -1.13658619e+00  7.13958859e-01  3.48399356e-02
   8.75229090e-02 -1.98537886e-01  8.98726761e-01 -1.00354958e+00
   3.02103549e-01  5.83664238e-01 -1.10631919e+00 -7.53618121e-01
   2.54740193e-02 -5.73981524e-01  6.41987205e-01  1.07664418e+00
   8.75026762e-01 -4.93790269e-01  7.25373566e-01  8.76517355e-01
   1.12196028e+00  2.01063013e+00  7.10269690e-01  3.98254842e-01
  -1.09351709e-01 -6.48999751e-01 -1.88457203e+00 -9.38958764e-01]
 [ 1.07939029e+00 -4.96548653e-01 -1.24067736e+00  2.76984543e-01
  -8.75897765e-01  3.70610416e-01  2.94699460e-01  2.08256388e+00
   1.13252175e+00  1.22751558e+00 -1.09523833e+00  5.95500886e-01
   1.12185657e+00  7.54166365e-01 -8.05529773e-01 -1.03034163e+00
   1.09279633e+00  1.50435269e+00  1.11762017e-01  1.07449919e-01
  -1.02401459e+00 -1.84641510e-01  7.72709399e-02 -4.99782264e-01
  -2.27677077e-01  6.49656951e-02  1.01747751e-01  1.98065881e-02
   5.62927604e-01  1.23536706e+00 -1.95974544e-01 -2.40673900e-01
   4.45345312e-01  5.92050970e-01  1.02269816e+00 -1.74345989e-02
  -1.73933551e-01 -6.29255697e-02 -2.20695183e-01  1.29462636e+00
   2.52112865e-01 -2.17039728e+00  9.85382497e-01 -7.44955420e-01
   1.57546902e+00  5.03206611e-01 -9.72602367e-01 -6.84496820e-01
   5.72718233e-02 -4.53426331e-01  5.94903529e-01  1.22255921e+00
   7.85897672e-01  6.81237221e-01  1.01942651e-01  4.92852837e-01
   5.66514671e-01 -1.17636359e+00  5.35346568e-01  1.32921374e+00
   1.24366212e+00 -5.73699355e-01  1.01102638e+00  8.36099803e-01
  -2.34281445e+00 -9.67368782e-01  2.25748569e-01 -9.44747999e-02
  -3.09640646e-01 -1.30452168e+00  2.80700207e-01 -1.33084834e+00
  -9.54967201e-01 -1.04418528e+00 -2.22839022e+00 -1.09560812e+00
   1.24782884e+00  1.80284277e-01 -1.25238645e+00  7.14607239e-01
   1.95957351e+00  2.53216553e+00 -8.34777504e-02  1.11373827e-01
  -8.84591460e-01  1.04834628e+00 -5.54076493e-01  8.74013126e-01
   5.28820276e-01 -4.34727043e-01  8.74114633e-01  5.12598276e-01
   1.89701116e+00 -2.48368159e-01  1.54528201e+00  9.61921632e-01
   3.33936542e-01  6.79747701e-01 -5.69426119e-01  9.70423698e-01]
 [-1.02778935e+00 -2.27263141e-02  1.10301085e-01  1.79546729e-01
  -4.90769893e-02  5.96660793e-01  1.15810835e+00  6.27954483e-01
   1.70029372e-01 -1.79182720e+00  1.67022240e+00 -6.81339622e-01
  -1.44740534e+00  1.85646936e-01  3.88607174e-01 -1.27854240e+00
  -1.10837603e+00 -7.75742769e-01  2.63235778e-01  1.52836013e+00
  -3.64444673e-01 -7.31038809e-01  1.15823066e+00  4.90437865e-01
  -5.65739751e-01 -9.17869389e-01  4.85316277e-01 -5.30028522e-01
  -3.88954520e-01 -9.46969926e-01  2.02791953e+00 -1.98417687e+00
   2.03697324e-01  2.72669315e-01  8.71521354e-01  1.61161527e-01
  -5.35239339e-01  7.95005918e-01 -1.75809467e+00 -1.27538812e+00
   6.49030805e-01  7.76762664e-01 -1.38365650e+00  2.20103472e-01
  -6.78639174e-01  5.56474961e-02 -2.88346857e-01 -9.60100591e-01
   6.68293357e-01  3.41510355e-01  1.58940768e+00  8.42409909e-01
  -8.10967982e-01  7.20736444e-01  1.03318654e-01 -1.99774706e+00
  -5.00028312e-01 -8.31591904e-01  5.86176157e-01  1.26994348e+00
   1.11285400e+00 -2.34507990e+00  1.84525335e+00 -2.89478928e-01
   2.72452831e+00 -1.85729042e-01 -5.73727824e-02  3.77985537e-01
   7.77927995e-01  1.63456053e-01 -8.48517776e-01 -1.21194494e+00
   9.50055778e-01  6.42497420e-01  5.55373728e-01 -8.59387755e-01
   1.78057873e+00  3.59947473e-01  1.22501051e+00  4.28557783e-01
  -9.43535328e-01  1.48158407e+00  2.29413652e+00 -1.71246231e+00
  -7.68941283e-01 -1.05595326e+00 -8.25688243e-01  4.38418001e-01
  -1.34553814e+00 -3.07022452e-01 -2.85520107e-01  1.29907846e+00
   2.93988436e-01  8.37067842e-01  3.93039435e-01 -3.51285487e-01
   8.80326271e-01  7.99354970e-01  2.72147131e+00 -6.97772563e-01]
 [ 1.55318558e-01  1.26152441e-01  9.05780315e-01  8.18991438e-02
  -1.29863977e-01  2.24427879e-01 -1.33973733e-01  4.19006675e-01
   1.31296360e+00 -1.32973254e-01 -4.47266810e-02 -1.72328055e-01
  -7.81214893e-01  1.23739958e+00 -1.91514134e-01 -1.37162611e-01
  -3.27861980e-02  7.96586096e-01 -1.01332128e+00  9.38049018e-01
  -9.92036402e-01 -1.93410134e+00  5.83719552e-01 -1.21997699e-01
  -7.61240780e-01  7.48465629e-03 -1.03534722e+00 -3.08909953e-01
   5.18409371e-01 -3.92305017e-01 -2.04970264e+00  1.69121325e+00
  -9.20890093e-01 -3.47137898e-01 -1.20613670e+00  3.00528228e-01
   9.43905175e-01 -1.59808314e+00  1.40788376e+00  1.41724432e+00
   8.80906701e-01 -5.68516105e-02 -1.04051435e+00  9.45277989e-01
   7.76422098e-02  6.56548738e-01 -6.62871718e-01 -6.30390286e-01
  -8.90351236e-01 -3.24517757e-01 -8.22051048e-01 -7.51260757e-01
   1.96293175e-01  7.01368928e-01 -1.39238060e+00 -6.68631792e-01
   1.55344999e+00  4.97449428e-01  9.80282068e-01  5.71124673e-01
  -2.32236490e-01  7.84225240e-02 -8.50019217e-01  5.46521485e-01
  -3.93892229e-01  1.12404597e+00 -4.27607358e-01 -2.33180244e-02
  -9.29678082e-01 -1.25660062e+00 -7.16505647e-01 -1.50908187e-01
  -1.59349561e+00 -1.10606849e+00 -2.74965316e-01 -1.46609589e-01
  -2.04783964e+00  5.78249320e-02  1.45206213e+00 -9.06186819e-01
  -4.90492165e-01  5.79007506e-01  2.22233844e+00  2.66923189e-01
  -1.62423000e-01 -2.91489512e-01 -5.97359419e-01  3.06709170e-01
  -1.82558179e+00  1.38704881e-01 -1.57723725e+00 -5.51332712e-01
  -2.92212635e-01 -8.04641563e-03 -7.65457824e-02  8.14916015e-01
  -1.61039865e+00 -7.35562503e-01  1.21822762e+00  6.72223270e-01]] [ -54.486095 -244.06975    50.603287  200.90747  -138.96817 ]
MLLITE_FIT_USING_MODEL mllite_mlp_reg.MLPRegressor_ff4_ff4
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT' 1 3
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT' 2 3
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 3 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 6 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 9 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 12 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 15 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 18 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 21 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 24 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 27 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 30 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 32 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT' 3 3
('OPERATION_END_ELAPSED', 0.034, 'TRAINING')
{ "hidden_layer_sizes" : [4, 8, 6],  "max_iter" : 32 , }
{ "hidden_layer_sizes" : [4, 8, 6],  "max_iter" : 32 , }
{
	"metadata" : { "model" : "Rosenblatt_MLP", "version" : "2024-W13", "signature" : "ff4_ff4"},
	"options" : {  "hidden_layer_sizes" : [ 4, 8, 6 ], "activation" : "relu", "solver" : "adam", "alpha" : 0.000100, "batch_size" : null, "learning_rate" : "constant", "learning_rate_init" : 0.001000, "power_t" : 0.500000, "max_iter" : 32, "shuffle" : 1, "random_state" : 1789, "tol" : 0.000100, "verbose" : 0, "warm_start" : 0, "momentum" : 0.900000, "nesterovs_momentum" : 1, "early_stopping" : 0, "validation_fraction" : 0.100000, "beta_1" : 0.900000, "beta_2" : 0.999000, "epsilon" : 0.000000, "n_iter_no_change" : 10, "max_fun" : 15000 },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 100 },
	"layers" : {
		"sizes" : [ 100, 4, 8, 6, 1 ],
		"Layer_0" : {
			"name" : "Input_Layer",
			"NbInputs" : 0,
			"NbOutputs" : 100 
		},
		"Layer_1" : {
			"name" : "Hidden_Layer_1",
			"NbInputs" : 100,
			"NbOutputs" : 4 ,
			"coeffs_00" : [ -0.048890, 0.110885, -0.079321, -0.050413 ],
			"coeffs_01" : [ 0.020157, -0.144481, 0.052072, -0.017962 ],
			"coeffs_02" : [ 0.233051, 0.051493, 0.185730, -0.012444 ],
			"coeffs_03" : [ 0.263288, -0.237155, -0.088060, 0.060702 ],
			"coeffs_04" : [ 0.157289, -0.145196, -0.149053, -0.189263 ],
			"coeffs_05" : [ 0.093680, -0.262805, -0.069777, 0.037625 ],
			"coeffs_06" : [ -0.023484, -0.185561, -0.091814, 0.190397 ],
			"coeffs_07" : [ -0.045745, 0.030587, -0.222404, -0.016054 ],
			"coeffs_08" : [ -0.102238, 0.119643, -0.033552, 0.121854 ],
			"coeffs_09" : [ -0.156850, 0.242679, -0.149970, 0.135730 ],
			"coeffs_10" : [ -0.145773, 0.158028, 0.089764, 0.190211 ],
			"coeffs_11" : [ -0.178427, -0.154280, 0.111303, 0.111673 ],
			"coeffs_12" : [ 0.131897, 0.233953, 0.182523, -0.127759 ],
			"coeffs_13" : [ 0.175530, 0.214018, -0.139573, 0.083253 ],
			"coeffs_14" : [ 0.103981, 0.043188, 0.062343, 0.107651 ],
			"coeffs_15" : [ -0.236798, 0.058444, 0.111318, 0.155901 ],
			"coeffs_16" : [ -0.170990, 0.195304, -0.106883, -0.248910 ],
			"coeffs_17" : [ 0.244604, 0.230819, -0.032189, -0.173126 ],
			"coeffs_18" : [ 0.006610, 0.200010, -0.191819, 0.090585 ],
			"coeffs_19" : [ 0.091153, 0.171762, 0.223251, -0.105001 ],
			"coeffs_20" : [ 0.132839, 0.157679, 0.169151, -0.020821 ],
			"coeffs_21" : [ -0.240032, 0.128465, 0.026919, -0.051425 ],
			"coeffs_22" : [ -0.201104, -0.200143, -0.115194, 0.241456 ],
			"coeffs_23" : [ 0.037694, -0.021510, -0.068977, -0.224736 ],
			"coeffs_24" : [ 0.110559, -0.062764, -0.079320, -0.014823 ],
			"coeffs_25" : [ 0.091855, -0.170140, -0.050924, 0.104298 ],
			"coeffs_26" : [ 0.127795, 0.225514, 0.182485, 0.150719 ],
			"coeffs_27" : [ -0.069372, 0.004261, 0.060316, 0.133555 ],
			"coeffs_28" : [ 0.150830, -0.007947, 0.113334, 0.135695 ],
			"coeffs_29" : [ 0.014806, -0.052529, -0.040328, -0.090294 ],
			"coeffs_30" : [ 0.095559, 0.166915, -0.148917, 0.104565 ],
			"coeffs_31" : [ -0.183291, 0.031969, 0.023315, -0.069081 ],
			"coeffs_32" : [ 0.082744, -0.199859, -0.190704, 0.195321 ],
			"coeffs_33" : [ 0.225559, -0.125130, -0.065355, -0.187004 ],
			"coeffs_34" : [ -0.213263, -0.197756, -0.067133, -0.036370 ],
			"coeffs_35" : [ -0.126303, -0.174227, -0.228440, 0.018999 ],
			"coeffs_36" : [ -0.141089, -0.158931, 0.050179, 0.058164 ],
			"coeffs_37" : [ -0.012508, 0.078644, 0.056945, -0.189254 ],
			"coeffs_38" : [ -0.009221, 0.206307, 0.231431, -0.066817 ],
			"coeffs_39" : [ -0.237405, -0.112342, 0.081873, -0.166857 ],
			"coeffs_40" : [ 0.068938, -0.103261, 0.222158, 0.239045 ],
			"coeffs_41" : [ -0.143568, 0.091361, -0.148483, 0.209683 ],
			"coeffs_42" : [ -0.173536, 0.112023, 0.049900, -0.158511 ],
			"coeffs_43" : [ 0.143410, 0.083687, -0.006248, -0.137111 ],
			"coeffs_44" : [ 0.233713, 0.173535, -0.097168, -0.003448 ],
			"coeffs_45" : [ 0.162769, 0.048787, -0.002371, 0.217823 ],
			"coeffs_46" : [ 0.053700, 0.126269, -0.156809, -0.008612 ],
			"coeffs_47" : [ 0.228058, 0.108723, -0.098127, -0.043235 ],
			"coeffs_48" : [ 0.186830, -0.090777, 0.061401, 0.167036 ],
			"coeffs_49" : [ -0.190794, -0.135269, -0.109420, -0.153417 ],
			"coeffs_50" : [ -0.065904, -0.027935, -0.191724, 0.119227 ],
			"coeffs_51" : [ 0.196326, 0.067390, -0.007318, 0.104258 ],
			"coeffs_52" : [ -0.008864, 0.138187, 0.022138, 0.170184 ],
			"coeffs_53" : [ 0.079580, -0.085785, -0.040048, -0.204044 ],
			"coeffs_54" : [ -0.161686, -0.109845, 0.096206, -0.062907 ],
			"coeffs_55" : [ -0.070563, -0.220654, 0.231012, -0.123084 ],
			"coeffs_56" : [ -0.025407, 0.115582, 0.113428, 0.078412 ],
			"coeffs_57" : [ -0.183806, 0.182630, 0.197482, 0.202724 ],
			"coeffs_58" : [ 0.014955, 0.269802, 0.182869, 0.094935 ],
			"coeffs_59" : [ -0.114025, 0.244503, -0.221645, -0.198139 ],
			"coeffs_60" : [ -0.053842, -0.044253, 0.091791, 0.222412 ],
			"coeffs_61" : [ 0.049803, -0.070201, -0.151260, -0.112245 ],
			"coeffs_62" : [ 0.035919, 0.068284, -0.188309, -0.055249 ],
			"coeffs_63" : [ 0.156714, -0.117150, -0.015814, -0.072682 ],
			"coeffs_64" : [ 0.055864, -0.146333, 0.003592, 0.174993 ],
			"coeffs_65" : [ 0.102297, 0.122557, 0.171167, 0.134115 ],
			"coeffs_66" : [ 0.047127, -0.184576, 0.001606, -0.136928 ],
			"coeffs_67" : [ 0.119366, 0.038200, 0.223110, 0.115169 ],
			"coeffs_68" : [ 0.192798, -0.123718, 0.035629, 0.116450 ],
			"coeffs_69" : [ 0.117084, 0.230515, -0.133982, 0.162925 ],
			"coeffs_70" : [ 0.095005, 0.218818, 0.010122, 0.118349 ],
			"coeffs_71" : [ 0.171197, 0.113942, 0.131547, -0.257298 ],
			"coeffs_72" : [ 0.056156, 0.209731, 0.040569, 0.213570 ],
			"coeffs_73" : [ -0.101984, 0.060644, -0.193218, 0.082815 ],
			"coeffs_74" : [ -0.199100, 0.165295, 0.019304, -0.018710 ],
			"coeffs_75" : [ 0.096022, -0.183673, -0.187134, -0.099559 ],
			"coeffs_76" : [ -0.134591, 0.117373, -0.013705, -0.103967 ],
			"coeffs_77" : [ -0.087352, 0.182487, 0.134718, -0.070211 ],
			"coeffs_78" : [ 0.141503, -0.232004, 0.172639, -0.031665 ],
			"coeffs_79" : [ 0.028110, -0.124593, -0.147852, 0.069272 ],
			"coeffs_80" : [ -0.048844, 0.244963, -0.196588, -0.144380 ],
			"coeffs_81" : [ 0.137042, -0.006263, 0.150197, 0.122329 ],
			"coeffs_82" : [ -0.176221, -0.134181, -0.197699, 0.086885 ],
			"coeffs_83" : [ 0.095658, 0.092603, -0.096692, 0.048529 ],
			"coeffs_84" : [ 0.258581, -0.201529, -0.090490, -0.082878 ],
			"coeffs_85" : [ -0.013958, -0.096622, -0.068059, -0.111447 ],
			"coeffs_86" : [ -0.058852, 0.117499, 0.055713, -0.099715 ],
			"coeffs_87" : [ -0.040735, -0.010423, 0.229098, -0.002418 ],
			"coeffs_88" : [ -0.219032, -0.130162, -0.227862, 0.136798 ],
			"coeffs_89" : [ -0.082344, -0.071355, -0.199381, 0.061857 ],
			"coeffs_90" : [ -0.207334, -0.052259, 0.219356, -0.167108 ],
			"coeffs_91" : [ 0.215822, -0.105713, 0.106438, -0.124661 ],
			"coeffs_92" : [ 0.157154, -0.142846, -0.176766, -0.115977 ],
			"coeffs_93" : [ -0.253367, 0.068683, -0.227672, 0.234100 ],
			"coeffs_94" : [ -0.243223, 0.016505, 0.223718, -0.005604 ],
			"coeffs_95" : [ -0.051333, -0.057839, 0.205828, -0.147158 ],
			"coeffs_96" : [ -0.146425, -0.066919, 0.019964, 0.147411 ],
			"coeffs_97" : [ 0.004338, 0.107206, 0.145459, 0.095572 ],
			"coeffs_98" : [ -0.183274, 0.117870, -0.152624, 0.103750 ],
			"coeffs_99" : [ -0.165543, -0.028510, 0.190490, -0.118276 ],
			"intercepts" : [ -0.096140, 0.038545, 0.097718, 0.215979 ]
		},
		"Layer_2" : {
			"name" : "Hidden_Layer_2",
			"NbInputs" : 4,
			"NbOutputs" : 8 ,
			"coeffs_0" : [ -0.357031, 0.001583, 0.737802, 0.612739, 0.554585, -0.175860, -0.307614, -0.281262 ],
			"coeffs_1" : [ 0.167081, -0.615445, -0.285019, -0.628914, -0.188597, -0.241610, -0.009093, -0.150714 ],
			"coeffs_2" : [ 0.726493, 0.442042, -0.344834, 0.033686, 0.368208, -0.667393, -0.354700, 0.013265 ],
			"coeffs_3" : [ -0.350682, -0.013590, -0.676035, -0.142690, -0.206234, 0.272885, -0.145981, 0.441545 ],
			"intercepts" : [ -0.034045, -0.680868, 0.566292, -0.615544, -0.053849, -0.056645, 0.278678, -0.737064 ]
		},
		"Layer_3" : {
			"name" : "Hidden_Layer_3",
			"NbInputs" : 8,
			"NbOutputs" : 6 ,
			"coeffs_0" : [ -0.197785, 0.567257, 0.427882, -0.338763, 0.453098, 0.176490 ],
			"coeffs_1" : [ 0.600255, 0.542298, -0.276248, 0.443908, 0.553764, 0.513991 ],
			"coeffs_2" : [ 0.464600, 0.093171, 0.093660, -0.124356, -0.086977, -0.006951 ],
			"coeffs_3" : [ 0.109529, -0.194039, -0.413525, 0.060991, 0.632200, -0.221634 ],
			"coeffs_4" : [ -0.267739, -0.417539, -0.240519, -0.349731, -0.097382, -0.215225 ],
			"coeffs_5" : [ 0.488240, -0.007913, 0.178315, 0.086388, 0.057084, 0.060747 ],
			"coeffs_6" : [ -0.277502, 0.552646, 0.666333, 0.270398, 0.112850, 0.189546 ],
			"coeffs_7" : [ -0.102827, 0.419923, 0.234538, -0.067416, -0.149565, -0.557871 ],
			"intercepts" : [ 0.611737, -0.519849, -0.300466, 0.631220, -0.397815, 0.619794 ]
		},
		"Layer_4" : {
			"name" : "Output_Layer",
			"NbInputs" : 6,
			"NbOutputs" : 1 ,
			"coeffs_0" : [ -0.498856 ],
			"coeffs_1" : [ 0.880066 ],
			"coeffs_2" : [ 0.377459 ],
			"coeffs_3" : [ 0.804455 ],
			"coeffs_4" : [ -0.570761 ],
			"coeffs_5" : [ 0.571001 ],
			"intercepts" : [ -0.686831 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/regression/MLPRegressor/mllite.MLPRegressor_RandomReg_100_small_option_1.json'

MLLITE_MODEL_SET_OPTIONS MLPRegressor {"hidden_layer_sizes" : [4, 8, 6]}
MLLITE_MODEL_OPTIONS_DEFAULT MLPRegressor { "max_iter" : 32}
MLLITE_MODEL_OPTIONS_AFTER_SETTING MLPRegressor { "hidden_layer_sizes" : [4, 8, 6],  "max_iter" : 32 , }
MLLITE_MODEL_JSON_AFTER_SETTING MLPRegressor None
MLLITE_RELOADING_MODEL mllite_mlp_reg.MLPRegressor_ff4_ff4
{
	"metadata" : { "model" : "Rosenblatt_MLP", "version" : "2024-W13", "signature" : "ff4_ff4"},
	"options" : {  "hidden_layer_sizes" : [ 4, 8, 6 ], "activation" : "relu", "solver" : "adam", "alpha" : 0.000100, "batch_size" : null, "learning_rate" : "constant", "learning_rate_init" : 0.001000, "power_t" : 0.500000, "max_iter" : 32, "shuffle" : 1, "random_state" : 1789, "tol" : 0.000100, "verbose" : 0, "warm_start" : 0, "momentum" : 0.900000, "nesterovs_momentum" : 1, "early_stopping" : 0, "validation_fraction" : 0.100000, "beta_1" : 0.900000, "beta_2" : 0.999000, "epsilon" : 0.000000, "n_iter_no_change" : 10, "max_fun" : 15000 },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 100 },
	"layers" : {
		"sizes" : [ 100, 4, 8, 6, 1 ],
		"Layer_0" : {
			"name" : "Input_Layer",
			"NbInputs" : 0,
			"NbOutputs" : 100 
		},
		"Layer_1" : {
			"name" : "Hidden_Layer_1",
			"NbInputs" : 100,
			"NbOutputs" : 4 ,
			"coeffs_00" : [ -0.048890, 0.110885, -0.079321, -0.050413 ],
			"coeffs_01" : [ 0.020157, -0.144481, 0.052072, -0.017962 ],
			"coeffs_02" : [ 0.233051, 0.051493, 0.185730, -0.012444 ],
			"coeffs_03" : [ 0.263288, -0.237155, -0.088060, 0.060702 ],
			"coeffs_04" : [ 0.157289, -0.145196, -0.149053, -0.189263 ],
			"coeffs_05" : [ 0.093680, -0.262805, -0.069777, 0.037625 ],
			"coeffs_06" : [ -0.023484, -0.185561, -0.091814, 0.190397 ],
			"coeffs_07" : [ -0.045745, 0.030587, -0.222404, -0.016054 ],
			"coeffs_08" : [ -0.102238, 0.119643, -0.033552, 0.121854 ],
			"coeffs_09" : [ -0.156850, 0.242679, -0.149970, 0.135730 ],
			"coeffs_10" : [ -0.145773, 0.158028, 0.089764, 0.190211 ],
			"coeffs_11" : [ -0.178427, -0.154280, 0.111303, 0.111673 ],
			"coeffs_12" : [ 0.131897, 0.233953, 0.182523, -0.127759 ],
			"coeffs_13" : [ 0.175530, 0.214018, -0.139573, 0.083253 ],
			"coeffs_14" : [ 0.103981, 0.043188, 0.062343, 0.107651 ],
			"coeffs_15" : [ -0.236798, 0.058444, 0.111318, 0.155901 ],
			"coeffs_16" : [ -0.170990, 0.195304, -0.106883, -0.248910 ],
			"coeffs_17" : [ 0.244604, 0.230819, -0.032189, -0.173126 ],
			"coeffs_18" : [ 0.006610, 0.200010, -0.191819, 0.090585 ],
			"coeffs_19" : [ 0.091153, 0.171762, 0.223251, -0.105001 ],
			"coeffs_20" : [ 0.132839, 0.157679, 0.169151, -0.020821 ],
			"coeffs_21" : [ -0.240032, 0.128465, 0.026919, -0.051425 ],
			"coeffs_22" : [ -0.201104, -0.200143, -0.115194, 0.241456 ],
			"coeffs_23" : [ 0.037694, -0.021510, -0.068977, -0.224736 ],
			"coeffs_24" : [ 0.110559, -0.062764, -0.079320, -0.014823 ],
			"coeffs_25" : [ 0.091855, -0.170140, -0.050924, 0.104298 ],
			"coeffs_26" : [ 0.127795, 0.225514, 0.182485, 0.150719 ],
			"coeffs_27" : [ -0.069372, 0.004261, 0.060316, 0.133555 ],
			"coeffs_28" : [ 0.150830, -0.007947, 0.113334, 0.135695 ],
			"coeffs_29" : [ 0.014806, -0.052529, -0.040328, -0.090294 ],
			"coeffs_30" : [ 0.095559, 0.166915, -0.148917, 0.104565 ],
			"coeffs_31" : [ -0.183291, 0.031969, 0.023315, -0.069081 ],
			"coeffs_32" : [ 0.082744, -0.199859, -0.190704, 0.195321 ],
			"coeffs_33" : [ 0.225559, -0.125130, -0.065355, -0.187004 ],
			"coeffs_34" : [ -0.213263, -0.197756, -0.067133, -0.036370 ],
			"coeffs_35" : [ -0.126303, -0.174227, -0.228440, 0.018999 ],
			"coeffs_36" : [ -0.141089, -0.158931, 0.050179, 0.058164 ],
			"coeffs_37" : [ -0.012508, 0.078644, 0.056945, -0.189254 ],
			"coeffs_38" : [ -0.009221, 0.206307, 0.231431, -0.066817 ],
			"coeffs_39" : [ -0.237405, -0.112342, 0.081873, -0.166857 ],
			"coeffs_40" : [ 0.068938, -0.103261, 0.222158, 0.239045 ],
			"coeffs_41" : [ -0.143568, 0.091361, -0.148483, 0.209683 ],
			"coeffs_42" : [ -0.173536, 0.112023, 0.049900, -0.158511 ],
			"coeffs_43" : [ 0.143410, 0.083687, -0.006248, -0.137111 ],
			"coeffs_44" : [ 0.233713, 0.173535, -0.097168, -0.003448 ],
			"coeffs_45" : [ 0.162769, 0.048787, -0.002371, 0.217823 ],
			"coeffs_46" : [ 0.053700, 0.126269, -0.156809, -0.008612 ],
			"coeffs_47" : [ 0.228058, 0.108723, -0.098127, -0.043235 ],
			"coeffs_48" : [ 0.186830, -0.090777, 0.061401, 0.167036 ],
			"coeffs_49" : [ -0.190794, -0.135269, -0.109420, -0.153417 ],
			"coeffs_50" : [ -0.065904, -0.027935, -0.191724, 0.119227 ],
			"coeffs_51" : [ 0.196326, 0.067390, -0.007318, 0.104258 ],
			"coeffs_52" : [ -0.008864, 0.138187, 0.022138, 0.170184 ],
			"coeffs_53" : [ 0.079580, -0.085785, -0.040048, -0.204044 ],
			"coeffs_54" : [ -0.161686, -0.109845, 0.096206, -0.062907 ],
			"coeffs_55" : [ -0.070563, -0.220654, 0.231012, -0.123084 ],
			"coeffs_56" : [ -0.025407, 0.115582, 0.113428, 0.078412 ],
			"coeffs_57" : [ -0.183806, 0.182630, 0.197482, 0.202724 ],
			"coeffs_58" : [ 0.014955, 0.269802, 0.182869, 0.094935 ],
			"coeffs_59" : [ -0.114025, 0.244503, -0.221645, -0.198139 ],
			"coeffs_60" : [ -0.053842, -0.044253, 0.091791, 0.222412 ],
			"coeffs_61" : [ 0.049803, -0.070201, -0.151260, -0.112245 ],
			"coeffs_62" : [ 0.035919, 0.068284, -0.188309, -0.055249 ],
			"coeffs_63" : [ 0.156714, -0.117150, -0.015814, -0.072682 ],
			"coeffs_64" : [ 0.055864, -0.146333, 0.003592, 0.174993 ],
			"coeffs_65" : [ 0.102297, 0.122557, 0.171167, 0.134115 ],
			"coeffs_66" : [ 0.047127, -0.184576, 0.001606, -0.136928 ],
			"coeffs_67" : [ 0.119366, 0.038200, 0.223110, 0.115169 ],
			"coeffs_68" : [ 0.192798, -0.123718, 0.035629, 0.116450 ],
			"coeffs_69" : [ 0.117084, 0.230515, -0.133982, 0.162925 ],
			"coeffs_70" : [ 0.095005, 0.218818, 0.010122, 0.118349 ],
			"coeffs_71" : [ 0.171197, 0.113942, 0.131547, -0.257298 ],
			"coeffs_72" : [ 0.056156, 0.209731, 0.040569, 0.213570 ],
			"coeffs_73" : [ -0.101984, 0.060644, -0.193218, 0.082815 ],
			"coeffs_74" : [ -0.199100, 0.165295, 0.019304, -0.018710 ],
			"coeffs_75" : [ 0.096022, -0.183673, -0.187134, -0.099559 ],
			"coeffs_76" : [ -0.134591, 0.117373, -0.013705, -0.103967 ],
			"coeffs_77" : [ -0.087352, 0.182487, 0.134718, -0.070211 ],
			"coeffs_78" : [ 0.141503, -0.232004, 0.172639, -0.031665 ],
			"coeffs_79" : [ 0.028110, -0.124593, -0.147852, 0.069272 ],
			"coeffs_80" : [ -0.048844, 0.244963, -0.196588, -0.144380 ],
			"coeffs_81" : [ 0.137042, -0.006263, 0.150197, 0.122329 ],
			"coeffs_82" : [ -0.176221, -0.134181, -0.197699, 0.086885 ],
			"coeffs_83" : [ 0.095658, 0.092603, -0.096692, 0.048529 ],
			"coeffs_84" : [ 0.258581, -0.201529, -0.090490, -0.082878 ],
			"coeffs_85" : [ -0.013958, -0.096622, -0.068059, -0.111447 ],
			"coeffs_86" : [ -0.058852, 0.117499, 0.055713, -0.099715 ],
			"coeffs_87" : [ -0.040735, -0.010423, 0.229098, -0.002418 ],
			"coeffs_88" : [ -0.219032, -0.130162, -0.227862, 0.136798 ],
			"coeffs_89" : [ -0.082344, -0.071355, -0.199381, 0.061857 ],
			"coeffs_90" : [ -0.207334, -0.052259, 0.219356, -0.167108 ],
			"coeffs_91" : [ 0.215822, -0.105713, 0.106438, -0.124661 ],
			"coeffs_92" : [ 0.157154, -0.142846, -0.176766, -0.115977 ],
			"coeffs_93" : [ -0.253367, 0.068683, -0.227672, 0.234100 ],
			"coeffs_94" : [ -0.243223, 0.016505, 0.223718, -0.005604 ],
			"coeffs_95" : [ -0.051333, -0.057839, 0.205828, -0.147158 ],
			"coeffs_96" : [ -0.146425, -0.066919, 0.019964, 0.147411 ],
			"coeffs_97" : [ 0.004338, 0.107206, 0.145459, 0.095572 ],
			"coeffs_98" : [ -0.183274, 0.117870, -0.152624, 0.103750 ],
			"coeffs_99" : [ -0.165543, -0.028510, 0.190490, -0.118276 ],
			"intercepts" : [ -0.096140, 0.038545, 0.097718, 0.215979 ]
		},
		"Layer_2" : {
			"name" : "Hidden_Layer_2",
			"NbInputs" : 4,
			"NbOutputs" : 8 ,
			"coeffs_0" : [ -0.357031, 0.001583, 0.737802, 0.612739, 0.554585, -0.175860, -0.307614, -0.281262 ],
			"coeffs_1" : [ 0.167081, -0.615445, -0.285019, -0.628914, -0.188597, -0.241610, -0.009093, -0.150714 ],
			"coeffs_2" : [ 0.726493, 0.442042, -0.344834, 0.033686, 0.368208, -0.667393, -0.354700, 0.013265 ],
			"coeffs_3" : [ -0.350682, -0.013590, -0.676035, -0.142690, -0.206234, 0.272885, -0.145981, 0.441545 ],
			"intercepts" : [ -0.034045, -0.680868, 0.566292, -0.615544, -0.053849, -0.056645, 0.278678, -0.737064 ]
		},
		"Layer_3" : {
			"name" : "Hidden_Layer_3",
			"NbInputs" : 8,
			"NbOutputs" : 6 ,
			"coeffs_0" : [ -0.197785, 0.567257, 0.427882, -0.338763, 0.453098, 0.176490 ],
			"coeffs_1" : [ 0.600255, 0.542298, -0.276248, 0.443908, 0.553764, 0.513991 ],
			"coeffs_2" : [ 0.464600, 0.093171, 0.093660, -0.124356, -0.086977, -0.006951 ],
			"coeffs_3" : [ 0.109529, -0.194039, -0.413525, 0.060991, 0.632200, -0.221634 ],
			"coeffs_4" : [ -0.267739, -0.417539, -0.240519, -0.349731, -0.097382, -0.215225 ],
			"coeffs_5" : [ 0.488240, -0.007913, 0.178315, 0.086388, 0.057084, 0.060747 ],
			"coeffs_6" : [ -0.277502, 0.552646, 0.666333, 0.270398, 0.112850, 0.189546 ],
			"coeffs_7" : [ -0.102827, 0.419923, 0.234538, -0.067416, -0.149565, -0.557871 ],
			"intercepts" : [ 0.611737, -0.519849, -0.300466, 0.631220, -0.397815, 0.619794 ]
		},
		"Layer_4" : {
			"name" : "Output_Layer",
			"NbInputs" : 6,
			"NbOutputs" : 1 ,
			"coeffs_0" : [ -0.498856 ],
			"coeffs_1" : [ 0.880066 ],
			"coeffs_2" : [ 0.377459 ],
			"coeffs_3" : [ 0.804455 ],
			"coeffs_4" : [ -0.570761 ],
			"coeffs_5" : [ 0.571001 ],
			"intercepts" : [ -0.686831 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"dataset" : 	{
		"dataset_features" : 100,
		"dataset_rows" : 64
	},
	"layers" : 	{
		"Layer_0" : 	{
			"NbInputs" : 0,
			"NbOutputs" : 100,
			"name" : "Input_Layer"
		},
		"Layer_1" : 	{
			"NbInputs" : 100,
			"NbOutputs" : 4,
			"coeffs_00" : [ -0.04889, 0.110885, -0.079321, -0.050413 ],
			"coeffs_01" : [ 0.020157, -0.144481, 0.052072, -0.017962 ],
			"coeffs_02" : [ 0.233051, 0.051493, 0.18573, -0.012444 ],
			"coeffs_03" : [ 0.263288, -0.237155, -0.08806, 0.060702 ],
			"coeffs_04" : [ 0.157289, -0.145196, -0.149053, -0.189263 ],
			"coeffs_05" : [ 0.09368, -0.262805, -0.069777, 0.037625 ],
			"coeffs_06" : [ -0.023484, -0.185561, -0.091814, 0.190397 ],
			"coeffs_07" : [ -0.045745, 0.030587, -0.222404, -0.016054 ],
			"coeffs_08" : [ -0.102238, 0.119643, -0.033552, 0.121854 ],
			"coeffs_09" : [ -0.15685, 0.242679, -0.14997, 0.13573 ],
			"coeffs_10" : [ -0.145773, 0.158028, 0.089764, 0.190211 ],
			"coeffs_11" : [ -0.178427, -0.15428, 0.111303, 0.111673 ],
			"coeffs_12" : [ 0.131897, 0.233953, 0.182523, -0.127759 ],
			"coeffs_13" : [ 0.17553, 0.214018, -0.139573, 0.083253 ],
			"coeffs_14" : [ 0.103981, 0.043188, 0.062343, 0.107651 ],
			"coeffs_15" : [ -0.236798, 0.058444, 0.111318, 0.155901 ],
			"coeffs_16" : [ -0.17099, 0.195304, -0.106883, -0.24891 ],
			"coeffs_17" : [ 0.244604, 0.230819, -0.032189, -0.173126 ],
			"coeffs_18" : [ 0.00661, 0.20001, -0.191819, 0.090585 ],
			"coeffs_19" : [ 0.091153, 0.171762, 0.223251, -0.105001 ],
			"coeffs_20" : [ 0.132839, 0.157679, 0.169151, -0.020821 ],
			"coeffs_21" : [ -0.240032, 0.128465, 0.026919, -0.051425 ],
			"coeffs_22" : [ -0.201104, -0.200143, -0.115194, 0.241456 ],
			"coeffs_23" : [ 0.037694, -0.02151, -0.068977, -0.224736 ],
			"coeffs_24" : [ 0.110559, -0.062764, -0.07932, -0.014823 ],
			"coeffs_25" : [ 0.091855, -0.17014, -0.050924, 0.104298 ],
			"coeffs_26" : [ 0.127795, 0.225514, 0.182485, 0.150719 ],
			"coeffs_27" : [ -0.069372, 0.004261, 0.060316, 0.133555 ],
			"coeffs_28" : [ 0.15083, -0.007947, 0.113334, 0.135695 ],
			"coeffs_29" : [ 0.014806, -0.052529, -0.040328, -0.090294 ],
			"coeffs_30" : [ 0.095559, 0.166915, -0.148917, 0.104565 ],
			"coeffs_31" : [ -0.183291, 0.031969, 0.023315, -0.069081 ],
			"coeffs_32" : [ 0.082744, -0.199859, -0.190704, 0.195321 ],
			"coeffs_33" : [ 0.225559, -0.12513, -0.065355, -0.187004 ],
			"coeffs_34" : [ -0.213263, -0.197756, -0.067133, -0.03637 ],
			"coeffs_35" : [ -0.126303, -0.174227, -0.22844, 0.018999 ],
			"coeffs_36" : [ -0.141089, -0.158931, 0.050179, 0.058164 ],
			"coeffs_37" : [ -0.012508, 0.078644, 0.056945, -0.189254 ],
			"coeffs_38" : [ -0.009221, 0.206307, 0.231431, -0.066817 ],
			"coeffs_39" : [ -0.237405, -0.112342, 0.081873, -0.166857 ],
			"coeffs_40" : [ 0.068938, -0.103261, 0.222158, 0.239045 ],
			"coeffs_41" : [ -0.143568, 0.091361, -0.148483, 0.209683 ],
			"coeffs_42" : [ -0.173536, 0.112023, 0.0499, -0.158511 ],
			"coeffs_43" : [ 0.14341, 0.083687, -0.006248, -0.137111 ],
			"coeffs_44" : [ 0.233713, 0.173535, -0.097168, -0.003448 ],
			"coeffs_45" : [ 0.162769, 0.048787, -0.002371, 0.217823 ],
			"coeffs_46" : [ 0.0537, 0.126269, -0.156809, -0.008612 ],
			"coeffs_47" : [ 0.228058, 0.108723, -0.098127, -0.043235 ],
			"coeffs_48" : [ 0.18683, -0.090777, 0.061401, 0.167036 ],
			"coeffs_49" : [ -0.190794, -0.135269, -0.10942, -0.153417 ],
			"coeffs_50" : [ -0.065904, -0.027935, -0.191724, 0.119227 ],
			"coeffs_51" : [ 0.196326, 0.06739, -0.007318, 0.104258 ],
			"coeffs_52" : [ -0.008864, 0.138187, 0.022138, 0.170184 ],
			"coeffs_53" : [ 0.07958, -0.085785, -0.040048, -0.204044 ],
			"coeffs_54" : [ -0.161686, -0.109845, 0.096206, -0.062907 ],
			"coeffs_55" : [ -0.070563, -0.220654, 0.231012, -0.123084 ],
			"coeffs_56" : [ -0.025407, 0.115582, 0.113428, 0.078412 ],
			"coeffs_57" : [ -0.183806, 0.18263, 0.197482, 0.202724 ],
			"coeffs_58" : [ 0.014955, 0.269802, 0.182869, 0.094935 ],
			"coeffs_59" : [ -0.114025, 0.244503, -0.221645, -0.198139 ],
			"coeffs_60" : [ -0.053842, -0.044253, 0.091791, 0.222412 ],
			"coeffs_61" : [ 0.049803, -0.070201, -0.15126, -0.112245 ],
			"coeffs_62" : [ 0.035919, 0.068284, -0.188309, -0.055249 ],
			"coeffs_63" : [ 0.156714, -0.11715, -0.015814, -0.072682 ],
			"coeffs_64" : [ 0.055864, -0.146333, 0.003592, 0.174993 ],
			"coeffs_65" : [ 0.102297, 0.122557, 0.171167, 0.134115 ],
			"coeffs_66" : [ 0.047127, -0.184576, 0.001606, -0.136928 ],
			"coeffs_67" : [ 0.119366, 0.0382, 0.22311, 0.115169 ],
			"coeffs_68" : [ 0.192798, -0.123718, 0.035629, 0.11645 ],
			"coeffs_69" : [ 0.117084, 0.230515, -0.133982, 0.162925 ],
			"coeffs_70" : [ 0.095005, 0.218818, 0.010122, 0.118349 ],
			"coeffs_71" : [ 0.171197, 0.113942, 0.131547, -0.257298 ],
			"coeffs_72" : [ 0.056156, 0.209731, 0.040569, 0.21357 ],
			"coeffs_73" : [ -0.101984, 0.060644, -0.193218, 0.082815 ],
			"coeffs_74" : [ -0.1991, 0.165295, 0.019304, -0.01871 ],
			"coeffs_75" : [ 0.096022, -0.183673, -0.187134, -0.099559 ],
			"coeffs_76" : [ -0.134591, 0.117373, -0.013705, -0.103967 ],
			"coeffs_77" : [ -0.087352, 0.182487, 0.134718, -0.070211 ],
			"coeffs_78" : [ 0.141503, -0.232004, 0.172639, -0.031665 ],
			"coeffs_79" : [ 0.02811, -0.124593, -0.147852, 0.069272 ],
			"coeffs_80" : [ -0.048844, 0.244963, -0.196588, -0.14438 ],
			"coeffs_81" : [ 0.137042, -0.006263, 0.150197, 0.122329 ],
			"coeffs_82" : [ -0.176221, -0.134181, -0.197699, 0.086885 ],
			"coeffs_83" : [ 0.095658, 0.092603, -0.096692, 0.048529 ],
			"coeffs_84" : [ 0.258581, -0.201529, -0.09049, -0.082878 ],
			"coeffs_85" : [ -0.013958, -0.096622, -0.068059, -0.111447 ],
			"coeffs_86" : [ -0.058852, 0.117499, 0.055713, -0.099715 ],
			"coeffs_87" : [ -0.040735, -0.010423, 0.229098, -0.002418 ],
			"coeffs_88" : [ -0.219032, -0.130162, -0.227862, 0.136798 ],
			"coeffs_89" : [ -0.082344, -0.071355, -0.199381, 0.061857 ],
			"coeffs_90" : [ -0.207334, -0.052259, 0.219356, -0.167108 ],
			"coeffs_91" : [ 0.215822, -0.105713, 0.106438, -0.124661 ],
			"coeffs_92" : [ 0.157154, -0.142846, -0.176766, -0.115977 ],
			"coeffs_93" : [ -0.253367, 0.068683, -0.227672, 0.2341 ],
			"coeffs_94" : [ -0.243223, 0.016505, 0.223718, -0.005604 ],
			"coeffs_95" : [ -0.051333, -0.057839, 0.205828, -0.147158 ],
			"coeffs_96" : [ -0.146425, -0.066919, 0.019964, 0.147411 ],
			"coeffs_97" : [ 0.004338, 0.107206, 0.145459, 0.095572 ],
			"coeffs_98" : [ -0.183274, 0.11787, -0.152624, 0.10375 ],
			"coeffs_99" : [ -0.165543, -0.02851, 0.19049, -0.118276 ],
			"intercepts" : [ -0.09614, 0.038545, 0.097718, 0.215979 ],
			"name" : "Hidden_Layer_1"
		},
		"Layer_2" : 	{
			"NbInputs" : 4,
			"NbOutputs" : 8,
			"coeffs_0" : [ -0.357031, 0.001583, 0.737802, 0.612739, 0.554585, -0.17586, -0.307614, -0.281262 ],
			"coeffs_1" : [ 0.167081, -0.615445, -0.285019, -0.628914, -0.188597, -0.24161, -0.009093, -0.150714 ],
			"coeffs_2" : [ 0.726493, 0.442042, -0.344834, 0.033686, 0.368208, -0.667393, -0.3547, 0.013265 ],
			"coeffs_3" : [ -0.350682, -0.01359, -0.676035, -0.14269, -0.206234, 0.272885, -0.145981, 0.441545 ],
			"intercepts" : [ -0.034045, -0.680868, 0.566292, -0.615544, -0.053849, -0.056645, 0.278678, -0.737064 ],
			"name" : "Hidden_Layer_2"
		},
		"Layer_3" : 	{
			"NbInputs" : 8,
			"NbOutputs" : 6,
			"coeffs_0" : [ -0.197785, 0.567257, 0.427882, -0.338763, 0.453098, 0.17649 ],
			"coeffs_1" : [ 0.600255, 0.542298, -0.276248, 0.443908, 0.553764, 0.513991 ],
			"coeffs_2" : [ 0.4646, 0.093171, 0.09366, -0.124356, -0.086977, -0.006951 ],
			"coeffs_3" : [ 0.109529, -0.194039, -0.413525, 0.060991, 0.6322, -0.221634 ],
			"coeffs_4" : [ -0.267739, -0.417539, -0.240519, -0.349731, -0.097382, -0.215225 ],
			"coeffs_5" : [ 0.48824, -0.007913, 0.178315, 0.086388, 0.057084, 0.060747 ],
			"coeffs_6" : [ -0.277502, 0.552646, 0.666333, 0.270398, 0.11285, 0.189546 ],
			"coeffs_7" : [ -0.102827, 0.419923, 0.234538, -0.067416, -0.149565, -0.557871 ],
			"intercepts" : [ 0.611737, -0.519849, -0.300466, 0.63122, -0.397815, 0.619794 ],
			"name" : "Hidden_Layer_3"
		},
		"Layer_4" : 	{
			"NbInputs" : 6,
			"NbOutputs" : 1,
			"coeffs_0" : [ -0.498856 ],
			"coeffs_1" : [ 0.880066 ],
			"coeffs_2" : [ 0.377459 ],
			"coeffs_3" : [ 0.804455 ],
			"coeffs_4" : [ -0.570761 ],
			"coeffs_5" : [ 0.571001 ],
			"intercepts" : [ -0.686831 ],
			"name" : "Output_Layer"
		},
		"sizes" : [ 100, 4, 8, 6, 1 ]
	},
	"metadata" :  { "model" : "Rosenblatt_MLP", "signature" : "ff4_ff4", "version" : "2024-W13" },
	"options" :  { "activation" : "relu", "alpha" : 0.0001, "batch_size" : null, "beta_1" : 0.9, "beta_2" : 0.999, "early_stopping" : 0, "epsilon" : 0.0, "hidden_layer_sizes" : [ 4, 8, 6 ], "learning_rate" : "constant", "learning_rate_init" : 0.001, "max_fun" : 15000, "max_iter" : 32, "momentum" : 0.9, "n_iter_no_change" : 10, "nesterovs_momentum" : 1, "power_t" : 0.5, "random_state" : 1789, "shuffle" : 1, "solver" : "adam", "tol" : 0.0001, "validation_fraction" : 0.1, "verbose" : 0, "warm_start" : 0 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
[-0.45904562 -0.38689542 -0.15279305 -0.5916223  -0.5126678  -0.35060424
 -0.25446478 -0.06097236 -1.2750794  -0.12626836 -0.02907404 -0.15974835
 -0.80029565 -0.12190226 -0.08885175 -0.56310326 -0.20306712 -1.370894
 -0.50505435 -0.14056572 -0.20577574 -1.560728   -0.19109765 -0.11501715
 -0.08655307 -0.14051753 -0.32703102 -0.13030899 -0.32826704 -0.19109765
 -0.07839659 -1.4205219  -0.3461046  -0.20000929 -0.92155075 -0.22411281
 -0.16068849 -0.23390833 -0.18380344 -0.19109765  0.43138972 -0.13030899
 -1.1138155  -0.6536583  -1.333818   -0.34981257 -0.33223164 -0.0202145
 -0.05506635 -0.3344246  -0.40707675 -0.03662139 -0.19109765 -0.1524792
 -0.30707178 -0.14044905 -0.03496659 -0.7772031  -0.19109765 -0.4120706
 -0.9431214  -0.8041308  -0.19109765  0.48528904]
('OPERATION_END_ELAPSED', 0.002, 'PREDICT')
('OPERATION_START', 'PREDICT')
[-0.4590445  -0.3868959  -0.1527932  -0.5916196  -0.5126692  -0.35060343
 -0.25446314 -0.0609726  -1.2750791  -0.12626883 -0.02907419 -0.15974793
 -0.80029404 -0.12190208 -0.0888516  -0.5631047  -0.20306644 -1.3708934
 -0.5050557  -0.14056522 -0.20577559 -1.5607262  -0.19109723 -0.11501771
 -0.08655319 -0.14051777 -0.32703102 -0.13030863 -0.3282661  -0.19109723
 -0.0783965  -1.4205217  -0.34610403 -0.2000117  -0.9215504  -0.22411081
 -0.16068792 -0.23390785 -0.18380263 -0.19109723  0.43138528 -0.13030863
 -1.1138127  -0.6536588  -1.3338157  -0.3498121  -0.33223185 -0.02021468
 -0.05506635 -0.3344219  -0.4070781  -0.03662309 -0.19109723 -0.15247852
 -0.30707163 -0.14044905 -0.03496644 -0.7772009  -0.19109723 -0.4120703
 -0.94312143 -0.80412847 -0.19109723  0.48528373]
('OPERATION_END_ELAPSED', 0.002, 'PREDICT')
MODEL_PERFS {'class_name': 'mllite.MLPRegressor', 'model_name': 'MLPRegressor', 'options': '{"hidden_layer_sizes" : [4, 8, 6]}', 'dataset': 'RandomReg_100_small', 'size': 64, 'mse': 29544.059, 'mae': 135.99344, 'mape': 1.0007414, 'r2': -0.0027899145691017146}
WRITING_PERF_CODE 'logs/auto_tests/regression/MLPRegressor/mllite.MLPRegressor_RandomReg_100_small_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.MLPRegressor', 'model_name': 'MLPRegressor', 'options': '{"hidden_layer_sizes" : [4, 8, 6]}', 'dataset': 'RandomReg_100_small', 'training_time_in_sec': 0.034, 'prediction_time_in_sec': 0.002}
WRITING_SQL_CODE 'logs/auto_tests/regression/MLPRegressor/mllite.MLPRegressor_RandomReg_100_small_option_1_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('RandomReg_100_small', 'MLPRegressor', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('RandomReg_100_small', 'MLPRegressor', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('RandomReg_100_small', 'MLPRegressor', 'duckdb')
-0.215225 * t."OUT_4"  + 0.060747 * t."OUT_5"  + 0.189546 * t."OUT_6"  + -0.557871 * t."OUT_7" AS "OUT_5"
   FROM "Hidden_Layer_2_Activation" AS t
 ),
"Hidden_Layer_3_Activation" AS
 ( SELECT
    t."index" as "index",
    CASE WHEN (t."OUT_0" > 0) THEN t."OUT_0" ELSE 0 END AS "OUT_0",
    CASE WHEN (t."OUT_1" > 0) THEN t."OUT_1" ELSE 0 END AS "OUT_1",
    CASE WHEN (t."OUT_2" > 0) THEN t."OUT_2" ELSE 0 END AS "OUT_2",
    CASE WHEN (t."OUT_3" > 0) THEN t."OUT_3" ELSE 0 END AS "OUT_3",
    CASE WHEN (t."OUT_4" > 0) THEN t."OUT_4" ELSE 0 END AS "OUT_4",
    CASE WHEN (t."OUT_5" > 0) THEN t."OUT_5" ELSE 0 END AS "OUT_5"
   FROM "Hidden_Layer_3_BA" AS t
 ),
"Output_Layer_BA" AS
 ( SELECT
    t."index" as "index",
    -0.686831 + -0.498856 * t."OUT_0"  + 0.880066 * t."OUT_1"  + 0.377459 * t."OUT_2"  + 0.804455 * t."OUT_3"  + -0.570761 * t."OUT_4"  + 0.571001 * t."OUT_5" AS "OUT_0"
   FROM "Hidden_Layer_3_Activation" AS t
 )
 SELECT
    t."index" AS "index",
    t.OUT_0 AS "Estimator"
  FROM "Output_Layer_BA" AS t

SQL_OUT_PUT_LAST_LINES_END ('RandomReg_100_small', 'MLPRegressor', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 64 entries, 0 to 63
Data columns (total 100 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     64 non-null     float32
 1   X_1     64 non-null     float32
 2   X_2     64 non-null     float32
 3   X_3     64 non-null     float32
 4   X_4     64 non-null     float32
 5   X_5     64 non-null     float32
 6   X_6     64 non-null     float32
 7   X_7     64 non-null     float32
 8   X_8     64 non-null     float32
 9   X_9     64 non-null     float32
 10  X_10    64 non-null     float32
 11  X_11    64 non-null     float32
 12  X_12    64 non-null     float32
 13  X_13    64 non-null     float32
 14  X_14    64 non-null     float32
 15  X_15    64 non-null     float32
 16  X_16    64 non-null     float32
 17  X_17    64 non-null     float32
 18  X_18    64 non-null     float32
 19  X_19    64 non-null     float32
 20  X_20    64 non-null     float32
 21  X_21    64 non-null     float32
 22  X_22    64 non-null     float32
 23  X_23    64 non-null     float32
 24  X_24    64 non-null     float32
 25  X_25    64 non-null     float32
 26  X_26    64 non-null     float32
 27  X_27    64 non-null     float32
 28  X_28    64 non-null     float32
 29  X_29    64 non-null     float32
 30  X_30    64 non-null     float32
 31  X_31    64 non-null     float32
 32  X_32    64 non-null     float32
 33  X_33    64 non-null     float32
 34  X_34    64 non-null     float32
 35  X_35    64 non-null     float32
 36  X_36    64 non-null     float32
 37  X_37    64 non-null     float32
 38  X_38    64 non-null     float32
 39  X_39    64 non-null     float32
 40  X_40    64 non-null     float32
 41  X_41    64 non-null     float32
 42  X_42    64 non-null     float32
 43  X_43    64 non-null     float32
 44  X_44    64 non-null     float32
 45  X_45    64 non-null     float32
 46  X_46    64 non-null     float32
 47  X_47    64 non-null     float32
 48  X_48    64 non-null     float32
 49  X_49    64 non-null     float32
 50  X_50    64 non-null     float32
 51  X_51    64 non-null     float32
 52  X_52    64 non-null     float32
 53  X_53    64 non-null     float32
 54  X_54    64 non-null     float32
 55  X_55    64 non-null     float32
 56  X_56    64 non-null     float32
 57  X_57    64 non-null     float32
 58  X_58    64 non-null     float32
 59  X_59    64 non-null     float32
 60  X_60    64 non-null     float32
 61  X_61    64 non-null     float32
 62  X_62    64 non-null     float32
 63  X_63    64 non-null     float32
 64  X_64    64 non-null     float32
 65  X_65    64 non-null     float32
 66  X_66    64 non-null     float32
 67  X_67    64 non-null     float32
 68  X_68    64 non-null     float32
 69  X_69    64 non-null     float32
 70  X_70    64 non-null     float32
 71  X_71    64 non-null     float32
 72  X_72    64 non-null     float32
 73  X_73    64 non-null     float32
 74  X_74    64 non-null     float32
 75  X_75    64 non-null     float32
 76  X_76    64 non-null     float32
 77  X_77    64 non-null     float32
 78  X_78    64 non-null     float32
 79  X_79    64 non-null     float32
 80  X_80    64 non-null     float32
 81  X_81    64 non-null     float32
 82  X_82    64 non-null     float32
 83  X_83    64 non-null     float32
 84  X_84    64 non-null     float32
 85  X_85    64 non-null     float32
 86  X_86    64 non-null     float32
 87  X_87    64 non-null     float32
 88  X_88    64 non-null     float32
 89  X_89    64 non-null     float32
 90  X_90    64 non-null     float32
 91  X_91    64 non-null     float32
 92  X_92    64 non-null     float32
 93  X_93    64 non-null     float32
 94  X_94    64 non-null     float32
 95  X_95    64 non-null     float32
 96  X_96    64 non-null     float32
 97  X_97    64 non-null     float32
 98  X_98    64 non-null     float32
 99  X_99    64 non-null     float32
dtypes: float32(100)
memory usage: 25.5 KB
            X_0       X_1       X_2  ...      X_97      X_98      X_99
index                                ...                              
0     -0.301125  1.387725  1.263659  ... -1.981716 -0.345798  0.839573
1     -0.155583 -1.181091  2.934304  ... -0.649000 -1.884572 -0.938959
2      1.079390 -0.496549 -1.240677  ...  0.679748 -0.569426  0.970424
3     -1.027789 -0.022726  0.110301  ...  0.799355  2.721471 -0.697773
4      0.155319  0.126152  0.905780  ... -0.735563  1.218228  0.672223
...         ...       ...       ...  ...       ...       ...       ...
59     0.389605 -0.609059 -0.373385  ... -0.604041 -0.652537  0.037929
60    -0.553760 -0.158459  0.247315  ... -0.288628  0.434919 -1.537177
61     0.261579  0.836463  0.899340  ... -1.099828 -0.770119 -0.320833
62     0.578196 -0.097941  0.019108  ... -1.473781  1.115285  0.315342
63    -0.080896  0.160145  1.489779  ...  0.926896 -0.028132  0.637110

[64 rows x 100 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 64 entries, 0 to 63
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      64 non-null     int64  
 1   Estimator  64 non-null     float64
dtypes: float64(1), int64(1)
memory usage: 1.1 KB
    index  Estimator
0       0  -0.459044
1       1  -0.386896
2       2  -0.152793
3       3  -0.591620
4       4  -0.512669
..    ...        ...
59     59  -0.412070
60     60  -0.943121
61     61  -0.804128
62     62  -0.191097
63     63   0.485284

[64 rows x 2 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('RandomReg_100_small', 'MLPRegressor') Estimator 9.159557521343231e-07
    index  SQL_Estimator  Py_Estimator     SQL_Error
48     48      -0.055066     -0.055066  0.000000e+00
49     49      -0.334422     -0.334425  2.682209e-06
50     50      -0.407078     -0.407077 -1.341105e-06
51     51      -0.036623     -0.036621 -1.698732e-06
52     52      -0.191097     -0.191098  4.172325e-07
53     53      -0.152479     -0.152479  6.854534e-07
54     54      -0.307072     -0.307072  1.490116e-07
55     55      -0.140449     -0.140449  0.000000e+00
56     56      -0.034966     -0.034967  1.490116e-07
57     57      -0.777201     -0.777203  2.205372e-06
58     58      -0.191097     -0.191098  4.172325e-07
59     59      -0.412070     -0.412071  2.980232e-07
60     60      -0.943121     -0.943121 -5.960464e-08
61     61      -0.804128     -0.804131  2.324581e-06
62     62      -0.191097     -0.191098  4.172325e-07
63     63       0.485284      0.485289 -5.304813e-06
MLLITE_REG_SQL_EXECUTION_STATUS ('RandomReg_100_small', 'MLPRegressor', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/regression/MLPRegressor/mllite.MLPRegressor_RandomReg_100_small_option_1_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('RandomReg_100_small', 'MLPRegressor', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('RandomReg_100_small', 'MLPRegressor', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('RandomReg_100_small', 'MLPRegressor', 'sqlite')
-0.215225 * t."OUT_4"  + 0.060747 * t."OUT_5"  + 0.189546 * t."OUT_6"  + -0.557871 * t."OUT_7" AS "OUT_5"
   FROM "Hidden_Layer_2_Activation" AS t
 ),
"Hidden_Layer_3_Activation" AS
 ( SELECT
    t."index" as "index",
    CASE WHEN (t."OUT_0" > 0) THEN t."OUT_0" ELSE 0 END AS "OUT_0",
    CASE WHEN (t."OUT_1" > 0) THEN t."OUT_1" ELSE 0 END AS "OUT_1",
    CASE WHEN (t."OUT_2" > 0) THEN t."OUT_2" ELSE 0 END AS "OUT_2",
    CASE WHEN (t."OUT_3" > 0) THEN t."OUT_3" ELSE 0 END AS "OUT_3",
    CASE WHEN (t."OUT_4" > 0) THEN t."OUT_4" ELSE 0 END AS "OUT_4",
    CASE WHEN (t."OUT_5" > 0) THEN t."OUT_5" ELSE 0 END AS "OUT_5"
   FROM "Hidden_Layer_3_BA" AS t
 ),
"Output_Layer_BA" AS
 ( SELECT
    t."index" as "index",
    -0.686831 + -0.498856 * t."OUT_0"  + 0.880066 * t."OUT_1"  + 0.377459 * t."OUT_2"  + 0.804455 * t."OUT_3"  + -0.570761 * t."OUT_4"  + 0.571001 * t."OUT_5" AS "OUT_0"
   FROM "Hidden_Layer_3_Activation" AS t
 )
 SELECT
    t."index" AS "index",
    t.OUT_0 AS "Estimator"
  FROM "Output_Layer_BA" AS t

SQL_OUT_PUT_LAST_LINES_END ('RandomReg_100_small', 'MLPRegressor', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 64 entries, 0 to 63
Data columns (total 100 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     64 non-null     float32
 1   X_1     64 non-null     float32
 2   X_2     64 non-null     float32
 3   X_3     64 non-null     float32
 4   X_4     64 non-null     float32
 5   X_5     64 non-null     float32
 6   X_6     64 non-null     float32
 7   X_7     64 non-null     float32
 8   X_8     64 non-null     float32
 9   X_9     64 non-null     float32
 10  X_10    64 non-null     float32
 11  X_11    64 non-null     float32
 12  X_12    64 non-null     float32
 13  X_13    64 non-null     float32
 14  X_14    64 non-null     float32
 15  X_15    64 non-null     float32
 16  X_16    64 non-null     float32
 17  X_17    64 non-null     float32
 18  X_18    64 non-null     float32
 19  X_19    64 non-null     float32
 20  X_20    64 non-null     float32
 21  X_21    64 non-null     float32
 22  X_22    64 non-null     float32
 23  X_23    64 non-null     float32
 24  X_24    64 non-null     float32
 25  X_25    64 non-null     float32
 26  X_26    64 non-null     float32
 27  X_27    64 non-null     float32
 28  X_28    64 non-null     float32
 29  X_29    64 non-null     float32
 30  X_30    64 non-null     float32
 31  X_31    64 non-null     float32
 32  X_32    64 non-null     float32
 33  X_33    64 non-null     float32
 34  X_34    64 non-null     float32
 35  X_35    64 non-null     float32
 36  X_36    64 non-null     float32
 37  X_37    64 non-null     float32
 38  X_38    64 non-null     float32
 39  X_39    64 non-null     float32
 40  X_40    64 non-null     float32
 41  X_41    64 non-null     float32
 42  X_42    64 non-null     float32
 43  X_43    64 non-null     float32
 44  X_44    64 non-null     float32
 45  X_45    64 non-null     float32
 46  X_46    64 non-null     float32
 47  X_47    64 non-null     float32
 48  X_48    64 non-null     float32
 49  X_49    64 non-null     float32
 50  X_50    64 non-null     float32
 51  X_51    64 non-null     float32
 52  X_52    64 non-null     float32
 53  X_53    64 non-null     float32
 54  X_54    64 non-null     float32
 55  X_55    64 non-null     float32
 56  X_56    64 non-null     float32
 57  X_57    64 non-null     float32
 58  X_58    64 non-null     float32
 59  X_59    64 non-null     float32
 60  X_60    64 non-null     float32
 61  X_61    64 non-null     float32
 62  X_62    64 non-null     float32
 63  X_63    64 non-null     float32
 64  X_64    64 non-null     float32
 65  X_65    64 non-null     float32
 66  X_66    64 non-null     float32
 67  X_67    64 non-null     float32
 68  X_68    64 non-null     float32
 69  X_69    64 non-null     float32
 70  X_70    64 non-null     float32
 71  X_71    64 non-null     float32
 72  X_72    64 non-null     float32
 73  X_73    64 non-null     float32
 74  X_74    64 non-null     float32
 75  X_75    64 non-null     float32
 76  X_76    64 non-null     float32
 77  X_77    64 non-null     float32
 78  X_78    64 non-null     float32
 79  X_79    64 non-null     float32
 80  X_80    64 non-null     float32
 81  X_81    64 non-null     float32
 82  X_82    64 non-null     float32
 83  X_83    64 non-null     float32
 84  X_84    64 non-null     float32
 85  X_85    64 non-null     float32
 86  X_86    64 non-null     float32
 87  X_87    64 non-null     float32
 88  X_88    64 non-null     float32
 89  X_89    64 non-null     float32
 90  X_90    64 non-null     float32
 91  X_91    64 non-null     float32
 92  X_92    64 non-null     float32
 93  X_93    64 non-null     float32
 94  X_94    64 non-null     float32
 95  X_95    64 non-null     float32
 96  X_96    64 non-null     float32
 97  X_97    64 non-null     float32
 98  X_98    64 non-null     float32
 99  X_99    64 non-null     float32
dtypes: float32(100)
memory usage: 25.5 KB
            X_0       X_1       X_2  ...      X_97      X_98      X_99
index                                ...                              
0     -0.301125  1.387725  1.263659  ... -1.981716 -0.345798  0.839573
1     -0.155583 -1.181091  2.934304  ... -0.649000 -1.884572 -0.938959
2      1.079390 -0.496549 -1.240677  ...  0.679748 -0.569426  0.970424
3     -1.027789 -0.022726  0.110301  ...  0.799355  2.721471 -0.697773
4      0.155319  0.126152  0.905780  ... -0.735563  1.218228  0.672223
...         ...       ...       ...  ...       ...       ...       ...
59     0.389605 -0.609059 -0.373385  ... -0.604041 -0.652537  0.037929
60    -0.553760 -0.158459  0.247315  ... -0.288628  0.434919 -1.537177
61     0.261579  0.836463  0.899340  ... -1.099828 -0.770119 -0.320833
62     0.578196 -0.097941  0.019108  ... -1.473781  1.115285  0.315342
63    -0.080896  0.160145  1.489779  ...  0.926896 -0.028132  0.637110

[64 rows x 100 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 64 entries, 0 to 63
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      64 non-null     int64  
 1   Estimator  64 non-null     float64
dtypes: float64(1), int64(1)
memory usage: 1.1 KB
    index  Estimator
0       0  -0.459044
1       1  -0.386896
2       2  -0.152793
3       3  -0.591620
4       4  -0.512669
..    ...        ...
59     59  -0.412070
60     60  -0.943121
61     61  -0.804128
62     62  -0.191097
63     63   0.485284

[64 rows x 2 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('RandomReg_100_small', 'MLPRegressor') Estimator 9.395321084234437e-07
    index  SQL_Estimator  Py_Estimator     SQL_Error
48     48      -0.055066     -0.055066  8.804090e-08
49     49      -0.334422     -0.334425  2.953039e-06
50     50      -0.407078     -0.407077 -1.235776e-06
51     51      -0.036623     -0.036621 -1.586914e-06
52     52      -0.191097     -0.191098  4.513192e-07
53     53      -0.152478     -0.152479  7.807366e-07
54     54      -0.307072     -0.307072  9.146428e-08
55     55      -0.140449     -0.140449 -1.964286e-08
56     56      -0.034966     -0.034967  2.185248e-07
57     57      -0.777201     -0.777203  2.269807e-06
58     58      -0.191097     -0.191098  4.513192e-07
59     59      -0.412070     -0.412071  3.059009e-07
60     60      -0.943121     -0.943121  9.532630e-08
61     61      -0.804128     -0.804131  2.469254e-06
62     62      -0.191097     -0.191098  4.513192e-07
63     63       0.485284      0.485289 -5.292365e-06
MLLITE_REG_SQL_EXECUTION_STATUS ('RandomReg_100_small', 'MLPRegressor', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/regression/MLPRegressor/mllite.MLPRegressor_RandomReg_100_small_option_1_pgsql.sql'



SQL_OUT_PUT_FIRST_LINES_START ('RandomReg_100_small', 'MLPRegressor', 'pgsql')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('RandomReg_100_small', 'MLPRegressor', 'pgsql')
SQL_OUT_PUT_LAST_LINES_START ('RandomReg_100_small', 'MLPRegressor', 'pgsql')
-0.215225 * t."OUT_4"  + 0.060747 * t."OUT_5"  + 0.189546 * t."OUT_6"  + -0.557871 * t."OUT_7" AS "OUT_5"
   FROM "Hidden_Layer_2_Activation" AS t
 ),
"Hidden_Layer_3_Activation" AS
 ( SELECT
    t."index" as "index",
    CASE WHEN (t."OUT_0" > 0) THEN t."OUT_0" ELSE 0 END AS "OUT_0",
    CASE WHEN (t."OUT_1" > 0) THEN t."OUT_1" ELSE 0 END AS "OUT_1",
    CASE WHEN (t."OUT_2" > 0) THEN t."OUT_2" ELSE 0 END AS "OUT_2",
    CASE WHEN (t."OUT_3" > 0) THEN t."OUT_3" ELSE 0 END AS "OUT_3",
    CASE WHEN (t."OUT_4" > 0) THEN t."OUT_4" ELSE 0 END AS "OUT_4",
    CASE WHEN (t."OUT_5" > 0) THEN t."OUT_5" ELSE 0 END AS "OUT_5"
   FROM "Hidden_Layer_3_BA" AS t
 ),
"Output_Layer_BA" AS
 ( SELECT
    t."index" as "index",
    -0.686831 + -0.498856 * t."OUT_0"  + 0.880066 * t."OUT_1"  + 0.377459 * t."OUT_2"  + 0.804455 * t."OUT_3"  + -0.570761 * t."OUT_4"  + 0.571001 * t."OUT_5" AS "OUT_0"
   FROM "Hidden_Layer_3_Activation" AS t
 )
 SELECT
    t."index" AS "index",
    t.OUT_0 AS "Estimator"
  FROM "Output_Layer_BA" AS t

SQL_OUT_PUT_LAST_LINES_END ('RandomReg_100_small', 'MLPRegressor', 'pgsql') 




COPY_TRAINING_DATA_TO_SQLITE_START
