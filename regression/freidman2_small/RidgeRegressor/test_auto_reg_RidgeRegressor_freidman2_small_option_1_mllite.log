          X_0          X_1       X_2        X_3      target
0   17.761710   423.498320  0.135270  10.148129   59.976816
1   45.437614   168.841197  0.343817   3.279963   73.717247
2   69.792322   473.447926  0.233546   3.411073  130.755488
3   67.667095   938.672588  0.652046   9.523154  615.786950
4   55.118421  1002.086076  0.726658   4.570617  730.257013
..        ...          ...       ...        ...         ...
59  82.923828  1535.997616  0.287537   7.396835  449.374075
60  17.167281  1104.656206  0.421381   6.591000  465.797999
61  48.198019   353.104245  0.725143  10.405507  260.547767
62  17.373148   483.680246  0.685229   2.728044  331.885863
63   7.321981   487.752848  0.993317   5.340956  484.548354

[64 rows x 5 columns]
MLLITE_MODEL_SET_OPTIONS RidgeRegressor {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeRegressor { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeRegressor { "alpha" : 0.0000001,   , }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeRegressor None
('OPERATION_START', 'TRAINING')
[[1.77617092e+01 4.23498322e+02 1.35270208e-01 1.01481285e+01]
 [4.54376144e+01 1.68841202e+02 3.43817413e-01 3.27996254e+00]
 [6.97923203e+01 4.73447937e+02 2.33546272e-01 3.41107249e+00]
 [6.76670914e+01 9.38672607e+02 6.52046204e-01 9.52315426e+00]
 [5.51184196e+01 1.00208606e+03 7.26658285e-01 4.57061768e+00]] [ 59.976818  73.71725  130.7555   615.7869   730.257   ]
MLLITE_FIT_USING_MODEL mllite_ridge_reg.RidgeRegressor_ff4_ff4
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_REGRESSOR_FIT' 1 2
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_REGRESSOR_FIT' 2 2
('OPERATION_END_ELAPSED', 0.008, 'TRAINING')
{ "alpha" : 0.0000001,   , }
{ "alpha" : 0.0000001,   , }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_ff4"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 4 },
	"equations" : {
			"intercept" : -368.725098,
			"coeffs" : [ -0.297991, 0.534745, 798.205750, -6.752312 ]
		}
}
WRITING_JSON_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_freidman2_small_option_1.json'

MLLITE_MODEL_SET_OPTIONS RidgeRegressor {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeRegressor { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeRegressor { "alpha" : 0.0000001,   , }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeRegressor None
MLLITE_RELOADING_MODEL mllite_ridge_reg.RidgeRegressor_ff4_ff4
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_ff4"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 4 },
	"equations" : {
			"intercept" : -368.725098,
			"coeffs" : [ -0.297991, 0.534745, 798.205750, -6.752312 ]
		}
}
BEAUTIFIED_JSON_START
{
	"dataset" : 	{
		"dataset_features" : 4,
		"dataset_rows" : 64
	},
	"equations" : 	{
		"coeffs" : [ -0.297991, 0.534745, 798.20575, -6.752312 ],
		"intercept" : -368.725098
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_ff4", "version" : "2024-W14" },
	"options" :  { "alpha" : 0.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
[-108.10433   -39.68844    27.036541  569.2246    699.8708    -32.271248
  216.67365   242.31184   341.2904   1032.9501    354.56293   767.1976
  715.73065   591.3823    783.27924   298.31268   362.2781    826.11304
 -135.58394   334.87558   -30.19539   168.54941   714.5551     59.269924
  736.3826    752.53143   600.2659    783.3972    241.5617    -25.839302
  330.68515   723.91455   507.42343   595.9108    797.84485    66.
  427.16577   414.66534   128.79288   -72.116806 1218.5436    453.81644
  134.29247  1240.344     951.0528    348.87738   867.7361    377.68622
  479.93243   259.15988   487.1575    341.6935    349.03854   113.99144
  709.5172     21.480902  742.72656   331.29968   176.58923   607.49915
  508.7128    314.2854    413.27618   646.7242  ]
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
('OPERATION_START', 'PREDICT')
[-108.10418   -39.688408   27.036678  569.22485   699.87115   -32.271095
  216.67389   242.3119    341.29047  1032.9508    354.56317   767.19806
  715.731     591.3825    783.27985   298.31317   362.27832   826.11365
 -135.58377   334.87567   -30.195208  168.54947   714.5554     59.2702
  736.3829    752.5318    600.2662    783.39746   241.56189   -25.83915
  330.68558   723.915     507.4236    595.911     797.8453     66.000244
  427.16592   414.66556   128.79309   -72.116776 1218.5441    453.8165
  134.29271  1240.3445    951.05334   348.87756   867.7364    377.6866
  479.93265   259.16006   487.158     341.6938    349.03885   113.99165
  709.51776    21.481054  742.727     331.2998    176.58957   607.49963
  508.7133    314.28546   413.27634   646.7243  ]
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
MODEL_PERFS {'class_name': 'mllite.RidgeRegressor', 'model_name': 'RidgeRegressor', 'options': '{"alpha" : 0.0000001}', 'dataset': 'freidman2_small', 'size': 64, 'mse': 14051.611, 'mae': 85.09932, 'mape': 0.44302166, 'r2': 0.8804974465954227}
WRITING_PERF_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_freidman2_small_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeRegressor', 'model_name': 'RidgeRegressor', 'options': '{"alpha" : 0.0000001}', 'dataset': 'freidman2_small', 'training_time_in_sec': 0.008, 'prediction_time_in_sec': 0.001}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 0 4
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 2 4
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 3 4
{
   "Contributions" : {
      "X_0" : [ -2.895703 ],
      "X_1" : [ -60.461052 ],
      "X_2" : [ 15.244089 ],
      "X_3" : [ 0.568831 ]   
   },
   "Most_Contributive_Features" : {
      "y" : [ 1, 2, 0, 3 ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_freidman2_small_option_1_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_freidman2_small_option_1_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('freidman2_small', 'RidgeRegressor', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "freidman2_small" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   -368.725098 + -0.297991 * t."X_0" + 0.534745 * t."X_1" + 798.205750 * t."X_2" + -6.752312 * t."X_3" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_FIRST_LINES_END ('freidman2_small', 'RidgeRegressor', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('freidman2_small', 'RidgeRegressor', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "freidman2_small" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   -368.725098 + -0.297991 * t."X_0" + 0.534745 * t."X_1" + 798.205750 * t."X_2" + -6.752312 * t."X_3" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_LAST_LINES_END ('freidman2_small', 'RidgeRegressor', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 64 entries, 0 to 63
Data columns (total 4 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     64 non-null     float32
 1   X_1     64 non-null     float32
 2   X_2     64 non-null     float32
 3   X_3     64 non-null     float32
dtypes: float32(4)
memory usage: 1.5 KB
             X_0          X_1       X_2        X_3
index                                             
0      17.761709   423.498322  0.135270  10.148129
1      45.437614   168.841202  0.343817   3.279963
2      69.792320   473.447937  0.233546   3.411072
3      67.667091   938.672607  0.652046   9.523154
4      55.118420  1002.086060  0.726658   4.570618
...          ...          ...       ...        ...
59     82.923828  1535.997559  0.287537   7.396835
60     17.167280  1104.656250  0.421381   6.591000
61     48.198017   353.104248  0.725143  10.405507
62     17.373148   483.680237  0.685229   2.728044
63      7.321981   487.752838  0.993317   5.340956

[64 rows x 4 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 64 entries, 0 to 63
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      64 non-null     int64  
 1   Estimator  64 non-null     float64
dtypes: float64(1), int64(1)
memory usage: 1.1 KB
    index   Estimator
0       0 -108.104179
1       1  -39.688408
2       2   27.036678
3       3  569.224854
4       4  699.871155
..    ...         ...
59     59  607.499634
60     60  508.713287
61     61  314.285461
62     62  413.276337
63     63  646.724304

[64 rows x 2 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('freidman2_small', 'RidgeRegressor') Estimator 0.0002765655517578125
    index  SQL_Estimator  Py_Estimator  SQL_Error
48     48     479.932648    479.932434   0.000214
49     49     259.160065    259.159882   0.000183
50     50     487.157990    487.157501   0.000488
51     51     341.693787    341.693512   0.000275
52     52     349.038849    349.038544   0.000305
53     53     113.991653    113.991440   0.000214
54     54     709.517761    709.517212   0.000549
55     55      21.481054     21.480902   0.000153
56     56     742.726990    742.726562   0.000427
57     57     331.299805    331.299683   0.000122
58     58     176.589569    176.589233   0.000336
59     59     607.499634    607.499146   0.000488
60     60     508.713287    508.712799   0.000488
61     61     314.285461    314.285400   0.000061
62     62     413.276337    413.276184   0.000153
63     63     646.724304    646.724182   0.000122
MLLITE_REG_SQL_EXECUTION_STATUS ('freidman2_small', 'RidgeRegressor', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_freidman2_small_option_1_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('freidman2_small', 'RidgeRegressor', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "freidman2_small" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   -368.725098 + -0.297991 * t."X_0" + 0.534745 * t."X_1" + 798.205750 * t."X_2" + -6.752312 * t."X_3" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_FIRST_LINES_END ('freidman2_small', 'RidgeRegressor', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('freidman2_small', 'RidgeRegressor', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "freidman2_small" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   -368.725098 + -0.297991 * t."X_0" + 0.534745 * t."X_1" + 798.205750 * t."X_2" + -6.752312 * t."X_3" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_LAST_LINES_END ('freidman2_small', 'RidgeRegressor', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 64 entries, 0 to 63
Data columns (total 4 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     64 non-null     float32
 1   X_1     64 non-null     float32
 2   X_2     64 non-null     float32
 3   X_3     64 non-null     float32
dtypes: float32(4)
memory usage: 1.5 KB
             X_0          X_1       X_2        X_3
index                                             
0      17.761709   423.498322  0.135270  10.148129
1      45.437614   168.841202  0.343817   3.279963
2      69.792320   473.447937  0.233546   3.411072
3      67.667091   938.672607  0.652046   9.523154
4      55.118420  1002.086060  0.726658   4.570618
...          ...          ...       ...        ...
59     82.923828  1535.997559  0.287537   7.396835
60     17.167280  1104.656250  0.421381   6.591000
61     48.198017   353.104248  0.725143  10.405507
62     17.373148   483.680237  0.685229   2.728044
63      7.321981   487.752838  0.993317   5.340956

[64 rows x 4 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 64 entries, 0 to 63
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      64 non-null     int64  
 1   Estimator  64 non-null     float64
dtypes: float64(1), int64(1)
memory usage: 1.1 KB
    index   Estimator
0       0 -108.104190
1       1  -39.688404
2       2   27.036687
3       3  569.224921
4       4  699.871203
..    ...         ...
59     59  607.499676
60     60  508.713243
61     61  314.285485
62     62  413.276340
63     63  646.724287

[64 rows x 2 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('freidman2_small', 'RidgeRegressor') Estimator 0.00029721661937975874
    index  SQL_Estimator  Py_Estimator  SQL_Error
48     48     479.932625    479.932434   0.000191
49     49     259.160071    259.159882   0.000190
50     50     487.158055    487.157501   0.000554
51     51     341.693819    341.693512   0.000307
52     52     349.038885    349.038544   0.000341
53     53     113.991675    113.991440   0.000235
54     54     709.517804    709.517212   0.000592
55     55      21.481046     21.480902   0.000144
56     56     742.727021    742.726562   0.000458
57     57     331.299778    331.299683   0.000095
58     58     176.589590    176.589233   0.000357
59     59     607.499676    607.499146   0.000530
60     60     508.713243    508.712799   0.000444
61     61     314.285485    314.285400   0.000085
62     62     413.276340    413.276184   0.000156
63     63     646.724287    646.724182   0.000104
MLLITE_REG_SQL_EXECUTION_STATUS ('freidman2_small', 'RidgeRegressor', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
