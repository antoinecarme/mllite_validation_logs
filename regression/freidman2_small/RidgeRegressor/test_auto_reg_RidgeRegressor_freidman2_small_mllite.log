          X_0          X_1       X_2        X_3      target
0   17.761710   423.498320  0.135270  10.148129   59.976816
1   45.437614   168.841197  0.343817   3.279963   73.717247
2   69.792322   473.447926  0.233546   3.411073  130.755488
3   67.667095   938.672588  0.652046   9.523154  615.786950
4   55.118421  1002.086076  0.726658   4.570617  730.257013
..        ...          ...       ...        ...         ...
59  82.923828  1535.997616  0.287537   7.396835  449.374075
60  17.167281  1104.656206  0.421381   6.591000  465.797999
61  48.198019   353.104245  0.725143  10.405507  260.547767
62  17.373148   483.680246  0.685229   2.728044  331.885863
63   7.321981   487.752848  0.993317   5.340956  484.548354

[64 rows x 5 columns]
MLLITE_MODEL_SET_OPTIONS RidgeRegressor None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeRegressor { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeRegressor { ,   , }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeRegressor None
('OPERATION_START', 'TRAINING')
[[1.77617092e+01 4.23498322e+02 1.35270208e-01 1.01481285e+01]
 [4.54376144e+01 1.68841202e+02 3.43817413e-01 3.27996254e+00]
 [6.97923203e+01 4.73447937e+02 2.33546272e-01 3.41107249e+00]
 [6.76670914e+01 9.38672607e+02 6.52046204e-01 9.52315426e+00]
 [5.51184196e+01 1.00208606e+03 7.26658285e-01 4.57061768e+00]] [ 59.976818  73.71725  130.7555   615.7869   730.257   ]
MLLITE_FIT_USING_MODEL mllite_ridge_reg.RidgeRegressor_ff4_ff4
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_REGRESSOR_FIT' 1 2
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_REGRESSOR_FIT' 2 2
('OPERATION_END_ELAPSED', 0.008, 'TRAINING')
{ ,   , }
{ ,   , }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_ff4"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 4 },
	"equations" : {
			"intercept" : -356.365356,
			"coeffs" : [ -0.292615, 0.526317, 785.624817, -6.595192 ]
		}
}
WRITING_JSON_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_freidman2_small.json'

MLLITE_MODEL_SET_OPTIONS RidgeRegressor None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeRegressor { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeRegressor { ,   , }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeRegressor None
MLLITE_RELOADING_MODEL mllite_ridge_reg.RidgeRegressor_ff4_ff4
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_ff4"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 4 },
	"equations" : {
			"intercept" : -356.365356,
			"coeffs" : [ -0.292615, 0.526317, 785.624817, -6.595192 ]
		}
}
BEAUTIFIED_JSON_START
{
	"dataset" : 	{
		"dataset_features" : 4,
		"dataset_rows" : 64
	},
	"equations" : 	{
		"coeffs" : [ -0.292615, 0.526317, 785.624817, -6.595192 ],
		"intercept" : -356.365356
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_ff4", "version" : "2024-W12" },
	"options" :  { "alpha" : 1.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
[ -99.32556   -32.31759    33.379116  567.3302    695.6577    -24.746544
  220.14568   245.54144   342.8011   1023.70917   355.77747   761.9707
  711.1458    589.0247    777.7039    300.71445   363.40613   819.7919
 -126.779526  336.2858    -23.040852  172.71236   709.9713     65.02646
  731.4094    747.48444   597.81506   777.818     244.4408    -18.480171
  332.42044   719.2929    506.33548   593.6327    792.10425    72.039734
  427.29688   415.23083   133.69572   -64.09476  1206.2987    453.47025
  138.90822  1227.6044    942.8191    350.193     860.8035    378.75143
  479.18256   261.728     486.60095   343.38507   350.53717   118.831055
  705.1112     27.828096  737.739     333.20108   180.5741    604.9044
  507.58932   316.44028   413.46085   643.3549  ]
('OPERATION_END_ELAPSED', 0.002, 'PREDICT')
('OPERATION_START', 'PREDICT')
[ -99.32558   -32.31756    33.379147  567.3302    695.6578    -24.746513
  220.14568   245.54144   342.80106  1023.7093    355.77753   761.9708
  711.14594   589.0247    777.704     300.7145    363.40613   819.792
 -126.779495  336.28577   -23.040821  172.71236   709.9714     65.02646
  731.4095    747.4845    597.81506   777.818     244.4408    -18.48014
  332.4205    719.29297   506.33548   593.6327    792.1043     72.039764
  427.2969    415.23083   133.69576   -64.09476  1206.2988    453.47028
  138.90825  1227.6044    942.8192    350.19302   860.8035    378.75146
  479.18262   261.72803   486.60107   343.38507   350.53723   118.831085
  705.1113     27.828112  737.73914   333.20108   180.57413   604.9045
  507.58945   316.44034   413.46085   643.355   ]
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
MODEL_PERFS {'class_name': 'mllite.RidgeRegressor', 'model_name': 'RidgeRegressor', 'options': None, 'dataset': 'freidman2_small', 'size': 64, 'mse': 14077.45, 'mae': 84.975266, 'mape': 0.43126345, 'r2': 0.8802777036746928}
WRITING_PERF_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_freidman2_small.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeRegressor', 'model_name': 'RidgeRegressor', 'options': None, 'dataset': 'freidman2_small', 'training_time_in_sec': 0.008, 'prediction_time_in_sec': 0.001}
WRITING_SQL_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_freidman2_small.sql'



SQL_OUT_PUT_FIRST_LINES_START
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  model_input."index" AS "index",
   -356.365356 + -0.292615 * X_0 + 0.526317 * X_1 + 785.624817 * X_2 + -6.595192 * X_3 AS "Estimator"
  FROM model_input
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_FIRST_LINES_END
SQL_OUT_PUT_LAST_LINES_START
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  model_input."index" AS "index",
   -356.365356 + -0.292615 * X_0 + 0.526317 * X_1 + 785.624817 * X_2 + -6.595192 * X_3 AS "Estimator"
  FROM model_input
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_LAST_LINES_END




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 64 entries, 0 to 63
Data columns (total 4 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     64 non-null     float32
 1   X_1     64 non-null     float32
 2   X_2     64 non-null     float32
 3   X_3     64 non-null     float32
dtypes: float32(4)
memory usage: 1.5 KB
             X_0          X_1       X_2        X_3
index                                             
0      17.761709   423.498322  0.135270  10.148129
1      45.437614   168.841202  0.343817   3.279963
2      69.792320   473.447937  0.233546   3.411072
3      67.667091   938.672607  0.652046   9.523154
4      55.118420  1002.086060  0.726658   4.570618
...          ...          ...       ...        ...
59     82.923828  1535.997559  0.287537   7.396835
60     17.167280  1104.656250  0.421381   6.591000
61     48.198017   353.104248  0.725143  10.405507
62     17.373148   483.680237  0.685229   2.728044
63      7.321981   487.752838  0.993317   5.340956

[64 rows x 4 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 64 entries, 0 to 63
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      64 non-null     int64  
 1   Estimator  64 non-null     float64
dtypes: float64(1), int64(1)
memory usage: 1.1 KB
    index   Estimator
0       0  -99.325556
1       1  -32.317579
2       2   33.379131
3       3  567.330237
4       4  695.657777
..    ...         ...
59     59  604.904530
60     60  507.589439
61     61  316.440309
62     62  413.460837
63     63  643.354922

[64 rows x 2 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
    index  SQL_Estimator  Py_Estimator
48     48     479.182610    479.182556
49     49     261.728012    261.727997
50     50     486.601068    486.600952
51     51     343.385094    343.385071
52     52     350.537245    350.537170
53     53     118.831105    118.831055
54     54     705.111342    705.111206
55     55      27.828108     27.828096
56     56     737.739110    737.739014
57     57     333.201095    333.201080
58     58     180.574130    180.574097
59     59     604.904530    604.904419
60     60     507.589439    507.589325
61     61     316.440309    316.440277
62     62     413.460837    413.460846
63     63     643.354922    643.354919
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
