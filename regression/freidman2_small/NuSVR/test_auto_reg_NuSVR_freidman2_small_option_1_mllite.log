          X_0          X_1       X_2        X_3      target
0   17.761710   423.498320  0.135270  10.148129   59.976816
1   45.437614   168.841197  0.343817   3.279963   73.717247
2   69.792322   473.447926  0.233546   3.411073  130.755488
3   67.667095   938.672588  0.652046   9.523154  615.786950
4   55.118421  1002.086076  0.726658   4.570617  730.257013
..        ...          ...       ...        ...         ...
59  82.923828  1535.997616  0.287537   7.396835  449.374075
60  17.167281  1104.656206  0.421381   6.591000  465.797999
61  48.198019   353.104245  0.725143  10.405507  260.547767
62  17.373148   483.680246  0.685229   2.728044  331.885863
63   7.321981   487.752848  0.993317   5.340956  484.548354

[64 rows x 5 columns]
MLLITE_MODEL_SET_OPTIONS NuSVR {"nu" : 0.1}
MLLITE_MODEL_OPTIONS_DEFAULT NuSVR { "max_iter" : 128 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING NuSVR { "nu" : 0.1,  "max_iter" : 128  , }
MLLITE_MODEL_JSON_AFTER_SETTING NuSVR None
('OPERATION_START', 'TRAINING')
[[1.77617092e+01 4.23498322e+02 1.35270208e-01 1.01481285e+01]
 [4.54376144e+01 1.68841202e+02 3.43817413e-01 3.27996254e+00]
 [6.97923203e+01 4.73447937e+02 2.33546272e-01 3.41107249e+00]
 [6.76670914e+01 9.38672607e+02 6.52046204e-01 9.52315426e+00]
 [5.51184196e+01 1.00208606e+03 7.26658285e-01 4.57061768e+00]] [ 59.976818  73.71725  130.7555   615.7869   730.257   ]
MLLITE_FIT_USING_MODEL mllite_nu_svm_reg.NuSVR_ff4_ff4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_NU_REGRESSOR_FIT' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_NU_REGRESSOR_FIT' 2 4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_NU_REGRESSOR_FIT' 3 4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_NU_REGRESSOR_FIT' 4 4
('OPERATION_END_ELAPSED', 0.01, 'TRAINING')
{ "nu" : 0.1,  "max_iter" : 128  , }
{ "nu" : 0.1,  "max_iter" : 128  , }
{
	"metadata" : { "model" : "Vapnik_NuSVR_RBF", "version" : "2024-W14", "signature" : "ff4_ff4"},
	"options" : {"svm_type" : "nu_svr", "kernel" : "rbf", "degree" : 3, "gamma" : 0.000001, "coef0" : 0.000000, "cache_size" : 300, "tol" : 0.001000, "nu" : 0.100000, "epsilon" : 0.000000, "shrinking" : 0, "probability" : 0, "C" : 1.000000, "max_iter" : 128, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 4 },
	"svm_model" : {
	"classes" : 2,
	"L" : 8,
	"SupportVectors" : {
		"SV_0" : [ 17.761709, 423.498322, 0.135270, 10.148129 ],
		"SV_1" : [ 45.437614, 168.841202, 0.343817, 3.279963 ],
		"SV_2" : [ 22.605108, 1660.837036, 0.731124, 9.374556 ],
		"SV_3" : [ 38.088467, 1321.297485, 0.052941, 10.429984 ],
		"SV_4" : [ 15.123654, 486.957489, 0.123542, 2.365677 ],
		"SV_5" : [ 13.316919, 1592.958618, 0.993566, 7.946761 ],
		"SV_6" : [ 92.630493, 1621.621948, 0.997097, 3.905369 ],
		"SV_7" : [ 76.371201, 1620.264648, 0.622375, 3.062019 ]
	},
	"SupportVectorsCoefs" : {
		"SV_coef_0" : [ -1.000000, -1.000000, 1.000000, -0.199998, -1.000000, 1.000000, 1.000000, 0.199998 ]
	},
	"rho" : [ -543.235474 ],
	"nSV" : [ 8 ],
	"probA" : [ ],
	"probB" : [ ],
	"n_iter" : [ 9 ]
}
}
WRITING_JSON_CODE 'logs/auto_tests/regression/NuSVR/mllite.NuSVR_freidman2_small_option_1.json'

MLLITE_MODEL_SET_OPTIONS NuSVR {"nu" : 0.1}
MLLITE_MODEL_OPTIONS_DEFAULT NuSVR { "max_iter" : 128 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING NuSVR { "nu" : 0.1,  "max_iter" : 128  , }
MLLITE_MODEL_JSON_AFTER_SETTING NuSVR None
MLLITE_RELOADING_MODEL mllite_nu_svm_reg.NuSVR_ff4_ff4
{
	"metadata" : { "model" : "Vapnik_NuSVR_RBF", "version" : "2024-W14", "signature" : "ff4_ff4"},
	"options" : {"svm_type" : "nu_svr", "kernel" : "rbf", "degree" : 3, "gamma" : 0.000001, "coef0" : 0.000000, "cache_size" : 300, "tol" : 0.001000, "nu" : 0.100000, "epsilon" : 0.000000, "shrinking" : 0, "probability" : 0, "C" : 1.000000, "max_iter" : 128, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 4 },
	"svm_model" : {
	"classes" : 2,
	"L" : 8,
	"SupportVectors" : {
		"SV_0" : [ 17.761709, 423.498322, 0.135270, 10.148129 ],
		"SV_1" : [ 45.437614, 168.841202, 0.343817, 3.279963 ],
		"SV_2" : [ 22.605108, 1660.837036, 0.731124, 9.374556 ],
		"SV_3" : [ 38.088467, 1321.297485, 0.052941, 10.429984 ],
		"SV_4" : [ 15.123654, 486.957489, 0.123542, 2.365677 ],
		"SV_5" : [ 13.316919, 1592.958618, 0.993566, 7.946761 ],
		"SV_6" : [ 92.630493, 1621.621948, 0.997097, 3.905369 ],
		"SV_7" : [ 76.371201, 1620.264648, 0.622375, 3.062019 ]
	},
	"SupportVectorsCoefs" : {
		"SV_coef_0" : [ -1.000000, -1.000000, 1.000000, -0.199998, -1.000000, 1.000000, 1.000000, 0.199998 ]
	},
	"rho" : [ -543.235474 ],
	"nSV" : [ 8 ],
	"probA" : [ ],
	"probB" : [ ],
	"n_iter" : [ 9 ]
}
}
BEAUTIFIED_JSON_START
{
	"dataset" : 	{
		"dataset_features" : 4,
		"dataset_rows" : 64
	},
	"metadata" :  { "model" : "Vapnik_NuSVR_RBF", "signature" : "ff4_ff4", "version" : "2024-W14" },
	"options" :  { "C" : 1.0, "cache_size" : 300, "coef0" : 0.0, "degree" : 3, "epsilon" : 0.0, "gamma" : 1e-06, "kernel" : "rbf", "max_iter" : 128, "nu" : 0.1, "probability" : 0, "random_state" : 1789, "shrinking" : 0, "svm_type" : "nu_svr", "tol" : 0.001 },
	"svm_model" : 	{
		"L" : 8,
		"SupportVectors" : 	{
			"SV_0" : [ 17.761709, 423.498322, 0.13527, 10.148129 ],
			"SV_1" : [ 45.437614, 168.841202, 0.343817, 3.279963 ],
			"SV_2" : [ 22.605108, 1660.837036, 0.731124, 9.374556 ],
			"SV_3" : [ 38.088467, 1321.297485, 0.052941, 10.429984 ],
			"SV_4" : [ 15.123654, 486.957489, 0.123542, 2.365677 ],
			"SV_5" : [ 13.316919, 1592.958618, 0.993566, 7.946761 ],
			"SV_6" : [ 92.630493, 1621.621948, 0.997097, 3.905369 ],
			"SV_7" : [ 76.371201, 1620.264648, 0.622375, 3.062019 ]
		},
		"SupportVectorsCoefs" : 	{
			"SV_coef_0" : [ -1.0, -1.0, 1.0, -0.199998, -1.0, 1.0, 1.0, 0.199998 ]
		},
		"classes" : 2,
		"nSV" : [ 8 ],
		"n_iter" : [ 9 ],
		"probA" : [  ],
		"probB" : [  ],
		"rho" : [ -543.235474 ]
	}
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
[540.6546  540.58044 540.7611  542.8417  543.2236  540.91406 542.1237
 540.5492  540.54565 545.97534 541.2961  543.884   544.1767  541.39453
 545.8579  545.0174  541.63184 546.0017  540.69916 540.54297 540.7844
 540.5466  542.9479  542.4171  541.46234 544.18195 542.8068  541.81744
 540.7528  540.69226 544.0187  543.94446 541.1879  541.7647  545.40015
 541.5613  540.8996  540.90515 541.2626  540.6429  545.889   540.5562
 541.4302  545.9283  545.93115 540.9848  542.58044 544.68744 541.2303
 540.8831  545.1804  541.9627  542.5431  541.41223 545.9977  540.6633
 544.69196 540.558   543.5117  545.77606 543.8404  540.5664  540.7765
 540.7869 ]
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
('OPERATION_START', 'PREDICT')
[540.96906 540.72766 541.0851  542.92694 543.24335 541.2437  542.3254
 540.7299  540.73785 545.669   541.6037  543.78876 544.0308  541.68854
 545.52124 544.73865 541.8989  545.75726 541.0158  540.788   541.1128
 540.7346  543.0154  542.57184 541.75275 544.0353  542.8984  542.06274
 541.079   541.01245 543.9001  543.8391  541.5006  542.0165  545.0763
 541.83856 541.2268  541.2357  541.57336 540.7475  545.55664 540.73615
 541.7242  545.6078  545.60803 541.30884 542.7098  544.4585  541.54236
 541.2136  544.88043 542.1884  542.67865 541.7082  545.7106  540.9791
 544.4614  540.8242  543.48126 545.4349  543.7526  540.8505  541.10455
 541.115  ]
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
MODEL_PERFS {'class_name': 'mllite.NuSVR', 'model_name': 'NuSVR', 'options': '{"nu" : 0.1}', 'dataset': 'freidman2_small', 'size': 64, 'mse': 128208.8, 'mae': 299.2583, 'mape': 1.6616498, 'r2': -0.09035741698518174}
WRITING_PERF_CODE 'logs/auto_tests/regression/NuSVR/mllite.NuSVR_freidman2_small_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.NuSVR', 'model_name': 'NuSVR', 'options': '{"nu" : 0.1}', 'dataset': 'freidman2_small', 'training_time_in_sec': 0.01, 'prediction_time_in_sec': 0.001}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 0 4
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 2 4
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 3 4
{
   "Contributions" : {
      "X_0" : [ 0.001995 ],
      "X_1" : [ -0.583358 ],
      "X_2" : [ 0.000000 ],
      "X_3" : [ -0.000000 ]   
   },
   "Most_Contributive_Features" : {
      "y" : [ 1, 0, 2, 3 ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/regression/NuSVR/mllite.NuSVR_freidman2_small_option_1_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/regression/NuSVR/mllite.NuSVR_freidman2_small_option_1_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('freidman2_small', 'NuSVR', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "freidman2_small" AS "ADS" 
 )
,"SV_data" AS
 ( SELECT 
   "Values"."sv_idx" AS "sv_idx",
   "Values"."coeff" AS "coeff",
   "Values"."sv_0" AS "sv_0",
   "Values"."sv_1" AS "sv_1",
   "Values"."sv_2" AS "sv_2",
   "Values"."sv_3" AS "sv_3"
  FROM
  (
     SELECT 0 AS "sv_idx", -1.000000 AS "coeff", 17.761709 AS "sv_0", 423.498322 AS "sv_1", 0.135270 AS "sv_2", 10.148129 AS "sv_3"
     UNION ALL
     SELECT 1 AS "sv_idx", -1.000000 AS "coeff", 45.437614 AS "sv_0", 168.841202 AS "sv_1", 0.343817 AS "sv_2", 3.279963 AS "sv_3"
     UNION ALL
     SELECT 2 AS "sv_idx", 1.000000 AS "coeff", 22.605108 AS "sv_0", 1660.837036 AS "sv_1", 0.731124 AS "sv_2", 9.374556 AS "sv_3"
     UNION ALL
     SELECT 3 AS "sv_idx", -0.199998 AS "coeff", 38.088467 AS "sv_0", 1321.297485 AS "sv_1", 0.052941 AS "sv_2", 10.429
SQL_OUT_PUT_FIRST_LINES_END ('freidman2_small', 'NuSVR', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('freidman2_small', 'NuSVR', 'duckdb')
369 AS "sv_3"
     UNION ALL
     SELECT 7 AS "sv_idx", 0.199998 AS "coeff", 76.371201 AS "sv_0", 1620.264648 AS "sv_1", 0.622375 AS "sv_2", 3.062019 AS "sv_3"
   ) AS "Values"
 )
,"Kernel_DotProd" AS
 ( SELECT
    dp."index" as "index",
    dp."dot_product" AS "Estimator"
   FROM
    (SELECT
      full_join_data_sv."index" AS "index",
      sum(CAST(full_join_data_sv.dot_prod AS FLOAT)) - -543.235474 AS dot_product
     FROM
       (SELECT
          model_input."index" AS "index",
          "SV_data"."coeff" *  EXP( LEAST( GREATEST( CAST(-32.0 AS FLOAT), -0.000001 * (power(model_input."X_0" - "SV_data".sv_0, 2) + power(model_input."X_1" - "SV_data".sv_1, 2) + power(model_input."X_2" - "SV_data".sv_2, 2) + power(model_input."X_3" - "SV_data".sv_3, 2)) ), CAST(32.0 AS FLOAT) ) )  AS "dot_prod" 
        FROM
          model_input, "SV_data"
       ) AS full_join_data_sv
     GROUP BY full_join_data_sv."index"
    ) AS dp )
SELECT
  t."index" as "index",
  t."Estimator" as "Estimator"
FROM "Kernel_DotProd" AS t

SQL_OUT_PUT_LAST_LINES_END ('freidman2_small', 'NuSVR', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 64 entries, 0 to 63
Data columns (total 4 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     64 non-null     float32
 1   X_1     64 non-null     float32
 2   X_2     64 non-null     float32
 3   X_3     64 non-null     float32
dtypes: float32(4)
memory usage: 1.5 KB
             X_0          X_1       X_2        X_3
index                                             
0      17.761709   423.498322  0.135270  10.148129
1      45.437614   168.841202  0.343817   3.279963
2      69.792320   473.447937  0.233546   3.411072
3      67.667091   938.672607  0.652046   9.523154
4      55.118420  1002.086060  0.726658   4.570618
...          ...          ...       ...        ...
59     82.923828  1535.997559  0.287537   7.396835
60     17.167280  1104.656250  0.421381   6.591000
61     48.198017   353.104248  0.725143  10.405507
62     17.373148   483.680237  0.685229   2.728044
63      7.321981   487.752838  0.993317   5.340956

[64 rows x 4 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 64 entries, 0 to 63
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      64 non-null     int64  
 1   Estimator  64 non-null     float64
dtypes: float64(1), int64(1)
memory usage: 1.1 KB
    index   Estimator
0       0  540.969086
1       1  540.727662
2       2  541.085060
3       3  542.926912
4       4  543.243357
..    ...         ...
59     59  545.434881
60     60  543.752610
61     61  540.850554
62     62  541.104537
63     63  541.115015

[64 rows x 2 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('freidman2_small', 'NuSVR') Estimator 0.24196186138358655
    index  SQL_Estimator  Py_Estimator  SQL_Error
48     48     541.542364    541.230286   0.312078
49     49     541.213628    540.883118   0.330511
50     50     544.880447    545.180420  -0.299973
51     51     542.188425    541.962708   0.225717
52     52     542.678637    542.543091   0.135546
53     53     541.708212    541.412231   0.295980
54     54     545.710595    545.997681  -0.287086
55     55     540.979150    540.663330   0.315820
56     56     544.461435    544.691956  -0.230521
57     57     540.824239    540.557983   0.266256
58     58     543.481259    543.511719  -0.030460
59     59     545.434881    545.776062  -0.341181
60     60     543.752610    543.840393  -0.087783
61     61     540.850554    540.566406   0.284148
62     62     541.104537    540.776489   0.328048
63     63     541.115015    540.786926   0.328089
MLLITE_REG_SQL_EXECUTION_STATUS ('freidman2_small', 'NuSVR', 'Failure')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/regression/NuSVR/mllite.NuSVR_freidman2_small_option_1_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('freidman2_small', 'NuSVR', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "freidman2_small" AS "ADS" 
 )
,"SV_data" AS
 ( SELECT 
   "Values"."sv_idx" AS "sv_idx",
   "Values"."coeff" AS "coeff",
   "Values"."sv_0" AS "sv_0",
   "Values"."sv_1" AS "sv_1",
   "Values"."sv_2" AS "sv_2",
   "Values"."sv_3" AS "sv_3"
  FROM
  (
     SELECT 0 AS "sv_idx", -1.000000 AS "coeff", 17.761709 AS "sv_0", 423.498322 AS "sv_1", 0.135270 AS "sv_2", 10.148129 AS "sv_3"
     UNION ALL
     SELECT 1 AS "sv_idx", -1.000000 AS "coeff", 45.437614 AS "sv_0", 168.841202 AS "sv_1", 0.343817 AS "sv_2", 3.279963 AS "sv_3"
     UNION ALL
     SELECT 2 AS "sv_idx", 1.000000 AS "coeff", 22.605108 AS "sv_0", 1660.837036 AS "sv_1", 0.731124 AS "sv_2", 9.374556 AS "sv_3"
     UNION ALL
     SELECT 3 AS "sv_idx", -0.199998 AS "coeff", 38.088467 AS "sv_0", 1321.297485 AS "sv_1", 0.052941 AS "sv_2", 10.429
SQL_OUT_PUT_FIRST_LINES_END ('freidman2_small', 'NuSVR', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('freidman2_small', 'NuSVR', 'sqlite')
, 3.905369 AS "sv_3"
     UNION ALL
     SELECT 7 AS "sv_idx", 0.199998 AS "coeff", 76.371201 AS "sv_0", 1620.264648 AS "sv_1", 0.622375 AS "sv_2", 3.062019 AS "sv_3"
   ) AS "Values"
 )
,"Kernel_DotProd" AS
 ( SELECT
    dp."index" as "index",
    dp."dot_product" AS "Estimator"
   FROM
    (SELECT
      full_join_data_sv."index" AS "index",
      sum(CAST(full_join_data_sv.dot_prod AS FLOAT)) - -543.235474 AS dot_product
     FROM
       (SELECT
          model_input."index" AS "index",
          "SV_data"."coeff" *  EXP( MIN( MAX( CAST(-32.0 AS FLOAT), -0.000001 * (power(model_input."X_0" - "SV_data".sv_0, 2) + power(model_input."X_1" - "SV_data".sv_1, 2) + power(model_input."X_2" - "SV_data".sv_2, 2) + power(model_input."X_3" - "SV_data".sv_3, 2)) ), CAST(32.0 AS FLOAT) ) )  AS "dot_prod" 
        FROM
          model_input, "SV_data"
       ) AS full_join_data_sv
     GROUP BY full_join_data_sv."index"
    ) AS dp )
SELECT
  t."index" as "index",
  t."Estimator" as "Estimator"
FROM "Kernel_DotProd" AS t

SQL_OUT_PUT_LAST_LINES_END ('freidman2_small', 'NuSVR', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 64 entries, 0 to 63
Data columns (total 4 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     64 non-null     float32
 1   X_1     64 non-null     float32
 2   X_2     64 non-null     float32
 3   X_3     64 non-null     float32
dtypes: float32(4)
memory usage: 1.5 KB
             X_0          X_1       X_2        X_3
index                                             
0      17.761709   423.498322  0.135270  10.148129
1      45.437614   168.841202  0.343817   3.279963
2      69.792320   473.447937  0.233546   3.411072
3      67.667091   938.672607  0.652046   9.523154
4      55.118420  1002.086060  0.726658   4.570618
...          ...          ...       ...        ...
59     82.923828  1535.997559  0.287537   7.396835
60     17.167280  1104.656250  0.421381   6.591000
61     48.198017   353.104248  0.725143  10.405507
62     17.373148   483.680237  0.685229   2.728044
63      7.321981   487.752838  0.993317   5.340956

[64 rows x 4 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 64 entries, 0 to 63
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      64 non-null     int64  
 1   Estimator  64 non-null     float64
dtypes: float64(1), int64(1)
memory usage: 1.1 KB
    index   Estimator
0       0  540.969086
1       1  540.727662
2       2  541.085060
3       3  542.926912
4       4  543.243357
..    ...         ...
59     59  545.434881
60     60  543.752610
61     61  540.850554
62     62  541.104537
63     63  541.115015

[64 rows x 2 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('freidman2_small', 'NuSVR') Estimator 0.24196186711845513
    index  SQL_Estimator  Py_Estimator  SQL_Error
48     48     541.542364    541.230286   0.312078
49     49     541.213628    540.883118   0.330511
50     50     544.880447    545.180420  -0.299973
51     51     542.188425    541.962708   0.225717
52     52     542.678637    542.543091   0.135546
53     53     541.708212    541.412231   0.295980
54     54     545.710595    545.997681  -0.287086
55     55     540.979150    540.663330   0.315820
56     56     544.461435    544.691956  -0.230521
57     57     540.824239    540.557983   0.266256
58     58     543.481259    543.511719  -0.030460
59     59     545.434881    545.776062  -0.341181
60     60     543.752610    543.840393  -0.087783
61     61     540.850554    540.566406   0.284148
62     62     541.104537    540.776489   0.328048
63     63     541.115015    540.786926   0.328089
MLLITE_REG_SQL_EXECUTION_STATUS ('freidman2_small', 'NuSVR', 'Failure')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
