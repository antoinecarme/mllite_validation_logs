       longitude  latitude  ...  ocean_proximity    target
0              1         8  ...                0  452600.0
1              1         7  ...                0  358500.0
2              1         7  ...                0  352100.0
3              1         7  ...                0  341300.0
4              1         7  ...                0  342200.0
...          ...       ...  ...              ...       ...
20635          3         9  ...                0   78100.0
20636          3         9  ...                0   77100.0
20637          3         9  ...                0   92300.0
20638          3         9  ...                0   84700.0
20639          3         9  ...                0   89400.0

[20640 rows x 10 columns]
MLLITE_MODEL_SET_OPTIONS MLPRegressor {"hidden_layer_sizes" : [4, 8, 6]}
MLLITE_MODEL_OPTIONS_DEFAULT MLPRegressor { "max_iter" : 32}
MLLITE_MODEL_OPTIONS_AFTER_SETTING MLPRegressor { "hidden_layer_sizes" : [4, 8, 6],  "max_iter" : 32 , }
MLLITE_MODEL_JSON_AFTER_SETTING MLPRegressor None
('OPERATION_START', 'TRAINING')
[[ 1.  8.  8.  0.  0.  0.  0.  9.  0.]
 [ 1.  7.  3.  8.  8.  8.  8.  9.  0.]
 [ 1.  7. 10.  2.  1.  1.  1.  9.  0.]
 [ 1.  7. 10.  1.  1.  1.  1.  8.  0.]
 [ 1.  7. 10.  3.  2.  1.  2.  5.  0.]] [452600. 358500. 352100. 341300. 342200.]
MLLITE_FIT_USING_MODEL mllite_mlp_reg.MLPRegressor_ff4_ff4
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT' 1 3
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT' 2 3
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 3 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 6 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 9 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 12 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 15 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 18 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 21 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 24 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 27 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 30 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 32 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT' 3 3
('OPERATION_END_ELAPSED', 1.956, 'TRAINING')
{ "hidden_layer_sizes" : [4, 8, 6],  "max_iter" : 32 , }
{ "hidden_layer_sizes" : [4, 8, 6],  "max_iter" : 32 , }
{
	"metadata" : { "model" : "Rosenblatt_MLP", "version" : "2024-W14", "signature" : "ff4_ff4"},
	"options" : {  "hidden_layer_sizes" : [ 4, 8, 6 ], "activation" : "relu", "solver" : "adam", "alpha" : 0.000100, "batch_size" : null, "learning_rate" : "constant", "learning_rate_init" : 0.001000, "power_t" : 0.500000, "max_iter" : 32, "shuffle" : 1, "random_state" : 1789, "tol" : 0.000100, "verbose" : 0, "warm_start" : 0, "momentum" : 0.900000, "nesterovs_momentum" : 1, "early_stopping" : 0, "validation_fraction" : 0.100000, "beta_1" : 0.900000, "beta_2" : 0.999000, "epsilon" : 0.000000, "n_iter_no_change" : 10, "max_fun" : 15000 },
	"dataset" : { "dataset_rows" : 20640, "dataset_features" : 9 },
	"layers" : {
		"sizes" : [ 9, 4, 8, 6, 1 ],
		"Layer_0" : {
			"name" : "Input_Layer",
			"NbInputs" : 0,
			"NbOutputs" : 9 
		},
		"Layer_1" : {
			"name" : "Hidden_Layer_1",
			"NbInputs" : 9,
			"NbOutputs" : 4 ,
			"coeffs_0" : [ 3.417812, 3.762085, 3.378301, -0.146692 ],
			"coeffs_1" : [ 3.547992, 2.998938, 3.783093, -0.086543 ],
			"coeffs_2" : [ 4.200163, 3.839312, 4.342832, -0.172857 ],
			"coeffs_3" : [ 4.392549, 3.111447, 3.621760, 0.116349 ],
			"coeffs_4" : [ 4.012508, 3.336857, 3.498094, -0.641127 ],
			"coeffs_5" : [ 3.949975, 3.034612, 3.734037, -0.110444 ],
			"coeffs_6" : [ 3.514181, 3.051921, 3.486435, 0.416138 ],
			"coeffs_7" : [ 3.848531, 3.861544, 3.474169, -0.064475 ],
			"coeffs_8" : [ -0.207529, 0.250686, -0.136696, 0.287646 ],
			"intercepts" : [ 3.553368, 4.548369, 3.685090, 0.248894 ]
		},
		"Layer_2" : {
			"name" : "Hidden_Layer_2",
			"NbInputs" : 4,
			"NbOutputs" : 8 ,
			"coeffs_0" : [ -0.650690, 3.942145, 4.291213, 4.262103, -0.566920, 3.216906, 4.053698, 4.344166 ],
			"coeffs_1" : [ 0.334583, 4.533099, 4.698137, 3.505637, 0.307122, 4.395653, 3.566990, 4.500881 ],
			"coeffs_2" : [ 0.020182, 3.638825, 4.276516, 4.068218, -0.669758, 4.054584, 4.292100, 4.584271 ],
			"coeffs_3" : [ -0.622213, 0.450718, -0.313527, -0.689870, 0.662070, 0.741074, -0.123405, -0.511435 ],
			"intercepts" : [ -0.188807, 3.803920, 3.279636, 3.489564, 0.089189, 3.741054, 4.032317, 3.398947 ]
		},
		"Layer_3" : {
			"name" : "Hidden_Layer_3",
			"NbInputs" : 8,
			"NbOutputs" : 6 ,
			"coeffs_0" : [ 0.183205, 0.361514, 0.474259, -0.079657, -0.528743, 0.212349 ],
			"coeffs_1" : [ -0.156827, -0.228400, -0.486111, -0.654450, 3.906557, 0.425151 ],
			"coeffs_2" : [ -0.069235, -0.244853, -0.156950, -0.224610, 4.358690, -0.448178 ],
			"coeffs_3" : [ -0.368602, -0.138365, 0.269611, -0.462554, 3.927254, 0.204730 ],
			"coeffs_4" : [ 0.270588, 0.455311, 0.470347, 0.339986, -0.262251, -0.077830 ],
			"coeffs_5" : [ 0.022265, 0.341148, 0.316447, -0.034367, 4.379720, 0.172856 ],
			"coeffs_6" : [ -0.079435, -0.244446, -0.178974, -0.359693, 4.476303, 0.188484 ],
			"coeffs_7" : [ -0.564338, 0.096917, -0.422538, -0.001729, 4.233348, -0.486400 ],
			"intercepts" : [ 0.065026, -0.730448, -0.593898, 0.450073, 3.559138, -0.602249 ]
		},
		"Layer_4" : {
			"name" : "Output_Layer",
			"NbInputs" : 6,
			"NbOutputs" : 1 ,
			"coeffs_0" : [ -0.221752 ],
			"coeffs_1" : [ -0.640628 ],
			"coeffs_2" : [ -0.702498 ],
			"coeffs_3" : [ -0.681287 ],
			"coeffs_4" : [ 4.462865 ],
			"coeffs_5" : [ -0.113922 ],
			"intercepts" : [ 1.751151 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/regression/MLPRegressor/mllite.MLPRegressor_california_housing_quantized_option_1.json'

MLLITE_MODEL_SET_OPTIONS MLPRegressor {"hidden_layer_sizes" : [4, 8, 6]}
MLLITE_MODEL_OPTIONS_DEFAULT MLPRegressor { "max_iter" : 32}
MLLITE_MODEL_OPTIONS_AFTER_SETTING MLPRegressor { "hidden_layer_sizes" : [4, 8, 6],  "max_iter" : 32 , }
MLLITE_MODEL_JSON_AFTER_SETTING MLPRegressor None
MLLITE_RELOADING_MODEL mllite_mlp_reg.MLPRegressor_ff4_ff4
{
	"metadata" : { "model" : "Rosenblatt_MLP", "version" : "2024-W14", "signature" : "ff4_ff4"},
	"options" : {  "hidden_layer_sizes" : [ 4, 8, 6 ], "activation" : "relu", "solver" : "adam", "alpha" : 0.000100, "batch_size" : null, "learning_rate" : "constant", "learning_rate_init" : 0.001000, "power_t" : 0.500000, "max_iter" : 32, "shuffle" : 1, "random_state" : 1789, "tol" : 0.000100, "verbose" : 0, "warm_start" : 0, "momentum" : 0.900000, "nesterovs_momentum" : 1, "early_stopping" : 0, "validation_fraction" : 0.100000, "beta_1" : 0.900000, "beta_2" : 0.999000, "epsilon" : 0.000000, "n_iter_no_change" : 10, "max_fun" : 15000 },
	"dataset" : { "dataset_rows" : 20640, "dataset_features" : 9 },
	"layers" : {
		"sizes" : [ 9, 4, 8, 6, 1 ],
		"Layer_0" : {
			"name" : "Input_Layer",
			"NbInputs" : 0,
			"NbOutputs" : 9 
		},
		"Layer_1" : {
			"name" : "Hidden_Layer_1",
			"NbInputs" : 9,
			"NbOutputs" : 4 ,
			"coeffs_0" : [ 3.417812, 3.762085, 3.378301, -0.146692 ],
			"coeffs_1" : [ 3.547992, 2.998938, 3.783093, -0.086543 ],
			"coeffs_2" : [ 4.200163, 3.839312, 4.342832, -0.172857 ],
			"coeffs_3" : [ 4.392549, 3.111447, 3.621760, 0.116349 ],
			"coeffs_4" : [ 4.012508, 3.336857, 3.498094, -0.641127 ],
			"coeffs_5" : [ 3.949975, 3.034612, 3.734037, -0.110444 ],
			"coeffs_6" : [ 3.514181, 3.051921, 3.486435, 0.416138 ],
			"coeffs_7" : [ 3.848531, 3.861544, 3.474169, -0.064475 ],
			"coeffs_8" : [ -0.207529, 0.250686, -0.136696, 0.287646 ],
			"intercepts" : [ 3.553368, 4.548369, 3.685090, 0.248894 ]
		},
		"Layer_2" : {
			"name" : "Hidden_Layer_2",
			"NbInputs" : 4,
			"NbOutputs" : 8 ,
			"coeffs_0" : [ -0.650690, 3.942145, 4.291213, 4.262103, -0.566920, 3.216906, 4.053698, 4.344166 ],
			"coeffs_1" : [ 0.334583, 4.533099, 4.698137, 3.505637, 0.307122, 4.395653, 3.566990, 4.500881 ],
			"coeffs_2" : [ 0.020182, 3.638825, 4.276516, 4.068218, -0.669758, 4.054584, 4.292100, 4.584271 ],
			"coeffs_3" : [ -0.622213, 0.450718, -0.313527, -0.689870, 0.662070, 0.741074, -0.123405, -0.511435 ],
			"intercepts" : [ -0.188807, 3.803920, 3.279636, 3.489564, 0.089189, 3.741054, 4.032317, 3.398947 ]
		},
		"Layer_3" : {
			"name" : "Hidden_Layer_3",
			"NbInputs" : 8,
			"NbOutputs" : 6 ,
			"coeffs_0" : [ 0.183205, 0.361514, 0.474259, -0.079657, -0.528743, 0.212349 ],
			"coeffs_1" : [ -0.156827, -0.228400, -0.486111, -0.654450, 3.906557, 0.425151 ],
			"coeffs_2" : [ -0.069235, -0.244853, -0.156950, -0.224610, 4.358690, -0.448178 ],
			"coeffs_3" : [ -0.368602, -0.138365, 0.269611, -0.462554, 3.927254, 0.204730 ],
			"coeffs_4" : [ 0.270588, 0.455311, 0.470347, 0.339986, -0.262251, -0.077830 ],
			"coeffs_5" : [ 0.022265, 0.341148, 0.316447, -0.034367, 4.379720, 0.172856 ],
			"coeffs_6" : [ -0.079435, -0.244446, -0.178974, -0.359693, 4.476303, 0.188484 ],
			"coeffs_7" : [ -0.564338, 0.096917, -0.422538, -0.001729, 4.233348, -0.486400 ],
			"intercepts" : [ 0.065026, -0.730448, -0.593898, 0.450073, 3.559138, -0.602249 ]
		},
		"Layer_4" : {
			"name" : "Output_Layer",
			"NbInputs" : 6,
			"NbOutputs" : 1 ,
			"coeffs_0" : [ -0.221752 ],
			"coeffs_1" : [ -0.640628 ],
			"coeffs_2" : [ -0.702498 ],
			"coeffs_3" : [ -0.681287 ],
			"coeffs_4" : [ 4.462865 ],
			"coeffs_5" : [ -0.113922 ],
			"intercepts" : [ 1.751151 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"dataset" : 	{
		"dataset_features" : 9,
		"dataset_rows" : 20640
	},
	"layers" : 	{
		"Layer_0" : 	{
			"NbInputs" : 0,
			"NbOutputs" : 9,
			"name" : "Input_Layer"
		},
		"Layer_1" : 	{
			"NbInputs" : 9,
			"NbOutputs" : 4,
			"coeffs_0" : [ 3.417812, 3.762085, 3.378301, -0.146692 ],
			"coeffs_1" : [ 3.547992, 2.998938, 3.783093, -0.086543 ],
			"coeffs_2" : [ 4.200163, 3.839312, 4.342832, -0.172857 ],
			"coeffs_3" : [ 4.392549, 3.111447, 3.62176, 0.116349 ],
			"coeffs_4" : [ 4.012508, 3.336857, 3.498094, -0.641127 ],
			"coeffs_5" : [ 3.949975, 3.034612, 3.734037, -0.110444 ],
			"coeffs_6" : [ 3.514181, 3.051921, 3.486435, 0.416138 ],
			"coeffs_7" : [ 3.848531, 3.861544, 3.474169, -0.064475 ],
			"coeffs_8" : [ -0.207529, 0.250686, -0.136696, 0.287646 ],
			"intercepts" : [ 3.553368, 4.548369, 3.68509, 0.248894 ],
			"name" : "Hidden_Layer_1"
		},
		"Layer_2" : 	{
			"NbInputs" : 4,
			"NbOutputs" : 8,
			"coeffs_0" : [ -0.65069, 3.942145, 4.291213, 4.262103, -0.56692, 3.216906, 4.053698, 4.344166 ],
			"coeffs_1" : [ 0.334583, 4.533099, 4.698137, 3.505637, 0.307122, 4.395653, 3.56699, 4.500881 ],
			"coeffs_2" : [ 0.020182, 3.638825, 4.276516, 4.068218, -0.669758, 4.054584, 4.2921, 4.584271 ],
			"coeffs_3" : [ -0.622213, 0.450718, -0.313527, -0.68987, 0.66207, 0.741074, -0.123405, -0.511435 ],
			"intercepts" : [ -0.188807, 3.80392, 3.279636, 3.489564, 0.089189, 3.741054, 4.032317, 3.398947 ],
			"name" : "Hidden_Layer_2"
		},
		"Layer_3" : 	{
			"NbInputs" : 8,
			"NbOutputs" : 6,
			"coeffs_0" : [ 0.183205, 0.361514, 0.474259, -0.079657, -0.528743, 0.212349 ],
			"coeffs_1" : [ -0.156827, -0.2284, -0.486111, -0.65445, 3.906557, 0.425151 ],
			"coeffs_2" : [ -0.069235, -0.244853, -0.15695, -0.22461, 4.35869, -0.448178 ],
			"coeffs_3" : [ -0.368602, -0.138365, 0.269611, -0.462554, 3.927254, 0.20473 ],
			"coeffs_4" : [ 0.270588, 0.455311, 0.470347, 0.339986, -0.262251, -0.07783 ],
			"coeffs_5" : [ 0.022265, 0.341148, 0.316447, -0.034367, 4.37972, 0.172856 ],
			"coeffs_6" : [ -0.079435, -0.244446, -0.178974, -0.359693, 4.476303, 0.188484 ],
			"coeffs_7" : [ -0.564338, 0.096917, -0.422538, -0.001729, 4.233348, -0.4864 ],
			"intercepts" : [ 0.065026, -0.730448, -0.593898, 0.450073, 3.559138, -0.602249 ],
			"name" : "Hidden_Layer_3"
		},
		"Layer_4" : 	{
			"NbInputs" : 6,
			"NbOutputs" : 1,
			"coeffs_0" : [ -0.221752 ],
			"coeffs_1" : [ -0.640628 ],
			"coeffs_2" : [ -0.702498 ],
			"coeffs_3" : [ -0.681287 ],
			"coeffs_4" : [ 4.462865 ],
			"coeffs_5" : [ -0.113922 ],
			"intercepts" : [ 1.751151 ],
			"name" : "Output_Layer"
		},
		"sizes" : [ 9, 4, 8, 6, 1 ]
	},
	"metadata" :  { "model" : "Rosenblatt_MLP", "signature" : "ff4_ff4", "version" : "2024-W14" },
	"options" :  { "activation" : "relu", "alpha" : 0.0001, "batch_size" : null, "beta_1" : 0.9, "beta_2" : 0.999, "early_stopping" : 0, "epsilon" : 0.0, "hidden_layer_sizes" : [ 4, 8, 6 ], "learning_rate" : "constant", "learning_rate_init" : 0.001, "max_fun" : 15000, "max_iter" : 32, "momentum" : 0.9, "n_iter_no_change" : 10, "nesterovs_momentum" : 1, "power_t" : 0.5, "random_state" : 1789, "shuffle" : 1, "solver" : "adam", "tol" : 0.0001, "validation_fraction" : 0.1, "verbose" : 0, "warm_start" : 0 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
[142209.2  267493.78 173953.61 ... 164787.86 145455.39 204300.47]
('OPERATION_END_ELAPSED', 0.02, 'PREDICT')
('OPERATION_START', 'PREDICT')
[142209.17 267493.7  173953.6  ... 164787.84 145455.38 204300.44]
('OPERATION_END_ELAPSED', 0.02, 'PREDICT')
MODEL_PERFS {'class_name': 'mllite.MLPRegressor', 'model_name': 'MLPRegressor', 'options': '{"hidden_layer_sizes" : [4, 8, 6]}', 'dataset': 'california_housing_quantized', 'size': 20640, 'mse': 13570801000.0, 'mae': 87334.36, 'mape': 0.51219594, 'r2': -0.01917295463137525}
WRITING_PERF_CODE 'logs/auto_tests/regression/MLPRegressor/mllite.MLPRegressor_california_housing_quantized_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.MLPRegressor', 'model_name': 'MLPRegressor', 'options': '{"hidden_layer_sizes" : [4, 8, 6]}', 'dataset': 'california_housing_quantized', 'training_time_in_sec': 1.956, 'prediction_time_in_sec': 0.02}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 0 9
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 1 9
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 2 9
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 3 9
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 4 9
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 5 9
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 6 9
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 7 9
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 8 9
{
   "Contributions" : {
      "X_0" : [ -529.811462 ],
      "X_1" : [ 1166.253418 ],
      "X_2" : [ 1197.871460 ],
      "X_3" : [ -4451.891113 ],
      "X_4" : [ -3960.755371 ],
      "X_5" : [ -3395.751953 ],
      "X_6" : [ -4188.824219 ],
      "X_7" : [ -250.385178 ],
      "X_8" : [ 0.000000 ]   
   },
   "Most_Contributive_Features" : {
      "y" : [ 3, 6, 4, 5, 2, 1, 0, 7 ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/regression/MLPRegressor/mllite.MLPRegressor_california_housing_quantized_option_1_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/regression/MLPRegressor/mllite.MLPRegressor_california_housing_quantized_option_1_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('california_housing_quantized', 'MLPRegressor', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8"
  FROM "california_housing_quantized" AS "ADS" 
 ),
"Input_Layer_BA" AS
 ( SELECT
    t."index" as "index",
    t."X_0" AS "OUT_0",
    t."X_1" AS "OUT_1",
    t."X_2" AS "OUT_2",
    t."X_3" AS "OUT_3",
    t."X_4" AS "OUT_4",
    t."X_5" AS "OUT_5",
    t."X_6" AS "OUT_6",
    t."X_7" AS "OUT_7",
    t."X_8" AS "OUT_8"
 FROM "model_input" AS t
),
"Hidden_Layer_1_BA" AS
 ( SELECT
    t."index" as "index",
    3.553368 + 3.417812 * t."OUT_0"  + 3.547992 * t."OUT_1"  + 4.200163 * t."OUT_2"  + 4.392549 * t."OUT_3"  + 4.012508 * t."OUT_4"  + 3.949975 * t."OUT_5"  + 3.514181 * t."OUT_6"  + 3.848531 * t."OUT_7"  + -0.207529 * t."
SQL_OUT_PUT_FIRST_LINES_END ('california_housing_quantized', 'MLPRegressor', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('california_housing_quantized', 'MLPRegressor', 'duckdb')
.077830 * t."OUT_4"  + 0.172856 * t."OUT_5"  + 0.188484 * t."OUT_6"  + -0.486400 * t."OUT_7" AS "OUT_5"
   FROM "Hidden_Layer_2_Activation" AS t
 ),
"Hidden_Layer_3_Activation" AS
 ( SELECT
    t."index" as "index",
    CASE WHEN (t."OUT_0" > 0) THEN t."OUT_0" ELSE 0 END AS "OUT_0",
    CASE WHEN (t."OUT_1" > 0) THEN t."OUT_1" ELSE 0 END AS "OUT_1",
    CASE WHEN (t."OUT_2" > 0) THEN t."OUT_2" ELSE 0 END AS "OUT_2",
    CASE WHEN (t."OUT_3" > 0) THEN t."OUT_3" ELSE 0 END AS "OUT_3",
    CASE WHEN (t."OUT_4" > 0) THEN t."OUT_4" ELSE 0 END AS "OUT_4",
    CASE WHEN (t."OUT_5" > 0) THEN t."OUT_5" ELSE 0 END AS "OUT_5"
   FROM "Hidden_Layer_3_BA" AS t
 ),
"Output_Layer_BA" AS
 ( SELECT
    t."index" as "index",
    1.751151 + -0.221752 * t."OUT_0"  + -0.640628 * t."OUT_1"  + -0.702498 * t."OUT_2"  + -0.681287 * t."OUT_3"  + 4.462865 * t."OUT_4"  + -0.113922 * t."OUT_5" AS "OUT_0"
   FROM "Hidden_Layer_3_Activation" AS t
 )
 SELECT
    t."index" AS "index",
    t.OUT_0 AS "Estimator"
  FROM "Output_Layer_BA" AS t

SQL_OUT_PUT_LAST_LINES_END ('california_housing_quantized', 'MLPRegressor', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 20640 entries, 0 to 20639
Data columns (total 9 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     20640 non-null  float32
 1   X_1     20640 non-null  float32
 2   X_2     20640 non-null  float32
 3   X_3     20640 non-null  float32
 4   X_4     20640 non-null  float32
 5   X_5     20640 non-null  float32
 6   X_6     20640 non-null  float32
 7   X_7     20640 non-null  float32
 8   X_8     20640 non-null  float32
dtypes: float32(9)
memory usage: 886.9 KB
       X_0  X_1   X_2  X_3  X_4  X_5  X_6  X_7  X_8
index                                              
0      1.0  8.0   8.0  0.0  0.0  0.0  0.0  9.0  0.0
1      1.0  7.0   3.0  8.0  8.0  8.0  8.0  9.0  0.0
2      1.0  7.0  10.0  2.0  1.0  1.0  1.0  9.0  0.0
3      1.0  7.0  10.0  1.0  1.0  1.0  1.0  8.0  0.0
4      1.0  7.0  10.0  3.0  2.0  1.0  2.0  5.0  0.0
...    ...  ...   ...  ...  ...  ...  ...  ...  ...
20635  3.0  9.0   4.0  3.0  3.0  2.0  3.0  0.0  0.0
20636  3.0  9.0   2.0  0.0  0.0  0.0  0.0  2.0  0.0
20637  3.0  9.0   2.0  5.0  5.0  3.0  5.0  0.0  0.0
20638  3.0  9.0   2.0  4.0  4.0  2.0  3.0  1.0  0.0
20639  3.0  9.0   1.0  6.0  7.0  6.0  6.0  2.0  0.0

[20640 rows x 9 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 20640 entries, 0 to 20639
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      20640 non-null  int64  
 1   Estimator  20640 non-null  float64
dtypes: float64(1), int64(1)
memory usage: 322.6 KB
       index      Estimator
0          0  142209.171875
1          1  267493.687500
2          2  173953.593750
3          3  163584.203125
4          4  168016.265625
...      ...            ...
20635  20635  141567.031250
20636  20636   85848.750000
20637  20637  164787.843750
20638  20638  145455.375000
20639  20639  204300.437500

[20640 rows x 2 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('california_housing_quantized', 'MLPRegressor') Estimator 0.0207759886749031
       index  SQL_Estimator   Py_Estimator  SQL_Error
20624  20624  125263.289062  125263.304688  -0.015625
20625  20625  130556.101562  130556.109375  -0.007812
20626  20626  114678.078125  114678.093750  -0.015625
20627  20627   79530.960938   79530.968750  -0.007812
20628  20628  160378.968750  160378.984375  -0.015625
20629  20629  270923.843750  270923.875000  -0.031250
20630  20630  194414.609375  194414.640625  -0.031250
20631  20631  190053.703125  190053.750000  -0.046875
20632  20632  164987.140625  164987.156250  -0.015625
20633  20633  171901.421875  171901.453125  -0.031250
20634  20634  188004.953125  188004.968750  -0.015625
20635  20635  141567.031250  141567.062500  -0.031250
20636  20636   85848.750000   85848.765625  -0.015625
20637  20637  164787.843750  164787.859375  -0.015625
20638  20638  145455.375000  145455.390625  -0.015625
20639  20639  204300.437500  204300.468750  -0.031250
MLLITE_REG_SQL_EXECUTION_STATUS ('california_housing_quantized', 'MLPRegressor', 'Failure')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/regression/MLPRegressor/mllite.MLPRegressor_california_housing_quantized_option_1_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('california_housing_quantized', 'MLPRegressor', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8"
  FROM "california_housing_quantized" AS "ADS" 
 ),
"Input_Layer_BA" AS
 ( SELECT
    t."index" as "index",
    t."X_0" AS "OUT_0",
    t."X_1" AS "OUT_1",
    t."X_2" AS "OUT_2",
    t."X_3" AS "OUT_3",
    t."X_4" AS "OUT_4",
    t."X_5" AS "OUT_5",
    t."X_6" AS "OUT_6",
    t."X_7" AS "OUT_7",
    t."X_8" AS "OUT_8"
 FROM "model_input" AS t
),
"Hidden_Layer_1_BA" AS
 ( SELECT
    t."index" as "index",
    3.553368 + 3.417812 * t."OUT_0"  + 3.547992 * t."OUT_1"  + 4.200163 * t."OUT_2"  + 4.392549 * t."OUT_3"  + 4.012508 * t."OUT_4"  + 3.949975 * t."OUT_5"  + 3.514181 * t."OUT_6"  + 3.848531 * t."OUT_7"  + -0.207529 * t."
SQL_OUT_PUT_FIRST_LINES_END ('california_housing_quantized', 'MLPRegressor', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('california_housing_quantized', 'MLPRegressor', 'sqlite')
.077830 * t."OUT_4"  + 0.172856 * t."OUT_5"  + 0.188484 * t."OUT_6"  + -0.486400 * t."OUT_7" AS "OUT_5"
   FROM "Hidden_Layer_2_Activation" AS t
 ),
"Hidden_Layer_3_Activation" AS
 ( SELECT
    t."index" as "index",
    CASE WHEN (t."OUT_0" > 0) THEN t."OUT_0" ELSE 0 END AS "OUT_0",
    CASE WHEN (t."OUT_1" > 0) THEN t."OUT_1" ELSE 0 END AS "OUT_1",
    CASE WHEN (t."OUT_2" > 0) THEN t."OUT_2" ELSE 0 END AS "OUT_2",
    CASE WHEN (t."OUT_3" > 0) THEN t."OUT_3" ELSE 0 END AS "OUT_3",
    CASE WHEN (t."OUT_4" > 0) THEN t."OUT_4" ELSE 0 END AS "OUT_4",
    CASE WHEN (t."OUT_5" > 0) THEN t."OUT_5" ELSE 0 END AS "OUT_5"
   FROM "Hidden_Layer_3_BA" AS t
 ),
"Output_Layer_BA" AS
 ( SELECT
    t."index" as "index",
    1.751151 + -0.221752 * t."OUT_0"  + -0.640628 * t."OUT_1"  + -0.702498 * t."OUT_2"  + -0.681287 * t."OUT_3"  + 4.462865 * t."OUT_4"  + -0.113922 * t."OUT_5" AS "OUT_0"
   FROM "Hidden_Layer_3_Activation" AS t
 )
 SELECT
    t."index" AS "index",
    t.OUT_0 AS "Estimator"
  FROM "Output_Layer_BA" AS t

SQL_OUT_PUT_LAST_LINES_END ('california_housing_quantized', 'MLPRegressor', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 20640 entries, 0 to 20639
Data columns (total 9 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     20640 non-null  float32
 1   X_1     20640 non-null  float32
 2   X_2     20640 non-null  float32
 3   X_3     20640 non-null  float32
 4   X_4     20640 non-null  float32
 5   X_5     20640 non-null  float32
 6   X_6     20640 non-null  float32
 7   X_7     20640 non-null  float32
 8   X_8     20640 non-null  float32
dtypes: float32(9)
memory usage: 886.9 KB
       X_0  X_1   X_2  X_3  X_4  X_5  X_6  X_7  X_8
index                                              
0      1.0  8.0   8.0  0.0  0.0  0.0  0.0  9.0  0.0
1      1.0  7.0   3.0  8.0  8.0  8.0  8.0  9.0  0.0
2      1.0  7.0  10.0  2.0  1.0  1.0  1.0  9.0  0.0
3      1.0  7.0  10.0  1.0  1.0  1.0  1.0  8.0  0.0
4      1.0  7.0  10.0  3.0  2.0  1.0  2.0  5.0  0.0
...    ...  ...   ...  ...  ...  ...  ...  ...  ...
20635  3.0  9.0   4.0  3.0  3.0  2.0  3.0  0.0  0.0
20636  3.0  9.0   2.0  0.0  0.0  0.0  0.0  2.0  0.0
20637  3.0  9.0   2.0  5.0  5.0  3.0  5.0  0.0  0.0
20638  3.0  9.0   2.0  4.0  4.0  2.0  3.0  1.0  0.0
20639  3.0  9.0   1.0  6.0  7.0  6.0  6.0  2.0  0.0

[20640 rows x 9 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 20640 entries, 0 to 20639
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      20640 non-null  int64  
 1   Estimator  20640 non-null  float64
dtypes: float64(1), int64(1)
memory usage: 322.6 KB
       index      Estimator
0          0  142209.188574
1          1  267493.735834
2          2  173953.597576
3          3  163584.216143
4          4  168016.259510
...      ...            ...
20635  20635  141567.045657
20636  20636   85848.753426
20637  20637  164787.838347
20638  20638  145455.385585
20639  20639  204300.466274

[20640 rows x 2 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('california_housing_quantized', 'MLPRegressor') Estimator 0.01368182120489342
       index  SQL_Estimator   Py_Estimator  SQL_Error
20624  20624  125263.292957  125263.304688  -0.011731
20625  20625  130556.101035  130556.109375  -0.008340
20626  20626  114678.078708  114678.093750  -0.015042
20627  20627   79530.964205   79530.968750  -0.004545
20628  20628  160378.981479  160378.984375  -0.002896
20629  20629  270923.832540  270923.875000  -0.042460
20630  20630  194414.617426  194414.640625  -0.023199
20631  20631  190053.722547  190053.750000  -0.027453
20632  20632  164987.135155  164987.156250  -0.021095
20633  20633  171901.436993  171901.453125  -0.016132
20634  20634  188004.953055  188004.968750  -0.015695
20635  20635  141567.045657  141567.062500  -0.016843
20636  20636   85848.753426   85848.765625  -0.012199
20637  20637  164787.838347  164787.859375  -0.021028
20638  20638  145455.385585  145455.390625  -0.005040
20639  20639  204300.466274  204300.468750  -0.002476
MLLITE_REG_SQL_EXECUTION_STATUS ('california_housing_quantized', 'MLPRegressor', 'Failure')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
