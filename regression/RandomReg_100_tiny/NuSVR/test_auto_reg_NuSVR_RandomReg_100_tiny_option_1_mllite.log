         X_0       X_1       X_2  ...      X_98      X_99      target
0  -0.301125  1.387725  1.263659  ... -0.345798  0.839573  -54.486094
1  -0.155583 -1.181091  2.934304  ... -1.884572 -0.938959 -244.069750
2   1.079390 -0.496549 -1.240677  ... -0.569426  0.970424   50.603288
3  -1.027789 -0.022726  0.110301  ...  2.721471 -0.697773  200.907470
4   0.155319  0.126152  0.905780  ...  1.218228  0.672223 -138.968166
5  -1.133144 -1.651195 -0.342055  ... -2.102750  0.912526  150.012595
6   0.019270 -1.217387 -0.758529  ...  2.781903  1.876952    6.485013
7   0.158980 -1.225813 -1.678237  ...  0.246019  0.614807  128.961327
8   0.064271 -2.410516 -0.576757  ... -0.795053 -0.008973  -41.105676
9   0.652203  0.436045 -0.138883  ... -0.172713  0.919309  410.248003
10  1.188539 -1.250136 -1.027288  ...  0.531235 -1.526836  309.975525
11 -0.757753 -0.757876 -1.128427  ... -1.704143 -1.010355   92.184336
12  1.469914  1.519842  0.957997  ... -1.215914 -0.053610    2.776306
13  0.414327 -1.399507 -0.741872  ...  0.767883 -0.178207  -19.506459
14  0.348487 -1.384055  1.225923  ...  0.239461 -0.572437   64.722984
15  0.227229  0.619283 -1.530483  ... -1.305061  0.904966  -55.250985

[16 rows x 101 columns]
MLLITE_MODEL_SET_OPTIONS NuSVR {"nu" : 0.1}
MLLITE_MODEL_OPTIONS_DEFAULT NuSVR { "max_iter" : 128 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING NuSVR { "nu" : 0.1,  "max_iter" : 128  , }
MLLITE_MODEL_JSON_AFTER_SETTING NuSVR None
('OPERATION_START', 'TRAINING')
[[-3.01124662e-01  1.38772476e+00  1.26365924e+00 -6.82732940e-01
  -1.34683120e+00  5.14777362e-01  1.62561178e-01 -1.08774674e+00
   2.71217942e-01  1.01093900e+00 -2.49382392e-01 -1.65061939e+00
  -9.93423760e-01  1.09921061e-01 -5.43385804e-01  1.32529700e+00
   1.88495958e+00  7.49242187e-01  1.60594404e+00  1.60841656e+00
   9.63199854e-01 -3.32925580e-02  1.82730234e+00 -8.89043733e-02
   1.03326552e-01  1.23202717e+00 -1.62939775e+00  8.68012488e-01
   4.37752008e-01  5.41352630e-01  4.58516777e-01 -1.81859002e-01
  -1.24955714e-01 -4.90596294e-02  1.27540767e+00  3.60171229e-01
   9.01617110e-01 -2.70372570e-01  5.28253436e-01  1.62672818e-01
  -7.59159401e-02 -1.01459682e+00 -1.15195643e-02  1.09213448e+00
   1.62921584e+00 -4.38633710e-01 -1.36951172e+00 -3.69843543e-01
  -8.60606253e-01 -5.75633466e-01  1.27469802e+00  4.84667391e-01
  -1.51542473e+00  1.16384223e-01 -8.54173601e-01 -7.89357781e-01
  -3.20154727e-01  6.83034718e-01 -4.90488261e-01 -1.72152758e+00
  -5.88555992e-01  2.26808488e-01  1.35770679e+00 -7.94542491e-01
  -2.14967608e+00 -2.36072704e-01 -8.44686925e-01 -1.26111269e+00
  -8.60300481e-01  1.04535091e+00  1.55022159e-01  3.35658103e-01
  -1.93393087e+00 -3.61082911e-01  1.09404229e-01 -1.99066043e-01
   4.23870265e-01  1.72599167e-01  8.43244314e-01  3.28669012e-01
   5.97395658e-01 -3.46147346e+00 -1.11853528e+00  1.95144802e-01
   1.27475369e+00 -6.44126832e-01  1.99323013e-01 -3.13881099e-01
   8.67388427e-01  1.60537791e+00 -4.69321199e-02  2.43432593e+00
   1.97670710e+00 -2.16416430e+00 -3.69843096e-01 -3.87633115e-01
  -1.22007036e+00 -1.98171616e+00 -3.45797569e-01  8.39573085e-01]
 [-1.55582651e-01 -1.18109095e+00  2.93430400e+00 -6.94847047e-01
   7.65346646e-01 -1.38265729e-01 -1.87197840e+00 -5.47255754e-01
  -1.02196300e+00 -2.40618020e-01  1.53626862e-03 -1.30697155e+00
   1.12571657e+00 -6.09562814e-01  1.84250534e+00  5.26184618e-01
  -1.34199113e-01 -4.64435697e-01 -2.08943471e-01 -7.25073040e-01
  -3.43274266e-01 -4.16672796e-01 -1.43184513e-01 -1.58227885e+00
   5.83837748e-01 -6.71794951e-01  1.48207486e+00  8.79976228e-02
  -1.44496679e+00 -1.04719102e+00 -7.33625665e-02  7.97347367e-01
  -1.49433851e+00 -4.77036446e-01  1.96962878e-01  9.63585079e-01
  -1.06893802e+00  6.35676011e-02 -2.22821608e-01  2.68229580e+00
  -1.22432196e+00  2.33570918e-01  3.37046921e-01 -8.80938113e-01
   3.74312043e-01  4.75478441e-01 -4.31405723e-01 -1.49277854e+00
  -7.05678761e-01  8.41879070e-01 -9.39537287e-01 -1.32261544e-01
   1.27473974e+00 -2.45601356e-01 -1.09500504e+00 -1.12451386e+00
  -1.68831348e+00 -1.66038191e+00  8.83513212e-01 -2.12799621e+00
   1.85301650e+00  1.06351781e+00 -1.55932271e+00 -3.31427574e-01
  -4.71284389e-01 -8.42893183e-01  2.66877890e-01 -2.19565415e+00
  -1.28610337e+00  2.07863837e-01  2.12718658e-02 -1.87917411e-01
   2.03328684e-01 -1.13658619e+00  7.13958859e-01  3.48399356e-02
   8.75229090e-02 -1.98537886e-01  8.98726761e-01 -1.00354958e+00
   3.02103549e-01  5.83664238e-01 -1.10631919e+00 -7.53618121e-01
   2.54740193e-02 -5.73981524e-01  6.41987205e-01  1.07664418e+00
   8.75026762e-01 -4.93790269e-01  7.25373566e-01  8.76517355e-01
   1.12196028e+00  2.01063013e+00  7.10269690e-01  3.98254842e-01
  -1.09351709e-01 -6.48999751e-01 -1.88457203e+00 -9.38958764e-01]
 [ 1.07939029e+00 -4.96548653e-01 -1.24067736e+00  2.76984543e-01
  -8.75897765e-01  3.70610416e-01  2.94699460e-01  2.08256388e+00
   1.13252175e+00  1.22751558e+00 -1.09523833e+00  5.95500886e-01
   1.12185657e+00  7.54166365e-01 -8.05529773e-01 -1.03034163e+00
   1.09279633e+00  1.50435269e+00  1.11762017e-01  1.07449919e-01
  -1.02401459e+00 -1.84641510e-01  7.72709399e-02 -4.99782264e-01
  -2.27677077e-01  6.49656951e-02  1.01747751e-01  1.98065881e-02
   5.62927604e-01  1.23536706e+00 -1.95974544e-01 -2.40673900e-01
   4.45345312e-01  5.92050970e-01  1.02269816e+00 -1.74345989e-02
  -1.73933551e-01 -6.29255697e-02 -2.20695183e-01  1.29462636e+00
   2.52112865e-01 -2.17039728e+00  9.85382497e-01 -7.44955420e-01
   1.57546902e+00  5.03206611e-01 -9.72602367e-01 -6.84496820e-01
   5.72718233e-02 -4.53426331e-01  5.94903529e-01  1.22255921e+00
   7.85897672e-01  6.81237221e-01  1.01942651e-01  4.92852837e-01
   5.66514671e-01 -1.17636359e+00  5.35346568e-01  1.32921374e+00
   1.24366212e+00 -5.73699355e-01  1.01102638e+00  8.36099803e-01
  -2.34281445e+00 -9.67368782e-01  2.25748569e-01 -9.44747999e-02
  -3.09640646e-01 -1.30452168e+00  2.80700207e-01 -1.33084834e+00
  -9.54967201e-01 -1.04418528e+00 -2.22839022e+00 -1.09560812e+00
   1.24782884e+00  1.80284277e-01 -1.25238645e+00  7.14607239e-01
   1.95957351e+00  2.53216553e+00 -8.34777504e-02  1.11373827e-01
  -8.84591460e-01  1.04834628e+00 -5.54076493e-01  8.74013126e-01
   5.28820276e-01 -4.34727043e-01  8.74114633e-01  5.12598276e-01
   1.89701116e+00 -2.48368159e-01  1.54528201e+00  9.61921632e-01
   3.33936542e-01  6.79747701e-01 -5.69426119e-01  9.70423698e-01]
 [-1.02778935e+00 -2.27263141e-02  1.10301085e-01  1.79546729e-01
  -4.90769893e-02  5.96660793e-01  1.15810835e+00  6.27954483e-01
   1.70029372e-01 -1.79182720e+00  1.67022240e+00 -6.81339622e-01
  -1.44740534e+00  1.85646936e-01  3.88607174e-01 -1.27854240e+00
  -1.10837603e+00 -7.75742769e-01  2.63235778e-01  1.52836013e+00
  -3.64444673e-01 -7.31038809e-01  1.15823066e+00  4.90437865e-01
  -5.65739751e-01 -9.17869389e-01  4.85316277e-01 -5.30028522e-01
  -3.88954520e-01 -9.46969926e-01  2.02791953e+00 -1.98417687e+00
   2.03697324e-01  2.72669315e-01  8.71521354e-01  1.61161527e-01
  -5.35239339e-01  7.95005918e-01 -1.75809467e+00 -1.27538812e+00
   6.49030805e-01  7.76762664e-01 -1.38365650e+00  2.20103472e-01
  -6.78639174e-01  5.56474961e-02 -2.88346857e-01 -9.60100591e-01
   6.68293357e-01  3.41510355e-01  1.58940768e+00  8.42409909e-01
  -8.10967982e-01  7.20736444e-01  1.03318654e-01 -1.99774706e+00
  -5.00028312e-01 -8.31591904e-01  5.86176157e-01  1.26994348e+00
   1.11285400e+00 -2.34507990e+00  1.84525335e+00 -2.89478928e-01
   2.72452831e+00 -1.85729042e-01 -5.73727824e-02  3.77985537e-01
   7.77927995e-01  1.63456053e-01 -8.48517776e-01 -1.21194494e+00
   9.50055778e-01  6.42497420e-01  5.55373728e-01 -8.59387755e-01
   1.78057873e+00  3.59947473e-01  1.22501051e+00  4.28557783e-01
  -9.43535328e-01  1.48158407e+00  2.29413652e+00 -1.71246231e+00
  -7.68941283e-01 -1.05595326e+00 -8.25688243e-01  4.38418001e-01
  -1.34553814e+00 -3.07022452e-01 -2.85520107e-01  1.29907846e+00
   2.93988436e-01  8.37067842e-01  3.93039435e-01 -3.51285487e-01
   8.80326271e-01  7.99354970e-01  2.72147131e+00 -6.97772563e-01]
 [ 1.55318558e-01  1.26152441e-01  9.05780315e-01  8.18991438e-02
  -1.29863977e-01  2.24427879e-01 -1.33973733e-01  4.19006675e-01
   1.31296360e+00 -1.32973254e-01 -4.47266810e-02 -1.72328055e-01
  -7.81214893e-01  1.23739958e+00 -1.91514134e-01 -1.37162611e-01
  -3.27861980e-02  7.96586096e-01 -1.01332128e+00  9.38049018e-01
  -9.92036402e-01 -1.93410134e+00  5.83719552e-01 -1.21997699e-01
  -7.61240780e-01  7.48465629e-03 -1.03534722e+00 -3.08909953e-01
   5.18409371e-01 -3.92305017e-01 -2.04970264e+00  1.69121325e+00
  -9.20890093e-01 -3.47137898e-01 -1.20613670e+00  3.00528228e-01
   9.43905175e-01 -1.59808314e+00  1.40788376e+00  1.41724432e+00
   8.80906701e-01 -5.68516105e-02 -1.04051435e+00  9.45277989e-01
   7.76422098e-02  6.56548738e-01 -6.62871718e-01 -6.30390286e-01
  -8.90351236e-01 -3.24517757e-01 -8.22051048e-01 -7.51260757e-01
   1.96293175e-01  7.01368928e-01 -1.39238060e+00 -6.68631792e-01
   1.55344999e+00  4.97449428e-01  9.80282068e-01  5.71124673e-01
  -2.32236490e-01  7.84225240e-02 -8.50019217e-01  5.46521485e-01
  -3.93892229e-01  1.12404597e+00 -4.27607358e-01 -2.33180244e-02
  -9.29678082e-01 -1.25660062e+00 -7.16505647e-01 -1.50908187e-01
  -1.59349561e+00 -1.10606849e+00 -2.74965316e-01 -1.46609589e-01
  -2.04783964e+00  5.78249320e-02  1.45206213e+00 -9.06186819e-01
  -4.90492165e-01  5.79007506e-01  2.22233844e+00  2.66923189e-01
  -1.62423000e-01 -2.91489512e-01 -5.97359419e-01  3.06709170e-01
  -1.82558179e+00  1.38704881e-01 -1.57723725e+00 -5.51332712e-01
  -2.92212635e-01 -8.04641563e-03 -7.65457824e-02  8.14916015e-01
  -1.61039865e+00 -7.35562503e-01  1.21822762e+00  6.72223270e-01]] [ -54.486095 -244.06975    50.603287  200.90747  -138.96817 ]
MLLITE_FIT_USING_MODEL mllite_nu_svm_reg.NuSVR_ff4_ff4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_NU_REGRESSOR_FIT' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_NU_REGRESSOR_FIT' 2 4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_NU_REGRESSOR_FIT' 3 4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_NU_REGRESSOR_FIT' 4 4
('OPERATION_END_ELAPSED', 0.017, 'TRAINING')
{ "nu" : 0.1,  "max_iter" : 128  , }
{ "nu" : 0.1,  "max_iter" : 128  , }
{
	"metadata" : { "model" : "Vapnik_NuSVR_RBF", "version" : "2024-W14", "signature" : "ff4_ff4"},
	"options" : {"svm_type" : "nu_svr", "kernel" : "rbf", "degree" : 3, "gamma" : 0.010529, "coef0" : 0.000000, "cache_size" : 300, "tol" : 0.001000, "nu" : 0.100000, "epsilon" : 0.000000, "shrinking" : 0, "probability" : 0, "C" : 1.000000, "max_iter" : 128, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 100 },
	"svm_model" : {
	"classes" : 2,
	"L" : 2,
	"SupportVectors" : {
		"SV_0" : [ -0.155583, -1.181091, 2.934304, -0.694847, 0.765347, -0.138266, -1.871978, -0.547256, -1.021963, -0.240618, 0.001536, -1.306972, 1.125717, -0.609563, 1.842505, 0.526185, -0.134199, -0.464436, -0.208943, -0.725073, -0.343274, -0.416673, -0.143185, -1.582279, 0.583838, -0.671795, 1.482075, 0.087998, -1.444967, -1.047191, -0.073363, 0.797347, -1.494339, -0.477036, 0.196963, 0.963585, -1.068938, 0.063568, -0.222822, 2.682296, -1.224322, 0.233571, 0.337047, -0.880938, 0.374312, 0.475478, -0.431406, -1.492779, -0.705679, 0.841879, -0.939537, -0.132262, 1.274740, -0.245601, -1.095005, -1.124514, -1.688313, -1.660382, 0.883513, -2.127996, 1.853016, 1.063518, -1.559323, -0.331428, -0.471284, -0.842893, 0.266878, -2.195654, -1.286103, 0.207864, 0.021272, -0.187917, 0.203329, -1.136586, 0.713959, 0.034840, 0.087523, -0.198538, 0.898727, -1.003550, 0.302104, 0.583664, -1.106319, -0.753618, 0.025474, -0.573982, 0.641987, 1.076644, 0.875027, -0.493790, 0.725374, 0.876517, 1.121960, 2.010630, 0.710270, 0.398255, -0.109352, -0.649000, -1.884572, -0.938959 ],
		"SV_1" : [ 0.652203, 0.436045, -0.138883, -0.625626, -1.052697, 0.681542, -0.938536, 0.946532, 0.423996, -0.031088, -1.727926, 1.619766, 1.061490, -1.602632, 0.775221, 0.747878, 0.543018, 1.949929, -0.390970, -1.283426, -1.193047, 0.809933, 1.838850, -0.689319, -0.992610, 1.657792, 0.705457, -1.009920, 0.537567, 0.197217, 0.774661, 0.600213, 1.250723, -0.004769, 0.879051, -1.091502, -0.567888, -0.870715, 0.797927, -0.228577, 1.046873, -1.456435, -1.760875, -0.190029, -0.428558, 0.136273, 2.166094, 0.707097, 0.136510, -1.140066, -0.649436, -0.394823, -1.051403, 1.562724, -0.434697, -0.922369, 0.174495, 0.583298, -0.225387, 0.840166, 0.633278, 0.409356, 0.811317, 0.442499, 1.060244, 0.125624, 0.748346, -0.296961, -0.784845, -0.522191, 1.101961, -0.816511, 0.646203, 2.240576, -0.864095, 0.441238, 0.236171, 1.744468, 0.308703, 0.277589, -1.059889, -0.917680, 0.749258, 0.005080, -1.013675, -0.563921, -0.145915, -0.779168, -1.108434, 0.444275, -0.859430, 0.591170, 0.075764, 0.594485, 0.335600, -0.893353, -1.488198, 0.620222, -0.172713, 0.919309 ]
	},
	"SupportVectorsCoefs" : {
		"SV_coef_0" : [ -0.800000, 0.800000 ]
	},
	"rho" : [ -83.089134 ],
	"nSV" : [ 2 ],
	"probA" : [ ],
	"probB" : [ ],
	"n_iter" : [ 2 ]
}
}
WRITING_JSON_CODE 'logs/auto_tests/regression/NuSVR/mllite.NuSVR_RandomReg_100_tiny_option_1.json'

MLLITE_MODEL_SET_OPTIONS NuSVR {"nu" : 0.1}
MLLITE_MODEL_OPTIONS_DEFAULT NuSVR { "max_iter" : 128 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING NuSVR { "nu" : 0.1,  "max_iter" : 128  , }
MLLITE_MODEL_JSON_AFTER_SETTING NuSVR None
MLLITE_RELOADING_MODEL mllite_nu_svm_reg.NuSVR_ff4_ff4
{
	"metadata" : { "model" : "Vapnik_NuSVR_RBF", "version" : "2024-W14", "signature" : "ff4_ff4"},
	"options" : {"svm_type" : "nu_svr", "kernel" : "rbf", "degree" : 3, "gamma" : 0.010529, "coef0" : 0.000000, "cache_size" : 300, "tol" : 0.001000, "nu" : 0.100000, "epsilon" : 0.000000, "shrinking" : 0, "probability" : 0, "C" : 1.000000, "max_iter" : 128, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 100 },
	"svm_model" : {
	"classes" : 2,
	"L" : 2,
	"SupportVectors" : {
		"SV_0" : [ -0.155583, -1.181091, 2.934304, -0.694847, 0.765347, -0.138266, -1.871978, -0.547256, -1.021963, -0.240618, 0.001536, -1.306972, 1.125717, -0.609563, 1.842505, 0.526185, -0.134199, -0.464436, -0.208943, -0.725073, -0.343274, -0.416673, -0.143185, -1.582279, 0.583838, -0.671795, 1.482075, 0.087998, -1.444967, -1.047191, -0.073363, 0.797347, -1.494339, -0.477036, 0.196963, 0.963585, -1.068938, 0.063568, -0.222822, 2.682296, -1.224322, 0.233571, 0.337047, -0.880938, 0.374312, 0.475478, -0.431406, -1.492779, -0.705679, 0.841879, -0.939537, -0.132262, 1.274740, -0.245601, -1.095005, -1.124514, -1.688313, -1.660382, 0.883513, -2.127996, 1.853016, 1.063518, -1.559323, -0.331428, -0.471284, -0.842893, 0.266878, -2.195654, -1.286103, 0.207864, 0.021272, -0.187917, 0.203329, -1.136586, 0.713959, 0.034840, 0.087523, -0.198538, 0.898727, -1.003550, 0.302104, 0.583664, -1.106319, -0.753618, 0.025474, -0.573982, 0.641987, 1.076644, 0.875027, -0.493790, 0.725374, 0.876517, 1.121960, 2.010630, 0.710270, 0.398255, -0.109352, -0.649000, -1.884572, -0.938959 ],
		"SV_1" : [ 0.652203, 0.436045, -0.138883, -0.625626, -1.052697, 0.681542, -0.938536, 0.946532, 0.423996, -0.031088, -1.727926, 1.619766, 1.061490, -1.602632, 0.775221, 0.747878, 0.543018, 1.949929, -0.390970, -1.283426, -1.193047, 0.809933, 1.838850, -0.689319, -0.992610, 1.657792, 0.705457, -1.009920, 0.537567, 0.197217, 0.774661, 0.600213, 1.250723, -0.004769, 0.879051, -1.091502, -0.567888, -0.870715, 0.797927, -0.228577, 1.046873, -1.456435, -1.760875, -0.190029, -0.428558, 0.136273, 2.166094, 0.707097, 0.136510, -1.140066, -0.649436, -0.394823, -1.051403, 1.562724, -0.434697, -0.922369, 0.174495, 0.583298, -0.225387, 0.840166, 0.633278, 0.409356, 0.811317, 0.442499, 1.060244, 0.125624, 0.748346, -0.296961, -0.784845, -0.522191, 1.101961, -0.816511, 0.646203, 2.240576, -0.864095, 0.441238, 0.236171, 1.744468, 0.308703, 0.277589, -1.059889, -0.917680, 0.749258, 0.005080, -1.013675, -0.563921, -0.145915, -0.779168, -1.108434, 0.444275, -0.859430, 0.591170, 0.075764, 0.594485, 0.335600, -0.893353, -1.488198, 0.620222, -0.172713, 0.919309 ]
	},
	"SupportVectorsCoefs" : {
		"SV_coef_0" : [ -0.800000, 0.800000 ]
	},
	"rho" : [ -83.089134 ],
	"nSV" : [ 2 ],
	"probA" : [ ],
	"probB" : [ ],
	"n_iter" : [ 2 ]
}
}
BEAUTIFIED_JSON_START
{
	"dataset" : 	{
		"dataset_features" : 100,
		"dataset_rows" : 16
	},
	"metadata" :  { "model" : "Vapnik_NuSVR_RBF", "signature" : "ff4_ff4", "version" : "2024-W14" },
	"options" :  { "C" : 1.0, "cache_size" : 300, "coef0" : 0.0, "degree" : 3, "epsilon" : 0.0, "gamma" : 0.010529, "kernel" : "rbf", "max_iter" : 128, "nu" : 0.1, "probability" : 0, "random_state" : 1789, "shrinking" : 0, "svm_type" : "nu_svr", "tol" : 0.001 },
	"svm_model" : 	{
		"L" : 2,
		"SupportVectors" : 	{
			"SV_0" : [ -0.155583, -1.181091, 2.934304, -0.694847, 0.765347, -0.138266, -1.871978, -0.547256, -1.021963, -0.240618, 0.001536, -1.306972, 1.125717, -0.609563, 1.842505, 0.526185, -0.134199, -0.464436, -0.208943, -0.725073, -0.343274, -0.416673, -0.143185, -1.582279, 0.583838, -0.671795, 1.482075, 0.087998, -1.444967, -1.047191, -0.073363, 0.797347, -1.494339, -0.477036, 0.196963, 0.963585, -1.068938, 0.063568, -0.222822, 2.682296, -1.224322, 0.233571, 0.337047, -0.880938, 0.374312, 0.475478, -0.431406, -1.492779, -0.705679, 0.841879, -0.939537, -0.132262, 1.27474, -0.245601, -1.095005, -1.124514, -1.688313, -1.660382, 0.883513, -2.127996, 1.853016, 1.063518, -1.559323, -0.331428, -0.471284, -0.842893, 0.266878, -2.195654, -1.286103, 0.207864, 0.021272, -0.187917, 0.203329, -1.136586, 0.713959, 0.03484, 0.087523, -0.198538, 0.898727, -1.00355, 0.302104, 0.583664, -1.106319, -0.753618, 0.025474, -0.573982, 0.641987, 1.076644, 0.875027, -0.49379, 0.725374, 0.876517, 1.12196, 2.01063, 0.71027, 0.398255, -0.109352, -0.649, -1.884572, -0.938959 ],
			"SV_1" : [ 0.652203, 0.436045, -0.138883, -0.625626, -1.052697, 0.681542, -0.938536, 0.946532, 0.423996, -0.031088, -1.727926, 1.619766, 1.06149, -1.602632, 0.775221, 0.747878, 0.543018, 1.949929, -0.39097, -1.283426, -1.193047, 0.809933, 1.83885, -0.689319, -0.99261, 1.657792, 0.705457, -1.00992, 0.537567, 0.197217, 0.774661, 0.600213, 1.250723, -0.004769, 0.879051, -1.091502, -0.567888, -0.870715, 0.797927, -0.228577, 1.046873, -1.456435, -1.760875, -0.190029, -0.428558, 0.136273, 2.166094, 0.707097, 0.13651, -1.140066, -0.649436, -0.394823, -1.051403, 1.562724, -0.434697, -0.922369, 0.174495, 0.583298, -0.225387, 0.840166, 0.633278, 0.409356, 0.811317, 0.442499, 1.060244, 0.125624, 0.748346, -0.296961, -0.784845, -0.522191, 1.101961, -0.816511, 0.646203, 2.240576, -0.864095, 0.441238, 0.236171, 1.744468, 0.308703, 0.277589, -1.059889, -0.91768, 0.749258, 0.00508, -1.013675, -0.563921, -0.145915, -0.779168, -1.108434, 0.444275, -0.85943, 0.59117, 0.075764, 0.594485, 0.3356, -0.893353, -1.488198, 0.620222, -0.172713, 0.919309 ]
		},
		"SupportVectorsCoefs" : 	{
			"SV_coef_0" : [ -0.8, 0.8 ]
		},
		"classes" : 2,
		"nSV" : [ 2 ],
		"n_iter" : [ 2 ],
		"probA" : [  ],
		"probB" : [  ],
		"rho" : [ -83.089134 ]
	}
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
[83.10547  82.368744 83.128654 83.13588  83.13854  83.107315 83.08019
 83.184044 83.12858  83.809525 83.115845 83.11067  83.21082  83.126236
 83.10686  83.09218 ]
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
('OPERATION_START', 'PREDICT')
[83.10547  82.368744 83.12865  83.13588  83.13854  83.107315 83.08019
 83.184044 83.12858  83.809525 83.115845 83.11067  83.21082  83.126236
 83.10686  83.09218 ]
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
MODEL_PERFS {'class_name': 'mllite.NuSVR', 'model_name': 'NuSVR', 'options': '{"nu" : 0.1}', 'dataset': 'RandomReg_100_tiny', 'size': 16, 'mse': 25763.469, 'mae': 128.25699, 'mape': 3.8107204, 'r2': -0.03168083965633928}
WRITING_PERF_CODE 'logs/auto_tests/regression/NuSVR/mllite.NuSVR_RandomReg_100_tiny_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.NuSVR', 'model_name': 'NuSVR', 'options': '{"nu" : 0.1}', 'dataset': 'RandomReg_100_tiny', 'training_time_in_sec': 0.017, 'prediction_time_in_sec': 0.001}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 0 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 1 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 2 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 3 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 4 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 5 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 6 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 7 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 8 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 9 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 10 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 11 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 12 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 13 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 14 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 15 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 16 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 17 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 18 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 19 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 20 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 21 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 22 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 23 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 24 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 25 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 26 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 27 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 28 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 29 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 30 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 31 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 32 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 33 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 34 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 35 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 36 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 37 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 38 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 39 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 40 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 41 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 42 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 43 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 44 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 45 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 46 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 47 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 48 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 49 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 50 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 51 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 52 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 53 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 54 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 55 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 56 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 57 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 58 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 59 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 60 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 61 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 62 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 63 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 64 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 65 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 66 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 67 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 68 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 69 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 70 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 71 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 72 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 73 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 74 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 75 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 76 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 77 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 78 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 79 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 80 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 81 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 82 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 83 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 84 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 85 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 86 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 87 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 88 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 89 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 90 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 91 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 92 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 93 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 94 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 95 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 96 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 97 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 98 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 99 100
{
   "Contributions" : {
      "X_0" : [ -0.000278 ],
      "X_1" : [ -0.001729 ],
      "X_2" : [ -0.000920 ],
      "X_3" : [ -0.000235 ],
      "X_4" : [ -0.000499 ],
      "X_5" : [ 0.000396 ],
      "X_6" : [ -0.000654 ],
      "X_7" : [ 0.000189 ],
      "X_8" : [ -0.000335 ],
      "X_9" : [ -0.000089 ],
      "X_10" : [ -0.000284 ],
      "X_11" : [ 0.000956 ],
      "X_12" : [ -0.000044 ],
      "X_13" : [ 0.000589 ],
      "X_14" : [ -0.001078 ],
      "X_15" : [ 0.000018 ],
      "X_16" : [ 0.000227 ],
      "X_17" : [ -0.000614 ],
      "X_18" : [ 0.000066 ],
      "X_19" : [ 0.000092 ],
      "X_20" : [ 0.000739 ],
      "X_21" : [ -0.000103 ],
      "X_22" : [ 0.000614 ],
      "X_23" : [ -0.000705 ],
      "X_24" : [ -0.000621 ],
      "X_25" : [ -0.001541 ],
      "X_26" : [ -0.000497 ],
      "X_27" : [ 0.000091 ],
      "X_28" : [ -0.000905 ],
      "X_29" : [ 0.000158 ],
      "X_30" : [ 0.000324 ],
      "X_31" : [ -0.000084 ],
      "X_32" : [ -0.000197 ],
      "X_33" : [ -0.000222 ],
      "X_34" : [ -0.000288 ],
      "X_35" : [ 0.001194 ],
      "X_36" : [ -0.000505 ],
      "X_37" : [ 0.000061 ],
      "X_38" : [ -0.000350 ],
      "X_39" : [ -0.001427 ],
      "X_40" : [ 0.000061 ],
      "X_41" : [ -0.000096 ],
      "X_42" : [ -0.000249 ],
      "X_43" : [ -0.000413 ],
      "X_44" : [ -0.000154 ],
      "X_45" : [ -0.000166 ],
      "X_46" : [ 0.002828 ],
      "X_47" : [ -0.000878 ],
      "X_48" : [ -0.000423 ],
      "X_49" : [ -0.000816 ],
      "X_50" : [ -0.000118 ],
      "X_51" : [ -0.000030 ],
      "X_52" : [ -0.000646 ],
      "X_53" : [ -0.000972 ],
      "X_54" : [ 0.000184 ],
      "X_55" : [ -0.000007 ],
      "X_56" : [ -0.001836 ],
      "X_57" : [ -0.002310 ],
      "X_58" : [ -0.000363 ],
      "X_59" : [ -0.000785 ],
      "X_60" : [ -0.000003 ],
      "X_61" : [ -0.000495 ],
      "X_62" : [ -0.000726 ],
      "X_63" : [ -0.000474 ],
      "X_64" : [ 0.000887 ],
      "X_65" : [ -0.000375 ],
      "X_66" : [ 0.000512 ],
      "X_67" : [ -0.001339 ],
      "X_68" : [ -0.000374 ],
      "X_69" : [ -0.000502 ],
      "X_70" : [ 0.000562 ],
      "X_71" : [ 0.000194 ],
      "X_72" : [ 0.000358 ],
      "X_73" : [ 0.001187 ],
      "X_74" : [ -0.000317 ],
      "X_75" : [ 0.000206 ],
      "X_76" : [ 0.000070 ],
      "X_77" : [ -0.001146 ],
      "X_78" : [ 0.000171 ],
      "X_79" : [ -0.000546 ],
      "X_80" : [ 0.000765 ],
      "X_81" : [ 0.000190 ],
      "X_82" : [ -0.000946 ],
      "X_83" : [ 0.000088 ],
      "X_84" : [ 0.000437 ],
      "X_85" : [ -0.000024 ],
      "X_86" : [ 0.000024 ],
      "X_87" : [ -0.000749 ],
      "X_88" : [ -0.000157 ],
      "X_89" : [ -0.000600 ],
      "X_90" : [ -0.000270 ],
      "X_91" : [ -0.000111 ],
      "X_92" : [ -0.000215 ],
      "X_93" : [ -0.000550 ],
      "X_94" : [ -0.000226 ],
      "X_95" : [ 0.000428 ],
      "X_96" : [ 0.000476 ],
      "X_97" : [ -0.000075 ],
      "X_98" : [ -0.001539 ],
      "X_99" : [ -0.001079 ]   
   },
   "Most_Contributive_Features" : {
      "y" : [ 46, 57, 56, 1, 25, 98, 39, 67, 35, 73 ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/regression/NuSVR/mllite.NuSVR_RandomReg_100_tiny_option_1_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/regression/NuSVR/mllite.NuSVR_RandomReg_100_tiny_option_1_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('RandomReg_100_tiny', 'NuSVR', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('RandomReg_100_tiny', 'NuSVR', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('RandomReg_100_tiny', 'NuSVR', 'duckdb')
84" - "SV_data".sv_84, 2) + power(model_input."X_85" - "SV_data".sv_85, 2) + power(model_input."X_86" - "SV_data".sv_86, 2) + power(model_input."X_87" - "SV_data".sv_87, 2) + power(model_input."X_88" - "SV_data".sv_88, 2) + power(model_input."X_89" - "SV_data".sv_89, 2) + power(model_input."X_90" - "SV_data".sv_90, 2) + power(model_input."X_91" - "SV_data".sv_91, 2) + power(model_input."X_92" - "SV_data".sv_92, 2) + power(model_input."X_93" - "SV_data".sv_93, 2) + power(model_input."X_94" - "SV_data".sv_94, 2) + power(model_input."X_95" - "SV_data".sv_95, 2) + power(model_input."X_96" - "SV_data".sv_96, 2) + power(model_input."X_97" - "SV_data".sv_97, 2) + power(model_input."X_98" - "SV_data".sv_98, 2) + power(model_input."X_99" - "SV_data".sv_99, 2)) ), CAST(32.0 AS FLOAT) ) )  AS "dot_prod" 
        FROM
          model_input, "SV_data"
       ) AS full_join_data_sv
     GROUP BY full_join_data_sv."index"
    ) AS dp )
SELECT
  t."index" as "index",
  t."Estimator" as "Estimator"
FROM "Kernel_DotProd" AS t

SQL_OUT_PUT_LAST_LINES_END ('RandomReg_100_tiny', 'NuSVR', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 16 entries, 0 to 15
Data columns (total 100 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     16 non-null     float32
 1   X_1     16 non-null     float32
 2   X_2     16 non-null     float32
 3   X_3     16 non-null     float32
 4   X_4     16 non-null     float32
 5   X_5     16 non-null     float32
 6   X_6     16 non-null     float32
 7   X_7     16 non-null     float32
 8   X_8     16 non-null     float32
 9   X_9     16 non-null     float32
 10  X_10    16 non-null     float32
 11  X_11    16 non-null     float32
 12  X_12    16 non-null     float32
 13  X_13    16 non-null     float32
 14  X_14    16 non-null     float32
 15  X_15    16 non-null     float32
 16  X_16    16 non-null     float32
 17  X_17    16 non-null     float32
 18  X_18    16 non-null     float32
 19  X_19    16 non-null     float32
 20  X_20    16 non-null     float32
 21  X_21    16 non-null     float32
 22  X_22    16 non-null     float32
 23  X_23    16 non-null     float32
 24  X_24    16 non-null     float32
 25  X_25    16 non-null     float32
 26  X_26    16 non-null     float32
 27  X_27    16 non-null     float32
 28  X_28    16 non-null     float32
 29  X_29    16 non-null     float32
 30  X_30    16 non-null     float32
 31  X_31    16 non-null     float32
 32  X_32    16 non-null     float32
 33  X_33    16 non-null     float32
 34  X_34    16 non-null     float32
 35  X_35    16 non-null     float32
 36  X_36    16 non-null     float32
 37  X_37    16 non-null     float32
 38  X_38    16 non-null     float32
 39  X_39    16 non-null     float32
 40  X_40    16 non-null     float32
 41  X_41    16 non-null     float32
 42  X_42    16 non-null     float32
 43  X_43    16 non-null     float32
 44  X_44    16 non-null     float32
 45  X_45    16 non-null     float32
 46  X_46    16 non-null     float32
 47  X_47    16 non-null     float32
 48  X_48    16 non-null     float32
 49  X_49    16 non-null     float32
 50  X_50    16 non-null     float32
 51  X_51    16 non-null     float32
 52  X_52    16 non-null     float32
 53  X_53    16 non-null     float32
 54  X_54    16 non-null     float32
 55  X_55    16 non-null     float32
 56  X_56    16 non-null     float32
 57  X_57    16 non-null     float32
 58  X_58    16 non-null     float32
 59  X_59    16 non-null     float32
 60  X_60    16 non-null     float32
 61  X_61    16 non-null     float32
 62  X_62    16 non-null     float32
 63  X_63    16 non-null     float32
 64  X_64    16 non-null     float32
 65  X_65    16 non-null     float32
 66  X_66    16 non-null     float32
 67  X_67    16 non-null     float32
 68  X_68    16 non-null     float32
 69  X_69    16 non-null     float32
 70  X_70    16 non-null     float32
 71  X_71    16 non-null     float32
 72  X_72    16 non-null     float32
 73  X_73    16 non-null     float32
 74  X_74    16 non-null     float32
 75  X_75    16 non-null     float32
 76  X_76    16 non-null     float32
 77  X_77    16 non-null     float32
 78  X_78    16 non-null     float32
 79  X_79    16 non-null     float32
 80  X_80    16 non-null     float32
 81  X_81    16 non-null     float32
 82  X_82    16 non-null     float32
 83  X_83    16 non-null     float32
 84  X_84    16 non-null     float32
 85  X_85    16 non-null     float32
 86  X_86    16 non-null     float32
 87  X_87    16 non-null     float32
 88  X_88    16 non-null     float32
 89  X_89    16 non-null     float32
 90  X_90    16 non-null     float32
 91  X_91    16 non-null     float32
 92  X_92    16 non-null     float32
 93  X_93    16 non-null     float32
 94  X_94    16 non-null     float32
 95  X_95    16 non-null     float32
 96  X_96    16 non-null     float32
 97  X_97    16 non-null     float32
 98  X_98    16 non-null     float32
 99  X_99    16 non-null     float32
dtypes: float32(100)
memory usage: 6.4 KB
            X_0       X_1       X_2  ...      X_97      X_98      X_99
index                                ...                              
0     -0.301125  1.387725  1.263659  ... -1.981716 -0.345798  0.839573
1     -0.155583 -1.181091  2.934304  ... -0.649000 -1.884572 -0.938959
2      1.079390 -0.496549 -1.240677  ...  0.679748 -0.569426  0.970424
3     -1.027789 -0.022726  0.110301  ...  0.799355  2.721471 -0.697773
4      0.155319  0.126152  0.905780  ... -0.735563  1.218228  0.672223
5     -1.133144 -1.651195 -0.342055  ... -0.719715 -2.102751  0.912526
6      0.019270 -1.217387 -0.758529  ...  1.549164  2.781903  1.876952
7      0.158980 -1.225813 -1.678237  ...  1.280589  0.246019  0.614807
8      0.064271 -2.410517 -0.576757  ...  0.825493 -0.795053 -0.008973
9      0.652203  0.436045 -0.138883  ...  0.620222 -0.172713  0.919309
10     1.188539 -1.250136 -1.027288  ... -1.316489  0.531235 -1.526836
11    -0.757753 -0.757876 -1.128427  ... -0.162581 -1.704143 -1.010355
12     1.469914  1.519842  0.957997  ...  0.126134 -1.215914 -0.053610
13     0.414327 -1.399507 -0.741872  ...  0.253458  0.767883 -0.178207
14     0.348487 -1.384055  1.225923  ...  0.871362  0.239461 -0.572437
15     0.227229  0.619283 -1.530483  ... -0.827112 -1.305061  0.904966

[16 rows x 100 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 16 entries, 0 to 15
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      16 non-null     int64  
 1   Estimator  16 non-null     float64
dtypes: float64(1), int64(1)
memory usage: 388.0 bytes
    index  Estimator
0       0  83.105469
1       1  82.368741
2       2  83.128650
3       3  83.135877
4       4  83.138539
5       5  83.107316
6       6  83.080195
7       7  83.184045
8       8  83.128574
9       9  83.809527
10     10  83.115844
11     11  83.110673
12     12  83.210824
13     13  83.126238
14     14  83.106858
15     15  83.092177
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('RandomReg_100_tiny', 'NuSVR') Estimator 1.8901191651821136e-06
    index  SQL_Estimator  Py_Estimator     SQL_Error
0       0      83.105469     83.105469 -1.514292e-08
1       1      82.368741     82.368744 -2.771858e-06
2       2      83.128650     83.128654 -4.343930e-06
3       3      83.135877     83.135880 -2.503637e-06
4       4      83.138539     83.138542 -2.980474e-06
5       5      83.107316     83.107315  1.244005e-06
6       6      83.080195     83.080193  2.875682e-06
7       7      83.184045     83.184044  1.497325e-06
8       8      83.128574     83.128578 -3.732983e-06
9       9      83.809527     83.809525  2.354142e-06
10     10      83.115844     83.115845 -4.174743e-07
11     11      83.110673     83.110672  1.035389e-06
12     12      83.210824     83.210823  5.734530e-07
13     13      83.126238     83.126236  1.772996e-06
14     14      83.106858     83.106857  3.052320e-07
15     15      83.092177     83.092178 -1.818183e-06
MLLITE_REG_SQL_EXECUTION_STATUS ('RandomReg_100_tiny', 'NuSVR', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/regression/NuSVR/mllite.NuSVR_RandomReg_100_tiny_option_1_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('RandomReg_100_tiny', 'NuSVR', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('RandomReg_100_tiny', 'NuSVR', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('RandomReg_100_tiny', 'NuSVR', 'sqlite')
84" - "SV_data".sv_84, 2) + power(model_input."X_85" - "SV_data".sv_85, 2) + power(model_input."X_86" - "SV_data".sv_86, 2) + power(model_input."X_87" - "SV_data".sv_87, 2) + power(model_input."X_88" - "SV_data".sv_88, 2) + power(model_input."X_89" - "SV_data".sv_89, 2) + power(model_input."X_90" - "SV_data".sv_90, 2) + power(model_input."X_91" - "SV_data".sv_91, 2) + power(model_input."X_92" - "SV_data".sv_92, 2) + power(model_input."X_93" - "SV_data".sv_93, 2) + power(model_input."X_94" - "SV_data".sv_94, 2) + power(model_input."X_95" - "SV_data".sv_95, 2) + power(model_input."X_96" - "SV_data".sv_96, 2) + power(model_input."X_97" - "SV_data".sv_97, 2) + power(model_input."X_98" - "SV_data".sv_98, 2) + power(model_input."X_99" - "SV_data".sv_99, 2)) ), CAST(32.0 AS FLOAT) ) )  AS "dot_prod" 
        FROM
          model_input, "SV_data"
       ) AS full_join_data_sv
     GROUP BY full_join_data_sv."index"
    ) AS dp )
SELECT
  t."index" as "index",
  t."Estimator" as "Estimator"
FROM "Kernel_DotProd" AS t

SQL_OUT_PUT_LAST_LINES_END ('RandomReg_100_tiny', 'NuSVR', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 16 entries, 0 to 15
Data columns (total 100 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     16 non-null     float32
 1   X_1     16 non-null     float32
 2   X_2     16 non-null     float32
 3   X_3     16 non-null     float32
 4   X_4     16 non-null     float32
 5   X_5     16 non-null     float32
 6   X_6     16 non-null     float32
 7   X_7     16 non-null     float32
 8   X_8     16 non-null     float32
 9   X_9     16 non-null     float32
 10  X_10    16 non-null     float32
 11  X_11    16 non-null     float32
 12  X_12    16 non-null     float32
 13  X_13    16 non-null     float32
 14  X_14    16 non-null     float32
 15  X_15    16 non-null     float32
 16  X_16    16 non-null     float32
 17  X_17    16 non-null     float32
 18  X_18    16 non-null     float32
 19  X_19    16 non-null     float32
 20  X_20    16 non-null     float32
 21  X_21    16 non-null     float32
 22  X_22    16 non-null     float32
 23  X_23    16 non-null     float32
 24  X_24    16 non-null     float32
 25  X_25    16 non-null     float32
 26  X_26    16 non-null     float32
 27  X_27    16 non-null     float32
 28  X_28    16 non-null     float32
 29  X_29    16 non-null     float32
 30  X_30    16 non-null     float32
 31  X_31    16 non-null     float32
 32  X_32    16 non-null     float32
 33  X_33    16 non-null     float32
 34  X_34    16 non-null     float32
 35  X_35    16 non-null     float32
 36  X_36    16 non-null     float32
 37  X_37    16 non-null     float32
 38  X_38    16 non-null     float32
 39  X_39    16 non-null     float32
 40  X_40    16 non-null     float32
 41  X_41    16 non-null     float32
 42  X_42    16 non-null     float32
 43  X_43    16 non-null     float32
 44  X_44    16 non-null     float32
 45  X_45    16 non-null     float32
 46  X_46    16 non-null     float32
 47  X_47    16 non-null     float32
 48  X_48    16 non-null     float32
 49  X_49    16 non-null     float32
 50  X_50    16 non-null     float32
 51  X_51    16 non-null     float32
 52  X_52    16 non-null     float32
 53  X_53    16 non-null     float32
 54  X_54    16 non-null     float32
 55  X_55    16 non-null     float32
 56  X_56    16 non-null     float32
 57  X_57    16 non-null     float32
 58  X_58    16 non-null     float32
 59  X_59    16 non-null     float32
 60  X_60    16 non-null     float32
 61  X_61    16 non-null     float32
 62  X_62    16 non-null     float32
 63  X_63    16 non-null     float32
 64  X_64    16 non-null     float32
 65  X_65    16 non-null     float32
 66  X_66    16 non-null     float32
 67  X_67    16 non-null     float32
 68  X_68    16 non-null     float32
 69  X_69    16 non-null     float32
 70  X_70    16 non-null     float32
 71  X_71    16 non-null     float32
 72  X_72    16 non-null     float32
 73  X_73    16 non-null     float32
 74  X_74    16 non-null     float32
 75  X_75    16 non-null     float32
 76  X_76    16 non-null     float32
 77  X_77    16 non-null     float32
 78  X_78    16 non-null     float32
 79  X_79    16 non-null     float32
 80  X_80    16 non-null     float32
 81  X_81    16 non-null     float32
 82  X_82    16 non-null     float32
 83  X_83    16 non-null     float32
 84  X_84    16 non-null     float32
 85  X_85    16 non-null     float32
 86  X_86    16 non-null     float32
 87  X_87    16 non-null     float32
 88  X_88    16 non-null     float32
 89  X_89    16 non-null     float32
 90  X_90    16 non-null     float32
 91  X_91    16 non-null     float32
 92  X_92    16 non-null     float32
 93  X_93    16 non-null     float32
 94  X_94    16 non-null     float32
 95  X_95    16 non-null     float32
 96  X_96    16 non-null     float32
 97  X_97    16 non-null     float32
 98  X_98    16 non-null     float32
 99  X_99    16 non-null     float32
dtypes: float32(100)
memory usage: 6.4 KB
            X_0       X_1       X_2  ...      X_97      X_98      X_99
index                                ...                              
0     -0.301125  1.387725  1.263659  ... -1.981716 -0.345798  0.839573
1     -0.155583 -1.181091  2.934304  ... -0.649000 -1.884572 -0.938959
2      1.079390 -0.496549 -1.240677  ...  0.679748 -0.569426  0.970424
3     -1.027789 -0.022726  0.110301  ...  0.799355  2.721471 -0.697773
4      0.155319  0.126152  0.905780  ... -0.735563  1.218228  0.672223
5     -1.133144 -1.651195 -0.342055  ... -0.719715 -2.102751  0.912526
6      0.019270 -1.217387 -0.758529  ...  1.549164  2.781903  1.876952
7      0.158980 -1.225813 -1.678237  ...  1.280589  0.246019  0.614807
8      0.064271 -2.410517 -0.576757  ...  0.825493 -0.795053 -0.008973
9      0.652203  0.436045 -0.138883  ...  0.620222 -0.172713  0.919309
10     1.188539 -1.250136 -1.027288  ... -1.316489  0.531235 -1.526836
11    -0.757753 -0.757876 -1.128427  ... -0.162581 -1.704143 -1.010355
12     1.469914  1.519842  0.957997  ...  0.126134 -1.215914 -0.053610
13     0.414327 -1.399507 -0.741872  ...  0.253458  0.767883 -0.178207
14     0.348487 -1.384055  1.225923  ...  0.871362  0.239461 -0.572437
15     0.227229  0.619283 -1.530483  ... -0.827112 -1.305061  0.904966

[16 rows x 100 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 16 entries, 0 to 15
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      16 non-null     int64  
 1   Estimator  16 non-null     float64
dtypes: float64(1), int64(1)
memory usage: 388.0 bytes
    index  Estimator
0       0  83.105469
1       1  82.368741
2       2  83.128650
3       3  83.135877
4       4  83.138539
5       5  83.107316
6       6  83.080195
7       7  83.184045
8       8  83.128574
9       9  83.809527
10     10  83.115844
11     11  83.110673
12     12  83.210824
13     13  83.126238
14     14  83.106858
15     15  83.092177
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('RandomReg_100_tiny', 'NuSVR') Estimator 1.8903337979381263e-06
    index  SQL_Estimator  Py_Estimator     SQL_Error
0       0      83.105469     83.105469 -1.717380e-08
1       1      82.368741     82.368744 -2.764063e-06
2       2      83.128650     83.128654 -4.332774e-06
3       3      83.135877     83.135880 -2.503632e-06
4       4      83.138539     83.138542 -2.981423e-06
5       5      83.107316     83.107315  1.251580e-06
6       6      83.080195     83.080193  2.871718e-06
7       7      83.184045     83.184044  1.498263e-06
8       8      83.128574     83.128578 -3.745954e-06
9       9      83.809527     83.809525  2.344654e-06
10     10      83.115844     83.115845 -4.159628e-07
11     11      83.110673     83.110672  1.040301e-06
12     12      83.210824     83.210823  5.851180e-07
13     13      83.126238     83.126236  1.767960e-06
14     14      83.106858     83.106857  3.070063e-07
15     15      83.092177     83.092178 -1.817756e-06
MLLITE_REG_SQL_EXECUTION_STATUS ('RandomReg_100_tiny', 'NuSVR', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
