           X_0       X_1       X_2  ...      X_98      X_99      target
0     1.331256 -0.890219  0.415263  ... -1.017662  0.850023   46.659290
1     0.101475  1.673349  0.646130  ... -0.082562 -0.235254   17.096290
2     1.143388 -0.121749  1.763748  ... -1.210605  0.186911 -214.157384
3    -0.664377  0.702461 -2.030148  ... -1.509694  1.665004  -45.132339
4    -0.183233  0.167641 -1.018050  ... -0.518277 -0.467736 -472.368048
...        ...       ...       ...  ...       ...       ...         ...
1019 -0.108644  0.248959  0.944445  ...  0.725405  0.269099 -131.431944
1020  0.822555  0.293314 -0.646792  ... -0.830353  1.159861  254.930037
1021  1.088703 -0.069279 -0.134730  ...  0.744206 -0.777811 -211.425817
1022 -1.594396 -2.513778 -0.362671  ...  0.569479  0.734742  199.635925
1023  0.335938  0.869565 -0.384574  ...  1.383897  1.366430  -64.848269

[1024 rows x 101 columns]
MLLITE_MODEL_SET_OPTIONS RidgeRegressor {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeRegressor { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeRegressor { "alpha" : 0.0000001,   , }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeRegressor None
('OPERATION_START', 'TRAINING')
[[ 1.3312556  -0.8902193   0.41526318  0.788659   -0.7130887   1.4502782
  -0.90123427  0.7631844   0.13805741  1.6139201  -0.38690123  0.03777119
  -1.1557323  -0.5858095   1.6626205   0.68594664  0.39176562 -0.2828408
   0.76795787  0.3757667  -2.7420852  -0.01939904  0.40063587  0.17057581
  -0.44771507 -1.2317778  -0.8443254   0.7879428  -0.58345294  1.3596091
   0.6738356   1.2624362  -0.65831184 -0.88525283  0.04143903 -1.1881486
   0.83240134  0.49906567  0.11895992 -0.8198342   0.57035816 -1.4580479
  -0.7348064  -0.4322117   1.670222    0.49406192  0.47490185  0.86712915
   0.06314228 -2.2807853   0.7397412   0.7191424  -0.25634202 -0.75440276
   0.6664157   1.004504   -0.7802194   1.2289945  -0.3151011  -0.52080745
   2.0017505  -0.65958494 -0.06995643  1.3200244  -2.0877314  -2.0024903
  -0.02926418  1.5691092   0.85446763  0.5201753  -0.8084577   1.7062956
   0.8540257  -0.4603799  -0.06352598 -0.8714725  -0.5609252  -0.3273548
   0.74484634 -1.6906458  -0.33099878  0.06832191  1.3731502   0.84443164
   0.45396343  0.7861103   0.26812124 -0.06078732 -1.0477233   1.4219131
   1.2072196   0.7279877  -0.68208903 -1.8471589   0.77888066 -0.9317782
   0.2455851   0.06674263 -1.017662    0.8500229 ]
 [ 0.10147522  1.6733488   0.6461298  -1.2563368   1.1040853  -1.4227151
  -0.6017069  -0.9161108   0.16968192 -1.2134422   0.2153484  -0.08051679
   1.2387321  -0.48785964  0.27010813  1.5061171  -1.2551115  -1.1685889
   0.85681057 -0.3032395   0.34517288 -2.404879   -0.5924876  -0.11890611
  -1.1995318  -2.3414571   0.2762635  -4.5431676  -0.53269297  0.8078485
  -1.5695755  -1.10812     0.8487407  -0.2972983   0.58910424  0.82803386
   1.6629032  -0.71414495  1.0407996   0.00796571 -0.5988979  -1.67421
  -1.17802    -0.22742864  2.2339568   0.3043066   0.37049994 -1.5326284
  -0.64369285  0.96310157 -0.85642195  1.1327137  -1.4508079  -0.13960138
   1.4753928  -0.45546088  0.90462786  1.6403875   0.37488905  1.2000089
   1.3891938  -0.12287517 -0.7553856   0.8262001  -0.0514452   1.0170072
  -0.67795897  0.09011087  0.2844104   0.6818215  -0.8403749  -0.68216765
  -0.05586801  0.47741953 -0.56251854 -0.308212    0.13523772 -0.60912365
   0.6620477   0.10418119 -0.9861369   0.09003809 -2.009931   -0.989154
   0.5694446  -0.7199399  -1.0182965  -0.67762125  1.3876666  -1.4770343
   1.3187295   0.10140626 -0.21362238 -2.1321723  -0.9681868  -1.3000042
  -0.23745911 -0.96780366 -0.08256175 -0.2352544 ]
 [ 1.1433884  -0.12174941  1.763748    0.1567726  -1.074581    0.3090569
  -0.59582543  0.75060105  1.2144792   1.2156659   0.5765553  -0.4355099
   0.2547612  -0.9373168   1.2934183  -0.13537018  0.74200237  0.43883675
  -0.6069965   0.1554797   0.5401852   1.1975131  -1.1406852  -0.20755301
  -0.31834334 -0.6807571   0.24679533  1.5937762   0.1117221   0.80259067
  -1.2313136   0.917576    0.50131375 -0.5743615  -0.17214447 -2.0382028
   0.39552817  2.1280468   1.0293733  -0.02239049 -0.67557096 -1.5386295
   1.4090686  -0.59869367  0.6779711   0.37315732 -0.3413207  -0.21079636
   0.34230128  1.0776794   0.30119348 -0.24192244  0.23708598 -2.070677
  -0.48128286  0.3670155   1.0218917  -0.82419974  0.02379109  0.3317229
   1.5780679  -1.4464464  -1.6030818  -1.4349504  -0.11372316 -0.05236021
   0.37578964  1.7915944  -0.87417036  0.19483742 -0.11213797  0.07997598
  -0.89980906 -0.26016855  0.50538015 -1.2370168   1.1031808  -0.8198793
  -1.211      -0.5554547  -0.3449861   0.52403086 -0.2534899   1.0931107
   0.6548259   0.05409036 -0.2681419  -0.06177664  0.09527746  0.8096554
  -0.2925497   0.3124124  -0.37333974  1.0691838  -1.405716   -2.0550418
  -0.42661822 -0.00682518 -1.2106051   0.18691105]
 [-0.6643772   0.70246065 -2.0301476  -2.0342605   0.87254155  0.8668411
  -0.26858473 -0.73312426  1.0275607  -0.7275404   2.1678174  -1.1313968
   0.40187567 -0.71089333  0.2914241  -0.7301117  -1.095154   -2.268191
  -0.4189619  -0.03287303 -1.6552861   0.06898359 -1.912857   -0.55441886
   0.5538053   1.8425944   0.4861901   0.15487543 -0.10841709 -1.1439068
   0.09484072  0.54181457  0.55301255 -0.16916783 -1.6026491   0.4181876
   1.2507617   0.34678614 -1.1298385   2.87664     0.13642831 -0.22074103
  -1.260425    0.59103775  0.71680933 -1.1945326   0.18375565  0.6792565
  -1.1802012   1.2635881   0.08254713 -1.2404718   0.6709144  -0.07065742
  -0.2673846   0.35829198 -0.9844122  -0.8540105   0.54115516  0.78829515
   0.6353548  -0.6730554  -0.280788   -1.2170262   0.28105965 -1.9465499
   0.2613469  -0.85210556 -0.43554437 -0.4999505   1.1504256  -0.28339145
   0.96043223  0.3302896   0.04703231  0.7185348  -0.7703047  -1.8150443
  -0.29500493  0.47207424  1.062915   -0.8516409   0.34324142 -0.0487177
   0.5544652   0.7159857   0.26749176 -0.28686863 -0.10642244  2.2316606
  -1.3776829  -0.18294522 -1.7351075  -0.15755087  1.2045766   0.8150365
  -0.62745374  1.0366299  -1.5096936   1.665004  ]
 [-0.18323281  0.16764143 -1.0180501  -1.1114113  -0.6096793  -1.203273
  -0.91351366 -1.728868    1.45258    -0.7503452  -0.9816971   2.4864185
   0.2919757   0.7608395   0.02673802  0.01965859  1.7714319   0.10731484
   1.5014844   0.04669442  0.01499307  2.2903414  -1.5327556   0.2251275
   0.13013346 -1.3958306   0.477327   -2.448051   -1.034129   -0.36448112
  -0.27540234 -0.0670136  -0.41763452  1.1593167   0.36466834  0.51342684
  -1.9805648  -1.26423     0.1809458   0.09143253 -0.7548743   0.2509495
  -0.38412192 -1.5486463  -0.01736598  1.3488103  -2.0970352   0.540929
  -0.69701564  0.10016023 -0.34506392  0.5776158   2.3233109  -1.0692806
  -0.67232996 -0.8802096   0.67767256 -0.98172724  1.5671804  -1.077151
   0.6932878  -0.29901332  0.7109348  -0.6178621   0.13290192 -1.3579625
   0.8258206   0.2063345   0.6937211  -0.23165497  1.6014408  -0.33389077
  -0.52463293  1.2932607   0.24274994 -0.84197    -1.8947318  -0.31777015
   0.011854    1.0398142   1.1872678   0.5696282   0.77042353  0.04953871
  -1.2782155  -0.57868254  0.8079945   1.9365364   1.0325052   0.6288556
  -1.8749372   0.49370095  0.64584726  0.73780465  0.23192818 -1.2330554
   0.8333075   0.13102144 -0.5182774  -0.46773615]] [  46.65929   17.09629 -214.15738  -45.13234 -472.36804]
MLLITE_FIT_USING_MODEL mllite_ridge_reg.RidgeRegressor_ff4_ff4
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_REGRESSOR_FIT' 1 2
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_REGRESSOR_FIT' 2 2
('OPERATION_END_ELAPSED', 0.107, 'TRAINING')
{ "alpha" : 0.0000001,   , }
{ "alpha" : 0.0000001,   , }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W13", "signature" : "ff4_ff4"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 1024, "dataset_features" : 100 },
	"equations" : {
			"intercept" : 0.000008,
			"coeffs" : [ -0.000003, -0.000002, 0.000006, -0.000015, -0.000009, 0.000007, 0.000008, 0.000015, -0.000012, 0.000000, 0.000003, 0.000003, -0.000007, 0.000005, 0.000002, 0.000017, 0.000000, -0.000007, -0.000002, 0.000004, -0.000000, -0.000003, 32.341976, 0.000006, -0.000004, -0.000002, 0.000017, 0.000010, 0.000002, -0.000007, 66.239349, -0.000003, 44.683525, 4.638641, 0.000008, -0.000005, 46.952187, -0.000000, 0.000005, -0.000008, 0.000004, 0.000001, -0.000000, -0.000002, 0.000003, -0.000004, 73.852585, 0.000002, -0.000002, 0.000005, 0.000017, -0.000007, -0.000011, -0.000002, 0.000010, 0.000000, 0.000001, 0.000000, 0.000004, 45.262714, 0.000002, -0.000018, -0.000001, -0.000008, -0.000003, 0.000001, 0.000011, -0.000003, -0.000001, -0.000005, -0.000005, -0.000009, -0.000003, 0.000003, 0.000005, 0.000007, -0.000001, 66.569817, -0.000011, -0.000004, 0.000007, -0.000003, 0.000005, 0.000017, -0.000005, -0.000003, 0.000003, -0.000015, -0.000006, 0.000013, 18.802328, -0.000001, -0.000009, -0.000008, -0.000001, 31.015581, 0.000004, -0.000011, -0.000000, -0.000002 ]
		}
}
WRITING_JSON_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_RandomReg_100_original_option_1.json'

MLLITE_MODEL_SET_OPTIONS RidgeRegressor {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeRegressor { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeRegressor { "alpha" : 0.0000001,   , }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeRegressor None
MLLITE_RELOADING_MODEL mllite_ridge_reg.RidgeRegressor_ff4_ff4
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W13", "signature" : "ff4_ff4"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 1024, "dataset_features" : 100 },
	"equations" : {
			"intercept" : 0.000008,
			"coeffs" : [ -0.000003, -0.000002, 0.000006, -0.000015, -0.000009, 0.000007, 0.000008, 0.000015, -0.000012, 0.000000, 0.000003, 0.000003, -0.000007, 0.000005, 0.000002, 0.000017, 0.000000, -0.000007, -0.000002, 0.000004, -0.000000, -0.000003, 32.341976, 0.000006, -0.000004, -0.000002, 0.000017, 0.000010, 0.000002, -0.000007, 66.239349, -0.000003, 44.683525, 4.638641, 0.000008, -0.000005, 46.952187, -0.000000, 0.000005, -0.000008, 0.000004, 0.000001, -0.000000, -0.000002, 0.000003, -0.000004, 73.852585, 0.000002, -0.000002, 0.000005, 0.000017, -0.000007, -0.000011, -0.000002, 0.000010, 0.000000, 0.000001, 0.000000, 0.000004, 45.262714, 0.000002, -0.000018, -0.000001, -0.000008, -0.000003, 0.000001, 0.000011, -0.000003, -0.000001, -0.000005, -0.000005, -0.000009, -0.000003, 0.000003, 0.000005, 0.000007, -0.000001, 66.569817, -0.000011, -0.000004, 0.000007, -0.000003, 0.000005, 0.000017, -0.000005, -0.000003, 0.000003, -0.000015, -0.000006, 0.000013, 18.802328, -0.000001, -0.000009, -0.000008, -0.000001, 31.015581, 0.000004, -0.000011, -0.000000, -0.000002 ]
		}
}
BEAUTIFIED_JSON_START
{
	"dataset" : 	{
		"dataset_features" : 100,
		"dataset_rows" : 1024
	},
	"equations" : 	{
		"coeffs" : [ -3e-06, -2e-06, 6e-06, -1.5e-05, -9e-06, 7e-06, 8e-06, 1.5e-05, -1.2e-05, 0.0, 3e-06, 3e-06, -7e-06, 5e-06, 2e-06, 1.7e-05, 0.0, -7e-06, -2e-06, 4e-06, -0.0, -3e-06, 32.341976, 6e-06, -4e-06, -2e-06, 1.7e-05, 1e-05, 2e-06, -7e-06, 66.239349, -3e-06, 44.683525, 4.638641, 8e-06, -5e-06, 46.952187, -0.0, 5e-06, -8e-06, 4e-06, 1e-06, -0.0, -2e-06, 3e-06, -4e-06, 73.852585, 2e-06, -2e-06, 5e-06, 1.7e-05, -7e-06, -1.1e-05, -2e-06, 1e-05, 0.0, 1e-06, 0.0, 4e-06, 45.262714, 2e-06, -1.8e-05, -1e-06, -8e-06, -3e-06, 1e-06, 1.1e-05, -3e-06, -1e-06, -5e-06, -5e-06, -9e-06, -3e-06, 3e-06, 5e-06, 7e-06, -1e-06, 66.569817, -1.1e-05, -4e-06, 7e-06, -3e-06, 5e-06, 1.7e-05, -5e-06, -3e-06, 3e-06, -1.5e-05, -6e-06, 1.3e-05, 18.802328, -1e-06, -9e-06, -8e-06, -1e-06, 31.015581, 4e-06, -1.1e-05, -0.0, -2e-06 ],
		"intercept" : 8e-06
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_ff4", "version" : "2024-W13" },
	"options" :  { "alpha" : 0.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
[  46.65939    17.096273 -214.15706  ... -211.42563   199.63553
  -64.84826 ]
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
('OPERATION_START', 'PREDICT')
[  46.659416   17.096272 -214.15706  ... -211.42563   199.63553
  -64.84826 ]
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
MODEL_PERFS {'class_name': 'mllite.RidgeRegressor', 'model_name': 'RidgeRegressor', 'options': '{"alpha" : 0.0000001}', 'dataset': 'RandomReg_100_original', 'size': 1024, 'mse': 2.6497226e-08, 'mae': 0.00012935375, 'mape': 3.6191896e-06, 'r2': 0.9999999999988959}
WRITING_PERF_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_RandomReg_100_original_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeRegressor', 'model_name': 'RidgeRegressor', 'options': '{"alpha" : 0.0000001}', 'dataset': 'RandomReg_100_original', 'training_time_in_sec': 0.107, 'prediction_time_in_sec': 0.001}
WRITING_SQL_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_RandomReg_100_original_option_1_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('RandomReg_100_original', 'RidgeRegressor', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('RandomReg_100_original', 'RidgeRegressor', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('RandomReg_100_original', 'RidgeRegressor', 'duckdb')
61" + -0.000001 * t."X_62" + -0.000008 * t."X_63" + -0.000003 * t."X_64" + 0.000001 * t."X_65" + 0.000011 * t."X_66" + -0.000003 * t."X_67" + -0.000001 * t."X_68" + -0.000005 * t."X_69" + -0.000005 * t."X_70" + -0.000009 * t."X_71" + -0.000003 * t."X_72" + 0.000003 * t."X_73" + 0.000005 * t."X_74" + 0.000007 * t."X_75" + -0.000001 * t."X_76" + 66.569817 * t."X_77" + -0.000011 * t."X_78" + -0.000004 * t."X_79" + 0.000007 * t."X_80" + -0.000003 * t."X_81" + 0.000005 * t."X_82" + 0.000017 * t."X_83" + -0.000005 * t."X_84" + -0.000003 * t."X_85" + 0.000003 * t."X_86" + -0.000015 * t."X_87" + -0.000006 * t."X_88" + 0.000013 * t."X_89" + 18.802328 * t."X_90" + -0.000001 * t."X_91" + -0.000009 * t."X_92" + -0.000008 * t."X_93" + -0.000001 * t."X_94" + 31.015581 * t."X_95" + 0.000004 * t."X_96" + -0.000011 * t."X_97" + -0.000000 * t."X_98" + -0.000002 * t."X_99" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_LAST_LINES_END ('RandomReg_100_original', 'RidgeRegressor', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 1024 entries, 0 to 1023
Data columns (total 100 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     1024 non-null   float32
 1   X_1     1024 non-null   float32
 2   X_2     1024 non-null   float32
 3   X_3     1024 non-null   float32
 4   X_4     1024 non-null   float32
 5   X_5     1024 non-null   float32
 6   X_6     1024 non-null   float32
 7   X_7     1024 non-null   float32
 8   X_8     1024 non-null   float32
 9   X_9     1024 non-null   float32
 10  X_10    1024 non-null   float32
 11  X_11    1024 non-null   float32
 12  X_12    1024 non-null   float32
 13  X_13    1024 non-null   float32
 14  X_14    1024 non-null   float32
 15  X_15    1024 non-null   float32
 16  X_16    1024 non-null   float32
 17  X_17    1024 non-null   float32
 18  X_18    1024 non-null   float32
 19  X_19    1024 non-null   float32
 20  X_20    1024 non-null   float32
 21  X_21    1024 non-null   float32
 22  X_22    1024 non-null   float32
 23  X_23    1024 non-null   float32
 24  X_24    1024 non-null   float32
 25  X_25    1024 non-null   float32
 26  X_26    1024 non-null   float32
 27  X_27    1024 non-null   float32
 28  X_28    1024 non-null   float32
 29  X_29    1024 non-null   float32
 30  X_30    1024 non-null   float32
 31  X_31    1024 non-null   float32
 32  X_32    1024 non-null   float32
 33  X_33    1024 non-null   float32
 34  X_34    1024 non-null   float32
 35  X_35    1024 non-null   float32
 36  X_36    1024 non-null   float32
 37  X_37    1024 non-null   float32
 38  X_38    1024 non-null   float32
 39  X_39    1024 non-null   float32
 40  X_40    1024 non-null   float32
 41  X_41    1024 non-null   float32
 42  X_42    1024 non-null   float32
 43  X_43    1024 non-null   float32
 44  X_44    1024 non-null   float32
 45  X_45    1024 non-null   float32
 46  X_46    1024 non-null   float32
 47  X_47    1024 non-null   float32
 48  X_48    1024 non-null   float32
 49  X_49    1024 non-null   float32
 50  X_50    1024 non-null   float32
 51  X_51    1024 non-null   float32
 52  X_52    1024 non-null   float32
 53  X_53    1024 non-null   float32
 54  X_54    1024 non-null   float32
 55  X_55    1024 non-null   float32
 56  X_56    1024 non-null   float32
 57  X_57    1024 non-null   float32
 58  X_58    1024 non-null   float32
 59  X_59    1024 non-null   float32
 60  X_60    1024 non-null   float32
 61  X_61    1024 non-null   float32
 62  X_62    1024 non-null   float32
 63  X_63    1024 non-null   float32
 64  X_64    1024 non-null   float32
 65  X_65    1024 non-null   float32
 66  X_66    1024 non-null   float32
 67  X_67    1024 non-null   float32
 68  X_68    1024 non-null   float32
 69  X_69    1024 non-null   float32
 70  X_70    1024 non-null   float32
 71  X_71    1024 non-null   float32
 72  X_72    1024 non-null   float32
 73  X_73    1024 non-null   float32
 74  X_74    1024 non-null   float32
 75  X_75    1024 non-null   float32
 76  X_76    1024 non-null   float32
 77  X_77    1024 non-null   float32
 78  X_78    1024 non-null   float32
 79  X_79    1024 non-null   float32
 80  X_80    1024 non-null   float32
 81  X_81    1024 non-null   float32
 82  X_82    1024 non-null   float32
 83  X_83    1024 non-null   float32
 84  X_84    1024 non-null   float32
 85  X_85    1024 non-null   float32
 86  X_86    1024 non-null   float32
 87  X_87    1024 non-null   float32
 88  X_88    1024 non-null   float32
 89  X_89    1024 non-null   float32
 90  X_90    1024 non-null   float32
 91  X_91    1024 non-null   float32
 92  X_92    1024 non-null   float32
 93  X_93    1024 non-null   float32
 94  X_94    1024 non-null   float32
 95  X_95    1024 non-null   float32
 96  X_96    1024 non-null   float32
 97  X_97    1024 non-null   float32
 98  X_98    1024 non-null   float32
 99  X_99    1024 non-null   float32
dtypes: float32(100)
memory usage: 408.0 KB
            X_0       X_1       X_2  ...      X_97      X_98      X_99
index                                ...                              
0      1.331256 -0.890219  0.415263  ...  0.066743 -1.017662  0.850023
1      0.101475  1.673349  0.646130  ... -0.967804 -0.082562 -0.235254
2      1.143388 -0.121749  1.763748  ... -0.006825 -1.210605  0.186911
3     -0.664377  0.702461 -2.030148  ...  1.036630 -1.509694  1.665004
4     -0.183233  0.167641 -1.018050  ...  0.131021 -0.518277 -0.467736
...         ...       ...       ...  ...       ...       ...       ...
1019  -0.108644  0.248959  0.944445  ...  0.507107  0.725405  0.269099
1020   0.822555  0.293314 -0.646792  ... -0.559055 -0.830353  1.159861
1021   1.088703 -0.069279 -0.134730  ...  1.444886  0.744206 -0.777811
1022  -1.594396 -2.513778 -0.362671  ...  1.536143  0.569479  0.734742
1023   0.335938  0.869565 -0.384574  ... -0.435596  1.383897  1.366430

[1024 rows x 100 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 1024 entries, 0 to 1023
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      1024 non-null   int64  
 1   Estimator  1024 non-null   float64
dtypes: float64(1), int64(1)
memory usage: 16.1 KB
      index   Estimator
0         0   46.659416
1         1   17.096275
2         2 -214.157059
3         3  -45.132294
4         4 -472.367737
...     ...         ...
1019   1019 -131.431870
1020   1020  254.929749
1021   1021 -211.425629
1022   1022  199.635513
1023   1023  -64.848259

[1024 rows x 2 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('RandomReg_100_original', 'RidgeRegressor') Estimator 9.026909538079053e-06
      index  SQL_Estimator  Py_Estimator  SQL_Error
1008   1008    -108.818016   -108.817993  -0.000023
1009   1009      37.501743     37.501720   0.000023
1010   1010      78.414841     78.414810   0.000031
1011   1011     -46.551830    -46.551838   0.000008
1012   1012      62.289936     62.289928   0.000008
1013   1013     -27.051294    -27.051292  -0.000002
1014   1014     132.489014    132.489029  -0.000015
1015   1015      32.708813     32.708813   0.000000
1016   1016     -56.602489    -56.602501   0.000011
1017   1017     147.335556    147.335541   0.000015
1018   1018     225.116928    225.116928   0.000000
1019   1019    -131.431870   -131.431870   0.000000
1020   1020     254.929749    254.929749   0.000000
1021   1021    -211.425629   -211.425629   0.000000
1022   1022     199.635513    199.635529  -0.000015
1023   1023     -64.848259    -64.848259   0.000000
MLLITE_REG_SQL_EXECUTION_STATUS ('RandomReg_100_original', 'RidgeRegressor', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_RandomReg_100_original_option_1_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('RandomReg_100_original', 'RidgeRegressor', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('RandomReg_100_original', 'RidgeRegressor', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('RandomReg_100_original', 'RidgeRegressor', 'sqlite')
61" + -0.000001 * t."X_62" + -0.000008 * t."X_63" + -0.000003 * t."X_64" + 0.000001 * t."X_65" + 0.000011 * t."X_66" + -0.000003 * t."X_67" + -0.000001 * t."X_68" + -0.000005 * t."X_69" + -0.000005 * t."X_70" + -0.000009 * t."X_71" + -0.000003 * t."X_72" + 0.000003 * t."X_73" + 0.000005 * t."X_74" + 0.000007 * t."X_75" + -0.000001 * t."X_76" + 66.569817 * t."X_77" + -0.000011 * t."X_78" + -0.000004 * t."X_79" + 0.000007 * t."X_80" + -0.000003 * t."X_81" + 0.000005 * t."X_82" + 0.000017 * t."X_83" + -0.000005 * t."X_84" + -0.000003 * t."X_85" + 0.000003 * t."X_86" + -0.000015 * t."X_87" + -0.000006 * t."X_88" + 0.000013 * t."X_89" + 18.802328 * t."X_90" + -0.000001 * t."X_91" + -0.000009 * t."X_92" + -0.000008 * t."X_93" + -0.000001 * t."X_94" + 31.015581 * t."X_95" + 0.000004 * t."X_96" + -0.000011 * t."X_97" + -0.000000 * t."X_98" + -0.000002 * t."X_99" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_LAST_LINES_END ('RandomReg_100_original', 'RidgeRegressor', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 1024 entries, 0 to 1023
Data columns (total 100 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     1024 non-null   float32
 1   X_1     1024 non-null   float32
 2   X_2     1024 non-null   float32
 3   X_3     1024 non-null   float32
 4   X_4     1024 non-null   float32
 5   X_5     1024 non-null   float32
 6   X_6     1024 non-null   float32
 7   X_7     1024 non-null   float32
 8   X_8     1024 non-null   float32
 9   X_9     1024 non-null   float32
 10  X_10    1024 non-null   float32
 11  X_11    1024 non-null   float32
 12  X_12    1024 non-null   float32
 13  X_13    1024 non-null   float32
 14  X_14    1024 non-null   float32
 15  X_15    1024 non-null   float32
 16  X_16    1024 non-null   float32
 17  X_17    1024 non-null   float32
 18  X_18    1024 non-null   float32
 19  X_19    1024 non-null   float32
 20  X_20    1024 non-null   float32
 21  X_21    1024 non-null   float32
 22  X_22    1024 non-null   float32
 23  X_23    1024 non-null   float32
 24  X_24    1024 non-null   float32
 25  X_25    1024 non-null   float32
 26  X_26    1024 non-null   float32
 27  X_27    1024 non-null   float32
 28  X_28    1024 non-null   float32
 29  X_29    1024 non-null   float32
 30  X_30    1024 non-null   float32
 31  X_31    1024 non-null   float32
 32  X_32    1024 non-null   float32
 33  X_33    1024 non-null   float32
 34  X_34    1024 non-null   float32
 35  X_35    1024 non-null   float32
 36  X_36    1024 non-null   float32
 37  X_37    1024 non-null   float32
 38  X_38    1024 non-null   float32
 39  X_39    1024 non-null   float32
 40  X_40    1024 non-null   float32
 41  X_41    1024 non-null   float32
 42  X_42    1024 non-null   float32
 43  X_43    1024 non-null   float32
 44  X_44    1024 non-null   float32
 45  X_45    1024 non-null   float32
 46  X_46    1024 non-null   float32
 47  X_47    1024 non-null   float32
 48  X_48    1024 non-null   float32
 49  X_49    1024 non-null   float32
 50  X_50    1024 non-null   float32
 51  X_51    1024 non-null   float32
 52  X_52    1024 non-null   float32
 53  X_53    1024 non-null   float32
 54  X_54    1024 non-null   float32
 55  X_55    1024 non-null   float32
 56  X_56    1024 non-null   float32
 57  X_57    1024 non-null   float32
 58  X_58    1024 non-null   float32
 59  X_59    1024 non-null   float32
 60  X_60    1024 non-null   float32
 61  X_61    1024 non-null   float32
 62  X_62    1024 non-null   float32
 63  X_63    1024 non-null   float32
 64  X_64    1024 non-null   float32
 65  X_65    1024 non-null   float32
 66  X_66    1024 non-null   float32
 67  X_67    1024 non-null   float32
 68  X_68    1024 non-null   float32
 69  X_69    1024 non-null   float32
 70  X_70    1024 non-null   float32
 71  X_71    1024 non-null   float32
 72  X_72    1024 non-null   float32
 73  X_73    1024 non-null   float32
 74  X_74    1024 non-null   float32
 75  X_75    1024 non-null   float32
 76  X_76    1024 non-null   float32
 77  X_77    1024 non-null   float32
 78  X_78    1024 non-null   float32
 79  X_79    1024 non-null   float32
 80  X_80    1024 non-null   float32
 81  X_81    1024 non-null   float32
 82  X_82    1024 non-null   float32
 83  X_83    1024 non-null   float32
 84  X_84    1024 non-null   float32
 85  X_85    1024 non-null   float32
 86  X_86    1024 non-null   float32
 87  X_87    1024 non-null   float32
 88  X_88    1024 non-null   float32
 89  X_89    1024 non-null   float32
 90  X_90    1024 non-null   float32
 91  X_91    1024 non-null   float32
 92  X_92    1024 non-null   float32
 93  X_93    1024 non-null   float32
 94  X_94    1024 non-null   float32
 95  X_95    1024 non-null   float32
 96  X_96    1024 non-null   float32
 97  X_97    1024 non-null   float32
 98  X_98    1024 non-null   float32
 99  X_99    1024 non-null   float32
dtypes: float32(100)
memory usage: 408.0 KB
            X_0       X_1       X_2  ...      X_97      X_98      X_99
index                                ...                              
0      1.331256 -0.890219  0.415263  ...  0.066743 -1.017662  0.850023
1      0.101475  1.673349  0.646130  ... -0.967804 -0.082562 -0.235254
2      1.143388 -0.121749  1.763748  ... -0.006825 -1.210605  0.186911
3     -0.664377  0.702461 -2.030148  ...  1.036630 -1.509694  1.665004
4     -0.183233  0.167641 -1.018050  ...  0.131021 -0.518277 -0.467736
...         ...       ...       ...  ...       ...       ...       ...
1019  -0.108644  0.248959  0.944445  ...  0.507107  0.725405  0.269099
1020   0.822555  0.293314 -0.646792  ... -0.559055 -0.830353  1.159861
1021   1.088703 -0.069279 -0.134730  ...  1.444886  0.744206 -0.777811
1022  -1.594396 -2.513778 -0.362671  ...  1.536143  0.569479  0.734742
1023   0.335938  0.869565 -0.384574  ... -0.435596  1.383897  1.366430

[1024 rows x 100 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 1024 entries, 0 to 1023
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      1024 non-null   int64  
 1   Estimator  1024 non-null   float64
dtypes: float64(1), int64(1)
memory usage: 16.1 KB
      index   Estimator
0         0   46.659388
1         1   17.096274
2         2 -214.157080
3         3  -45.132271
4         4 -472.367740
...     ...         ...
1019   1019 -131.431890
1020   1020  254.929755
1021   1021 -211.425602
1022   1022  199.635545
1023   1023  -64.848270

[1024 rows x 2 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('RandomReg_100_original', 'RidgeRegressor') Estimator 1.5347685231919384e-05
      index  SQL_Estimator  Py_Estimator  SQL_Error
1008   1008    -108.818028   -108.817993  -0.000035
1009   1009      37.501743     37.501720   0.000023
1010   1010      78.414835     78.414810   0.000025
1011   1011     -46.551835    -46.551838   0.000003
1012   1012      62.289935     62.289928   0.000006
1013   1013     -27.051304    -27.051292  -0.000011
1014   1014     132.489017    132.489029  -0.000011
1015   1015      32.708819     32.708813   0.000007
1016   1016     -56.602522    -56.602501  -0.000021
1017   1017     147.335556    147.335541   0.000016
1018   1018     225.116972    225.116928   0.000044
1019   1019    -131.431890   -131.431870  -0.000021
1020   1020     254.929755    254.929749   0.000007
1021   1021    -211.425602   -211.425629   0.000027
1022   1022     199.635545    199.635529   0.000016
1023   1023     -64.848270    -64.848259  -0.000011
MLLITE_REG_SQL_EXECUTION_STATUS ('RandomReg_100_original', 'RidgeRegressor', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_RandomReg_100_original_option_1_pgsql.sql'



SQL_OUT_PUT_FIRST_LINES_START ('RandomReg_100_original', 'RidgeRegressor', 'pgsql')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('RandomReg_100_original', 'RidgeRegressor', 'pgsql')
SQL_OUT_PUT_LAST_LINES_START ('RandomReg_100_original', 'RidgeRegressor', 'pgsql')
61" + -0.000001 * t."X_62" + -0.000008 * t."X_63" + -0.000003 * t."X_64" + 0.000001 * t."X_65" + 0.000011 * t."X_66" + -0.000003 * t."X_67" + -0.000001 * t."X_68" + -0.000005 * t."X_69" + -0.000005 * t."X_70" + -0.000009 * t."X_71" + -0.000003 * t."X_72" + 0.000003 * t."X_73" + 0.000005 * t."X_74" + 0.000007 * t."X_75" + -0.000001 * t."X_76" + 66.569817 * t."X_77" + -0.000011 * t."X_78" + -0.000004 * t."X_79" + 0.000007 * t."X_80" + -0.000003 * t."X_81" + 0.000005 * t."X_82" + 0.000017 * t."X_83" + -0.000005 * t."X_84" + -0.000003 * t."X_85" + 0.000003 * t."X_86" + -0.000015 * t."X_87" + -0.000006 * t."X_88" + 0.000013 * t."X_89" + 18.802328 * t."X_90" + -0.000001 * t."X_91" + -0.000009 * t."X_92" + -0.000008 * t."X_93" + -0.000001 * t."X_94" + 31.015581 * t."X_95" + 0.000004 * t."X_96" + -0.000011 * t."X_97" + -0.000000 * t."X_98" + -0.000002 * t."X_99" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_LAST_LINES_END ('RandomReg_100_original', 'RidgeRegressor', 'pgsql') 




COPY_TRAINING_DATA_TO_SQLITE_START
