         age       sex       bmi  ...        s5        s6  target
0   0.038076  0.050680 -0.009439  ... -0.025953  0.106617    81.0
1   0.081666  0.050680  0.001339  ...  0.084492 -0.030072   196.0
2   0.041708 -0.044642 -0.008362  ... -0.048359 -0.030072    81.0
3  -0.041840 -0.044642  0.128521  ... -0.015999 -0.050783   259.0
4   0.023546  0.050680 -0.030996  ... -0.074093 -0.034215    55.0
..       ...       ...       ...  ...       ...       ...     ...
59  0.045341  0.050680  0.068163  ...  0.032432 -0.017646   259.0
60 -0.027310  0.050680  0.060618  ...  0.070207  0.135612   243.0
61 -0.001882 -0.044642  0.054152  ...  0.084492  0.048628   192.0
62  0.045341 -0.044642 -0.006206  ...  0.042897 -0.038357   134.0
63 -0.041840 -0.044642 -0.033151  ... -0.025953 -0.038357    94.0

[64 rows x 11 columns]
MLLITE_MODEL_SET_OPTIONS MLPRegressor {"hidden_layer_sizes" : [4, 8, 6]}
MLLITE_MODEL_OPTIONS_DEFAULT MLPRegressor { "max_iter" : 32}
MLLITE_MODEL_OPTIONS_AFTER_SETTING MLPRegressor { "hidden_layer_sizes" : [4, 8, 6],  "max_iter" : 32 , }
MLLITE_MODEL_JSON_AFTER_SETTING MLPRegressor None
('OPERATION_START', 'TRAINING')
[[ 0.03807591  0.05068012 -0.00943939  0.00235142  0.00118295  0.03751653
  -0.05444576  0.05017634 -0.02595311  0.10661709]
 [ 0.08166637  0.05068012  0.00133873  0.03564379  0.12639466  0.09106492
   0.019187    0.03430886  0.08449153 -0.03007245]
 [ 0.04170844 -0.04464164 -0.00836158 -0.02632753  0.02457414  0.01622244
   0.07072993 -0.03949338 -0.04835926 -0.03007245]
 [-0.04183994 -0.04464164  0.12852055  0.0631866  -0.03321588 -0.03262872
   0.01182372 -0.03949338 -0.01599887 -0.05078298]
 [ 0.02354575  0.05068012 -0.03099563 -0.00567042 -0.01670444  0.01778818
  -0.03235593 -0.00259226 -0.0740926  -0.03421455]] [ 81. 196.  81. 259.  55.]
MLLITE_FIT_USING_MODEL mllite_mlp_reg.MLPRegressor_ff4_ff4
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT' 1 3
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT' 2 3
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 3 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 6 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 9 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 12 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 15 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 18 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 21 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 24 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 27 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 30 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 32 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT' 3 3
('OPERATION_END_ELAPSED', 0.016, 'TRAINING')
{ "hidden_layer_sizes" : [4, 8, 6],  "max_iter" : 32 , }
{ "hidden_layer_sizes" : [4, 8, 6],  "max_iter" : 32 , }
{
	"metadata" : { "model" : "Rosenblatt_MLP", "version" : "2024-W12", "signature" : "ff4_ff4"},
	"options" : {  "hidden_layer_sizes" : [ 4, 8, 6 ], "activation" : "relu", "solver" : "adam", "alpha" : 0.000100, "batch_size" : null, "learning_rate" : "constant", "learning_rate_init" : 0.001000, "power_t" : 0.500000, "max_iter" : 32, "shuffle" : 1, "random_state" : 1789, "tol" : 0.000100, "verbose" : 0, "warm_start" : 0, "momentum" : 0.900000, "nesterovs_momentum" : 1, "early_stopping" : 0, "validation_fraction" : 0.100000, "beta_1" : 0.900000, "beta_2" : 0.999000, "epsilon" : 0.000000, "n_iter_no_change" : 10, "max_fun" : 15000 },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 10 },
	"layers" : {
		"sizes" : [ 10, 4, 8, 6, 1 ],
		"Layer_0" : {
			"name" : "Input_Layer",
			"NbInputs" : 0,
			"NbOutputs" : 10 
		},
		"Layer_1" : {
			"name" : "Hidden_Layer_1",
			"NbInputs" : 10,
			"NbOutputs" : 4 ,
			"coeffs_0" : [ -0.056448, 0.373958, -0.298902, -0.021615 ],
			"coeffs_1" : [ 0.120414, -0.425027, 0.157956, 0.046877 ],
			"coeffs_2" : [ 0.558164, 0.173400, 0.512551, -0.075841 ],
			"coeffs_3" : [ 0.650853, -0.544989, -0.305857, 0.269085 ],
			"coeffs_4" : [ 0.342145, -0.280932, -0.364438, -0.484203 ],
			"coeffs_5" : [ 0.283620, -0.679157, -0.073024, 0.006372 ],
			"coeffs_6" : [ -0.130053, -0.629185, -0.303447, 0.508869 ],
			"coeffs_7" : [ -0.048116, 0.039825, -0.617968, 0.063830 ],
			"coeffs_8" : [ -0.199980, 0.275306, -0.163277, 0.302516 ],
			"coeffs_9" : [ -0.435677, 0.605504, -0.510485, 0.374580 ],
			"intercepts" : [ -0.470260, 0.394618, 0.122466, 0.621386 ]
		},
		"Layer_2" : {
			"name" : "Hidden_Layer_2",
			"NbInputs" : 4,
			"NbOutputs" : 8 ,
			"coeffs_0" : [ -0.443915, -0.544968, 0.236548, 0.254996, 0.475586, 0.606558, 0.538130, -0.459344 ],
			"coeffs_1" : [ 0.455163, 0.545793, -0.456651, 0.315838, 0.241928, 0.021359, 0.058106, 0.437406 ],
			"coeffs_2" : [ -0.574903, 0.059855, 0.260873, 0.406786, -0.571902, 0.459426, -0.424326, -0.621203 ],
			"coeffs_3" : [ 0.729925, 0.644543, -0.122730, -0.575044, 0.006925, 0.644591, -0.541715, 0.312170 ],
			"intercepts" : [ 0.350549, 0.387529, 0.593625, -0.357124, 0.329853, 0.466236, 0.486660, -0.030071 ]
		},
		"Layer_3" : {
			"name" : "Hidden_Layer_3",
			"NbInputs" : 8,
			"NbOutputs" : 6 ,
			"coeffs_0" : [ -0.613293, 0.295155, 0.007260, -0.124039, -0.480768, -0.619361 ],
			"coeffs_1" : [ -0.271050, 0.558786, 0.027252, -0.133482, -0.151607, -0.586402 ],
			"coeffs_2" : [ 0.187084, -0.230040, -0.254067, -0.133022, 0.269611, -0.462554 ],
			"coeffs_3" : [ -0.215160, 0.376506, 0.431074, 0.557300, 0.475690, 0.371699 ],
			"coeffs_4" : [ -0.310732, 0.029260, 0.182889, 0.443776, 0.321790, -0.001604 ],
			"coeffs_5" : [ 0.345005, 0.423129, 0.107910, -0.225065, -0.178974, -0.324393 ],
			"coeffs_6" : [ 0.313933, 0.333884, -0.452853, 0.212193, -0.417195, -0.001729 ],
			"coeffs_7" : [ 0.089718, -0.296584, 0.299111, -0.618701, -0.588556, 0.488080 ],
			"intercepts" : [ 0.561580, -0.464773, -0.245913, -0.494865, -0.500519, -0.502640 ]
		},
		"Layer_4" : {
			"name" : "Output_Layer",
			"NbInputs" : 6,
			"NbOutputs" : 1 ,
			"coeffs_0" : [ -0.279235 ],
			"coeffs_1" : [ -0.180693 ],
			"coeffs_2" : [ -0.605936 ],
			"coeffs_3" : [ -0.667527 ],
			"coeffs_4" : [ -0.789899 ],
			"coeffs_5" : [ 0.178692 ],
			"intercepts" : [ -0.575931 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/regression/MLPRegressor/mllite.MLPRegressor_diabetes_small_option_1.json'

MLLITE_MODEL_SET_OPTIONS MLPRegressor {"hidden_layer_sizes" : [4, 8, 6]}
MLLITE_MODEL_OPTIONS_DEFAULT MLPRegressor { "max_iter" : 32}
MLLITE_MODEL_OPTIONS_AFTER_SETTING MLPRegressor { "hidden_layer_sizes" : [4, 8, 6],  "max_iter" : 32 , }
MLLITE_MODEL_JSON_AFTER_SETTING MLPRegressor None
MLLITE_RELOADING_MODEL mllite_mlp_reg.MLPRegressor_ff4_ff4
{
	"metadata" : { "model" : "Rosenblatt_MLP", "version" : "2024-W12", "signature" : "ff4_ff4"},
	"options" : {  "hidden_layer_sizes" : [ 4, 8, 6 ], "activation" : "relu", "solver" : "adam", "alpha" : 0.000100, "batch_size" : null, "learning_rate" : "constant", "learning_rate_init" : 0.001000, "power_t" : 0.500000, "max_iter" : 32, "shuffle" : 1, "random_state" : 1789, "tol" : 0.000100, "verbose" : 0, "warm_start" : 0, "momentum" : 0.900000, "nesterovs_momentum" : 1, "early_stopping" : 0, "validation_fraction" : 0.100000, "beta_1" : 0.900000, "beta_2" : 0.999000, "epsilon" : 0.000000, "n_iter_no_change" : 10, "max_fun" : 15000 },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 10 },
	"layers" : {
		"sizes" : [ 10, 4, 8, 6, 1 ],
		"Layer_0" : {
			"name" : "Input_Layer",
			"NbInputs" : 0,
			"NbOutputs" : 10 
		},
		"Layer_1" : {
			"name" : "Hidden_Layer_1",
			"NbInputs" : 10,
			"NbOutputs" : 4 ,
			"coeffs_0" : [ -0.056448, 0.373958, -0.298902, -0.021615 ],
			"coeffs_1" : [ 0.120414, -0.425027, 0.157956, 0.046877 ],
			"coeffs_2" : [ 0.558164, 0.173400, 0.512551, -0.075841 ],
			"coeffs_3" : [ 0.650853, -0.544989, -0.305857, 0.269085 ],
			"coeffs_4" : [ 0.342145, -0.280932, -0.364438, -0.484203 ],
			"coeffs_5" : [ 0.283620, -0.679157, -0.073024, 0.006372 ],
			"coeffs_6" : [ -0.130053, -0.629185, -0.303447, 0.508869 ],
			"coeffs_7" : [ -0.048116, 0.039825, -0.617968, 0.063830 ],
			"coeffs_8" : [ -0.199980, 0.275306, -0.163277, 0.302516 ],
			"coeffs_9" : [ -0.435677, 0.605504, -0.510485, 0.374580 ],
			"intercepts" : [ -0.470260, 0.394618, 0.122466, 0.621386 ]
		},
		"Layer_2" : {
			"name" : "Hidden_Layer_2",
			"NbInputs" : 4,
			"NbOutputs" : 8 ,
			"coeffs_0" : [ -0.443915, -0.544968, 0.236548, 0.254996, 0.475586, 0.606558, 0.538130, -0.459344 ],
			"coeffs_1" : [ 0.455163, 0.545793, -0.456651, 0.315838, 0.241928, 0.021359, 0.058106, 0.437406 ],
			"coeffs_2" : [ -0.574903, 0.059855, 0.260873, 0.406786, -0.571902, 0.459426, -0.424326, -0.621203 ],
			"coeffs_3" : [ 0.729925, 0.644543, -0.122730, -0.575044, 0.006925, 0.644591, -0.541715, 0.312170 ],
			"intercepts" : [ 0.350549, 0.387529, 0.593625, -0.357124, 0.329853, 0.466236, 0.486660, -0.030071 ]
		},
		"Layer_3" : {
			"name" : "Hidden_Layer_3",
			"NbInputs" : 8,
			"NbOutputs" : 6 ,
			"coeffs_0" : [ -0.613293, 0.295155, 0.007260, -0.124039, -0.480768, -0.619361 ],
			"coeffs_1" : [ -0.271050, 0.558786, 0.027252, -0.133482, -0.151607, -0.586402 ],
			"coeffs_2" : [ 0.187084, -0.230040, -0.254067, -0.133022, 0.269611, -0.462554 ],
			"coeffs_3" : [ -0.215160, 0.376506, 0.431074, 0.557300, 0.475690, 0.371699 ],
			"coeffs_4" : [ -0.310732, 0.029260, 0.182889, 0.443776, 0.321790, -0.001604 ],
			"coeffs_5" : [ 0.345005, 0.423129, 0.107910, -0.225065, -0.178974, -0.324393 ],
			"coeffs_6" : [ 0.313933, 0.333884, -0.452853, 0.212193, -0.417195, -0.001729 ],
			"coeffs_7" : [ 0.089718, -0.296584, 0.299111, -0.618701, -0.588556, 0.488080 ],
			"intercepts" : [ 0.561580, -0.464773, -0.245913, -0.494865, -0.500519, -0.502640 ]
		},
		"Layer_4" : {
			"name" : "Output_Layer",
			"NbInputs" : 6,
			"NbOutputs" : 1 ,
			"coeffs_0" : [ -0.279235 ],
			"coeffs_1" : [ -0.180693 ],
			"coeffs_2" : [ -0.605936 ],
			"coeffs_3" : [ -0.667527 ],
			"coeffs_4" : [ -0.789899 ],
			"coeffs_5" : [ 0.178692 ],
			"intercepts" : [ -0.575931 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"dataset" : 	{
		"dataset_features" : 10,
		"dataset_rows" : 64
	},
	"layers" : 	{
		"Layer_0" : 	{
			"NbInputs" : 0,
			"NbOutputs" : 10,
			"name" : "Input_Layer"
		},
		"Layer_1" : 	{
			"NbInputs" : 10,
			"NbOutputs" : 4,
			"coeffs_0" : [ -0.056448, 0.373958, -0.298902, -0.021615 ],
			"coeffs_1" : [ 0.120414, -0.425027, 0.157956, 0.046877 ],
			"coeffs_2" : [ 0.558164, 0.1734, 0.512551, -0.075841 ],
			"coeffs_3" : [ 0.650853, -0.544989, -0.305857, 0.269085 ],
			"coeffs_4" : [ 0.342145, -0.280932, -0.364438, -0.484203 ],
			"coeffs_5" : [ 0.28362, -0.679157, -0.073024, 0.006372 ],
			"coeffs_6" : [ -0.130053, -0.629185, -0.303447, 0.508869 ],
			"coeffs_7" : [ -0.048116, 0.039825, -0.617968, 0.06383 ],
			"coeffs_8" : [ -0.19998, 0.275306, -0.163277, 0.302516 ],
			"coeffs_9" : [ -0.435677, 0.605504, -0.510485, 0.37458 ],
			"intercepts" : [ -0.47026, 0.394618, 0.122466, 0.621386 ],
			"name" : "Hidden_Layer_1"
		},
		"Layer_2" : 	{
			"NbInputs" : 4,
			"NbOutputs" : 8,
			"coeffs_0" : [ -0.443915, -0.544968, 0.236548, 0.254996, 0.475586, 0.606558, 0.53813, -0.459344 ],
			"coeffs_1" : [ 0.455163, 0.545793, -0.456651, 0.315838, 0.241928, 0.021359, 0.058106, 0.437406 ],
			"coeffs_2" : [ -0.574903, 0.059855, 0.260873, 0.406786, -0.571902, 0.459426, -0.424326, -0.621203 ],
			"coeffs_3" : [ 0.729925, 0.644543, -0.12273, -0.575044, 0.006925, 0.644591, -0.541715, 0.31217 ],
			"intercepts" : [ 0.350549, 0.387529, 0.593625, -0.357124, 0.329853, 0.466236, 0.48666, -0.030071 ],
			"name" : "Hidden_Layer_2"
		},
		"Layer_3" : 	{
			"NbInputs" : 8,
			"NbOutputs" : 6,
			"coeffs_0" : [ -0.613293, 0.295155, 0.00726, -0.124039, -0.480768, -0.619361 ],
			"coeffs_1" : [ -0.27105, 0.558786, 0.027252, -0.133482, -0.151607, -0.586402 ],
			"coeffs_2" : [ 0.187084, -0.23004, -0.254067, -0.133022, 0.269611, -0.462554 ],
			"coeffs_3" : [ -0.21516, 0.376506, 0.431074, 0.5573, 0.47569, 0.371699 ],
			"coeffs_4" : [ -0.310732, 0.02926, 0.182889, 0.443776, 0.32179, -0.001604 ],
			"coeffs_5" : [ 0.345005, 0.423129, 0.10791, -0.225065, -0.178974, -0.324393 ],
			"coeffs_6" : [ 0.313933, 0.333884, -0.452853, 0.212193, -0.417195, -0.001729 ],
			"coeffs_7" : [ 0.089718, -0.296584, 0.299111, -0.618701, -0.588556, 0.48808 ],
			"intercepts" : [ 0.56158, -0.464773, -0.245913, -0.494865, -0.500519, -0.50264 ],
			"name" : "Hidden_Layer_3"
		},
		"Layer_4" : 	{
			"NbInputs" : 6,
			"NbOutputs" : 1,
			"coeffs_0" : [ -0.279235 ],
			"coeffs_1" : [ -0.180693 ],
			"coeffs_2" : [ -0.605936 ],
			"coeffs_3" : [ -0.667527 ],
			"coeffs_4" : [ -0.789899 ],
			"coeffs_5" : [ 0.178692 ],
			"intercepts" : [ -0.575931 ],
			"name" : "Output_Layer"
		},
		"sizes" : [ 10, 4, 8, 6, 1 ]
	},
	"metadata" :  { "model" : "Rosenblatt_MLP", "signature" : "ff4_ff4", "version" : "2024-W12" },
	"options" :  { "activation" : "relu", "alpha" : 0.0001, "batch_size" : null, "beta_1" : 0.9, "beta_2" : 0.999, "early_stopping" : 0, "epsilon" : 0.0, "hidden_layer_sizes" : [ 4, 8, 6 ], "learning_rate" : "constant", "learning_rate_init" : 0.001, "max_fun" : 15000, "max_iter" : 32, "momentum" : 0.9, "n_iter_no_change" : 10, "nesterovs_momentum" : 1, "power_t" : 0.5, "random_state" : 1789, "shuffle" : 1, "solver" : "adam", "tol" : 0.0001, "validation_fraction" : 0.1, "verbose" : 0, "warm_start" : 0 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
[-0.6992944  -0.70516706 -0.7165121  -0.73172253 -0.7224908  -0.70209455
 -0.71763986 -0.72521394 -0.7011546  -0.724801   -0.7254979  -0.7235326
 -0.7043282  -0.7308136  -0.73090184 -0.72806233 -0.70475274 -0.7162558
 -0.7187985  -0.71365684 -0.71161675 -0.72797704 -0.7389362  -0.7228217
 -0.70262194 -0.7004937  -0.71810055 -0.72448254 -0.70347667 -0.71604764
 -0.7280872  -0.71447986 -0.7195293  -0.7341709  -0.70470005 -0.7062838
 -0.712465   -0.71596587 -0.7042718  -0.70186806 -0.708808   -0.7105225
 -0.7213479  -0.73495317 -0.7164494  -0.7057047  -0.7262077  -0.70446914
 -0.7073487  -0.71702087 -0.7130108  -0.7052231  -0.7215662  -0.72755206
 -0.72105664 -0.71045923 -0.7159513  -0.70614946 -0.7193276  -0.71282375
 -0.7061208  -0.69829905 -0.71000886 -0.719746  ]
('OPERATION_END_ELAPSED', 0.002, 'PREDICT')
('OPERATION_START', 'PREDICT')
[-0.69929445 -0.705167   -0.7165121  -0.73172253 -0.7224908  -0.7020945
 -0.7176398  -0.72521394 -0.7011545  -0.724801   -0.72549784 -0.72353256
 -0.70432824 -0.73081356 -0.73090184 -0.72806233 -0.7047526  -0.7162558
 -0.7187985  -0.71365684 -0.7116167  -0.72797704 -0.73893625 -0.7228217
 -0.702622   -0.7004936  -0.7181005  -0.7244826  -0.70347667 -0.71604764
 -0.7280871  -0.7144798  -0.7195293  -0.7341709  -0.7047     -0.70628375
 -0.7124649  -0.7159658  -0.70427173 -0.70186806 -0.70880795 -0.7105224
 -0.7213479  -0.7349531  -0.71644926 -0.70570457 -0.7262076  -0.7044691
 -0.7073487  -0.71702087 -0.71301067 -0.70522314 -0.7215662  -0.727552
 -0.7210566  -0.7104592  -0.7159512  -0.70614946 -0.71932757 -0.71282375
 -0.70612085 -0.69829893 -0.71000886 -0.71974593]
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
MODEL_PERFS {'class_name': 'mllite.MLPRegressor', 'model_name': 'MLPRegressor', 'options': '{"hidden_layer_sizes" : [4, 8, 6]}', 'dataset': 'diabetes_small', 'size': 64, 'mse': 27371.545, 'mae': 144.35611, 'mape': 1.0068479, 'r2': -3.1893678514433796}
WRITING_PERF_CODE 'logs/auto_tests/regression/MLPRegressor/mllite.MLPRegressor_diabetes_small_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.MLPRegressor', 'model_name': 'MLPRegressor', 'options': '{"hidden_layer_sizes" : [4, 8, 6]}', 'dataset': 'diabetes_small', 'training_time_in_sec': 0.016, 'prediction_time_in_sec': 0.001}
WRITING_SQL_CODE 'logs/auto_tests/regression/MLPRegressor/mllite.MLPRegressor_diabetes_small_option_1.sql'



SQL_OUT_PUT_FIRST_LINES_START
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
"Input_Layer_BA" AS
 ( SELECT
    t."index" as "index",
    t.X_0 AS OUT_0,
    t.X_1 AS OUT_1,
    t.X_2 AS OUT_2,
    t.X_3 AS OUT_3,
    t.X_4 AS OUT_4,
    t.X_5 AS OUT_5,
    t.X_6 AS OUT_6,
    t.X_7 AS OUT_7,
    t.X_8 AS OUT_8,
    t.X_9 AS OUT_9
 FROM model_input AS t
),
"Hidden_Layer_1_BA" AS
 ( SELECT
    t."index" as "index",
    -0.470260 + -0.056448 * t.OUT_0  + 0.120414 * t.OUT_1  + 0.558164 * t.OUT_2  + 0.650853 * t.OUT_3  + 0.342145 * t.OUT_4  + 0.283620 * t.OUT_5  + -0.130053 * t.OUT_6  + -0.048116 * t.OUT_7  + -0.199980 * t.OUT_
SQL_OUT_PUT_FIRST_LINES_END
SQL_OUT_PUT_LAST_LINES_START
9361 * t.OUT_0  + -0.586402 * t.OUT_1  + -0.462554 * t.OUT_2  + 0.371699 * t.OUT_3  + -0.001604 * t.OUT_4  + -0.324393 * t.OUT_5  + -0.001729 * t.OUT_6  + 0.488080 * t.OUT_7 AS OUT_5
   FROM Hidden_Layer_2_Activation AS t
 ),
"Hidden_Layer_3_Activation" AS
 ( SELECT
    t."index" as "index",
    CASE WHEN (OUT_0 > 0) THEN OUT_0 ELSE 0 END AS OUT_0,
    CASE WHEN (OUT_1 > 0) THEN OUT_1 ELSE 0 END AS OUT_1,
    CASE WHEN (OUT_2 > 0) THEN OUT_2 ELSE 0 END AS OUT_2,
    CASE WHEN (OUT_3 > 0) THEN OUT_3 ELSE 0 END AS OUT_3,
    CASE WHEN (OUT_4 > 0) THEN OUT_4 ELSE 0 END AS OUT_4,
    CASE WHEN (OUT_5 > 0) THEN OUT_5 ELSE 0 END AS OUT_5
   FROM Hidden_Layer_3_BA AS t
 ),
"Output_Layer_BA" AS
 ( SELECT
    t."index" as "index",
    -0.575931 + -0.279235 * t.OUT_0  + -0.180693 * t.OUT_1  + -0.605936 * t.OUT_2  + -0.667527 * t.OUT_3  + -0.789899 * t.OUT_4  + 0.178692 * t.OUT_5 AS OUT_0
   FROM Hidden_Layer_3_Activation AS t
 )
 SELECT
    t."index" AS "index",
    t.OUT_0 AS "Estimator"
  FROM "Output_Layer_BA" AS t

SQL_OUT_PUT_LAST_LINES_END




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 64 entries, 0 to 63
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     64 non-null     float32
 1   X_1     64 non-null     float32
 2   X_2     64 non-null     float32
 3   X_3     64 non-null     float32
 4   X_4     64 non-null     float32
 5   X_5     64 non-null     float32
 6   X_6     64 non-null     float32
 7   X_7     64 non-null     float32
 8   X_8     64 non-null     float32
 9   X_9     64 non-null     float32
dtypes: float32(10)
memory usage: 3.0 KB
            X_0       X_1       X_2  ...       X_7       X_8       X_9
index                                ...                              
0      0.038076  0.050680 -0.009439  ...  0.050176 -0.025953  0.106617
1      0.081666  0.050680  0.001339  ...  0.034309  0.084492 -0.030072
2      0.041708 -0.044642 -0.008362  ... -0.039493 -0.048359 -0.030072
3     -0.041840 -0.044642  0.128521  ... -0.039493 -0.015999 -0.050783
4      0.023546  0.050680 -0.030996  ... -0.002592 -0.074093 -0.034215
...         ...       ...       ...  ...       ...       ...       ...
59     0.045341  0.050680  0.068163  ...  0.071210  0.032432 -0.017646
60    -0.027310  0.050680  0.060618  ... -0.002592  0.070207  0.135612
61    -0.001882 -0.044642  0.054152  ...  0.084863  0.084492  0.048628
62     0.045341 -0.044642 -0.006206  ... -0.039493  0.042897 -0.038357
63    -0.041840 -0.044642 -0.033151  ... -0.024733 -0.025953 -0.038357

[64 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 64 entries, 0 to 63
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      64 non-null     int64  
 1   Estimator  64 non-null     float64
dtypes: float64(1), int64(1)
memory usage: 1.1 KB
    index  Estimator
0       0  -0.699294
1       1  -0.705167
2       2  -0.716512
3       3  -0.731723
4       4  -0.722491
..    ...        ...
59     59  -0.712824
60     60  -0.706121
61     61  -0.698299
62     62  -0.710009
63     63  -0.719746

[64 rows x 2 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
    index  SQL_Estimator  Py_Estimator
48     48      -0.707349     -0.707349
49     49      -0.717021     -0.717021
50     50      -0.713011     -0.713011
51     51      -0.705223     -0.705223
52     52      -0.721566     -0.721566
53     53      -0.727552     -0.727552
54     54      -0.721057     -0.721057
55     55      -0.710459     -0.710459
56     56      -0.715951     -0.715951
57     57      -0.706149     -0.706149
58     58      -0.719328     -0.719328
59     59      -0.712824     -0.712824
60     60      -0.706121     -0.706121
61     61      -0.698299     -0.698299
62     62      -0.710009     -0.710009
63     63      -0.719746     -0.719746
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
