         age       sex       bmi  ...        s5        s6  target
0   0.038076  0.050680 -0.009439  ... -0.025953  0.106617    81.0
1   0.081666  0.050680  0.001339  ...  0.084492 -0.030072   196.0
2   0.041708 -0.044642 -0.008362  ... -0.048359 -0.030072    81.0
3  -0.041840 -0.044642  0.128521  ... -0.015999 -0.050783   259.0
4   0.023546  0.050680 -0.030996  ... -0.074093 -0.034215    55.0
..       ...       ...       ...  ...       ...       ...     ...
59  0.045341  0.050680  0.068163  ...  0.032432 -0.017646   259.0
60 -0.027310  0.050680  0.060618  ...  0.070207  0.135612   243.0
61 -0.001882 -0.044642  0.054152  ...  0.084492  0.048628   192.0
62  0.045341 -0.044642 -0.006206  ...  0.042897 -0.038357   134.0
63 -0.041840 -0.044642 -0.033151  ... -0.025953 -0.038357    94.0

[64 rows x 11 columns]
MLLITE_MODEL_SET_OPTIONS NuSVR {"nu" : 0.1}
MLLITE_MODEL_OPTIONS_DEFAULT NuSVR { "max_iter" : 128 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING NuSVR { "nu" : 0.1,  "max_iter" : 128  , }
MLLITE_MODEL_JSON_AFTER_SETTING NuSVR None
('OPERATION_START', 'TRAINING')
[[ 0.03807591  0.05068012 -0.00943939  0.00235142  0.00118295  0.03751653
  -0.05444576  0.05017634 -0.02595311  0.10661709]
 [ 0.08166637  0.05068012  0.00133873  0.03564379  0.12639466  0.09106492
   0.019187    0.03430886  0.08449153 -0.03007245]
 [ 0.04170844 -0.04464164 -0.00836158 -0.02632753  0.02457414  0.01622244
   0.07072993 -0.03949338 -0.04835926 -0.03007245]
 [-0.04183994 -0.04464164  0.12852055  0.0631866  -0.03321588 -0.03262872
   0.01182372 -0.03949338 -0.01599887 -0.05078298]
 [ 0.02354575  0.05068012 -0.03099563 -0.00567042 -0.01670444  0.01778818
  -0.03235593 -0.00259226 -0.0740926  -0.03421455]] [ 81. 196.  81. 259.  55.]
MLLITE_FIT_USING_MODEL mllite_nu_svm_reg.NuSVR_ff4_ff4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_NU_REGRESSOR_FIT' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_NU_REGRESSOR_FIT' 2 4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_NU_REGRESSOR_FIT' 3 4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_NU_REGRESSOR_FIT' 4 4
('OPERATION_END_ELAPSED', 0.007, 'TRAINING')
{ "nu" : 0.1,  "max_iter" : 128  , }
{ "nu" : 0.1,  "max_iter" : 128  , }
{
	"metadata" : { "model" : "Vapnik_NuSVR_RBF", "version" : "2024-W12", "signature" : "ff4_ff4"},
	"options" : {"svm_type" : "nu_svr", "kernel" : "rbf", "degree" : 3, "gamma" : 45.754257, "coef0" : 0.000000, "cache_size" : 300, "tol" : 0.001000, "nu" : 0.100000, "epsilon" : 0.000000, "shrinking" : 0, "probability" : 0, "C" : 1.000000, "max_iter" : 128, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 10 },
	"svm_model" : {
	"classes" : 2,
	"L" : 8,
	"SupportVectors" : {
		"SV_0" : [ 0.023546, 0.050680, -0.020218, -0.036656, -0.013953, -0.015092, 0.059685, -0.039493, -0.096435, -0.017646 ],
		"SV_1" : [ 0.019913, 0.050680, 0.104809, 0.070072, -0.035968, -0.026679, -0.024993, -0.002592, 0.003709, 0.040343 ],
		"SV_2" : [ -0.005515, 0.050680, 0.001339, -0.084856, -0.011201, -0.016658, 0.048640, -0.039493, -0.041176, -0.088062 ],
		"SV_3" : [ 0.041708, 0.050680, 0.071397, 0.008101, 0.038334, 0.015909, -0.017629, 0.034309, 0.073407, 0.085907 ],
		"SV_4" : [ 0.009016, -0.044642, -0.012673, 0.028758, -0.018080, -0.005072, -0.047082, 0.034309, 0.023371, -0.005220 ],
		"SV_5" : [ -0.049105, -0.044642, 0.160855, -0.046985, -0.029088, -0.019790, -0.047082, 0.034309, 0.028020, 0.011349 ],
		"SV_6" : [ -0.034575, 0.050680, -0.055785, -0.015999, -0.009825, -0.007890, 0.037595, -0.039493, -0.052963, 0.027917 ],
		"SV_7" : [ 0.016281, 0.050680, -0.046085, 0.011544, -0.033216, -0.016032, -0.010266, -0.002592, -0.043984, -0.042499 ]
	},
	"SupportVectorsCoefs" : {
		"SV_coef_0" : [ -1.000000, 1.000000, -0.199998, 1.000000, 0.199998, 1.000000, -1.000000, -1.000000 ]
	},
	"rho" : [ -172.155716 ],
	"nSV" : [ 8 ],
	"probA" : [ ],
	"probB" : [ ],
	"n_iter" : [ 9 ]
}
}
WRITING_JSON_CODE 'logs/auto_tests/regression/NuSVR/mllite.NuSVR_diabetes_small_option_1.json'

MLLITE_MODEL_SET_OPTIONS NuSVR {"nu" : 0.1}
MLLITE_MODEL_OPTIONS_DEFAULT NuSVR { "max_iter" : 128 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING NuSVR { "nu" : 0.1,  "max_iter" : 128  , }
MLLITE_MODEL_JSON_AFTER_SETTING NuSVR None
MLLITE_RELOADING_MODEL mllite_nu_svm_reg.NuSVR_ff4_ff4
{
	"metadata" : { "model" : "Vapnik_NuSVR_RBF", "version" : "2024-W12", "signature" : "ff4_ff4"},
	"options" : {"svm_type" : "nu_svr", "kernel" : "rbf", "degree" : 3, "gamma" : 45.754257, "coef0" : 0.000000, "cache_size" : 300, "tol" : 0.001000, "nu" : 0.100000, "epsilon" : 0.000000, "shrinking" : 0, "probability" : 0, "C" : 1.000000, "max_iter" : 128, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 10 },
	"svm_model" : {
	"classes" : 2,
	"L" : 8,
	"SupportVectors" : {
		"SV_0" : [ 0.023546, 0.050680, -0.020218, -0.036656, -0.013953, -0.015092, 0.059685, -0.039493, -0.096435, -0.017646 ],
		"SV_1" : [ 0.019913, 0.050680, 0.104809, 0.070072, -0.035968, -0.026679, -0.024993, -0.002592, 0.003709, 0.040343 ],
		"SV_2" : [ -0.005515, 0.050680, 0.001339, -0.084856, -0.011201, -0.016658, 0.048640, -0.039493, -0.041176, -0.088062 ],
		"SV_3" : [ 0.041708, 0.050680, 0.071397, 0.008101, 0.038334, 0.015909, -0.017629, 0.034309, 0.073407, 0.085907 ],
		"SV_4" : [ 0.009016, -0.044642, -0.012673, 0.028758, -0.018080, -0.005072, -0.047082, 0.034309, 0.023371, -0.005220 ],
		"SV_5" : [ -0.049105, -0.044642, 0.160855, -0.046985, -0.029088, -0.019790, -0.047082, 0.034309, 0.028020, 0.011349 ],
		"SV_6" : [ -0.034575, 0.050680, -0.055785, -0.015999, -0.009825, -0.007890, 0.037595, -0.039493, -0.052963, 0.027917 ],
		"SV_7" : [ 0.016281, 0.050680, -0.046085, 0.011544, -0.033216, -0.016032, -0.010266, -0.002592, -0.043984, -0.042499 ]
	},
	"SupportVectorsCoefs" : {
		"SV_coef_0" : [ -1.000000, 1.000000, -0.199998, 1.000000, 0.199998, 1.000000, -1.000000, -1.000000 ]
	},
	"rho" : [ -172.155716 ],
	"nSV" : [ 8 ],
	"probA" : [ ],
	"probB" : [ ],
	"n_iter" : [ 9 ]
}
}
BEAUTIFIED_JSON_START
{
	"dataset" : 	{
		"dataset_features" : 10,
		"dataset_rows" : 64
	},
	"metadata" :  { "model" : "Vapnik_NuSVR_RBF", "signature" : "ff4_ff4", "version" : "2024-W12" },
	"options" :  { "C" : 1.0, "cache_size" : 300, "coef0" : 0.0, "degree" : 3, "epsilon" : 0.0, "gamma" : 45.754257, "kernel" : "rbf", "max_iter" : 128, "nu" : 0.1, "probability" : 0, "random_state" : 1789, "shrinking" : 0, "svm_type" : "nu_svr", "tol" : 0.001 },
	"svm_model" : 	{
		"L" : 8,
		"SupportVectors" : 	{
			"SV_0" : [ 0.023546, 0.05068, -0.020218, -0.036656, -0.013953, -0.015092, 0.059685, -0.039493, -0.096435, -0.017646 ],
			"SV_1" : [ 0.019913, 0.05068, 0.104809, 0.070072, -0.035968, -0.026679, -0.024993, -0.002592, 0.003709, 0.040343 ],
			"SV_2" : [ -0.005515, 0.05068, 0.001339, -0.084856, -0.011201, -0.016658, 0.04864, -0.039493, -0.041176, -0.088062 ],
			"SV_3" : [ 0.041708, 0.05068, 0.071397, 0.008101, 0.038334, 0.015909, -0.017629, 0.034309, 0.073407, 0.085907 ],
			"SV_4" : [ 0.009016, -0.044642, -0.012673, 0.028758, -0.01808, -0.005072, -0.047082, 0.034309, 0.023371, -0.00522 ],
			"SV_5" : [ -0.049105, -0.044642, 0.160855, -0.046985, -0.029088, -0.01979, -0.047082, 0.034309, 0.02802, 0.011349 ],
			"SV_6" : [ -0.034575, 0.05068, -0.055785, -0.015999, -0.009825, -0.00789, 0.037595, -0.039493, -0.052963, 0.027917 ],
			"SV_7" : [ 0.016281, 0.05068, -0.046085, 0.011544, -0.033216, -0.016032, -0.010266, -0.002592, -0.043984, -0.042499 ]
		},
		"SupportVectorsCoefs" : 	{
			"SV_coef_0" : [ -1.0, 1.0, -0.199998, 1.0, 0.199998, 1.0, -1.0, -1.0 ]
		},
		"classes" : 2,
		"nSV" : [ 8 ],
		"n_iter" : [ 9 ],
		"probA" : [  ],
		"probB" : [  ],
		"rho" : [ -172.155716 ]
	}
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
[172.32065 172.29845 171.15065 172.57234 170.55402 172.8432  171.70471
 171.3202  172.61778 171.20042 172.1076  171.36511 173.34114 171.46846
 170.77527 171.87651 172.1192  171.04573 171.39473 172.7055  171.35277
 170.75427 171.40756 170.04758 172.83928 172.82118 171.56856 171.71216
 172.17255 170.93803 171.4874  173.36407 170.81216 170.7703  172.14738
 172.73698 171.55254 171.64818 172.4328  173.48633 173.28418 171.08717
 170.61961 171.78288 170.92505 172.2297  171.31998 172.20528 172.43211
 171.10915 171.31087 172.18362 171.68863 171.77586 173.43709 171.88708
 170.16248 172.09242 170.3731  172.85269 172.8518  172.67746 171.89526
 171.34232]
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
('OPERATION_START', 'PREDICT')
[172.32065 172.29845 171.15065 172.57234 170.55402 172.8432  171.7047
 171.3202  172.61778 171.20042 172.1076  171.36511 173.34114 171.46846
 170.77527 171.87651 172.1192  171.04573 171.39473 172.7055  171.35277
 170.75427 171.40756 170.04758 172.83926 172.82118 171.56856 171.71216
 172.17253 170.93803 171.4874  173.36407 170.81215 170.7703  172.14738
 172.73698 171.55254 171.64818 172.4328  173.48633 173.28418 171.08717
 170.61961 171.78288 170.92505 172.22969 171.31998 172.20528 172.43211
 171.10915 171.31087 172.18362 171.68863 171.77586 173.43709 171.88708
 170.16248 172.09242 170.3731  172.85269 172.8518  172.67746 171.89526
 171.34232]
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
MODEL_PERFS {'class_name': 'mllite.NuSVR', 'model_name': 'NuSVR', 'options': '{"nu" : 0.1}', 'dataset': 'diabetes_small', 'size': 64, 'mse': 7221.1357, 'mae': 77.45455, 'mape': 0.81974924, 'r2': -0.10523515239497461}
WRITING_PERF_CODE 'logs/auto_tests/regression/NuSVR/mllite.NuSVR_diabetes_small_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.NuSVR', 'model_name': 'NuSVR', 'options': '{"nu" : 0.1}', 'dataset': 'diabetes_small', 'training_time_in_sec': 0.007, 'prediction_time_in_sec': 0.001}
WRITING_SQL_CODE 'logs/auto_tests/regression/NuSVR/mllite.NuSVR_diabetes_small_option_1.sql'



SQL_OUT_PUT_FIRST_LINES_START
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 )
,"SV_data" AS
 ( SELECT 
   "Values"."sv_idx" AS "sv_idx",
   "Values"."coeff" AS "coeff",
   "Values"."sv_0" AS "sv_0",
   "Values"."sv_1" AS "sv_1",
   "Values"."sv_2" AS "sv_2",
   "Values"."sv_3" AS "sv_3",
   "Values"."sv_4" AS "sv_4",
   "Values"."sv_5" AS "sv_5",
   "Values"."sv_6" AS "sv_6",
   "Values"."sv_7" AS "sv_7",
   "Values"."sv_8" AS "sv_8",
   "Values"."sv_9" AS "sv_9"
  FROM
  (
     SELECT 0 AS "sv_idx", -1.000000 AS "coeff", 0.023546 AS "sv_0", 0.050680 AS "sv_1", -0.020218 AS "sv_2", -0.036656 AS "sv_3", -0.013953 AS "sv_4", -
SQL_OUT_PUT_FIRST_LINES_END
SQL_OUT_PUT_LAST_LINES_START
  dp."dot_product" AS "Estimator"
   FROM
    (SELECT
      full_join_data_sv."index" AS "index",
      sum(CAST(full_join_data_sv.dot_prod AS FLOAT)) - -172.155716 AS dot_product
     FROM
       (SELECT
          model_input."index" AS "index",
          "SV_data"."coeff" *  exp(min(max(-32.0, -45.754257 * (power(model_input."X_0" - "SV_data".sv_0, 2) + power(model_input."X_1" - "SV_data".sv_1, 2) + power(model_input."X_2" - "SV_data".sv_2, 2) + power(model_input."X_3" - "SV_data".sv_3, 2) + power(model_input."X_4" - "SV_data".sv_4, 2) + power(model_input."X_5" - "SV_data".sv_5, 2) + power(model_input."X_6" - "SV_data".sv_6, 2) + power(model_input."X_7" - "SV_data".sv_7, 2) + power(model_input."X_8" - "SV_data".sv_8, 2) + power(model_input."X_9" - "SV_data".sv_9, 2))), 32.0))  AS "dot_prod" 
        FROM
          model_input, "SV_data"
       ) AS full_join_data_sv
     GROUP BY full_join_data_sv."index"
    ) AS dp )
SELECT
  t."index" as "index",
  t."Estimator" as "Estimator"
FROM "Kernel_DotProd" AS t

SQL_OUT_PUT_LAST_LINES_END




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 64 entries, 0 to 63
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     64 non-null     float32
 1   X_1     64 non-null     float32
 2   X_2     64 non-null     float32
 3   X_3     64 non-null     float32
 4   X_4     64 non-null     float32
 5   X_5     64 non-null     float32
 6   X_6     64 non-null     float32
 7   X_7     64 non-null     float32
 8   X_8     64 non-null     float32
 9   X_9     64 non-null     float32
dtypes: float32(10)
memory usage: 3.0 KB
            X_0       X_1       X_2  ...       X_7       X_8       X_9
index                                ...                              
0      0.038076  0.050680 -0.009439  ...  0.050176 -0.025953  0.106617
1      0.081666  0.050680  0.001339  ...  0.034309  0.084492 -0.030072
2      0.041708 -0.044642 -0.008362  ... -0.039493 -0.048359 -0.030072
3     -0.041840 -0.044642  0.128521  ... -0.039493 -0.015999 -0.050783
4      0.023546  0.050680 -0.030996  ... -0.002592 -0.074093 -0.034215
...         ...       ...       ...  ...       ...       ...       ...
59     0.045341  0.050680  0.068163  ...  0.071210  0.032432 -0.017646
60    -0.027310  0.050680  0.060618  ... -0.002592  0.070207  0.135612
61    -0.001882 -0.044642  0.054152  ...  0.084863  0.084492  0.048628
62     0.045341 -0.044642 -0.006206  ... -0.039493  0.042897 -0.038357
63    -0.041840 -0.044642 -0.033151  ... -0.024733 -0.025953 -0.038357

[64 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 64 entries, 0 to 63
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      64 non-null     int64  
 1   Estimator  64 non-null     float64
dtypes: float64(1), int64(1)
memory usage: 1.1 KB
    index   Estimator
0       0  172.320641
1       1  172.298447
2       2  171.150649
3       3  172.572344
4       4  170.554009
..    ...         ...
59     59  172.852695
60     60  172.851808
61     61  172.677465
62     62  171.895261
63     63  171.342320

[64 rows x 2 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
    index  SQL_Estimator  Py_Estimator
48     48     172.432110    172.432114
49     49     171.109149    171.109146
50     50     171.310866    171.310867
51     51     172.183630    172.183624
52     52     171.688627    171.688629
53     53     171.775863    171.775864
54     54     173.437093    173.437088
55     55     171.887091    171.887085
56     56     170.162478    170.162476
57     57     172.092422    172.092422
58     58     170.373088    170.373093
59     59     172.852695    172.852692
60     60     172.851808    172.851807
61     61     172.677465    172.677460
62     62     171.895261    171.895264
63     63     171.342320    171.342316
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
