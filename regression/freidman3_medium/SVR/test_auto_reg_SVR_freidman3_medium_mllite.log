          X_0          X_1       X_2        X_3    target
0   45.688718   609.092549  0.591968   7.449268  1.444753
1   92.630496  1621.621954  0.997097   3.905369  1.513570
2   76.131749   526.792001  0.716619   5.202790  1.371797
3   40.067007   524.247515  0.463251   1.522912  1.407287
4   34.726296   778.125942  0.167246   2.339115  1.310030
..        ...          ...       ...        ...       ...
95  22.116345  1162.774063  0.675740   4.934592  1.542656
96  59.325419  1558.844569  0.742170   4.222862  1.519563
97  74.947222  1754.316103  0.366207   1.961987  1.454661
98  52.067586   534.256140  0.155164   8.526538  1.009971
99   0.743929   167.010742  0.924844  10.614025  1.565980

[100 rows x 5 columns]
MLLITE_MODEL_SET_OPTIONS SVR None
MLLITE_MODEL_OPTIONS_DEFAULT SVR { "max_iter" : 128 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING SVR { ,  "max_iter" : 128  , }
MLLITE_MODEL_JSON_AFTER_SETTING SVR None
('OPERATION_START', 'TRAINING')
[[4.5688717e+01 6.0909253e+02 5.9196806e-01 7.4492683e+00]
 [9.2630493e+01 1.6216219e+03 9.9709725e-01 3.9053690e+00]
 [7.6131752e+01 5.2679199e+02 7.1661860e-01 5.2027898e+00]
 [4.0067005e+01 5.2424750e+02 4.6325052e-01 1.5229123e+00]
 [3.4726295e+01 7.7812592e+02 1.6724615e-01 2.3391147e+00]] [1.4447532 1.5135704 1.3717965 1.4072871 1.3100302]
MLLITE_FIT_USING_MODEL mllite_svm_reg.SVR_ff4_ff4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_REGRESSOR_FIT' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_REGRESSOR_FIT' 2 4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_REGRESSOR_FIT' 3 4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVR_Global' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVR_Global' 24 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVR_Global' 36 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVR_Global' 48 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVR_Global' 60 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVR_Global' 72 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVR_Global' 84 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVR_Global' 96 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_REGRESSOR_FIT' 4 4
('OPERATION_END_ELAPSED', 0.031, 'TRAINING')
{ ,  "max_iter" : 128  , }
{ ,  "max_iter" : 128  , }
{
	"metadata" : { "model" : "Vapnik_SVR_RBF", "version" : "2024-W14", "signature" : "ff4_ff4"},
	"options" : {"svm_type" : "epsilon_svr", "kernel" : "rbf", "degree" : 3, "gamma" : 0.000001, "coef0" : 0.000000, "cache_size" : 300, "tol" : 0.001000, "nu" : 0.500000, "epsilon" : 0.100000, "shrinking" : 0, "probability" : 0, "C" : 1.000000, "max_iter" : 128, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 100, "dataset_features" : 4 },
	"svm_model" : {
	"classes" : 2,
	"L" : 39,
	"SupportVectors" : {
		"SV_00" : [ 92.630493, 1621.621948, 0.997097, 3.905369 ],
		"SV_01" : [ 34.726295, 778.125916, 0.167246, 2.339115 ],
		"SV_02" : [ 64.806686, 1046.145874, 0.071195, 8.048056 ],
		"SV_03" : [ 7.321981, 487.752838, 0.993317, 5.340956 ],
		"SV_04" : [ 48.198017, 353.104248, 0.725143, 10.405507 ],
		"SV_05" : [ 71.041054, 1540.879761, 0.056103, 6.055449 ],
		"SV_06" : [ 13.280704, 643.716797, 0.520814, 4.842079 ],
		"SV_07" : [ 76.304665, 377.450928, 0.181362, 6.939103 ],
		"SV_08" : [ 41.761013, 1756.453247, 0.074700, 8.084325 ],
		"SV_09" : [ 7.606344, 1112.226562, 0.732761, 6.140375 ],
		"SV_10" : [ 67.712112, 367.323730, 0.907274, 4.550431 ],
		"SV_11" : [ 85.125381, 1049.026855, 0.039136, 3.186899 ],
		"SV_12" : [ 29.812233, 273.763794, 0.971798, 6.207578 ],
		"SV_13" : [ 38.088467, 1321.297485, 0.052941, 10.429984 ],
		"SV_14" : [ 2.070305, 957.545105, 0.737876, 2.535709 ],
		"SV_15" : [ 19.900188, 265.249756, 0.635873, 4.546347 ],
		"SV_16" : [ 10.735011, 265.420807, 0.260950, 2.285511 ],
		"SV_17" : [ 13.316919, 1592.958618, 0.993566, 7.946761 ],
		"SV_18" : [ 75.648438, 442.560303, 0.035123, 1.334146 ],
		"SV_19" : [ 1.405850, 1607.972168, 0.402955, 9.850420 ],
		"SV_20" : [ 39.016674, 895.294678, 0.992031, 3.333866 ],
		"SV_21" : [ 78.286156, 508.159058, 0.252201, 1.424874 ],
		"SV_22" : [ 65.455681, 755.864746, 0.990681, 3.455762 ],
		"SV_23" : [ 17.373148, 483.680237, 0.685229, 2.728044 ],
		"SV_24" : [ 63.422050, 921.190674, 0.969793, 5.416355 ],
		"SV_25" : [ 81.412109, 1254.374390, 0.194226, 8.164762 ],
		"SV_26" : [ 69.792320, 473.447937, 0.233546, 3.411072 ],
		"SV_27" : [ 66.012100, 216.127472, 0.564663, 3.090549 ],
		"SV_28" : [ 39.873802, 428.048248, 0.235384, 2.176043 ],
		"SV_29" : [ 78.244774, 702.214600, 0.183212, 9.434527 ],
		"SV_30" : [ 18.503828, 532.344482, 0.721851, 10.655538 ],
		"SV_31" : [ 43.550098, 1462.972046, 0.939145, 3.150335 ],
		"SV_32" : [ 97.541664, 130.009232, 0.366127, 5.345118 ],
		"SV_33" : [ 45.437614, 168.841202, 0.343817, 3.279963 ],
		"SV_34" : [ 85.409492, 865.747681, 0.002107, 1.657108 ],
		"SV_35" : [ 26.014614, 517.573425, 0.156860, 6.909534 ],
		"SV_36" : [ 7.737632, 682.638123, 0.943330, 1.569080 ],
		"SV_37" : [ 52.067585, 534.256165, 0.155164, 8.526538 ],
		"SV_38" : [ 0.743929, 167.010742, 0.924844, 10.614025 ]
	},
	"SupportVectorsCoefs" : {
		"SV_coef_0" : [ 0.779217, -0.544289, -1.000000, 1.000000, 0.399283, -1.000000, 1.000000, -1.000000, -1.000000, 0.717299, 1.000000, -1.000000, 1.000000, -1.000000, 1.000000, 1.000000, 1.000000, 1.000000, -1.000000, 0.648490, 1.000000, -1.000000, 1.000000, 1.000000, 1.000000, -1.000000, -1.000000, -1.000000, -1.000000, -1.000000, 1.000000, 1.000000, -1.000000, -1.000000, -1.000000, -1.000000, 1.000000, -1.000000, 1.000000 ]
	},
	"rho" : [ -1.327948 ],
	"nSV" : [ 39 ],
	"probA" : [ ],
	"probB" : [ ],
	"n_iter" : [ 105 ]
}
}
WRITING_JSON_CODE 'logs/auto_tests/regression/SVR/mllite.SVR_freidman3_medium.json'

MLLITE_MODEL_SET_OPTIONS SVR None
MLLITE_MODEL_OPTIONS_DEFAULT SVR { "max_iter" : 128 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING SVR { ,  "max_iter" : 128  , }
MLLITE_MODEL_JSON_AFTER_SETTING SVR None
MLLITE_RELOADING_MODEL mllite_svm_reg.SVR_ff4_ff4
{
	"metadata" : { "model" : "Vapnik_SVR_RBF", "version" : "2024-W14", "signature" : "ff4_ff4"},
	"options" : {"svm_type" : "epsilon_svr", "kernel" : "rbf", "degree" : 3, "gamma" : 0.000001, "coef0" : 0.000000, "cache_size" : 300, "tol" : 0.001000, "nu" : 0.500000, "epsilon" : 0.100000, "shrinking" : 0, "probability" : 0, "C" : 1.000000, "max_iter" : 128, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 100, "dataset_features" : 4 },
	"svm_model" : {
	"classes" : 2,
	"L" : 39,
	"SupportVectors" : {
		"SV_00" : [ 92.630493, 1621.621948, 0.997097, 3.905369 ],
		"SV_01" : [ 34.726295, 778.125916, 0.167246, 2.339115 ],
		"SV_02" : [ 64.806686, 1046.145874, 0.071195, 8.048056 ],
		"SV_03" : [ 7.321981, 487.752838, 0.993317, 5.340956 ],
		"SV_04" : [ 48.198017, 353.104248, 0.725143, 10.405507 ],
		"SV_05" : [ 71.041054, 1540.879761, 0.056103, 6.055449 ],
		"SV_06" : [ 13.280704, 643.716797, 0.520814, 4.842079 ],
		"SV_07" : [ 76.304665, 377.450928, 0.181362, 6.939103 ],
		"SV_08" : [ 41.761013, 1756.453247, 0.074700, 8.084325 ],
		"SV_09" : [ 7.606344, 1112.226562, 0.732761, 6.140375 ],
		"SV_10" : [ 67.712112, 367.323730, 0.907274, 4.550431 ],
		"SV_11" : [ 85.125381, 1049.026855, 0.039136, 3.186899 ],
		"SV_12" : [ 29.812233, 273.763794, 0.971798, 6.207578 ],
		"SV_13" : [ 38.088467, 1321.297485, 0.052941, 10.429984 ],
		"SV_14" : [ 2.070305, 957.545105, 0.737876, 2.535709 ],
		"SV_15" : [ 19.900188, 265.249756, 0.635873, 4.546347 ],
		"SV_16" : [ 10.735011, 265.420807, 0.260950, 2.285511 ],
		"SV_17" : [ 13.316919, 1592.958618, 0.993566, 7.946761 ],
		"SV_18" : [ 75.648438, 442.560303, 0.035123, 1.334146 ],
		"SV_19" : [ 1.405850, 1607.972168, 0.402955, 9.850420 ],
		"SV_20" : [ 39.016674, 895.294678, 0.992031, 3.333866 ],
		"SV_21" : [ 78.286156, 508.159058, 0.252201, 1.424874 ],
		"SV_22" : [ 65.455681, 755.864746, 0.990681, 3.455762 ],
		"SV_23" : [ 17.373148, 483.680237, 0.685229, 2.728044 ],
		"SV_24" : [ 63.422050, 921.190674, 0.969793, 5.416355 ],
		"SV_25" : [ 81.412109, 1254.374390, 0.194226, 8.164762 ],
		"SV_26" : [ 69.792320, 473.447937, 0.233546, 3.411072 ],
		"SV_27" : [ 66.012100, 216.127472, 0.564663, 3.090549 ],
		"SV_28" : [ 39.873802, 428.048248, 0.235384, 2.176043 ],
		"SV_29" : [ 78.244774, 702.214600, 0.183212, 9.434527 ],
		"SV_30" : [ 18.503828, 532.344482, 0.721851, 10.655538 ],
		"SV_31" : [ 43.550098, 1462.972046, 0.939145, 3.150335 ],
		"SV_32" : [ 97.541664, 130.009232, 0.366127, 5.345118 ],
		"SV_33" : [ 45.437614, 168.841202, 0.343817, 3.279963 ],
		"SV_34" : [ 85.409492, 865.747681, 0.002107, 1.657108 ],
		"SV_35" : [ 26.014614, 517.573425, 0.156860, 6.909534 ],
		"SV_36" : [ 7.737632, 682.638123, 0.943330, 1.569080 ],
		"SV_37" : [ 52.067585, 534.256165, 0.155164, 8.526538 ],
		"SV_38" : [ 0.743929, 167.010742, 0.924844, 10.614025 ]
	},
	"SupportVectorsCoefs" : {
		"SV_coef_0" : [ 0.779217, -0.544289, -1.000000, 1.000000, 0.399283, -1.000000, 1.000000, -1.000000, -1.000000, 0.717299, 1.000000, -1.000000, 1.000000, -1.000000, 1.000000, 1.000000, 1.000000, 1.000000, -1.000000, 0.648490, 1.000000, -1.000000, 1.000000, 1.000000, 1.000000, -1.000000, -1.000000, -1.000000, -1.000000, -1.000000, 1.000000, 1.000000, -1.000000, -1.000000, -1.000000, -1.000000, 1.000000, -1.000000, 1.000000 ]
	},
	"rho" : [ -1.327948 ],
	"nSV" : [ 39 ],
	"probA" : [ ],
	"probB" : [ ],
	"n_iter" : [ 105 ]
}
}
BEAUTIFIED_JSON_START
{
	"dataset" : 	{
		"dataset_features" : 4,
		"dataset_rows" : 100
	},
	"metadata" :  { "model" : "Vapnik_SVR_RBF", "signature" : "ff4_ff4", "version" : "2024-W14" },
	"options" :  { "C" : 1.0, "cache_size" : 300, "coef0" : 0.0, "degree" : 3, "epsilon" : 0.1, "gamma" : 1e-06, "kernel" : "rbf", "max_iter" : 128, "nu" : 0.5, "probability" : 0, "random_state" : 1789, "shrinking" : 0, "svm_type" : "epsilon_svr", "tol" : 0.001 },
	"svm_model" : 	{
		"L" : 39,
		"SupportVectors" : 	{
			"SV_00" : [ 92.630493, 1621.621948, 0.997097, 3.905369 ],
			"SV_01" : [ 34.726295, 778.125916, 0.167246, 2.339115 ],
			"SV_02" : [ 64.806686, 1046.145874, 0.071195, 8.048056 ],
			"SV_03" : [ 7.321981, 487.752838, 0.993317, 5.340956 ],
			"SV_04" : [ 48.198017, 353.104248, 0.725143, 10.405507 ],
			"SV_05" : [ 71.041054, 1540.879761, 0.056103, 6.055449 ],
			"SV_06" : [ 13.280704, 643.716797, 0.520814, 4.842079 ],
			"SV_07" : [ 76.304665, 377.450928, 0.181362, 6.939103 ],
			"SV_08" : [ 41.761013, 1756.453247, 0.0747, 8.084325 ],
			"SV_09" : [ 7.606344, 1112.226562, 0.732761, 6.140375 ],
			"SV_10" : [ 67.712112, 367.32373, 0.907274, 4.550431 ],
			"SV_11" : [ 85.125381, 1049.026855, 0.039136, 3.186899 ],
			"SV_12" : [ 29.812233, 273.763794, 0.971798, 6.207578 ],
			"SV_13" : [ 38.088467, 1321.297485, 0.052941, 10.429984 ],
			"SV_14" : [ 2.070305, 957.545105, 0.737876, 2.535709 ],
			"SV_15" : [ 19.900188, 265.249756, 0.635873, 4.546347 ],
			"SV_16" : [ 10.735011, 265.420807, 0.26095, 2.285511 ],
			"SV_17" : [ 13.316919, 1592.958618, 0.993566, 7.946761 ],
			"SV_18" : [ 75.648438, 442.560303, 0.035123, 1.334146 ],
			"SV_19" : [ 1.40585, 1607.972168, 0.402955, 9.85042 ],
			"SV_20" : [ 39.016674, 895.294678, 0.992031, 3.333866 ],
			"SV_21" : [ 78.286156, 508.159058, 0.252201, 1.424874 ],
			"SV_22" : [ 65.455681, 755.864746, 0.990681, 3.455762 ],
			"SV_23" : [ 17.373148, 483.680237, 0.685229, 2.728044 ],
			"SV_24" : [ 63.42205, 921.190674, 0.969793, 5.416355 ],
			"SV_25" : [ 81.412109, 1254.37439, 0.194226, 8.164762 ],
			"SV_26" : [ 69.79232, 473.447937, 0.233546, 3.411072 ],
			"SV_27" : [ 66.0121, 216.127472, 0.564663, 3.090549 ],
			"SV_28" : [ 39.873802, 428.048248, 0.235384, 2.176043 ],
			"SV_29" : [ 78.244774, 702.2146, 0.183212, 9.434527 ],
			"SV_30" : [ 18.503828, 532.344482, 0.721851, 10.655538 ],
			"SV_31" : [ 43.550098, 1462.972046, 0.939145, 3.150335 ],
			"SV_32" : [ 97.541664, 130.009232, 0.366127, 5.345118 ],
			"SV_33" : [ 45.437614, 168.841202, 0.343817, 3.279963 ],
			"SV_34" : [ 85.409492, 865.747681, 0.002107, 1.657108 ],
			"SV_35" : [ 26.014614, 517.573425, 0.15686, 6.909534 ],
			"SV_36" : [ 7.737632, 682.638123, 0.94333, 1.56908 ],
			"SV_37" : [ 52.067585, 534.256165, 0.155164, 8.526538 ],
			"SV_38" : [ 0.743929, 167.010742, 0.924844, 10.614025 ]
		},
		"SupportVectorsCoefs" : 	{
			"SV_coef_0" : [ 0.779217, -0.544289, -1.0, 1.0, 0.399283, -1.0, 1.0, -1.0, -1.0, 0.717299, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 0.64849, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0 ]
		},
		"classes" : 2,
		"nSV" : [ 39 ],
		"n_iter" : [ 105 ],
		"probA" : [  ],
		"probB" : [  ],
		"rho" : [ -1.327948 ]
	}
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
[1.3624806 1.4138789 1.2982683 1.3485379 1.4093623 1.4544426 1.4143219
 1.3931668 1.3840823 1.2848053 1.4207734 1.4161673 1.336475  1.4120682
 1.4072473 1.2543836 1.207898  1.4238803 1.4508572 1.448531  1.4337661
 1.4616842 1.2976832 1.2628726 1.3690948 1.2829006 1.4025054 1.4449387
 1.433352  1.4278791 1.4246869 1.2239716 1.3821037 1.3780432 1.3621836
 1.3723251 1.3930849 1.4668789 1.4468846 1.423729  1.2549713 1.2928078
 1.3123229 1.4236046 1.3046395 1.461296  1.2748711 1.468695  1.4478672
 1.3493524 1.4465692 1.2886033 1.415992  1.2900755 1.4093516 1.4209435
 1.4200224 1.3722605 1.4598413 1.4444038 1.4534619 1.3634967 1.3687379
 1.3651276 1.378916  1.3463117 1.231772  1.2323518 1.4565465 1.328953
 1.386175  1.3880873 1.2921398 1.2186325 1.4604235 1.2234793 1.4093099
 1.3200912 1.4141793 1.2471933 1.4570107 1.3361444 1.3813553 1.4355618
 1.3786477 1.1585355 1.3053203 1.3728659 1.4232976 1.229874  1.3299321
 1.3514682 1.3917252 1.3665543 1.4317195 1.4459267 1.4301482 1.4326048
 1.334352  1.2833968]
('OPERATION_END_ELAPSED', 0.002, 'PREDICT')
('OPERATION_START', 'PREDICT')
[1.3461556 1.4217244 1.2915546 1.3325796 1.3927667 1.4550012 1.4241428
 1.3975742 1.3611071 1.2794908 1.430773  1.3913846 1.3254666 1.4229668
 1.421076  1.254457  1.2172949 1.3989019 1.4501224 1.4498851 1.4377295
 1.4598064 1.2932781 1.2614481 1.3774219 1.2786438 1.4024959 1.4487078
 1.4438627 1.4390725 1.4347559 1.2305019 1.3810387 1.3732061 1.3755863
 1.3711281 1.4013381 1.453201  1.4314079 1.4309253 1.2564081 1.2869399
 1.309556  1.4235969 1.2967219 1.4666024 1.2713985 1.4730949 1.438333
 1.3322606 1.4559627 1.2842219 1.4061632 1.2845442 1.3931878 1.4311851
 1.426172  1.3804599 1.4613955 1.4509937 1.4546523 1.3537097 1.348506
 1.3452461 1.360537  1.3389695 1.237042  1.236518  1.4649917 1.3157823
 1.3832058 1.4029719 1.2857716 1.2261338 1.4662311 1.2294408 1.4189183
 1.3083273 1.421981  1.2491655 1.4607208 1.3284342 1.3595496 1.4458517
 1.3619831 1.1766262 1.3014305 1.3519201 1.4150184 1.2360196 1.3166597
 1.3506019 1.3805379 1.3471806 1.4058683 1.4492476 1.4388332 1.4346541
 1.3211708 1.2806653]
('OPERATION_END_ELAPSED', 0.002, 'PREDICT')
MODEL_PERFS {'class_name': 'mllite.SVR', 'model_name': 'SVR', 'options': None, 'dataset': 'freidman3_medium', 'size': 100, 'mse': 0.06478925, 'mae': 0.1471861, 'mape': 0.80060077, 'r2': 0.17897241065330016}
WRITING_PERF_CODE 'logs/auto_tests/regression/SVR/mllite.SVR_freidman3_medium.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.SVR', 'model_name': 'SVR', 'options': None, 'dataset': 'freidman3_medium', 'training_time_in_sec': 0.031, 'prediction_time_in_sec': 0.002}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 0 4
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 2 4
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 3 4
{
   "Contributions" : {
      "X_0" : [ -0.004672 ],
      "X_1" : [ 0.004802 ],
      "X_2" : [ 0.000000 ],
      "X_3" : [ -0.000014 ]   
   },
   "Most_Contributive_Features" : {
      "y" : [ 1, 0, 3, 2 ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/regression/SVR/mllite.SVR_freidman3_medium_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/regression/SVR/mllite.SVR_freidman3_medium_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('freidman3_medium', 'SVR', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "freidman3_medium" AS "ADS" 
 )
,"SV_data" AS
 ( SELECT 
   "Values"."sv_idx" AS "sv_idx",
   "Values"."coeff" AS "coeff",
   "Values"."sv_0" AS "sv_0",
   "Values"."sv_1" AS "sv_1",
   "Values"."sv_2" AS "sv_2",
   "Values"."sv_3" AS "sv_3"
  FROM
  (
     SELECT 0 AS "sv_idx", 0.779217 AS "coeff", 92.630493 AS "sv_0", 1621.621948 AS "sv_1", 0.997097 AS "sv_2", 3.905369 AS "sv_3"
     UNION ALL
     SELECT 1 AS "sv_idx", -0.544289 AS "coeff", 34.726295 AS "sv_0", 778.125916 AS "sv_1", 0.167246 AS "sv_2", 2.339115 AS "sv_3"
     UNION ALL
     SELECT 2 AS "sv_idx", -1.000000 AS "coeff", 64.806686 AS "sv_0", 1046.145874 AS "sv_1", 0.071195 AS "sv_2", 8.048056 AS "sv_3"
     UNION ALL
     SELECT 3 AS "sv_idx", 1.000000 AS "coeff", 7.321981 AS "sv_0", 487.752838 AS "sv_1", 0.993317 AS "sv_2", 5.340956
SQL_OUT_PUT_FIRST_LINES_END ('freidman3_medium', 'SVR', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('freidman3_medium', 'SVR', 'duckdb')
26538 AS "sv_3"
     UNION ALL
     SELECT 38 AS "sv_idx", 1.000000 AS "coeff", 0.743929 AS "sv_0", 167.010742 AS "sv_1", 0.924844 AS "sv_2", 10.614025 AS "sv_3"
   ) AS "Values"
 )
,"Kernel_DotProd" AS
 ( SELECT
    dp."index" as "index",
    dp."dot_product" AS "Estimator"
   FROM
    (SELECT
      full_join_data_sv."index" AS "index",
      sum(CAST(full_join_data_sv.dot_prod AS FLOAT)) - -1.327948 AS dot_product
     FROM
       (SELECT
          model_input."index" AS "index",
          "SV_data"."coeff" *  EXP( LEAST( GREATEST( CAST(-32.0 AS FLOAT), -0.000001 * (power(model_input."X_0" - "SV_data".sv_0, 2) + power(model_input."X_1" - "SV_data".sv_1, 2) + power(model_input."X_2" - "SV_data".sv_2, 2) + power(model_input."X_3" - "SV_data".sv_3, 2)) ), CAST(32.0 AS FLOAT) ) )  AS "dot_prod" 
        FROM
          model_input, "SV_data"
       ) AS full_join_data_sv
     GROUP BY full_join_data_sv."index"
    ) AS dp )
SELECT
  t."index" as "index",
  t."Estimator" as "Estimator"
FROM "Kernel_DotProd" AS t

SQL_OUT_PUT_LAST_LINES_END ('freidman3_medium', 'SVR', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 100 entries, 0 to 99
Data columns (total 4 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     100 non-null    float32
 1   X_1     100 non-null    float32
 2   X_2     100 non-null    float32
 3   X_3     100 non-null    float32
dtypes: float32(4)
memory usage: 2.3 KB
             X_0          X_1       X_2        X_3
index                                             
0      45.688717   609.092529  0.591968   7.449268
1      92.630493  1621.621948  0.997097   3.905369
2      76.131752   526.791992  0.716619   5.202790
3      40.067005   524.247498  0.463251   1.522912
4      34.726295   778.125916  0.167246   2.339115
...          ...          ...       ...        ...
95     22.116344  1162.774048  0.675740   4.934592
96     59.325420  1558.844604  0.742170   4.222862
97     74.947220  1754.316162  0.366207   1.961987
98     52.067585   534.256165  0.155164   8.526538
99      0.743929   167.010742  0.924844  10.614025

[100 rows x 4 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 100 entries, 0 to 99
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      100 non-null    int64  
 1   Estimator  100 non-null    float64
dtypes: float64(1), int64(1)
memory usage: 1.7 KB
    index  Estimator
0       0   1.346157
1       1   1.421724
2       2   1.291555
3       3   1.332580
4       4   1.392767
..    ...        ...
95     95   1.449248
96     96   1.438833
97     97   1.434654
98     98   1.321171
99     99   1.280665

[100 rows x 2 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('freidman3_medium', 'SVR') Estimator 0.008814036453301912
    index  SQL_Estimator  Py_Estimator  SQL_Error
84     84       1.361983      1.378648  -0.016664
85     85       1.176627      1.158535   0.018091
86     86       1.301430      1.305320  -0.003890
87     87       1.351920      1.372866  -0.020946
88     88       1.415019      1.423298  -0.008279
89     89       1.236020      1.229874   0.006146
90     90       1.316659      1.329932  -0.013273
91     91       1.350602      1.351468  -0.000866
92     92       1.380538      1.391725  -0.011187
93     93       1.347180      1.366554  -0.019374
94     94       1.405869      1.431720  -0.025851
95     95       1.449248      1.445927   0.003321
96     96       1.438833      1.430148   0.008685
97     97       1.434654      1.432605   0.002049
98     98       1.321171      1.334352  -0.013182
99     99       1.280665      1.283397  -0.002732
MLLITE_REG_SQL_EXECUTION_STATUS ('freidman3_medium', 'SVR', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/regression/SVR/mllite.SVR_freidman3_medium_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('freidman3_medium', 'SVR', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "freidman3_medium" AS "ADS" 
 )
,"SV_data" AS
 ( SELECT 
   "Values"."sv_idx" AS "sv_idx",
   "Values"."coeff" AS "coeff",
   "Values"."sv_0" AS "sv_0",
   "Values"."sv_1" AS "sv_1",
   "Values"."sv_2" AS "sv_2",
   "Values"."sv_3" AS "sv_3"
  FROM
  (
     SELECT 0 AS "sv_idx", 0.779217 AS "coeff", 92.630493 AS "sv_0", 1621.621948 AS "sv_1", 0.997097 AS "sv_2", 3.905369 AS "sv_3"
     UNION ALL
     SELECT 1 AS "sv_idx", -0.544289 AS "coeff", 34.726295 AS "sv_0", 778.125916 AS "sv_1", 0.167246 AS "sv_2", 2.339115 AS "sv_3"
     UNION ALL
     SELECT 2 AS "sv_idx", -1.000000 AS "coeff", 64.806686 AS "sv_0", 1046.145874 AS "sv_1", 0.071195 AS "sv_2", 8.048056 AS "sv_3"
     UNION ALL
     SELECT 3 AS "sv_idx", 1.000000 AS "coeff", 7.321981 AS "sv_0", 487.752838 AS "sv_1", 0.993317 AS "sv_2", 5.340956
SQL_OUT_PUT_FIRST_LINES_END ('freidman3_medium', 'SVR', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('freidman3_medium', 'SVR', 'sqlite')
2", 8.526538 AS "sv_3"
     UNION ALL
     SELECT 38 AS "sv_idx", 1.000000 AS "coeff", 0.743929 AS "sv_0", 167.010742 AS "sv_1", 0.924844 AS "sv_2", 10.614025 AS "sv_3"
   ) AS "Values"
 )
,"Kernel_DotProd" AS
 ( SELECT
    dp."index" as "index",
    dp."dot_product" AS "Estimator"
   FROM
    (SELECT
      full_join_data_sv."index" AS "index",
      sum(CAST(full_join_data_sv.dot_prod AS FLOAT)) - -1.327948 AS dot_product
     FROM
       (SELECT
          model_input."index" AS "index",
          "SV_data"."coeff" *  EXP( MIN( MAX( CAST(-32.0 AS FLOAT), -0.000001 * (power(model_input."X_0" - "SV_data".sv_0, 2) + power(model_input."X_1" - "SV_data".sv_1, 2) + power(model_input."X_2" - "SV_data".sv_2, 2) + power(model_input."X_3" - "SV_data".sv_3, 2)) ), CAST(32.0 AS FLOAT) ) )  AS "dot_prod" 
        FROM
          model_input, "SV_data"
       ) AS full_join_data_sv
     GROUP BY full_join_data_sv."index"
    ) AS dp )
SELECT
  t."index" as "index",
  t."Estimator" as "Estimator"
FROM "Kernel_DotProd" AS t

SQL_OUT_PUT_LAST_LINES_END ('freidman3_medium', 'SVR', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 100 entries, 0 to 99
Data columns (total 4 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     100 non-null    float32
 1   X_1     100 non-null    float32
 2   X_2     100 non-null    float32
 3   X_3     100 non-null    float32
dtypes: float32(4)
memory usage: 2.3 KB
             X_0          X_1       X_2        X_3
index                                             
0      45.688717   609.092529  0.591968   7.449268
1      92.630493  1621.621948  0.997097   3.905369
2      76.131752   526.791992  0.716619   5.202790
3      40.067005   524.247498  0.463251   1.522912
4      34.726295   778.125916  0.167246   2.339115
...          ...          ...       ...        ...
95     22.116344  1162.774048  0.675740   4.934592
96     59.325420  1558.844604  0.742170   4.222862
97     74.947220  1754.316162  0.366207   1.961987
98     52.067585   534.256165  0.155164   8.526538
99      0.743929   167.010742  0.924844  10.614025

[100 rows x 4 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 100 entries, 0 to 99
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      100 non-null    int64  
 1   Estimator  100 non-null    float64
dtypes: float64(1), int64(1)
memory usage: 1.7 KB
    index  Estimator
0       0   1.346157
1       1   1.421724
2       2   1.291555
3       3   1.332580
4       4   1.392767
..    ...        ...
95     95   1.449248
96     96   1.438833
97     97   1.434654
98     98   1.321171
99     99   1.280665

[100 rows x 2 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('freidman3_medium', 'SVR') Estimator 0.008814046103534565
    index  SQL_Estimator  Py_Estimator  SQL_Error
84     84       1.361983      1.378648  -0.016664
85     85       1.176626      1.158535   0.018091
86     86       1.301430      1.305320  -0.003891
87     87       1.351920      1.372866  -0.020946
88     88       1.415018      1.423298  -0.008279
89     89       1.236020      1.229874   0.006146
90     90       1.316659      1.329932  -0.013273
91     91       1.350602      1.351468  -0.000866
92     92       1.380538      1.391725  -0.011187
93     93       1.347181      1.366554  -0.019374
94     94       1.405869      1.431720  -0.025851
95     95       1.449248      1.445927   0.003321
96     96       1.438833      1.430148   0.008685
97     97       1.434654      1.432605   0.002049
98     98       1.321171      1.334352  -0.013181
99     99       1.280665      1.283397  -0.002732
MLLITE_REG_SQL_EXECUTION_STATUS ('freidman3_medium', 'SVR', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
