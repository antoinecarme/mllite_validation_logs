         X_0       X_1       X_2  ...       X_8       X_9     target
0   0.544738  0.515912  0.990435  ...  0.898018  0.377159  15.807614
1   0.783459  0.095321  0.135945  ...  0.019766  0.833486  14.766437
2   0.652811  0.757719  0.306902  ...  0.894295  0.086598  22.842493
3   0.226051  0.939732  0.731124  ...  0.185038  0.248943  19.544314
4   0.764610  0.378970  0.823855  ...  0.814980  0.123688  21.897690
5   0.368356  0.189593  0.403483  ...  0.462841  0.813023  11.119547
6   0.888102  0.149216  0.426902  ...  0.865909  0.986362   9.912128
7   0.825366  0.284076  0.971058  ...  0.780396  0.355315  15.012190
8   0.235384  0.117604  0.514017  ...  0.527227  0.211281  10.304959
9   0.834709  0.502155  0.670056  ...  0.038824  0.113899  12.722529
10  0.287599  0.939261  0.380885  ...  0.329620  0.003549  15.371187
11  0.992031  0.233387  0.782862  ...  0.461541  0.895167  11.851628
12  0.020119  0.541789  0.751033  ...  0.950842  0.143679  15.153405
13  0.830477  0.389094  0.475292  ...  0.479506  0.035941  11.800902
14  0.399336  0.628863  0.606025  ...  0.521303  0.455322  19.559005
15  0.634220  0.486969  0.969793  ...  0.697923  0.212891  21.151443

[16 rows x 11 columns]
MLLITE_MODEL_SET_OPTIONS MLPRegressor {"hidden_layer_sizes" : [4, 8, 6]}
MLLITE_MODEL_OPTIONS_DEFAULT MLPRegressor { "max_iter" : 32}
MLLITE_MODEL_OPTIONS_AFTER_SETTING MLPRegressor { "hidden_layer_sizes" : [4, 8, 6],  "max_iter" : 32 , }
MLLITE_MODEL_JSON_AFTER_SETTING MLPRegressor None
('OPERATION_START', 'TRAINING')
[[0.54473835 0.51591223 0.99043506 0.25514543 0.14395337 0.33235115
  0.8686215  0.04108923 0.8980185  0.37715888]
 [0.78345853 0.09532096 0.1359447  0.858711   0.24078475 0.08367069
  0.05237448 0.42276597 0.01976581 0.8334865 ]
 [0.652811   0.75771934 0.3069025  0.8282855  0.7630638  0.85900337
  0.87337655 0.14607023 0.89429516 0.08659814]
 [0.22605109 0.9397324  0.7311243  0.8374556  0.7824477  0.3529266
  0.1832118  0.84345275 0.18503828 0.2489433 ]
 [0.76461023 0.37897    0.82385516 0.9136035  0.55340034 0.05504839
  0.58833206 0.36104986 0.81497955 0.12368783]] [15.807614 14.766437 22.842493 19.544313 21.89769 ]
MLLITE_FIT_USING_MODEL mllite_mlp_reg.MLPRegressor_ff4_ff4
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT' 1 3
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT' 2 3
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 3 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 6 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 9 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 12 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 15 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 18 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 21 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 24 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 27 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 30 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 32 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT' 3 3
('OPERATION_END_ELAPSED', 0.011, 'TRAINING')
{ "hidden_layer_sizes" : [4, 8, 6],  "max_iter" : 32 , }
{ "hidden_layer_sizes" : [4, 8, 6],  "max_iter" : 32 , }
{
	"metadata" : { "model" : "Rosenblatt_MLP", "version" : "2024-W12", "signature" : "ff4_ff4"},
	"options" : {  "hidden_layer_sizes" : [ 4, 8, 6 ], "activation" : "relu", "solver" : "adam", "alpha" : 0.000100, "batch_size" : null, "learning_rate" : "constant", "learning_rate_init" : 0.001000, "power_t" : 0.500000, "max_iter" : 32, "shuffle" : 1, "random_state" : 1789, "tol" : 0.000100, "verbose" : 0, "warm_start" : 0, "momentum" : 0.900000, "nesterovs_momentum" : 1, "early_stopping" : 0, "validation_fraction" : 0.100000, "beta_1" : 0.900000, "beta_2" : 0.999000, "epsilon" : 0.000000, "n_iter_no_change" : 10, "max_fun" : 15000 },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 10 },
	"layers" : {
		"sizes" : [ 10, 4, 8, 6, 1 ],
		"Layer_0" : {
			"name" : "Input_Layer",
			"NbInputs" : 0,
			"NbOutputs" : 10 
		},
		"Layer_1" : {
			"name" : "Hidden_Layer_1",
			"NbInputs" : 10,
			"NbOutputs" : 4 ,
			"coeffs_0" : [ -0.086529, 0.310161, -0.237160, -0.074589 ],
			"coeffs_1" : [ 0.089562, -0.489012, 0.162918, 0.003984 ],
			"coeffs_2" : [ 0.527424, 0.109666, 0.513269, -0.127567 ],
			"coeffs_3" : [ 0.619659, -0.610729, -0.244163, 0.228249 ],
			"coeffs_4" : [ 0.311121, -0.342307, -0.302736, -0.527518 ],
			"coeffs_5" : [ 0.253205, -0.678251, -0.104379, 0.018115 ],
			"coeffs_6" : [ -0.160574, -0.622578, -0.304766, 0.510768 ],
			"coeffs_7" : [ -0.078386, -0.024820, -0.555071, 0.012418 ],
			"coeffs_8" : [ -0.230974, 0.213206, -0.131723, 0.253859 ],
			"coeffs_9" : [ -0.466755, 0.544007, -0.448411, 0.324297 ],
			"intercepts" : [ -0.500910, 0.330165, 0.154196, 0.569919 ]
		},
		"Layer_2" : {
			"name" : "Hidden_Layer_2",
			"NbInputs" : 4,
			"NbOutputs" : 8 ,
			"coeffs_0" : [ -0.413016, -0.573712, 0.208442, 0.225049, 0.506620, 0.576491, 0.508063, -0.427464 ],
			"coeffs_1" : [ 0.437140, 0.545181, -0.400862, 0.285500, 0.194293, 0.024818, 0.088024, 0.393537 ],
			"coeffs_2" : [ -0.575274, 0.089234, 0.259450, 0.376074, -0.572415, 0.459196, -0.362982, -0.622683 ],
			"coeffs_3" : [ 0.728340, 0.644193, -0.108782, -0.543945, 0.006494, 0.645706, -0.541836, 0.303483 ],
			"intercepts" : [ 0.349693, 0.386527, 0.597291, -0.357124, 0.329955, 0.466633, 0.486060, -0.034562 ]
		},
		"Layer_3" : {
			"name" : "Hidden_Layer_3",
			"NbInputs" : 8,
			"NbOutputs" : 6 ,
			"coeffs_0" : [ -0.612154, 0.295564, -0.014605, -0.124039, -0.449854, -0.588194 ],
			"coeffs_1" : [ -0.269948, 0.559090, 0.005476, -0.133482, -0.151607, -0.555284 ],
			"coeffs_2" : [ 0.187062, -0.230490, -0.275908, -0.133022, 0.239555, -0.431684 ],
			"coeffs_3" : [ -0.185583, 0.345899, 0.400288, 0.526231, 0.444787, 0.341110 ],
			"coeffs_4" : [ -0.309431, 0.030110, 0.160896, 0.412954, 0.291422, -0.001604 ],
			"coeffs_5" : [ 0.345903, 0.423507, 0.086176, -0.195384, -0.154200, -0.294011 ],
			"coeffs_6" : [ 0.313653, 0.333368, -0.475827, 0.182649, -0.386450, -0.001729 ],
			"coeffs_7" : [ 0.092286, -0.295338, 0.277283, -0.587535, -0.557435, 0.457149 ],
			"intercepts" : [ 0.562121, -0.464798, -0.267809, -0.494865, -0.500519, -0.502640 ]
		},
		"Layer_4" : {
			"name" : "Output_Layer",
			"NbInputs" : 6,
			"NbOutputs" : 1 ,
			"coeffs_0" : [ -0.277359 ],
			"coeffs_1" : [ -0.181240 ],
			"coeffs_2" : [ -0.588419 ],
			"coeffs_3" : [ -0.636297 ],
			"coeffs_4" : [ -0.788203 ],
			"coeffs_5" : [ 0.178692 ],
			"intercepts" : [ -0.575915 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/regression/MLPRegressor/mllite.MLPRegressor_freidman1_tiny_option_1.json'

MLLITE_MODEL_SET_OPTIONS MLPRegressor {"hidden_layer_sizes" : [4, 8, 6]}
MLLITE_MODEL_OPTIONS_DEFAULT MLPRegressor { "max_iter" : 32}
MLLITE_MODEL_OPTIONS_AFTER_SETTING MLPRegressor { "hidden_layer_sizes" : [4, 8, 6],  "max_iter" : 32 , }
MLLITE_MODEL_JSON_AFTER_SETTING MLPRegressor None
MLLITE_RELOADING_MODEL mllite_mlp_reg.MLPRegressor_ff4_ff4
{
	"metadata" : { "model" : "Rosenblatt_MLP", "version" : "2024-W12", "signature" : "ff4_ff4"},
	"options" : {  "hidden_layer_sizes" : [ 4, 8, 6 ], "activation" : "relu", "solver" : "adam", "alpha" : 0.000100, "batch_size" : null, "learning_rate" : "constant", "learning_rate_init" : 0.001000, "power_t" : 0.500000, "max_iter" : 32, "shuffle" : 1, "random_state" : 1789, "tol" : 0.000100, "verbose" : 0, "warm_start" : 0, "momentum" : 0.900000, "nesterovs_momentum" : 1, "early_stopping" : 0, "validation_fraction" : 0.100000, "beta_1" : 0.900000, "beta_2" : 0.999000, "epsilon" : 0.000000, "n_iter_no_change" : 10, "max_fun" : 15000 },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 10 },
	"layers" : {
		"sizes" : [ 10, 4, 8, 6, 1 ],
		"Layer_0" : {
			"name" : "Input_Layer",
			"NbInputs" : 0,
			"NbOutputs" : 10 
		},
		"Layer_1" : {
			"name" : "Hidden_Layer_1",
			"NbInputs" : 10,
			"NbOutputs" : 4 ,
			"coeffs_0" : [ -0.086529, 0.310161, -0.237160, -0.074589 ],
			"coeffs_1" : [ 0.089562, -0.489012, 0.162918, 0.003984 ],
			"coeffs_2" : [ 0.527424, 0.109666, 0.513269, -0.127567 ],
			"coeffs_3" : [ 0.619659, -0.610729, -0.244163, 0.228249 ],
			"coeffs_4" : [ 0.311121, -0.342307, -0.302736, -0.527518 ],
			"coeffs_5" : [ 0.253205, -0.678251, -0.104379, 0.018115 ],
			"coeffs_6" : [ -0.160574, -0.622578, -0.304766, 0.510768 ],
			"coeffs_7" : [ -0.078386, -0.024820, -0.555071, 0.012418 ],
			"coeffs_8" : [ -0.230974, 0.213206, -0.131723, 0.253859 ],
			"coeffs_9" : [ -0.466755, 0.544007, -0.448411, 0.324297 ],
			"intercepts" : [ -0.500910, 0.330165, 0.154196, 0.569919 ]
		},
		"Layer_2" : {
			"name" : "Hidden_Layer_2",
			"NbInputs" : 4,
			"NbOutputs" : 8 ,
			"coeffs_0" : [ -0.413016, -0.573712, 0.208442, 0.225049, 0.506620, 0.576491, 0.508063, -0.427464 ],
			"coeffs_1" : [ 0.437140, 0.545181, -0.400862, 0.285500, 0.194293, 0.024818, 0.088024, 0.393537 ],
			"coeffs_2" : [ -0.575274, 0.089234, 0.259450, 0.376074, -0.572415, 0.459196, -0.362982, -0.622683 ],
			"coeffs_3" : [ 0.728340, 0.644193, -0.108782, -0.543945, 0.006494, 0.645706, -0.541836, 0.303483 ],
			"intercepts" : [ 0.349693, 0.386527, 0.597291, -0.357124, 0.329955, 0.466633, 0.486060, -0.034562 ]
		},
		"Layer_3" : {
			"name" : "Hidden_Layer_3",
			"NbInputs" : 8,
			"NbOutputs" : 6 ,
			"coeffs_0" : [ -0.612154, 0.295564, -0.014605, -0.124039, -0.449854, -0.588194 ],
			"coeffs_1" : [ -0.269948, 0.559090, 0.005476, -0.133482, -0.151607, -0.555284 ],
			"coeffs_2" : [ 0.187062, -0.230490, -0.275908, -0.133022, 0.239555, -0.431684 ],
			"coeffs_3" : [ -0.185583, 0.345899, 0.400288, 0.526231, 0.444787, 0.341110 ],
			"coeffs_4" : [ -0.309431, 0.030110, 0.160896, 0.412954, 0.291422, -0.001604 ],
			"coeffs_5" : [ 0.345903, 0.423507, 0.086176, -0.195384, -0.154200, -0.294011 ],
			"coeffs_6" : [ 0.313653, 0.333368, -0.475827, 0.182649, -0.386450, -0.001729 ],
			"coeffs_7" : [ 0.092286, -0.295338, 0.277283, -0.587535, -0.557435, 0.457149 ],
			"intercepts" : [ 0.562121, -0.464798, -0.267809, -0.494865, -0.500519, -0.502640 ]
		},
		"Layer_4" : {
			"name" : "Output_Layer",
			"NbInputs" : 6,
			"NbOutputs" : 1 ,
			"coeffs_0" : [ -0.277359 ],
			"coeffs_1" : [ -0.181240 ],
			"coeffs_2" : [ -0.588419 ],
			"coeffs_3" : [ -0.636297 ],
			"coeffs_4" : [ -0.788203 ],
			"coeffs_5" : [ 0.178692 ],
			"intercepts" : [ -0.575915 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"dataset" : 	{
		"dataset_features" : 10,
		"dataset_rows" : 16
	},
	"layers" : 	{
		"Layer_0" : 	{
			"NbInputs" : 0,
			"NbOutputs" : 10,
			"name" : "Input_Layer"
		},
		"Layer_1" : 	{
			"NbInputs" : 10,
			"NbOutputs" : 4,
			"coeffs_0" : [ -0.086529, 0.310161, -0.23716, -0.074589 ],
			"coeffs_1" : [ 0.089562, -0.489012, 0.162918, 0.003984 ],
			"coeffs_2" : [ 0.527424, 0.109666, 0.513269, -0.127567 ],
			"coeffs_3" : [ 0.619659, -0.610729, -0.244163, 0.228249 ],
			"coeffs_4" : [ 0.311121, -0.342307, -0.302736, -0.527518 ],
			"coeffs_5" : [ 0.253205, -0.678251, -0.104379, 0.018115 ],
			"coeffs_6" : [ -0.160574, -0.622578, -0.304766, 0.510768 ],
			"coeffs_7" : [ -0.078386, -0.02482, -0.555071, 0.012418 ],
			"coeffs_8" : [ -0.230974, 0.213206, -0.131723, 0.253859 ],
			"coeffs_9" : [ -0.466755, 0.544007, -0.448411, 0.324297 ],
			"intercepts" : [ -0.50091, 0.330165, 0.154196, 0.569919 ],
			"name" : "Hidden_Layer_1"
		},
		"Layer_2" : 	{
			"NbInputs" : 4,
			"NbOutputs" : 8,
			"coeffs_0" : [ -0.413016, -0.573712, 0.208442, 0.225049, 0.50662, 0.576491, 0.508063, -0.427464 ],
			"coeffs_1" : [ 0.43714, 0.545181, -0.400862, 0.2855, 0.194293, 0.024818, 0.088024, 0.393537 ],
			"coeffs_2" : [ -0.575274, 0.089234, 0.25945, 0.376074, -0.572415, 0.459196, -0.362982, -0.622683 ],
			"coeffs_3" : [ 0.72834, 0.644193, -0.108782, -0.543945, 0.006494, 0.645706, -0.541836, 0.303483 ],
			"intercepts" : [ 0.349693, 0.386527, 0.597291, -0.357124, 0.329955, 0.466633, 0.48606, -0.034562 ],
			"name" : "Hidden_Layer_2"
		},
		"Layer_3" : 	{
			"NbInputs" : 8,
			"NbOutputs" : 6,
			"coeffs_0" : [ -0.612154, 0.295564, -0.014605, -0.124039, -0.449854, -0.588194 ],
			"coeffs_1" : [ -0.269948, 0.55909, 0.005476, -0.133482, -0.151607, -0.555284 ],
			"coeffs_2" : [ 0.187062, -0.23049, -0.275908, -0.133022, 0.239555, -0.431684 ],
			"coeffs_3" : [ -0.185583, 0.345899, 0.400288, 0.526231, 0.444787, 0.34111 ],
			"coeffs_4" : [ -0.309431, 0.03011, 0.160896, 0.412954, 0.291422, -0.001604 ],
			"coeffs_5" : [ 0.345903, 0.423507, 0.086176, -0.195384, -0.1542, -0.294011 ],
			"coeffs_6" : [ 0.313653, 0.333368, -0.475827, 0.182649, -0.38645, -0.001729 ],
			"coeffs_7" : [ 0.092286, -0.295338, 0.277283, -0.587535, -0.557435, 0.457149 ],
			"intercepts" : [ 0.562121, -0.464798, -0.267809, -0.494865, -0.500519, -0.50264 ],
			"name" : "Hidden_Layer_3"
		},
		"Layer_4" : 	{
			"NbInputs" : 6,
			"NbOutputs" : 1,
			"coeffs_0" : [ -0.277359 ],
			"coeffs_1" : [ -0.18124 ],
			"coeffs_2" : [ -0.588419 ],
			"coeffs_3" : [ -0.636297 ],
			"coeffs_4" : [ -0.788203 ],
			"coeffs_5" : [ 0.178692 ],
			"intercepts" : [ -0.575915 ],
			"name" : "Output_Layer"
		},
		"sizes" : [ 10, 4, 8, 6, 1 ]
	},
	"metadata" :  { "model" : "Rosenblatt_MLP", "signature" : "ff4_ff4", "version" : "2024-W12" },
	"options" :  { "activation" : "relu", "alpha" : 0.0001, "batch_size" : null, "beta_1" : 0.9, "beta_2" : 0.999, "early_stopping" : 0, "epsilon" : 0.0, "hidden_layer_sizes" : [ 4, 8, 6 ], "learning_rate" : "constant", "learning_rate_init" : 0.001, "max_fun" : 15000, "max_iter" : 32, "momentum" : 0.9, "n_iter_no_change" : 10, "nesterovs_momentum" : 1, "power_t" : 0.5, "random_state" : 1789, "shuffle" : 1, "solver" : "adam", "tol" : 0.0001, "validation_fraction" : 0.1, "verbose" : 0, "warm_start" : 0 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
[-0.7329776  -0.7130933  -0.74795514 -0.8230711  -0.7608591  -0.71153826
 -0.7340979  -0.70412433 -0.72292876 -0.7099705  -0.7463649  -0.7515812
 -0.82248336 -0.7225133  -0.7759738  -0.7920155 ]
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
('OPERATION_START', 'PREDICT')
[-0.732978   -0.71309364 -0.7479559  -0.82307184 -0.76085985 -0.71153885
 -0.73409826 -0.7041248  -0.7229294  -0.70997113 -0.74636555 -0.75158155
 -0.8224841  -0.7225139  -0.7759745  -0.7920161 ]
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
MODEL_PERFS {'class_name': 'mllite.MLPRegressor', 'model_name': 'MLPRegressor', 'options': '{"hidden_layer_sizes" : [4, 8, 6]}', 'dataset': 'freidman1_tiny', 'size': 16, 'mse': 282.8769, 'mae': 16.299313, 'mape': 1.0512354, 'r2': -15.597803642591956}
WRITING_PERF_CODE 'logs/auto_tests/regression/MLPRegressor/mllite.MLPRegressor_freidman1_tiny_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.MLPRegressor', 'model_name': 'MLPRegressor', 'options': '{"hidden_layer_sizes" : [4, 8, 6]}', 'dataset': 'freidman1_tiny', 'training_time_in_sec': 0.011, 'prediction_time_in_sec': 0.001}
WRITING_SQL_CODE 'logs/auto_tests/regression/MLPRegressor/mllite.MLPRegressor_freidman1_tiny_option_1.sql'



SQL_OUT_PUT_FIRST_LINES_START
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
"Input_Layer_BA" AS
 ( SELECT
    t."index" as "index",
    t.X_0 AS OUT_0,
    t.X_1 AS OUT_1,
    t.X_2 AS OUT_2,
    t.X_3 AS OUT_3,
    t.X_4 AS OUT_4,
    t.X_5 AS OUT_5,
    t.X_6 AS OUT_6,
    t.X_7 AS OUT_7,
    t.X_8 AS OUT_8,
    t.X_9 AS OUT_9
 FROM model_input AS t
),
"Hidden_Layer_1_BA" AS
 ( SELECT
    t."index" as "index",
    -0.500910 + -0.086529 * t.OUT_0  + 0.089562 * t.OUT_1  + 0.527424 * t.OUT_2  + 0.619659 * t.OUT_3  + 0.311121 * t.OUT_4  + 0.253205 * t.OUT_5  + -0.160574 * t.OUT_6  + -0.078386 * t.OUT_7  + -0.230974 * t.OUT_
SQL_OUT_PUT_FIRST_LINES_END
SQL_OUT_PUT_LAST_LINES_START
8194 * t.OUT_0  + -0.555284 * t.OUT_1  + -0.431684 * t.OUT_2  + 0.341110 * t.OUT_3  + -0.001604 * t.OUT_4  + -0.294011 * t.OUT_5  + -0.001729 * t.OUT_6  + 0.457149 * t.OUT_7 AS OUT_5
   FROM Hidden_Layer_2_Activation AS t
 ),
"Hidden_Layer_3_Activation" AS
 ( SELECT
    t."index" as "index",
    CASE WHEN (OUT_0 > 0) THEN OUT_0 ELSE 0 END AS OUT_0,
    CASE WHEN (OUT_1 > 0) THEN OUT_1 ELSE 0 END AS OUT_1,
    CASE WHEN (OUT_2 > 0) THEN OUT_2 ELSE 0 END AS OUT_2,
    CASE WHEN (OUT_3 > 0) THEN OUT_3 ELSE 0 END AS OUT_3,
    CASE WHEN (OUT_4 > 0) THEN OUT_4 ELSE 0 END AS OUT_4,
    CASE WHEN (OUT_5 > 0) THEN OUT_5 ELSE 0 END AS OUT_5
   FROM Hidden_Layer_3_BA AS t
 ),
"Output_Layer_BA" AS
 ( SELECT
    t."index" as "index",
    -0.575915 + -0.277359 * t.OUT_0  + -0.181240 * t.OUT_1  + -0.588419 * t.OUT_2  + -0.636297 * t.OUT_3  + -0.788203 * t.OUT_4  + 0.178692 * t.OUT_5 AS OUT_0
   FROM Hidden_Layer_3_Activation AS t
 )
 SELECT
    t."index" AS "index",
    t.OUT_0 AS "Estimator"
  FROM "Output_Layer_BA" AS t

SQL_OUT_PUT_LAST_LINES_END




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 16 entries, 0 to 15
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     16 non-null     float32
 1   X_1     16 non-null     float32
 2   X_2     16 non-null     float32
 3   X_3     16 non-null     float32
 4   X_4     16 non-null     float32
 5   X_5     16 non-null     float32
 6   X_6     16 non-null     float32
 7   X_7     16 non-null     float32
 8   X_8     16 non-null     float32
 9   X_9     16 non-null     float32
dtypes: float32(10)
memory usage: 768.0 bytes
            X_0       X_1       X_2  ...       X_7       X_8       X_9
index                                ...                              
0      0.544738  0.515912  0.990435  ...  0.041089  0.898018  0.377159
1      0.783459  0.095321  0.135945  ...  0.422766  0.019766  0.833486
2      0.652811  0.757719  0.306902  ...  0.146070  0.894295  0.086598
3      0.226051  0.939732  0.731124  ...  0.843453  0.185038  0.248943
4      0.764610  0.378970  0.823855  ...  0.361050  0.814980  0.123688
5      0.368356  0.189593  0.403483  ...  0.840440  0.462841  0.813023
6      0.888102  0.149216  0.426902  ...  0.653572  0.865909  0.986362
7      0.825366  0.284076  0.971058  ...  0.900471  0.780397  0.355315
8      0.235384  0.117604  0.514017  ...  0.091568  0.527227  0.211281
9      0.834709  0.502155  0.670056  ...  0.848192  0.038824  0.113899
10     0.287599  0.939261  0.380885  ...  0.812585  0.329620  0.003549
11     0.992031  0.233387  0.782862  ...  0.403574  0.461541  0.895167
12     0.020119  0.541789  0.751033  ...  0.708677  0.950842  0.143679
13     0.830477  0.389094  0.475292  ...  0.634453  0.479506  0.035941
14     0.399336  0.628863  0.606025  ...  0.040244  0.521303  0.455322
15     0.634220  0.486969  0.969793  ...  0.716476  0.697923  0.212891

[16 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 16 entries, 0 to 15
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      16 non-null     int64  
 1   Estimator  16 non-null     float64
dtypes: float64(1), int64(1)
memory usage: 388.0 bytes
    index  Estimator
0       0  -0.732978
1       1  -0.713094
2       2  -0.747956
3       3  -0.823072
4       4  -0.760860
5       5  -0.711539
6       6  -0.734098
7       7  -0.704125
8       8  -0.722930
9       9  -0.709971
10     10  -0.746366
11     11  -0.751582
12     12  -0.822484
13     13  -0.722514
14     14  -0.775975
15     15  -0.792016
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
    index  SQL_Estimator  Py_Estimator
0       0      -0.732978     -0.732978
1       1      -0.713094     -0.713093
2       2      -0.747956     -0.747955
3       3      -0.823072     -0.823071
4       4      -0.760860     -0.760859
5       5      -0.711539     -0.711538
6       6      -0.734098     -0.734098
7       7      -0.704125     -0.704124
8       8      -0.722930     -0.722929
9       9      -0.709971     -0.709970
10     10      -0.746366     -0.746365
11     11      -0.751582     -0.751581
12     12      -0.822484     -0.822483
13     13      -0.722514     -0.722513
14     14      -0.775975     -0.775974
15     15      -0.792016     -0.792015
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
