         X_0       X_1       X_2  ...       X_8       X_9     target
0   0.544738  0.515912  0.990435  ...  0.898018  0.377159  15.807614
1   0.783459  0.095321  0.135945  ...  0.019766  0.833486  14.766437
2   0.652811  0.757719  0.306902  ...  0.894295  0.086598  22.842493
3   0.226051  0.939732  0.731124  ...  0.185038  0.248943  19.544314
4   0.764610  0.378970  0.823855  ...  0.814980  0.123688  21.897690
5   0.368356  0.189593  0.403483  ...  0.462841  0.813023  11.119547
6   0.888102  0.149216  0.426902  ...  0.865909  0.986362   9.912128
7   0.825366  0.284076  0.971058  ...  0.780396  0.355315  15.012190
8   0.235384  0.117604  0.514017  ...  0.527227  0.211281  10.304959
9   0.834709  0.502155  0.670056  ...  0.038824  0.113899  12.722529
10  0.287599  0.939261  0.380885  ...  0.329620  0.003549  15.371187
11  0.992031  0.233387  0.782862  ...  0.461541  0.895167  11.851628
12  0.020119  0.541789  0.751033  ...  0.950842  0.143679  15.153405
13  0.830477  0.389094  0.475292  ...  0.479506  0.035941  11.800902
14  0.399336  0.628863  0.606025  ...  0.521303  0.455322  19.559005
15  0.634220  0.486969  0.969793  ...  0.697923  0.212891  21.151443

[16 rows x 11 columns]
MLLITE_MODEL_SET_OPTIONS RidgeRegressor None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeRegressor { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeRegressor { ,   , }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeRegressor None
('OPERATION_START', 'TRAINING')
[[0.54473835 0.51591223 0.99043506 0.25514543 0.14395337 0.33235115
  0.8686215  0.04108923 0.8980185  0.37715888]
 [0.78345853 0.09532096 0.1359447  0.858711   0.24078475 0.08367069
  0.05237448 0.42276597 0.01976581 0.8334865 ]
 [0.652811   0.75771934 0.3069025  0.8282855  0.7630638  0.85900337
  0.87337655 0.14607023 0.89429516 0.08659814]
 [0.22605109 0.9397324  0.7311243  0.8374556  0.7824477  0.3529266
  0.1832118  0.84345275 0.18503828 0.2489433 ]
 [0.76461023 0.37897    0.82385516 0.9136035  0.55340034 0.05504839
  0.58833206 0.36104986 0.81497955 0.12368783]] [15.807614 14.766437 22.842493 19.544313 21.89769 ]
MLLITE_FIT_USING_MODEL mllite_ridge_reg.RidgeRegressor_ff4_ff4
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_REGRESSOR_FIT' 1 2
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_REGRESSOR_FIT' 2 2
('OPERATION_END_ELAPSED', 0.009, 'TRAINING')
{ ,   , }
{ ,   , }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_ff4"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 10 },
	"equations" : {
			"intercept" : -0.170644,
			"coeffs" : [ 8.570517, 7.521006, 5.024872, 8.512961, 3.021130, 0.550156, -1.561722, -2.274378, 0.765304, -1.953000 ]
		}
}
WRITING_JSON_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_freidman1_tiny.json'

MLLITE_MODEL_SET_OPTIONS RidgeRegressor None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeRegressor { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeRegressor { ,   , }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeRegressor None
MLLITE_RELOADING_MODEL mllite_ridge_reg.RidgeRegressor_ff4_ff4
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_ff4"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 10 },
	"equations" : {
			"intercept" : -0.170644,
			"coeffs" : [ 8.570517, 7.521006, 5.024872, 8.512961, 3.021130, 0.550156, -1.561722, -2.274378, 0.765304, -1.953000 ]
		}
}
BEAUTIFIED_JSON_START
{
	"dataset" : 	{
		"dataset_features" : 10,
		"dataset_rows" : 16
	},
	"equations" : 	{
		"coeffs" : [ 8.570517, 7.521006, 5.024872, 8.512961, 3.02113, 0.550156, -1.561722, -2.274378, 0.765304, -1.953 ],
		"intercept" : -0.170644
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_ff4", "version" : "2024-W14" },
	"options" :  { "alpha" : 1.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
[14.645492 13.371664 21.313396 19.646503 21.494286 10.016711 10.98902
 14.290049 11.528395 12.798947 15.754439 13.933936 17.236782 13.421702
 19.79079  18.585327]
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
('OPERATION_START', 'PREDICT')
[14.645491 13.371666 21.313396 19.646503 21.494284 10.01671  10.989021
 14.290049 11.528396 12.798947 15.754441 13.933936 17.236786 13.421704
 19.790792 18.585331]
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
MODEL_PERFS {'class_name': 'mllite.RidgeRegressor', 'model_name': 'RidgeRegressor', 'options': None, 'dataset': 'freidman1_tiny', 'size': 16, 'mse': 1.7685194, 'mae': 1.1100593, 'mape': 0.077990934, 'r2': 0.896232109159286}
WRITING_PERF_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_freidman1_tiny.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeRegressor', 'model_name': 'RidgeRegressor', 'options': None, 'dataset': 'freidman1_tiny', 'training_time_in_sec': 0.009, 'prediction_time_in_sec': 0.001}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 0 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 1 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 2 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 3 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 4 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 5 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 6 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 7 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 8 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 9 10
{
   "Contributions" : {
      "X_0" : [ 0.521379 ],
      "X_1" : [ -0.201261 ],
      "X_2" : [ 0.037019 ],
      "X_3" : [ -0.449529 ],
      "X_4" : [ -0.074043 ],
      "X_5" : [ -0.045574 ],
      "X_6" : [ -0.014948 ],
      "X_7" : [ 0.132031 ],
      "X_8" : [ 0.005201 ],
      "X_9" : [ -0.079063 ]   
   },
   "Most_Contributive_Features" : {
      "y" : [ 0, 3, 1, 7, 9, 4, 5, 2, 6, 8 ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_freidman1_tiny_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_freidman1_tiny_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('freidman1_tiny', 'RidgeRegressor', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "freidman1_tiny" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   -0.170644 + 8.570517 * t."X_0" + 7.521006 * t."X_1" + 5.024872 * t."X_2" + 8.512961 * t."X_3" + 3.021130 * t."X_4" + 0.550156 * t."X_5" + -1.561722 * t."X_6" + -2.274378 * t."X_7" + 0.765304 * t."X_8" + -1.953000 * t."X_9" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_FIRST_LINES_END ('freidman1_tiny', 'RidgeRegressor', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('freidman1_tiny', 'RidgeRegressor', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "freidman1_tiny" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   -0.170644 + 8.570517 * t."X_0" + 7.521006 * t."X_1" + 5.024872 * t."X_2" + 8.512961 * t."X_3" + 3.021130 * t."X_4" + 0.550156 * t."X_5" + -1.561722 * t."X_6" + -2.274378 * t."X_7" + 0.765304 * t."X_8" + -1.953000 * t."X_9" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_LAST_LINES_END ('freidman1_tiny', 'RidgeRegressor', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 16 entries, 0 to 15
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     16 non-null     float32
 1   X_1     16 non-null     float32
 2   X_2     16 non-null     float32
 3   X_3     16 non-null     float32
 4   X_4     16 non-null     float32
 5   X_5     16 non-null     float32
 6   X_6     16 non-null     float32
 7   X_7     16 non-null     float32
 8   X_8     16 non-null     float32
 9   X_9     16 non-null     float32
dtypes: float32(10)
memory usage: 768.0 bytes
            X_0       X_1       X_2  ...       X_7       X_8       X_9
index                                ...                              
0      0.544738  0.515912  0.990435  ...  0.041089  0.898018  0.377159
1      0.783459  0.095321  0.135945  ...  0.422766  0.019766  0.833486
2      0.652811  0.757719  0.306902  ...  0.146070  0.894295  0.086598
3      0.226051  0.939732  0.731124  ...  0.843453  0.185038  0.248943
4      0.764610  0.378970  0.823855  ...  0.361050  0.814980  0.123688
5      0.368356  0.189593  0.403483  ...  0.840440  0.462841  0.813023
6      0.888102  0.149216  0.426902  ...  0.653572  0.865909  0.986362
7      0.825366  0.284076  0.971058  ...  0.900471  0.780397  0.355315
8      0.235384  0.117604  0.514017  ...  0.091568  0.527227  0.211281
9      0.834709  0.502155  0.670056  ...  0.848192  0.038824  0.113899
10     0.287599  0.939261  0.380885  ...  0.812585  0.329620  0.003549
11     0.992031  0.233387  0.782862  ...  0.403574  0.461541  0.895167
12     0.020119  0.541789  0.751033  ...  0.708677  0.950842  0.143679
13     0.830477  0.389094  0.475292  ...  0.634453  0.479506  0.035941
14     0.399336  0.628863  0.606025  ...  0.040244  0.521303  0.455322
15     0.634220  0.486969  0.969793  ...  0.716476  0.697923  0.212891

[16 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 16 entries, 0 to 15
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      16 non-null     int64  
 1   Estimator  16 non-null     float64
dtypes: float64(1), int64(1)
memory usage: 388.0 bytes
    index  Estimator
0       0  14.645491
1       1  13.371666
2       2  21.313396
3       3  19.646503
4       4  21.494284
5       5  10.016710
6       6  10.989021
7       7  14.290049
8       8  11.528396
9       9  12.798947
10     10  15.754441
11     11  13.933936
12     12  17.236786
13     13  13.421704
14     14  19.790792
15     15  18.585331
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('freidman1_tiny', 'RidgeRegressor') Estimator 1.3113021850585938e-06
    index  SQL_Estimator  Py_Estimator     SQL_Error
0       0      14.645491     14.645492 -9.536743e-07
1       1      13.371666     13.371664  1.907349e-06
2       2      21.313396     21.313396  0.000000e+00
3       3      19.646503     19.646503  0.000000e+00
4       4      21.494284     21.494286 -1.907349e-06
5       5      10.016710     10.016711 -9.536743e-07
6       6      10.989021     10.989020  9.536743e-07
7       7      14.290049     14.290049  0.000000e+00
8       8      11.528396     11.528395  9.536743e-07
9       9      12.798947     12.798947  0.000000e+00
10     10      15.754441     15.754439  1.907349e-06
11     11      13.933936     13.933936  0.000000e+00
12     12      17.236786     17.236782  3.814697e-06
13     13      13.421704     13.421702  1.907349e-06
14     14      19.790792     19.790791  1.907349e-06
15     15      18.585331     18.585327  3.814697e-06
MLLITE_REG_SQL_EXECUTION_STATUS ('freidman1_tiny', 'RidgeRegressor', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_freidman1_tiny_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('freidman1_tiny', 'RidgeRegressor', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "freidman1_tiny" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   -0.170644 + 8.570517 * t."X_0" + 7.521006 * t."X_1" + 5.024872 * t."X_2" + 8.512961 * t."X_3" + 3.021130 * t."X_4" + 0.550156 * t."X_5" + -1.561722 * t."X_6" + -2.274378 * t."X_7" + 0.765304 * t."X_8" + -1.953000 * t."X_9" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_FIRST_LINES_END ('freidman1_tiny', 'RidgeRegressor', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('freidman1_tiny', 'RidgeRegressor', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "freidman1_tiny" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   -0.170644 + 8.570517 * t."X_0" + 7.521006 * t."X_1" + 5.024872 * t."X_2" + 8.512961 * t."X_3" + 3.021130 * t."X_4" + 0.550156 * t."X_5" + -1.561722 * t."X_6" + -2.274378 * t."X_7" + 0.765304 * t."X_8" + -1.953000 * t."X_9" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_LAST_LINES_END ('freidman1_tiny', 'RidgeRegressor', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 16 entries, 0 to 15
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     16 non-null     float32
 1   X_1     16 non-null     float32
 2   X_2     16 non-null     float32
 3   X_3     16 non-null     float32
 4   X_4     16 non-null     float32
 5   X_5     16 non-null     float32
 6   X_6     16 non-null     float32
 7   X_7     16 non-null     float32
 8   X_8     16 non-null     float32
 9   X_9     16 non-null     float32
dtypes: float32(10)
memory usage: 768.0 bytes
            X_0       X_1       X_2  ...       X_7       X_8       X_9
index                                ...                              
0      0.544738  0.515912  0.990435  ...  0.041089  0.898018  0.377159
1      0.783459  0.095321  0.135945  ...  0.422766  0.019766  0.833486
2      0.652811  0.757719  0.306902  ...  0.146070  0.894295  0.086598
3      0.226051  0.939732  0.731124  ...  0.843453  0.185038  0.248943
4      0.764610  0.378970  0.823855  ...  0.361050  0.814980  0.123688
5      0.368356  0.189593  0.403483  ...  0.840440  0.462841  0.813023
6      0.888102  0.149216  0.426902  ...  0.653572  0.865909  0.986362
7      0.825366  0.284076  0.971058  ...  0.900471  0.780397  0.355315
8      0.235384  0.117604  0.514017  ...  0.091568  0.527227  0.211281
9      0.834709  0.502155  0.670056  ...  0.848192  0.038824  0.113899
10     0.287599  0.939261  0.380885  ...  0.812585  0.329620  0.003549
11     0.992031  0.233387  0.782862  ...  0.403574  0.461541  0.895167
12     0.020119  0.541789  0.751033  ...  0.708677  0.950842  0.143679
13     0.830477  0.389094  0.475292  ...  0.634453  0.479506  0.035941
14     0.399336  0.628863  0.606025  ...  0.040244  0.521303  0.455322
15     0.634220  0.486969  0.969793  ...  0.716476  0.697923  0.212891

[16 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 16 entries, 0 to 15
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      16 non-null     int64  
 1   Estimator  16 non-null     float64
dtypes: float64(1), int64(1)
memory usage: 388.0 bytes
    index  Estimator
0       0  14.645492
1       1  13.371666
2       2  21.313395
3       3  19.646505
4       4  21.494284
5       5  10.016711
6       6  10.989022
7       7  14.290051
8       8  11.528394
9       9  12.798947
10     10  15.754438
11     11  13.933937
12     12  17.236784
13     13  13.421704
14     14  19.790794
15     15  18.585329
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('freidman1_tiny', 'RidgeRegressor') Estimator 1.3471966713307637e-06
    index  SQL_Estimator  Py_Estimator     SQL_Error
0       0      14.645492     14.645492  1.110333e-07
1       1      13.371666     13.371664  1.803832e-06
2       2      21.313395     21.313396 -1.035505e-06
3       3      19.646505     19.646503  1.527794e-06
4       4      21.494284     21.494286 -2.049252e-06
5       5      10.016711     10.016711 -2.697088e-07
6       6      10.989022     10.989020  1.574611e-06
7       7      14.290051     14.290049  2.149738e-06
8       8      11.528394     11.528395 -2.720974e-07
9       9      12.798947     12.798947 -5.881482e-07
10     10      15.754438     15.754439 -1.160816e-06
11     11      13.933937     13.933936  1.335673e-06
12     12      17.236784     17.236782  1.562117e-06
13     13      13.421704     13.421702  1.274908e-06
14     14      19.790794     19.790791  3.021240e-06
15     15      18.585329     18.585327  1.818674e-06
MLLITE_REG_SQL_EXECUTION_STATUS ('freidman1_tiny', 'RidgeRegressor', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
