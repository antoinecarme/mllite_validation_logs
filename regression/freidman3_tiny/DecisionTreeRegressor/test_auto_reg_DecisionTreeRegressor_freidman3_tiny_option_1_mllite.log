          X_0          X_1       X_2        X_3    target
0   17.761710   423.498320  0.135270  10.148129  1.270144
1   45.437614   168.841197  0.343817   3.279963  0.906663
2   69.792322   473.447926  0.233546   3.411073  1.007753
3   67.667095   938.672588  0.652046   9.523154  1.460687
4   55.118421  1002.086076  0.726658   4.570617  1.495246
5   52.067586   534.256140  0.155164   8.526538  1.009971
6   50.992903   814.561313  0.257439   5.994628  1.332255
7   34.347892   205.928122  0.720020   9.414677  1.343157
8   63.010204   221.354390  0.814630   5.897069  1.234627
9   22.605109  1660.837003  0.731124   9.374556  1.552182
10  13.280703   643.716771  0.520814   4.842079  1.531203
11   7.606344  1112.226604  0.732761   6.140375  1.561464
12  51.401745  1161.331552  0.618557   2.218271  1.499363
13  94.566439   663.266399  0.852323   6.919084  1.405051
14  14.282172  1575.160409  0.428596   4.169882  1.549644
15  38.088467  1321.297507  0.052941  10.429984  1.072180
MLLITE_MODEL_SET_OPTIONS DecisionTreeRegressor {"max_depth" : 6, "max_leaf_nodes" : 32}
MLLITE_MODEL_OPTIONS_DEFAULT DecisionTreeRegressor { "max_leaf_nodes" : 64}
MLLITE_MODEL_OPTIONS_AFTER_SETTING DecisionTreeRegressor { "max_depth" : 6, "max_leaf_nodes" : 32,  "max_leaf_nodes" : 64 , }
MLLITE_MODEL_JSON_AFTER_SETTING DecisionTreeRegressor None
('OPERATION_START', 'TRAINING')
[[1.77617092e+01 4.23498322e+02 1.35270208e-01 1.01481285e+01]
 [4.54376144e+01 1.68841202e+02 3.43817413e-01 3.27996254e+00]
 [6.97923203e+01 4.73447937e+02 2.33546272e-01 3.41107249e+00]
 [6.76670914e+01 9.38672607e+02 6.52046204e-01 9.52315426e+00]
 [5.51184196e+01 1.00208606e+03 7.26658285e-01 4.57061768e+00]] [1.2701445 0.9066629 1.0077531 1.4606868 1.4952464]
MLLITE_FIT_USING_MODEL mllite_decision_tree_reg.DecisionTreeRegressor_ff4_ff4
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_REGRESSOR_FIT' 1 3
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 0 6
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_REGRESSOR_FIT' 2 3
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_REGRESSOR_FIT' 3 3
('OPERATION_END_ELAPSED', 0.006, 'TRAINING')
{ "max_depth" : 6, "max_leaf_nodes" : 32,  "max_leaf_nodes" : 64 , }
{ "max_depth" : 6, "max_leaf_nodes" : 32,  "max_leaf_nodes" : 64 , }
{
	"metadata" : { "model" : "Breiman_CART", "version" : "2024-W13", "signature" : "ff4_ff4"},
	"options" : { "ccp_alpha" : 0.000000, "criterion" : "", "max_depth" : 6, "max_features" : null, "max_leaf_nodes" : 32, "min_impurity_decrease" : 0.000000, "min_samples_leaf" : 1, "min_samples_split" : 2, "min_weight_fraction_leaf" : 0.000000, "random_state" : 1789, "splitter" : "best" },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 4 },
	"tree" : {
	"features" : 4,
	"outputs" : 1,
	"max_depth" : 5,
	"node_count" : 29,
	"nodes" : {
		"node_00" : {"left" : 1, "right" : 2, "feature" : 2, "threshold" : 0.386207, "impurity" : 0.045939, "n_samples" : 16, "w_samples" : 16.000000, "value" : [1.326974]},
		"node_01" : {"left" : 3, "right" : 4, "feature" : 3, "threshold" : 4.702850, "impurity" : 0.022943, "n_samples" : 6, "w_samples" : 6.000000, "value" : [1.099828]},
		"node_02" : {"left" : 9, "right" : 10, "feature" : 1, "threshold" : 432.535583, "impurity" : 0.010205, "n_samples" : 10, "w_samples" : 10.000000, "value" : [1.463262]},
		"node_03" : {"left" : 13, "right" : 14, "feature" : 2, "threshold" : 0.288682, "impurity" : 0.002555, "n_samples" : 2, "w_samples" : 2.000000, "value" : [0.957208]},
		"node_04" : {"left" : 5, "right" : 6, "feature" : 0, "threshold" : 51.530243, "impurity" : 0.017882, "n_samples" : 4, "w_samples" : 4.000000, "value" : [1.171138]},
		"node_05" : {"left" : 7, "right" : 8, "feature" : 3, "threshold" : 10.289057, "impurity" : 0.012298, "n_samples" : 3, "w_samples" : 3.000000, "value" : [1.224860]},
		"node_06" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.009971]},
		"node_07" : {"left" : 17, "right" : 18, "feature" : 1, "threshold" : 619.029846, "impurity" : 0.000964, "n_samples" : 2, "w_samples" : 2.000000, "value" : [1.301200]},
		"node_08" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : -0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.072180]},
		"node_09" : {"left" : 11, "right" : 12, "feature" : 0, "threshold" : 48.679047, "impurity" : 0.002945, "n_samples" : 2, "w_samples" : 2.000000, "value" : [1.288892]},
		"node_10" : {"left" : 15, "right" : 16, "feature" : 0, "threshold" : 61.392754, "impurity" : 0.002518, "n_samples" : 8, "w_samples" : 8.000000, "value" : [1.506855]},
		"node_11" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.343157]},
		"node_12" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : -0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.234627]},
		"node_13" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.007753]},
		"node_14" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : -0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.906663]},
		"node_15" : {"left" : 21, "right" : 22, "feature" : 0, "threshold" : 37.003426, "impurity" : 0.000667, "n_samples" : 6, "w_samples" : 6.000000, "value" : [1.531517]},
		"node_16" : {"left" : 19, "right" : 20, "feature" : 0, "threshold" : 81.116760, "impurity" : 0.000773, "n_samples" : 2, "w_samples" : 2.000000, "value" : [1.432869]},
		"node_17" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.270144]},
		"node_18" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : -0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.332255]},
		"node_19" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.460687]},
		"node_20" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : -0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.405051]},
		"node_21" : {"left" : 23, "right" : 24, "feature" : 1, "threshold" : 877.971680, "impurity" : 0.000121, "n_samples" : 4, "w_samples" : 4.000000, "value" : [1.548623]},
		"node_22" : {"left" : 27, "right" : 28, "feature" : 1, "threshold" : 1081.708740, "impurity" : 0.000005, "n_samples" : 2, "w_samples" : 2.000000, "value" : [1.497305]},
		"node_23" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.531204]},
		"node_24" : {"left" : 25, "right" : 26, "feature" : 0, "threshold" : 10.944258, "impurity" : 0.000026, "n_samples" : 3, "w_samples" : 3.000000, "value" : [1.554430]},
		"node_25" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.561464]},
		"node_26" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000002, "n_samples" : 2, "w_samples" : 2.000000, "value" : [1.550913]},
		"node_27" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.495246]},
		"node_28" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.499363]}
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/regression/DecisionTreeRegressor/mllite.DecisionTreeRegressor_freidman3_tiny_option_1.json'

MLLITE_MODEL_SET_OPTIONS DecisionTreeRegressor {"max_depth" : 6, "max_leaf_nodes" : 32}
MLLITE_MODEL_OPTIONS_DEFAULT DecisionTreeRegressor { "max_leaf_nodes" : 64}
MLLITE_MODEL_OPTIONS_AFTER_SETTING DecisionTreeRegressor { "max_depth" : 6, "max_leaf_nodes" : 32,  "max_leaf_nodes" : 64 , }
MLLITE_MODEL_JSON_AFTER_SETTING DecisionTreeRegressor None
MLLITE_RELOADING_MODEL mllite_decision_tree_reg.DecisionTreeRegressor_ff4_ff4
{
	"metadata" : { "model" : "Breiman_CART", "version" : "2024-W13", "signature" : "ff4_ff4"},
	"options" : { "ccp_alpha" : 0.000000, "criterion" : "", "max_depth" : 6, "max_features" : null, "max_leaf_nodes" : 32, "min_impurity_decrease" : 0.000000, "min_samples_leaf" : 1, "min_samples_split" : 2, "min_weight_fraction_leaf" : 0.000000, "random_state" : 1789, "splitter" : "best" },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 4 },
	"tree" : {
	"features" : 4,
	"outputs" : 1,
	"max_depth" : 5,
	"node_count" : 29,
	"nodes" : {
		"node_00" : {"left" : 1, "right" : 2, "feature" : 2, "threshold" : 0.386207, "impurity" : 0.045939, "n_samples" : 16, "w_samples" : 16.000000, "value" : [1.326974]},
		"node_01" : {"left" : 3, "right" : 4, "feature" : 3, "threshold" : 4.702850, "impurity" : 0.022943, "n_samples" : 6, "w_samples" : 6.000000, "value" : [1.099828]},
		"node_02" : {"left" : 9, "right" : 10, "feature" : 1, "threshold" : 432.535583, "impurity" : 0.010205, "n_samples" : 10, "w_samples" : 10.000000, "value" : [1.463262]},
		"node_03" : {"left" : 13, "right" : 14, "feature" : 2, "threshold" : 0.288682, "impurity" : 0.002555, "n_samples" : 2, "w_samples" : 2.000000, "value" : [0.957208]},
		"node_04" : {"left" : 5, "right" : 6, "feature" : 0, "threshold" : 51.530243, "impurity" : 0.017882, "n_samples" : 4, "w_samples" : 4.000000, "value" : [1.171138]},
		"node_05" : {"left" : 7, "right" : 8, "feature" : 3, "threshold" : 10.289057, "impurity" : 0.012298, "n_samples" : 3, "w_samples" : 3.000000, "value" : [1.224860]},
		"node_06" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.009971]},
		"node_07" : {"left" : 17, "right" : 18, "feature" : 1, "threshold" : 619.029846, "impurity" : 0.000964, "n_samples" : 2, "w_samples" : 2.000000, "value" : [1.301200]},
		"node_08" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : -0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.072180]},
		"node_09" : {"left" : 11, "right" : 12, "feature" : 0, "threshold" : 48.679047, "impurity" : 0.002945, "n_samples" : 2, "w_samples" : 2.000000, "value" : [1.288892]},
		"node_10" : {"left" : 15, "right" : 16, "feature" : 0, "threshold" : 61.392754, "impurity" : 0.002518, "n_samples" : 8, "w_samples" : 8.000000, "value" : [1.506855]},
		"node_11" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.343157]},
		"node_12" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : -0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.234627]},
		"node_13" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.007753]},
		"node_14" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : -0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.906663]},
		"node_15" : {"left" : 21, "right" : 22, "feature" : 0, "threshold" : 37.003426, "impurity" : 0.000667, "n_samples" : 6, "w_samples" : 6.000000, "value" : [1.531517]},
		"node_16" : {"left" : 19, "right" : 20, "feature" : 0, "threshold" : 81.116760, "impurity" : 0.000773, "n_samples" : 2, "w_samples" : 2.000000, "value" : [1.432869]},
		"node_17" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.270144]},
		"node_18" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : -0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.332255]},
		"node_19" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.460687]},
		"node_20" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : -0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.405051]},
		"node_21" : {"left" : 23, "right" : 24, "feature" : 1, "threshold" : 877.971680, "impurity" : 0.000121, "n_samples" : 4, "w_samples" : 4.000000, "value" : [1.548623]},
		"node_22" : {"left" : 27, "right" : 28, "feature" : 1, "threshold" : 1081.708740, "impurity" : 0.000005, "n_samples" : 2, "w_samples" : 2.000000, "value" : [1.497305]},
		"node_23" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.531204]},
		"node_24" : {"left" : 25, "right" : 26, "feature" : 0, "threshold" : 10.944258, "impurity" : 0.000026, "n_samples" : 3, "w_samples" : 3.000000, "value" : [1.554430]},
		"node_25" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.561464]},
		"node_26" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000002, "n_samples" : 2, "w_samples" : 2.000000, "value" : [1.550913]},
		"node_27" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.495246]},
		"node_28" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.499363]}
		}
	}
}
BEAUTIFIED_JSON_START
{
	"dataset" : 	{
		"dataset_features" : 4,
		"dataset_rows" : 16
	},
	"metadata" :  { "model" : "Breiman_CART", "signature" : "ff4_ff4", "version" : "2024-W13" },
	"options" :  { "ccp_alpha" : 0.0, "criterion" : "", "max_depth" : 6, "max_features" : null, "max_leaf_nodes" : 32, "min_impurity_decrease" : 0.0, "min_samples_leaf" : 1, "min_samples_split" : 2, "min_weight_fraction_leaf" : 0.0, "random_state" : 1789, "splitter" : "best" },
	"tree" : 	{
		"features" : 4,
		"max_depth" : 5,
		"node_count" : 29,
		"nodes" : 	{
			"node_00" :  { "feature" : 2, "impurity" : 0.045939, "left" : 1, "n_samples" : 16, "right" : 2, "threshold" : 0.386207, "value" : [ 1.326974 ], "w_samples" : 16.0 },
			"node_01" :  { "feature" : 3, "impurity" : 0.022943, "left" : 3, "n_samples" : 6, "right" : 4, "threshold" : 4.70285, "value" : [ 1.099828 ], "w_samples" : 6.0 },
			"node_02" :  { "feature" : 1, "impurity" : 0.010205, "left" : 9, "n_samples" : 10, "right" : 10, "threshold" : 432.535583, "value" : [ 1.463262 ], "w_samples" : 10.0 },
			"node_03" :  { "feature" : 2, "impurity" : 0.002555, "left" : 13, "n_samples" : 2, "right" : 14, "threshold" : 0.288682, "value" : [ 0.957208 ], "w_samples" : 2.0 },
			"node_04" :  { "feature" : 0, "impurity" : 0.017882, "left" : 5, "n_samples" : 4, "right" : 6, "threshold" : 51.530243, "value" : [ 1.171138 ], "w_samples" : 4.0 },
			"node_05" :  { "feature" : 3, "impurity" : 0.012298, "left" : 7, "n_samples" : 3, "right" : 8, "threshold" : 10.289057, "value" : [ 1.22486 ], "w_samples" : 3.0 },
			"node_06" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 1.009971 ], "w_samples" : 1.0 },
			"node_07" :  { "feature" : 1, "impurity" : 0.000964, "left" : 17, "n_samples" : 2, "right" : 18, "threshold" : 619.029846, "value" : [ 1.3012 ], "w_samples" : 2.0 },
			"node_08" :  { "feature" : null, "impurity" : -0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 1.07218 ], "w_samples" : 1.0 },
			"node_09" :  { "feature" : 0, "impurity" : 0.002945, "left" : 11, "n_samples" : 2, "right" : 12, "threshold" : 48.679047, "value" : [ 1.288892 ], "w_samples" : 2.0 },
			"node_10" :  { "feature" : 0, "impurity" : 0.002518, "left" : 15, "n_samples" : 8, "right" : 16, "threshold" : 61.392754, "value" : [ 1.506855 ], "w_samples" : 8.0 },
			"node_11" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 1.343157 ], "w_samples" : 1.0 },
			"node_12" :  { "feature" : null, "impurity" : -0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 1.234627 ], "w_samples" : 1.0 },
			"node_13" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 1.007753 ], "w_samples" : 1.0 },
			"node_14" :  { "feature" : null, "impurity" : -0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 0.906663 ], "w_samples" : 1.0 },
			"node_15" :  { "feature" : 0, "impurity" : 0.000667, "left" : 21, "n_samples" : 6, "right" : 22, "threshold" : 37.003426, "value" : [ 1.531517 ], "w_samples" : 6.0 },
			"node_16" :  { "feature" : 0, "impurity" : 0.000773, "left" : 19, "n_samples" : 2, "right" : 20, "threshold" : 81.11676, "value" : [ 1.432869 ], "w_samples" : 2.0 },
			"node_17" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 1.270144 ], "w_samples" : 1.0 },
			"node_18" :  { "feature" : null, "impurity" : -0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 1.332255 ], "w_samples" : 1.0 },
			"node_19" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 1.460687 ], "w_samples" : 1.0 },
			"node_20" :  { "feature" : null, "impurity" : -0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 1.405051 ], "w_samples" : 1.0 },
			"node_21" :  { "feature" : 1, "impurity" : 0.000121, "left" : 23, "n_samples" : 4, "right" : 24, "threshold" : 877.97168, "value" : [ 1.548623 ], "w_samples" : 4.0 },
			"node_22" :  { "feature" : 1, "impurity" : 5e-06, "left" : 27, "n_samples" : 2, "right" : 28, "threshold" : 1081.70874, "value" : [ 1.497305 ], "w_samples" : 2.0 },
			"node_23" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 1.531204 ], "w_samples" : 1.0 },
			"node_24" :  { "feature" : 0, "impurity" : 2.6e-05, "left" : 25, "n_samples" : 3, "right" : 26, "threshold" : 10.944258, "value" : [ 1.55443 ], "w_samples" : 3.0 },
			"node_25" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 1.561464 ], "w_samples" : 1.0 },
			"node_26" :  { "feature" : null, "impurity" : 2e-06, "left" : null, "n_samples" : 2, "right" : null, "threshold" : null, "value" : [ 1.550913 ], "w_samples" : 2.0 },
			"node_27" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 1.495246 ], "w_samples" : 1.0 },
			"node_28" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 1.499363 ], "w_samples" : 1.0 }
		},
		"outputs" : 1
	}
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
[1.2701445 0.9066629 1.0077531 1.4606868 1.4952464 1.0099714 1.3322552
 1.3431568 1.2346267 1.5509133 1.5312035 1.5614636 1.4993627 1.4050505
 1.5509133 1.0721802]
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
('OPERATION_START', 'PREDICT')
[1.270144 0.906663 1.007753 1.460687 1.495246 1.009971 1.332255 1.343157
 1.234627 1.550913 1.531204 1.561464 1.499363 1.405051 1.550913 1.07218 ]
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
MODEL_PERFS {'class_name': 'mllite.DecisionTreeRegressor', 'model_name': 'DecisionTreeRegressor', 'options': '{"max_depth" : 6, "max_leaf_nodes" : 32}', 'dataset': 'freidman3_tiny', 'size': 16, 'mse': 2.0134642e-07, 'mae': 0.00015864521, 'mape': 0.00010229155, 'r2': 0.9999956171022442}
WRITING_PERF_CODE 'logs/auto_tests/regression/DecisionTreeRegressor/mllite.DecisionTreeRegressor_freidman3_tiny_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.DecisionTreeRegressor', 'model_name': 'DecisionTreeRegressor', 'options': '{"max_depth" : 6, "max_leaf_nodes" : 32}', 'dataset': 'freidman3_tiny', 'training_time_in_sec': 0.005, 'prediction_time_in_sec': 0.0}
WRITING_SQL_CODE 'logs/auto_tests/regression/DecisionTreeRegressor/mllite.DecisionTreeRegressor_freidman3_tiny_option_1_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('freidman3_tiny', 'DecisionTreeRegressor', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
"DT_node_lookup" AS 
 (SELECT
    model_input."index" AS "index",
    CASE WHEN (model_input."X_2" <= 0.386207) THEN CASE WHEN (model_input."X_3" <= 4.702850) THEN CASE WHEN (model_input."X_2" <= 0.288682) THEN 13 ELSE 14 END ELSE CASE WHEN (model_input."X_0" <= 51.530243) THEN CASE WHEN (model_input."X_3" <= 10.289057) THEN CASE WHEN (model_input."X_1" <= 619.029846) THEN 17 ELSE 18 END ELSE 8 END ELSE 6 END END ELSE CASE WHEN (model_input."X_1" <= 432.535583) THEN CASE WHEN (model_input."X_0" <= 48.679047) THEN 11 ELSE 12 END ELSE CASE WHEN (model_input."X_0" <= 61.392754) THEN CASE WHEN (model_input."X_0" <= 37.003426) THEN CASE WHEN (model_input."X_1" <= 877.971680) THEN 23 ELSE CASE WHEN (model_input."X_0" <= 10.944258) THEN 25 ELSE 26 END END ELSE CASE WHEN (
SQL_OUT_PUT_FIRST_LINES_END ('freidman3_tiny', 'DecisionTreeRegressor', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('freidman3_tiny', 'DecisionTreeRegressor', 'duckdb')
d, 1.531517 AS "E"
    UNION ALL
    SELECT 16 AS nid, 1.432869 AS "E"
    UNION ALL
    SELECT 17 AS nid, 1.270144 AS "E"
    UNION ALL
    SELECT 18 AS nid, 1.332255 AS "E"
    UNION ALL
    SELECT 19 AS nid, 1.460687 AS "E"
    UNION ALL
    SELECT 20 AS nid, 1.405051 AS "E"
    UNION ALL
    SELECT 21 AS nid, 1.548623 AS "E"
    UNION ALL
    SELECT 22 AS nid, 1.497305 AS "E"
    UNION ALL
    SELECT 23 AS nid, 1.531204 AS "E"
    UNION ALL
    SELECT 24 AS nid, 1.554430 AS "E"
    UNION ALL
    SELECT 25 AS nid, 1.561464 AS "E"
    UNION ALL
    SELECT 26 AS nid, 1.550913 AS "E"
    UNION ALL
    SELECT 27 AS nid, 1.495246 AS "E"
    UNION ALL
    SELECT 28 AS nid, 1.499363 AS "E"
  ) AS "Values"
 ),
"DT_Output" AS 
 (SELECT
   t1."index" AS "index",
   t1.node_id AS node_id,
   t2.nid AS nid,
   t2."E" AS "E"
  FROM
   "DT_node_lookup" AS t1
   LEFT OUTER JOIN
   "DT_node_data" AS t2
   ON t1.node_id = t2.nid
 )
SELECT
   "DT_Output"."index" AS "index",
   "DT_Output"."E" AS "Estimator"
FROM "DT_Output"
SQL_OUT_PUT_LAST_LINES_END ('freidman3_tiny', 'DecisionTreeRegressor', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 16 entries, 0 to 15
Data columns (total 4 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     16 non-null     float32
 1   X_1     16 non-null     float32
 2   X_2     16 non-null     float32
 3   X_3     16 non-null     float32
dtypes: float32(4)
memory usage: 384.0 bytes
             X_0          X_1       X_2        X_3
index                                             
0      17.761709   423.498322  0.135270  10.148129
1      45.437614   168.841202  0.343817   3.279963
2      69.792320   473.447937  0.233546   3.411072
3      67.667091   938.672607  0.652046   9.523154
4      55.118420  1002.086060  0.726658   4.570618
5      52.067585   534.256165  0.155164   8.526538
6      50.992905   814.561340  0.257439   5.994627
7      34.347893   205.928116  0.720020   9.414678
8      63.010204   221.354385  0.814630   5.897069
9      22.605108  1660.837036  0.731124   9.374556
10     13.280704   643.716797  0.520814   4.842079
11      7.606344  1112.226562  0.732761   6.140375
12     51.401745  1161.331543  0.618557   2.218271
13     94.566437   663.266418  0.852323   6.919084
14     14.282172  1575.160400  0.428596   4.169882
15     38.088467  1321.297485  0.052941  10.429984
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 16 entries, 0 to 15
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      16 non-null     int64  
 1   Estimator  16 non-null     float64
dtypes: float64(1), int64(1)
memory usage: 388.0 bytes
    index  Estimator
0       0   1.270144
1       1   0.906663
2       2   1.007753
3       3   1.460687
4       4   1.495246
5       5   1.009971
6       6   1.332255
7       7   1.343157
8       8   1.234627
9       9   1.550913
10     10   1.531204
11     11   1.561464
12     12   1.499363
13     13   1.405051
14     14   1.550913
15     15   1.072180
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('freidman3_tiny', 'DecisionTreeRegressor') Estimator 3.109524250172191e-07
    index  SQL_Estimator  Py_Estimator     SQL_Error
0       0       1.270144      1.270144 -4.625854e-07
1       1       0.906663      0.906663  1.186256e-07
2       2       1.007753      1.007753 -1.337738e-07
3       3       1.460687      1.460687  1.971359e-07
4       4       1.495246      1.495246 -4.103699e-07
5       5       1.009971      1.009971 -3.802338e-07
6       6       1.332255      1.332255 -2.442551e-07
7       7       1.343157      1.343157  1.854248e-07
8       8       1.234627      1.234627  3.491898e-07
9       9       1.550913      1.550913 -3.338928e-07
10     10       1.531204      1.531204  4.916229e-07
11     11       1.561464      1.561464  4.055634e-07
12     12       1.499363      1.499363  2.928619e-07
13     13       1.405051      1.405051  4.838715e-07
14     14       1.550913      1.550913 -3.338928e-07
15     15       1.072180      1.072180 -1.519394e-07
MLLITE_REG_SQL_EXECUTION_STATUS ('freidman3_tiny', 'DecisionTreeRegressor', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/regression/DecisionTreeRegressor/mllite.DecisionTreeRegressor_freidman3_tiny_option_1_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('freidman3_tiny', 'DecisionTreeRegressor', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
"DT_node_lookup" AS 
 (SELECT
    model_input."index" AS "index",
    CASE WHEN (model_input."X_2" <= 0.386207) THEN CASE WHEN (model_input."X_3" <= 4.702850) THEN CASE WHEN (model_input."X_2" <= 0.288682) THEN 13 ELSE 14 END ELSE CASE WHEN (model_input."X_0" <= 51.530243) THEN CASE WHEN (model_input."X_3" <= 10.289057) THEN CASE WHEN (model_input."X_1" <= 619.029846) THEN 17 ELSE 18 END ELSE 8 END ELSE 6 END END ELSE CASE WHEN (model_input."X_1" <= 432.535583) THEN CASE WHEN (model_input."X_0" <= 48.679047) THEN 11 ELSE 12 END ELSE CASE WHEN (model_input."X_0" <= 61.392754) THEN CASE WHEN (model_input."X_0" <= 37.003426) THEN CASE WHEN (model_input."X_1" <= 877.971680) THEN 23 ELSE CASE WHEN (model_input."X_0" <= 10.944258) THEN 25 ELSE 26 END END ELSE CASE WHEN (
SQL_OUT_PUT_FIRST_LINES_END ('freidman3_tiny', 'DecisionTreeRegressor', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('freidman3_tiny', 'DecisionTreeRegressor', 'sqlite')
d, 1.531517 AS "E"
    UNION ALL
    SELECT 16 AS nid, 1.432869 AS "E"
    UNION ALL
    SELECT 17 AS nid, 1.270144 AS "E"
    UNION ALL
    SELECT 18 AS nid, 1.332255 AS "E"
    UNION ALL
    SELECT 19 AS nid, 1.460687 AS "E"
    UNION ALL
    SELECT 20 AS nid, 1.405051 AS "E"
    UNION ALL
    SELECT 21 AS nid, 1.548623 AS "E"
    UNION ALL
    SELECT 22 AS nid, 1.497305 AS "E"
    UNION ALL
    SELECT 23 AS nid, 1.531204 AS "E"
    UNION ALL
    SELECT 24 AS nid, 1.554430 AS "E"
    UNION ALL
    SELECT 25 AS nid, 1.561464 AS "E"
    UNION ALL
    SELECT 26 AS nid, 1.550913 AS "E"
    UNION ALL
    SELECT 27 AS nid, 1.495246 AS "E"
    UNION ALL
    SELECT 28 AS nid, 1.499363 AS "E"
  ) AS "Values"
 ),
"DT_Output" AS 
 (SELECT
   t1."index" AS "index",
   t1.node_id AS node_id,
   t2.nid AS nid,
   t2."E" AS "E"
  FROM
   "DT_node_lookup" AS t1
   LEFT OUTER JOIN
   "DT_node_data" AS t2
   ON t1.node_id = t2.nid
 )
SELECT
   "DT_Output"."index" AS "index",
   "DT_Output"."E" AS "Estimator"
FROM "DT_Output"
SQL_OUT_PUT_LAST_LINES_END ('freidman3_tiny', 'DecisionTreeRegressor', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 16 entries, 0 to 15
Data columns (total 4 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     16 non-null     float32
 1   X_1     16 non-null     float32
 2   X_2     16 non-null     float32
 3   X_3     16 non-null     float32
dtypes: float32(4)
memory usage: 384.0 bytes
             X_0          X_1       X_2        X_3
index                                             
0      17.761709   423.498322  0.135270  10.148129
1      45.437614   168.841202  0.343817   3.279963
2      69.792320   473.447937  0.233546   3.411072
3      67.667091   938.672607  0.652046   9.523154
4      55.118420  1002.086060  0.726658   4.570618
5      52.067585   534.256165  0.155164   8.526538
6      50.992905   814.561340  0.257439   5.994627
7      34.347893   205.928116  0.720020   9.414678
8      63.010204   221.354385  0.814630   5.897069
9      22.605108  1660.837036  0.731124   9.374556
10     13.280704   643.716797  0.520814   4.842079
11      7.606344  1112.226562  0.732761   6.140375
12     51.401745  1161.331543  0.618557   2.218271
13     94.566437   663.266418  0.852323   6.919084
14     14.282172  1575.160400  0.428596   4.169882
15     38.088467  1321.297485  0.052941  10.429984
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 16 entries, 0 to 15
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      16 non-null     int64  
 1   Estimator  16 non-null     float64
dtypes: float64(1), int64(1)
memory usage: 388.0 bytes
    index  Estimator
0       0   1.270144
1       1   0.906663
2       2   1.007753
3       3   1.460687
4       4   1.495246
5       5   1.009971
6       6   1.332255
7       7   1.343157
8       8   1.234627
9       9   1.550913
10     10   1.531204
11     11   1.561464
12     12   1.499363
13     13   1.405051
14     14   1.550913
15     15   1.072180
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('freidman3_tiny', 'DecisionTreeRegressor') Estimator 3.109524250172191e-07
    index  SQL_Estimator  Py_Estimator     SQL_Error
0       0       1.270144      1.270144 -4.625854e-07
1       1       0.906663      0.906663  1.186256e-07
2       2       1.007753      1.007753 -1.337738e-07
3       3       1.460687      1.460687  1.971359e-07
4       4       1.495246      1.495246 -4.103699e-07
5       5       1.009971      1.009971 -3.802338e-07
6       6       1.332255      1.332255 -2.442551e-07
7       7       1.343157      1.343157  1.854248e-07
8       8       1.234627      1.234627  3.491898e-07
9       9       1.550913      1.550913 -3.338928e-07
10     10       1.531204      1.531204  4.916229e-07
11     11       1.561464      1.561464  4.055634e-07
12     12       1.499363      1.499363  2.928619e-07
13     13       1.405051      1.405051  4.838715e-07
14     14       1.550913      1.550913 -3.338928e-07
15     15       1.072180      1.072180 -1.519394e-07
MLLITE_REG_SQL_EXECUTION_STATUS ('freidman3_tiny', 'DecisionTreeRegressor', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/regression/DecisionTreeRegressor/mllite.DecisionTreeRegressor_freidman3_tiny_option_1_pgsql.sql'



SQL_OUT_PUT_FIRST_LINES_START ('freidman3_tiny', 'DecisionTreeRegressor', 'pgsql')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
"DT_node_lookup" AS 
 (SELECT
    model_input."index" AS "index",
    CASE WHEN (model_input."X_2" <= 0.386207) THEN CASE WHEN (model_input."X_3" <= 4.702850) THEN CASE WHEN (model_input."X_2" <= 0.288682) THEN 13 ELSE 14 END ELSE CASE WHEN (model_input."X_0" <= 51.530243) THEN CASE WHEN (model_input."X_3" <= 10.289057) THEN CASE WHEN (model_input."X_1" <= 619.029846) THEN 17 ELSE 18 END ELSE 8 END ELSE 6 END END ELSE CASE WHEN (model_input."X_1" <= 432.535583) THEN CASE WHEN (model_input."X_0" <= 48.679047) THEN 11 ELSE 12 END ELSE CASE WHEN (model_input."X_0" <= 61.392754) THEN CASE WHEN (model_input."X_0" <= 37.003426) THEN CASE WHEN (model_input."X_1" <= 877.971680) THEN 23 ELSE CASE WHEN (model_input."X_0" <= 10.944258) THEN 25 ELSE 26 END END ELSE CASE WHEN (
SQL_OUT_PUT_FIRST_LINES_END ('freidman3_tiny', 'DecisionTreeRegressor', 'pgsql')
SQL_OUT_PUT_LAST_LINES_START ('freidman3_tiny', 'DecisionTreeRegressor', 'pgsql')
d, 1.531517 AS "E"
    UNION ALL
    SELECT 16 AS nid, 1.432869 AS "E"
    UNION ALL
    SELECT 17 AS nid, 1.270144 AS "E"
    UNION ALL
    SELECT 18 AS nid, 1.332255 AS "E"
    UNION ALL
    SELECT 19 AS nid, 1.460687 AS "E"
    UNION ALL
    SELECT 20 AS nid, 1.405051 AS "E"
    UNION ALL
    SELECT 21 AS nid, 1.548623 AS "E"
    UNION ALL
    SELECT 22 AS nid, 1.497305 AS "E"
    UNION ALL
    SELECT 23 AS nid, 1.531204 AS "E"
    UNION ALL
    SELECT 24 AS nid, 1.554430 AS "E"
    UNION ALL
    SELECT 25 AS nid, 1.561464 AS "E"
    UNION ALL
    SELECT 26 AS nid, 1.550913 AS "E"
    UNION ALL
    SELECT 27 AS nid, 1.495246 AS "E"
    UNION ALL
    SELECT 28 AS nid, 1.499363 AS "E"
  ) AS "Values"
 ),
"DT_Output" AS 
 (SELECT
   t1."index" AS "index",
   t1.node_id AS node_id,
   t2.nid AS nid,
   t2."E" AS "E"
  FROM
   "DT_node_lookup" AS t1
   LEFT OUTER JOIN
   "DT_node_data" AS t2
   ON t1.node_id = t2.nid
 )
SELECT
   "DT_Output"."index" AS "index",
   "DT_Output"."E" AS "Estimator"
FROM "DT_Output"
SQL_OUT_PUT_LAST_LINES_END ('freidman3_tiny', 'DecisionTreeRegressor', 'pgsql') 




COPY_TRAINING_DATA_TO_SQLITE_START
