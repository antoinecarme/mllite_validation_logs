          X_0          X_1       X_2        X_3    target
0   17.761710   423.498320  0.135270  10.148129  1.270144
1   45.437614   168.841197  0.343817   3.279963  0.906663
2   69.792322   473.447926  0.233546   3.411073  1.007753
3   67.667095   938.672588  0.652046   9.523154  1.460687
4   55.118421  1002.086076  0.726658   4.570617  1.495246
5   52.067586   534.256140  0.155164   8.526538  1.009971
6   50.992903   814.561313  0.257439   5.994628  1.332255
7   34.347892   205.928122  0.720020   9.414677  1.343157
8   63.010204   221.354390  0.814630   5.897069  1.234627
9   22.605109  1660.837003  0.731124   9.374556  1.552182
10  13.280703   643.716771  0.520814   4.842079  1.531203
11   7.606344  1112.226604  0.732761   6.140375  1.561464
12  51.401745  1161.331552  0.618557   2.218271  1.499363
13  94.566439   663.266399  0.852323   6.919084  1.405051
14  14.282172  1575.160409  0.428596   4.169882  1.549644
15  38.088467  1321.297507  0.052941  10.429984  1.072180
MLLITE_MODEL_SET_OPTIONS RidgeRegressor {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeRegressor { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeRegressor { "alpha" : 0.0000001,   , }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeRegressor None
('OPERATION_START', 'TRAINING')
[[1.77617092e+01 4.23498322e+02 1.35270208e-01 1.01481285e+01]
 [4.54376144e+01 1.68841202e+02 3.43817413e-01 3.27996254e+00]
 [6.97923203e+01 4.73447937e+02 2.33546272e-01 3.41107249e+00]
 [6.76670914e+01 9.38672607e+02 6.52046204e-01 9.52315426e+00]
 [5.51184196e+01 1.00208606e+03 7.26658285e-01 4.57061768e+00]] [1.2701445 0.9066629 1.0077531 1.4606868 1.4952464]
MLLITE_FIT_USING_MODEL mllite_ridge_reg.RidgeRegressor_ff4_ff4
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_REGRESSOR_FIT' 1 2
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_REGRESSOR_FIT' 2 2
('OPERATION_END_ELAPSED', 0.005, 'TRAINING')
{ "alpha" : 0.0000001,   , }
{ "alpha" : 0.0000001,   , }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_ff4"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 4 },
	"equations" : {
			"intercept" : 1.017554,
			"coeffs" : [ -0.002769, 0.000199, 0.545764, -0.000348 ]
		}
}
WRITING_JSON_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_freidman3_tiny_option_1.json'

MLLITE_MODEL_SET_OPTIONS RidgeRegressor {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeRegressor { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeRegressor { "alpha" : 0.0000001,   , }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeRegressor None
MLLITE_RELOADING_MODEL mllite_ridge_reg.RidgeRegressor_ff4_ff4
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_ff4"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 4 },
	"equations" : {
			"intercept" : 1.017554,
			"coeffs" : [ -0.002769, 0.000199, 0.545764, -0.000348 ]
		}
}
BEAUTIFIED_JSON_START
{
	"dataset" : 	{
		"dataset_features" : 4,
		"dataset_rows" : 16
	},
	"equations" : 	{
		"coeffs" : [ -0.002769, 0.000199, 0.545764, -0.000348 ],
		"intercept" : 1.017554
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_ff4", "version" : "2024-W14" },
	"options" :  { "alpha" : 0.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
[1.1228106 1.1117722 1.0446273 1.3692329 1.4590325 1.0612365 1.1766143
 1.3530339 1.3295833 1.6807417 1.3912461 1.6152815 1.4427918 1.3502222
 1.5234704 1.1998943]
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
[1.1229421 1.1118385 1.0447893 1.369529  1.4593396 1.0614115 1.1768672
 1.3531091 1.3296721 1.6812261 1.391436  1.6156029 1.4431417 1.350449
 1.523925  1.2002887]
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
MODEL_PERFS {'class_name': 'mllite.RidgeRegressor', 'model_name': 'RidgeRegressor', 'options': '{"alpha" : 0.0000001}', 'dataset': 'freidman3_tiny', 'size': 16, 'mse': 0.010812055, 'mae': 0.08852166, 'mape': 0.07118404, 'r2': 0.7646437722429164}
WRITING_PERF_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_freidman3_tiny_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeRegressor', 'model_name': 'RidgeRegressor', 'options': '{"alpha" : 0.0000001}', 'dataset': 'freidman3_tiny', 'training_time_in_sec': 0.005, 'prediction_time_in_sec': 0.0}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 0 4
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 2 4
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 3 4
{
   "Contributions" : {
      "X_0" : [ -0.002169 ],
      "X_1" : [ 0.006828 ],
      "X_2" : [ 0.021250 ],
      "X_3" : [ 0.000179 ]   
   },
   "Most_Contributive_Features" : {
      "y" : [ 2, 1, 0, 3 ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_freidman3_tiny_option_1_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_freidman3_tiny_option_1_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('freidman3_tiny', 'RidgeRegressor', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "freidman3_tiny" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   1.017554 + -0.002769 * t."X_0" + 0.000199 * t."X_1" + 0.545764 * t."X_2" + -0.000348 * t."X_3" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_FIRST_LINES_END ('freidman3_tiny', 'RidgeRegressor', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('freidman3_tiny', 'RidgeRegressor', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "freidman3_tiny" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   1.017554 + -0.002769 * t."X_0" + 0.000199 * t."X_1" + 0.545764 * t."X_2" + -0.000348 * t."X_3" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_LAST_LINES_END ('freidman3_tiny', 'RidgeRegressor', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 16 entries, 0 to 15
Data columns (total 4 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     16 non-null     float32
 1   X_1     16 non-null     float32
 2   X_2     16 non-null     float32
 3   X_3     16 non-null     float32
dtypes: float32(4)
memory usage: 384.0 bytes
             X_0          X_1       X_2        X_3
index                                             
0      17.761709   423.498322  0.135270  10.148129
1      45.437614   168.841202  0.343817   3.279963
2      69.792320   473.447937  0.233546   3.411072
3      67.667091   938.672607  0.652046   9.523154
4      55.118420  1002.086060  0.726658   4.570618
5      52.067585   534.256165  0.155164   8.526538
6      50.992905   814.561340  0.257439   5.994627
7      34.347893   205.928116  0.720020   9.414678
8      63.010204   221.354385  0.814630   5.897069
9      22.605108  1660.837036  0.731124   9.374556
10     13.280704   643.716797  0.520814   4.842079
11      7.606344  1112.226562  0.732761   6.140375
12     51.401745  1161.331543  0.618557   2.218271
13     94.566437   663.266418  0.852323   6.919084
14     14.282172  1575.160400  0.428596   4.169882
15     38.088467  1321.297485  0.052941  10.429984
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 16 entries, 0 to 15
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      16 non-null     int64  
 1   Estimator  16 non-null     float64
dtypes: float64(1), int64(1)
memory usage: 388.0 bytes
    index  Estimator
0       0   1.122942
1       1   1.111838
2       2   1.044789
3       3   1.369529
4       4   1.459340
5       5   1.061411
6       6   1.176867
7       7   1.353109
8       8   1.329672
9       9   1.681226
10     10   1.391436
11     11   1.615603
12     12   1.443142
13     13   1.350449
14     14   1.523925
15     15   1.200289
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('freidman3_tiny', 'RidgeRegressor') Estimator 0.0002485141158103943
    index  SQL_Estimator  Py_Estimator  SQL_Error
0       0       1.122942      1.122811   0.000131
1       1       1.111838      1.111772   0.000066
2       2       1.044789      1.044627   0.000162
3       3       1.369529      1.369233   0.000296
4       4       1.459340      1.459033   0.000307
5       5       1.061411      1.061237   0.000175
6       6       1.176867      1.176614   0.000253
7       7       1.353109      1.353034   0.000075
8       8       1.329672      1.329583   0.000089
9       9       1.681226      1.680742   0.000484
10     10       1.391436      1.391246   0.000190
11     11       1.615603      1.615281   0.000321
12     12       1.443142      1.442792   0.000350
13     13       1.350449      1.350222   0.000227
14     14       1.523925      1.523470   0.000455
15     15       1.200289      1.199894   0.000394
MLLITE_REG_SQL_EXECUTION_STATUS ('freidman3_tiny', 'RidgeRegressor', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_freidman3_tiny_option_1_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('freidman3_tiny', 'RidgeRegressor', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "freidman3_tiny" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   1.017554 + -0.002769 * t."X_0" + 0.000199 * t."X_1" + 0.545764 * t."X_2" + -0.000348 * t."X_3" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_FIRST_LINES_END ('freidman3_tiny', 'RidgeRegressor', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('freidman3_tiny', 'RidgeRegressor', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "freidman3_tiny" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   1.017554 + -0.002769 * t."X_0" + 0.000199 * t."X_1" + 0.545764 * t."X_2" + -0.000348 * t."X_3" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_LAST_LINES_END ('freidman3_tiny', 'RidgeRegressor', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 16 entries, 0 to 15
Data columns (total 4 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     16 non-null     float32
 1   X_1     16 non-null     float32
 2   X_2     16 non-null     float32
 3   X_3     16 non-null     float32
dtypes: float32(4)
memory usage: 384.0 bytes
             X_0          X_1       X_2        X_3
index                                             
0      17.761709   423.498322  0.135270  10.148129
1      45.437614   168.841202  0.343817   3.279963
2      69.792320   473.447937  0.233546   3.411072
3      67.667091   938.672607  0.652046   9.523154
4      55.118420  1002.086060  0.726658   4.570618
5      52.067585   534.256165  0.155164   8.526538
6      50.992905   814.561340  0.257439   5.994627
7      34.347893   205.928116  0.720020   9.414678
8      63.010204   221.354385  0.814630   5.897069
9      22.605108  1660.837036  0.731124   9.374556
10     13.280704   643.716797  0.520814   4.842079
11      7.606344  1112.226562  0.732761   6.140375
12     51.401745  1161.331543  0.618557   2.218271
13     94.566437   663.266418  0.852323   6.919084
14     14.282172  1575.160400  0.428596   4.169882
15     38.088467  1321.297485  0.052941  10.429984
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 16 entries, 0 to 15
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      16 non-null     int64  
 1   Estimator  16 non-null     float64
dtypes: float64(1), int64(1)
memory usage: 388.0 bytes
    index  Estimator
0       0   1.122942
1       1   1.111838
2       2   1.044789
3       3   1.369529
4       4   1.459340
5       5   1.061411
6       6   1.176867
7       7   1.353109
8       8   1.329672
9       9   1.681226
10     10   1.391436
11     11   1.615603
12     12   1.443142
13     13   1.350449
14     14   1.523925
15     15   1.200289
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('freidman3_tiny', 'RidgeRegressor') Estimator 0.00024846860934060744
    index  SQL_Estimator  Py_Estimator  SQL_Error
0       0       1.122942      1.122811   0.000131
1       1       1.111838      1.111772   0.000066
2       2       1.044789      1.044627   0.000162
3       3       1.369529      1.369233   0.000296
4       4       1.459340      1.459033   0.000307
5       5       1.061411      1.061237   0.000175
6       6       1.176867      1.176614   0.000253
7       7       1.353109      1.353034   0.000075
8       8       1.329672      1.329583   0.000089
9       9       1.681226      1.680742   0.000484
10     10       1.391436      1.391246   0.000190
11     11       1.615603      1.615281   0.000321
12     12       1.443142      1.442792   0.000350
13     13       1.350449      1.350222   0.000227
14     14       1.523925      1.523470   0.000455
15     15       1.200289      1.199894   0.000394
MLLITE_REG_SQL_EXECUTION_STATUS ('freidman3_tiny', 'RidgeRegressor', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
