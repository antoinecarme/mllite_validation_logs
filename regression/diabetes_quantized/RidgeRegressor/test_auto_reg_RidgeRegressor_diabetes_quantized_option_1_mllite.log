     age  sex  bmi  bp  s1  s2  s3  s4  s5  s6  target
0      7   10    8   6   1   2   1   5   6   3   151.0
1      4    0    1   3   4   3   9   2   0   0    75.0
2      9   10    8   5   1   2   2   5   5   2   141.0
3      0    0    4   2   6   7   2   7   6   4   206.0
4      5    0    2   6   5   6   6   5   2   1   135.0
..   ...  ...  ...  ..  ..  ..  ..  ..  ..  ..     ...
437    7   10    6   8   4   5   3   5   7   5   178.0
438    4   10    4   0   8   9   3   7   3   8   104.0
439    7   10    4   6   2   4   3   4   1   6   132.0
440    2    0    7   5   6   6   3   7   8   2   220.0
441    2    0    0   0   9   7   9   2   4   5    57.0

[442 rows x 11 columns]
MLLITE_MODEL_SET_OPTIONS RidgeRegressor {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeRegressor { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeRegressor { "alpha" : 0.0000001,   , }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeRegressor None
('OPERATION_START', 'TRAINING')
[[ 7. 10.  8.  6.  1.  2.  1.  5.  6.  3.]
 [ 4.  0.  1.  3.  4.  3.  9.  2.  0.  0.]
 [ 9. 10.  8.  5.  1.  2.  2.  5.  5.  2.]
 [ 0.  0.  4.  2.  6.  7.  2.  7.  6.  4.]
 [ 5.  0.  2.  6.  5.  6.  6.  5.  2.  1.]] [151.  75. 141. 206. 135.]
MLLITE_FIT_USING_MODEL mllite_ridge_reg.RidgeRegressor_ff4_ff4
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_REGRESSOR_FIT' 1 2
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_REGRESSOR_FIT' 2 2
('OPERATION_END_ELAPSED', 0.007, 'TRAINING')
{ "alpha" : 0.0000001,   , }
{ "alpha" : 0.0000001,   , }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_ff4"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 442, "dataset_features" : 10 },
	"equations" : {
			"intercept" : 78.556236,
			"coeffs" : [ 0.227095, -2.471044, 8.243037, 5.186954, -3.528026, -0.079232, -3.110271, 1.129951, 9.796718, 1.023484 ]
		}
}
WRITING_JSON_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_diabetes_quantized_option_1.json'

MLLITE_MODEL_SET_OPTIONS RidgeRegressor {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeRegressor { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeRegressor { "alpha" : 0.0000001,   , }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeRegressor None
MLLITE_RELOADING_MODEL mllite_ridge_reg.RidgeRegressor_ff4_ff4
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_ff4"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 442, "dataset_features" : 10 },
	"equations" : {
			"intercept" : 78.556236,
			"coeffs" : [ 0.227095, -2.471044, 8.243037, 5.186954, -3.528026, -0.079232, -3.110271, 1.129951, 9.796718, 1.023484 ]
		}
}
BEAUTIFIED_JSON_START
{
	"dataset" : 	{
		"dataset_features" : 10,
		"dataset_rows" : 442
	},
	"equations" : 	{
		"coeffs" : [ 0.227095, -2.471044, 8.243037, 5.186954, -3.528026, -0.079232, -3.110271, 1.129951, 9.796718, 1.023484 ],
		"intercept" : 78.556236
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_ff4", "version" : "2024-W14" },
	"options" :  { "alpha" : 0.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
[213.20523   63.186172 194.54199  164.74286  116.78903  105.31444
  74.54933  115.62673  158.89212  210.12395  103.8936   110.357635
 100.49122  169.44807   98.14651  166.5688   213.5332   196.89702
 143.84227  116.85475  120.64239   83.96389  115.83813  247.27147
 165.26373  152.06537   86.235855 182.9215   134.60321  196.75188
 159.83156   67.83698  228.40405  117.31082   74.6664    85.644
 218.4707   166.80872  238.20242  143.2825   156.70837   76.045166
 148.93042   74.178474 217.24847  126.91388  144.41756  106.06243
  67.46302  195.87181  161.7694   186.11595  125.17065  152.24525
 142.8644    62.662457 216.13474   69.11192  114.11155  141.25111
 117.106834 180.77318   62.64172   91.683556 113.15305  192.8532
 142.96182  132.16013  112.51467  119.62595   77.6177   228.57123
 157.24797  115.95423  148.0932   124.75977  181.30789   76.543495
 184.40883   81.52274  187.41945  116.4316    60.38035  160.07751
  63.854004 169.17854   61.85094  178.69849   72.63726   97.76606
  85.807915 192.83267  191.55638   56.561028 103.04727  138.7298
 222.5249   206.8407   128.60132  140.6079   173.42503   87.29119
 153.43652  158.47119  151.37593  113.31106   73.45169  152.59605
 251.85338  140.6785    70.50407  119.31465  150.06578  216.9032
 268.18887  192.93906  211.16943  227.3405   161.57326  159.43564
 159.69904  205.91971  214.80779  185.36394  178.7107   199.32213
  66.65115  115.47795   79.996605 209.8084   215.0758    61.05023
 111.57783   61.672455 141.10149  246.6468    58.403446 233.44597
 243.19821  259.01007  162.02396  222.56631  185.93385  122.53655
 180.35591  211.28752  193.1534   222.15251  105.46093  179.11359
 202.52515  151.89981  201.29767  109.52965  153.7593   198.39781
 145.96533  113.08763   70.70736  245.18004   75.88908  235.7924
 140.39284  189.01935  147.32893   67.30699   62.50866  260.35968
 222.2163   227.18564   56.330547  88.04034  223.23639  100.24012
 169.56352  123.53836  161.8193   232.83801   92.72877  178.8291
 186.0127    79.23642  183.37242  159.31285  217.38193  183.04176
 188.84012   77.705055 163.78232  105.78834  205.74515  117.30106
  77.54479  141.26813  165.69458  176.53842   82.21586  199.71692
 147.4443   172.19228   86.79478   66.31093  180.41364  203.6535
 197.505    235.93222  160.63231  226.48575  219.58078  168.06146
 129.40823  177.77043  161.84732   91.98477  101.2893   249.19165
 221.97206  219.95813  131.65027  136.98895   77.54101  150.5369
 160.0112   113.69      85.799095 238.89787   67.93286   92.63273
 116.3079    97.705505 178.7543   150.95807  156.84998  141.56061
 228.92491  180.8254   197.18634   55.758526 193.42064  185.1472
 236.35455  106.25911   83.95459   91.00192  126.34946   97.73483
 128.4677    87.61693  241.38539  246.65506  273.7997   249.50237
 172.65611  208.63501  239.7221   122.52833  230.38118   96.903046
 109.53961  130.262     72.056404 127.70008  226.02675   45.125267
 135.07234  134.56699   48.04903  147.42587  238.52742   96.43892
 190.9526   171.37341  157.78607  182.7745   184.3511   172.25766
 208.63506  120.3091   118.7356   120.18892  167.9435   102.28634
 150.884     79.81322  172.05084  195.13884   85.689064 171.78967
  69.830734 187.65599  224.42038  209.08125   95.11795  167.0758
  88.04593  155.21503   71.460434 102.67177   95.58465  129.57793
 229.5942   116.160515 215.4206   231.40309  116.23152  134.84659
 129.39688  139.63022   82.9961   151.1843   193.36526  179.15378
 123.5578   216.89064  174.51057  106.11823  210.5439   165.78516
 169.6134   200.922    200.70119  270.976    255.14175  205.15468
 219.83447  216.44044  161.93088  205.91092  191.18109  102.66668
 175.36711  114.03003  276.92432  202.29282   75.32631   78.92343
 237.86133  176.14497  114.181145 154.08432  154.80962  183.78497
 168.01266  152.74417  139.54337  128.19028  192.50629   98.621475
 135.11096   85.81131  234.02472   78.234535  60.08489  147.78778
 207.84444  129.58893   76.92609  213.00227   63.725174 188.63387
 202.9092   128.10168  222.3542   173.88115  166.70274  163.70227
 222.744    217.37573  201.33957  186.58023   59.45592  188.37791
 104.268555 139.00659  127.624176 176.98454  223.20827  173.03299
 173.1704   122.26162  178.07379   89.71965  249.1684   103.1065
 110.09613  140.60226  104.89149  121.02188  174.4012    78.59074
 243.19655   60.25202   90.790985  90.954636 252.17986  177.79822
  71.45875  195.04501  179.21715  201.14249  182.18697   75.97856
 149.58398  247.89037  201.73227  252.80621   61.853542 152.08678
 192.15724  175.09341  154.61531  144.00504  219.8226   117.107155
 186.2575   178.60681  201.7313   144.74307  102.79152   80.28049
 136.7256   197.60133  193.69151  152.3401   179.53711  103.68405
 159.97961  133.36264  237.52484   92.144104 111.92876  121.15447
 222.65613   62.27285  126.17526  118.20937   56.13474  201.89442
  94.94591  123.28298  220.00247   65.27532 ]
('OPERATION_END_ELAPSED', 0.005, 'PREDICT')
('OPERATION_START', 'PREDICT')
[213.20522   63.186172 194.54199  164.74286  116.78905  105.314445
  74.549324 115.62671  158.89212  210.12395  103.8936   110.35762
 100.491234 169.44807   98.14651  166.56879  213.53322  196.89702
 143.84229  116.85475  120.64239   83.96388  115.83813  247.27145
 165.26373  152.06538   86.23585  182.92148  134.60321  196.75186
 159.83156   67.83698  228.40407  117.31082   74.6664    85.64398
 218.4707   166.80872  238.20241  143.2825   156.70833   76.045166
 148.93042   74.178474 217.24847  126.91388  144.41756  106.06243
  67.46303  195.8718   161.7694   186.11592  125.17064  152.24525
 142.8644    62.662457 216.13474   69.11193  114.11155  141.2511
 117.106834 180.77318   62.64172   91.683556 113.153046 192.85318
 142.96182  132.16013  112.51466  119.62595   77.61771  228.57121
 157.24796  115.95422  148.09319  124.75977  181.30789   76.54349
 184.40884   81.52274  187.41946  116.431595  60.38034  160.07751
  63.854008 169.17854   61.850925 178.69846   72.63725   97.76606
  85.807915 192.83267  191.55638   56.561028 103.04728  138.7298
 222.52489  206.84068  128.60133  140.6079   173.42503   87.29119
 153.43652  158.47119  151.37593  113.31106   73.4517   152.59605
 251.85336  140.67847   70.50406  119.31465  150.06578  216.90315
 268.18887  192.93904  211.16942  227.34048  161.57324  159.43562
 159.69904  205.91971  214.80777  185.3639   178.7107   199.32213
  66.65115  115.47794   79.996605 209.80838  215.07579   61.050232
 111.57783   61.672447 141.10149  246.64679   58.40345  233.44597
 243.1982   259.01007  162.02396  222.5663   185.93385  122.53655
 180.35591  211.28752  193.1534   222.1525   105.46092  179.11359
 202.52515  151.89983  201.29762  109.52965  153.75926  198.39778
 145.96533  113.08762   70.70737  245.18004   75.889084 235.79239
 140.39284  189.01933  147.32893   67.307     62.50865  260.35968
 222.21626  227.18564   56.330544  88.04034  223.23637  100.24011
 169.56352  123.53836  161.81929  232.838     92.72877  178.8291
 186.01271   79.236404 183.3724   159.31284  217.38193  183.04176
 188.84012   77.70506  163.78232  105.78835  205.74515  117.30105
  77.54477  141.26813  165.69458  176.53839   82.21585  199.71692
 147.4443   172.19226   86.79477   66.31092  180.41364  203.65347
 197.50499  235.93222  160.6323   226.48576  219.58076  168.06146
 129.40823  177.77043  161.84735   91.98477  101.2893   249.19162
 221.97202  219.95811  131.65027  136.98895   77.541    150.5369
 160.0112   113.69      85.799095 238.89787   67.93285   92.63272
 116.307915  97.70551  178.75426  150.9581   156.84996  141.56061
 228.9249   180.8254   197.18634   55.75853  193.42062  185.14719
 236.35455  106.259094  83.95458   91.00192  126.349434  97.73483
 128.4677    87.61693  241.38538  246.65506  273.7997   249.50235
 172.65611  208.635    239.72209  122.528336 230.38118   96.90304
 109.5396   130.262     72.056404 127.70008  226.02675   45.125263
 135.07234  134.56699   48.049023 147.42586  238.5274    96.4389
 190.9526   171.37341  157.78607  182.77448  184.3511   172.25764
 208.63507  120.309105 118.73559  120.18892  167.9435   102.28633
 150.884     79.81322  172.05086  195.13884   85.68906  171.78967
  69.83072  187.65598  224.42035  209.08125   95.11795  167.0758
  88.04592  155.21503   71.460434 102.67177   95.58464  129.57793
 229.59418  116.16051  215.42061  231.40309  116.23152  134.84657
 129.39687  139.63019   82.9961   151.18428  193.36526  179.15376
 123.55781  216.89064  174.51057  106.118225 210.54388  165.78514
 169.61339  200.92198  200.70119  270.976    255.14174  205.15468
 219.83444  216.44043  161.93088  205.91095  191.18109  102.66667
 175.36711  114.03002  276.92432  202.2928    75.32631   78.92344
 237.8613   176.14496  114.181145 154.08432  154.80962  183.78497
 168.01266  152.74417  139.54337  128.19026  192.50629   98.62146
 135.11096   85.81131  234.02472   78.23453   60.084877 147.7878
 207.84439  129.58893   76.92609  213.00227   63.725178 188.63385
 202.90918  128.10167  222.35416  173.88115  166.70273  163.70226
 222.74396  217.3757   201.33955  186.58023   59.45592  188.37791
 104.26855  139.00659  127.62418  176.98454  223.20824  173.03297
 173.17038  122.26163  178.07379   89.719635 249.1684   103.10649
 110.096115 140.60225  104.891495 121.02189  174.40121   78.59073
 243.19653   60.252026  90.79097   90.95464  252.17986  177.79823
  71.45874  195.045    179.21713  201.14252  182.18697   75.97856
 149.58395  247.89035  201.73227  252.80621   61.853542 152.08678
 192.15723  175.0934   154.6153   144.00504  219.82259  117.10716
 186.25749  178.60681  201.7313   144.74307  102.79152   80.28049
 136.72559  197.60132  193.6915   152.3401   179.5371   103.68405
 159.9796   133.36263  237.52483   92.144104 111.92876  121.154465
 222.65611   62.272842 126.17526  118.20938   56.13474  201.89442
  94.945885 123.28297  220.00247   65.27533 ]
('OPERATION_END_ELAPSED', 0.005, 'PREDICT')
MODEL_PERFS {'class_name': 'mllite.RidgeRegressor', 'model_name': 'RidgeRegressor', 'options': '{"alpha" : 0.0000001}', 'dataset': 'diabetes_quantized', 'size': 442, 'mse': 2929.96, 'mae': 44.05441, 'mape': 0.39116907, 'r2': 0.5058993639959389}
WRITING_PERF_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_diabetes_quantized_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeRegressor', 'model_name': 'RidgeRegressor', 'options': '{"alpha" : 0.0000001}', 'dataset': 'diabetes_quantized', 'training_time_in_sec': 0.007, 'prediction_time_in_sec': 0.005}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 0 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 1 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 2 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 3 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 4 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 5 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 6 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 7 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 8 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 9 10
{
   "Contributions" : {
      "X_0" : [ -0.083619 ],
      "X_1" : [ 1.554889 ],
      "X_2" : [ -1.052524 ],
      "X_3" : [ -1.212393 ],
      "X_4" : [ 0.920419 ],
      "X_5" : [ 0.029353 ],
      "X_6" : [ -1.556457 ],
      "X_7" : [ -0.559381 ],
      "X_8" : [ -5.244674 ],
      "X_9" : [ -0.406093 ]   
   },
   "Most_Contributive_Features" : {
      "y" : [ 8, 6, 1, 3, 2, 4, 7, 9, 0, 5 ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_diabetes_quantized_option_1_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_diabetes_quantized_option_1_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('diabetes_quantized', 'RidgeRegressor', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "diabetes_quantized" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   78.556236 + 0.227095 * t."X_0" + -2.471044 * t."X_1" + 8.243037 * t."X_2" + 5.186954 * t."X_3" + -3.528026 * t."X_4" + -0.079232 * t."X_5" + -3.110271 * t."X_6" + 1.129951 * t."X_7" + 9.796718 * t."X_8" + 1.023484 * t."X_9" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_FIRST_LINES_END ('diabetes_quantized', 'RidgeRegressor', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('diabetes_quantized', 'RidgeRegressor', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "diabetes_quantized" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   78.556236 + 0.227095 * t."X_0" + -2.471044 * t."X_1" + 8.243037 * t."X_2" + 5.186954 * t."X_3" + -3.528026 * t."X_4" + -0.079232 * t."X_5" + -3.110271 * t."X_6" + 1.129951 * t."X_7" + 9.796718 * t."X_8" + 1.023484 * t."X_9" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_LAST_LINES_END ('diabetes_quantized', 'RidgeRegressor', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 442 entries, 0 to 441
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     442 non-null    float32
 1   X_1     442 non-null    float32
 2   X_2     442 non-null    float32
 3   X_3     442 non-null    float32
 4   X_4     442 non-null    float32
 5   X_5     442 non-null    float32
 6   X_6     442 non-null    float32
 7   X_7     442 non-null    float32
 8   X_8     442 non-null    float32
 9   X_9     442 non-null    float32
dtypes: float32(10)
memory usage: 20.7 KB
       X_0   X_1  X_2  X_3  X_4  X_5  X_6  X_7  X_8  X_9
index                                                   
0      7.0  10.0  8.0  6.0  1.0  2.0  1.0  5.0  6.0  3.0
1      4.0   0.0  1.0  3.0  4.0  3.0  9.0  2.0  0.0  0.0
2      9.0  10.0  8.0  5.0  1.0  2.0  2.0  5.0  5.0  2.0
3      0.0   0.0  4.0  2.0  6.0  7.0  2.0  7.0  6.0  4.0
4      5.0   0.0  2.0  6.0  5.0  6.0  6.0  5.0  2.0  1.0
...    ...   ...  ...  ...  ...  ...  ...  ...  ...  ...
437    7.0  10.0  6.0  8.0  4.0  5.0  3.0  5.0  7.0  5.0
438    4.0  10.0  4.0  0.0  8.0  9.0  3.0  7.0  3.0  8.0
439    7.0  10.0  4.0  6.0  2.0  4.0  3.0  4.0  1.0  6.0
440    2.0   0.0  7.0  5.0  6.0  6.0  3.0  7.0  8.0  2.0
441    2.0   0.0  0.0  0.0  9.0  7.0  9.0  2.0  4.0  5.0

[442 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 442 entries, 0 to 441
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      442 non-null    int64  
 1   Estimator  442 non-null    float64
dtypes: float64(1), int64(1)
memory usage: 7.0 KB
     index   Estimator
0        0  213.205215
1        1   63.186172
2        2  194.541992
3        3  164.742859
4        4  116.789047
..     ...         ...
437    437  201.894424
438    438   94.945885
439    439  123.282967
440    440  220.002472
441    441   65.275330

[442 rows x 2 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('diabetes_quantized', 'RidgeRegressor') Estimator 8.121335128853224e-06
     index  SQL_Estimator  Py_Estimator  SQL_Error
426    426     159.979599    159.979614  -0.000015
427    427     133.362625    133.362640  -0.000015
428    428     237.524826    237.524841  -0.000015
429    429      92.144104     92.144104   0.000000
430    430     111.928757    111.928757   0.000000
431    431     121.154465    121.154472  -0.000008
432    432     222.656113    222.656128  -0.000015
433    433      62.272842     62.272850  -0.000008
434    434     126.175262    126.175262   0.000000
435    435     118.209381    118.209373   0.000008
436    436      56.134739     56.134739   0.000000
437    437     201.894424    201.894424   0.000000
438    438      94.945885     94.945908  -0.000023
439    439     123.282967    123.282982  -0.000015
440    440     220.002472    220.002472   0.000000
441    441      65.275330     65.275322   0.000008
MLLITE_REG_SQL_EXECUTION_STATUS ('diabetes_quantized', 'RidgeRegressor', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_diabetes_quantized_option_1_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('diabetes_quantized', 'RidgeRegressor', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "diabetes_quantized" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   78.556236 + 0.227095 * t."X_0" + -2.471044 * t."X_1" + 8.243037 * t."X_2" + 5.186954 * t."X_3" + -3.528026 * t."X_4" + -0.079232 * t."X_5" + -3.110271 * t."X_6" + 1.129951 * t."X_7" + 9.796718 * t."X_8" + 1.023484 * t."X_9" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_FIRST_LINES_END ('diabetes_quantized', 'RidgeRegressor', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('diabetes_quantized', 'RidgeRegressor', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "diabetes_quantized" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   78.556236 + 0.227095 * t."X_0" + -2.471044 * t."X_1" + 8.243037 * t."X_2" + 5.186954 * t."X_3" + -3.528026 * t."X_4" + -0.079232 * t."X_5" + -3.110271 * t."X_6" + 1.129951 * t."X_7" + 9.796718 * t."X_8" + 1.023484 * t."X_9" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_LAST_LINES_END ('diabetes_quantized', 'RidgeRegressor', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 442 entries, 0 to 441
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     442 non-null    float32
 1   X_1     442 non-null    float32
 2   X_2     442 non-null    float32
 3   X_3     442 non-null    float32
 4   X_4     442 non-null    float32
 5   X_5     442 non-null    float32
 6   X_6     442 non-null    float32
 7   X_7     442 non-null    float32
 8   X_8     442 non-null    float32
 9   X_9     442 non-null    float32
dtypes: float32(10)
memory usage: 20.7 KB
       X_0   X_1  X_2  X_3  X_4  X_5  X_6  X_7  X_8  X_9
index                                                   
0      7.0  10.0  8.0  6.0  1.0  2.0  1.0  5.0  6.0  3.0
1      4.0   0.0  1.0  3.0  4.0  3.0  9.0  2.0  0.0  0.0
2      9.0  10.0  8.0  5.0  1.0  2.0  2.0  5.0  5.0  2.0
3      0.0   0.0  4.0  2.0  6.0  7.0  2.0  7.0  6.0  4.0
4      5.0   0.0  2.0  6.0  5.0  6.0  6.0  5.0  2.0  1.0
...    ...   ...  ...  ...  ...  ...  ...  ...  ...  ...
437    7.0  10.0  6.0  8.0  4.0  5.0  3.0  5.0  7.0  5.0
438    4.0  10.0  4.0  0.0  8.0  9.0  3.0  7.0  3.0  8.0
439    7.0  10.0  4.0  6.0  2.0  4.0  3.0  4.0  1.0  6.0
440    2.0   0.0  7.0  5.0  6.0  6.0  3.0  7.0  8.0  2.0
441    2.0   0.0  0.0  0.0  9.0  7.0  9.0  2.0  4.0  5.0

[442 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 442 entries, 0 to 441
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      442 non-null    int64  
 1   Estimator  442 non-null    float64
dtypes: float64(1), int64(1)
memory usage: 7.0 KB
     index   Estimator
0        0  213.205235
1        1   63.186178
2        2  194.541998
3        3  164.742871
4        4  116.789036
..     ...         ...
437    437  201.894439
438    438   94.945898
439    439  123.282966
440    440  220.002463
441    441   65.275323

[442 rows x 2 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('diabetes_quantized', 'RidgeRegressor') Estimator 8.379873975944444e-06
     index  SQL_Estimator  Py_Estimator     SQL_Error
426    426     159.979597    159.979614 -1.725781e-05
427    427     133.362631    133.362640 -9.380859e-06
428    428     237.524845    237.524841  3.691406e-06
429    429      92.144105     92.144104  9.960938e-07
430    430     111.928763    111.928757  6.286133e-06
431    431     121.154462    121.154472 -1.035107e-05
432    432     222.656115    222.656128 -1.292969e-05
433    433      62.272842     62.272850 -8.036621e-06
434    434     126.175255    126.175262 -7.451172e-06
435    435     118.209377    118.209373  3.525879e-06
436    436      56.134738     56.134739 -9.221191e-07
437    437     201.894439    201.894424  1.456152e-05
438    438      94.945898     94.945908 -9.592773e-06
439    439     123.282966    123.282982 -1.587256e-05
440    440     220.002463    220.002472 -8.923828e-06
441    441      65.275323     65.275322  1.039551e-06
MLLITE_REG_SQL_EXECUTION_STATUS ('diabetes_quantized', 'RidgeRegressor', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
