     age  sex  bmi  bp  s1  s2  s3  s4  s5  s6  target
0      7   10    8   6   1   2   1   5   6   3   151.0
1      4    0    1   3   4   3   9   2   0   0    75.0
2      9   10    8   5   1   2   2   5   5   2   141.0
3      0    0    4   2   6   7   2   7   6   4   206.0
4      5    0    2   6   5   6   6   5   2   1   135.0
..   ...  ...  ...  ..  ..  ..  ..  ..  ..  ..     ...
437    7   10    6   8   4   5   3   5   7   5   178.0
438    4   10    4   0   8   9   3   7   3   8   104.0
439    7   10    4   6   2   4   3   4   1   6   132.0
440    2    0    7   5   6   6   3   7   8   2   220.0
441    2    0    0   0   9   7   9   2   4   5    57.0

[442 rows x 11 columns]
MLLITE_MODEL_SET_OPTIONS RidgeRegressor None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeRegressor { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeRegressor { ,   , }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeRegressor None
('OPERATION_START', 'TRAINING')
[[ 7. 10.  8.  6.  1.  2.  1.  5.  6.  3.]
 [ 4.  0.  1.  3.  4.  3.  9.  2.  0.  0.]
 [ 9. 10.  8.  5.  1.  2.  2.  5.  5.  2.]
 [ 0.  0.  4.  2.  6.  7.  2.  7.  6.  4.]
 [ 5.  0.  2.  6.  5.  6.  6.  5.  2.  1.]] [151.  75. 141. 206. 135.]
MLLITE_FIT_USING_MODEL mllite_ridge_reg.RidgeRegressor_ff4_ff4
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_REGRESSOR_FIT' 1 2
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_REGRESSOR_FIT' 2 2
('OPERATION_END_ELAPSED', 0.007, 'TRAINING')
{ ,   , }
{ ,   , }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W13", "signature" : "ff4_ff4"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 442, "dataset_features" : 10 },
	"equations" : {
			"intercept" : 78.743919,
			"coeffs" : [ 0.229747, -2.460788, 8.235709, 5.175613, -3.398354, -0.196118, -3.128202, 1.173501, 9.717807, 1.027436 ]
		}
}
WRITING_JSON_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_diabetes_quantized.json'

MLLITE_MODEL_SET_OPTIONS RidgeRegressor None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeRegressor { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeRegressor { ,   , }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeRegressor None
MLLITE_RELOADING_MODEL mllite_ridge_reg.RidgeRegressor_ff4_ff4
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W13", "signature" : "ff4_ff4"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 442, "dataset_features" : 10 },
	"equations" : {
			"intercept" : 78.743919,
			"coeffs" : [ 0.229747, -2.460788, 8.235709, 5.175613, -3.398354, -0.196118, -3.128202, 1.173501, 9.717807, 1.027436 ]
		}
}
BEAUTIFIED_JSON_START
{
	"dataset" : 	{
		"dataset_features" : 10,
		"dataset_rows" : 442
	},
	"equations" : 	{
		"coeffs" : [ 0.229747, -2.460788, 8.235709, 5.175613, -3.398354, -0.196118, -3.128202, 1.173501, 9.717807, 1.027436 ],
		"intercept" : 78.743919
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_ff4", "version" : "2024-W13" },
	"options" :  { "alpha" : 1.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
[213.02145   63.436867 194.4319   164.64972  116.81062  105.15218
  74.627304 115.9236   158.92589  210.06711  103.88185  110.53308
 100.473076 169.29694   98.24956  166.66037  213.46863  196.78543
 143.83105  116.83377  120.53236   84.19239  115.90226  247.8166
 165.17276  151.93222   86.2009   182.74408  134.42253  196.32516
 159.72104   67.87776  228.2547   117.20435   74.76939   85.77126
 218.41208  166.72775  238.06238  143.29562  156.71307   76.14926
 148.86327   74.46584  217.05707  126.89458  144.25047  106.03535
  67.64229  195.8088   161.55466  185.9812   125.24461  152.37283
 142.82903   62.938946 215.90933   69.07122  114.32964  141.1384
 117.02075  180.73637   62.88797   91.681694 113.09003  192.70596
 142.88326  132.17865  112.54496  119.723045  77.84779  228.3309
 157.08533  116.067    148.06038  124.74327  181.29803   76.74137
 184.13696   81.72687  187.27731  116.59411   60.659416 159.93166
  63.919765 169.02074   61.970413 178.44109   72.78039   97.82915
  85.96898  192.77835  191.40494   56.634857 103.134254 138.62712
 222.4361   206.68663  128.4055   140.59125  173.2099    87.50373
 153.26482  158.60997  151.37856  113.34264   73.42454  152.7103
 251.6098   140.86073   70.76225  119.36483  150.03363  216.84254
 268.34854  192.92711  211.20216  227.3043   161.68542  159.28152
 159.69345  205.91255  214.89725  185.55522  178.60123  199.28777
  66.6781   115.44228   80.00781  209.71962  215.07172   61.05998
 111.6267    61.943336 141.11234  246.48178   58.577873 233.19107
 243.0117   258.75525  161.95003  222.45818  185.73816  122.60565
 180.35933  211.01721  193.12663  221.93298  105.62055  179.12186
 202.35483  151.81267  201.43192  109.56968  153.68584  198.35349
 145.8512   113.17865   70.78072  244.93787   75.85241  235.72377
 140.44337  189.01208  147.35207   67.5077    62.78691  260.22116
 222.20348  227.40611   56.598682  88.05218  223.18741  100.258896
 169.40926  123.48935  161.70654  232.83383   92.95068  178.62225
 185.95969   79.38838  183.38947  159.15735  217.30994  182.97708
 188.9159    77.7106   163.66652  105.8752   205.58813  117.25572
  77.669304 141.43393  165.45946  176.59991   82.42911  199.54814
 147.45721  172.23987   86.91427   66.51525  180.22177  203.70242
 197.41814  235.77539  160.80225  226.2171   219.48553  168.03763
 129.38924  177.67358  161.73485   91.95757  101.261284 249.03835
 221.9112   219.82489  131.54216  136.72816   77.65121  150.28104
 159.88327  113.61522   85.86029  238.90045   68.02781   92.72282
 116.39891   97.732285 178.88031  151.02719  157.0405   141.57959
 228.76776  180.89264  197.05026   55.95941  193.28798  185.08493
 236.20187  106.382126  84.2042    91.09291  126.46094   97.77459
 128.28333   87.70764  241.28256  246.46323  273.7517   249.42496
 172.78241  208.55717  240.07796  122.40681  230.16116   96.9232
 109.744514 130.33463   72.61673  127.90331  225.95209   45.30936
 135.10204  134.48389   48.41718  147.48256  238.44435   96.691895
 190.85387  171.3028   157.77185  182.96608  184.0812   172.10869
 208.26392  120.21126  118.77245  120.24605  167.84892  102.394875
 151.02657   79.86217  171.96854  195.12167   85.75177  171.69232
  70.26119  187.67429  224.31104  208.7432    95.17151  167.04138
  88.15821  155.0109    71.57427  102.671906  95.77007  129.6498
 229.30402  116.32131  215.2273   231.19125  116.637665 134.8024
 129.35585  139.77562   82.94203  151.19917  193.30957  179.21024
 123.417854 216.8807   174.36418  106.13999  210.63483  165.77573
 169.61296  200.70456  200.64798  270.9594   255.61089  205.49713
 219.81018  216.5075   161.86888  205.79807  190.98799  102.70081
 175.50546  114.22246  276.69696  202.04971   75.383446  79.1212
 237.79675  176.1482   114.095474 153.96387  154.62639  183.706
 167.97961  152.76013  139.6278   128.40567  192.48853   98.70819
 135.15327   86.20254  234.04439   78.40991   60.11651  148.03757
 207.6676   129.70242   77.19597  212.8424    63.772877 188.57556
 202.73553  128.09622  222.31888  173.84634  166.69829  163.6534
 222.79926  217.35107  201.42     186.46451   59.66847  188.79083
 104.3619   138.92967  127.382164 176.92725  223.13293  173.02786
 173.01927  122.20045  178.13342   89.65909  249.19095  103.1381
 110.07529  140.56827  105.00868  121.11387  174.27057   78.8088
 243.39037   60.44391   90.962906  90.86589  252.5705   177.64766
  71.57084  194.74158  179.06744  201.00601  182.17877   76.09463
 149.57596  247.69568  201.55136  252.62296   61.952114 152.36874
 192.09656  175.02763  154.68036  143.9574   219.70535  117.22995
 186.33057  178.59915  201.7192   144.65387  102.90885   80.33589
 136.8487   197.62329  193.61267  152.32773  179.40565  103.49878
 160.09239  133.5037   237.53001   92.14908  111.89859  121.19402
 222.46349   62.623154 126.14022  118.16105   56.34952  201.63412
  95.24878  123.35142  219.79184   65.44699 ]
('OPERATION_END_ELAPSED', 0.005, 'PREDICT')
('OPERATION_START', 'PREDICT')
[213.02147   63.436874 194.4319   164.64972  116.81063  105.15218
  74.627304 115.9236   158.9259   210.06711  103.88185  110.53308
 100.473076 169.29697   98.24956  166.66037  213.46863  196.78543
 143.83105  116.83377  120.53236   84.19239  115.90226  247.81659
 165.17276  151.93222   86.20089  182.74408  134.42253  196.32516
 159.72104   67.87776  228.25471  117.20436   74.76939   85.77126
 218.41208  166.72775  238.06241  143.29564  156.71307   76.149254
 148.86327   74.46585  217.05707  126.89458  144.25047  106.03535
  67.64229  195.8088   161.55466  185.9812   125.24461  152.37282
 142.82903   62.938946 215.90933   69.07122  114.32964  141.1384
 117.02075  180.73637   62.887978  91.681694 113.09003  192.70596
 142.88327  132.17865  112.54495  119.723045  77.84781  228.3309
 157.08533  116.067    148.06038  124.74328  181.29803   76.74136
 184.13696   81.726875 187.27734  116.5941    60.659424 159.93166
  63.919773 169.02074   61.97041  178.4411    72.78039   97.829155
  85.96898  192.77835  191.40494   56.634857 103.13427  138.62712
 222.4361   206.68663  128.40552  140.59125  173.2099    87.50373
 153.26482  158.60997  151.37856  113.34264   73.42454  152.71033
 251.6098   140.86072   70.76226  119.364845 150.03363  216.84253
 268.34854  192.92711  211.20216  227.30429  161.68542  159.28152
 159.69345  205.91255  214.89725  185.5552   178.60123  199.28777
  66.6781   115.44231   80.00782  209.7196   215.0717    61.059986
 111.6267    61.943336 141.11234  246.48178   58.577873 233.19107
 243.01169  258.75525  161.95004  222.45816  185.73816  122.60565
 180.35934  211.01721  193.12663  221.93298  105.620544 179.12186
 202.35483  151.81268  201.4319   109.5697   153.68584  198.35349
 145.8512   113.17866   70.78072  244.93787   75.852425 235.72375
 140.44337  189.01208  147.35208   67.5077    62.78691  260.2212
 222.20348  227.40613   56.59869   88.05218  223.18741  100.258896
 169.40926  123.48935  161.70654  232.83383   92.9507   178.62225
 185.95969   79.38838  183.38947  159.15735  217.30994  182.97708
 188.9159    77.7106   163.66652  105.875206 205.58813  117.25573
  77.66931  141.43393  165.45946  176.59991   82.42911  199.54814
 147.45721  172.23987   86.91427   66.51526  180.22177  203.70242
 197.41814  235.77539  160.80225  226.2171   219.48552  168.03764
 129.38925  177.67358  161.73485   91.95758  101.26129  249.03833
 221.9112   219.82489  131.54218  136.72816   77.65121  150.28104
 159.88327  113.61522   85.86029  238.90045   68.02781   92.72284
 116.39891   97.732285 178.88031  151.02719  157.0405   141.57959
 228.76776  180.89264  197.05026   55.95941  193.28798  185.08493
 236.20187  106.382126  84.2042    91.09292  126.46094   97.77459
 128.28334   87.70764  241.28256  246.46323  273.7517   249.42496
 172.78241  208.55716  240.07794  122.4068   230.16116   96.9232
 109.744514 130.33464   72.61673  127.90331  225.95209   45.30937
 135.10205  134.48387   48.41718  147.48257  238.44434   96.691895
 190.85387  171.3028   157.77185  182.96608  184.0812   172.10867
 208.26392  120.21126  118.77246  120.24606  167.84894  102.39487
 151.02658   79.86217  171.96855  195.12167   85.75176  171.69232
  70.26119  187.67429  224.31104  208.74323   95.17151  167.0414
  88.15822  155.0109    71.57428  102.671906  95.77007  129.6498
 229.30402  116.32133  215.2273   231.19125  116.63767  134.8024
 129.35585  139.7756    82.94203  151.19917  193.30957  179.21024
 123.41786  216.8807   174.36418  106.14     210.63481  165.77573
 169.61296  200.70456  200.64798  270.95944  255.61087  205.49713
 219.81021  216.50749  161.86888  205.79808  190.98799  102.70081
 175.50546  114.22246  276.697    202.04971   75.383446  79.1212
 237.79675  176.1482   114.095474 153.96387  154.62639  183.70602
 167.97961  152.76013  139.6278   128.40567  192.48853   98.708206
 135.15329   86.202545 234.04437   78.40991   60.11651  148.03757
 207.66763  129.70242   77.19598  212.8424    63.772877 188.57556
 202.73553  128.09622  222.31888  173.84634  166.69827  163.65338
 222.79926  217.3511   201.42     186.46451   59.668476 188.79083
 104.36191  138.92967  127.382164 176.92725  223.13293  173.02786
 173.01929  122.20045  178.13342   89.659096 249.19095  103.13809
 110.07532  140.56827  105.00868  121.11387  174.27058   78.808815
 243.39035   60.44391   90.962906  90.86589  252.57053  177.64766
  71.57084  194.74158  179.06744  201.00601  182.17877   76.09463
 149.57599  247.69568  201.55136  252.62296   61.952114 152.36874
 192.09656  175.02765  154.68036  143.9574   219.70535  117.22995
 186.33057  178.59917  201.7192   144.65387  102.90886   80.33589
 136.8487   197.62329  193.61267  152.32773  179.40567  103.49878
 160.09238  133.5037   237.53      92.14908  111.898605 121.19403
 222.4635    62.62316  126.14022  118.16105   56.34952  201.63416
  95.24879  123.35143  219.79184   65.44699 ]
('OPERATION_END_ELAPSED', 0.005, 'PREDICT')
MODEL_PERFS {'class_name': 'mllite.RidgeRegressor', 'model_name': 'RidgeRegressor', 'options': None, 'dataset': 'diabetes_quantized', 'size': 442, 'mse': 2929.983, 'mae': 44.06002, 'mape': 0.39122912, 'r2': 0.5058954816509752}
WRITING_PERF_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_diabetes_quantized.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeRegressor', 'model_name': 'RidgeRegressor', 'options': None, 'dataset': 'diabetes_quantized', 'training_time_in_sec': 0.007, 'prediction_time_in_sec': 0.005}
WRITING_SQL_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_diabetes_quantized_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('diabetes_quantized', 'RidgeRegressor', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   78.743919 + 0.229747 * t."X_0" + -2.460788 * t."X_1" + 8.235709 * t."X_2" + 5.175613 * t."X_3" + -3.398354 * t."X_4" + -0.196118 * t."X_5" + -3.128202 * t."X_6" + 1.173501 * t."X_7" + 9.717807 * t."X_8" + 1.027436 * t."X_9" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_FIRST_LINES_END ('diabetes_quantized', 'RidgeRegressor', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('diabetes_quantized', 'RidgeRegressor', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   78.743919 + 0.229747 * t."X_0" + -2.460788 * t."X_1" + 8.235709 * t."X_2" + 5.175613 * t."X_3" + -3.398354 * t."X_4" + -0.196118 * t."X_5" + -3.128202 * t."X_6" + 1.173501 * t."X_7" + 9.717807 * t."X_8" + 1.027436 * t."X_9" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_LAST_LINES_END ('diabetes_quantized', 'RidgeRegressor', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 442 entries, 0 to 441
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     442 non-null    float32
 1   X_1     442 non-null    float32
 2   X_2     442 non-null    float32
 3   X_3     442 non-null    float32
 4   X_4     442 non-null    float32
 5   X_5     442 non-null    float32
 6   X_6     442 non-null    float32
 7   X_7     442 non-null    float32
 8   X_8     442 non-null    float32
 9   X_9     442 non-null    float32
dtypes: float32(10)
memory usage: 20.7 KB
       X_0   X_1  X_2  X_3  X_4  X_5  X_6  X_7  X_8  X_9
index                                                   
0      7.0  10.0  8.0  6.0  1.0  2.0  1.0  5.0  6.0  3.0
1      4.0   0.0  1.0  3.0  4.0  3.0  9.0  2.0  0.0  0.0
2      9.0  10.0  8.0  5.0  1.0  2.0  2.0  5.0  5.0  2.0
3      0.0   0.0  4.0  2.0  6.0  7.0  2.0  7.0  6.0  4.0
4      5.0   0.0  2.0  6.0  5.0  6.0  6.0  5.0  2.0  1.0
...    ...   ...  ...  ...  ...  ...  ...  ...  ...  ...
437    7.0  10.0  6.0  8.0  4.0  5.0  3.0  5.0  7.0  5.0
438    4.0  10.0  4.0  0.0  8.0  9.0  3.0  7.0  3.0  8.0
439    7.0  10.0  4.0  6.0  2.0  4.0  3.0  4.0  1.0  6.0
440    2.0   0.0  7.0  5.0  6.0  6.0  3.0  7.0  8.0  2.0
441    2.0   0.0  0.0  0.0  9.0  7.0  9.0  2.0  4.0  5.0

[442 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 442 entries, 0 to 441
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      442 non-null    int64  
 1   Estimator  442 non-null    float64
dtypes: float64(1), int64(1)
memory usage: 7.0 KB
     index   Estimator
0        0  213.021469
1        1   63.436874
2        2  194.431900
3        3  164.649719
4        4  116.810631
..     ...         ...
437    437  201.634155
438    438   95.248787
439    439  123.351433
440    440  219.791840
441    441   65.446991

[442 rows x 2 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('diabetes_quantized', 'RidgeRegressor') Estimator 4.548292893629808e-06
     index  SQL_Estimator  Py_Estimator  SQL_Error
426    426     160.092377    160.092392  -0.000015
427    427     133.503693    133.503693   0.000000
428    428     237.529999    237.530014  -0.000015
429    429      92.149078     92.149078   0.000000
430    430     111.898605    111.898590   0.000015
431    431     121.194031    121.194023   0.000008
432    432     222.463501    222.463486   0.000015
433    433      62.623161     62.623154   0.000008
434    434     126.140221    126.140221   0.000000
435    435     118.161049    118.161049   0.000000
436    436      56.349522     56.349522   0.000000
437    437     201.634155    201.634125   0.000031
438    438      95.248787     95.248779   0.000008
439    439     123.351433    123.351418   0.000015
440    440     219.791840    219.791840   0.000000
441    441      65.446991     65.446991   0.000000
MLLITE_REG_SQL_EXECUTION_STATUS ('diabetes_quantized', 'RidgeRegressor', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_diabetes_quantized_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('diabetes_quantized', 'RidgeRegressor', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   78.743919 + 0.229747 * t."X_0" + -2.460788 * t."X_1" + 8.235709 * t."X_2" + 5.175613 * t."X_3" + -3.398354 * t."X_4" + -0.196118 * t."X_5" + -3.128202 * t."X_6" + 1.173501 * t."X_7" + 9.717807 * t."X_8" + 1.027436 * t."X_9" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_FIRST_LINES_END ('diabetes_quantized', 'RidgeRegressor', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('diabetes_quantized', 'RidgeRegressor', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   78.743919 + 0.229747 * t."X_0" + -2.460788 * t."X_1" + 8.235709 * t."X_2" + 5.175613 * t."X_3" + -3.398354 * t."X_4" + -0.196118 * t."X_5" + -3.128202 * t."X_6" + 1.173501 * t."X_7" + 9.717807 * t."X_8" + 1.027436 * t."X_9" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_LAST_LINES_END ('diabetes_quantized', 'RidgeRegressor', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 442 entries, 0 to 441
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     442 non-null    float32
 1   X_1     442 non-null    float32
 2   X_2     442 non-null    float32
 3   X_3     442 non-null    float32
 4   X_4     442 non-null    float32
 5   X_5     442 non-null    float32
 6   X_6     442 non-null    float32
 7   X_7     442 non-null    float32
 8   X_8     442 non-null    float32
 9   X_9     442 non-null    float32
dtypes: float32(10)
memory usage: 20.7 KB
       X_0   X_1  X_2  X_3  X_4  X_5  X_6  X_7  X_8  X_9
index                                                   
0      7.0  10.0  8.0  6.0  1.0  2.0  1.0  5.0  6.0  3.0
1      4.0   0.0  1.0  3.0  4.0  3.0  9.0  2.0  0.0  0.0
2      9.0  10.0  8.0  5.0  1.0  2.0  2.0  5.0  5.0  2.0
3      0.0   0.0  4.0  2.0  6.0  7.0  2.0  7.0  6.0  4.0
4      5.0   0.0  2.0  6.0  5.0  6.0  6.0  5.0  2.0  1.0
...    ...   ...  ...  ...  ...  ...  ...  ...  ...  ...
437    7.0  10.0  6.0  8.0  4.0  5.0  3.0  5.0  7.0  5.0
438    4.0  10.0  4.0  0.0  8.0  9.0  3.0  7.0  3.0  8.0
439    7.0  10.0  4.0  6.0  2.0  4.0  3.0  4.0  1.0  6.0
440    2.0   0.0  7.0  5.0  6.0  6.0  3.0  7.0  8.0  2.0
441    2.0   0.0  0.0  0.0  9.0  7.0  9.0  2.0  4.0  5.0

[442 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 442 entries, 0 to 441
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      442 non-null    int64  
 1   Estimator  442 non-null    float64
dtypes: float64(1), int64(1)
memory usage: 7.0 KB
     index   Estimator
0        0  213.021481
1        1   63.436869
2        2  194.431917
3        3  164.649720
4        4  116.810615
..     ...         ...
437    437  201.634148
438    438   95.248779
439    439  123.351423
440    440  219.791838
441    441   65.446993

[442 rows x 2 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('diabetes_quantized', 'RidgeRegressor') Estimator 7.551180050574058e-06
     index  SQL_Estimator  Py_Estimator     SQL_Error
426    426     160.092378    160.092392 -1.396777e-05
427    427     133.503703    133.503693  1.037305e-05
428    428     237.530008    237.530014 -6.038086e-06
429    429      92.149074     92.149078 -4.369141e-06
430    430     111.898598    111.898590  7.912109e-06
431    431     121.194028    121.194023  4.867676e-06
432    432     222.463492    222.463486  6.282227e-06
433    433      62.623156     62.623154  2.313477e-06
434    434     126.140233    126.140221  1.235791e-05
435    435     118.161044    118.161049 -4.889160e-06
436    436      56.349524     56.349522  2.363037e-06
437    437     201.634148    201.634125  2.324414e-05
438    438      95.248779     95.248779 -2.968750e-07
439    439     123.351423    123.351418  5.458496e-06
440    440     219.791838    219.791840 -1.599609e-06
441    441      65.446993     65.446991  2.033203e-06
MLLITE_REG_SQL_EXECUTION_STATUS ('diabetes_quantized', 'RidgeRegressor', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_diabetes_quantized_pgsql.sql'



SQL_OUT_PUT_FIRST_LINES_START ('diabetes_quantized', 'RidgeRegressor', 'pgsql')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   78.743919 + 0.229747 * t."X_0" + -2.460788 * t."X_1" + 8.235709 * t."X_2" + 5.175613 * t."X_3" + -3.398354 * t."X_4" + -0.196118 * t."X_5" + -3.128202 * t."X_6" + 1.173501 * t."X_7" + 9.717807 * t."X_8" + 1.027436 * t."X_9" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_FIRST_LINES_END ('diabetes_quantized', 'RidgeRegressor', 'pgsql')
SQL_OUT_PUT_LAST_LINES_START ('diabetes_quantized', 'RidgeRegressor', 'pgsql')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   78.743919 + 0.229747 * t."X_0" + -2.460788 * t."X_1" + 8.235709 * t."X_2" + 5.175613 * t."X_3" + -3.398354 * t."X_4" + -0.196118 * t."X_5" + -3.128202 * t."X_6" + 1.173501 * t."X_7" + 9.717807 * t."X_8" + 1.027436 * t."X_9" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_LAST_LINES_END ('diabetes_quantized', 'RidgeRegressor', 'pgsql') 




COPY_TRAINING_DATA_TO_SQLITE_START
