    longitude  latitude  ...  ocean_proximity    target
0     -121.91     36.63  ...              0.0  279200.0
1     -121.43     38.66  ...              0.0   81100.0
2     -121.58     39.50  ...              0.0   57600.0
3     -120.24     39.35  ...              0.0  180800.0
4     -122.02     38.37  ...              0.0  198000.0
5     -122.01     37.18  ...              0.0  318700.0
6     -117.70     33.50  ...              0.0  245400.0
7     -117.41     33.96  ...              0.0  112700.0
8     -122.45     37.67  ...              0.0  246400.0
9     -122.73     38.44  ...              0.0  145000.0
10    -121.92     37.48  ...              0.0  264400.0
11    -122.44     37.78  ...              0.0  346200.0
12    -118.29     33.93  ...              0.0  111200.0
13    -121.79     38.00  ...              0.0  124700.0
14    -116.96     33.73  ...              0.0   87000.0
15    -121.31     38.26  ...              0.0   88300.0

[16 rows x 10 columns]
MLLITE_MODEL_SET_OPTIONS RidgeRegressor None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeRegressor { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeRegressor { ,   , }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeRegressor None
('OPERATION_START', 'TRAINING')
[[-1.2191e+02  3.6630e+01  4.2000e+01  8.1700e+02  1.9400e+02  3.9100e+02
   1.9300e+02  2.1776e+00  0.0000e+00]
 [-1.2143e+02  3.8660e+01  3.5000e+01  1.8140e+03  3.6700e+02  1.0760e+03
   3.7200e+02  2.7179e+00  0.0000e+00]
 [-1.2158e+02  3.9500e+01  2.9000e+01  1.9470e+03  3.8300e+02  9.2500e+02
   3.3700e+02  2.1658e+00  0.0000e+00]
 [-1.2024e+02  3.9350e+01  8.0000e+00  4.1950e+03  7.2500e+02  2.9100e+02
   1.1500e+02  3.4792e+00  0.0000e+00]
 [-1.2202e+02  3.8370e+01  1.6000e+01  2.4950e+03  3.3100e+02  1.1180e+03
   3.3800e+02  6.4894e+00  0.0000e+00]] [279200.  81100.  57600. 180800. 198000.]
MLLITE_FIT_USING_MODEL mllite_ridge_reg.RidgeRegressor_ff4_ff4
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_REGRESSOR_FIT' 1 2
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_REGRESSOR_FIT' 2 2
('OPERATION_END_ELAPSED', 0.01, 'TRAINING')
{ ,   , }
{ ,   , }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W13", "signature" : "ff4_ff4"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 9 },
	"equations" : {
			"intercept" : -1843197.000000,
			"coeffs" : [ -25146.962891, -32087.527344, 3569.271973, 22.283113, 76.998955, -93.764740, -61.739590, 32377.666016, 0.000000 ]
		}
}
WRITING_JSON_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_california_housing_tiny.json'

MLLITE_MODEL_SET_OPTIONS RidgeRegressor None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeRegressor { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeRegressor { ,   , }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeRegressor None
MLLITE_RELOADING_MODEL mllite_ridge_reg.RidgeRegressor_ff4_ff4
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W13", "signature" : "ff4_ff4"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 9 },
	"equations" : {
			"intercept" : -1843197.000000,
			"coeffs" : [ -25146.962891, -32087.527344, 3569.271973, 22.283113, 76.998955, -93.764740, -61.739590, 32377.666016, 0.000000 ]
		}
}
BEAUTIFIED_JSON_START
{
	"dataset" : 	{
		"dataset_features" : 9,
		"dataset_rows" : 16
	},
	"equations" : 	{
		"coeffs" : [ -25146.962891, -32087.527344, 3569.271973, 22.283113, 76.998955, -93.76474, -61.73959, 32377.666016, 0.0 ],
		"intercept" : -1843197.0
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_ff4", "version" : "2024-W13" },
	"options" :  { "alpha" : 1.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
[252083.5   127640.96   85683.016 173948.48  216642.92  310949.4
 220156.31  153252.08  262617.66  180824.48  201220.27  268139.75
 100642.63  169094.83   94828.42   68979.125]
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
('OPERATION_START', 'PREDICT')
[252083.5   127640.96   85683.016 173948.48  216642.92  310949.4
 220156.31  153252.08  262617.66  180824.48  201220.27  268139.75
 100642.63  169094.83   94828.42   68979.125]
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
MODEL_PERFS {'class_name': 'mllite.RidgeRegressor', 'model_name': 'RidgeRegressor', 'options': None, 'dataset': 'california_housing_tiny', 'size': 16, 'mse': 1285921000.0, 'mae': 29760.307, 'mape': 0.20716679, 'r2': 0.8395090913085618}
WRITING_PERF_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_california_housing_tiny.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeRegressor', 'model_name': 'RidgeRegressor', 'options': None, 'dataset': 'california_housing_tiny', 'training_time_in_sec': 0.01, 'prediction_time_in_sec': 0.001}
WRITING_SQL_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_california_housing_tiny_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('california_housing_tiny', 'RidgeRegressor', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   -1843197.000000 + -25146.962891 * t."X_0" + -32087.527344 * t."X_1" + 3569.271973 * t."X_2" + 22.283113 * t."X_3" + 76.998955 * t."X_4" + -93.764740 * t."X_5" + -61.739590 * t."X_6" + 32377.666016 * t."X_7" + 0.000000 * t."X_8" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_FIRST_LINES_END ('california_housing_tiny', 'RidgeRegressor', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('california_housing_tiny', 'RidgeRegressor', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   -1843197.000000 + -25146.962891 * t."X_0" + -32087.527344 * t."X_1" + 3569.271973 * t."X_2" + 22.283113 * t."X_3" + 76.998955 * t."X_4" + -93.764740 * t."X_5" + -61.739590 * t."X_6" + 32377.666016 * t."X_7" + 0.000000 * t."X_8" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_LAST_LINES_END ('california_housing_tiny', 'RidgeRegressor', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 16 entries, 0 to 15
Data columns (total 9 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     16 non-null     float32
 1   X_1     16 non-null     float32
 2   X_2     16 non-null     float32
 3   X_3     16 non-null     float32
 4   X_4     16 non-null     float32
 5   X_5     16 non-null     float32
 6   X_6     16 non-null     float32
 7   X_7     16 non-null     float32
 8   X_8     16 non-null     float32
dtypes: float32(9)
memory usage: 704.0 bytes
              X_0        X_1   X_2     X_3    X_4     X_5    X_6     X_7  X_8
index                                                                        
0     -121.910004  36.630001  42.0   817.0  194.0   391.0  193.0  2.1776  0.0
1     -121.430000  38.660000  35.0  1814.0  367.0  1076.0  372.0  2.7179  0.0
2     -121.580002  39.500000  29.0  1947.0  383.0   925.0  337.0  2.1658  0.0
3     -120.239998  39.349998   8.0  4195.0  725.0   291.0  115.0  3.4792  0.0
4     -122.019997  38.369999  16.0  2495.0  331.0  1118.0  338.0  6.4894  0.0
5     -122.010002  37.180000  37.0  3852.0  652.0  1534.0  567.0  5.8596  0.0
6     -117.699997  33.500000   4.0  2351.0  445.0   834.0  397.0  5.5677  0.0
7     -117.410004  33.959999  27.0  2341.0  418.0  1272.0  415.0  3.0208  0.0
8     -122.449997  37.669998  36.0  1664.0  326.0   963.0  322.0  4.7813  0.0
9     -122.730003  38.439999  35.0  1120.0  297.0   659.0  274.0  2.3824  0.0
10    -121.919998  37.480000  23.0  4314.0  676.0  1972.0  623.0  5.3813  0.0
11    -122.440002  37.779999  52.0  1118.0  279.0   514.0  284.0  2.4196  0.0
12    -118.290001  33.930000  32.0  1815.0  488.0  1715.0  475.0  1.7244  0.0
13    -121.790001  38.000000  34.0  3090.0  593.0  1588.0  566.0  3.6118  0.0
14    -116.959999  33.730000  20.0  4735.0  973.0  2306.0  904.0  3.0690  0.0
15    -121.309998  38.259998  22.0  1768.0  396.0  1005.0  420.0  1.8846  0.0
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 16 entries, 0 to 15
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      16 non-null     int64  
 1   Estimator  16 non-null     float64
dtypes: float64(1), int64(1)
memory usage: 388.0 bytes
    index      Estimator
0       0  252083.500000
1       1  127640.968750
2       2   85683.023438
3       3  173948.484375
4       4  216642.921875
5       5  310949.437500
6       6  220156.312500
7       7  153252.093750
8       8  262617.656250
9       9  180824.484375
10     10  201220.265625
11     11  268139.750000
12     12  100642.632812
13     13  169094.843750
14     14   94828.429688
15     15   68979.132812
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('california_housing_tiny', 'RidgeRegressor') Estimator 0.005859375
    index  SQL_Estimator   Py_Estimator  SQL_Error
0       0  252083.500000  252083.500000   0.000000
1       1  127640.968750  127640.960938   0.007812
2       2   85683.023438   85683.015625   0.007812
3       3  173948.484375  173948.484375   0.000000
4       4  216642.921875  216642.921875   0.000000
5       5  310949.437500  310949.406250   0.031250
6       6  220156.312500  220156.312500   0.000000
7       7  153252.093750  153252.078125   0.015625
8       8  262617.656250  262617.656250   0.000000
9       9  180824.484375  180824.484375   0.000000
10     10  201220.265625  201220.265625   0.000000
11     11  268139.750000  268139.750000   0.000000
12     12  100642.632812  100642.632812   0.000000
13     13  169094.843750  169094.828125   0.015625
14     14   94828.429688   94828.421875   0.007812
15     15   68979.132812   68979.125000   0.007812
MLLITE_REG_SQL_EXECUTION_STATUS ('california_housing_tiny', 'RidgeRegressor', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_california_housing_tiny_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('california_housing_tiny', 'RidgeRegressor', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   -1843197.000000 + -25146.962891 * t."X_0" + -32087.527344 * t."X_1" + 3569.271973 * t."X_2" + 22.283113 * t."X_3" + 76.998955 * t."X_4" + -93.764740 * t."X_5" + -61.739590 * t."X_6" + 32377.666016 * t."X_7" + 0.000000 * t."X_8" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_FIRST_LINES_END ('california_housing_tiny', 'RidgeRegressor', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('california_housing_tiny', 'RidgeRegressor', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   -1843197.000000 + -25146.962891 * t."X_0" + -32087.527344 * t."X_1" + 3569.271973 * t."X_2" + 22.283113 * t."X_3" + 76.998955 * t."X_4" + -93.764740 * t."X_5" + -61.739590 * t."X_6" + 32377.666016 * t."X_7" + 0.000000 * t."X_8" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_LAST_LINES_END ('california_housing_tiny', 'RidgeRegressor', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 16 entries, 0 to 15
Data columns (total 9 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     16 non-null     float32
 1   X_1     16 non-null     float32
 2   X_2     16 non-null     float32
 3   X_3     16 non-null     float32
 4   X_4     16 non-null     float32
 5   X_5     16 non-null     float32
 6   X_6     16 non-null     float32
 7   X_7     16 non-null     float32
 8   X_8     16 non-null     float32
dtypes: float32(9)
memory usage: 704.0 bytes
              X_0        X_1   X_2     X_3    X_4     X_5    X_6     X_7  X_8
index                                                                        
0     -121.910004  36.630001  42.0   817.0  194.0   391.0  193.0  2.1776  0.0
1     -121.430000  38.660000  35.0  1814.0  367.0  1076.0  372.0  2.7179  0.0
2     -121.580002  39.500000  29.0  1947.0  383.0   925.0  337.0  2.1658  0.0
3     -120.239998  39.349998   8.0  4195.0  725.0   291.0  115.0  3.4792  0.0
4     -122.019997  38.369999  16.0  2495.0  331.0  1118.0  338.0  6.4894  0.0
5     -122.010002  37.180000  37.0  3852.0  652.0  1534.0  567.0  5.8596  0.0
6     -117.699997  33.500000   4.0  2351.0  445.0   834.0  397.0  5.5677  0.0
7     -117.410004  33.959999  27.0  2341.0  418.0  1272.0  415.0  3.0208  0.0
8     -122.449997  37.669998  36.0  1664.0  326.0   963.0  322.0  4.7813  0.0
9     -122.730003  38.439999  35.0  1120.0  297.0   659.0  274.0  2.3824  0.0
10    -121.919998  37.480000  23.0  4314.0  676.0  1972.0  623.0  5.3813  0.0
11    -122.440002  37.779999  52.0  1118.0  279.0   514.0  284.0  2.4196  0.0
12    -118.290001  33.930000  32.0  1815.0  488.0  1715.0  475.0  1.7244  0.0
13    -121.790001  38.000000  34.0  3090.0  593.0  1588.0  566.0  3.6118  0.0
14    -116.959999  33.730000  20.0  4735.0  973.0  2306.0  904.0  3.0690  0.0
15    -121.309998  38.259998  22.0  1768.0  396.0  1005.0  420.0  1.8846  0.0
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 16 entries, 0 to 15
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      16 non-null     int64  
 1   Estimator  16 non-null     float64
dtypes: float64(1), int64(1)
memory usage: 388.0 bytes
    index      Estimator
0       0  252083.548999
1       1  127640.883795
2       2   85683.098029
3       3  173948.469196
4       4  216642.972424
5       5  310949.367817
6       6  220156.228782
7       7  153252.057944
8       8  262617.727477
9       9  180824.569599
10     10  201220.159294
11     11  268139.706349
12     12  100642.708432
13     13  169094.678624
14     14   94828.414202
15     15   68979.137235
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('california_housing_tiny', 'RidgeRegressor') Estimator 0.060504142435092945
    index  SQL_Estimator   Py_Estimator  SQL_Error
0       0  252083.548999  252083.500000   0.048999
1       1  127640.883795  127640.960938  -0.077142
2       2   85683.098029   85683.015625   0.082404
3       3  173948.469196  173948.484375  -0.015179
4       4  216642.972424  216642.921875   0.050549
5       5  310949.367817  310949.406250  -0.038433
6       6  220156.228782  220156.312500  -0.083718
7       7  153252.057944  153252.078125  -0.020181
8       8  262617.727477  262617.656250   0.071227
9       9  180824.569599  180824.484375   0.085224
10     10  201220.159294  201220.265625  -0.106331
11     11  268139.706349  268139.750000  -0.043651
12     12  100642.708432  100642.632812   0.075619
13     13  169094.678624  169094.828125  -0.149501
14     14   94828.414202   94828.421875  -0.007673
15     15   68979.137235   68979.125000   0.012235
MLLITE_REG_SQL_EXECUTION_STATUS ('california_housing_tiny', 'RidgeRegressor', 'Failure')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_california_housing_tiny_pgsql.sql'



SQL_OUT_PUT_FIRST_LINES_START ('california_housing_tiny', 'RidgeRegressor', 'pgsql')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   -1843197.000000 + -25146.962891 * t."X_0" + -32087.527344 * t."X_1" + 3569.271973 * t."X_2" + 22.283113 * t."X_3" + 76.998955 * t."X_4" + -93.764740 * t."X_5" + -61.739590 * t."X_6" + 32377.666016 * t."X_7" + 0.000000 * t."X_8" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_FIRST_LINES_END ('california_housing_tiny', 'RidgeRegressor', 'pgsql')
SQL_OUT_PUT_LAST_LINES_START ('california_housing_tiny', 'RidgeRegressor', 'pgsql')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   -1843197.000000 + -25146.962891 * t."X_0" + -32087.527344 * t."X_1" + 3569.271973 * t."X_2" + 22.283113 * t."X_3" + 76.998955 * t."X_4" + -93.764740 * t."X_5" + -61.739590 * t."X_6" + 32377.666016 * t."X_7" + 0.000000 * t."X_8" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_LAST_LINES_END ('california_housing_tiny', 'RidgeRegressor', 'pgsql') 




COPY_TRAINING_DATA_TO_SQLITE_START
