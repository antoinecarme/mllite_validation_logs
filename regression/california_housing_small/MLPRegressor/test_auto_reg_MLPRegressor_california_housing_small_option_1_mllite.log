    longitude  latitude  ...  ocean_proximity    target
0     -121.91     36.63  ...              0.0  279200.0
1     -121.43     38.66  ...              0.0   81100.0
2     -121.58     39.50  ...              0.0   57600.0
3     -120.24     39.35  ...              0.0  180800.0
4     -122.02     38.37  ...              0.0  198000.0
..        ...       ...  ...              ...       ...
59    -118.21     34.10  ...              0.0  241700.0
60    -117.14     32.70  ...              0.0   87000.0
61    -117.94     33.89  ...              0.0  459600.0
62    -118.42     33.96  ...              0.0  365900.0
63    -117.95     34.04  ...              0.0  150800.0

[64 rows x 10 columns]
MLLITE_MODEL_SET_OPTIONS MLPRegressor {"hidden_layer_sizes" : [4, 8, 6]}
MLLITE_MODEL_OPTIONS_DEFAULT MLPRegressor { "max_iter" : 32}
MLLITE_MODEL_OPTIONS_AFTER_SETTING MLPRegressor { "hidden_layer_sizes" : [4, 8, 6],  "max_iter" : 32 , }
MLLITE_MODEL_JSON_AFTER_SETTING MLPRegressor None
('OPERATION_START', 'TRAINING')
[[-1.2191e+02  3.6630e+01  4.2000e+01  8.1700e+02  1.9400e+02  3.9100e+02
   1.9300e+02  2.1776e+00  0.0000e+00]
 [-1.2143e+02  3.8660e+01  3.5000e+01  1.8140e+03  3.6700e+02  1.0760e+03
   3.7200e+02  2.7179e+00  0.0000e+00]
 [-1.2158e+02  3.9500e+01  2.9000e+01  1.9470e+03  3.8300e+02  9.2500e+02
   3.3700e+02  2.1658e+00  0.0000e+00]
 [-1.2024e+02  3.9350e+01  8.0000e+00  4.1950e+03  7.2500e+02  2.9100e+02
   1.1500e+02  3.4792e+00  0.0000e+00]
 [-1.2202e+02  3.8370e+01  1.6000e+01  2.4950e+03  3.3100e+02  1.1180e+03
   3.3800e+02  6.4894e+00  0.0000e+00]] [279200.  81100.  57600. 180800. 198000.]
MLLITE_FIT_USING_MODEL mllite_mlp_reg.MLPRegressor_ff4_ff4
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT' 1 3
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT' 2 3
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 3 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 6 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 9 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 12 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 15 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 18 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 21 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 24 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 27 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 30 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 32 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT' 3 3
('OPERATION_END_ELAPSED', 0.015, 'TRAINING')
{ "hidden_layer_sizes" : [4, 8, 6],  "max_iter" : 32 , }
{ "hidden_layer_sizes" : [4, 8, 6],  "max_iter" : 32 , }
{
	"metadata" : { "model" : "Rosenblatt_MLP", "version" : "2024-W13", "signature" : "ff4_ff4"},
	"options" : {  "hidden_layer_sizes" : [ 4, 8, 6 ], "activation" : "relu", "solver" : "adam", "alpha" : 0.000100, "batch_size" : null, "learning_rate" : "constant", "learning_rate_init" : 0.001000, "power_t" : 0.500000, "max_iter" : 32, "shuffle" : 1, "random_state" : 1789, "tol" : 0.000100, "verbose" : 0, "warm_start" : 0, "momentum" : 0.900000, "nesterovs_momentum" : 1, "early_stopping" : 0, "validation_fraction" : 0.100000, "beta_1" : 0.900000, "beta_2" : 0.999000, "epsilon" : 0.000000, "n_iter_no_change" : 10, "max_fun" : 15000 },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 9 },
	"layers" : {
		"sizes" : [ 9, 4, 8, 6, 1 ],
		"Layer_0" : {
			"name" : "Input_Layer",
			"NbInputs" : 0,
			"NbOutputs" : 9 
		},
		"Layer_1" : {
			"name" : "Hidden_Layer_1",
			"NbInputs" : 9,
			"NbOutputs" : 4 ,
			"coeffs_0" : [ -0.027799, 0.352428, -0.277285, -0.018631 ],
			"coeffs_1" : [ 0.094180, -0.476655, 0.196917, -0.009739 ],
			"coeffs_2" : [ 0.548454, 0.144144, 0.564862, -0.137851 ],
			"coeffs_3" : [ 0.644643, -0.600733, -0.284604, 0.221376 ],
			"coeffs_4" : [ 0.324282, -0.325468, -0.345737, -0.558563 ],
			"coeffs_5" : [ 0.263548, -0.670687, -0.108320, 0.000306 ],
			"coeffs_6" : [ -0.165742, -0.617195, -0.347853, 0.524356 ],
			"coeffs_7" : [ -0.080713, 0.005603, -0.608316, 0.007363 ],
			"coeffs_8" : [ -0.207529, 0.250686, -0.136696, 0.287646 ],
			"intercepts" : [ -0.482903, 0.594989, -0.497416, 0.333722 ]
		},
		"Layer_2" : {
			"name" : "Hidden_Layer_2",
			"NbInputs" : 4,
			"NbOutputs" : 8 ,
			"coeffs_0" : [ -0.507938, 0.357845, 0.198362, 0.611219, -0.443915, -0.544968, 0.205453, 0.286699 ],
			"coeffs_1" : [ 0.475586, 0.606558, 0.538130, -0.459344, 0.422772, 0.576270, -0.426981, 0.315838 ],
			"coeffs_2" : [ 0.209398, 0.053026, 0.089744, 0.403889, -0.606422, 0.089234, 0.289639, 0.406786 ],
			"coeffs_3" : [ -0.603558, 0.459479, -0.362364, -0.684450, 0.697656, 0.674861, -0.123750, -0.543870 ],
			"intercepts" : [ -0.025484, 0.644712, -0.478202, 0.247445, 0.318401, 0.417701, 0.591725, -0.325218 ]
		},
		"Layer_3" : {
			"name" : "Hidden_Layer_3",
			"NbInputs" : 8,
			"NbOutputs" : 6 ,
			"coeffs_0" : [ 0.275492, 0.460721, 0.479602, -0.058667, -0.581198, 0.327138 ],
			"coeffs_1" : [ 0.007260, -0.124039, -0.480768, -0.619361, -0.239449, 0.559283 ],
			"coeffs_2" : [ 0.027252, -0.133482, -0.151607, -0.586402, 0.218124, -0.232772 ],
			"coeffs_3" : [ -0.254067, -0.133022, 0.269611, -0.462554, -0.215160, 0.345187 ],
			"coeffs_4" : [ 0.431074, 0.557300, 0.475690, 0.371699, -0.278179, 0.061712 ],
			"coeffs_5" : [ 0.182889, 0.443776, 0.321790, -0.001604, 0.376502, 0.454500 ],
			"coeffs_6" : [ 0.107910, -0.225065, -0.178974, -0.324393, 0.344409, 0.333405 ],
			"coeffs_7" : [ -0.452853, 0.212193, -0.417195, -0.001729, 0.122957, -0.296561 ],
			"intercepts" : [ 0.299111, -0.618701, -0.588556, 0.488080, 0.593266, -0.464778 ]
		},
		"Layer_4" : {
			"name" : "Output_Layer",
			"NbInputs" : 6,
			"NbOutputs" : 1 ,
			"coeffs_0" : [ -0.347773 ],
			"coeffs_1" : [ -0.699845 ],
			"coeffs_2" : [ -0.707841 ],
			"coeffs_3" : [ -0.710840 ],
			"coeffs_4" : [ -0.307408 ],
			"coeffs_5" : [ -0.180942 ],
			"intercepts" : [ -0.573920 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/regression/MLPRegressor/mllite.MLPRegressor_california_housing_small_option_1.json'

MLLITE_MODEL_SET_OPTIONS MLPRegressor {"hidden_layer_sizes" : [4, 8, 6]}
MLLITE_MODEL_OPTIONS_DEFAULT MLPRegressor { "max_iter" : 32}
MLLITE_MODEL_OPTIONS_AFTER_SETTING MLPRegressor { "hidden_layer_sizes" : [4, 8, 6],  "max_iter" : 32 , }
MLLITE_MODEL_JSON_AFTER_SETTING MLPRegressor None
MLLITE_RELOADING_MODEL mllite_mlp_reg.MLPRegressor_ff4_ff4
{
	"metadata" : { "model" : "Rosenblatt_MLP", "version" : "2024-W13", "signature" : "ff4_ff4"},
	"options" : {  "hidden_layer_sizes" : [ 4, 8, 6 ], "activation" : "relu", "solver" : "adam", "alpha" : 0.000100, "batch_size" : null, "learning_rate" : "constant", "learning_rate_init" : 0.001000, "power_t" : 0.500000, "max_iter" : 32, "shuffle" : 1, "random_state" : 1789, "tol" : 0.000100, "verbose" : 0, "warm_start" : 0, "momentum" : 0.900000, "nesterovs_momentum" : 1, "early_stopping" : 0, "validation_fraction" : 0.100000, "beta_1" : 0.900000, "beta_2" : 0.999000, "epsilon" : 0.000000, "n_iter_no_change" : 10, "max_fun" : 15000 },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 9 },
	"layers" : {
		"sizes" : [ 9, 4, 8, 6, 1 ],
		"Layer_0" : {
			"name" : "Input_Layer",
			"NbInputs" : 0,
			"NbOutputs" : 9 
		},
		"Layer_1" : {
			"name" : "Hidden_Layer_1",
			"NbInputs" : 9,
			"NbOutputs" : 4 ,
			"coeffs_0" : [ -0.027799, 0.352428, -0.277285, -0.018631 ],
			"coeffs_1" : [ 0.094180, -0.476655, 0.196917, -0.009739 ],
			"coeffs_2" : [ 0.548454, 0.144144, 0.564862, -0.137851 ],
			"coeffs_3" : [ 0.644643, -0.600733, -0.284604, 0.221376 ],
			"coeffs_4" : [ 0.324282, -0.325468, -0.345737, -0.558563 ],
			"coeffs_5" : [ 0.263548, -0.670687, -0.108320, 0.000306 ],
			"coeffs_6" : [ -0.165742, -0.617195, -0.347853, 0.524356 ],
			"coeffs_7" : [ -0.080713, 0.005603, -0.608316, 0.007363 ],
			"coeffs_8" : [ -0.207529, 0.250686, -0.136696, 0.287646 ],
			"intercepts" : [ -0.482903, 0.594989, -0.497416, 0.333722 ]
		},
		"Layer_2" : {
			"name" : "Hidden_Layer_2",
			"NbInputs" : 4,
			"NbOutputs" : 8 ,
			"coeffs_0" : [ -0.507938, 0.357845, 0.198362, 0.611219, -0.443915, -0.544968, 0.205453, 0.286699 ],
			"coeffs_1" : [ 0.475586, 0.606558, 0.538130, -0.459344, 0.422772, 0.576270, -0.426981, 0.315838 ],
			"coeffs_2" : [ 0.209398, 0.053026, 0.089744, 0.403889, -0.606422, 0.089234, 0.289639, 0.406786 ],
			"coeffs_3" : [ -0.603558, 0.459479, -0.362364, -0.684450, 0.697656, 0.674861, -0.123750, -0.543870 ],
			"intercepts" : [ -0.025484, 0.644712, -0.478202, 0.247445, 0.318401, 0.417701, 0.591725, -0.325218 ]
		},
		"Layer_3" : {
			"name" : "Hidden_Layer_3",
			"NbInputs" : 8,
			"NbOutputs" : 6 ,
			"coeffs_0" : [ 0.275492, 0.460721, 0.479602, -0.058667, -0.581198, 0.327138 ],
			"coeffs_1" : [ 0.007260, -0.124039, -0.480768, -0.619361, -0.239449, 0.559283 ],
			"coeffs_2" : [ 0.027252, -0.133482, -0.151607, -0.586402, 0.218124, -0.232772 ],
			"coeffs_3" : [ -0.254067, -0.133022, 0.269611, -0.462554, -0.215160, 0.345187 ],
			"coeffs_4" : [ 0.431074, 0.557300, 0.475690, 0.371699, -0.278179, 0.061712 ],
			"coeffs_5" : [ 0.182889, 0.443776, 0.321790, -0.001604, 0.376502, 0.454500 ],
			"coeffs_6" : [ 0.107910, -0.225065, -0.178974, -0.324393, 0.344409, 0.333405 ],
			"coeffs_7" : [ -0.452853, 0.212193, -0.417195, -0.001729, 0.122957, -0.296561 ],
			"intercepts" : [ 0.299111, -0.618701, -0.588556, 0.488080, 0.593266, -0.464778 ]
		},
		"Layer_4" : {
			"name" : "Output_Layer",
			"NbInputs" : 6,
			"NbOutputs" : 1 ,
			"coeffs_0" : [ -0.347773 ],
			"coeffs_1" : [ -0.699845 ],
			"coeffs_2" : [ -0.707841 ],
			"coeffs_3" : [ -0.710840 ],
			"coeffs_4" : [ -0.307408 ],
			"coeffs_5" : [ -0.180942 ],
			"intercepts" : [ -0.573920 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"dataset" : 	{
		"dataset_features" : 9,
		"dataset_rows" : 64
	},
	"layers" : 	{
		"Layer_0" : 	{
			"NbInputs" : 0,
			"NbOutputs" : 9,
			"name" : "Input_Layer"
		},
		"Layer_1" : 	{
			"NbInputs" : 9,
			"NbOutputs" : 4,
			"coeffs_0" : [ -0.027799, 0.352428, -0.277285, -0.018631 ],
			"coeffs_1" : [ 0.09418, -0.476655, 0.196917, -0.009739 ],
			"coeffs_2" : [ 0.548454, 0.144144, 0.564862, -0.137851 ],
			"coeffs_3" : [ 0.644643, -0.600733, -0.284604, 0.221376 ],
			"coeffs_4" : [ 0.324282, -0.325468, -0.345737, -0.558563 ],
			"coeffs_5" : [ 0.263548, -0.670687, -0.10832, 0.000306 ],
			"coeffs_6" : [ -0.165742, -0.617195, -0.347853, 0.524356 ],
			"coeffs_7" : [ -0.080713, 0.005603, -0.608316, 0.007363 ],
			"coeffs_8" : [ -0.207529, 0.250686, -0.136696, 0.287646 ],
			"intercepts" : [ -0.482903, 0.594989, -0.497416, 0.333722 ],
			"name" : "Hidden_Layer_1"
		},
		"Layer_2" : 	{
			"NbInputs" : 4,
			"NbOutputs" : 8,
			"coeffs_0" : [ -0.507938, 0.357845, 0.198362, 0.611219, -0.443915, -0.544968, 0.205453, 0.286699 ],
			"coeffs_1" : [ 0.475586, 0.606558, 0.53813, -0.459344, 0.422772, 0.57627, -0.426981, 0.315838 ],
			"coeffs_2" : [ 0.209398, 0.053026, 0.089744, 0.403889, -0.606422, 0.089234, 0.289639, 0.406786 ],
			"coeffs_3" : [ -0.603558, 0.459479, -0.362364, -0.68445, 0.697656, 0.674861, -0.12375, -0.54387 ],
			"intercepts" : [ -0.025484, 0.644712, -0.478202, 0.247445, 0.318401, 0.417701, 0.591725, -0.325218 ],
			"name" : "Hidden_Layer_2"
		},
		"Layer_3" : 	{
			"NbInputs" : 8,
			"NbOutputs" : 6,
			"coeffs_0" : [ 0.275492, 0.460721, 0.479602, -0.058667, -0.581198, 0.327138 ],
			"coeffs_1" : [ 0.00726, -0.124039, -0.480768, -0.619361, -0.239449, 0.559283 ],
			"coeffs_2" : [ 0.027252, -0.133482, -0.151607, -0.586402, 0.218124, -0.232772 ],
			"coeffs_3" : [ -0.254067, -0.133022, 0.269611, -0.462554, -0.21516, 0.345187 ],
			"coeffs_4" : [ 0.431074, 0.5573, 0.47569, 0.371699, -0.278179, 0.061712 ],
			"coeffs_5" : [ 0.182889, 0.443776, 0.32179, -0.001604, 0.376502, 0.4545 ],
			"coeffs_6" : [ 0.10791, -0.225065, -0.178974, -0.324393, 0.344409, 0.333405 ],
			"coeffs_7" : [ -0.452853, 0.212193, -0.417195, -0.001729, 0.122957, -0.296561 ],
			"intercepts" : [ 0.299111, -0.618701, -0.588556, 0.48808, 0.593266, -0.464778 ],
			"name" : "Hidden_Layer_3"
		},
		"Layer_4" : 	{
			"NbInputs" : 6,
			"NbOutputs" : 1,
			"coeffs_0" : [ -0.347773 ],
			"coeffs_1" : [ -0.699845 ],
			"coeffs_2" : [ -0.707841 ],
			"coeffs_3" : [ -0.71084 ],
			"coeffs_4" : [ -0.307408 ],
			"coeffs_5" : [ -0.180942 ],
			"intercepts" : [ -0.57392 ],
			"name" : "Output_Layer"
		},
		"sizes" : [ 9, 4, 8, 6, 1 ]
	},
	"metadata" :  { "model" : "Rosenblatt_MLP", "signature" : "ff4_ff4", "version" : "2024-W13" },
	"options" :  { "activation" : "relu", "alpha" : 0.0001, "batch_size" : null, "beta_1" : 0.9, "beta_2" : 0.999, "early_stopping" : 0, "epsilon" : 0.0, "hidden_layer_sizes" : [ 4, 8, 6 ], "learning_rate" : "constant", "learning_rate_init" : 0.001, "max_fun" : 15000, "max_iter" : 32, "momentum" : 0.9, "n_iter_no_change" : 10, "nesterovs_momentum" : 1, "power_t" : 0.5, "random_state" : 1789, "shuffle" : 1, "solver" : "adam", "tol" : 0.0001, "validation_fraction" : 0.1, "verbose" : 0, "warm_start" : 0 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
[ -51.071835 -113.32899  -116.83793  -214.09799  -146.988    -223.65314
 -135.11472  -142.83984  -103.56671   -71.02879  -254.03174   -69.15683
 -124.73205  -186.76471  -282.76254  -109.945816 -139.41377   -41.238655
 -280.65295  -399.61258  -201.62617  -105.93876   -71.696945  -90.27221
 -172.0508   -130.83322  -106.22217  -147.11842  -109.742294 -281.35043
  -77.20488  -194.02211   -85.28732  -112.7435   -973.5671    -99.99554
  -77.108215 -208.5634   -258.0315    -51.684242 -242.08401   -67.960915
  -95.78495  -107.135826 -134.75229  -301.83905  -240.90761  -215.38202
 -169.57884  -376.9402   -197.29327   -83.73354  -221.25352   -86.23085
 -231.57152   -82.71416  -106.49147   -91.55798   -86.28268  -126.578415
  -79.61505  -150.95508   -76.01707  -175.89719 ]
('OPERATION_END_ELAPSED', 0.002, 'PREDICT')
('OPERATION_START', 'PREDICT')
[ -51.071663 -113.32861  -116.83755  -214.0973   -146.98752  -223.65239
 -135.11427  -142.83937  -103.56635   -71.02857  -254.0309    -69.1566
 -124.73165  -186.76416  -282.76163  -109.94545  -139.41333   -41.238537
 -280.65204  -399.61124  -201.62552  -105.93841   -71.69671   -90.27188
 -172.05017  -130.83278  -106.221825 -147.11795  -109.74196  -281.3495
  -77.204636 -194.0215    -85.287056 -112.74314  -973.5641    -99.99521
  -77.10797  -208.56273  -258.0307    -51.68408  -242.08322   -67.96069
  -95.78462  -107.135475 -134.75183  -301.83804  -240.90678  -215.38132
 -169.57826  -376.93893  -197.29265   -83.73326  -221.25282   -86.230576
 -231.57074   -82.713875 -106.49114   -91.557655  -86.2824   -126.57801
  -79.61481  -150.95456   -76.01683  -175.89665 ]
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
MODEL_PERFS {'class_name': 'mllite.MLPRegressor', 'model_name': 'MLPRegressor', 'options': '{"hidden_layer_sizes" : [4, 8, 6]}', 'dataset': 'california_housing_small', 'size': 64, 'mse': 53459747000.0, 'mae': 203623.62, 'mape': 1.00104, 'r2': -3.455777647039131}
WRITING_PERF_CODE 'logs/auto_tests/regression/MLPRegressor/mllite.MLPRegressor_california_housing_small_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.MLPRegressor', 'model_name': 'MLPRegressor', 'options': '{"hidden_layer_sizes" : [4, 8, 6]}', 'dataset': 'california_housing_small', 'training_time_in_sec': 0.015, 'prediction_time_in_sec': 0.001}
WRITING_SQL_CODE 'logs/auto_tests/regression/MLPRegressor/mllite.MLPRegressor_california_housing_small_option_1_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('california_housing_small', 'MLPRegressor', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
"Input_Layer_BA" AS
 ( SELECT
    t."index" as "index",
    t."X_0" AS "OUT_0",
    t."X_1" AS "OUT_1",
    t."X_2" AS "OUT_2",
    t."X_3" AS "OUT_3",
    t."X_4" AS "OUT_4",
    t."X_5" AS "OUT_5",
    t."X_6" AS "OUT_6",
    t."X_7" AS "OUT_7",
    t."X_8" AS "OUT_8"
 FROM "model_input" AS t
),
"Hidden_Layer_1_BA" AS
 ( SELECT
    t."index" as "index",
    -0.482903 + -0.027799 * t."OUT_0"  + 0.094180 * t."OUT_1"  + 0.548454 * t."OUT_2"  + 0.644643 * t."OUT_3"  + 0.324282 * t."OUT_4"  + 0.263548 * t."OUT_5"  + -0.165742 * t."OUT_6"  + -0.080713 * t."OUT_7"  + -0.207529 * t."OUT_8"
SQL_OUT_PUT_FIRST_LINES_END ('california_housing_small', 'MLPRegressor', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('california_housing_small', 'MLPRegressor', 'duckdb')
61712 * t."OUT_4"  + 0.454500 * t."OUT_5"  + 0.333405 * t."OUT_6"  + -0.296561 * t."OUT_7" AS "OUT_5"
   FROM "Hidden_Layer_2_Activation" AS t
 ),
"Hidden_Layer_3_Activation" AS
 ( SELECT
    t."index" as "index",
    CASE WHEN (t."OUT_0" > 0) THEN t."OUT_0" ELSE 0 END AS "OUT_0",
    CASE WHEN (t."OUT_1" > 0) THEN t."OUT_1" ELSE 0 END AS "OUT_1",
    CASE WHEN (t."OUT_2" > 0) THEN t."OUT_2" ELSE 0 END AS "OUT_2",
    CASE WHEN (t."OUT_3" > 0) THEN t."OUT_3" ELSE 0 END AS "OUT_3",
    CASE WHEN (t."OUT_4" > 0) THEN t."OUT_4" ELSE 0 END AS "OUT_4",
    CASE WHEN (t."OUT_5" > 0) THEN t."OUT_5" ELSE 0 END AS "OUT_5"
   FROM "Hidden_Layer_3_BA" AS t
 ),
"Output_Layer_BA" AS
 ( SELECT
    t."index" as "index",
    -0.573920 + -0.347773 * t."OUT_0"  + -0.699845 * t."OUT_1"  + -0.707841 * t."OUT_2"  + -0.710840 * t."OUT_3"  + -0.307408 * t."OUT_4"  + -0.180942 * t."OUT_5" AS "OUT_0"
   FROM "Hidden_Layer_3_Activation" AS t
 )
 SELECT
    t."index" AS "index",
    t.OUT_0 AS "Estimator"
  FROM "Output_Layer_BA" AS t

SQL_OUT_PUT_LAST_LINES_END ('california_housing_small', 'MLPRegressor', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 64 entries, 0 to 63
Data columns (total 9 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     64 non-null     float32
 1   X_1     64 non-null     float32
 2   X_2     64 non-null     float32
 3   X_3     64 non-null     float32
 4   X_4     64 non-null     float32
 5   X_5     64 non-null     float32
 6   X_6     64 non-null     float32
 7   X_7     64 non-null     float32
 8   X_8     64 non-null     float32
dtypes: float32(9)
memory usage: 2.8 KB
              X_0        X_1   X_2     X_3    X_4     X_5    X_6     X_7  X_8
index                                                                        
0     -121.910004  36.630001  42.0   817.0  194.0   391.0  193.0  2.1776  0.0
1     -121.430000  38.660000  35.0  1814.0  367.0  1076.0  372.0  2.7179  0.0
2     -121.580002  39.500000  29.0  1947.0  383.0   925.0  337.0  2.1658  0.0
3     -120.239998  39.349998   8.0  4195.0  725.0   291.0  115.0  3.4792  0.0
4     -122.019997  38.369999  16.0  2495.0  331.0  1118.0  338.0  6.4894  0.0
...           ...        ...   ...     ...    ...     ...    ...     ...  ...
59    -118.209999  34.099998  36.0  2000.0  533.0  1234.0  535.0  3.7437  0.0
60    -117.139999  32.700001  43.0  1126.0  289.0  1132.0  294.0  2.1875  0.0
61    -117.940002  33.889999  30.0  2577.0  404.0  1076.0  374.0  6.7528  0.0
62    -118.419998  33.959999  44.0  1282.0  216.0   494.0  209.0  5.6180  0.0
63    -117.949997  34.040001  27.0  2610.0  846.0  2296.0  750.0  2.2740  0.0

[64 rows x 9 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 64 entries, 0 to 63
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      64 non-null     int64  
 1   Estimator  64 non-null     float64
dtypes: float64(1), int64(1)
memory usage: 1.1 KB
    index   Estimator
0       0  -51.071663
1       1 -113.328613
2       2 -116.837547
3       3 -214.097305
4       4 -146.987518
..    ...         ...
59     59 -126.578011
60     60  -79.614807
61     61 -150.954559
62     62  -76.016830
63     63 -175.896652

[64 rows x 2 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('california_housing_small', 'MLPRegressor') Estimator 0.000534355640411377
    index  SQL_Estimator  Py_Estimator  SQL_Error
48     48    -169.578262   -169.578842   0.000580
49     49    -376.938934   -376.940186   0.001251
50     50    -197.292648   -197.293274   0.000626
51     51     -83.733261    -83.733543   0.000282
52     52    -221.252823   -221.253525   0.000702
53     53     -86.230576    -86.230850   0.000275
54     54    -231.570740   -231.571518   0.000778
55     55     -82.713875    -82.714157   0.000282
56     56    -106.491142   -106.491470   0.000328
57     57     -91.557655    -91.557983   0.000328
58     58     -86.282402    -86.282677   0.000275
59     59    -126.578011   -126.578415   0.000404
60     60     -79.614807    -79.615051   0.000244
61     61    -150.954559   -150.955078   0.000519
62     62     -76.016830    -76.017067   0.000237
63     63    -175.896652   -175.897186   0.000534
MLLITE_REG_SQL_EXECUTION_STATUS ('california_housing_small', 'MLPRegressor', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/regression/MLPRegressor/mllite.MLPRegressor_california_housing_small_option_1_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('california_housing_small', 'MLPRegressor', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
"Input_Layer_BA" AS
 ( SELECT
    t."index" as "index",
    t."X_0" AS "OUT_0",
    t."X_1" AS "OUT_1",
    t."X_2" AS "OUT_2",
    t."X_3" AS "OUT_3",
    t."X_4" AS "OUT_4",
    t."X_5" AS "OUT_5",
    t."X_6" AS "OUT_6",
    t."X_7" AS "OUT_7",
    t."X_8" AS "OUT_8"
 FROM "model_input" AS t
),
"Hidden_Layer_1_BA" AS
 ( SELECT
    t."index" as "index",
    -0.482903 + -0.027799 * t."OUT_0"  + 0.094180 * t."OUT_1"  + 0.548454 * t."OUT_2"  + 0.644643 * t."OUT_3"  + 0.324282 * t."OUT_4"  + 0.263548 * t."OUT_5"  + -0.165742 * t."OUT_6"  + -0.080713 * t."OUT_7"  + -0.207529 * t."OUT_8"
SQL_OUT_PUT_FIRST_LINES_END ('california_housing_small', 'MLPRegressor', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('california_housing_small', 'MLPRegressor', 'sqlite')
61712 * t."OUT_4"  + 0.454500 * t."OUT_5"  + 0.333405 * t."OUT_6"  + -0.296561 * t."OUT_7" AS "OUT_5"
   FROM "Hidden_Layer_2_Activation" AS t
 ),
"Hidden_Layer_3_Activation" AS
 ( SELECT
    t."index" as "index",
    CASE WHEN (t."OUT_0" > 0) THEN t."OUT_0" ELSE 0 END AS "OUT_0",
    CASE WHEN (t."OUT_1" > 0) THEN t."OUT_1" ELSE 0 END AS "OUT_1",
    CASE WHEN (t."OUT_2" > 0) THEN t."OUT_2" ELSE 0 END AS "OUT_2",
    CASE WHEN (t."OUT_3" > 0) THEN t."OUT_3" ELSE 0 END AS "OUT_3",
    CASE WHEN (t."OUT_4" > 0) THEN t."OUT_4" ELSE 0 END AS "OUT_4",
    CASE WHEN (t."OUT_5" > 0) THEN t."OUT_5" ELSE 0 END AS "OUT_5"
   FROM "Hidden_Layer_3_BA" AS t
 ),
"Output_Layer_BA" AS
 ( SELECT
    t."index" as "index",
    -0.573920 + -0.347773 * t."OUT_0"  + -0.699845 * t."OUT_1"  + -0.707841 * t."OUT_2"  + -0.710840 * t."OUT_3"  + -0.307408 * t."OUT_4"  + -0.180942 * t."OUT_5" AS "OUT_0"
   FROM "Hidden_Layer_3_Activation" AS t
 )
 SELECT
    t."index" AS "index",
    t.OUT_0 AS "Estimator"
  FROM "Output_Layer_BA" AS t

SQL_OUT_PUT_LAST_LINES_END ('california_housing_small', 'MLPRegressor', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 64 entries, 0 to 63
Data columns (total 9 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     64 non-null     float32
 1   X_1     64 non-null     float32
 2   X_2     64 non-null     float32
 3   X_3     64 non-null     float32
 4   X_4     64 non-null     float32
 5   X_5     64 non-null     float32
 6   X_6     64 non-null     float32
 7   X_7     64 non-null     float32
 8   X_8     64 non-null     float32
dtypes: float32(9)
memory usage: 2.8 KB
              X_0        X_1   X_2     X_3    X_4     X_5    X_6     X_7  X_8
index                                                                        
0     -121.910004  36.630001  42.0   817.0  194.0   391.0  193.0  2.1776  0.0
1     -121.430000  38.660000  35.0  1814.0  367.0  1076.0  372.0  2.7179  0.0
2     -121.580002  39.500000  29.0  1947.0  383.0   925.0  337.0  2.1658  0.0
3     -120.239998  39.349998   8.0  4195.0  725.0   291.0  115.0  3.4792  0.0
4     -122.019997  38.369999  16.0  2495.0  331.0  1118.0  338.0  6.4894  0.0
...           ...        ...   ...     ...    ...     ...    ...     ...  ...
59    -118.209999  34.099998  36.0  2000.0  533.0  1234.0  535.0  3.7437  0.0
60    -117.139999  32.700001  43.0  1126.0  289.0  1132.0  294.0  2.1875  0.0
61    -117.940002  33.889999  30.0  2577.0  404.0  1076.0  374.0  6.7528  0.0
62    -118.419998  33.959999  44.0  1282.0  216.0   494.0  209.0  5.6180  0.0
63    -117.949997  34.040001  27.0  2610.0  846.0  2296.0  750.0  2.2740  0.0

[64 rows x 9 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 64 entries, 0 to 63
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      64 non-null     int64  
 1   Estimator  64 non-null     float64
dtypes: float64(1), int64(1)
memory usage: 1.1 KB
    index   Estimator
0       0  -51.071668
1       1 -113.328613
2       2 -116.837544
3       3 -214.097289
4       4 -146.987516
..    ...         ...
59     59 -126.577996
60     60  -79.614796
61     61 -150.954580
62     62  -76.016818
63     63 -175.896625

[64 rows x 2 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('california_housing_small', 'MLPRegressor') Estimator 0.0005397993077550511
    index  SQL_Estimator  Py_Estimator  SQL_Error
48     48    -169.578277   -169.578842   0.000565
49     49    -376.938869   -376.940186   0.001317
50     50    -197.292636   -197.293274   0.000638
51     51     -83.733265    -83.733543   0.000279
52     52    -221.252836   -221.253525   0.000689
53     53     -86.230575    -86.230850   0.000275
54     54    -231.570757   -231.571518   0.000761
55     55     -82.713873    -82.714157   0.000284
56     56    -106.491122   -106.491470   0.000348
57     57     -91.557666    -91.557983   0.000318
58     58     -86.282389    -86.282677   0.000288
59     59    -126.577996   -126.578415   0.000419
60     60     -79.614796    -79.615051   0.000256
61     61    -150.954580   -150.955078   0.000498
62     62     -76.016818    -76.017067   0.000249
63     63    -175.896625   -175.897186   0.000561
MLLITE_REG_SQL_EXECUTION_STATUS ('california_housing_small', 'MLPRegressor', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/regression/MLPRegressor/mllite.MLPRegressor_california_housing_small_option_1_pgsql.sql'



SQL_OUT_PUT_FIRST_LINES_START ('california_housing_small', 'MLPRegressor', 'pgsql')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
"Input_Layer_BA" AS
 ( SELECT
    t."index" as "index",
    t."X_0" AS "OUT_0",
    t."X_1" AS "OUT_1",
    t."X_2" AS "OUT_2",
    t."X_3" AS "OUT_3",
    t."X_4" AS "OUT_4",
    t."X_5" AS "OUT_5",
    t."X_6" AS "OUT_6",
    t."X_7" AS "OUT_7",
    t."X_8" AS "OUT_8"
 FROM "model_input" AS t
),
"Hidden_Layer_1_BA" AS
 ( SELECT
    t."index" as "index",
    -0.482903 + -0.027799 * t."OUT_0"  + 0.094180 * t."OUT_1"  + 0.548454 * t."OUT_2"  + 0.644643 * t."OUT_3"  + 0.324282 * t."OUT_4"  + 0.263548 * t."OUT_5"  + -0.165742 * t."OUT_6"  + -0.080713 * t."OUT_7"  + -0.207529 * t."OUT_8"
SQL_OUT_PUT_FIRST_LINES_END ('california_housing_small', 'MLPRegressor', 'pgsql')
SQL_OUT_PUT_LAST_LINES_START ('california_housing_small', 'MLPRegressor', 'pgsql')
61712 * t."OUT_4"  + 0.454500 * t."OUT_5"  + 0.333405 * t."OUT_6"  + -0.296561 * t."OUT_7" AS "OUT_5"
   FROM "Hidden_Layer_2_Activation" AS t
 ),
"Hidden_Layer_3_Activation" AS
 ( SELECT
    t."index" as "index",
    CASE WHEN (t."OUT_0" > 0) THEN t."OUT_0" ELSE 0 END AS "OUT_0",
    CASE WHEN (t."OUT_1" > 0) THEN t."OUT_1" ELSE 0 END AS "OUT_1",
    CASE WHEN (t."OUT_2" > 0) THEN t."OUT_2" ELSE 0 END AS "OUT_2",
    CASE WHEN (t."OUT_3" > 0) THEN t."OUT_3" ELSE 0 END AS "OUT_3",
    CASE WHEN (t."OUT_4" > 0) THEN t."OUT_4" ELSE 0 END AS "OUT_4",
    CASE WHEN (t."OUT_5" > 0) THEN t."OUT_5" ELSE 0 END AS "OUT_5"
   FROM "Hidden_Layer_3_BA" AS t
 ),
"Output_Layer_BA" AS
 ( SELECT
    t."index" as "index",
    -0.573920 + -0.347773 * t."OUT_0"  + -0.699845 * t."OUT_1"  + -0.707841 * t."OUT_2"  + -0.710840 * t."OUT_3"  + -0.307408 * t."OUT_4"  + -0.180942 * t."OUT_5" AS "OUT_0"
   FROM "Hidden_Layer_3_Activation" AS t
 )
 SELECT
    t."index" AS "index",
    t.OUT_0 AS "Estimator"
  FROM "Output_Layer_BA" AS t

SQL_OUT_PUT_LAST_LINES_END ('california_housing_small', 'MLPRegressor', 'pgsql') 




COPY_TRAINING_DATA_TO_SQLITE_START
