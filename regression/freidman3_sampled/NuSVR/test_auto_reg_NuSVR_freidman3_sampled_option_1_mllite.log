          X_0          X_1       X_2        X_3    target
0   17.761710   423.498320  0.135270  10.148129  1.270144
1   45.437614   168.841197  0.343817   3.279963  0.906663
2   69.792322   473.447926  0.233546   3.411073  1.007753
3   67.667095   938.672588  0.652046   9.523154  1.460687
4   55.118421  1002.086076  0.726658   4.570617  1.495246
5   52.067586   534.256140  0.155164   8.526538  1.009971
6   50.992903   814.561313  0.257439   5.994628  1.332255
7   34.347892   205.928122  0.720020   9.414677  1.343157
8   63.010204   221.354390  0.814630   5.897069  1.234627
9   22.605109  1660.837003  0.731124   9.374556  1.552182
10  13.280703   643.716771  0.520814   4.842079  1.531203
11   7.606344  1112.226604  0.732761   6.140375  1.561464
MLLITE_MODEL_SET_OPTIONS NuSVR {"nu" : 0.1}
MLLITE_MODEL_OPTIONS_DEFAULT NuSVR { "max_iter" : 128 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING NuSVR { "nu" : 0.1,  "max_iter" : 128  , }
MLLITE_MODEL_JSON_AFTER_SETTING NuSVR None
('OPERATION_START', 'TRAINING')
[[1.77617092e+01 4.23498322e+02 1.35270208e-01 1.01481285e+01]
 [4.54376144e+01 1.68841202e+02 3.43817413e-01 3.27996254e+00]
 [6.97923203e+01 4.73447937e+02 2.33546272e-01 3.41107249e+00]
 [6.76670914e+01 9.38672607e+02 6.52046204e-01 9.52315426e+00]
 [5.51184196e+01 1.00208606e+03 7.26658285e-01 4.57061768e+00]] [1.2701445 0.9066629 1.0077531 1.4606868 1.4952464]
MLLITE_FIT_USING_MODEL mllite_nu_svm_reg.NuSVR_ff4_ff4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_NU_REGRESSOR_FIT' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_NU_REGRESSOR_FIT' 2 4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_NU_REGRESSOR_FIT' 3 4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_NU_REGRESSOR_FIT' 4 4
('OPERATION_END_ELAPSED', 0.006, 'TRAINING')
{ "nu" : 0.1,  "max_iter" : 128  , }
{ "nu" : 0.1,  "max_iter" : 128  , }
{
	"metadata" : { "model" : "Vapnik_NuSVR_RBF", "version" : "2024-W14", "signature" : "ff4_ff4"},
	"options" : {"svm_type" : "nu_svr", "kernel" : "rbf", "degree" : 3, "gamma" : 0.000002, "coef0" : 0.000000, "cache_size" : 300, "tol" : 0.001000, "nu" : 0.100000, "epsilon" : 0.000000, "shrinking" : 0, "probability" : 0, "C" : 1.000000, "max_iter" : 128, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 12, "dataset_features" : 4 },
	"svm_model" : {
	"classes" : 2,
	"L" : 4,
	"SupportVectors" : {
		"SV_0" : [ 45.437614, 168.841202, 0.343817, 3.279963 ],
		"SV_1" : [ 52.067585, 534.256165, 0.155164, 8.526538 ],
		"SV_2" : [ 22.605108, 1660.837036, 0.731124, 9.374556 ],
		"SV_3" : [ 13.280704, 643.716797, 0.520814, 4.842079 ]
	},
	"SupportVectorsCoefs" : {
		"SV_coef_0" : [ -0.103002, -0.496998, 0.019351, 0.580649 ]
	},
	"rho" : [ -1.258726 ],
	"nSV" : [ 4 ],
	"probA" : [ ],
	"probB" : [ ],
	"n_iter" : [ 9 ]
}
}
WRITING_JSON_CODE 'logs/auto_tests/regression/NuSVR/mllite.NuSVR_freidman3_sampled_option_1.json'

MLLITE_MODEL_SET_OPTIONS NuSVR {"nu" : 0.1}
MLLITE_MODEL_OPTIONS_DEFAULT NuSVR { "max_iter" : 128 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING NuSVR { "nu" : 0.1,  "max_iter" : 128  , }
MLLITE_MODEL_JSON_AFTER_SETTING NuSVR None
MLLITE_RELOADING_MODEL mllite_nu_svm_reg.NuSVR_ff4_ff4
{
	"metadata" : { "model" : "Vapnik_NuSVR_RBF", "version" : "2024-W14", "signature" : "ff4_ff4"},
	"options" : {"svm_type" : "nu_svr", "kernel" : "rbf", "degree" : 3, "gamma" : 0.000002, "coef0" : 0.000000, "cache_size" : 300, "tol" : 0.001000, "nu" : 0.100000, "epsilon" : 0.000000, "shrinking" : 0, "probability" : 0, "C" : 1.000000, "max_iter" : 128, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 12, "dataset_features" : 4 },
	"svm_model" : {
	"classes" : 2,
	"L" : 4,
	"SupportVectors" : {
		"SV_0" : [ 45.437614, 168.841202, 0.343817, 3.279963 ],
		"SV_1" : [ 52.067585, 534.256165, 0.155164, 8.526538 ],
		"SV_2" : [ 22.605108, 1660.837036, 0.731124, 9.374556 ],
		"SV_3" : [ 13.280704, 643.716797, 0.520814, 4.842079 ]
	},
	"SupportVectorsCoefs" : {
		"SV_coef_0" : [ -0.103002, -0.496998, 0.019351, 0.580649 ]
	},
	"rho" : [ -1.258726 ],
	"nSV" : [ 4 ],
	"probA" : [ ],
	"probB" : [ ],
	"n_iter" : [ 9 ]
}
}
BEAUTIFIED_JSON_START
{
	"dataset" : 	{
		"dataset_features" : 4,
		"dataset_rows" : 12
	},
	"metadata" :  { "model" : "Vapnik_NuSVR_RBF", "signature" : "ff4_ff4", "version" : "2024-W14" },
	"options" :  { "C" : 1.0, "cache_size" : 300, "coef0" : 0.0, "degree" : 3, "epsilon" : 0.0, "gamma" : 2e-06, "kernel" : "rbf", "max_iter" : 128, "nu" : 0.1, "probability" : 0, "random_state" : 1789, "shrinking" : 0, "svm_type" : "nu_svr", "tol" : 0.001 },
	"svm_model" : 	{
		"L" : 4,
		"SupportVectors" : 	{
			"SV_0" : [ 45.437614, 168.841202, 0.343817, 3.279963 ],
			"SV_1" : [ 52.067585, 534.256165, 0.155164, 8.526538 ],
			"SV_2" : [ 22.605108, 1660.837036, 0.731124, 9.374556 ],
			"SV_3" : [ 13.280704, 643.716797, 0.520814, 4.842079 ]
		},
		"SupportVectorsCoefs" : 	{
			"SV_coef_0" : [ -0.103002, -0.496998, 0.019351, 0.580649 ]
		},
		"classes" : 2,
		"nSV" : [ 4 ],
		"n_iter" : [ 9 ],
		"probA" : [  ],
		"probB" : [  ],
		"rho" : [ -1.258726 ]
	}
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
[1.2132983 1.1466084 1.2264217 1.359085  1.3662875 1.2495294 1.3381132
 1.1533737 1.1545832 1.3124306 1.2914518 1.3715466]
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
[1.2124202 1.1445842 1.2258668 1.3609226 1.3679001 1.2495854 1.34005
 1.1513638 1.1525564 1.311008  1.2925851 1.3725128]
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
MODEL_PERFS {'class_name': 'mllite.NuSVR', 'model_name': 'NuSVR', 'options': '{"nu" : 0.1}', 'dataset': 'freidman3_sampled', 'size': 12, 'mse': 0.032204315, 'mae': 0.16089033, 'mape': 0.1302147, 'r2': 0.33455005427011086}
WRITING_PERF_CODE 'logs/auto_tests/regression/NuSVR/mllite.NuSVR_freidman3_sampled_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.NuSVR', 'model_name': 'NuSVR', 'options': '{"nu" : 0.1}', 'dataset': 'freidman3_sampled', 'training_time_in_sec': 0.006, 'prediction_time_in_sec': 0.0}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 0 4
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 2 4
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 3 4
{
   "Contributions" : {
      "X_0" : [ -0.000157 ],
      "X_1" : [ 0.008692 ],
      "X_2" : [ 0.000000 ],
      "X_3" : [ 0.000000 ]   
   },
   "Most_Contributive_Features" : {
      "y" : [ 1, 0, 3, 2 ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/regression/NuSVR/mllite.NuSVR_freidman3_sampled_option_1_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/regression/NuSVR/mllite.NuSVR_freidman3_sampled_option_1_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('freidman3_sampled', 'NuSVR', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "freidman3_sampled" AS "ADS" 
 )
,"SV_data" AS
 ( SELECT 
   "Values"."sv_idx" AS "sv_idx",
   "Values"."coeff" AS "coeff",
   "Values"."sv_0" AS "sv_0",
   "Values"."sv_1" AS "sv_1",
   "Values"."sv_2" AS "sv_2",
   "Values"."sv_3" AS "sv_3"
  FROM
  (
     SELECT 0 AS "sv_idx", -0.103002 AS "coeff", 45.437614 AS "sv_0", 168.841202 AS "sv_1", 0.343817 AS "sv_2", 3.279963 AS "sv_3"
     UNION ALL
     SELECT 1 AS "sv_idx", -0.496998 AS "coeff", 52.067585 AS "sv_0", 534.256165 AS "sv_1", 0.155164 AS "sv_2", 8.526538 AS "sv_3"
     UNION ALL
     SELECT 2 AS "sv_idx", 0.019351 AS "coeff", 22.605108 AS "sv_0", 1660.837036 AS "sv_1", 0.731124 AS "sv_2", 9.374556 AS "sv_3"
     UNION ALL
     SELECT 3 AS "sv_idx", 0.580649 AS "coeff", 13.280704 AS "sv_0", 643.716797 AS "sv_1", 0.520814 AS "sv_2", 4.84207
SQL_OUT_PUT_FIRST_LINES_END ('freidman3_sampled', 'NuSVR', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('freidman3_sampled', 'NuSVR', 'duckdb')
374556 AS "sv_3"
     UNION ALL
     SELECT 3 AS "sv_idx", 0.580649 AS "coeff", 13.280704 AS "sv_0", 643.716797 AS "sv_1", 0.520814 AS "sv_2", 4.842079 AS "sv_3"
   ) AS "Values"
 )
,"Kernel_DotProd" AS
 ( SELECT
    dp."index" as "index",
    dp."dot_product" AS "Estimator"
   FROM
    (SELECT
      full_join_data_sv."index" AS "index",
      sum(CAST(full_join_data_sv.dot_prod AS FLOAT)) - -1.258726 AS dot_product
     FROM
       (SELECT
          model_input."index" AS "index",
          "SV_data"."coeff" *  EXP( LEAST( GREATEST( CAST(-32.0 AS FLOAT), -0.000002 * (power(model_input."X_0" - "SV_data".sv_0, 2) + power(model_input."X_1" - "SV_data".sv_1, 2) + power(model_input."X_2" - "SV_data".sv_2, 2) + power(model_input."X_3" - "SV_data".sv_3, 2)) ), CAST(32.0 AS FLOAT) ) )  AS "dot_prod" 
        FROM
          model_input, "SV_data"
       ) AS full_join_data_sv
     GROUP BY full_join_data_sv."index"
    ) AS dp )
SELECT
  t."index" as "index",
  t."Estimator" as "Estimator"
FROM "Kernel_DotProd" AS t

SQL_OUT_PUT_LAST_LINES_END ('freidman3_sampled', 'NuSVR', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 12 entries, 0 to 11
Data columns (total 4 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     12 non-null     float32
 1   X_1     12 non-null     float32
 2   X_2     12 non-null     float32
 3   X_3     12 non-null     float32
dtypes: float32(4)
memory usage: 288.0 bytes
             X_0          X_1       X_2        X_3
index                                             
0      17.761709   423.498322  0.135270  10.148129
1      45.437614   168.841202  0.343817   3.279963
2      69.792320   473.447937  0.233546   3.411072
3      67.667091   938.672607  0.652046   9.523154
4      55.118420  1002.086060  0.726658   4.570618
5      52.067585   534.256165  0.155164   8.526538
6      50.992905   814.561340  0.257439   5.994627
7      34.347893   205.928116  0.720020   9.414678
8      63.010204   221.354385  0.814630   5.897069
9      22.605108  1660.837036  0.731124   9.374556
10     13.280704   643.716797  0.520814   4.842079
11      7.606344  1112.226562  0.732761   6.140375
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 12 entries, 0 to 11
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      12 non-null     int64  
 1   Estimator  12 non-null     float64
dtypes: float64(1), int64(1)
memory usage: 324.0 bytes
    index  Estimator
0       0   1.212420
1       1   1.144584
2       2   1.225867
3       3   1.360922
4       4   1.367900
5       5   1.249585
6       6   1.340050
7       7   1.151364
8       8   1.152556
9       9   1.311008
10     10   1.292585
11     11   1.372513
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('freidman3_sampled', 'NuSVR') Estimator 0.0013715906158419482
    index  SQL_Estimator  Py_Estimator  SQL_Error
0       0       1.212420      1.213298  -0.000878
1       1       1.144584      1.146608  -0.002024
2       2       1.225867      1.226422  -0.000555
3       3       1.360922      1.359085   0.001838
4       4       1.367900      1.366287   0.001613
5       5       1.249585      1.249529   0.000056
6       6       1.340050      1.338113   0.001937
7       7       1.151364      1.153374  -0.002010
8       8       1.152556      1.154583  -0.002027
9       9       1.311008      1.312431  -0.001423
10     10       1.292585      1.291452   0.001133
11     11       1.372513      1.371547   0.000966
MLLITE_REG_SQL_EXECUTION_STATUS ('freidman3_sampled', 'NuSVR', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/regression/NuSVR/mllite.NuSVR_freidman3_sampled_option_1_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('freidman3_sampled', 'NuSVR', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "freidman3_sampled" AS "ADS" 
 )
,"SV_data" AS
 ( SELECT 
   "Values"."sv_idx" AS "sv_idx",
   "Values"."coeff" AS "coeff",
   "Values"."sv_0" AS "sv_0",
   "Values"."sv_1" AS "sv_1",
   "Values"."sv_2" AS "sv_2",
   "Values"."sv_3" AS "sv_3"
  FROM
  (
     SELECT 0 AS "sv_idx", -0.103002 AS "coeff", 45.437614 AS "sv_0", 168.841202 AS "sv_1", 0.343817 AS "sv_2", 3.279963 AS "sv_3"
     UNION ALL
     SELECT 1 AS "sv_idx", -0.496998 AS "coeff", 52.067585 AS "sv_0", 534.256165 AS "sv_1", 0.155164 AS "sv_2", 8.526538 AS "sv_3"
     UNION ALL
     SELECT 2 AS "sv_idx", 0.019351 AS "coeff", 22.605108 AS "sv_0", 1660.837036 AS "sv_1", 0.731124 AS "sv_2", 9.374556 AS "sv_3"
     UNION ALL
     SELECT 3 AS "sv_idx", 0.580649 AS "coeff", 13.280704 AS "sv_0", 643.716797 AS "sv_1", 0.520814 AS "sv_2", 4.84207
SQL_OUT_PUT_FIRST_LINES_END ('freidman3_sampled', 'NuSVR', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('freidman3_sampled', 'NuSVR', 'sqlite')
_2", 9.374556 AS "sv_3"
     UNION ALL
     SELECT 3 AS "sv_idx", 0.580649 AS "coeff", 13.280704 AS "sv_0", 643.716797 AS "sv_1", 0.520814 AS "sv_2", 4.842079 AS "sv_3"
   ) AS "Values"
 )
,"Kernel_DotProd" AS
 ( SELECT
    dp."index" as "index",
    dp."dot_product" AS "Estimator"
   FROM
    (SELECT
      full_join_data_sv."index" AS "index",
      sum(CAST(full_join_data_sv.dot_prod AS FLOAT)) - -1.258726 AS dot_product
     FROM
       (SELECT
          model_input."index" AS "index",
          "SV_data"."coeff" *  EXP( MIN( MAX( CAST(-32.0 AS FLOAT), -0.000002 * (power(model_input."X_0" - "SV_data".sv_0, 2) + power(model_input."X_1" - "SV_data".sv_1, 2) + power(model_input."X_2" - "SV_data".sv_2, 2) + power(model_input."X_3" - "SV_data".sv_3, 2)) ), CAST(32.0 AS FLOAT) ) )  AS "dot_prod" 
        FROM
          model_input, "SV_data"
       ) AS full_join_data_sv
     GROUP BY full_join_data_sv."index"
    ) AS dp )
SELECT
  t."index" as "index",
  t."Estimator" as "Estimator"
FROM "Kernel_DotProd" AS t

SQL_OUT_PUT_LAST_LINES_END ('freidman3_sampled', 'NuSVR', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 12 entries, 0 to 11
Data columns (total 4 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     12 non-null     float32
 1   X_1     12 non-null     float32
 2   X_2     12 non-null     float32
 3   X_3     12 non-null     float32
dtypes: float32(4)
memory usage: 288.0 bytes
             X_0          X_1       X_2        X_3
index                                             
0      17.761709   423.498322  0.135270  10.148129
1      45.437614   168.841202  0.343817   3.279963
2      69.792320   473.447937  0.233546   3.411072
3      67.667091   938.672607  0.652046   9.523154
4      55.118420  1002.086060  0.726658   4.570618
5      52.067585   534.256165  0.155164   8.526538
6      50.992905   814.561340  0.257439   5.994627
7      34.347893   205.928116  0.720020   9.414678
8      63.010204   221.354385  0.814630   5.897069
9      22.605108  1660.837036  0.731124   9.374556
10     13.280704   643.716797  0.520814   4.842079
11      7.606344  1112.226562  0.732761   6.140375
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 12 entries, 0 to 11
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      12 non-null     int64  
 1   Estimator  12 non-null     float64
dtypes: float64(1), int64(1)
memory usage: 324.0 bytes
    index  Estimator
0       0   1.212420
1       1   1.144584
2       2   1.225867
3       3   1.360922
4       4   1.367900
5       5   1.249585
6       6   1.340050
7       7   1.151364
8       8   1.152556
9       9   1.311008
10     10   1.292585
11     11   1.372513
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('freidman3_sampled', 'NuSVR') Estimator 0.001371589627928956
    index  SQL_Estimator  Py_Estimator  SQL_Error
0       0       1.212420      1.213298  -0.000878
1       1       1.144584      1.146608  -0.002024
2       2       1.225867      1.226422  -0.000555
3       3       1.360922      1.359085   0.001837
4       4       1.367900      1.366287   0.001613
5       5       1.249585      1.249529   0.000056
6       6       1.340050      1.338113   0.001937
7       7       1.151364      1.153374  -0.002010
8       8       1.152556      1.154583  -0.002027
9       9       1.311008      1.312431  -0.001423
10     10       1.292585      1.291452   0.001133
11     11       1.372513      1.371547   0.000966
MLLITE_REG_SQL_EXECUTION_STATUS ('freidman3_sampled', 'NuSVR', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
