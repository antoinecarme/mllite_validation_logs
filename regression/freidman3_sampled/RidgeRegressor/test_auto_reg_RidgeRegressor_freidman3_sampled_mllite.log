          X_0          X_1       X_2        X_3    target
0   17.761710   423.498320  0.135270  10.148129  1.270144
1   45.437614   168.841197  0.343817   3.279963  0.906663
2   69.792322   473.447926  0.233546   3.411073  1.007753
3   67.667095   938.672588  0.652046   9.523154  1.460687
4   55.118421  1002.086076  0.726658   4.570617  1.495246
5   52.067586   534.256140  0.155164   8.526538  1.009971
6   50.992903   814.561313  0.257439   5.994628  1.332255
7   34.347892   205.928122  0.720020   9.414677  1.343157
8   63.010204   221.354390  0.814630   5.897069  1.234627
9   22.605109  1660.837003  0.731124   9.374556  1.552182
10  13.280703   643.716771  0.520814   4.842079  1.531203
11   7.606344  1112.226604  0.732761   6.140375  1.561464
MLLITE_MODEL_SET_OPTIONS RidgeRegressor None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeRegressor { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeRegressor { ,   , }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeRegressor None
('OPERATION_START', 'TRAINING')
[[1.77617092e+01 4.23498322e+02 1.35270208e-01 1.01481285e+01]
 [4.54376144e+01 1.68841202e+02 3.43817413e-01 3.27996254e+00]
 [6.97923203e+01 4.73447937e+02 2.33546272e-01 3.41107249e+00]
 [6.76670914e+01 9.38672607e+02 6.52046204e-01 9.52315426e+00]
 [5.51184196e+01 1.00208606e+03 7.26658285e-01 4.57061768e+00]] [1.2701445 0.9066629 1.0077531 1.4606868 1.4952464]
MLLITE_FIT_USING_MODEL mllite_ridge_reg.RidgeRegressor_ff4_ff4
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_REGRESSOR_FIT' 1 2
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_REGRESSOR_FIT' 2 2
('OPERATION_END_ELAPSED', 0.008, 'TRAINING')
{ ,   , }
{ ,   , }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_ff4"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 12, "dataset_features" : 4 },
	"equations" : {
			"intercept" : 1.023200,
			"coeffs" : [ -0.002943, 0.000212, 0.387608, 0.010163 ]
		}
}
WRITING_JSON_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_freidman3_sampled.json'

MLLITE_MODEL_SET_OPTIONS RidgeRegressor None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeRegressor { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeRegressor { ,   , }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeRegressor None
MLLITE_RELOADING_MODEL mllite_ridge_reg.RidgeRegressor_ff4_ff4
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_ff4"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 12, "dataset_features" : 4 },
	"equations" : {
			"intercept" : 1.023200,
			"coeffs" : [ -0.002943, 0.000212, 0.387608, 0.010163 ]
		}
}
BEAUTIFIED_JSON_START
{
	"dataset" : 	{
		"dataset_features" : 4,
		"dataset_rows" : 12
	},
	"equations" : 	{
		"coeffs" : [ -0.002943, 0.000212, 0.387608, 0.010163 ],
		"intercept" : 1.0232
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_ff4", "version" : "2024-W14" },
	"options" :  { "alpha" : 1.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
[1.2162879 1.0918592 1.0433517 1.3725864 1.4015557 1.1300255 1.2065355
 1.3405328 1.260359  1.6874942 1.3716862 1.5830791]
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
[1.2162763 1.0918721 1.0433633 1.3725765 1.4015385 1.1300255 1.2065239
 1.3405378 1.2603773 1.6874338 1.3716646 1.5830352]
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
MODEL_PERFS {'class_name': 'mllite.RidgeRegressor', 'model_name': 'RidgeRegressor', 'options': None, 'dataset': 'freidman3_sampled', 'size': 12, 'mse': 0.010842905, 'mae': 0.08725146, 'mape': 0.0705157, 'r2': 0.7759489274207164}
WRITING_PERF_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_freidman3_sampled.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeRegressor', 'model_name': 'RidgeRegressor', 'options': None, 'dataset': 'freidman3_sampled', 'training_time_in_sec': 0.008, 'prediction_time_in_sec': 0.0}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 0 4
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 2 4
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 3 4
{
   "Contributions" : {
      "X_0" : [ -0.002474 ],
      "X_1" : [ 0.009286 ],
      "X_2" : [ 0.007602 ],
      "X_3" : [ 0.000940 ]   
   },
   "Most_Contributive_Features" : {
      "y" : [ 1, 2, 0, 3 ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_freidman3_sampled_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_freidman3_sampled_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('freidman3_sampled', 'RidgeRegressor', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "freidman3_sampled" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   1.023200 + -0.002943 * t."X_0" + 0.000212 * t."X_1" + 0.387608 * t."X_2" + 0.010163 * t."X_3" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_FIRST_LINES_END ('freidman3_sampled', 'RidgeRegressor', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('freidman3_sampled', 'RidgeRegressor', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "freidman3_sampled" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   1.023200 + -0.002943 * t."X_0" + 0.000212 * t."X_1" + 0.387608 * t."X_2" + 0.010163 * t."X_3" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_LAST_LINES_END ('freidman3_sampled', 'RidgeRegressor', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 12 entries, 0 to 11
Data columns (total 4 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     12 non-null     float32
 1   X_1     12 non-null     float32
 2   X_2     12 non-null     float32
 3   X_3     12 non-null     float32
dtypes: float32(4)
memory usage: 288.0 bytes
             X_0          X_1       X_2        X_3
index                                             
0      17.761709   423.498322  0.135270  10.148129
1      45.437614   168.841202  0.343817   3.279963
2      69.792320   473.447937  0.233546   3.411072
3      67.667091   938.672607  0.652046   9.523154
4      55.118420  1002.086060  0.726658   4.570618
5      52.067585   534.256165  0.155164   8.526538
6      50.992905   814.561340  0.257439   5.994627
7      34.347893   205.928116  0.720020   9.414678
8      63.010204   221.354385  0.814630   5.897069
9      22.605108  1660.837036  0.731124   9.374556
10     13.280704   643.716797  0.520814   4.842079
11      7.606344  1112.226562  0.732761   6.140375
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 12 entries, 0 to 11
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      12 non-null     int64  
 1   Estimator  12 non-null     float64
dtypes: float64(1), int64(1)
memory usage: 324.0 bytes
    index  Estimator
0       0   1.216276
1       1   1.091872
2       2   1.043363
3       3   1.372576
4       4   1.401538
5       5   1.130026
6       6   1.206524
7       7   1.340538
8       8   1.260377
9       9   1.687434
10     10   1.371665
11     11   1.583035
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('freidman3_sampled', 'RidgeRegressor') Estimator 1.86463197072347e-05
    index  SQL_Estimator  Py_Estimator  SQL_Error
0       0       1.216276      1.216288  -0.000012
1       1       1.091872      1.091859   0.000013
2       2       1.043363      1.043352   0.000012
3       3       1.372576      1.372586  -0.000010
4       4       1.401538      1.401556  -0.000017
5       5       1.130026      1.130026   0.000000
6       6       1.206524      1.206535  -0.000012
7       7       1.340538      1.340533   0.000005
8       8       1.260377      1.260359   0.000018
9       9       1.687434      1.687494  -0.000060
10     10       1.371665      1.371686  -0.000022
11     11       1.583035      1.583079  -0.000044
MLLITE_REG_SQL_EXECUTION_STATUS ('freidman3_sampled', 'RidgeRegressor', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_freidman3_sampled_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('freidman3_sampled', 'RidgeRegressor', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "freidman3_sampled" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   1.023200 + -0.002943 * t."X_0" + 0.000212 * t."X_1" + 0.387608 * t."X_2" + 0.010163 * t."X_3" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_FIRST_LINES_END ('freidman3_sampled', 'RidgeRegressor', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('freidman3_sampled', 'RidgeRegressor', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "freidman3_sampled" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  t."index" AS "index",
   1.023200 + -0.002943 * t."X_0" + 0.000212 * t."X_1" + 0.387608 * t."X_2" + 0.010163 * t."X_3" AS "Estimator"
  FROM model_input AS t
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_LAST_LINES_END ('freidman3_sampled', 'RidgeRegressor', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 12 entries, 0 to 11
Data columns (total 4 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     12 non-null     float32
 1   X_1     12 non-null     float32
 2   X_2     12 non-null     float32
 3   X_3     12 non-null     float32
dtypes: float32(4)
memory usage: 288.0 bytes
             X_0          X_1       X_2        X_3
index                                             
0      17.761709   423.498322  0.135270  10.148129
1      45.437614   168.841202  0.343817   3.279963
2      69.792320   473.447937  0.233546   3.411072
3      67.667091   938.672607  0.652046   9.523154
4      55.118420  1002.086060  0.726658   4.570618
5      52.067585   534.256165  0.155164   8.526538
6      50.992905   814.561340  0.257439   5.994627
7      34.347893   205.928116  0.720020   9.414678
8      63.010204   221.354385  0.814630   5.897069
9      22.605108  1660.837036  0.731124   9.374556
10     13.280704   643.716797  0.520814   4.842079
11      7.606344  1112.226562  0.732761   6.140375
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 12 entries, 0 to 11
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      12 non-null     int64  
 1   Estimator  12 non-null     float64
dtypes: float64(1), int64(1)
memory usage: 324.0 bytes
    index  Estimator
0       0   1.216276
1       1   1.091872
2       2   1.043363
3       3   1.372576
4       4   1.401538
5       5   1.130025
6       6   1.206524
7       7   1.340538
8       8   1.260377
9       9   1.687434
10     10   1.371665
11     11   1.583035
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('freidman3_sampled', 'RidgeRegressor') Estimator 1.8688427567433347e-05
    index  SQL_Estimator  Py_Estimator     SQL_Error
0       0       1.216276      1.216288 -1.167251e-05
1       1       1.091872      1.091859  1.285307e-05
2       2       1.043363      1.043352  1.164702e-05
3       3       1.372576      1.372586 -9.885020e-06
4       4       1.401538      1.401556 -1.716994e-05
5       5       1.130025      1.130026 -1.169957e-07
6       6       1.206524      1.206535 -1.169343e-05
7       7       1.340538      1.340533  5.058001e-06
8       8       1.260377      1.260359  1.824058e-05
9       9       1.687434      1.687494 -6.031161e-05
10     10       1.371665      1.371686 -2.167367e-05
11     11       1.583035      1.583079 -4.393929e-05
MLLITE_REG_SQL_EXECUTION_STATUS ('freidman3_sampled', 'RidgeRegressor', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
