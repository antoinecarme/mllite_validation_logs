          X_0          X_1       X_2        X_3    target
0   17.761710   423.498320  0.135270  10.148129  1.270144
1   45.437614   168.841197  0.343817   3.279963  0.906663
2   69.792322   473.447926  0.233546   3.411073  1.007753
3   67.667095   938.672588  0.652046   9.523154  1.460687
4   55.118421  1002.086076  0.726658   4.570617  1.495246
5   52.067586   534.256140  0.155164   8.526538  1.009971
6   50.992903   814.561313  0.257439   5.994628  1.332255
7   34.347892   205.928122  0.720020   9.414677  1.343157
8   63.010204   221.354390  0.814630   5.897069  1.234627
9   22.605109  1660.837003  0.731124   9.374556  1.552182
10  13.280703   643.716771  0.520814   4.842079  1.531203
11   7.606344  1112.226604  0.732761   6.140375  1.561464
MLLITE_MODEL_SET_OPTIONS RidgeRegressor {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeRegressor { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeRegressor { "alpha" : 0.0000001,   , }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeRegressor None
('OPERATION_START', 'TRAINING')
[[1.77617092e+01 4.23498322e+02 1.35270208e-01 1.01481285e+01]
 [4.54376144e+01 1.68841202e+02 3.43817413e-01 3.27996254e+00]
 [6.97923203e+01 4.73447937e+02 2.33546272e-01 3.41107249e+00]
 [6.76670914e+01 9.38672607e+02 6.52046204e-01 9.52315426e+00]
 [5.51184196e+01 1.00208606e+03 7.26658285e-01 4.57061768e+00]] [1.2701445 0.9066629 1.0077531 1.4606868 1.4952464]
MLLITE_FIT_USING_MODEL mllite_ridge_reg.RidgeRegressor_ff4_ff4
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_REGRESSOR_FIT' 1 2
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_REGRESSOR_FIT' 2 2
('OPERATION_END_ELAPSED', 0.005, 'TRAINING')
{ "alpha" : 0.0000001,   , }
{ "alpha" : 0.0000001,   , }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_ff4"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 12, "dataset_features" : 4 },
	"equations" : {
			"intercept" : 1.010593,
			"coeffs" : [ -0.003103, 0.000223, 0.412363, 0.010101 ]
		}
}
WRITING_JSON_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_freidman3_sampled_option_1.json'

MLLITE_MODEL_SET_OPTIONS RidgeRegressor {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeRegressor { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeRegressor { "alpha" : 0.0000001,   , }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeRegressor None
MLLITE_RELOADING_MODEL mllite_ridge_reg.RidgeRegressor_ff4_ff4
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_ff4"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 12, "dataset_features" : 4 },
	"equations" : {
			"intercept" : 1.010593,
			"coeffs" : [ -0.003103, 0.000223, 0.412363, 0.010101 ]
		}
}
BEAUTIFIED_JSON_START
{
	"dataset" : 	{
		"dataset_features" : 4,
		"dataset_rows" : 12
	},
	"equations" : 	{
		"coeffs" : [ -0.003103, 0.000223, 0.412363, 0.010101 ],
		"intercept" : 1.010593
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_ff4", "version" : "2024-W12" },
	"options" :  { "alpha" : 0.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
[1.208056  1.0821083 1.0302075 1.3746886 1.4084817 1.1180928 1.2004299
 1.3418753 1.2598575 1.7063887 1.3763717 1.5987954]
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
[1.2082053 1.0821602 1.0303675 1.3750192 1.4088407 1.118277  1.2007194
 1.3419409 1.2599242 1.706997  1.376606  1.5992044]
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
MODEL_PERFS {'class_name': 'mllite.RidgeRegressor', 'model_name': 'RidgeRegressor', 'options': '{"alpha" : 0.0000001}', 'dataset': 'freidman3_sampled', 'size': 12, 'mse': 0.010743048, 'mae': 0.08713168, 'mape': 0.069445044, 'r2': 0.7780123519324438}
WRITING_PERF_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_freidman3_sampled_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeRegressor', 'model_name': 'RidgeRegressor', 'options': '{"alpha" : 0.0000001}', 'dataset': 'freidman3_sampled', 'training_time_in_sec': 0.005, 'prediction_time_in_sec': 0.0}
WRITING_SQL_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_freidman3_sampled_option_1.sql'



SQL_OUT_PUT_FIRST_LINES_START
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  model_input."index" AS "index",
   1.010593 + -0.003103 * X_0 + 0.000223 * X_1 + 0.412363 * X_2 + 0.010101 * X_3 AS "Estimator"
  FROM model_input
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_FIRST_LINES_END
SQL_OUT_PUT_LAST_LINES_START
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  model_input."index" AS "index",
   1.010593 + -0.003103 * X_0 + 0.000223 * X_1 + 0.412363 * X_2 + 0.010101 * X_3 AS "Estimator"
  FROM model_input
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_LAST_LINES_END




COPY_TRAINING_DATA_TO_SQLITE_START
          X_0          X_1       X_2        X_3  KEY
0   17.761709   423.498322  0.135270  10.148129    0
1   45.437614   168.841202  0.343817   3.279963    1
2   69.792320   473.447937  0.233546   3.411072    2
3   67.667091   938.672607  0.652046   9.523154    3
4   55.118420  1002.086060  0.726658   4.570618    4
5   52.067585   534.256165  0.155164   8.526538    5
6   50.992905   814.561340  0.257439   5.994627    6
7   34.347893   205.928116  0.720020   9.414678    7
8   63.010204   221.354385  0.814630   5.897069    8
9   22.605108  1660.837036  0.731124   9.374556    9
10  13.280704   643.716797  0.520814   4.842079   10
11   7.606344  1112.226562  0.732761   6.140375   11
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
    index  Estimator
0       0   1.208205
1       1   1.082160
2       2   1.030367
3       3   1.375019
4       4   1.408841
5       5   1.118277
6       6   1.200719
7       7   1.341941
8       8   1.259924
9       9   1.706997
10     10   1.376606
11     11   1.599204
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
    index  SQL_Estimator  Py_Estimator
0       0       1.208205      1.208056
1       1       1.082160      1.082108
2       2       1.030367      1.030208
3       3       1.375019      1.374689
4       4       1.408841      1.408482
5       5       1.118277      1.118093
6       6       1.200719      1.200430
7       7       1.341941      1.341875
8       8       1.259924      1.259858
9       9       1.706997      1.706389
10     10       1.376606      1.376372
11     11       1.599204      1.598795
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
