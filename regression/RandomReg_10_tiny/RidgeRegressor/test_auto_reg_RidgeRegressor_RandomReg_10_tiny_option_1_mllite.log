         X_0       X_1       X_2  ...       X_8       X_9      target
0  -0.478793  2.502870 -0.103623  ... -1.647981  0.327583   49.318079
1   1.195055 -1.450382 -0.468737  ...  0.311669  0.685749   -0.276592
2  -0.648732 -0.880620  0.202193  ... -0.548644 -0.541692 -185.910228
3  -0.612877  0.045409  0.558935  ... -0.258238 -0.097936   33.841240
4  -0.749045 -0.067925  0.967609  ...  0.132868 -0.324339   65.232160
5  -0.695245  0.529279 -0.012289  ... -0.321756  0.330976  -28.928501
6  -0.304252 -2.418750  0.148738  ... -0.113479 -1.359821 -148.117709
7   2.688408 -0.118800  0.359897  ... -0.462834 -0.129511  253.006748
8   1.092563  0.944507 -1.920995  ... -1.156224  1.876815  -11.299567
9   0.316403  0.549981 -0.016203  ... -1.068699  0.480429  -61.438678
10  0.375851  2.459667  2.331842  ...  0.035418 -1.673652  390.059222
11 -0.361483  0.387538  0.595749  ...  0.382503 -1.402543   30.267571
12  1.174554 -0.660511  1.243189  ...  0.417907 -0.191627  106.739658
13 -0.406296 -1.114724 -0.690144  ...  1.572700 -0.719172  -33.169388
14 -0.119582 -0.489682  0.671135  ...  1.680182 -0.191141   72.851982
15 -0.132642 -1.528495  0.683175  ... -0.378033 -1.493023  -27.190423

[16 rows x 11 columns]
MLLITE_MODEL_SET_OPTIONS RidgeRegressor {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeRegressor { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeRegressor { "alpha" : 0.0000001,   , }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeRegressor None
('OPERATION_START', 'TRAINING')
[[-0.4787931   2.50287    -0.10362324 -1.0679785   0.85598224 -2.105926
   1.3220862  -0.73586607 -1.6479812   0.3275829 ]
 [ 1.1950554  -1.4503824  -0.46873727  0.28645465  0.7561831   0.4906449
  -0.91751045  0.852386    0.31166935  0.68574876]
 [-0.648732   -0.8806197   0.20219254  0.52595264  0.65514773 -0.64766103
   0.27212194 -2.4372282  -0.5486439  -0.54169184]
 [-0.6128774   0.04540905  0.55893517 -1.3404816   1.2081138  -0.7919418
   0.9230405   0.22838217 -0.25823826 -0.09793584]
 [-0.7490448  -0.06792526  0.9676091  -0.24765345 -0.7222614   0.46284628
   0.12873757  1.3984412   0.13286762 -0.324339  ]] [  49.318077     -0.27659237 -185.91023      33.84124      65.23216   ]
MLLITE_FIT_USING_MODEL mllite_ridge_reg.RidgeRegressor_ff4_ff4
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_REGRESSOR_FIT' 1 2
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_REGRESSOR_FIT' 2 2
('OPERATION_END_ELAPSED', 0.01, 'TRAINING')
{ "alpha" : 0.0000001,   , }
{ "alpha" : 0.0000001,   , }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_ff4"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 10 },
	"equations" : {
			"intercept" : 0.002562,
			"coeffs" : [ 89.158134, 48.864952, 73.100990, 7.016455, 4.650204, 27.377020, 77.344063, 35.197136, 26.494020, 17.582556 ]
		}
}
WRITING_JSON_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_RandomReg_10_tiny_option_1.json'

MLLITE_MODEL_SET_OPTIONS RidgeRegressor {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeRegressor { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeRegressor { "alpha" : 0.0000001,   , }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeRegressor None
MLLITE_RELOADING_MODEL mllite_ridge_reg.RidgeRegressor_ff4_ff4
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_ff4"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 10 },
	"equations" : {
			"intercept" : 0.002562,
			"coeffs" : [ 89.158134, 48.864952, 73.100990, 7.016455, 4.650204, 27.377020, 77.344063, 35.197136, 26.494020, 17.582556 ]
		}
}
BEAUTIFIED_JSON_START
{
	"dataset" : 	{
		"dataset_features" : 10,
		"dataset_rows" : 16
	},
	"equations" : 	{
		"coeffs" : [ 89.158134, 48.864952, 73.10099, 7.016455, 4.650204, 27.37702, 77.344063, 35.197136, 26.49402, 17.582556 ],
		"intercept" : 0.002562
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_ff4", "version" : "2024-W12" },
	"options" :  { "alpha" : 0.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
[ 4.93282623e+01 -2.75715828e-01 -1.85878830e+02  3.38350868e+01
  6.52038879e+01 -2.89305382e+01 -1.48111755e+02  2.52998062e+02
 -1.13197556e+01 -6.14092293e+01  3.90030792e+02  3.02849255e+01
  1.06721664e+02 -3.31686745e+01  7.28653641e+01 -2.71879921e+01]
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
('OPERATION_START', 'PREDICT')
[ 4.9328262e+01 -2.7571201e-01 -1.8587883e+02  3.3835087e+01
  6.5203888e+01 -2.8930538e+01 -1.4811176e+02  2.5299806e+02
 -1.1319756e+01 -6.1409229e+01  3.9003079e+02  3.0284925e+01
  1.0672165e+02 -3.3168674e+01  7.2865364e+01 -2.7187992e+01]
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
MODEL_PERFS {'class_name': 'mllite.RidgeRegressor', 'model_name': 'RidgeRegressor', 'options': '{"alpha" : 0.0000001}', 'dataset': 'RandomReg_10_tiny', 'size': 16, 'mse': 0.0003085639, 'mae': 0.013969548, 'mape': 0.00048000528, 'r2': 0.9999999829021098}
WRITING_PERF_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_RandomReg_10_tiny_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeRegressor', 'model_name': 'RidgeRegressor', 'options': '{"alpha" : 0.0000001}', 'dataset': 'RandomReg_10_tiny', 'training_time_in_sec': 0.01, 'prediction_time_in_sec': 0.001}
WRITING_SQL_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_RandomReg_10_tiny_option_1.sql'



SQL_OUT_PUT_FIRST_LINES_START
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  model_input."index" AS "index",
   0.002562 + 89.158134 * X_0 + 48.864952 * X_1 + 73.100990 * X_2 + 7.016455 * X_3 + 4.650204 * X_4 + 27.377020 * X_5 + 77.344063 * X_6 + 35.197136 * X_7 + 26.494020 * X_8 + 17.582556 * X_9 AS "Estimator"
  FROM model_input
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_FIRST_LINES_END
SQL_OUT_PUT_LAST_LINES_START
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  model_input."index" AS "index",
   0.002562 + 89.158134 * X_0 + 48.864952 * X_1 + 73.100990 * X_2 + 7.016455 * X_3 + 4.650204 * X_4 + 27.377020 * X_5 + 77.344063 * X_6 + 35.197136 * X_7 + 26.494020 * X_8 + 17.582556 * X_9 AS "Estimator"
  FROM model_input
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_LAST_LINES_END




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 16 entries, 0 to 15
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     16 non-null     float32
 1   X_1     16 non-null     float32
 2   X_2     16 non-null     float32
 3   X_3     16 non-null     float32
 4   X_4     16 non-null     float32
 5   X_5     16 non-null     float32
 6   X_6     16 non-null     float32
 7   X_7     16 non-null     float32
 8   X_8     16 non-null     float32
 9   X_9     16 non-null     float32
dtypes: float32(10)
memory usage: 768.0 bytes
            X_0       X_1       X_2  ...       X_7       X_8       X_9
index                                ...                              
0     -0.478793  2.502870 -0.103623  ... -0.735866 -1.647981  0.327583
1      1.195055 -1.450382 -0.468737  ...  0.852386  0.311669  0.685749
2     -0.648732 -0.880620  0.202193  ... -2.437228 -0.548644 -0.541692
3     -0.612877  0.045409  0.558935  ...  0.228382 -0.258238 -0.097936
4     -0.749045 -0.067925  0.967609  ...  1.398441  0.132868 -0.324339
5     -0.695245  0.529279 -0.012289  ...  1.592387 -0.321756  0.330976
6     -0.304252 -2.418750  0.148738  ... -1.733213 -0.113479 -1.359821
7      2.688408 -0.118800  0.359897  ...  2.004759 -0.462834 -0.129511
8      1.092563  0.944507 -1.920995  ... -1.050732 -1.156224  1.876815
9      0.316403  0.549981 -0.016203  ... -0.240115 -1.068699  0.480429
10     0.375851  2.459666  2.331842  ... -1.930692  0.035418 -1.673652
11    -0.361483  0.387538  0.595749  ...  0.556831  0.382503 -1.402543
12     1.174554 -0.660511  1.243189  ... -1.353951  0.417907 -0.191627
13    -0.406296 -1.114724 -0.690144  ... -0.872249  1.572700 -0.719172
14    -0.119582 -0.489682  0.671135  ... -0.253174  1.680182 -0.191141
15    -0.132642 -1.528494  0.683175  ... -0.337466 -0.378033 -1.493023

[16 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 16 entries, 0 to 15
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      16 non-null     int64  
 1   Estimator  16 non-null     float64
dtypes: float64(1), int64(1)
memory usage: 388.0 bytes
    index   Estimator
0       0   49.328256
1       1   -0.275708
2       2 -185.878819
3       3   33.835088
4       4   65.203886
5       5  -28.930537
6       6 -148.111753
7       7  252.998066
8       8  -11.319757
9       9  -61.409224
10     10  390.030731
11     11   30.284922
12     12  106.721643
13     13  -33.168686
14     14   72.865366
15     15  -27.187987
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
    index  SQL_Estimator  Py_Estimator
0       0      49.328256     49.328262
1       1      -0.275708     -0.275716
2       2    -185.878819   -185.878830
3       3      33.835088     33.835087
4       4      65.203886     65.203888
5       5     -28.930537    -28.930538
6       6    -148.111753   -148.111755
7       7     252.998066    252.998062
8       8     -11.319757    -11.319756
9       9     -61.409224    -61.409229
10     10     390.030731    390.030792
11     11      30.284922     30.284925
12     12     106.721643    106.721664
13     13     -33.168686    -33.168674
14     14      72.865366     72.865364
15     15     -27.187987    -27.187992
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
