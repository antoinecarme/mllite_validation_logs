         X_0       X_1       X_2  ...       X_8       X_9     target
0   0.544738  0.515912  0.990435  ...  0.898018  0.377159  15.807614
1   0.783459  0.095321  0.135945  ...  0.019766  0.833486  14.766437
2   0.652811  0.757719  0.306902  ...  0.894295  0.086598  22.842493
3   0.226051  0.939732  0.731124  ...  0.185038  0.248943  19.544314
4   0.764610  0.378970  0.823855  ...  0.814980  0.123688  21.897690
5   0.368356  0.189593  0.403483  ...  0.462841  0.813023  11.119547
6   0.888102  0.149216  0.426902  ...  0.865909  0.986362   9.912128
7   0.825366  0.284076  0.971058  ...  0.780396  0.355315  15.012190
8   0.235384  0.117604  0.514017  ...  0.527227  0.211281  10.304959
9   0.834709  0.502155  0.670056  ...  0.038824  0.113899  12.722529
10  0.287599  0.939261  0.380885  ...  0.329620  0.003549  15.371187
11  0.992031  0.233387  0.782862  ...  0.461541  0.895167  11.851628

[12 rows x 11 columns]
MLLITE_MODEL_SET_OPTIONS MLPRegressor {"hidden_layer_sizes" : [4, 8, 6]}
MLLITE_MODEL_OPTIONS_DEFAULT MLPRegressor { "max_iter" : 32}
MLLITE_MODEL_OPTIONS_AFTER_SETTING MLPRegressor { "hidden_layer_sizes" : [4, 8, 6],  "max_iter" : 32 , }
MLLITE_MODEL_JSON_AFTER_SETTING MLPRegressor None
('OPERATION_START', 'TRAINING')
[[0.54473835 0.51591223 0.99043506 0.25514543 0.14395337 0.33235115
  0.8686215  0.04108923 0.8980185  0.37715888]
 [0.78345853 0.09532096 0.1359447  0.858711   0.24078475 0.08367069
  0.05237448 0.42276597 0.01976581 0.8334865 ]
 [0.652811   0.75771934 0.3069025  0.8282855  0.7630638  0.85900337
  0.87337655 0.14607023 0.89429516 0.08659814]
 [0.22605109 0.9397324  0.7311243  0.8374556  0.7824477  0.3529266
  0.1832118  0.84345275 0.18503828 0.2489433 ]
 [0.76461023 0.37897    0.82385516 0.9136035  0.55340034 0.05504839
  0.58833206 0.36104986 0.81497955 0.12368783]] [15.807614 14.766437 22.842493 19.544313 21.89769 ]
MLLITE_FIT_USING_MODEL mllite_mlp_reg.MLPRegressor_ff4_ff4
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT' 1 3
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT' 2 3
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 3 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 6 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 9 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 12 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 15 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 18 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 21 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 24 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 27 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 30 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 32 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT' 3 3
('OPERATION_END_ELAPSED', 0.01, 'TRAINING')
{ "hidden_layer_sizes" : [4, 8, 6],  "max_iter" : 32 , }
{ "hidden_layer_sizes" : [4, 8, 6],  "max_iter" : 32 , }
{
	"metadata" : { "model" : "Rosenblatt_MLP", "version" : "2024-W12", "signature" : "ff4_ff4"},
	"options" : {  "hidden_layer_sizes" : [ 4, 8, 6 ], "activation" : "relu", "solver" : "adam", "alpha" : 0.000100, "batch_size" : null, "learning_rate" : "constant", "learning_rate_init" : 0.001000, "power_t" : 0.500000, "max_iter" : 32, "shuffle" : 1, "random_state" : 1789, "tol" : 0.000100, "verbose" : 0, "warm_start" : 0, "momentum" : 0.900000, "nesterovs_momentum" : 1, "early_stopping" : 0, "validation_fraction" : 0.100000, "beta_1" : 0.900000, "beta_2" : 0.999000, "epsilon" : 0.000000, "n_iter_no_change" : 10, "max_fun" : 15000 },
	"dataset" : { "dataset_rows" : 12, "dataset_features" : 10 },
	"layers" : {
		"sizes" : [ 10, 4, 8, 6, 1 ],
		"Layer_0" : {
			"name" : "Input_Layer",
			"NbInputs" : 0,
			"NbOutputs" : 10 
		},
		"Layer_1" : {
			"name" : "Hidden_Layer_1",
			"NbInputs" : 10,
			"NbOutputs" : 4 ,
			"coeffs_0" : [ -0.087165, 0.310911, -0.236720, -0.074939 ],
			"coeffs_1" : [ 0.089344, -0.488067, 0.159904, -0.000649 ],
			"coeffs_2" : [ 0.527245, 0.110679, 0.513029, -0.128940 ],
			"coeffs_3" : [ 0.619531, -0.609429, -0.243732, 0.221953 ],
			"coeffs_4" : [ 0.310858, -0.341664, -0.302370, -0.530903 ],
			"coeffs_5" : [ 0.252817, -0.678141, -0.104379, 0.008561 ],
			"coeffs_6" : [ -0.160778, -0.622032, -0.304402, 0.510323 ],
			"coeffs_7" : [ -0.078733, -0.023846, -0.554846, 0.011115 ],
			"coeffs_8" : [ -0.231382, 0.214034, -0.107005, 0.252275 ],
			"coeffs_9" : [ -0.466701, 0.544563, -0.448143, 0.324346 ],
			"intercepts" : [ -0.501252, 0.330933, 0.154196, 0.568558 ]
		},
		"Layer_2" : {
			"name" : "Hidden_Layer_2",
			"NbInputs" : 4,
			"NbOutputs" : 8 ,
			"coeffs_0" : [ -0.413119, -0.573607, 0.208555, 0.224591, 0.506517, 0.576595, 0.508139, -0.427067 ],
			"coeffs_1" : [ 0.438131, 0.545215, -0.401987, 0.285117, 0.199402, 0.024746, 0.083052, 0.397121 ],
			"coeffs_2" : [ -0.575055, 0.089234, 0.259038, 0.375766, -0.572194, 0.458933, -0.362665, -0.622478 ],
			"coeffs_3" : [ 0.728154, 0.644038, -0.082600, -0.543716, 0.006668, 0.645761, -0.542289, 0.292005 ],
			"intercepts" : [ 0.349349, 0.386327, 0.631172, -0.357124, 0.330051, 0.466759, 0.485686, -0.050065 ]
		},
		"Layer_3" : {
			"name" : "Hidden_Layer_3",
			"NbInputs" : 8,
			"NbOutputs" : 6 ,
			"coeffs_0" : [ -0.611971, 0.295585, -0.012931, -0.124039, -0.449586, -0.587979 ],
			"coeffs_1" : [ -0.269793, 0.559087, 0.007126, -0.106816, -0.122293, -0.555059 ],
			"coeffs_2" : [ 0.186849, -0.230922, -0.274423, -0.106364, 0.239118, -0.431408 ],
			"coeffs_3" : [ -0.185056, 0.345570, 0.399994, 0.525995, 0.444517, 0.340777 ],
			"coeffs_4" : [ -0.309299, 0.030033, 0.162586, 0.412668, 0.291045, -0.001604 ],
			"coeffs_5" : [ 0.346018, 0.423459, 0.087835, -0.194876, -0.149254, -0.293637 ],
			"coeffs_6" : [ 0.313974, 0.333468, -0.474050, 0.182116, -0.386148, -0.001729 ],
			"coeffs_7" : [ 0.092932, -0.294840, 0.279033, -0.587319, -0.557210, 0.456885 ],
			"intercepts" : [ 0.562297, -0.464820, -0.266116, -0.494865, -0.500519, -0.502640 ]
		},
		"Layer_4" : {
			"name" : "Output_Layer",
			"NbInputs" : 6,
			"NbOutputs" : 1 ,
			"coeffs_0" : [ -0.277683 ],
			"coeffs_1" : [ -0.181195 ],
			"coeffs_2" : [ -0.589602 ],
			"coeffs_3" : [ -0.636095 ],
			"coeffs_4" : [ -0.788033 ],
			"coeffs_5" : [ 0.148976 ],
			"intercepts" : [ -0.575893 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/regression/MLPRegressor/mllite.MLPRegressor_freidman1_sampled_option_1.json'

MLLITE_MODEL_SET_OPTIONS MLPRegressor {"hidden_layer_sizes" : [4, 8, 6]}
MLLITE_MODEL_OPTIONS_DEFAULT MLPRegressor { "max_iter" : 32}
MLLITE_MODEL_OPTIONS_AFTER_SETTING MLPRegressor { "hidden_layer_sizes" : [4, 8, 6],  "max_iter" : 32 , }
MLLITE_MODEL_JSON_AFTER_SETTING MLPRegressor None
MLLITE_RELOADING_MODEL mllite_mlp_reg.MLPRegressor_ff4_ff4
{
	"metadata" : { "model" : "Rosenblatt_MLP", "version" : "2024-W12", "signature" : "ff4_ff4"},
	"options" : {  "hidden_layer_sizes" : [ 4, 8, 6 ], "activation" : "relu", "solver" : "adam", "alpha" : 0.000100, "batch_size" : null, "learning_rate" : "constant", "learning_rate_init" : 0.001000, "power_t" : 0.500000, "max_iter" : 32, "shuffle" : 1, "random_state" : 1789, "tol" : 0.000100, "verbose" : 0, "warm_start" : 0, "momentum" : 0.900000, "nesterovs_momentum" : 1, "early_stopping" : 0, "validation_fraction" : 0.100000, "beta_1" : 0.900000, "beta_2" : 0.999000, "epsilon" : 0.000000, "n_iter_no_change" : 10, "max_fun" : 15000 },
	"dataset" : { "dataset_rows" : 12, "dataset_features" : 10 },
	"layers" : {
		"sizes" : [ 10, 4, 8, 6, 1 ],
		"Layer_0" : {
			"name" : "Input_Layer",
			"NbInputs" : 0,
			"NbOutputs" : 10 
		},
		"Layer_1" : {
			"name" : "Hidden_Layer_1",
			"NbInputs" : 10,
			"NbOutputs" : 4 ,
			"coeffs_0" : [ -0.087165, 0.310911, -0.236720, -0.074939 ],
			"coeffs_1" : [ 0.089344, -0.488067, 0.159904, -0.000649 ],
			"coeffs_2" : [ 0.527245, 0.110679, 0.513029, -0.128940 ],
			"coeffs_3" : [ 0.619531, -0.609429, -0.243732, 0.221953 ],
			"coeffs_4" : [ 0.310858, -0.341664, -0.302370, -0.530903 ],
			"coeffs_5" : [ 0.252817, -0.678141, -0.104379, 0.008561 ],
			"coeffs_6" : [ -0.160778, -0.622032, -0.304402, 0.510323 ],
			"coeffs_7" : [ -0.078733, -0.023846, -0.554846, 0.011115 ],
			"coeffs_8" : [ -0.231382, 0.214034, -0.107005, 0.252275 ],
			"coeffs_9" : [ -0.466701, 0.544563, -0.448143, 0.324346 ],
			"intercepts" : [ -0.501252, 0.330933, 0.154196, 0.568558 ]
		},
		"Layer_2" : {
			"name" : "Hidden_Layer_2",
			"NbInputs" : 4,
			"NbOutputs" : 8 ,
			"coeffs_0" : [ -0.413119, -0.573607, 0.208555, 0.224591, 0.506517, 0.576595, 0.508139, -0.427067 ],
			"coeffs_1" : [ 0.438131, 0.545215, -0.401987, 0.285117, 0.199402, 0.024746, 0.083052, 0.397121 ],
			"coeffs_2" : [ -0.575055, 0.089234, 0.259038, 0.375766, -0.572194, 0.458933, -0.362665, -0.622478 ],
			"coeffs_3" : [ 0.728154, 0.644038, -0.082600, -0.543716, 0.006668, 0.645761, -0.542289, 0.292005 ],
			"intercepts" : [ 0.349349, 0.386327, 0.631172, -0.357124, 0.330051, 0.466759, 0.485686, -0.050065 ]
		},
		"Layer_3" : {
			"name" : "Hidden_Layer_3",
			"NbInputs" : 8,
			"NbOutputs" : 6 ,
			"coeffs_0" : [ -0.611971, 0.295585, -0.012931, -0.124039, -0.449586, -0.587979 ],
			"coeffs_1" : [ -0.269793, 0.559087, 0.007126, -0.106816, -0.122293, -0.555059 ],
			"coeffs_2" : [ 0.186849, -0.230922, -0.274423, -0.106364, 0.239118, -0.431408 ],
			"coeffs_3" : [ -0.185056, 0.345570, 0.399994, 0.525995, 0.444517, 0.340777 ],
			"coeffs_4" : [ -0.309299, 0.030033, 0.162586, 0.412668, 0.291045, -0.001604 ],
			"coeffs_5" : [ 0.346018, 0.423459, 0.087835, -0.194876, -0.149254, -0.293637 ],
			"coeffs_6" : [ 0.313974, 0.333468, -0.474050, 0.182116, -0.386148, -0.001729 ],
			"coeffs_7" : [ 0.092932, -0.294840, 0.279033, -0.587319, -0.557210, 0.456885 ],
			"intercepts" : [ 0.562297, -0.464820, -0.266116, -0.494865, -0.500519, -0.502640 ]
		},
		"Layer_4" : {
			"name" : "Output_Layer",
			"NbInputs" : 6,
			"NbOutputs" : 1 ,
			"coeffs_0" : [ -0.277683 ],
			"coeffs_1" : [ -0.181195 ],
			"coeffs_2" : [ -0.589602 ],
			"coeffs_3" : [ -0.636095 ],
			"coeffs_4" : [ -0.788033 ],
			"coeffs_5" : [ 0.148976 ],
			"intercepts" : [ -0.575893 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"dataset" : 	{
		"dataset_features" : 10,
		"dataset_rows" : 12
	},
	"layers" : 	{
		"Layer_0" : 	{
			"NbInputs" : 0,
			"NbOutputs" : 10,
			"name" : "Input_Layer"
		},
		"Layer_1" : 	{
			"NbInputs" : 10,
			"NbOutputs" : 4,
			"coeffs_0" : [ -0.087165, 0.310911, -0.23672, -0.074939 ],
			"coeffs_1" : [ 0.089344, -0.488067, 0.159904, -0.000649 ],
			"coeffs_2" : [ 0.527245, 0.110679, 0.513029, -0.12894 ],
			"coeffs_3" : [ 0.619531, -0.609429, -0.243732, 0.221953 ],
			"coeffs_4" : [ 0.310858, -0.341664, -0.30237, -0.530903 ],
			"coeffs_5" : [ 0.252817, -0.678141, -0.104379, 0.008561 ],
			"coeffs_6" : [ -0.160778, -0.622032, -0.304402, 0.510323 ],
			"coeffs_7" : [ -0.078733, -0.023846, -0.554846, 0.011115 ],
			"coeffs_8" : [ -0.231382, 0.214034, -0.107005, 0.252275 ],
			"coeffs_9" : [ -0.466701, 0.544563, -0.448143, 0.324346 ],
			"intercepts" : [ -0.501252, 0.330933, 0.154196, 0.568558 ],
			"name" : "Hidden_Layer_1"
		},
		"Layer_2" : 	{
			"NbInputs" : 4,
			"NbOutputs" : 8,
			"coeffs_0" : [ -0.413119, -0.573607, 0.208555, 0.224591, 0.506517, 0.576595, 0.508139, -0.427067 ],
			"coeffs_1" : [ 0.438131, 0.545215, -0.401987, 0.285117, 0.199402, 0.024746, 0.083052, 0.397121 ],
			"coeffs_2" : [ -0.575055, 0.089234, 0.259038, 0.375766, -0.572194, 0.458933, -0.362665, -0.622478 ],
			"coeffs_3" : [ 0.728154, 0.644038, -0.0826, -0.543716, 0.006668, 0.645761, -0.542289, 0.292005 ],
			"intercepts" : [ 0.349349, 0.386327, 0.631172, -0.357124, 0.330051, 0.466759, 0.485686, -0.050065 ],
			"name" : "Hidden_Layer_2"
		},
		"Layer_3" : 	{
			"NbInputs" : 8,
			"NbOutputs" : 6,
			"coeffs_0" : [ -0.611971, 0.295585, -0.012931, -0.124039, -0.449586, -0.587979 ],
			"coeffs_1" : [ -0.269793, 0.559087, 0.007126, -0.106816, -0.122293, -0.555059 ],
			"coeffs_2" : [ 0.186849, -0.230922, -0.274423, -0.106364, 0.239118, -0.431408 ],
			"coeffs_3" : [ -0.185056, 0.34557, 0.399994, 0.525995, 0.444517, 0.340777 ],
			"coeffs_4" : [ -0.309299, 0.030033, 0.162586, 0.412668, 0.291045, -0.001604 ],
			"coeffs_5" : [ 0.346018, 0.423459, 0.087835, -0.194876, -0.149254, -0.293637 ],
			"coeffs_6" : [ 0.313974, 0.333468, -0.47405, 0.182116, -0.386148, -0.001729 ],
			"coeffs_7" : [ 0.092932, -0.29484, 0.279033, -0.587319, -0.55721, 0.456885 ],
			"intercepts" : [ 0.562297, -0.46482, -0.266116, -0.494865, -0.500519, -0.50264 ],
			"name" : "Hidden_Layer_3"
		},
		"Layer_4" : 	{
			"NbInputs" : 6,
			"NbOutputs" : 1,
			"coeffs_0" : [ -0.277683 ],
			"coeffs_1" : [ -0.181195 ],
			"coeffs_2" : [ -0.589602 ],
			"coeffs_3" : [ -0.636095 ],
			"coeffs_4" : [ -0.788033 ],
			"coeffs_5" : [ 0.148976 ],
			"intercepts" : [ -0.575893 ],
			"name" : "Output_Layer"
		},
		"sizes" : [ 10, 4, 8, 6, 1 ]
	},
	"metadata" :  { "model" : "Rosenblatt_MLP", "signature" : "ff4_ff4", "version" : "2024-W12" },
	"options" :  { "activation" : "relu", "alpha" : 0.0001, "batch_size" : null, "beta_1" : 0.9, "beta_2" : 0.999, "early_stopping" : 0, "epsilon" : 0.0, "hidden_layer_sizes" : [ 4, 8, 6 ], "learning_rate" : "constant", "learning_rate_init" : 0.001, "max_fun" : 15000, "max_iter" : 32, "momentum" : 0.9, "n_iter_no_change" : 10, "nesterovs_momentum" : 1, "power_t" : 0.5, "random_state" : 1789, "shuffle" : 1, "solver" : "adam", "tol" : 0.0001, "validation_fraction" : 0.1, "verbose" : 0, "warm_start" : 0 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
[-0.7299212  -0.71105397 -0.7500732  -0.8242465  -0.7625835  -0.71256685
 -0.73205084 -0.70223653 -0.7245503  -0.71098024 -0.7485005  -0.74964947]
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
('OPERATION_START', 'PREDICT')
[-0.72992027 -0.71105313 -0.75007236 -0.824246   -0.7625828  -0.71256596
 -0.73204994 -0.70223576 -0.72454953 -0.71097934 -0.74849963 -0.7496486 ]
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
MODEL_PERFS {'class_name': 'mllite.MLPRegressor', 'model_name': 'MLPRegressor', 'options': '{"hidden_layer_sizes" : [4, 8, 6]}', 'dataset': 'freidman1_sampled', 'size': 12, 'mse': 268.2504, 'mae': 15.83426, 'mape': 1.0522516, 'r2': -14.434837274074818}
WRITING_PERF_CODE 'logs/auto_tests/regression/MLPRegressor/mllite.MLPRegressor_freidman1_sampled_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.MLPRegressor', 'model_name': 'MLPRegressor', 'options': '{"hidden_layer_sizes" : [4, 8, 6]}', 'dataset': 'freidman1_sampled', 'training_time_in_sec': 0.01, 'prediction_time_in_sec': 0.0}
WRITING_SQL_CODE 'logs/auto_tests/regression/MLPRegressor/mllite.MLPRegressor_freidman1_sampled_option_1.sql'



SQL_OUT_PUT_FIRST_LINES_START
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
"Input_Layer_BA" AS
 ( SELECT
    t."index" as "index",
    t.X_0 AS OUT_0,
    t.X_1 AS OUT_1,
    t.X_2 AS OUT_2,
    t.X_3 AS OUT_3,
    t.X_4 AS OUT_4,
    t.X_5 AS OUT_5,
    t.X_6 AS OUT_6,
    t.X_7 AS OUT_7,
    t.X_8 AS OUT_8,
    t.X_9 AS OUT_9
 FROM model_input AS t
),
"Hidden_Layer_1_BA" AS
 ( SELECT
    t."index" as "index",
    -0.501252 + -0.087165 * t.OUT_0  + 0.089344 * t.OUT_1  + 0.527245 * t.OUT_2  + 0.619531 * t.OUT_3  + 0.310858 * t.OUT_4  + 0.252817 * t.OUT_5  + -0.160778 * t.OUT_6  + -0.078733 * t.OUT_7  + -0.231382 * t.OUT_
SQL_OUT_PUT_FIRST_LINES_END
SQL_OUT_PUT_LAST_LINES_START
7979 * t.OUT_0  + -0.555059 * t.OUT_1  + -0.431408 * t.OUT_2  + 0.340777 * t.OUT_3  + -0.001604 * t.OUT_4  + -0.293637 * t.OUT_5  + -0.001729 * t.OUT_6  + 0.456885 * t.OUT_7 AS OUT_5
   FROM Hidden_Layer_2_Activation AS t
 ),
"Hidden_Layer_3_Activation" AS
 ( SELECT
    t."index" as "index",
    CASE WHEN (OUT_0 > 0) THEN OUT_0 ELSE 0 END AS OUT_0,
    CASE WHEN (OUT_1 > 0) THEN OUT_1 ELSE 0 END AS OUT_1,
    CASE WHEN (OUT_2 > 0) THEN OUT_2 ELSE 0 END AS OUT_2,
    CASE WHEN (OUT_3 > 0) THEN OUT_3 ELSE 0 END AS OUT_3,
    CASE WHEN (OUT_4 > 0) THEN OUT_4 ELSE 0 END AS OUT_4,
    CASE WHEN (OUT_5 > 0) THEN OUT_5 ELSE 0 END AS OUT_5
   FROM Hidden_Layer_3_BA AS t
 ),
"Output_Layer_BA" AS
 ( SELECT
    t."index" as "index",
    -0.575893 + -0.277683 * t.OUT_0  + -0.181195 * t.OUT_1  + -0.589602 * t.OUT_2  + -0.636095 * t.OUT_3  + -0.788033 * t.OUT_4  + 0.148976 * t.OUT_5 AS OUT_0
   FROM Hidden_Layer_3_Activation AS t
 )
 SELECT
    t."index" AS "index",
    t.OUT_0 AS "Estimator"
  FROM "Output_Layer_BA" AS t

SQL_OUT_PUT_LAST_LINES_END




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 12 entries, 0 to 11
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     12 non-null     float32
 1   X_1     12 non-null     float32
 2   X_2     12 non-null     float32
 3   X_3     12 non-null     float32
 4   X_4     12 non-null     float32
 5   X_5     12 non-null     float32
 6   X_6     12 non-null     float32
 7   X_7     12 non-null     float32
 8   X_8     12 non-null     float32
 9   X_9     12 non-null     float32
dtypes: float32(10)
memory usage: 576.0 bytes
            X_0       X_1       X_2  ...       X_7       X_8       X_9
index                                ...                              
0      0.544738  0.515912  0.990435  ...  0.041089  0.898018  0.377159
1      0.783459  0.095321  0.135945  ...  0.422766  0.019766  0.833486
2      0.652811  0.757719  0.306902  ...  0.146070  0.894295  0.086598
3      0.226051  0.939732  0.731124  ...  0.843453  0.185038  0.248943
4      0.764610  0.378970  0.823855  ...  0.361050  0.814980  0.123688
5      0.368356  0.189593  0.403483  ...  0.840440  0.462841  0.813023
6      0.888102  0.149216  0.426902  ...  0.653572  0.865909  0.986362
7      0.825366  0.284076  0.971058  ...  0.900471  0.780397  0.355315
8      0.235384  0.117604  0.514017  ...  0.091568  0.527227  0.211281
9      0.834709  0.502155  0.670056  ...  0.848192  0.038824  0.113899
10     0.287599  0.939261  0.380885  ...  0.812585  0.329620  0.003549
11     0.992031  0.233387  0.782862  ...  0.403574  0.461541  0.895167

[12 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 12 entries, 0 to 11
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      12 non-null     int64  
 1   Estimator  12 non-null     float64
dtypes: float64(1), int64(1)
memory usage: 324.0 bytes
    index  Estimator
0       0  -0.729920
1       1  -0.711053
2       2  -0.750072
3       3  -0.824246
4       4  -0.762583
5       5  -0.712566
6       6  -0.732050
7       7  -0.702236
8       8  -0.724550
9       9  -0.710979
10     10  -0.748500
11     11  -0.749649
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
    index  SQL_Estimator  Py_Estimator
0       0      -0.729920     -0.729921
1       1      -0.711053     -0.711054
2       2      -0.750072     -0.750073
3       3      -0.824246     -0.824247
4       4      -0.762583     -0.762583
5       5      -0.712566     -0.712567
6       6      -0.732050     -0.732051
7       7      -0.702236     -0.702237
8       8      -0.724550     -0.724550
9       9      -0.710979     -0.710980
10     10      -0.748500     -0.748501
11     11      -0.749649     -0.749649
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
