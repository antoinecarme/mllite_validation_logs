         X_0       X_1       X_2  ...       X_8       X_9     target
0   0.544738  0.515912  0.990435  ...  0.898018  0.377159  15.807614
1   0.783459  0.095321  0.135945  ...  0.019766  0.833486  14.766437
2   0.652811  0.757719  0.306902  ...  0.894295  0.086598  22.842493
3   0.226051  0.939732  0.731124  ...  0.185038  0.248943  19.544314
4   0.764610  0.378970  0.823855  ...  0.814980  0.123688  21.897690
5   0.368356  0.189593  0.403483  ...  0.462841  0.813023  11.119547
6   0.888102  0.149216  0.426902  ...  0.865909  0.986362   9.912128
7   0.825366  0.284076  0.971058  ...  0.780396  0.355315  15.012190
8   0.235384  0.117604  0.514017  ...  0.527227  0.211281  10.304959
9   0.834709  0.502155  0.670056  ...  0.038824  0.113899  12.722529
10  0.287599  0.939261  0.380885  ...  0.329620  0.003549  15.371187
11  0.992031  0.233387  0.782862  ...  0.461541  0.895167  11.851628

[12 rows x 11 columns]
MLLITE_MODEL_SET_OPTIONS DecisionTreeRegressor None
MLLITE_MODEL_OPTIONS_DEFAULT DecisionTreeRegressor { "max_leaf_nodes" : 64}
MLLITE_MODEL_OPTIONS_AFTER_SETTING DecisionTreeRegressor { ,  "max_leaf_nodes" : 64 , }
MLLITE_MODEL_JSON_AFTER_SETTING DecisionTreeRegressor None
('OPERATION_START', 'TRAINING')
[[0.54473835 0.51591223 0.99043506 0.25514543 0.14395337 0.33235115
  0.8686215  0.04108923 0.8980185  0.37715888]
 [0.78345853 0.09532096 0.1359447  0.858711   0.24078475 0.08367069
  0.05237448 0.42276597 0.01976581 0.8334865 ]
 [0.652811   0.75771934 0.3069025  0.8282855  0.7630638  0.85900337
  0.87337655 0.14607023 0.89429516 0.08659814]
 [0.22605109 0.9397324  0.7311243  0.8374556  0.7824477  0.3529266
  0.1832118  0.84345275 0.18503828 0.2489433 ]
 [0.76461023 0.37897    0.82385516 0.9136035  0.55340034 0.05504839
  0.58833206 0.36104986 0.81497955 0.12368783]] [15.807614 14.766437 22.842493 19.544313 21.89769 ]
MLLITE_FIT_USING_MODEL mllite_decision_tree_reg.DecisionTreeRegressor_ff4_ff4
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_REGRESSOR_FIT' 1 3
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 0 12
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 2 12
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 3 12
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 4 12
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 12 12
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_REGRESSOR_FIT' 2 3
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_REGRESSOR_FIT' 3 3
('OPERATION_END_ELAPSED', 0.006, 'TRAINING')
{ ,  "max_leaf_nodes" : 64 , }
{ ,  "max_leaf_nodes" : 64 , }
{
	"metadata" : { "model" : "Breiman_CART", "version" : "2024-W14", "signature" : "ff4_ff4"},
	"options" : { "ccp_alpha" : 0.000000, "criterion" : "", "max_depth" : null, "max_features" : null, "max_leaf_nodes" : 64, "min_impurity_decrease" : 0.000000, "min_samples_leaf" : 1, "min_samples_split" : 2, "min_weight_fraction_leaf" : 0.000000, "random_state" : 1789, "splitter" : "best" },
	"dataset" : { "dataset_rows" : 12, "dataset_features" : 10 },
	"tree" : {
	"features" : 10,
	"outputs" : 1,
	"max_depth" : 4,
	"node_count" : 23,
	"nodes" : {
		"node_00" : {"left" : 1, "right" : 2, "feature" : 3, "threshold" : 0.780087, "impurity" : 17.379562, "n_samples" : 12, "w_samples" : 12.000000, "value" : [15.096059]},
		"node_01" : {"left" : 5, "right" : 6, "feature" : 1, "threshold" : 0.258731, "impurity" : 4.854202, "n_samples" : 8, "w_samples" : 8.000000, "value" : [12.762723]},
		"node_02" : {"left" : 3, "right" : 4, "feature" : 0, "threshold" : 0.774034, "impurity" : 9.763489, "n_samples" : 4, "w_samples" : 4.000000, "value" : [19.762733]},
		"node_03" : {"left" : 7, "right" : 8, "feature" : 0, "threshold" : 0.439431, "impurity" : 1.923126, "n_samples" : 3, "w_samples" : 3.000000, "value" : [21.428167]},
		"node_04" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000046, "n_samples" : 1, "w_samples" : 1.000000, "value" : [14.766437]},
		"node_05" : {"left" : 11, "right" : 12, "feature" : 6, "threshold" : 0.465296, "impurity" : 0.560341, "n_samples" : 4, "w_samples" : 4.000000, "value" : [10.797066]},
		"node_06" : {"left" : 9, "right" : 10, "feature" : 0, "threshold" : 0.830037, "impurity" : 1.420486, "n_samples" : 4, "w_samples" : 4.000000, "value" : [14.728380]},
		"node_07" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [19.544313]},
		"node_08" : {"left" : 13, "right" : 14, "feature" : 4, "threshold" : 0.658232, "impurity" : 0.223053, "n_samples" : 2, "w_samples" : 2.000000, "value" : [22.370090]},
		"node_09" : {"left" : 17, "right" : 18, "feature" : 7, "threshold" : 0.426837, "impurity" : 0.105728, "n_samples" : 3, "w_samples" : 3.000000, "value" : [15.396998]},
		"node_10" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000046, "n_samples" : 1, "w_samples" : 1.000000, "value" : [12.722529]},
		"node_11" : {"left" : 15, "right" : 16, "feature" : 9, "threshold" : 0.854095, "impurity" : 0.133972, "n_samples" : 2, "w_samples" : 2.000000, "value" : [11.485588]},
		"node_12" : {"left" : 19, "right" : 20, "feature" : 4, "threshold" : 0.705366, "impurity" : 0.038589, "n_samples" : 2, "w_samples" : 2.000000, "value" : [10.108543]},
		"node_13" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [21.897690]},
		"node_14" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000122, "n_samples" : 1, "w_samples" : 1.000000, "value" : [22.842493]},
		"node_15" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [11.119547]},
		"node_16" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : -0.000031, "n_samples" : 1, "w_samples" : 1.000000, "value" : [11.851628]},
		"node_17" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [15.807614]},
		"node_18" : {"left" : 21, "right" : 22, "feature" : 0, "threshold" : 0.556483, "impurity" : 0.032150, "n_samples" : 2, "w_samples" : 2.000000, "value" : [15.191689]},
		"node_19" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [10.304958]},
		"node_20" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [9.912128]},
		"node_21" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [15.371187]},
		"node_22" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : -0.000015, "n_samples" : 1, "w_samples" : 1.000000, "value" : [15.012190]}
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/regression/DecisionTreeRegressor/mllite.DecisionTreeRegressor_freidman1_sampled.json'

MLLITE_MODEL_SET_OPTIONS DecisionTreeRegressor None
MLLITE_MODEL_OPTIONS_DEFAULT DecisionTreeRegressor { "max_leaf_nodes" : 64}
MLLITE_MODEL_OPTIONS_AFTER_SETTING DecisionTreeRegressor { ,  "max_leaf_nodes" : 64 , }
MLLITE_MODEL_JSON_AFTER_SETTING DecisionTreeRegressor None
MLLITE_RELOADING_MODEL mllite_decision_tree_reg.DecisionTreeRegressor_ff4_ff4
{
	"metadata" : { "model" : "Breiman_CART", "version" : "2024-W14", "signature" : "ff4_ff4"},
	"options" : { "ccp_alpha" : 0.000000, "criterion" : "", "max_depth" : null, "max_features" : null, "max_leaf_nodes" : 64, "min_impurity_decrease" : 0.000000, "min_samples_leaf" : 1, "min_samples_split" : 2, "min_weight_fraction_leaf" : 0.000000, "random_state" : 1789, "splitter" : "best" },
	"dataset" : { "dataset_rows" : 12, "dataset_features" : 10 },
	"tree" : {
	"features" : 10,
	"outputs" : 1,
	"max_depth" : 4,
	"node_count" : 23,
	"nodes" : {
		"node_00" : {"left" : 1, "right" : 2, "feature" : 3, "threshold" : 0.780087, "impurity" : 17.379562, "n_samples" : 12, "w_samples" : 12.000000, "value" : [15.096059]},
		"node_01" : {"left" : 5, "right" : 6, "feature" : 1, "threshold" : 0.258731, "impurity" : 4.854202, "n_samples" : 8, "w_samples" : 8.000000, "value" : [12.762723]},
		"node_02" : {"left" : 3, "right" : 4, "feature" : 0, "threshold" : 0.774034, "impurity" : 9.763489, "n_samples" : 4, "w_samples" : 4.000000, "value" : [19.762733]},
		"node_03" : {"left" : 7, "right" : 8, "feature" : 0, "threshold" : 0.439431, "impurity" : 1.923126, "n_samples" : 3, "w_samples" : 3.000000, "value" : [21.428167]},
		"node_04" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000046, "n_samples" : 1, "w_samples" : 1.000000, "value" : [14.766437]},
		"node_05" : {"left" : 11, "right" : 12, "feature" : 6, "threshold" : 0.465296, "impurity" : 0.560341, "n_samples" : 4, "w_samples" : 4.000000, "value" : [10.797066]},
		"node_06" : {"left" : 9, "right" : 10, "feature" : 0, "threshold" : 0.830037, "impurity" : 1.420486, "n_samples" : 4, "w_samples" : 4.000000, "value" : [14.728380]},
		"node_07" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [19.544313]},
		"node_08" : {"left" : 13, "right" : 14, "feature" : 4, "threshold" : 0.658232, "impurity" : 0.223053, "n_samples" : 2, "w_samples" : 2.000000, "value" : [22.370090]},
		"node_09" : {"left" : 17, "right" : 18, "feature" : 7, "threshold" : 0.426837, "impurity" : 0.105728, "n_samples" : 3, "w_samples" : 3.000000, "value" : [15.396998]},
		"node_10" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000046, "n_samples" : 1, "w_samples" : 1.000000, "value" : [12.722529]},
		"node_11" : {"left" : 15, "right" : 16, "feature" : 9, "threshold" : 0.854095, "impurity" : 0.133972, "n_samples" : 2, "w_samples" : 2.000000, "value" : [11.485588]},
		"node_12" : {"left" : 19, "right" : 20, "feature" : 4, "threshold" : 0.705366, "impurity" : 0.038589, "n_samples" : 2, "w_samples" : 2.000000, "value" : [10.108543]},
		"node_13" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [21.897690]},
		"node_14" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000122, "n_samples" : 1, "w_samples" : 1.000000, "value" : [22.842493]},
		"node_15" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [11.119547]},
		"node_16" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : -0.000031, "n_samples" : 1, "w_samples" : 1.000000, "value" : [11.851628]},
		"node_17" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [15.807614]},
		"node_18" : {"left" : 21, "right" : 22, "feature" : 0, "threshold" : 0.556483, "impurity" : 0.032150, "n_samples" : 2, "w_samples" : 2.000000, "value" : [15.191689]},
		"node_19" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [10.304958]},
		"node_20" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [9.912128]},
		"node_21" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [15.371187]},
		"node_22" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : -0.000015, "n_samples" : 1, "w_samples" : 1.000000, "value" : [15.012190]}
		}
	}
}
BEAUTIFIED_JSON_START
{
	"dataset" : 	{
		"dataset_features" : 10,
		"dataset_rows" : 12
	},
	"metadata" :  { "model" : "Breiman_CART", "signature" : "ff4_ff4", "version" : "2024-W14" },
	"options" :  { "ccp_alpha" : 0.0, "criterion" : "", "max_depth" : null, "max_features" : null, "max_leaf_nodes" : 64, "min_impurity_decrease" : 0.0, "min_samples_leaf" : 1, "min_samples_split" : 2, "min_weight_fraction_leaf" : 0.0, "random_state" : 1789, "splitter" : "best" },
	"tree" : 	{
		"features" : 10,
		"max_depth" : 4,
		"node_count" : 23,
		"nodes" : 	{
			"node_00" :  { "feature" : 3, "impurity" : 17.379562, "left" : 1, "n_samples" : 12, "right" : 2, "threshold" : 0.780087, "value" : [ 15.096059 ], "w_samples" : 12.0 },
			"node_01" :  { "feature" : 1, "impurity" : 4.854202, "left" : 5, "n_samples" : 8, "right" : 6, "threshold" : 0.258731, "value" : [ 12.762723 ], "w_samples" : 8.0 },
			"node_02" :  { "feature" : 0, "impurity" : 9.763489, "left" : 3, "n_samples" : 4, "right" : 4, "threshold" : 0.774034, "value" : [ 19.762733 ], "w_samples" : 4.0 },
			"node_03" :  { "feature" : 0, "impurity" : 1.923126, "left" : 7, "n_samples" : 3, "right" : 8, "threshold" : 0.439431, "value" : [ 21.428167 ], "w_samples" : 3.0 },
			"node_04" :  { "feature" : null, "impurity" : 4.6e-05, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 14.766437 ], "w_samples" : 1.0 },
			"node_05" :  { "feature" : 6, "impurity" : 0.560341, "left" : 11, "n_samples" : 4, "right" : 12, "threshold" : 0.465296, "value" : [ 10.797066 ], "w_samples" : 4.0 },
			"node_06" :  { "feature" : 0, "impurity" : 1.420486, "left" : 9, "n_samples" : 4, "right" : 10, "threshold" : 0.830037, "value" : [ 14.72838 ], "w_samples" : 4.0 },
			"node_07" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 19.544313 ], "w_samples" : 1.0 },
			"node_08" :  { "feature" : 4, "impurity" : 0.223053, "left" : 13, "n_samples" : 2, "right" : 14, "threshold" : 0.658232, "value" : [ 22.37009 ], "w_samples" : 2.0 },
			"node_09" :  { "feature" : 7, "impurity" : 0.105728, "left" : 17, "n_samples" : 3, "right" : 18, "threshold" : 0.426837, "value" : [ 15.396998 ], "w_samples" : 3.0 },
			"node_10" :  { "feature" : null, "impurity" : 4.6e-05, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 12.722529 ], "w_samples" : 1.0 },
			"node_11" :  { "feature" : 9, "impurity" : 0.133972, "left" : 15, "n_samples" : 2, "right" : 16, "threshold" : 0.854095, "value" : [ 11.485588 ], "w_samples" : 2.0 },
			"node_12" :  { "feature" : 4, "impurity" : 0.038589, "left" : 19, "n_samples" : 2, "right" : 20, "threshold" : 0.705366, "value" : [ 10.108543 ], "w_samples" : 2.0 },
			"node_13" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 21.89769 ], "w_samples" : 1.0 },
			"node_14" :  { "feature" : null, "impurity" : 0.000122, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 22.842493 ], "w_samples" : 1.0 },
			"node_15" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 11.119547 ], "w_samples" : 1.0 },
			"node_16" :  { "feature" : null, "impurity" : -3.1e-05, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 11.851628 ], "w_samples" : 1.0 },
			"node_17" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 15.807614 ], "w_samples" : 1.0 },
			"node_18" :  { "feature" : 0, "impurity" : 0.03215, "left" : 21, "n_samples" : 2, "right" : 22, "threshold" : 0.556483, "value" : [ 15.191689 ], "w_samples" : 2.0 },
			"node_19" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 10.304958 ], "w_samples" : 1.0 },
			"node_20" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 9.912128 ], "w_samples" : 1.0 },
			"node_21" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 15.371187 ], "w_samples" : 1.0 },
			"node_22" :  { "feature" : null, "impurity" : -1.5e-05, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 15.01219 ], "w_samples" : 1.0 }
		},
		"outputs" : 1
	}
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
[15.807614 14.766437 22.842493 19.544313 21.89769  11.119547  9.912128
 15.01219  10.304958 12.722529 15.371187 11.851628]
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
('OPERATION_START', 'PREDICT')
[15.807614 14.766437 22.842493 19.544313 21.89769  11.119547  9.912128
 15.01219  10.304958 12.722529 15.371187 11.851628]
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
MODEL_PERFS {'class_name': 'mllite.DecisionTreeRegressor', 'model_name': 'DecisionTreeRegressor', 'options': None, 'dataset': 'freidman1_sampled', 'size': 12, 'mse': 0.0, 'mae': 0.0, 'mape': 0.0, 'r2': 1.0}
WRITING_PERF_CODE 'logs/auto_tests/regression/DecisionTreeRegressor/mllite.DecisionTreeRegressor_freidman1_sampled.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.DecisionTreeRegressor', 'model_name': 'DecisionTreeRegressor', 'options': None, 'dataset': 'freidman1_sampled', 'training_time_in_sec': 0.006, 'prediction_time_in_sec': 0.0}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 0 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 1 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 2 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 3 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 4 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 5 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 6 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 7 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 8 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_REGRESSION_EXPLAINER' 9 10
{
   "Contributions" : {
      "X_0" : [ 0.134605 ],
      "X_1" : [ -0.554732 ],
      "X_2" : [ 0.000000 ],
      "X_3" : [ -0.076909 ],
      "X_4" : [ 0.026871 ],
      "X_5" : [ 0.000000 ],
      "X_6" : [ -0.001592 ],
      "X_7" : [ -0.037157 ],
      "X_8" : [ 0.000000 ],
      "X_9" : [ 0.003813 ]   
   },
   "Most_Contributive_Features" : {
      "y" : [ 1, 0, 3, 7, 4, 9, 6 ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/regression/DecisionTreeRegressor/mllite.DecisionTreeRegressor_freidman1_sampled_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/regression/DecisionTreeRegressor/mllite.DecisionTreeRegressor_freidman1_sampled_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('freidman1_sampled', 'DecisionTreeRegressor', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "freidman1_sampled" AS "ADS" 
 ),
"DT_node_lookup" AS 
 (SELECT
    model_input."index" AS "index",
    CASE WHEN (model_input."X_3" <= 0.780087) THEN CASE WHEN (model_input."X_1" <= 0.258731) THEN CASE WHEN (model_input."X_6" <= 0.465296) THEN CASE WHEN (model_input."X_9" <= 0.854095) THEN 15 ELSE 16 END ELSE CASE WHEN (model_input."X_4" <= 0.705366) THEN 19 ELSE 20 END END ELSE CASE WHEN (model_input."X_0" <= 0.830037) THEN CASE WHEN (model_input."X_7" <= 0.426837) THEN 17 ELSE CASE WHEN (model_input."X_0" <= 0.556483) THEN 21 ELSE 22 END END ELSE 10 END END ELSE CASE WHEN (model
SQL_OUT_PUT_FIRST_LINES_END ('freidman1_sampled', 'DecisionTreeRegressor', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('freidman1_sampled', 'DecisionTreeRegressor', 'duckdb')
AS "E"
    UNION ALL
    SELECT 10 AS nid, 12.722529 AS "E"
    UNION ALL
    SELECT 11 AS nid, 11.485588 AS "E"
    UNION ALL
    SELECT 12 AS nid, 10.108543 AS "E"
    UNION ALL
    SELECT 13 AS nid, 21.897690 AS "E"
    UNION ALL
    SELECT 14 AS nid, 22.842493 AS "E"
    UNION ALL
    SELECT 15 AS nid, 11.119547 AS "E"
    UNION ALL
    SELECT 16 AS nid, 11.851628 AS "E"
    UNION ALL
    SELECT 17 AS nid, 15.807614 AS "E"
    UNION ALL
    SELECT 18 AS nid, 15.191689 AS "E"
    UNION ALL
    SELECT 19 AS nid, 10.304958 AS "E"
    UNION ALL
    SELECT 20 AS nid, 9.912128 AS "E"
    UNION ALL
    SELECT 21 AS nid, 15.371187 AS "E"
    UNION ALL
    SELECT 22 AS nid, 15.012190 AS "E"
  ) AS "Values"
 ),
"DT_Output" AS 
 (SELECT
   t1."index" AS "index",
   t1.node_id AS node_id,
   t2.nid AS nid,
   t2."E" AS "E"
  FROM
   "DT_node_lookup" AS t1
   LEFT OUTER JOIN
   "DT_node_data" AS t2
   ON t1.node_id = t2.nid
 )
SELECT
   "DT_Output"."index" AS "index",
   "DT_Output"."E" AS "Estimator"
FROM "DT_Output"
SQL_OUT_PUT_LAST_LINES_END ('freidman1_sampled', 'DecisionTreeRegressor', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 12 entries, 0 to 11
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     12 non-null     float32
 1   X_1     12 non-null     float32
 2   X_2     12 non-null     float32
 3   X_3     12 non-null     float32
 4   X_4     12 non-null     float32
 5   X_5     12 non-null     float32
 6   X_6     12 non-null     float32
 7   X_7     12 non-null     float32
 8   X_8     12 non-null     float32
 9   X_9     12 non-null     float32
dtypes: float32(10)
memory usage: 576.0 bytes
            X_0       X_1       X_2  ...       X_7       X_8       X_9
index                                ...                              
0      0.544738  0.515912  0.990435  ...  0.041089  0.898018  0.377159
1      0.783459  0.095321  0.135945  ...  0.422766  0.019766  0.833486
2      0.652811  0.757719  0.306902  ...  0.146070  0.894295  0.086598
3      0.226051  0.939732  0.731124  ...  0.843453  0.185038  0.248943
4      0.764610  0.378970  0.823855  ...  0.361050  0.814980  0.123688
5      0.368356  0.189593  0.403483  ...  0.840440  0.462841  0.813023
6      0.888102  0.149216  0.426902  ...  0.653572  0.865909  0.986362
7      0.825366  0.284076  0.971058  ...  0.900471  0.780397  0.355315
8      0.235384  0.117604  0.514017  ...  0.091568  0.527227  0.211281
9      0.834709  0.502155  0.670056  ...  0.848192  0.038824  0.113899
10     0.287599  0.939261  0.380885  ...  0.812585  0.329620  0.003549
11     0.992031  0.233387  0.782862  ...  0.403574  0.461541  0.895167

[12 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 12 entries, 0 to 11
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      12 non-null     int64  
 1   Estimator  12 non-null     float64
dtypes: float64(1), int64(1)
memory usage: 324.0 bytes
    index  Estimator
0       0  15.807614
1       1  14.766437
2       2  22.842493
3       3  19.544313
4       4  21.897690
5       5  11.119547
6       6   9.912128
7       7  15.012190
8       8  10.304958
9       9  12.722529
10     10  15.371187
11     11  11.851628
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('freidman1_sampled', 'DecisionTreeRegressor') Estimator 2.8165690135750765e-07
    index  SQL_Estimator  Py_Estimator     SQL_Error
0       0      15.807614     15.807614 -3.264771e-07
1       1      14.766437     14.766437  4.231567e-07
2       2      22.842493     22.842493 -5.725098e-08
3       3      19.544313     19.544313 -4.307861e-07
4       4      21.897690     21.897690  1.806641e-07
5       5      11.119547     11.119547  1.097412e-07
6       6       9.912128      9.912128 -4.484863e-07
7       7      15.012190     15.012190  1.348877e-07
8       8      10.304958     10.304958 -3.435059e-07
9       9      12.722529     12.722529 -4.113159e-07
10     10      15.371187     15.371187 -2.100830e-07
11     11      11.851628     11.851628 -3.035278e-07
MLLITE_REG_SQL_EXECUTION_STATUS ('freidman1_sampled', 'DecisionTreeRegressor', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/regression/DecisionTreeRegressor/mllite.DecisionTreeRegressor_freidman1_sampled_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('freidman1_sampled', 'DecisionTreeRegressor', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "freidman1_sampled" AS "ADS" 
 ),
"DT_node_lookup" AS 
 (SELECT
    model_input."index" AS "index",
    CASE WHEN (model_input."X_3" <= 0.780087) THEN CASE WHEN (model_input."X_1" <= 0.258731) THEN CASE WHEN (model_input."X_6" <= 0.465296) THEN CASE WHEN (model_input."X_9" <= 0.854095) THEN 15 ELSE 16 END ELSE CASE WHEN (model_input."X_4" <= 0.705366) THEN 19 ELSE 20 END END ELSE CASE WHEN (model_input."X_0" <= 0.830037) THEN CASE WHEN (model_input."X_7" <= 0.426837) THEN 17 ELSE CASE WHEN (model_input."X_0" <= 0.556483) THEN 21 ELSE 22 END END ELSE 10 END END ELSE CASE WHEN (model
SQL_OUT_PUT_FIRST_LINES_END ('freidman1_sampled', 'DecisionTreeRegressor', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('freidman1_sampled', 'DecisionTreeRegressor', 'sqlite')
AS "E"
    UNION ALL
    SELECT 10 AS nid, 12.722529 AS "E"
    UNION ALL
    SELECT 11 AS nid, 11.485588 AS "E"
    UNION ALL
    SELECT 12 AS nid, 10.108543 AS "E"
    UNION ALL
    SELECT 13 AS nid, 21.897690 AS "E"
    UNION ALL
    SELECT 14 AS nid, 22.842493 AS "E"
    UNION ALL
    SELECT 15 AS nid, 11.119547 AS "E"
    UNION ALL
    SELECT 16 AS nid, 11.851628 AS "E"
    UNION ALL
    SELECT 17 AS nid, 15.807614 AS "E"
    UNION ALL
    SELECT 18 AS nid, 15.191689 AS "E"
    UNION ALL
    SELECT 19 AS nid, 10.304958 AS "E"
    UNION ALL
    SELECT 20 AS nid, 9.912128 AS "E"
    UNION ALL
    SELECT 21 AS nid, 15.371187 AS "E"
    UNION ALL
    SELECT 22 AS nid, 15.012190 AS "E"
  ) AS "Values"
 ),
"DT_Output" AS 
 (SELECT
   t1."index" AS "index",
   t1.node_id AS node_id,
   t2.nid AS nid,
   t2."E" AS "E"
  FROM
   "DT_node_lookup" AS t1
   LEFT OUTER JOIN
   "DT_node_data" AS t2
   ON t1.node_id = t2.nid
 )
SELECT
   "DT_Output"."index" AS "index",
   "DT_Output"."E" AS "Estimator"
FROM "DT_Output"
SQL_OUT_PUT_LAST_LINES_END ('freidman1_sampled', 'DecisionTreeRegressor', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 12 entries, 0 to 11
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     12 non-null     float32
 1   X_1     12 non-null     float32
 2   X_2     12 non-null     float32
 3   X_3     12 non-null     float32
 4   X_4     12 non-null     float32
 5   X_5     12 non-null     float32
 6   X_6     12 non-null     float32
 7   X_7     12 non-null     float32
 8   X_8     12 non-null     float32
 9   X_9     12 non-null     float32
dtypes: float32(10)
memory usage: 576.0 bytes
            X_0       X_1       X_2  ...       X_7       X_8       X_9
index                                ...                              
0      0.544738  0.515912  0.990435  ...  0.041089  0.898018  0.377159
1      0.783459  0.095321  0.135945  ...  0.422766  0.019766  0.833486
2      0.652811  0.757719  0.306902  ...  0.146070  0.894295  0.086598
3      0.226051  0.939732  0.731124  ...  0.843453  0.185038  0.248943
4      0.764610  0.378970  0.823855  ...  0.361050  0.814980  0.123688
5      0.368356  0.189593  0.403483  ...  0.840440  0.462841  0.813023
6      0.888102  0.149216  0.426902  ...  0.653572  0.865909  0.986362
7      0.825366  0.284076  0.971058  ...  0.900471  0.780397  0.355315
8      0.235384  0.117604  0.514017  ...  0.091568  0.527227  0.211281
9      0.834709  0.502155  0.670056  ...  0.848192  0.038824  0.113899
10     0.287599  0.939261  0.380885  ...  0.812585  0.329620  0.003549
11     0.992031  0.233387  0.782862  ...  0.403574  0.461541  0.895167

[12 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 12 entries, 0 to 11
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      12 non-null     int64  
 1   Estimator  12 non-null     float64
dtypes: float64(1), int64(1)
memory usage: 324.0 bytes
    index  Estimator
0       0  15.807614
1       1  14.766437
2       2  22.842493
3       3  19.544313
4       4  21.897690
5       5  11.119547
6       6   9.912128
7       7  15.012190
8       8  10.304958
9       9  12.722529
10     10  15.371187
11     11  11.851628
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
MLLITE_REG_SQL_L1_ERROR ('freidman1_sampled', 'DecisionTreeRegressor') Estimator 2.8165690135750765e-07
    index  SQL_Estimator  Py_Estimator     SQL_Error
0       0      15.807614     15.807614 -3.264771e-07
1       1      14.766437     14.766437  4.231567e-07
2       2      22.842493     22.842493 -5.725098e-08
3       3      19.544313     19.544313 -4.307861e-07
4       4      21.897690     21.897690  1.806641e-07
5       5      11.119547     11.119547  1.097412e-07
6       6       9.912128      9.912128 -4.484863e-07
7       7      15.012190     15.012190  1.348877e-07
8       8      10.304958     10.304958 -3.435059e-07
9       9      12.722529     12.722529 -4.113159e-07
10     10      15.371187     15.371187 -2.100830e-07
11     11      11.851628     11.851628 -3.035278e-07
MLLITE_REG_SQL_EXECUTION_STATUS ('freidman1_sampled', 'DecisionTreeRegressor', 'Success')
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
