         X_0       X_1       X_2  ...       X_8       X_9     target
0   0.456887  0.295923  0.591968  ...  0.761317  0.245544  15.370928
1   0.716619  0.420279  0.400670  ...  0.167246  0.133911  13.065349
2   0.140833  0.617769  0.186105  ...  0.648067  0.563459  15.524062
3   0.071195  0.704806  0.073220  ...  0.725143  0.940551  12.395770
4   0.710411  0.866302  0.056103  ...  0.666595  0.305953  19.010028
..       ...       ...       ...  ...       ...       ...        ...
95  0.759884  0.645603  0.858346  ...  0.340241  0.086284  20.439077
96  0.133898  0.993722  0.247951  ...  0.685693  0.539265  14.384506
97  0.907576  0.735434  0.379983  ...  0.264531  0.516615  14.885318
98  0.368356  0.189593  0.403483  ...  0.462841  0.813023  11.119547
99  0.268993  0.202785  0.253928  ...  0.743187  0.015995   4.502946

[100 rows x 11 columns]
MLLITE_MODEL_SET_OPTIONS MLPRegressor {"hidden_layer_sizes" : [4, 8, 6]}
MLLITE_MODEL_OPTIONS_DEFAULT MLPRegressor { "max_iter" : 32}
MLLITE_MODEL_OPTIONS_AFTER_SETTING MLPRegressor { "hidden_layer_sizes" : [4, 8, 6],  "max_iter" : 32 , }
MLLITE_MODEL_JSON_AFTER_SETTING MLPRegressor None
('OPERATION_START', 'TRAINING')
[[0.4568872  0.2959234  0.59196806 0.6449268  0.92630494 0.9157275
  0.99709725 0.2905369  0.7613175  0.24554443]
 [0.7166186  0.420279   0.40067008 0.24398686 0.46325052 0.05229123
  0.34726295 0.39939457 0.16724615 0.13391146]
 [0.14083336 0.61776936 0.18610482 0.667265   0.83628976 0.8805156
  0.79894525 0.1980786  0.6480668  0.5634588 ]
 [0.07119486 0.70480555 0.07321981 0.22164722 0.9933174  0.43409562
  0.48198017 0.13922417 0.72514343 0.9405507 ]
 [0.71041054 0.8663024  0.05610295 0.50554484 0.13280703 0.3171181
  0.52081394 0.3842079  0.6665948  0.30595312]] [15.370928 13.06535  15.524062 12.39577  19.010029]
MLLITE_FIT_USING_MODEL mllite_mlp_reg.MLPRegressor_ff4_ff4
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT' 1 3
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT' 2 3
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 3 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 6 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 9 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 12 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 15 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 18 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 21 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 24 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 27 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 30 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 32 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT' 3 3
('OPERATION_END_ELAPSED', 0.012, 'TRAINING')
{ "hidden_layer_sizes" : [4, 8, 6],  "max_iter" : 32 , }
{ "hidden_layer_sizes" : [4, 8, 6],  "max_iter" : 32 , }
{
	"metadata" : { "model" : "Rosenblatt_MLP", "version" : "2024-W12", "signature" : "ff4_ff4"},
	"options" : {  "hidden_layer_sizes" : [ 4, 8, 6 ], "activation" : "relu", "solver" : "adam", "alpha" : 0.000100, "batch_size" : null, "learning_rate" : "constant", "learning_rate_init" : 0.001000, "power_t" : 0.500000, "max_iter" : 32, "shuffle" : 1, "random_state" : 1789, "tol" : 0.000100, "verbose" : 0, "warm_start" : 0, "momentum" : 0.900000, "nesterovs_momentum" : 1, "early_stopping" : 0, "validation_fraction" : 0.100000, "beta_1" : 0.900000, "beta_2" : 0.999000, "epsilon" : 0.000000, "n_iter_no_change" : 10, "max_fun" : 15000 },
	"dataset" : { "dataset_rows" : 100, "dataset_features" : 10 },
	"layers" : {
		"sizes" : [ 10, 4, 8, 6, 1 ],
		"Layer_0" : {
			"name" : "Input_Layer",
			"NbInputs" : 0,
			"NbOutputs" : 10 
		},
		"Layer_1" : {
			"name" : "Hidden_Layer_1",
			"NbInputs" : 10,
			"NbOutputs" : 4 ,
			"coeffs_0" : [ -0.086151, 0.310857, -0.288626, -0.073694 ],
			"coeffs_1" : [ 0.090021, -0.488542, 0.169394, -0.001906 ],
			"coeffs_2" : [ 0.527701, 0.109061, 0.525159, -0.125667 ],
			"coeffs_3" : [ 0.620419, -0.609447, -0.291802, 0.220656 ],
			"coeffs_4" : [ 0.311694, -0.337068, -0.350654, -0.520358 ],
			"coeffs_5" : [ 0.253210, -0.616803, -0.125141, 0.013197 ],
			"coeffs_6" : [ -0.160237, -0.623938, -0.355279, 0.508203 ],
			"coeffs_7" : [ -0.078237, -0.024552, -0.603224, 0.013289 ],
			"coeffs_8" : [ -0.230021, 0.213548, -0.152307, 0.250741 ],
			"coeffs_9" : [ -0.465676, 0.544425, -0.499634, 0.323890 ],
			"intercepts" : [ -0.500478, 0.330970, 0.134774, 0.570070 ]
		},
		"Layer_2" : {
			"name" : "Hidden_Layer_2",
			"NbInputs" : 4,
			"NbOutputs" : 8 ,
			"coeffs_0" : [ -0.413512, -0.573180, 0.208958, 0.254996, 0.506129, 0.577008, 0.508644, -0.427506 ],
			"coeffs_1" : [ 0.434315, 0.545600, -0.400001, 0.315838, 0.190766, 0.025500, 0.056742, 0.391580 ],
			"coeffs_2" : [ -0.589918, 0.073217, 0.273715, 0.406786, -0.587008, 0.473844, -0.409916, -0.635678 ],
			"coeffs_3" : [ 0.728335, 0.644218, -0.119438, -0.575044, 0.006043, 0.645686, -0.540782, 0.313849 ],
			"intercepts" : [ 0.349874, 0.386742, 0.594799, -0.357124, 0.329680, 0.466563, 0.486804, -0.028160 ]
		},
		"Layer_3" : {
			"name" : "Hidden_Layer_3",
			"NbInputs" : 8,
			"NbOutputs" : 6 ,
			"coeffs_0" : [ -0.612235, 0.295629, -0.016325, -0.124039, -0.480768, -0.619361 ],
			"coeffs_1" : [ -0.270100, 0.559126, 0.003915, -0.133482, -0.151607, -0.586402 ],
			"coeffs_2" : [ 0.187145, -0.230330, -0.276805, -0.133022, 0.269611, -0.462554 ],
			"coeffs_3" : [ -0.215160, 0.376506, 0.431074, 0.557300, 0.475690, 0.371699 ],
			"coeffs_4" : [ -0.309534, 0.030118, 0.159393, 0.443776, 0.321790, -0.001604 ],
			"coeffs_5" : [ 0.345923, 0.423569, 0.084545, -0.225065, -0.178974, -0.324393 ],
			"coeffs_6" : [ 0.313571, 0.333496, -0.475414, 0.212193, -0.417195, -0.001729 ],
			"coeffs_7" : [ 0.091373, -0.295713, 0.275423, -0.618701, -0.588556, 0.488080 ],
			"intercepts" : [ 0.562042, -0.464738, -0.269185, -0.494865, -0.500519, -0.502640 ]
		},
		"Layer_4" : {
			"name" : "Output_Layer",
			"NbInputs" : 6,
			"NbOutputs" : 1 ,
			"coeffs_0" : [ -0.277638 ],
			"coeffs_1" : [ -0.181311 ],
			"coeffs_2" : [ -0.586622 ],
			"coeffs_3" : [ -0.667527 ],
			"coeffs_4" : [ -0.819586 ],
			"coeffs_5" : [ 0.178692 ],
			"intercepts" : [ -0.575971 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/regression/MLPRegressor/mllite.MLPRegressor_freidman1_original_option_1.json'

MLLITE_MODEL_SET_OPTIONS MLPRegressor {"hidden_layer_sizes" : [4, 8, 6]}
MLLITE_MODEL_OPTIONS_DEFAULT MLPRegressor { "max_iter" : 32}
MLLITE_MODEL_OPTIONS_AFTER_SETTING MLPRegressor { "hidden_layer_sizes" : [4, 8, 6],  "max_iter" : 32 , }
MLLITE_MODEL_JSON_AFTER_SETTING MLPRegressor None
MLLITE_RELOADING_MODEL mllite_mlp_reg.MLPRegressor_ff4_ff4
{
	"metadata" : { "model" : "Rosenblatt_MLP", "version" : "2024-W12", "signature" : "ff4_ff4"},
	"options" : {  "hidden_layer_sizes" : [ 4, 8, 6 ], "activation" : "relu", "solver" : "adam", "alpha" : 0.000100, "batch_size" : null, "learning_rate" : "constant", "learning_rate_init" : 0.001000, "power_t" : 0.500000, "max_iter" : 32, "shuffle" : 1, "random_state" : 1789, "tol" : 0.000100, "verbose" : 0, "warm_start" : 0, "momentum" : 0.900000, "nesterovs_momentum" : 1, "early_stopping" : 0, "validation_fraction" : 0.100000, "beta_1" : 0.900000, "beta_2" : 0.999000, "epsilon" : 0.000000, "n_iter_no_change" : 10, "max_fun" : 15000 },
	"dataset" : { "dataset_rows" : 100, "dataset_features" : 10 },
	"layers" : {
		"sizes" : [ 10, 4, 8, 6, 1 ],
		"Layer_0" : {
			"name" : "Input_Layer",
			"NbInputs" : 0,
			"NbOutputs" : 10 
		},
		"Layer_1" : {
			"name" : "Hidden_Layer_1",
			"NbInputs" : 10,
			"NbOutputs" : 4 ,
			"coeffs_0" : [ -0.086151, 0.310857, -0.288626, -0.073694 ],
			"coeffs_1" : [ 0.090021, -0.488542, 0.169394, -0.001906 ],
			"coeffs_2" : [ 0.527701, 0.109061, 0.525159, -0.125667 ],
			"coeffs_3" : [ 0.620419, -0.609447, -0.291802, 0.220656 ],
			"coeffs_4" : [ 0.311694, -0.337068, -0.350654, -0.520358 ],
			"coeffs_5" : [ 0.253210, -0.616803, -0.125141, 0.013197 ],
			"coeffs_6" : [ -0.160237, -0.623938, -0.355279, 0.508203 ],
			"coeffs_7" : [ -0.078237, -0.024552, -0.603224, 0.013289 ],
			"coeffs_8" : [ -0.230021, 0.213548, -0.152307, 0.250741 ],
			"coeffs_9" : [ -0.465676, 0.544425, -0.499634, 0.323890 ],
			"intercepts" : [ -0.500478, 0.330970, 0.134774, 0.570070 ]
		},
		"Layer_2" : {
			"name" : "Hidden_Layer_2",
			"NbInputs" : 4,
			"NbOutputs" : 8 ,
			"coeffs_0" : [ -0.413512, -0.573180, 0.208958, 0.254996, 0.506129, 0.577008, 0.508644, -0.427506 ],
			"coeffs_1" : [ 0.434315, 0.545600, -0.400001, 0.315838, 0.190766, 0.025500, 0.056742, 0.391580 ],
			"coeffs_2" : [ -0.589918, 0.073217, 0.273715, 0.406786, -0.587008, 0.473844, -0.409916, -0.635678 ],
			"coeffs_3" : [ 0.728335, 0.644218, -0.119438, -0.575044, 0.006043, 0.645686, -0.540782, 0.313849 ],
			"intercepts" : [ 0.349874, 0.386742, 0.594799, -0.357124, 0.329680, 0.466563, 0.486804, -0.028160 ]
		},
		"Layer_3" : {
			"name" : "Hidden_Layer_3",
			"NbInputs" : 8,
			"NbOutputs" : 6 ,
			"coeffs_0" : [ -0.612235, 0.295629, -0.016325, -0.124039, -0.480768, -0.619361 ],
			"coeffs_1" : [ -0.270100, 0.559126, 0.003915, -0.133482, -0.151607, -0.586402 ],
			"coeffs_2" : [ 0.187145, -0.230330, -0.276805, -0.133022, 0.269611, -0.462554 ],
			"coeffs_3" : [ -0.215160, 0.376506, 0.431074, 0.557300, 0.475690, 0.371699 ],
			"coeffs_4" : [ -0.309534, 0.030118, 0.159393, 0.443776, 0.321790, -0.001604 ],
			"coeffs_5" : [ 0.345923, 0.423569, 0.084545, -0.225065, -0.178974, -0.324393 ],
			"coeffs_6" : [ 0.313571, 0.333496, -0.475414, 0.212193, -0.417195, -0.001729 ],
			"coeffs_7" : [ 0.091373, -0.295713, 0.275423, -0.618701, -0.588556, 0.488080 ],
			"intercepts" : [ 0.562042, -0.464738, -0.269185, -0.494865, -0.500519, -0.502640 ]
		},
		"Layer_4" : {
			"name" : "Output_Layer",
			"NbInputs" : 6,
			"NbOutputs" : 1 ,
			"coeffs_0" : [ -0.277638 ],
			"coeffs_1" : [ -0.181311 ],
			"coeffs_2" : [ -0.586622 ],
			"coeffs_3" : [ -0.667527 ],
			"coeffs_4" : [ -0.819586 ],
			"coeffs_5" : [ 0.178692 ],
			"intercepts" : [ -0.575971 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"dataset" : 	{
		"dataset_features" : 10,
		"dataset_rows" : 100
	},
	"layers" : 	{
		"Layer_0" : 	{
			"NbInputs" : 0,
			"NbOutputs" : 10,
			"name" : "Input_Layer"
		},
		"Layer_1" : 	{
			"NbInputs" : 10,
			"NbOutputs" : 4,
			"coeffs_0" : [ -0.086151, 0.310857, -0.288626, -0.073694 ],
			"coeffs_1" : [ 0.090021, -0.488542, 0.169394, -0.001906 ],
			"coeffs_2" : [ 0.527701, 0.109061, 0.525159, -0.125667 ],
			"coeffs_3" : [ 0.620419, -0.609447, -0.291802, 0.220656 ],
			"coeffs_4" : [ 0.311694, -0.337068, -0.350654, -0.520358 ],
			"coeffs_5" : [ 0.25321, -0.616803, -0.125141, 0.013197 ],
			"coeffs_6" : [ -0.160237, -0.623938, -0.355279, 0.508203 ],
			"coeffs_7" : [ -0.078237, -0.024552, -0.603224, 0.013289 ],
			"coeffs_8" : [ -0.230021, 0.213548, -0.152307, 0.250741 ],
			"coeffs_9" : [ -0.465676, 0.544425, -0.499634, 0.32389 ],
			"intercepts" : [ -0.500478, 0.33097, 0.134774, 0.57007 ],
			"name" : "Hidden_Layer_1"
		},
		"Layer_2" : 	{
			"NbInputs" : 4,
			"NbOutputs" : 8,
			"coeffs_0" : [ -0.413512, -0.57318, 0.208958, 0.254996, 0.506129, 0.577008, 0.508644, -0.427506 ],
			"coeffs_1" : [ 0.434315, 0.5456, -0.400001, 0.315838, 0.190766, 0.0255, 0.056742, 0.39158 ],
			"coeffs_2" : [ -0.589918, 0.073217, 0.273715, 0.406786, -0.587008, 0.473844, -0.409916, -0.635678 ],
			"coeffs_3" : [ 0.728335, 0.644218, -0.119438, -0.575044, 0.006043, 0.645686, -0.540782, 0.313849 ],
			"intercepts" : [ 0.349874, 0.386742, 0.594799, -0.357124, 0.32968, 0.466563, 0.486804, -0.02816 ],
			"name" : "Hidden_Layer_2"
		},
		"Layer_3" : 	{
			"NbInputs" : 8,
			"NbOutputs" : 6,
			"coeffs_0" : [ -0.612235, 0.295629, -0.016325, -0.124039, -0.480768, -0.619361 ],
			"coeffs_1" : [ -0.2701, 0.559126, 0.003915, -0.133482, -0.151607, -0.586402 ],
			"coeffs_2" : [ 0.187145, -0.23033, -0.276805, -0.133022, 0.269611, -0.462554 ],
			"coeffs_3" : [ -0.21516, 0.376506, 0.431074, 0.5573, 0.47569, 0.371699 ],
			"coeffs_4" : [ -0.309534, 0.030118, 0.159393, 0.443776, 0.32179, -0.001604 ],
			"coeffs_5" : [ 0.345923, 0.423569, 0.084545, -0.225065, -0.178974, -0.324393 ],
			"coeffs_6" : [ 0.313571, 0.333496, -0.475414, 0.212193, -0.417195, -0.001729 ],
			"coeffs_7" : [ 0.091373, -0.295713, 0.275423, -0.618701, -0.588556, 0.48808 ],
			"intercepts" : [ 0.562042, -0.464738, -0.269185, -0.494865, -0.500519, -0.50264 ],
			"name" : "Hidden_Layer_3"
		},
		"Layer_4" : 	{
			"NbInputs" : 6,
			"NbOutputs" : 1,
			"coeffs_0" : [ -0.277638 ],
			"coeffs_1" : [ -0.181311 ],
			"coeffs_2" : [ -0.586622 ],
			"coeffs_3" : [ -0.667527 ],
			"coeffs_4" : [ -0.819586 ],
			"coeffs_5" : [ 0.178692 ],
			"intercepts" : [ -0.575971 ],
			"name" : "Output_Layer"
		},
		"sizes" : [ 10, 4, 8, 6, 1 ]
	},
	"metadata" :  { "model" : "Rosenblatt_MLP", "signature" : "ff4_ff4", "version" : "2024-W12" },
	"options" :  { "activation" : "relu", "alpha" : 0.0001, "batch_size" : null, "beta_1" : 0.9, "beta_2" : 0.999, "early_stopping" : 0, "epsilon" : 0.0, "hidden_layer_sizes" : [ 4, 8, 6 ], "learning_rate" : "constant", "learning_rate_init" : 0.001, "max_fun" : 15000, "max_iter" : 32, "momentum" : 0.9, "n_iter_no_change" : 10, "nesterovs_momentum" : 1, "power_t" : 0.5, "random_state" : 1789, "shuffle" : 1, "solver" : "adam", "tol" : 0.0001, "validation_fraction" : 0.1, "verbose" : 0, "warm_start" : 0 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
[-0.7524087  -0.72459656 -0.7118885  -0.7116372  -0.7191267  -0.7375681
 -0.70957464 -0.7091345  -0.7368195  -0.7275041  -0.7319578  -0.74734384
 -0.7089587  -0.73241544 -0.8040565  -0.7125953  -0.73819304 -0.76672566
 -0.79342175 -0.7112481  -0.75016654 -0.7504649  -0.73626626 -0.72603905
 -0.73374087 -0.70825154 -0.76169425 -0.7087878  -0.79310775 -0.71895254
 -0.7236242  -0.72334737 -0.8243549  -0.7921671  -0.72161007 -0.74365705
 -0.7286781  -0.71302813 -0.727363   -0.7461611  -0.7037391  -0.7104111
 -0.7127882  -0.7615248  -0.7187528  -0.73314726 -0.75717354 -0.7094178
 -0.72625595 -0.7316194  -0.72623    -0.739417   -0.72175455 -0.70823354
 -0.7998002  -0.736946   -0.72587186 -0.7104689  -0.74148023 -0.73846066
 -0.72066885 -0.71754336 -0.75923604 -0.741322   -0.7156285  -0.7605752
 -0.87402475 -0.76770604 -0.7154093  -0.77672666 -0.71153104 -0.8153746
 -0.7490312  -0.72491074 -0.77688944 -0.82098013 -0.7225462  -0.7600033
 -0.8240829  -0.70672035 -0.7092206  -0.7141548  -0.7116874  -0.7109103
 -0.7550761  -0.71875364 -0.7225806  -0.8021388  -0.70973504 -0.7126839
 -0.7150628  -0.7138612  -0.73409504 -0.7591982  -0.7296169  -0.7755976
 -0.723023   -0.7347297  -0.71076584 -0.7097432 ]
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
('OPERATION_START', 'PREDICT')
[-0.7524088  -0.7245969  -0.71188885 -0.7116376  -0.7191268  -0.73756826
 -0.70957506 -0.70913494 -0.73681974 -0.72750413 -0.731958   -0.74734396
 -0.7089591  -0.73241556 -0.8040567  -0.7125957  -0.73819315 -0.7667258
 -0.7934219  -0.7112485  -0.7501667  -0.75046515 -0.7362664  -0.7260392
 -0.73374104 -0.70825195 -0.7616945  -0.70878816 -0.7931078  -0.7189529
 -0.7236246  -0.7233476  -0.82435507 -0.7921673  -0.7216105  -0.74365723
 -0.72867846 -0.71302855 -0.7273632  -0.74616134 -0.7037392  -0.7104114
 -0.71278864 -0.7615249  -0.7187531  -0.7331474  -0.75717366 -0.7094182
 -0.7262561  -0.73161966 -0.72623026 -0.73941725 -0.7217546  -0.7082339
 -0.7998005  -0.7369461  -0.7258722  -0.7104693  -0.74148035 -0.7384609
 -0.72066915 -0.7175438  -0.7592362  -0.74132216 -0.71562886 -0.76057523
 -0.87402487 -0.7677062  -0.7154094  -0.77672684 -0.71153146 -0.81537473
 -0.7490314  -0.7249109  -0.7768896  -0.82098037 -0.72254634 -0.7600035
 -0.8240831  -0.70672077 -0.709221   -0.7141552  -0.71168786 -0.7109107
 -0.7550763  -0.71875405 -0.72258097 -0.8021389  -0.7097354  -0.71268404
 -0.7150629  -0.7138614  -0.73409516 -0.7591984  -0.72961724 -0.7755977
 -0.7230233  -0.73472995 -0.71076626 -0.7097436 ]
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
MODEL_PERFS {'class_name': 'mllite.MLPRegressor', 'model_name': 'MLPRegressor', 'options': '{"hidden_layer_sizes" : [4, 8, 6]}', 'dataset': 'freidman1_original', 'size': 100, 'mse': 260.9692, 'mae': 15.392551, 'mape': 1.0591568, 'r2': -9.918372794955491}
WRITING_PERF_CODE 'logs/auto_tests/regression/MLPRegressor/mllite.MLPRegressor_freidman1_original_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.MLPRegressor', 'model_name': 'MLPRegressor', 'options': '{"hidden_layer_sizes" : [4, 8, 6]}', 'dataset': 'freidman1_original', 'training_time_in_sec': 0.012, 'prediction_time_in_sec': 0.001}
WRITING_SQL_CODE 'logs/auto_tests/regression/MLPRegressor/mllite.MLPRegressor_freidman1_original_option_1.sql'



SQL_OUT_PUT_FIRST_LINES_START
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
"Input_Layer_BA" AS
 ( SELECT
    t."index" as "index",
    t.X_0 AS OUT_0,
    t.X_1 AS OUT_1,
    t.X_2 AS OUT_2,
    t.X_3 AS OUT_3,
    t.X_4 AS OUT_4,
    t.X_5 AS OUT_5,
    t.X_6 AS OUT_6,
    t.X_7 AS OUT_7,
    t.X_8 AS OUT_8,
    t.X_9 AS OUT_9
 FROM model_input AS t
),
"Hidden_Layer_1_BA" AS
 ( SELECT
    t."index" as "index",
    -0.500478 + -0.086151 * t.OUT_0  + 0.090021 * t.OUT_1  + 0.527701 * t.OUT_2  + 0.620419 * t.OUT_3  + 0.311694 * t.OUT_4  + 0.253210 * t.OUT_5  + -0.160237 * t.OUT_6  + -0.078237 * t.OUT_7  + -0.230021 * t.OUT_
SQL_OUT_PUT_FIRST_LINES_END
SQL_OUT_PUT_LAST_LINES_START
9361 * t.OUT_0  + -0.586402 * t.OUT_1  + -0.462554 * t.OUT_2  + 0.371699 * t.OUT_3  + -0.001604 * t.OUT_4  + -0.324393 * t.OUT_5  + -0.001729 * t.OUT_6  + 0.488080 * t.OUT_7 AS OUT_5
   FROM Hidden_Layer_2_Activation AS t
 ),
"Hidden_Layer_3_Activation" AS
 ( SELECT
    t."index" as "index",
    CASE WHEN (OUT_0 > 0) THEN OUT_0 ELSE 0 END AS OUT_0,
    CASE WHEN (OUT_1 > 0) THEN OUT_1 ELSE 0 END AS OUT_1,
    CASE WHEN (OUT_2 > 0) THEN OUT_2 ELSE 0 END AS OUT_2,
    CASE WHEN (OUT_3 > 0) THEN OUT_3 ELSE 0 END AS OUT_3,
    CASE WHEN (OUT_4 > 0) THEN OUT_4 ELSE 0 END AS OUT_4,
    CASE WHEN (OUT_5 > 0) THEN OUT_5 ELSE 0 END AS OUT_5
   FROM Hidden_Layer_3_BA AS t
 ),
"Output_Layer_BA" AS
 ( SELECT
    t."index" as "index",
    -0.575971 + -0.277638 * t.OUT_0  + -0.181311 * t.OUT_1  + -0.586622 * t.OUT_2  + -0.667527 * t.OUT_3  + -0.819586 * t.OUT_4  + 0.178692 * t.OUT_5 AS OUT_0
   FROM Hidden_Layer_3_Activation AS t
 )
 SELECT
    t."index" AS "index",
    t.OUT_0 AS "Estimator"
  FROM "Output_Layer_BA" AS t

SQL_OUT_PUT_LAST_LINES_END




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 100 entries, 0 to 99
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     100 non-null    float32
 1   X_1     100 non-null    float32
 2   X_2     100 non-null    float32
 3   X_3     100 non-null    float32
 4   X_4     100 non-null    float32
 5   X_5     100 non-null    float32
 6   X_6     100 non-null    float32
 7   X_7     100 non-null    float32
 8   X_8     100 non-null    float32
 9   X_9     100 non-null    float32
dtypes: float32(10)
memory usage: 4.7 KB
            X_0       X_1       X_2  ...       X_7       X_8       X_9
index                                ...                              
0      0.456887  0.295923  0.591968  ...  0.290537  0.761317  0.245544
1      0.716619  0.420279  0.400670  ...  0.399395  0.167246  0.133911
2      0.140833  0.617769  0.186105  ...  0.198079  0.648067  0.563459
3      0.071195  0.704806  0.073220  ...  0.139224  0.725143  0.940551
4      0.710411  0.866302  0.056103  ...  0.384208  0.666595  0.305953
...         ...       ...       ...  ...       ...       ...       ...
95     0.759884  0.645603  0.858346  ...  0.314409  0.340241  0.086284
96     0.133898  0.993722  0.247951  ...  0.342368  0.685693  0.539265
97     0.907576  0.735434  0.379983  ...  0.265155  0.264531  0.516615
98     0.368356  0.189593  0.403483  ...  0.840440  0.462841  0.813023
99     0.268993  0.202785  0.253928  ...  0.076708  0.743187  0.015995

[100 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 100 entries, 0 to 99
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      100 non-null    int64  
 1   Estimator  100 non-null    float64
dtypes: float64(1), int64(1)
memory usage: 1.7 KB
    index  Estimator
0       0  -0.752409
1       1  -0.724597
2       2  -0.711889
3       3  -0.711638
4       4  -0.719127
..    ...        ...
95     95  -0.775598
96     96  -0.723023
97     97  -0.734730
98     98  -0.710766
99     99  -0.709744

[100 rows x 2 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
    index  SQL_Estimator  Py_Estimator
84     84      -0.755076     -0.755076
85     85      -0.718754     -0.718754
86     86      -0.722581     -0.722581
87     87      -0.802139     -0.802139
88     88      -0.709735     -0.709735
89     89      -0.712684     -0.712684
90     90      -0.715063     -0.715063
91     91      -0.713861     -0.713861
92     92      -0.734095     -0.734095
93     93      -0.759198     -0.759198
94     94      -0.729617     -0.729617
95     95      -0.775598     -0.775598
96     96      -0.723023     -0.723023
97     97      -0.734730     -0.734730
98     98      -0.710766     -0.710766
99     99      -0.709744     -0.709743
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
