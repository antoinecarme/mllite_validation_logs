         X_0       X_1       X_2  ...       X_8       X_9     target
0   0.456887  0.295923  0.591968  ...  0.761317  0.245544  15.370928
1   0.716619  0.420279  0.400670  ...  0.167246  0.133911  13.065349
2   0.140833  0.617769  0.186105  ...  0.648067  0.563459  15.524062
3   0.071195  0.704806  0.073220  ...  0.725143  0.940551  12.395770
4   0.710411  0.866302  0.056103  ...  0.666595  0.305953  19.010028
..       ...       ...       ...  ...       ...       ...        ...
95  0.759884  0.645603  0.858346  ...  0.340241  0.086284  20.439077
96  0.133898  0.993722  0.247951  ...  0.685693  0.539265  14.384506
97  0.907576  0.735434  0.379983  ...  0.264531  0.516615  14.885318
98  0.368356  0.189593  0.403483  ...  0.462841  0.813023  11.119547
99  0.268993  0.202785  0.253928  ...  0.743187  0.015995   4.502946

[100 rows x 11 columns]
MLLITE_MODEL_SET_OPTIONS NuSVR {"nu" : 0.1}
MLLITE_MODEL_OPTIONS_DEFAULT NuSVR { "max_iter" : 128 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING NuSVR { "nu" : 0.1,  "max_iter" : 128  , }
MLLITE_MODEL_JSON_AFTER_SETTING NuSVR None
('OPERATION_START', 'TRAINING')
[[0.4568872  0.2959234  0.59196806 0.6449268  0.92630494 0.9157275
  0.99709725 0.2905369  0.7613175  0.24554443]
 [0.7166186  0.420279   0.40067008 0.24398686 0.46325052 0.05229123
  0.34726295 0.39939457 0.16724615 0.13391146]
 [0.14083336 0.61776936 0.18610482 0.667265   0.83628976 0.8805156
  0.79894525 0.1980786  0.6480668  0.5634588 ]
 [0.07119486 0.70480555 0.07321981 0.22164722 0.9933174  0.43409562
  0.48198017 0.13922417 0.72514343 0.9405507 ]
 [0.71041054 0.8663024  0.05610295 0.50554484 0.13280703 0.3171181
  0.52081394 0.3842079  0.6665948  0.30595312]] [15.370928 13.06535  15.524062 12.39577  19.010029]
MLLITE_FIT_USING_MODEL mllite_nu_svm_reg.NuSVR_ff4_ff4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_NU_REGRESSOR_FIT' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_NU_REGRESSOR_FIT' 2 4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_NU_REGRESSOR_FIT' 3 4
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:NuSVR_Global' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_NU_REGRESSOR_FIT' 4 4
('OPERATION_END_ELAPSED', 0.017, 'TRAINING')
{ "nu" : 0.1,  "max_iter" : 128  , }
{ "nu" : 0.1,  "max_iter" : 128  , }
{
	"metadata" : { "model" : "Vapnik_NuSVR_RBF", "version" : "2024-W12", "signature" : "ff4_ff4"},
	"options" : {"svm_type" : "nu_svr", "kernel" : "rbf", "degree" : 3, "gamma" : 1.142622, "coef0" : 0.000000, "cache_size" : 300, "tol" : 0.001000, "nu" : 0.100000, "epsilon" : 0.000000, "shrinking" : 0, "probability" : 0, "C" : 1.000000, "max_iter" : 128, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 100, "dataset_features" : 10 },
	"svm_model" : {
	"classes" : 2,
	"L" : 12,
	"SupportVectors" : {
		"SV_00" : [ 0.734481, 0.482054, 0.789831, 0.806913, 0.681106, 0.602843, 0.333277, 0.147743, 0.020703, 0.509223 ],
		"SV_01" : [ 0.764610, 0.378970, 0.823855, 0.913603, 0.553400, 0.055048, 0.588332, 0.361050, 0.814980, 0.123688 ],
		"SV_02" : [ 0.233546, 0.241107, 0.660121, 0.055376, 0.564663, 0.209055, 0.142822, 0.887287, 0.428596, 0.316988 ],
		"SV_03" : [ 0.366207, 0.096199, 0.520676, 0.250113, 0.155164, 0.752654, 0.007439, 0.025310, 0.924844, 0.961402 ],
		"SV_04" : [ 0.663564, 0.399281, 0.158547, 0.930965, 0.846977, 0.986627, 0.132816, 0.426558, 0.999950, 0.674509 ],
		"SV_05" : [ 0.733847, 0.503559, 0.161205, 0.982267, 0.531810, 0.770971, 0.043226, 0.562131, 0.583390, 0.870415 ],
		"SV_06" : [ 0.917115, 0.036220, 0.312429, 0.285258, 0.269077, 0.050048, 0.163158, 0.861914, 0.830921, 0.459571 ],
		"SV_07" : [ 0.480054, 0.664308, 0.985340, 0.567078, 0.994149, 0.780890, 0.232756, 0.567089, 0.093123, 0.031981 ],
		"SV_08" : [ 0.937776, 0.125575, 0.655885, 0.096146, 0.187430, 0.485816, 0.973901, 0.496639, 0.139176, 0.557847 ],
		"SV_09" : [ 0.414708, 0.117089, 0.562469, 0.105808, 0.080834, 0.195908, 0.881411, 0.049262, 0.050168, 0.271948 ],
		"SV_10" : [ 0.652811, 0.757719, 0.306902, 0.828286, 0.763064, 0.859003, 0.873377, 0.146070, 0.894295, 0.086598 ],
		"SV_11" : [ 0.268993, 0.202785, 0.253928, 0.049719, 0.217885, 0.770274, 0.487503, 0.076708, 0.743187, 0.015995 ]
	},
	"SupportVectorsCoefs" : {
		"SV_coef_0" : [ 0.375115, 0.624885, -1.000000, -1.000000, 1.000000, 1.000000, -0.701022, 1.000000, -0.298979, -1.000000, 1.000000, -1.000000 ]
	},
	"rho" : [ -14.010346 ],
	"nSV" : [ 12 ],
	"probA" : [ ],
	"probB" : [ ],
	"n_iter" : [ 21 ]
}
}
WRITING_JSON_CODE 'logs/auto_tests/regression/NuSVR/mllite.NuSVR_freidman1_original_option_1.json'

MLLITE_MODEL_SET_OPTIONS NuSVR {"nu" : 0.1}
MLLITE_MODEL_OPTIONS_DEFAULT NuSVR { "max_iter" : 128 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING NuSVR { "nu" : 0.1,  "max_iter" : 128  , }
MLLITE_MODEL_JSON_AFTER_SETTING NuSVR None
MLLITE_RELOADING_MODEL mllite_nu_svm_reg.NuSVR_ff4_ff4
{
	"metadata" : { "model" : "Vapnik_NuSVR_RBF", "version" : "2024-W12", "signature" : "ff4_ff4"},
	"options" : {"svm_type" : "nu_svr", "kernel" : "rbf", "degree" : 3, "gamma" : 1.142622, "coef0" : 0.000000, "cache_size" : 300, "tol" : 0.001000, "nu" : 0.100000, "epsilon" : 0.000000, "shrinking" : 0, "probability" : 0, "C" : 1.000000, "max_iter" : 128, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 100, "dataset_features" : 10 },
	"svm_model" : {
	"classes" : 2,
	"L" : 12,
	"SupportVectors" : {
		"SV_00" : [ 0.734481, 0.482054, 0.789831, 0.806913, 0.681106, 0.602843, 0.333277, 0.147743, 0.020703, 0.509223 ],
		"SV_01" : [ 0.764610, 0.378970, 0.823855, 0.913603, 0.553400, 0.055048, 0.588332, 0.361050, 0.814980, 0.123688 ],
		"SV_02" : [ 0.233546, 0.241107, 0.660121, 0.055376, 0.564663, 0.209055, 0.142822, 0.887287, 0.428596, 0.316988 ],
		"SV_03" : [ 0.366207, 0.096199, 0.520676, 0.250113, 0.155164, 0.752654, 0.007439, 0.025310, 0.924844, 0.961402 ],
		"SV_04" : [ 0.663564, 0.399281, 0.158547, 0.930965, 0.846977, 0.986627, 0.132816, 0.426558, 0.999950, 0.674509 ],
		"SV_05" : [ 0.733847, 0.503559, 0.161205, 0.982267, 0.531810, 0.770971, 0.043226, 0.562131, 0.583390, 0.870415 ],
		"SV_06" : [ 0.917115, 0.036220, 0.312429, 0.285258, 0.269077, 0.050048, 0.163158, 0.861914, 0.830921, 0.459571 ],
		"SV_07" : [ 0.480054, 0.664308, 0.985340, 0.567078, 0.994149, 0.780890, 0.232756, 0.567089, 0.093123, 0.031981 ],
		"SV_08" : [ 0.937776, 0.125575, 0.655885, 0.096146, 0.187430, 0.485816, 0.973901, 0.496639, 0.139176, 0.557847 ],
		"SV_09" : [ 0.414708, 0.117089, 0.562469, 0.105808, 0.080834, 0.195908, 0.881411, 0.049262, 0.050168, 0.271948 ],
		"SV_10" : [ 0.652811, 0.757719, 0.306902, 0.828286, 0.763064, 0.859003, 0.873377, 0.146070, 0.894295, 0.086598 ],
		"SV_11" : [ 0.268993, 0.202785, 0.253928, 0.049719, 0.217885, 0.770274, 0.487503, 0.076708, 0.743187, 0.015995 ]
	},
	"SupportVectorsCoefs" : {
		"SV_coef_0" : [ 0.375115, 0.624885, -1.000000, -1.000000, 1.000000, 1.000000, -0.701022, 1.000000, -0.298979, -1.000000, 1.000000, -1.000000 ]
	},
	"rho" : [ -14.010346 ],
	"nSV" : [ 12 ],
	"probA" : [ ],
	"probB" : [ ],
	"n_iter" : [ 21 ]
}
}
BEAUTIFIED_JSON_START
{
	"dataset" : 	{
		"dataset_features" : 10,
		"dataset_rows" : 100
	},
	"metadata" :  { "model" : "Vapnik_NuSVR_RBF", "signature" : "ff4_ff4", "version" : "2024-W12" },
	"options" :  { "C" : 1.0, "cache_size" : 300, "coef0" : 0.0, "degree" : 3, "epsilon" : 0.0, "gamma" : 1.142622, "kernel" : "rbf", "max_iter" : 128, "nu" : 0.1, "probability" : 0, "random_state" : 1789, "shrinking" : 0, "svm_type" : "nu_svr", "tol" : 0.001 },
	"svm_model" : 	{
		"L" : 12,
		"SupportVectors" : 	{
			"SV_00" : [ 0.734481, 0.482054, 0.789831, 0.806913, 0.681106, 0.602843, 0.333277, 0.147743, 0.020703, 0.509223 ],
			"SV_01" : [ 0.76461, 0.37897, 0.823855, 0.913603, 0.5534, 0.055048, 0.588332, 0.36105, 0.81498, 0.123688 ],
			"SV_02" : [ 0.233546, 0.241107, 0.660121, 0.055376, 0.564663, 0.209055, 0.142822, 0.887287, 0.428596, 0.316988 ],
			"SV_03" : [ 0.366207, 0.096199, 0.520676, 0.250113, 0.155164, 0.752654, 0.007439, 0.02531, 0.924844, 0.961402 ],
			"SV_04" : [ 0.663564, 0.399281, 0.158547, 0.930965, 0.846977, 0.986627, 0.132816, 0.426558, 0.99995, 0.674509 ],
			"SV_05" : [ 0.733847, 0.503559, 0.161205, 0.982267, 0.53181, 0.770971, 0.043226, 0.562131, 0.58339, 0.870415 ],
			"SV_06" : [ 0.917115, 0.03622, 0.312429, 0.285258, 0.269077, 0.050048, 0.163158, 0.861914, 0.830921, 0.459571 ],
			"SV_07" : [ 0.480054, 0.664308, 0.98534, 0.567078, 0.994149, 0.78089, 0.232756, 0.567089, 0.093123, 0.031981 ],
			"SV_08" : [ 0.937776, 0.125575, 0.655885, 0.096146, 0.18743, 0.485816, 0.973901, 0.496639, 0.139176, 0.557847 ],
			"SV_09" : [ 0.414708, 0.117089, 0.562469, 0.105808, 0.080834, 0.195908, 0.881411, 0.049262, 0.050168, 0.271948 ],
			"SV_10" : [ 0.652811, 0.757719, 0.306902, 0.828286, 0.763064, 0.859003, 0.873377, 0.14607, 0.894295, 0.086598 ],
			"SV_11" : [ 0.268993, 0.202785, 0.253928, 0.049719, 0.217885, 0.770274, 0.487503, 0.076708, 0.743187, 0.015995 ]
		},
		"SupportVectorsCoefs" : 	{
			"SV_coef_0" : [ 0.375115, 0.624885, -1.0, -1.0, 1.0, 1.0, -0.701022, 1.0, -0.298979, -1.0, 1.0, -1.0 ]
		},
		"classes" : 2,
		"nSV" : [ 12 ],
		"n_iter" : [ 21 ],
		"probA" : [  ],
		"probB" : [  ],
		"rho" : [ -14.010346 ]
	}
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
[14.812309  13.363839  14.775704  14.076296  14.103786  14.477102
 13.864458  13.82835   13.995064  13.98105   13.778366  14.257365
 13.702352  14.774593  14.9859705 13.920523  13.943341  14.129524
 14.235002  14.450547  14.833846  13.426419  15.295296  14.467673
 14.252106  13.231844  14.761992  14.525892  14.600617  12.817629
 13.40204   13.773073  14.627996  14.907032  13.97576   13.789072
 13.560089  13.24785   14.153962  12.977662  13.344087  14.238537
 13.939198  14.163021  14.206752  14.513187  14.498984  13.146167
 14.751183  13.64698   14.042345  14.121204  15.718836  15.573795
 13.723497  13.079131  14.191338  13.912144  13.7137785 14.145438
 14.593501  13.595413  13.861349  13.828139  14.5738535 14.357948
 15.162886  14.340111  13.136191  14.003982  12.594569  14.223172
 15.406729  14.071344  14.82387   14.271765  14.215966  14.160323
 14.686093  14.727928  13.646595  13.692428  13.974166  14.740977
 14.194501  13.790057  13.591618  15.302883  12.950494  14.079498
 12.997298  13.357688  13.700762  15.422545  13.9465065 14.628281
 14.483841  14.54234   14.003901  12.708019 ]
('OPERATION_END_ELAPSED', 0.003, 'PREDICT')
('OPERATION_START', 'PREDICT')
[14.812309  13.363839  14.775705  14.076297  14.103786  14.477101
 13.864458  13.82835   13.995063  13.98105   13.778366  14.257365
 13.702353  14.774593  14.9859705 13.920523  13.943341  14.129523
 14.235002  14.450547  14.833846  13.426419  15.295295  14.467673
 14.252107  13.231844  14.761992  14.525891  14.600617  12.817629
 13.40204   13.773073  14.6279955 14.907032  13.97576   13.789071
 13.560088  13.247849  14.153961  12.977662  13.344088  14.238537
 13.939198  14.163022  14.206752  14.513187  14.498984  13.146167
 14.751183  13.64698   14.042345  14.121204  15.718836  15.573796
 13.723497  13.079131  14.191338  13.912144  13.7137785 14.145438
 14.593501  13.595413  13.861349  13.828138  14.573853  14.357948
 15.162885  14.340111  13.136191  14.003982  12.594569  14.223172
 15.406729  14.071344  14.823869  14.271765  14.215966  14.160322
 14.686093  14.727928  13.646595  13.692429  13.974166  14.740977
 14.194501  13.790057  13.591618  15.302882  12.950494  14.079499
 12.997299  13.357688  13.700762  15.4225445 13.9465065 14.62828
 14.48384   14.54234   14.003901  12.708018 ]
('OPERATION_END_ELAPSED', 0.002, 'PREDICT')
MODEL_PERFS {'class_name': 'mllite.NuSVR', 'model_name': 'NuSVR', 'options': '{"nu" : 0.1}', 'dataset': 'freidman1_original', 'size': 100, 'mse': 19.075708, 'mae': 3.60563, 'mape': 0.32791293, 'r2': 0.20191460731721123}
WRITING_PERF_CODE 'logs/auto_tests/regression/NuSVR/mllite.NuSVR_freidman1_original_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.NuSVR', 'model_name': 'NuSVR', 'options': '{"nu" : 0.1}', 'dataset': 'freidman1_original', 'training_time_in_sec': 0.017, 'prediction_time_in_sec': 0.002}
WRITING_SQL_CODE 'logs/auto_tests/regression/NuSVR/mllite.NuSVR_freidman1_original_option_1.sql'



SQL_OUT_PUT_FIRST_LINES_START
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 )
,"SV_data" AS
 ( SELECT 
   "Values"."sv_idx" AS "sv_idx",
   "Values"."coeff" AS "coeff",
   "Values"."sv_0" AS "sv_0",
   "Values"."sv_1" AS "sv_1",
   "Values"."sv_2" AS "sv_2",
   "Values"."sv_3" AS "sv_3",
   "Values"."sv_4" AS "sv_4",
   "Values"."sv_5" AS "sv_5",
   "Values"."sv_6" AS "sv_6",
   "Values"."sv_7" AS "sv_7",
   "Values"."sv_8" AS "sv_8",
   "Values"."sv_9" AS "sv_9"
  FROM
  (
     SELECT 0 AS "sv_idx", 0.375115 AS "coeff", 0.734481 AS "sv_0", 0.482054 AS "sv_1", 0.789831 AS "sv_2", 0.806913 AS "sv_3", 0.681106 AS "sv_4", 0.602
SQL_OUT_PUT_FIRST_LINES_END
SQL_OUT_PUT_LAST_LINES_START
    dp."dot_product" AS "Estimator"
   FROM
    (SELECT
      full_join_data_sv."index" AS "index",
      sum(CAST(full_join_data_sv.dot_prod AS FLOAT)) - -14.010346 AS dot_product
     FROM
       (SELECT
          model_input."index" AS "index",
          "SV_data"."coeff" *  exp(min(max(-32.0, -1.142622 * (power(model_input."X_0" - "SV_data".sv_0, 2) + power(model_input."X_1" - "SV_data".sv_1, 2) + power(model_input."X_2" - "SV_data".sv_2, 2) + power(model_input."X_3" - "SV_data".sv_3, 2) + power(model_input."X_4" - "SV_data".sv_4, 2) + power(model_input."X_5" - "SV_data".sv_5, 2) + power(model_input."X_6" - "SV_data".sv_6, 2) + power(model_input."X_7" - "SV_data".sv_7, 2) + power(model_input."X_8" - "SV_data".sv_8, 2) + power(model_input."X_9" - "SV_data".sv_9, 2))), 32.0))  AS "dot_prod" 
        FROM
          model_input, "SV_data"
       ) AS full_join_data_sv
     GROUP BY full_join_data_sv."index"
    ) AS dp )
SELECT
  t."index" as "index",
  t."Estimator" as "Estimator"
FROM "Kernel_DotProd" AS t

SQL_OUT_PUT_LAST_LINES_END




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 100 entries, 0 to 99
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     100 non-null    float32
 1   X_1     100 non-null    float32
 2   X_2     100 non-null    float32
 3   X_3     100 non-null    float32
 4   X_4     100 non-null    float32
 5   X_5     100 non-null    float32
 6   X_6     100 non-null    float32
 7   X_7     100 non-null    float32
 8   X_8     100 non-null    float32
 9   X_9     100 non-null    float32
dtypes: float32(10)
memory usage: 4.7 KB
            X_0       X_1       X_2  ...       X_7       X_8       X_9
index                                ...                              
0      0.456887  0.295923  0.591968  ...  0.290537  0.761317  0.245544
1      0.716619  0.420279  0.400670  ...  0.399395  0.167246  0.133911
2      0.140833  0.617769  0.186105  ...  0.198079  0.648067  0.563459
3      0.071195  0.704806  0.073220  ...  0.139224  0.725143  0.940551
4      0.710411  0.866302  0.056103  ...  0.384208  0.666595  0.305953
...         ...       ...       ...  ...       ...       ...       ...
95     0.759884  0.645603  0.858346  ...  0.314409  0.340241  0.086284
96     0.133898  0.993722  0.247951  ...  0.342368  0.685693  0.539265
97     0.907576  0.735434  0.379983  ...  0.265155  0.264531  0.516615
98     0.368356  0.189593  0.403483  ...  0.840440  0.462841  0.813023
99     0.268993  0.202785  0.253928  ...  0.076708  0.743187  0.015995

[100 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 100 entries, 0 to 99
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   index      100 non-null    int64  
 1   Estimator  100 non-null    float64
dtypes: float64(1), int64(1)
memory usage: 1.7 KB
    index  Estimator
0       0  14.812309
1       1  13.363839
2       2  14.775704
3       3  14.076296
4       4  14.103786
..    ...        ...
95     95  14.628280
96     96  14.483840
97     97  14.542340
98     98  14.003900
99     99  12.708018

[100 rows x 2 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
    index  SQL_Estimator  Py_Estimator
84     84      14.194500     14.194501
85     85      13.790057     13.790057
86     86      13.591617     13.591618
87     87      15.302882     15.302883
88     88      12.950494     12.950494
89     89      14.079498     14.079498
90     90      12.997298     12.997298
91     91      13.357688     13.357688
92     92      13.700762     13.700762
93     93      15.422545     15.422545
94     94      13.946506     13.946507
95     95      14.628280     14.628281
96     96      14.483840     14.483841
97     97      14.542340     14.542340
98     98      14.003900     14.003901
99     99      12.708018     12.708019
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
