    X_0  X_1  X_2  X_3    target
0     4    3    5    6  1.444753
1     9    9   10    3  1.513570
2     7    2    7    4  1.371797
3     3    2    4    0  1.407287
4     3    4    1    1  1.310030
..  ...  ...  ...  ...       ...
95    2    6    6    4  1.542656
96    5    8    7    4  1.519563
97    7    9    3    0  1.454661
98    5    3    1    7  1.009971
99    0    0    9    9  1.565980

[100 rows x 5 columns]
MLLITE_MODEL_SET_OPTIONS RidgeRegressor {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeRegressor { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeRegressor { "alpha" : 0.0000001,   , }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeRegressor None
('OPERATION_START', 'TRAINING')
[[ 4.  3.  5.  6.]
 [ 9.  9. 10.  3.]
 [ 7.  2.  7.  4.]
 [ 3.  2.  4.  0.]
 [ 3.  4.  1.  1.]] [1.4447532 1.5135704 1.3717965 1.4072871 1.3100302]
MLLITE_FIT_USING_MODEL mllite_ridge_reg.RidgeRegressor_ff4_ff4
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_REGRESSOR_FIT' 1 2
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_REGRESSOR_FIT' 2 2
('OPERATION_END_ELAPSED', 0.005, 'TRAINING')
{ "alpha" : 0.0000001,   , }
{ "alpha" : 0.0000001,   , }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_ff4"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 100, "dataset_features" : 4 },
	"equations" : {
			"intercept" : 1.119355,
			"coeffs" : [ -0.047603, 0.036167, 0.052310, 0.007938 ]
		}
}
WRITING_JSON_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_freidman3_quantized_option_1.json'

MLLITE_MODEL_SET_OPTIONS RidgeRegressor {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeRegressor { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeRegressor { "alpha" : 0.0000001,   , }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeRegressor None
MLLITE_RELOADING_MODEL mllite_ridge_reg.RidgeRegressor_ff4_ff4
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_ff4"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 100, "dataset_features" : 4 },
	"equations" : {
			"intercept" : 1.119355,
			"coeffs" : [ -0.047603, 0.036167, 0.052310, 0.007938 ]
		}
}
BEAUTIFIED_JSON_START
{
	"dataset" : 	{
		"dataset_features" : 4,
		"dataset_rows" : 100
	},
	"equations" : 	{
		"coeffs" : [ -0.047603, 0.036167, 0.05231, 0.007938 ],
		"intercept" : 1.119355
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_ff4", "version" : "2024-W12" },
	"options" :  { "alpha" : 0.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
[1.3466238  1.5633487  1.2563924  1.2581211  1.1814628  1.396631
 1.4622262  1.1063062  1.7021712  1.4027241  1.1151614  1.4735564
 1.3401623  1.180117   1.3687744  0.92224    1.2807406  1.3163335
 1.5456235  1.3461803  1.2876757  1.7422191  1.2576019  1.3201383
 0.9238074  1.5707983  1.4962665  1.4172144  1.3011581  1.3276076
 1.451602   1.2919093  1.3919383  1.3998764  1.2456067  1.4489559
 1.2156087  1.6742998  1.4650842  1.4413756  1.4062219  1.4059296
 1.0765901  1.4219216  1.2680805  1.8874468  0.8584688  1.7176037
 1.5253325  1.1793613  1.4613194  1.0847952  1.6440496  0.9154863
 1.3939595  1.4025478  1.1845572  1.2124032  1.5256903  1.5274591
 1.6032912  1.4730119  1.4658855  1.2995656  1.2372961  1.4207269
 1.1746436  1.2646227  1.5259575  1.2707665  1.5250548  1.0995777
 0.92665505 1.1111646  1.5941436  1.1408703  1.391379   1.0729616
 1.367832   1.1949346  1.7793286  0.99901444 1.617867   1.704948
 1.1417979  0.8399466  1.301707   1.1520243  1.5268091  1.10175
 1.2184563  0.87176424 1.1703193  1.1964217  1.7348151  1.586765
 1.5686007  1.268569   1.0977181  1.661589  ]
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
('OPERATION_START', 'PREDICT')
[1.3466221  1.563345   1.25639    1.25812    1.1814619  1.3966299
 1.462223   1.1063049  1.7021691  1.402722   1.11516    1.473555
 1.34016    1.180115   1.3687719  0.922239   1.280738   1.3163329
 1.545622   1.3461789  1.287674   1.7422171  1.257599   1.320136
 0.923806   1.570796   1.496264   1.417213   1.3011569  1.327606
 1.4516     1.291907   1.3919358  1.3998739  1.245604   1.448953
 1.2156069  1.674298   1.4650829  1.4413731  1.40622    1.405928
 1.0765879  1.42192    1.26808    1.8874439  0.858468   1.7176019
 1.5253309  1.179361   1.461318   1.084793   1.644047   0.91548496
 1.3939579  1.4025459  1.1845549  1.212401   1.5256889  1.5274571
 1.6032889  1.4730089  1.4658841  1.299565   1.2372949  1.420724
 1.174642   1.2646201  1.5259559  1.270765   1.525052   1.099576
 0.926654   1.111163   1.5941418  1.1408681  1.391377   1.072961
 1.3678299  1.194933   1.779326   0.99901295 1.617865   1.7049451
 1.1417971  0.83994496 1.301704   1.152024   1.526807   1.1017491
 1.218455   0.871763   1.170318   1.196421   1.734813   1.586763
 1.568598   1.268567   1.0977169  1.661587  ]
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
MODEL_PERFS {'class_name': 'mllite.RidgeRegressor', 'model_name': 'RidgeRegressor', 'options': '{"alpha" : 0.0000001}', 'dataset': 'freidman3_quantized', 'size': 100, 'mse': 0.029935233, 'mae': 0.12184713, 'mape': 0.52451026, 'r2': 0.6206523254576533}
WRITING_PERF_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_freidman3_quantized_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeRegressor', 'model_name': 'RidgeRegressor', 'options': '{"alpha" : 0.0000001}', 'dataset': 'freidman3_quantized', 'training_time_in_sec': 0.005, 'prediction_time_in_sec': 0.001}
WRITING_SQL_CODE 'logs/auto_tests/regression/RidgeRegressor/mllite.RidgeRegressor_freidman3_quantized_option_1.sql'



SQL_OUT_PUT_FIRST_LINES_START
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  model_input."index" AS "index",
   1.119355 + -0.047603 * X_0 + 0.036167 * X_1 + 0.052310 * X_2 + 0.007938 * X_3 AS "Estimator"
  FROM model_input
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_FIRST_LINES_END
SQL_OUT_PUT_LAST_LINES_START
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT
  model_input."index" AS "index",
   1.119355 + -0.047603 * X_0 + 0.036167 * X_1 + 0.052310 * X_2 + 0.007938 * X_3 AS "Estimator"
  FROM model_input
 )
SELECT
  model_scores_cte."index" as "index",
  model_scores_cte."Estimator" as "Estimator"
FROM  model_scores_cte

SQL_OUT_PUT_LAST_LINES_END




COPY_TRAINING_DATA_TO_SQLITE_START
    X_0  X_1   X_2  X_3  KEY
0   4.0  3.0   5.0  6.0    0
1   9.0  9.0  10.0  3.0    1
2   7.0  2.0   7.0  4.0    2
3   3.0  2.0   4.0  0.0    3
4   3.0  4.0   1.0  1.0    4
..  ...  ...   ...  ...  ...
95  2.0  6.0   6.0  4.0   95
96  5.0  8.0   7.0  4.0   96
97  7.0  9.0   3.0  0.0   97
98  5.0  3.0   1.0  7.0   98
99  0.0  0.0   9.0  9.0   99

[100 rows x 5 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
    index  Estimator
0       0   1.346622
1       1   1.563345
2       2   1.256390
3       3   1.258120
4       4   1.181462
..    ...        ...
95     95   1.586763
96     96   1.568598
97     97   1.268567
98     98   1.097717
99     99   1.661587

[100 rows x 2 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Estimator'], dtype='object')
    index  SQL_Estimator  Py_Estimator
84     84       1.141797      1.141798
85     85       0.839945      0.839947
86     86       1.301704      1.301707
87     87       1.152024      1.152024
88     88       1.526807      1.526809
89     89       1.101749      1.101750
90     90       1.218455      1.218456
91     91       0.871763      0.871764
92     92       1.170318      1.170319
93     93       1.196421      1.196422
94     94       1.734813      1.734815
95     95       1.586763      1.586765
96     96       1.568598      1.568601
97     97       1.268567      1.268569
98     98       1.097717      1.097718
99     99       1.661587      1.661589
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
