READING_CSV BinaryClass_100_medium ['data/medium/BinaryClass_100_medium.csv']
          X_0       X_1       X_2  ...      X_98      X_99  target
0    0.076786 -0.216350 -1.895120  ...  0.044911 -0.150000       1
1    0.740907 -0.203885  0.509521  ...  0.037574 -1.060503       0
2    1.098934  0.173025  0.182230  ... -1.077153 -1.898537       0
3   -1.763879  1.900201  0.049926  ... -2.302679 -0.804235       1
4    0.280434 -0.431449  1.677933  ... -1.356453  0.803417       0
..        ...       ...       ...  ...       ...       ...     ...
507 -0.252343 -0.664697  0.047586  ...  0.978673 -0.642035       0
508 -1.206833  0.146338  0.582546  ... -1.611847 -0.673973       1
509 -0.623870 -0.168046  3.158549  ... -0.044088  0.817850       0
510 -0.649822  0.445184  2.075360  ... -0.709494  0.398863       0
511 -0.073112 -0.140979  0.152851  ... -1.552058 -1.511344       0

[512 rows x 101 columns]
MLLITE_MODEL_SET_OPTIONS RidgeClassifier {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { "alpha" : 0.0000001,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
('OPERATION_START', 'TRAINING')
[[ 7.67860562e-02 -2.16349632e-01 -1.89512026e+00  9.72775340e-01
  -8.98455754e-02 -1.73332319e-01  2.04458380e+00 -8.33679587e-02
  -1.69993192e-02 -9.98147309e-01  1.00613546e+00 -3.34531516e-01
  -6.45206690e-01  5.16464531e-01  2.14602733e+00 -9.89635050e-01
  -5.83467007e-01  7.48828411e-01 -9.46215749e-01 -4.56152797e-01
  -7.09795535e-01 -1.57510340e+00  7.22209513e-02  2.76777953e-01
  -2.25623417e+00 -2.42628217e-01  8.41927901e-02 -5.25455236e-01
   1.04548253e-01  2.16998386e+00 -2.65719533e+00 -1.54227972e-01
   7.86681652e-01 -1.23210818e-01  1.05377853e+00  2.06990883e-01
  -3.75195622e-01 -1.61912119e+00 -5.13849854e-01  1.80463398e+00
  -3.34648073e-01  2.32175088e+00  5.18775403e-01  6.01812959e-01
  -2.73394251e+00  7.49632478e-01 -6.84904695e-01 -8.51321459e-01
   2.13226199e-01  4.73882705e-02  5.88863850e-01  1.15429863e-01
   6.22614384e-01  8.30699980e-01  6.70719266e-01 -8.77940238e-01
  -3.15930247e-01 -4.42460515e-02 -9.32259709e-02 -4.64032024e-01
   2.14235345e-03 -4.83993024e-01  1.54227927e-01 -1.24401498e+00
   1.70182478e+00  2.25201279e-01  7.64207184e-01  2.45098755e-01
   1.51445627e+00 -2.87229955e-01 -1.30952799e+00  4.84639332e-02
   5.02391279e-01  1.68891466e+00 -1.67603219e+00  1.15172791e+00
   1.49361551e-01  7.83485115e-01 -7.34475017e-01  4.70510930e-01
  -1.22888297e-01 -7.73810089e-01  2.88424671e-01 -6.68031573e-01
  -5.03504612e-02  3.55211020e-01  3.30597132e-01  2.09675357e-01
   1.19605529e+00  5.49714863e-01  2.13296890e-01 -1.60499215e+00
  -1.02351420e-03 -3.61251324e-01  1.19673991e+00  4.32973713e-01
   2.94337302e-01  1.60742208e-01  4.49113473e-02 -1.49999961e-01]
 [ 7.40907192e-01 -2.03884855e-01  5.09520948e-01 -2.68602610e-01
   1.01734117e-01  7.04473197e-01 -1.04752457e+00  8.41014564e-01
  -1.62119889e+00  1.23523962e+00 -7.93474138e-01 -9.34934199e-01
  -4.59271997e-01 -8.48768651e-01  1.92487645e+00 -6.00576460e-01
   3.15609246e-01  1.55015182e+00 -1.75477445e-01 -2.74452642e-02
  -7.65915513e-01  5.60320854e-01 -3.79324913e-01 -8.99946928e-01
   3.58364493e-01  1.72216535e-01  1.69563890e+00  6.88516736e-01
  -3.12919438e-01 -1.62021264e-01  1.02035865e-01  3.56784463e-01
   1.78872895e+00  2.80568987e-01  3.18056703e-01  1.26633152e-01
  -1.48791409e+00  3.99210781e-01 -1.24760234e+00 -4.79079545e-01
  -1.06708491e+00 -9.83151495e-01 -3.08190942e-01 -7.55273342e-01
   1.90604627e+00  1.78793520e-01  1.18870690e-01  3.58957857e-01
  -4.38061431e-02  1.16049063e+00  1.00332558e+00  1.36875010e+00
   4.78730857e-01  2.73252636e-01  1.02691138e+00 -6.04644120e-01
  -4.52357739e-01 -1.86125368e-01 -4.68186229e-01 -3.79988551e-01
  -2.06401989e-01 -9.83536601e-01  4.22431350e-01 -7.86184490e-01
  -3.13827068e-01 -4.87148225e-01  4.92854297e-01  9.04440701e-01
  -1.13552165e+00 -3.75038415e-01  1.25275290e+00  1.24107575e+00
  -8.59878361e-01 -7.36416221e-01 -3.31308293e+00 -1.61697939e-01
   6.13616884e-01 -3.98042768e-01  8.60749558e-02  1.20081162e+00
   8.43496084e-01 -2.37272903e-01  1.48435295e+00  1.67589104e+00
   1.63139943e-02 -6.39506042e-01 -6.06154263e-01  2.72835433e-01
   5.11132002e-01  1.52165639e+00 -5.31708449e-03  8.01320076e-01
   8.95860195e-01  4.10607219e-01 -4.93475378e-01  2.47548461e+00
  -1.27199209e+00 -5.80997586e-01  3.75736728e-02 -1.06050277e+00]
 [ 1.09893429e+00  1.73025072e-01  1.82229638e-01  1.06270838e+00
   5.13865232e-01  9.99493480e-01  1.23973727e+00 -4.58548367e-01
   1.25006235e+00 -5.92791066e-02 -7.84633517e-01 -2.05889702e+00
   3.67457047e-02  3.49219888e-01 -1.91125119e+00  7.51979709e-01
  -7.24364281e-01  4.62626100e-01  1.28284276e+00 -6.57514095e-01
  -1.79272637e-01 -1.88900858e-01 -1.26651788e+00 -2.55603170e+00
  -4.79668528e-01 -6.43282413e-01 -6.02538407e-01  1.27501309e+00
  -1.50119174e+00  4.39862221e-01 -1.57504186e-01 -1.45164824e+00
   1.51251459e+00  4.32972908e-02  4.54631031e-01  2.57750750e-01
   2.25065485e-01  3.95210475e-01 -5.07586956e-01 -1.32575643e+00
  -5.31998992e-01  3.24154019e-01 -8.10930505e-02 -1.00256348e+00
  -6.93465292e-01 -7.58263469e-01  7.62481034e-01 -1.09574616e+00
   4.09668028e-01 -8.09652433e-02 -5.96848428e-01 -7.70360231e-01
   6.21054351e-01 -1.19224243e-01  4.78616178e-01 -1.44250536e+00
   9.13851023e-01 -2.03700399e+00 -1.12629974e+00 -1.06483793e+00
   1.38200450e+00 -8.63599718e-01  1.01206267e+00 -3.89745384e-01
  -4.40156937e-01 -2.23279395e-03  5.15954375e-01  1.40094161e+00
   8.71294379e-01 -7.61249423e-01 -1.64062679e+00 -1.06637977e-01
  -1.14549327e+00 -8.01730216e-01 -9.10550714e-01  8.16507757e-01
  -6.75559640e-01  5.98497391e-01 -3.51114810e-01  2.80396342e-01
   6.81783199e-01  6.38313770e-01  7.59509683e-01  1.20518541e+00
  -4.18532670e-01 -1.63699687e+00 -1.93507344e-01  1.12032747e+00
   4.06595826e-01 -9.68143106e-01 -2.66031008e-02  8.66260350e-01
   8.30199063e-01 -6.18508518e-01 -4.40728277e-01 -4.62844372e-01
   1.00607407e+00  6.72870636e-01 -1.07715333e+00 -1.89853668e+00]
 [-1.76387858e+00  1.90020108e+00  4.99262102e-02 -5.55197060e-01
   1.68024373e+00 -2.88755685e-01  5.75080037e-01 -1.40003550e+00
   1.08139658e+00  1.03781617e+00  4.55955386e-01 -4.90699470e-01
  -8.91349554e-01  1.60808587e+00  4.44229096e-01  4.26883370e-01
   1.20018911e+00 -1.04898714e-01  1.23599017e+00  2.56733358e-01
   1.34151256e+00 -8.21831167e-01  8.36796880e-01  1.24152887e+00
  -1.20556676e+00 -1.02256262e+00 -7.25795448e-01  5.22432402e-02
   5.39670229e-01 -1.07271194e+00  1.65893555e-01 -8.41957510e-01
   9.41176355e-01 -6.65480316e-01  1.25523582e-01  1.52332973e+00
  -6.92075253e-01 -5.39478064e-01  1.11441314e+00  7.65614390e-01
   5.02117574e-01 -1.00958788e+00 -8.63959432e-01 -3.98205668e-02
  -7.10652173e-01  3.92357022e-01 -9.39320147e-01 -1.11804664e+00
   1.33686215e-01  2.47222447e+00  2.54431534e+00 -4.27229583e-01
   3.95019293e-01 -3.06889057e-01 -4.63866293e-01 -6.69113025e-02
   2.38334298e+00  6.04234278e-01 -2.93950230e-01  1.24616349e+00
  -5.78783572e-01  1.72946537e+00 -1.30051446e+00 -6.26530200e-02
  -1.75940380e-01 -2.05686331e+00  3.58007550e-02  1.06688631e+00
  -1.06770778e+00 -1.29291862e-01  9.81507957e-01 -2.06051350e+00
  -1.12787187e+00 -3.38974386e-01 -9.99148726e-01  1.30282557e+00
   1.10764742e+00  8.17310214e-01 -2.48850441e+00 -4.56928372e-01
  -1.66741383e+00 -1.33094394e+00 -2.37168264e+00 -2.19527054e+00
   4.23210412e-01  1.22160339e+00  8.95239890e-01  8.62192094e-01
  -8.75928998e-01 -6.63089216e-01  5.09316504e-01  6.58589602e-02
  -1.83265650e+00  1.70385349e+00 -1.37213063e+00 -1.67086756e+00
   6.43824697e-01  9.66917351e-02 -2.30267859e+00 -8.04234624e-01]
 [ 2.80433744e-01 -4.31448609e-01  1.67793310e+00  1.50869116e-01
  -1.59988254e-01 -1.30960393e+00  2.15685248e-01 -1.04799621e-01
   9.38231528e-01 -1.53020024e+00 -1.16910064e+00 -7.46225536e-01
   5.91160655e-01 -1.22178033e-01 -8.12542140e-02 -1.48075175e+00
  -2.80754685e+00  8.71919274e-01 -9.55915302e-02 -6.44493937e-01
  -1.13411975e+00  1.17033958e+00 -1.22180641e+00 -9.04849470e-01
  -1.05020940e+00 -6.15582228e-01 -6.03573263e-01 -3.81416708e-01
  -2.03174055e-01 -4.31786358e-01  8.70429158e-01  1.36959589e+00
   1.33015382e+00 -2.89075315e-01 -2.86687315e-01 -1.30172563e+00
  -9.32562724e-02  1.62860560e+00 -1.25011337e+00 -2.90341705e-01
   5.03354847e-01 -2.02275604e-01 -8.25749099e-01 -7.78827250e-01
  -1.21819127e+00  3.50637212e-02 -1.20942688e+00 -5.12564003e-01
   2.83736199e-01  8.09742212e-01  1.20343697e+00 -1.12571359e+00
   4.58417803e-01  8.92739058e-01 -7.53551364e-01  1.22984326e+00
   1.68182528e+00 -8.56762767e-01 -1.01052177e+00  4.01901782e-01
   1.83171928e+00 -1.01946795e+00 -5.50341249e-01  2.76359797e-01
   1.01594865e+00  9.05106068e-01 -9.02981520e-01  5.58089435e-01
  -1.48963070e+00  2.55932629e-01  1.78478658e-01  1.10537851e+00
   3.39230567e-01  1.43660232e-01 -2.58567065e-01 -1.10425627e+00
  -7.61743248e-01  3.93570006e-01  8.90783966e-02 -1.51482296e+00
   1.06395014e-01  1.32599866e+00  7.66198814e-01 -8.59620571e-01
  -1.10428178e+00  1.16254544e+00  5.00447512e-01 -3.21925133e-01
  -1.12140581e-01  6.00991905e-01 -6.74228787e-01  4.87680793e-01
  -5.11022270e-01  1.60962033e+00  6.76930249e-01  2.08288789e+00
   2.12690830e+00  2.16741070e-01 -1.35645258e+00  8.03416610e-01]] [1 0 0 1 0]
MLLITE_FIT_USING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 3 4
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 4 4
('OPERATION_END_ELAPSED', 0.06, 'TRAINING')
{ "alpha" : 0.0000001,   }
{ "alpha" : 0.0000001,   }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 512, "dataset_features" : 100 },
	"classes" : [ 0, 1 ],
	"equations" : {
		"class_1" : {
			"intercept" : -0.000898,
			"coeffs" : [ 0.044500, 0.246085, -0.023040, -0.068719, 0.220040, -0.029329, 0.025794, -0.075041, -0.020405, 0.010779, 0.009545, 0.078456, 0.017434, 0.028917, -0.007671, 0.039202, 0.026103, -0.002325, 0.044208, -0.073014, -0.010865, 0.024669, -0.038104, -0.030358, -0.011460, 0.043394, -0.006824, 0.004125, -0.002619, -0.028513, -0.010356, -0.007158, 0.036882, -0.046188, 0.057322, -0.026227, -0.015736, 0.020577, -0.041772, 0.073937, 0.032707, 0.017501, 0.027642, -0.044664, -0.011032, 0.062421, -0.001818, 0.035378, 0.050599, -0.000014, 0.001505, 0.047419, 0.024337, 0.037363, 0.004566, -0.035373, -0.008166, -0.033100, 0.024518, 0.059232, 0.026713, 0.242234, -0.006295, 0.053502, -0.029909, 0.013556, -0.004026, -0.244036, 0.041433, 0.048559, -0.025912, 0.008401, 0.049249, 0.030880, -0.002735, 0.045426, -0.000312, -0.021105, -0.030903, -0.015280, 0.054090, 0.014186, 0.025049, 0.028999, -0.031021, 0.009113, 0.032051, -0.011509, -0.015361, -0.066696, 0.020036, 0.032952, 0.076015, -0.031822, 0.069988, -0.019615, 0.026656, -0.026770, -0.001165, -0.013742 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_100_medium_option_1.json'

RELOADING_MODEL_FROM_JSON_START ('BinaryClass_100_medium', 'RidgeClassifier')
MLLITE_MODEL_SET_OPTIONS RidgeClassifier {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { "alpha" : 0.0000001,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
MLLITE_RELOADING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 512, "dataset_features" : 100 },
	"classes" : [ 0, 1 ],
	"equations" : {
		"class_1" : {
			"intercept" : -0.000898,
			"coeffs" : [ 0.044500, 0.246085, -0.023040, -0.068719, 0.220040, -0.029329, 0.025794, -0.075041, -0.020405, 0.010779, 0.009545, 0.078456, 0.017434, 0.028917, -0.007671, 0.039202, 0.026103, -0.002325, 0.044208, -0.073014, -0.010865, 0.024669, -0.038104, -0.030358, -0.011460, 0.043394, -0.006824, 0.004125, -0.002619, -0.028513, -0.010356, -0.007158, 0.036882, -0.046188, 0.057322, -0.026227, -0.015736, 0.020577, -0.041772, 0.073937, 0.032707, 0.017501, 0.027642, -0.044664, -0.011032, 0.062421, -0.001818, 0.035378, 0.050599, -0.000014, 0.001505, 0.047419, 0.024337, 0.037363, 0.004566, -0.035373, -0.008166, -0.033100, 0.024518, 0.059232, 0.026713, 0.242234, -0.006295, 0.053502, -0.029909, 0.013556, -0.004026, -0.244036, 0.041433, 0.048559, -0.025912, 0.008401, 0.049249, 0.030880, -0.002735, 0.045426, -0.000312, -0.021105, -0.030903, -0.015280, 0.054090, 0.014186, 0.025049, 0.028999, -0.031021, 0.009113, 0.032051, -0.011509, -0.015361, -0.066696, 0.020036, 0.032952, 0.076015, -0.031822, 0.069988, -0.019615, 0.026656, -0.026770, -0.001165, -0.013742 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1 ],
	"dataset" : 	{
		"dataset_features" : 100,
		"dataset_rows" : 512
	},
	"equations" : 	{
		"class_1" : 	{
			"coeffs" : [ 0.0445, 0.246085, -0.02304, -0.068719, 0.22004, -0.029329, 0.025794, -0.075041, -0.020405, 0.010779, 0.009545, 0.078456, 0.017434, 0.028917, -0.007671, 0.039202, 0.026103, -0.002325, 0.044208, -0.073014, -0.010865, 0.024669, -0.038104, -0.030358, -0.01146, 0.043394, -0.006824, 0.004125, -0.002619, -0.028513, -0.010356, -0.007158, 0.036882, -0.046188, 0.057322, -0.026227, -0.015736, 0.020577, -0.041772, 0.073937, 0.032707, 0.017501, 0.027642, -0.044664, -0.011032, 0.062421, -0.001818, 0.035378, 0.050599, -1.4e-05, 0.001505, 0.047419, 0.024337, 0.037363, 0.004566, -0.035373, -0.008166, -0.0331, 0.024518, 0.059232, 0.026713, 0.242234, -0.006295, 0.053502, -0.029909, 0.013556, -0.004026, -0.244036, 0.041433, 0.048559, -0.025912, 0.008401, 0.049249, 0.03088, -0.002735, 0.045426, -0.000312, -0.021105, -0.030903, -0.01528, 0.05409, 0.014186, 0.025049, 0.028999, -0.031021, 0.009113, 0.032051, -0.011509, -0.015361, -0.066696, 0.020036, 0.032952, 0.076015, -0.031822, 0.069988, -0.019615, 0.026656, -0.02677, -0.001165, -0.013742 ],
			"intercept" : -0.000898
		}
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_il8", "version" : "2024-W14" },
	"options" :  { "alpha" : 0.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
RELOADING_MODEL_FROM_JSON_END ('BinaryClass_100_medium', 'RidgeClassifier')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0.4877 0.5123]
 [0.6578 0.3422]
 [0.5212 0.4788]
 ...
 [0.6315 0.3685]
 [0.3897 0.6103]
 [0.442  0.558 ]]
(512, 2)
(512,) float32
MODEL_PERFS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': '{"alpha" : 0.0000001}', 'dataset': 'BinaryClass_100_medium', 'size': 512, 'accuracy': 0.873046875, 'auc': 0.9519805908203125}
WRITING_PERF_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_100_medium_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': '{"alpha" : 0.0000001}', 'dataset': 'BinaryClass_100_medium', 'training_time_in_sec': 0.06, 'prediction_time_in_sec': 0.0}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 0 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 1 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 2 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 3 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 4 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 5 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 6 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 7 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 8 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 9 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 10 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 11 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 12 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 13 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 14 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 15 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 16 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 17 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 18 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 19 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 20 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 21 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 22 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 23 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 24 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 25 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 26 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 27 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 28 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 29 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 30 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 31 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 32 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 33 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 34 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 35 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 36 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 37 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 38 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 39 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 40 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 41 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 42 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 43 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 44 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 45 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 46 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 47 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 48 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 49 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 50 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 51 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 52 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 53 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 54 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 55 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 56 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 57 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 58 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 59 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 60 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 61 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 62 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 63 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 64 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 65 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 66 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 67 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 68 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 69 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 70 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 71 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 72 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 73 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 74 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 75 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 76 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 77 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 78 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 79 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 80 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 81 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 82 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 83 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 84 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 85 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 86 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 87 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 88 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 89 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 90 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 91 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 92 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 93 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 94 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 95 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 96 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 97 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 98 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 99 100
{
   "Contributions" : {
      "X_0" : [ -0.002109, 0.002109 ],
      "X_1" : [ -0.005978, 0.005978 ],
      "X_2" : [ 0.000306, -0.000306 ],
      "X_3" : [ -0.001737, 0.001737 ],
      "X_4" : [ -0.005049, 0.005049 ],
      "X_5" : [ -0.001022, 0.001022 ],
      "X_6" : [ 0.000172, -0.000172 ],
      "X_7" : [ 0.000821, -0.000821 ],
      "X_8" : [ 0.001235, -0.001235 ],
      "X_9" : [ 0.000108, -0.000108 ],
      "X_10" : [ 0.000111, -0.000111 ],
      "X_11" : [ -0.006996, 0.006996 ],
      "X_12" : [ -0.000063, 0.000063 ],
      "X_13" : [ 0.001988, -0.001988 ],
      "X_14" : [ -0.000127, 0.000127 ],
      "X_15" : [ 0.002049, -0.002049 ],
      "X_16" : [ 0.000029, -0.000029 ],
      "X_17" : [ -0.000091, 0.000091 ],
      "X_18" : [ -0.001790, 0.001790 ],
      "X_19" : [ 0.002079, -0.002079 ],
      "X_20" : [ -0.000553, 0.000553 ],
      "X_21" : [ -0.000972, 0.000972 ],
      "X_22" : [ 0.000015, -0.000015 ],
      "X_23" : [ 0.001417, -0.001417 ],
      "X_24" : [ 0.000111, -0.000111 ],
      "X_25" : [ -0.002151, 0.002151 ],
      "X_26" : [ -0.000177, 0.000177 ],
      "X_27" : [ -0.000184, 0.000184 ],
      "X_28" : [ -0.000026, 0.000026 ],
      "X_29" : [ 0.001293, -0.001293 ],
      "X_30" : [ -0.000396, 0.000396 ],
      "X_31" : [ -0.000680, 0.000680 ],
      "X_32" : [ -0.000089, 0.000089 ],
      "X_33" : [ -0.001169, 0.001169 ],
      "X_34" : [ 0.002502, -0.002502 ],
      "X_35" : [ -0.001072, 0.001072 ],
      "X_36" : [ 0.000034, -0.000034 ],
      "X_37" : [ -0.000268, 0.000268 ],
      "X_38" : [ -0.000906, 0.000906 ],
      "X_39" : [ 0.003717, -0.003717 ],
      "X_40" : [ 0.000416, -0.000416 ],
      "X_41" : [ -0.000768, 0.000768 ],
      "X_42" : [ 0.000061, -0.000061 ],
      "X_43" : [ 0.002466, -0.002466 ],
      "X_44" : [ 0.000148, -0.000148 ],
      "X_45" : [ 0.000849, -0.000849 ],
      "X_46" : [ -0.000003, 0.000003 ],
      "X_47" : [ 0.002262, -0.002262 ],
      "X_48" : [ 0.003210, -0.003210 ],
      "X_49" : [ -0.000001, 0.000001 ],
      "X_50" : [ -0.000026, 0.000026 ],
      "X_51" : [ -0.000406, 0.000406 ],
      "X_52" : [ 0.002104, -0.002104 ],
      "X_53" : [ 0.000488, -0.000488 ],
      "X_54" : [ 0.000043, -0.000043 ],
      "X_55" : [ 0.000290, -0.000290 ],
      "X_56" : [ -0.000749, 0.000749 ],
      "X_57" : [ 0.001095, -0.001095 ],
      "X_58" : [ 0.000719, -0.000719 ],
      "X_59" : [ -0.000725, 0.000725 ],
      "X_60" : [ -0.001320, 0.001320 ],
      "X_61" : [ -0.005500, 0.005500 ],
      "X_62" : [ -0.000134, 0.000134 ],
      "X_63" : [ 0.000787, -0.000787 ],
      "X_64" : [ 0.001928, -0.001928 ],
      "X_65" : [ -0.000282, 0.000282 ],
      "X_66" : [ 0.000043, -0.000043 ],
      "X_67" : [ 0.003710, -0.003710 ],
      "X_68" : [ 0.001927, -0.001927 ],
      "X_69" : [ -0.002615, 0.002615 ],
      "X_70" : [ 0.000406, -0.000406 ],
      "X_71" : [ -0.000070, 0.000070 ],
      "X_72" : [ 0.002114, -0.002114 ],
      "X_73" : [ -0.000436, 0.000436 ],
      "X_74" : [ -0.000162, 0.000162 ],
      "X_75" : [ -0.001357, 0.001357 ],
      "X_76" : [ 0.000022, -0.000022 ],
      "X_77" : [ 0.001161, -0.001161 ],
      "X_78" : [ 0.000510, -0.000510 ],
      "X_79" : [ 0.000555, -0.000555 ],
      "X_80" : [ -0.002311, 0.002311 ],
      "X_81" : [ -0.001282, 0.001282 ],
      "X_82" : [ 0.000878, -0.000878 ],
      "X_83" : [ 0.001251, -0.001251 ],
      "X_84" : [ 0.000590, -0.000590 ],
      "X_85" : [ 0.000015, -0.000015 ],
      "X_86" : [ 0.001392, -0.001392 ],
      "X_87" : [ 0.000033, -0.000033 ],
      "X_88" : [ 0.000135, -0.000135 ],
      "X_89" : [ 0.000392, -0.000392 ],
      "X_90" : [ 0.000850, -0.000850 ],
      "X_91" : [ -0.000645, 0.000645 ],
      "X_92" : [ -0.002329, 0.002329 ],
      "X_93" : [ -0.000650, 0.000650 ],
      "X_94" : [ 0.000109, -0.000109 ],
      "X_95" : [ 0.000315, -0.000315 ],
      "X_96" : [ 0.002792, -0.002792 ],
      "X_97" : [ -0.000606, 0.000606 ],
      "X_98" : [ -0.000007, 0.000007 ],
      "X_99" : [ -0.001368, 0.001368 ]   
   },
   "Most_Contributive_Features_By_Class" : {
      "class_0" : [ 11, 1, 61, 4, 39, 67, 48, 96, 69, 34 ],
      "class_1" : [ 11, 1, 61, 4, 39, 67, 48, 96, 69, 34 ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_100_medium_option_1_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_100_medium_option_1_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('BinaryClass_100_medium', 'RidgeClassifier', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('BinaryClass_100_medium', 'RidgeClassifier', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('BinaryClass_100_medium', 'RidgeClassifier', 'duckdb')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('BinaryClass_100_medium', 'RidgeClassifier', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 512 entries, 0 to 511
Data columns (total 100 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     512 non-null    float32
 1   X_1     512 non-null    float32
 2   X_2     512 non-null    float32
 3   X_3     512 non-null    float32
 4   X_4     512 non-null    float32
 5   X_5     512 non-null    float32
 6   X_6     512 non-null    float32
 7   X_7     512 non-null    float32
 8   X_8     512 non-null    float32
 9   X_9     512 non-null    float32
 10  X_10    512 non-null    float32
 11  X_11    512 non-null    float32
 12  X_12    512 non-null    float32
 13  X_13    512 non-null    float32
 14  X_14    512 non-null    float32
 15  X_15    512 non-null    float32
 16  X_16    512 non-null    float32
 17  X_17    512 non-null    float32
 18  X_18    512 non-null    float32
 19  X_19    512 non-null    float32
 20  X_20    512 non-null    float32
 21  X_21    512 non-null    float32
 22  X_22    512 non-null    float32
 23  X_23    512 non-null    float32
 24  X_24    512 non-null    float32
 25  X_25    512 non-null    float32
 26  X_26    512 non-null    float32
 27  X_27    512 non-null    float32
 28  X_28    512 non-null    float32
 29  X_29    512 non-null    float32
 30  X_30    512 non-null    float32
 31  X_31    512 non-null    float32
 32  X_32    512 non-null    float32
 33  X_33    512 non-null    float32
 34  X_34    512 non-null    float32
 35  X_35    512 non-null    float32
 36  X_36    512 non-null    float32
 37  X_37    512 non-null    float32
 38  X_38    512 non-null    float32
 39  X_39    512 non-null    float32
 40  X_40    512 non-null    float32
 41  X_41    512 non-null    float32
 42  X_42    512 non-null    float32
 43  X_43    512 non-null    float32
 44  X_44    512 non-null    float32
 45  X_45    512 non-null    float32
 46  X_46    512 non-null    float32
 47  X_47    512 non-null    float32
 48  X_48    512 non-null    float32
 49  X_49    512 non-null    float32
 50  X_50    512 non-null    float32
 51  X_51    512 non-null    float32
 52  X_52    512 non-null    float32
 53  X_53    512 non-null    float32
 54  X_54    512 non-null    float32
 55  X_55    512 non-null    float32
 56  X_56    512 non-null    float32
 57  X_57    512 non-null    float32
 58  X_58    512 non-null    float32
 59  X_59    512 non-null    float32
 60  X_60    512 non-null    float32
 61  X_61    512 non-null    float32
 62  X_62    512 non-null    float32
 63  X_63    512 non-null    float32
 64  X_64    512 non-null    float32
 65  X_65    512 non-null    float32
 66  X_66    512 non-null    float32
 67  X_67    512 non-null    float32
 68  X_68    512 non-null    float32
 69  X_69    512 non-null    float32
 70  X_70    512 non-null    float32
 71  X_71    512 non-null    float32
 72  X_72    512 non-null    float32
 73  X_73    512 non-null    float32
 74  X_74    512 non-null    float32
 75  X_75    512 non-null    float32
 76  X_76    512 non-null    float32
 77  X_77    512 non-null    float32
 78  X_78    512 non-null    float32
 79  X_79    512 non-null    float32
 80  X_80    512 non-null    float32
 81  X_81    512 non-null    float32
 82  X_82    512 non-null    float32
 83  X_83    512 non-null    float32
 84  X_84    512 non-null    float32
 85  X_85    512 non-null    float32
 86  X_86    512 non-null    float32
 87  X_87    512 non-null    float32
 88  X_88    512 non-null    float32
 89  X_89    512 non-null    float32
 90  X_90    512 non-null    float32
 91  X_91    512 non-null    float32
 92  X_92    512 non-null    float32
 93  X_93    512 non-null    float32
 94  X_94    512 non-null    float32
 95  X_95    512 non-null    float32
 96  X_96    512 non-null    float32
 97  X_97    512 non-null    float32
 98  X_98    512 non-null    float32
 99  X_99    512 non-null    float32
dtypes: float32(100)
memory usage: 204.0 KB
            X_0       X_1       X_2  ...      X_97      X_98      X_99
index                                ...                              
0      0.076786 -0.216350 -1.895120  ...  0.160742  0.044911 -0.150000
1      0.740907 -0.203885  0.509521  ... -0.580998  0.037574 -1.060503
2      1.098934  0.173025  0.182230  ...  0.672871 -1.077153 -1.898537
3     -1.763879  1.900201  0.049926  ...  0.096692 -2.302679 -0.804235
4      0.280434 -0.431449  1.677933  ...  0.216741 -1.356453  0.803417
...         ...       ...       ...  ...       ...       ...       ...
507   -0.252343 -0.664697  0.047586  ...  0.590262  0.978673 -0.642035
508   -1.206833  0.146338  0.582546  ... -0.441386 -1.611847 -0.673973
509   -0.623870 -0.168046  3.158549  ...  0.865582 -0.044088  0.817850
510   -0.649822  0.445184  2.075360  ...  1.102922 -0.709494  0.398863
511   -0.073112 -0.140979  0.152851  ...  0.241533 -1.552058 -1.511344

[512 rows x 100 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 512 entries, 0 to 511
Data columns (total 9 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          512 non-null    int64  
 1   Score_0        512 non-null    float64
 2   Proba_0        512 non-null    float64
 3   LogProba_0     512 non-null    float64
 4   Score_1        512 non-null    float64
 5   Proba_1        512 non-null    float64
 6   LogProba_1     512 non-null    float64
 7   Decision       512 non-null    int64  
 8   DecisionProba  512 non-null    float64
dtypes: float64(7), int64(2)
memory usage: 36.1 KB
     index   Score_0   Proba_0  ...  LogProba_1  Decision  DecisionProba
0        0 -0.024687  0.487659  ...   -0.668765         1       0.512341
1        1  0.326807  0.657824  ...   -1.072431         0       0.657824
2        2  0.042446  0.521210  ...   -0.736494         0       0.521210
3        3 -0.321772  0.344446  ...   -0.422275         1       0.655554
4        4  0.229737  0.612889  ...   -0.949045         0       0.612889
..     ...       ...       ...  ...         ...       ...            ...
507    507  0.465426  0.717248  ...   -1.263185         0       0.717248
508    508 -0.440210  0.293091  ...   -0.346853         1       0.706909
509    509  0.269363  0.631516  ...   -0.998358         0       0.631516
510    510 -0.224238  0.389723  ...   -0.493843         1       0.610277
511    511 -0.116427  0.442048  ...   -0.583483         1       0.557952

[512 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
     index   Score_0  SQL_Proba_0  ...  Py_Proba_0  Py_Proba_1  Py_Decision
496    496 -0.708817     0.195033  ...    0.195032    0.804968            1
497    497 -0.280476     0.363327  ...    0.363326    0.636674            1
498    498  0.591936     0.765643  ...    0.765643    0.234357            0
499    499 -0.788014     0.171359  ...    0.171359    0.828641            1
500    500 -0.107165     0.446622  ...    0.446622    0.553378            1
501    501  0.272040     0.632761  ...    0.632761    0.367239            0
502    502 -0.344639     0.334194  ...    0.334194    0.665806            1
503    503  0.321959     0.655639  ...    0.655639    0.344361            0
504    504  0.495422     0.729255  ...    0.729254    0.270746            0
505    505  0.349517     0.667974  ...    0.667974    0.332026            0
506    506 -0.049176     0.475432  ...    0.475432    0.524568            1
507    507  0.465426     0.717248  ...    0.717248    0.282752            0
508    508 -0.440210     0.293091  ...    0.293091    0.706909            1
509    509  0.269363     0.631516  ...    0.631516    0.368484            0
510    510 -0.224238     0.389723  ...    0.389723    0.610277            1
511    511 -0.116427     0.442048  ...    0.442048    0.557952            1

[16 rows x 12 columns]
MLLITE_CLASS_SQL_ERROR ('BinaryClass_100_medium', 'RidgeClassifier', 'duckdb') ('Py_Proba_0', 'SQL_Proba_0') 5.218850097518342e-07
     Py_Proba_0  SQL_Proba_0   SQL_Error_0
496    0.195032     0.195033 -1.016176e-06
497    0.363326     0.363327 -1.490372e-06
498    0.765643     0.765643 -6.104780e-07
499    0.171359     0.171359  1.482119e-07
500    0.446622     0.446622  7.022423e-08
501    0.632761     0.632761 -2.263518e-07
502    0.334194     0.334194  5.491064e-07
503    0.655639     0.655639  9.094970e-07
504    0.729254     0.729255 -1.008804e-06
505    0.667974     0.667974  4.313809e-07
506    0.475432     0.475432  1.366477e-07
507    0.717248     0.717248  3.943671e-07
508    0.293091     0.293091 -2.187133e-07
509    0.631516     0.631516 -1.838686e-08
510    0.389723     0.389723 -1.180242e-07
511    0.442048     0.442048 -1.986522e-07
MLLITE_CLASS_SQL_ERROR ('BinaryClass_100_medium', 'RidgeClassifier', 'duckdb') ('Py_Proba_1', 'SQL_Proba_1') 5.217393493963393e-07
     Py_Proba_1  SQL_Proba_1   SQL_Error_1
496    0.804968     0.804967  1.031077e-06
497    0.636674     0.636673  1.520175e-06
498    0.234357     0.234357  5.657745e-07
499    0.828641     0.828641 -1.482119e-07
500    0.553378     0.553378 -7.022423e-08
501    0.367239     0.367239  2.263518e-07
502    0.665806     0.665806 -5.789087e-07
503    0.344361     0.344361 -8.796947e-07
504    0.270746     0.270745  9.790013e-07
505    0.332026     0.332026 -4.611832e-07
506    0.524568     0.524568 -1.366477e-07
507    0.282752     0.282752 -3.943671e-07
508    0.706909     0.706909  1.889110e-07
509    0.368484     0.368484  4.818918e-08
510    0.610277     0.610277  1.478265e-07
511    0.557952     0.557952  2.284545e-07
MLLITE_CLASS_SQL_EXECUTION_STATUS ('BinaryClass_100_medium', 'RidgeClassifier', 'duckdb', 'Success')
     Py_Decision  SQL_Decision
496            1             1
497            1             1
498            0             0
499            1             1
500            1             1
501            0             0
502            1             1
503            0             0
504            0             0
505            0             0
506            1             1
507            0             0
508            1             1
509            0             0
510            1             1
511            1             1
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_100_medium_option_1_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('BinaryClass_100_medium', 'RidgeClassifier', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('BinaryClass_100_medium', 'RidgeClassifier', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('BinaryClass_100_medium', 'RidgeClassifier', 'sqlite')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('BinaryClass_100_medium', 'RidgeClassifier', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 512 entries, 0 to 511
Data columns (total 100 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     512 non-null    float32
 1   X_1     512 non-null    float32
 2   X_2     512 non-null    float32
 3   X_3     512 non-null    float32
 4   X_4     512 non-null    float32
 5   X_5     512 non-null    float32
 6   X_6     512 non-null    float32
 7   X_7     512 non-null    float32
 8   X_8     512 non-null    float32
 9   X_9     512 non-null    float32
 10  X_10    512 non-null    float32
 11  X_11    512 non-null    float32
 12  X_12    512 non-null    float32
 13  X_13    512 non-null    float32
 14  X_14    512 non-null    float32
 15  X_15    512 non-null    float32
 16  X_16    512 non-null    float32
 17  X_17    512 non-null    float32
 18  X_18    512 non-null    float32
 19  X_19    512 non-null    float32
 20  X_20    512 non-null    float32
 21  X_21    512 non-null    float32
 22  X_22    512 non-null    float32
 23  X_23    512 non-null    float32
 24  X_24    512 non-null    float32
 25  X_25    512 non-null    float32
 26  X_26    512 non-null    float32
 27  X_27    512 non-null    float32
 28  X_28    512 non-null    float32
 29  X_29    512 non-null    float32
 30  X_30    512 non-null    float32
 31  X_31    512 non-null    float32
 32  X_32    512 non-null    float32
 33  X_33    512 non-null    float32
 34  X_34    512 non-null    float32
 35  X_35    512 non-null    float32
 36  X_36    512 non-null    float32
 37  X_37    512 non-null    float32
 38  X_38    512 non-null    float32
 39  X_39    512 non-null    float32
 40  X_40    512 non-null    float32
 41  X_41    512 non-null    float32
 42  X_42    512 non-null    float32
 43  X_43    512 non-null    float32
 44  X_44    512 non-null    float32
 45  X_45    512 non-null    float32
 46  X_46    512 non-null    float32
 47  X_47    512 non-null    float32
 48  X_48    512 non-null    float32
 49  X_49    512 non-null    float32
 50  X_50    512 non-null    float32
 51  X_51    512 non-null    float32
 52  X_52    512 non-null    float32
 53  X_53    512 non-null    float32
 54  X_54    512 non-null    float32
 55  X_55    512 non-null    float32
 56  X_56    512 non-null    float32
 57  X_57    512 non-null    float32
 58  X_58    512 non-null    float32
 59  X_59    512 non-null    float32
 60  X_60    512 non-null    float32
 61  X_61    512 non-null    float32
 62  X_62    512 non-null    float32
 63  X_63    512 non-null    float32
 64  X_64    512 non-null    float32
 65  X_65    512 non-null    float32
 66  X_66    512 non-null    float32
 67  X_67    512 non-null    float32
 68  X_68    512 non-null    float32
 69  X_69    512 non-null    float32
 70  X_70    512 non-null    float32
 71  X_71    512 non-null    float32
 72  X_72    512 non-null    float32
 73  X_73    512 non-null    float32
 74  X_74    512 non-null    float32
 75  X_75    512 non-null    float32
 76  X_76    512 non-null    float32
 77  X_77    512 non-null    float32
 78  X_78    512 non-null    float32
 79  X_79    512 non-null    float32
 80  X_80    512 non-null    float32
 81  X_81    512 non-null    float32
 82  X_82    512 non-null    float32
 83  X_83    512 non-null    float32
 84  X_84    512 non-null    float32
 85  X_85    512 non-null    float32
 86  X_86    512 non-null    float32
 87  X_87    512 non-null    float32
 88  X_88    512 non-null    float32
 89  X_89    512 non-null    float32
 90  X_90    512 non-null    float32
 91  X_91    512 non-null    float32
 92  X_92    512 non-null    float32
 93  X_93    512 non-null    float32
 94  X_94    512 non-null    float32
 95  X_95    512 non-null    float32
 96  X_96    512 non-null    float32
 97  X_97    512 non-null    float32
 98  X_98    512 non-null    float32
 99  X_99    512 non-null    float32
dtypes: float32(100)
memory usage: 204.0 KB
            X_0       X_1       X_2  ...      X_97      X_98      X_99
index                                ...                              
0      0.076786 -0.216350 -1.895120  ...  0.160742  0.044911 -0.150000
1      0.740907 -0.203885  0.509521  ... -0.580998  0.037574 -1.060503
2      1.098934  0.173025  0.182230  ...  0.672871 -1.077153 -1.898537
3     -1.763879  1.900201  0.049926  ...  0.096692 -2.302679 -0.804235
4      0.280434 -0.431449  1.677933  ...  0.216741 -1.356453  0.803417
...         ...       ...       ...  ...       ...       ...       ...
507   -0.252343 -0.664697  0.047586  ...  0.590262  0.978673 -0.642035
508   -1.206833  0.146338  0.582546  ... -0.441386 -1.611847 -0.673973
509   -0.623870 -0.168046  3.158549  ...  0.865582 -0.044088  0.817850
510   -0.649822  0.445184  2.075360  ...  1.102922 -0.709494  0.398863
511   -0.073112 -0.140979  0.152851  ...  0.241533 -1.552058 -1.511344

[512 rows x 100 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 512 entries, 0 to 511
Data columns (total 9 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          512 non-null    int64  
 1   Score_0        512 non-null    float64
 2   Proba_0        512 non-null    float64
 3   LogProba_0     512 non-null    float64
 4   Score_1        512 non-null    float64
 5   Proba_1        512 non-null    float64
 6   LogProba_1     512 non-null    float64
 7   Decision       512 non-null    int64  
 8   DecisionProba  512 non-null    float64
dtypes: float64(7), int64(2)
memory usage: 36.1 KB
     index   Score_0   Proba_0  ...  LogProba_1  Decision  DecisionProba
0        0 -0.024687  0.487659  ...   -0.668765         1       0.512341
1        1  0.326807  0.657824  ...   -1.072431         0       0.657824
2        2  0.042446  0.521210  ...   -0.736494         0       0.521210
3        3 -0.321771  0.344446  ...   -0.422275         1       0.655554
4        4  0.229737  0.612889  ...   -0.949045         0       0.612889
..     ...       ...       ...  ...         ...       ...            ...
507    507  0.465426  0.717248  ...   -1.263186         0       0.717248
508    508 -0.440210  0.293091  ...   -0.346853         1       0.706909
509    509  0.269363  0.631516  ...   -0.998358         0       0.631516
510    510 -0.224238  0.389723  ...   -0.493843         1       0.610277
511    511 -0.116427  0.442048  ...   -0.583483         1       0.557952

[512 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
     index   Score_0  SQL_Proba_0  ...  Py_Proba_0  Py_Proba_1  Py_Decision
496    496 -0.708818     0.195032  ...    0.195032    0.804968            1
497    497 -0.280476     0.363327  ...    0.363326    0.636674            1
498    498  0.591936     0.765643  ...    0.765643    0.234357            0
499    499 -0.788015     0.171359  ...    0.171359    0.828641            1
500    500 -0.107165     0.446622  ...    0.446622    0.553378            1
501    501  0.272040     0.632761  ...    0.632761    0.367239            0
502    502 -0.344639     0.334194  ...    0.334194    0.665806            1
503    503  0.321959     0.655639  ...    0.655639    0.344361            0
504    504  0.495422     0.729254  ...    0.729254    0.270746            0
505    505  0.349517     0.667974  ...    0.667974    0.332026            0
506    506 -0.049176     0.475432  ...    0.475432    0.524568            1
507    507  0.465426     0.717248  ...    0.717248    0.282752            0
508    508 -0.440210     0.293091  ...    0.293091    0.706909            1
509    509  0.269363     0.631516  ...    0.631516    0.368484            0
510    510 -0.224238     0.389723  ...    0.389723    0.610277            1
511    511 -0.116427     0.442048  ...    0.442048    0.557952            1

[16 rows x 12 columns]
MLLITE_CLASS_SQL_ERROR ('BinaryClass_100_medium', 'RidgeClassifier', 'sqlite') ('Py_Proba_0', 'SQL_Proba_0') 5.200016217053488e-07
     Py_Proba_0  SQL_Proba_0   SQL_Error_0
496    0.195032     0.195032 -8.810703e-07
497    0.363326     0.363327 -1.496534e-06
498    0.765643     0.765643 -6.041033e-07
499    0.171359     0.171359  1.684325e-07
500    0.446622     0.446622  5.103646e-08
501    0.632761     0.632761 -2.369922e-07
502    0.334194     0.334194  5.482548e-07
503    0.655639     0.655639  9.031469e-07
504    0.729254     0.729254 -9.412754e-07
505    0.667974     0.667974  4.336882e-07
506    0.475432     0.475432  1.326203e-07
507    0.717248     0.717248  3.804405e-07
508    0.293091     0.293091 -2.068300e-07
509    0.631516     0.631516  4.356940e-09
510    0.389723     0.389723 -9.099236e-08
511    0.442048     0.442048 -1.767006e-07
MLLITE_CLASS_SQL_ERROR ('BinaryClass_100_medium', 'RidgeClassifier', 'sqlite') ('Py_Proba_1', 'SQL_Proba_1') 5.196527588956961e-07
     Py_Proba_1  SQL_Proba_1   SQL_Error_1
496    0.804968     0.804968  8.959715e-07
497    0.636674     0.636673  1.526337e-06
498    0.234357     0.234357  5.593998e-07
499    0.828641     0.828641 -1.684325e-07
500    0.553378     0.553378 -5.103646e-08
501    0.367239     0.367239  2.369922e-07
502    0.665806     0.665806 -5.780571e-07
503    0.344361     0.344361 -8.733446e-07
504    0.270746     0.270746  9.114731e-07
505    0.332026     0.332026 -4.634906e-07
506    0.524568     0.524568 -1.326203e-07
507    0.282752     0.282752 -3.804405e-07
508    0.706909     0.706909  1.770276e-07
509    0.368484     0.368484  2.544538e-08
510    0.610277     0.610277  1.207947e-07
511    0.557952     0.557952  2.065029e-07
MLLITE_CLASS_SQL_EXECUTION_STATUS ('BinaryClass_100_medium', 'RidgeClassifier', 'sqlite', 'Success')
     Py_Decision  SQL_Decision
496            1             1
497            1             1
498            0             0
499            1             1
500            1             1
501            0             0
502            1             1
503            0             0
504            0             0
505            0             0
506            1             1
507            0             0
508            1             1
509            0             0
510            1             1
511            1             1
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
