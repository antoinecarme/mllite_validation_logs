READING_CSV BinaryClass_100_medium ['data/medium/BinaryClass_100_medium.csv']
          X_0       X_1       X_2  ...      X_98      X_99  target
0    0.076786 -0.216350 -1.895120  ...  0.044911 -0.150000       1
1    0.740907 -0.203885  0.509521  ...  0.037574 -1.060503       0
2    1.098934  0.173025  0.182230  ... -1.077153 -1.898537       0
3   -1.763879  1.900201  0.049926  ... -2.302679 -0.804235       1
4    0.280434 -0.431449  1.677933  ... -1.356453  0.803417       0
..        ...       ...       ...  ...       ...       ...     ...
507 -0.252343 -0.664697  0.047586  ...  0.978673 -0.642035       0
508 -1.206833  0.146338  0.582546  ... -1.611847 -0.673973       1
509 -0.623870 -0.168046  3.158549  ... -0.044088  0.817850       0
510 -0.649822  0.445184  2.075360  ... -0.709494  0.398863       0
511 -0.073112 -0.140979  0.152851  ... -1.552058 -1.511344       0

[512 rows x 101 columns]
MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
('OPERATION_START', 'TRAINING')
[[ 7.67860562e-02 -2.16349632e-01 -1.89512026e+00  9.72775340e-01
  -8.98455754e-02 -1.73332319e-01  2.04458380e+00 -8.33679587e-02
  -1.69993192e-02 -9.98147309e-01  1.00613546e+00 -3.34531516e-01
  -6.45206690e-01  5.16464531e-01  2.14602733e+00 -9.89635050e-01
  -5.83467007e-01  7.48828411e-01 -9.46215749e-01 -4.56152797e-01
  -7.09795535e-01 -1.57510340e+00  7.22209513e-02  2.76777953e-01
  -2.25623417e+00 -2.42628217e-01  8.41927901e-02 -5.25455236e-01
   1.04548253e-01  2.16998386e+00 -2.65719533e+00 -1.54227972e-01
   7.86681652e-01 -1.23210818e-01  1.05377853e+00  2.06990883e-01
  -3.75195622e-01 -1.61912119e+00 -5.13849854e-01  1.80463398e+00
  -3.34648073e-01  2.32175088e+00  5.18775403e-01  6.01812959e-01
  -2.73394251e+00  7.49632478e-01 -6.84904695e-01 -8.51321459e-01
   2.13226199e-01  4.73882705e-02  5.88863850e-01  1.15429863e-01
   6.22614384e-01  8.30699980e-01  6.70719266e-01 -8.77940238e-01
  -3.15930247e-01 -4.42460515e-02 -9.32259709e-02 -4.64032024e-01
   2.14235345e-03 -4.83993024e-01  1.54227927e-01 -1.24401498e+00
   1.70182478e+00  2.25201279e-01  7.64207184e-01  2.45098755e-01
   1.51445627e+00 -2.87229955e-01 -1.30952799e+00  4.84639332e-02
   5.02391279e-01  1.68891466e+00 -1.67603219e+00  1.15172791e+00
   1.49361551e-01  7.83485115e-01 -7.34475017e-01  4.70510930e-01
  -1.22888297e-01 -7.73810089e-01  2.88424671e-01 -6.68031573e-01
  -5.03504612e-02  3.55211020e-01  3.30597132e-01  2.09675357e-01
   1.19605529e+00  5.49714863e-01  2.13296890e-01 -1.60499215e+00
  -1.02351420e-03 -3.61251324e-01  1.19673991e+00  4.32973713e-01
   2.94337302e-01  1.60742208e-01  4.49113473e-02 -1.49999961e-01]
 [ 7.40907192e-01 -2.03884855e-01  5.09520948e-01 -2.68602610e-01
   1.01734117e-01  7.04473197e-01 -1.04752457e+00  8.41014564e-01
  -1.62119889e+00  1.23523962e+00 -7.93474138e-01 -9.34934199e-01
  -4.59271997e-01 -8.48768651e-01  1.92487645e+00 -6.00576460e-01
   3.15609246e-01  1.55015182e+00 -1.75477445e-01 -2.74452642e-02
  -7.65915513e-01  5.60320854e-01 -3.79324913e-01 -8.99946928e-01
   3.58364493e-01  1.72216535e-01  1.69563890e+00  6.88516736e-01
  -3.12919438e-01 -1.62021264e-01  1.02035865e-01  3.56784463e-01
   1.78872895e+00  2.80568987e-01  3.18056703e-01  1.26633152e-01
  -1.48791409e+00  3.99210781e-01 -1.24760234e+00 -4.79079545e-01
  -1.06708491e+00 -9.83151495e-01 -3.08190942e-01 -7.55273342e-01
   1.90604627e+00  1.78793520e-01  1.18870690e-01  3.58957857e-01
  -4.38061431e-02  1.16049063e+00  1.00332558e+00  1.36875010e+00
   4.78730857e-01  2.73252636e-01  1.02691138e+00 -6.04644120e-01
  -4.52357739e-01 -1.86125368e-01 -4.68186229e-01 -3.79988551e-01
  -2.06401989e-01 -9.83536601e-01  4.22431350e-01 -7.86184490e-01
  -3.13827068e-01 -4.87148225e-01  4.92854297e-01  9.04440701e-01
  -1.13552165e+00 -3.75038415e-01  1.25275290e+00  1.24107575e+00
  -8.59878361e-01 -7.36416221e-01 -3.31308293e+00 -1.61697939e-01
   6.13616884e-01 -3.98042768e-01  8.60749558e-02  1.20081162e+00
   8.43496084e-01 -2.37272903e-01  1.48435295e+00  1.67589104e+00
   1.63139943e-02 -6.39506042e-01 -6.06154263e-01  2.72835433e-01
   5.11132002e-01  1.52165639e+00 -5.31708449e-03  8.01320076e-01
   8.95860195e-01  4.10607219e-01 -4.93475378e-01  2.47548461e+00
  -1.27199209e+00 -5.80997586e-01  3.75736728e-02 -1.06050277e+00]
 [ 1.09893429e+00  1.73025072e-01  1.82229638e-01  1.06270838e+00
   5.13865232e-01  9.99493480e-01  1.23973727e+00 -4.58548367e-01
   1.25006235e+00 -5.92791066e-02 -7.84633517e-01 -2.05889702e+00
   3.67457047e-02  3.49219888e-01 -1.91125119e+00  7.51979709e-01
  -7.24364281e-01  4.62626100e-01  1.28284276e+00 -6.57514095e-01
  -1.79272637e-01 -1.88900858e-01 -1.26651788e+00 -2.55603170e+00
  -4.79668528e-01 -6.43282413e-01 -6.02538407e-01  1.27501309e+00
  -1.50119174e+00  4.39862221e-01 -1.57504186e-01 -1.45164824e+00
   1.51251459e+00  4.32972908e-02  4.54631031e-01  2.57750750e-01
   2.25065485e-01  3.95210475e-01 -5.07586956e-01 -1.32575643e+00
  -5.31998992e-01  3.24154019e-01 -8.10930505e-02 -1.00256348e+00
  -6.93465292e-01 -7.58263469e-01  7.62481034e-01 -1.09574616e+00
   4.09668028e-01 -8.09652433e-02 -5.96848428e-01 -7.70360231e-01
   6.21054351e-01 -1.19224243e-01  4.78616178e-01 -1.44250536e+00
   9.13851023e-01 -2.03700399e+00 -1.12629974e+00 -1.06483793e+00
   1.38200450e+00 -8.63599718e-01  1.01206267e+00 -3.89745384e-01
  -4.40156937e-01 -2.23279395e-03  5.15954375e-01  1.40094161e+00
   8.71294379e-01 -7.61249423e-01 -1.64062679e+00 -1.06637977e-01
  -1.14549327e+00 -8.01730216e-01 -9.10550714e-01  8.16507757e-01
  -6.75559640e-01  5.98497391e-01 -3.51114810e-01  2.80396342e-01
   6.81783199e-01  6.38313770e-01  7.59509683e-01  1.20518541e+00
  -4.18532670e-01 -1.63699687e+00 -1.93507344e-01  1.12032747e+00
   4.06595826e-01 -9.68143106e-01 -2.66031008e-02  8.66260350e-01
   8.30199063e-01 -6.18508518e-01 -4.40728277e-01 -4.62844372e-01
   1.00607407e+00  6.72870636e-01 -1.07715333e+00 -1.89853668e+00]
 [-1.76387858e+00  1.90020108e+00  4.99262102e-02 -5.55197060e-01
   1.68024373e+00 -2.88755685e-01  5.75080037e-01 -1.40003550e+00
   1.08139658e+00  1.03781617e+00  4.55955386e-01 -4.90699470e-01
  -8.91349554e-01  1.60808587e+00  4.44229096e-01  4.26883370e-01
   1.20018911e+00 -1.04898714e-01  1.23599017e+00  2.56733358e-01
   1.34151256e+00 -8.21831167e-01  8.36796880e-01  1.24152887e+00
  -1.20556676e+00 -1.02256262e+00 -7.25795448e-01  5.22432402e-02
   5.39670229e-01 -1.07271194e+00  1.65893555e-01 -8.41957510e-01
   9.41176355e-01 -6.65480316e-01  1.25523582e-01  1.52332973e+00
  -6.92075253e-01 -5.39478064e-01  1.11441314e+00  7.65614390e-01
   5.02117574e-01 -1.00958788e+00 -8.63959432e-01 -3.98205668e-02
  -7.10652173e-01  3.92357022e-01 -9.39320147e-01 -1.11804664e+00
   1.33686215e-01  2.47222447e+00  2.54431534e+00 -4.27229583e-01
   3.95019293e-01 -3.06889057e-01 -4.63866293e-01 -6.69113025e-02
   2.38334298e+00  6.04234278e-01 -2.93950230e-01  1.24616349e+00
  -5.78783572e-01  1.72946537e+00 -1.30051446e+00 -6.26530200e-02
  -1.75940380e-01 -2.05686331e+00  3.58007550e-02  1.06688631e+00
  -1.06770778e+00 -1.29291862e-01  9.81507957e-01 -2.06051350e+00
  -1.12787187e+00 -3.38974386e-01 -9.99148726e-01  1.30282557e+00
   1.10764742e+00  8.17310214e-01 -2.48850441e+00 -4.56928372e-01
  -1.66741383e+00 -1.33094394e+00 -2.37168264e+00 -2.19527054e+00
   4.23210412e-01  1.22160339e+00  8.95239890e-01  8.62192094e-01
  -8.75928998e-01 -6.63089216e-01  5.09316504e-01  6.58589602e-02
  -1.83265650e+00  1.70385349e+00 -1.37213063e+00 -1.67086756e+00
   6.43824697e-01  9.66917351e-02 -2.30267859e+00 -8.04234624e-01]
 [ 2.80433744e-01 -4.31448609e-01  1.67793310e+00  1.50869116e-01
  -1.59988254e-01 -1.30960393e+00  2.15685248e-01 -1.04799621e-01
   9.38231528e-01 -1.53020024e+00 -1.16910064e+00 -7.46225536e-01
   5.91160655e-01 -1.22178033e-01 -8.12542140e-02 -1.48075175e+00
  -2.80754685e+00  8.71919274e-01 -9.55915302e-02 -6.44493937e-01
  -1.13411975e+00  1.17033958e+00 -1.22180641e+00 -9.04849470e-01
  -1.05020940e+00 -6.15582228e-01 -6.03573263e-01 -3.81416708e-01
  -2.03174055e-01 -4.31786358e-01  8.70429158e-01  1.36959589e+00
   1.33015382e+00 -2.89075315e-01 -2.86687315e-01 -1.30172563e+00
  -9.32562724e-02  1.62860560e+00 -1.25011337e+00 -2.90341705e-01
   5.03354847e-01 -2.02275604e-01 -8.25749099e-01 -7.78827250e-01
  -1.21819127e+00  3.50637212e-02 -1.20942688e+00 -5.12564003e-01
   2.83736199e-01  8.09742212e-01  1.20343697e+00 -1.12571359e+00
   4.58417803e-01  8.92739058e-01 -7.53551364e-01  1.22984326e+00
   1.68182528e+00 -8.56762767e-01 -1.01052177e+00  4.01901782e-01
   1.83171928e+00 -1.01946795e+00 -5.50341249e-01  2.76359797e-01
   1.01594865e+00  9.05106068e-01 -9.02981520e-01  5.58089435e-01
  -1.48963070e+00  2.55932629e-01  1.78478658e-01  1.10537851e+00
   3.39230567e-01  1.43660232e-01 -2.58567065e-01 -1.10425627e+00
  -7.61743248e-01  3.93570006e-01  8.90783966e-02 -1.51482296e+00
   1.06395014e-01  1.32599866e+00  7.66198814e-01 -8.59620571e-01
  -1.10428178e+00  1.16254544e+00  5.00447512e-01 -3.21925133e-01
  -1.12140581e-01  6.00991905e-01 -6.74228787e-01  4.87680793e-01
  -5.11022270e-01  1.60962033e+00  6.76930249e-01  2.08288789e+00
   2.12690830e+00  2.16741070e-01 -1.35645258e+00  8.03416610e-01]] [1 0 0 1 0]
MLLITE_FIT_USING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 3 4
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 4 4
('OPERATION_END_ELAPSED', 0.061, 'TRAINING')
{ ,   }
{ ,   }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 512, "dataset_features" : 100 },
	"classes" : [ 0, 1 ],
	"equations" : {
		"class_1" : {
			"intercept" : 0.000558,
			"coeffs" : [ 0.045419, 0.237181, -0.022942, -0.068167, 0.168399, -0.029209, 0.025823, -0.074720, -0.020305, 0.010837, 0.009426, 0.078202, 0.017281, 0.028883, -0.007622, 0.039188, 0.026010, -0.002356, 0.043976, -0.072737, -0.010874, 0.024740, -0.038020, -0.030292, -0.011367, 0.043258, -0.006911, 0.004048, -0.002650, -0.028311, -0.010290, -0.007142, 0.036601, -0.046100, 0.057148, -0.026235, -0.015731, 0.020540, -0.041613, 0.073646, 0.032632, 0.017451, 0.027560, -0.044444, -0.011069, 0.062136, -0.001885, 0.035238, 0.050407, -0.000028, 0.001497, 0.047333, 0.024141, 0.037380, 0.004623, -0.035307, -0.008028, -0.033042, 0.024598, 0.058963, 0.026407, 0.287095, -0.006355, 0.053387, -0.029842, 0.013425, -0.004110, -0.144599, 0.041283, 0.048438, -0.025844, 0.008356, 0.049051, 0.030766, -0.002816, 0.045158, -0.000441, -0.020979, -0.030908, -0.015179, 0.053937, 0.014094, 0.024816, 0.028835, -0.031021, 0.009181, 0.031942, -0.011498, -0.015318, -0.066391, 0.019888, 0.032839, 0.075866, -0.031744, 0.069718, -0.019710, 0.026573, -0.026752, -0.001094, -0.013733 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_100_medium.json'

RELOADING_MODEL_FROM_JSON_START ('BinaryClass_100_medium', 'RidgeClassifier')
MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
MLLITE_RELOADING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 512, "dataset_features" : 100 },
	"classes" : [ 0, 1 ],
	"equations" : {
		"class_1" : {
			"intercept" : 0.000558,
			"coeffs" : [ 0.045419, 0.237181, -0.022942, -0.068167, 0.168399, -0.029209, 0.025823, -0.074720, -0.020305, 0.010837, 0.009426, 0.078202, 0.017281, 0.028883, -0.007622, 0.039188, 0.026010, -0.002356, 0.043976, -0.072737, -0.010874, 0.024740, -0.038020, -0.030292, -0.011367, 0.043258, -0.006911, 0.004048, -0.002650, -0.028311, -0.010290, -0.007142, 0.036601, -0.046100, 0.057148, -0.026235, -0.015731, 0.020540, -0.041613, 0.073646, 0.032632, 0.017451, 0.027560, -0.044444, -0.011069, 0.062136, -0.001885, 0.035238, 0.050407, -0.000028, 0.001497, 0.047333, 0.024141, 0.037380, 0.004623, -0.035307, -0.008028, -0.033042, 0.024598, 0.058963, 0.026407, 0.287095, -0.006355, 0.053387, -0.029842, 0.013425, -0.004110, -0.144599, 0.041283, 0.048438, -0.025844, 0.008356, 0.049051, 0.030766, -0.002816, 0.045158, -0.000441, -0.020979, -0.030908, -0.015179, 0.053937, 0.014094, 0.024816, 0.028835, -0.031021, 0.009181, 0.031942, -0.011498, -0.015318, -0.066391, 0.019888, 0.032839, 0.075866, -0.031744, 0.069718, -0.019710, 0.026573, -0.026752, -0.001094, -0.013733 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1 ],
	"dataset" : 	{
		"dataset_features" : 100,
		"dataset_rows" : 512
	},
	"equations" : 	{
		"class_1" : 	{
			"coeffs" : [ 0.045419, 0.237181, -0.022942, -0.068167, 0.168399, -0.029209, 0.025823, -0.07472, -0.020305, 0.010837, 0.009426, 0.078202, 0.017281, 0.028883, -0.007622, 0.039188, 0.02601, -0.002356, 0.043976, -0.072737, -0.010874, 0.02474, -0.03802, -0.030292, -0.011367, 0.043258, -0.006911, 0.004048, -0.00265, -0.028311, -0.01029, -0.007142, 0.036601, -0.0461, 0.057148, -0.026235, -0.015731, 0.02054, -0.041613, 0.073646, 0.032632, 0.017451, 0.02756, -0.044444, -0.011069, 0.062136, -0.001885, 0.035238, 0.050407, -2.8e-05, 0.001497, 0.047333, 0.024141, 0.03738, 0.004623, -0.035307, -0.008028, -0.033042, 0.024598, 0.058963, 0.026407, 0.287095, -0.006355, 0.053387, -0.029842, 0.013425, -0.00411, -0.144599, 0.041283, 0.048438, -0.025844, 0.008356, 0.049051, 0.030766, -0.002816, 0.045158, -0.000441, -0.020979, -0.030908, -0.015179, 0.053937, 0.014094, 0.024816, 0.028835, -0.031021, 0.009181, 0.031942, -0.011498, -0.015318, -0.066391, 0.019888, 0.032839, 0.075866, -0.031744, 0.069718, -0.01971, 0.026573, -0.026752, -0.001094, -0.013733 ],
			"intercept" : 0.000558
		}
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_il8", "version" : "2024-W14" },
	"options" :  { "alpha" : 1.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
RELOADING_MODEL_FROM_JSON_END ('BinaryClass_100_medium', 'RidgeClassifier')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0.4852 0.5148]
 [0.6478 0.3522]
 [0.5027 0.4973]
 ...
 [0.6183 0.3817]
 [0.3872 0.6128]
 [0.4462 0.5538]]
(512, 2)
(512,) float32
MODEL_PERFS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'BinaryClass_100_medium', 'size': 512, 'accuracy': 0.876953125, 'auc': 0.9539947509765625}
WRITING_PERF_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_100_medium.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'BinaryClass_100_medium', 'training_time_in_sec': 0.061, 'prediction_time_in_sec': 0.0}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 0 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 1 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 2 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 3 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 4 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 5 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 6 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 7 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 8 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 9 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 10 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 11 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 12 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 13 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 14 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 15 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 16 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 17 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 18 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 19 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 20 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 21 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 22 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 23 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 24 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 25 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 26 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 27 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 28 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 29 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 30 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 31 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 32 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 33 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 34 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 35 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 36 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 37 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 38 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 39 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 40 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 41 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 42 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 43 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 44 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 45 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 46 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 47 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 48 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 49 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 50 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 51 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 52 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 53 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 54 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 55 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 56 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 57 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 58 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 59 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 60 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 61 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 62 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 63 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 64 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 65 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 66 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 67 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 68 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 69 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 70 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 71 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 72 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 73 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 74 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 75 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 76 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 77 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 78 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 79 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 80 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 81 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 82 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 83 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 84 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 85 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 86 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 87 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 88 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 89 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 90 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 91 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 92 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 93 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 94 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 95 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 96 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 97 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 98 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 99 100
{
   "Contributions" : {
      "X_0" : [ -0.002158, 0.002158 ],
      "X_1" : [ -0.005759, 0.005759 ],
      "X_2" : [ 0.000325, -0.000325 ],
      "X_3" : [ -0.001722, 0.001722 ],
      "X_4" : [ -0.003829, 0.003829 ],
      "X_5" : [ -0.001006, 0.001006 ],
      "X_6" : [ 0.000189, -0.000189 ],
      "X_7" : [ 0.000856, -0.000856 ],
      "X_8" : [ 0.001237, -0.001238 ],
      "X_9" : [ 0.000108, -0.000108 ],
      "X_10" : [ 0.000104, -0.000104 ],
      "X_11" : [ -0.006976, 0.006976 ],
      "X_12" : [ -0.000061, 0.000061 ],
      "X_13" : [ 0.001997, -0.001997 ],
      "X_14" : [ -0.000125, 0.000125 ],
      "X_15" : [ 0.002061, -0.002061 ],
      "X_16" : [ 0.000022, -0.000022 ],
      "X_17" : [ -0.000092, 0.000092 ],
      "X_18" : [ -0.001789, 0.001789 ],
      "X_19" : [ 0.002058, -0.002058 ],
      "X_20" : [ -0.000564, 0.000564 ],
      "X_21" : [ -0.001017, 0.001017 ],
      "X_22" : [ 0.000027, -0.000027 ],
      "X_23" : [ 0.001407, -0.001407 ],
      "X_24" : [ 0.000109, -0.000109 ],
      "X_25" : [ -0.002158, 0.002158 ],
      "X_26" : [ -0.000181, 0.000181 ],
      "X_27" : [ -0.000179, 0.000179 ],
      "X_28" : [ -0.000025, 0.000025 ],
      "X_29" : [ 0.001289, -0.001289 ],
      "X_30" : [ -0.000386, 0.000386 ],
      "X_31" : [ -0.000675, 0.000675 ],
      "X_32" : [ -0.000082, 0.000082 ],
      "X_33" : [ -0.001159, 0.001159 ],
      "X_34" : [ 0.002491, -0.002491 ],
      "X_35" : [ -0.001086, 0.001086 ],
      "X_36" : [ 0.000032, -0.000032 ],
      "X_37" : [ -0.000270, 0.000270 ],
      "X_38" : [ -0.000888, 0.000888 ],
      "X_39" : [ 0.003740, -0.003740 ],
      "X_40" : [ 0.000419, -0.000419 ],
      "X_41" : [ -0.000769, 0.000769 ],
      "X_42" : [ 0.000069, -0.000069 ],
      "X_43" : [ 0.002465, -0.002465 ],
      "X_44" : [ 0.000151, -0.000151 ],
      "X_45" : [ 0.000826, -0.000826 ],
      "X_46" : [ -0.000004, 0.000004 ],
      "X_47" : [ 0.002234, -0.002234 ],
      "X_48" : [ 0.003220, -0.003220 ],
      "X_49" : [ -0.000001, 0.000001 ],
      "X_50" : [ -0.000025, 0.000025 ],
      "X_51" : [ -0.000393, 0.000393 ],
      "X_52" : [ 0.002105, -0.002105 ],
      "X_53" : [ 0.000483, -0.000483 ],
      "X_54" : [ 0.000043, -0.000043 ],
      "X_55" : [ 0.000292, -0.000292 ],
      "X_56" : [ -0.000741, 0.000741 ],
      "X_57" : [ 0.001085, -0.001085 ],
      "X_58" : [ 0.000700, -0.000700 ],
      "X_59" : [ -0.000709, 0.000709 ],
      "X_60" : [ -0.001313, 0.001313 ],
      "X_61" : [ -0.006526, 0.006526 ],
      "X_62" : [ -0.000135, 0.000135 ],
      "X_63" : [ 0.000813, -0.000813 ],
      "X_64" : [ 0.001903, -0.001903 ],
      "X_65" : [ -0.000285, 0.000285 ],
      "X_66" : [ 0.000043, -0.000043 ],
      "X_67" : [ 0.002296, -0.002296 ],
      "X_68" : [ 0.001884, -0.001884 ],
      "X_69" : [ -0.002666, 0.002666 ],
      "X_70" : [ 0.000409, -0.000409 ],
      "X_71" : [ -0.000070, 0.000070 ],
      "X_72" : [ 0.002057, -0.002057 ],
      "X_73" : [ -0.000456, 0.000456 ],
      "X_74" : [ -0.000166, 0.000166 ],
      "X_75" : [ -0.001355, 0.001355 ],
      "X_76" : [ 0.000031, -0.000031 ],
      "X_77" : [ 0.001171, -0.001171 ],
      "X_78" : [ 0.000506, -0.000506 ],
      "X_79" : [ 0.000548, -0.000548 ],
      "X_80" : [ -0.002289, 0.002289 ],
      "X_81" : [ -0.001280, 0.001280 ],
      "X_82" : [ 0.000864, -0.000864 ],
      "X_83" : [ 0.001250, -0.001250 ],
      "X_84" : [ 0.000579, -0.000579 ],
      "X_85" : [ 0.000010, -0.000010 ],
      "X_86" : [ 0.001383, -0.001383 ],
      "X_87" : [ 0.000035, -0.000035 ],
      "X_88" : [ 0.000128, -0.000128 ],
      "X_89" : [ 0.000357, -0.000357 ],
      "X_90" : [ 0.000867, -0.000867 ],
      "X_91" : [ -0.000651, 0.000651 ],
      "X_92" : [ -0.002283, 0.002283 ],
      "X_93" : [ -0.000667, 0.000667 ],
      "X_94" : [ 0.000083, -0.000083 ],
      "X_95" : [ 0.000312, -0.000312 ],
      "X_96" : [ 0.002804, -0.002804 ],
      "X_97" : [ -0.000607, 0.000607 ],
      "X_98" : [ -0.000005, 0.000005 ],
      "X_99" : [ -0.001372, 0.001372 ]   
   },
   "Most_Contributive_Features_By_Class" : {
      "class_0" : [ 11, 61, 1, 4, 39, 48, 96, 69, 34, 43 ],
      "class_1" : [ 11, 61, 1, 4, 39, 48, 96, 69, 34, 43 ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_100_medium_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_100_medium_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('BinaryClass_100_medium', 'RidgeClassifier', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('BinaryClass_100_medium', 'RidgeClassifier', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('BinaryClass_100_medium', 'RidgeClassifier', 'duckdb')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('BinaryClass_100_medium', 'RidgeClassifier', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 512 entries, 0 to 511
Data columns (total 100 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     512 non-null    float32
 1   X_1     512 non-null    float32
 2   X_2     512 non-null    float32
 3   X_3     512 non-null    float32
 4   X_4     512 non-null    float32
 5   X_5     512 non-null    float32
 6   X_6     512 non-null    float32
 7   X_7     512 non-null    float32
 8   X_8     512 non-null    float32
 9   X_9     512 non-null    float32
 10  X_10    512 non-null    float32
 11  X_11    512 non-null    float32
 12  X_12    512 non-null    float32
 13  X_13    512 non-null    float32
 14  X_14    512 non-null    float32
 15  X_15    512 non-null    float32
 16  X_16    512 non-null    float32
 17  X_17    512 non-null    float32
 18  X_18    512 non-null    float32
 19  X_19    512 non-null    float32
 20  X_20    512 non-null    float32
 21  X_21    512 non-null    float32
 22  X_22    512 non-null    float32
 23  X_23    512 non-null    float32
 24  X_24    512 non-null    float32
 25  X_25    512 non-null    float32
 26  X_26    512 non-null    float32
 27  X_27    512 non-null    float32
 28  X_28    512 non-null    float32
 29  X_29    512 non-null    float32
 30  X_30    512 non-null    float32
 31  X_31    512 non-null    float32
 32  X_32    512 non-null    float32
 33  X_33    512 non-null    float32
 34  X_34    512 non-null    float32
 35  X_35    512 non-null    float32
 36  X_36    512 non-null    float32
 37  X_37    512 non-null    float32
 38  X_38    512 non-null    float32
 39  X_39    512 non-null    float32
 40  X_40    512 non-null    float32
 41  X_41    512 non-null    float32
 42  X_42    512 non-null    float32
 43  X_43    512 non-null    float32
 44  X_44    512 non-null    float32
 45  X_45    512 non-null    float32
 46  X_46    512 non-null    float32
 47  X_47    512 non-null    float32
 48  X_48    512 non-null    float32
 49  X_49    512 non-null    float32
 50  X_50    512 non-null    float32
 51  X_51    512 non-null    float32
 52  X_52    512 non-null    float32
 53  X_53    512 non-null    float32
 54  X_54    512 non-null    float32
 55  X_55    512 non-null    float32
 56  X_56    512 non-null    float32
 57  X_57    512 non-null    float32
 58  X_58    512 non-null    float32
 59  X_59    512 non-null    float32
 60  X_60    512 non-null    float32
 61  X_61    512 non-null    float32
 62  X_62    512 non-null    float32
 63  X_63    512 non-null    float32
 64  X_64    512 non-null    float32
 65  X_65    512 non-null    float32
 66  X_66    512 non-null    float32
 67  X_67    512 non-null    float32
 68  X_68    512 non-null    float32
 69  X_69    512 non-null    float32
 70  X_70    512 non-null    float32
 71  X_71    512 non-null    float32
 72  X_72    512 non-null    float32
 73  X_73    512 non-null    float32
 74  X_74    512 non-null    float32
 75  X_75    512 non-null    float32
 76  X_76    512 non-null    float32
 77  X_77    512 non-null    float32
 78  X_78    512 non-null    float32
 79  X_79    512 non-null    float32
 80  X_80    512 non-null    float32
 81  X_81    512 non-null    float32
 82  X_82    512 non-null    float32
 83  X_83    512 non-null    float32
 84  X_84    512 non-null    float32
 85  X_85    512 non-null    float32
 86  X_86    512 non-null    float32
 87  X_87    512 non-null    float32
 88  X_88    512 non-null    float32
 89  X_89    512 non-null    float32
 90  X_90    512 non-null    float32
 91  X_91    512 non-null    float32
 92  X_92    512 non-null    float32
 93  X_93    512 non-null    float32
 94  X_94    512 non-null    float32
 95  X_95    512 non-null    float32
 96  X_96    512 non-null    float32
 97  X_97    512 non-null    float32
 98  X_98    512 non-null    float32
 99  X_99    512 non-null    float32
dtypes: float32(100)
memory usage: 204.0 KB
            X_0       X_1       X_2  ...      X_97      X_98      X_99
index                                ...                              
0      0.076786 -0.216350 -1.895120  ...  0.160742  0.044911 -0.150000
1      0.740907 -0.203885  0.509521  ... -0.580998  0.037574 -1.060503
2      1.098934  0.173025  0.182230  ...  0.672871 -1.077153 -1.898537
3     -1.763879  1.900201  0.049926  ...  0.096692 -2.302679 -0.804235
4      0.280434 -0.431449  1.677933  ...  0.216741 -1.356453  0.803417
...         ...       ...       ...  ...       ...       ...       ...
507   -0.252343 -0.664697  0.047586  ...  0.590262  0.978673 -0.642035
508   -1.206833  0.146338  0.582546  ... -0.441386 -1.611847 -0.673973
509   -0.623870 -0.168046  3.158549  ...  0.865582 -0.044088  0.817850
510   -0.649822  0.445184  2.075360  ...  1.102922 -0.709494  0.398863
511   -0.073112 -0.140979  0.152851  ...  0.241533 -1.552058 -1.511344

[512 rows x 100 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 512 entries, 0 to 511
Data columns (total 9 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          512 non-null    int64  
 1   Score_0        512 non-null    float64
 2   Proba_0        512 non-null    float64
 3   LogProba_0     512 non-null    float64
 4   Score_1        512 non-null    float64
 5   Proba_1        512 non-null    float64
 6   LogProba_1     512 non-null    float64
 7   Decision       512 non-null    int64  
 8   DecisionProba  512 non-null    float64
dtypes: float64(7), int64(2)
memory usage: 36.1 KB
     index   Score_0   Proba_0  ...  LogProba_1  Decision  DecisionProba
0        0 -0.029670  0.485169  ...   -0.663917         1       0.514831
1        1  0.304616  0.647766  ...   -1.043458         0       0.647766
2        2  0.005414  0.502707  ...   -0.698576         0       0.502707
3        3 -0.362328  0.326369  ...   -0.395072         1       0.673631
4        4  0.218248  0.607424  ...   -0.935025         0       0.607424
..     ...       ...       ...  ...         ...       ...            ...
507    507  0.466169  0.717549  ...   -1.264252         0       0.717549
508    508 -0.406709  0.307163  ...   -0.366960         1       0.692837
509    509  0.241154  0.618293  ...   -0.963101         0       0.618293
510    510 -0.229522  0.387213  ...   -0.489737         1       0.612787
511    511 -0.108097  0.446161  ...   -0.590881         1       0.553839

[512 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
     index   Score_0  SQL_Proba_0  ...  Py_Proba_0  Py_Proba_1  Py_Decision
496    496 -0.756049     0.180628  ...    0.180628    0.819372            1
497    497 -0.262628     0.371624  ...    0.371624    0.628376            1
498    498  0.621283     0.776011  ...    0.776010    0.223990            0
499    499 -0.740613     0.185242  ...    0.185242    0.814758            1
500    500 -0.063844     0.468122  ...    0.468121    0.531879            1
501    501  0.246618     0.620869  ...    0.620869    0.379131            0
502    502 -0.387699     0.315313  ...    0.315312    0.684688            1
503    503  0.327474     0.658125  ...    0.658125    0.341875            0
504    504  0.550409     0.750413  ...    0.750412    0.249588            0
505    505  0.320815     0.655122  ...    0.655122    0.344878            0
506    506 -0.032497     0.483757  ...    0.483757    0.516243            1
507    507  0.466169     0.717549  ...    0.717550    0.282450            0
508    508 -0.406709     0.307163  ...    0.307162    0.692838            1
509    509  0.241154     0.618293  ...    0.618294    0.381706            0
510    510 -0.229522     0.387213  ...    0.387213    0.612787            1
511    511 -0.108097     0.446161  ...    0.446159    0.553841            1

[16 rows x 12 columns]
MLLITE_CLASS_SQL_ERROR ('BinaryClass_100_medium', 'RidgeClassifier', 'duckdb') ('Py_Proba_0', 'SQL_Proba_0') 4.947438191625392e-07
     Py_Proba_0  SQL_Proba_0   SQL_Error_0
496    0.180628     0.180628  2.820742e-08
497    0.371624     0.371624  2.074957e-07
498    0.776010     0.776011 -5.810219e-08
499    0.185242     0.185242 -6.076310e-07
500    0.468121     0.468122 -7.949085e-07
501    0.620869     0.620869  6.022937e-07
502    0.315312     0.315313 -4.738702e-07
503    0.658125     0.658125 -1.824823e-07
504    0.750412     0.750413 -1.034861e-06
505    0.655122     0.655122  5.117619e-07
506    0.483757     0.483757 -4.703109e-07
507    0.717550     0.717549  1.400866e-07
508    0.307162     0.307163 -5.409277e-07
509    0.618294     0.618293  1.052846e-06
510    0.387213     0.387213 -9.827195e-08
511    0.446159     0.446161 -1.988936e-06
MLLITE_CLASS_SQL_ERROR ('BinaryClass_100_medium', 'RidgeClassifier', 'duckdb') ('Py_Proba_1', 'SQL_Proba_1') 4.937662131575477e-07
     Py_Proba_1  SQL_Proba_1   SQL_Error_1
496    0.819372     0.819372 -4.310858e-08
497    0.628376     0.628376 -1.478911e-07
498    0.223990     0.223989  1.339871e-08
499    0.814758     0.814758  6.523345e-07
500    0.531879     0.531878  7.651062e-07
501    0.379131     0.379131 -5.426890e-07
502    0.684688     0.684687  5.036725e-07
503    0.341875     0.341875  1.824823e-07
504    0.249588     0.249587  1.019960e-06
505    0.344878     0.344878 -5.117619e-07
506    0.516243     0.516243  4.703109e-07
507    0.282450     0.282451 -1.102843e-07
508    0.692838     0.692837  6.005324e-07
509    0.381706     0.381707 -1.023044e-06
510    0.612787     0.612787  1.280743e-07
511    0.553841     0.553839  2.018739e-06
MLLITE_CLASS_SQL_EXECUTION_STATUS ('BinaryClass_100_medium', 'RidgeClassifier', 'duckdb', 'Success')
     Py_Decision  SQL_Decision
496            1             1
497            1             1
498            0             0
499            1             1
500            1             1
501            0             0
502            1             1
503            0             0
504            0             0
505            0             0
506            1             1
507            0             0
508            1             1
509            0             0
510            1             1
511            1             1
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_100_medium_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('BinaryClass_100_medium', 'RidgeClassifier', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('BinaryClass_100_medium', 'RidgeClassifier', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('BinaryClass_100_medium', 'RidgeClassifier', 'sqlite')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('BinaryClass_100_medium', 'RidgeClassifier', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 512 entries, 0 to 511
Data columns (total 100 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     512 non-null    float32
 1   X_1     512 non-null    float32
 2   X_2     512 non-null    float32
 3   X_3     512 non-null    float32
 4   X_4     512 non-null    float32
 5   X_5     512 non-null    float32
 6   X_6     512 non-null    float32
 7   X_7     512 non-null    float32
 8   X_8     512 non-null    float32
 9   X_9     512 non-null    float32
 10  X_10    512 non-null    float32
 11  X_11    512 non-null    float32
 12  X_12    512 non-null    float32
 13  X_13    512 non-null    float32
 14  X_14    512 non-null    float32
 15  X_15    512 non-null    float32
 16  X_16    512 non-null    float32
 17  X_17    512 non-null    float32
 18  X_18    512 non-null    float32
 19  X_19    512 non-null    float32
 20  X_20    512 non-null    float32
 21  X_21    512 non-null    float32
 22  X_22    512 non-null    float32
 23  X_23    512 non-null    float32
 24  X_24    512 non-null    float32
 25  X_25    512 non-null    float32
 26  X_26    512 non-null    float32
 27  X_27    512 non-null    float32
 28  X_28    512 non-null    float32
 29  X_29    512 non-null    float32
 30  X_30    512 non-null    float32
 31  X_31    512 non-null    float32
 32  X_32    512 non-null    float32
 33  X_33    512 non-null    float32
 34  X_34    512 non-null    float32
 35  X_35    512 non-null    float32
 36  X_36    512 non-null    float32
 37  X_37    512 non-null    float32
 38  X_38    512 non-null    float32
 39  X_39    512 non-null    float32
 40  X_40    512 non-null    float32
 41  X_41    512 non-null    float32
 42  X_42    512 non-null    float32
 43  X_43    512 non-null    float32
 44  X_44    512 non-null    float32
 45  X_45    512 non-null    float32
 46  X_46    512 non-null    float32
 47  X_47    512 non-null    float32
 48  X_48    512 non-null    float32
 49  X_49    512 non-null    float32
 50  X_50    512 non-null    float32
 51  X_51    512 non-null    float32
 52  X_52    512 non-null    float32
 53  X_53    512 non-null    float32
 54  X_54    512 non-null    float32
 55  X_55    512 non-null    float32
 56  X_56    512 non-null    float32
 57  X_57    512 non-null    float32
 58  X_58    512 non-null    float32
 59  X_59    512 non-null    float32
 60  X_60    512 non-null    float32
 61  X_61    512 non-null    float32
 62  X_62    512 non-null    float32
 63  X_63    512 non-null    float32
 64  X_64    512 non-null    float32
 65  X_65    512 non-null    float32
 66  X_66    512 non-null    float32
 67  X_67    512 non-null    float32
 68  X_68    512 non-null    float32
 69  X_69    512 non-null    float32
 70  X_70    512 non-null    float32
 71  X_71    512 non-null    float32
 72  X_72    512 non-null    float32
 73  X_73    512 non-null    float32
 74  X_74    512 non-null    float32
 75  X_75    512 non-null    float32
 76  X_76    512 non-null    float32
 77  X_77    512 non-null    float32
 78  X_78    512 non-null    float32
 79  X_79    512 non-null    float32
 80  X_80    512 non-null    float32
 81  X_81    512 non-null    float32
 82  X_82    512 non-null    float32
 83  X_83    512 non-null    float32
 84  X_84    512 non-null    float32
 85  X_85    512 non-null    float32
 86  X_86    512 non-null    float32
 87  X_87    512 non-null    float32
 88  X_88    512 non-null    float32
 89  X_89    512 non-null    float32
 90  X_90    512 non-null    float32
 91  X_91    512 non-null    float32
 92  X_92    512 non-null    float32
 93  X_93    512 non-null    float32
 94  X_94    512 non-null    float32
 95  X_95    512 non-null    float32
 96  X_96    512 non-null    float32
 97  X_97    512 non-null    float32
 98  X_98    512 non-null    float32
 99  X_99    512 non-null    float32
dtypes: float32(100)
memory usage: 204.0 KB
            X_0       X_1       X_2  ...      X_97      X_98      X_99
index                                ...                              
0      0.076786 -0.216350 -1.895120  ...  0.160742  0.044911 -0.150000
1      0.740907 -0.203885  0.509521  ... -0.580998  0.037574 -1.060503
2      1.098934  0.173025  0.182230  ...  0.672871 -1.077153 -1.898537
3     -1.763879  1.900201  0.049926  ...  0.096692 -2.302679 -0.804235
4      0.280434 -0.431449  1.677933  ...  0.216741 -1.356453  0.803417
...         ...       ...       ...  ...       ...       ...       ...
507   -0.252343 -0.664697  0.047586  ...  0.590262  0.978673 -0.642035
508   -1.206833  0.146338  0.582546  ... -0.441386 -1.611847 -0.673973
509   -0.623870 -0.168046  3.158549  ...  0.865582 -0.044088  0.817850
510   -0.649822  0.445184  2.075360  ...  1.102922 -0.709494  0.398863
511   -0.073112 -0.140979  0.152851  ...  0.241533 -1.552058 -1.511344

[512 rows x 100 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 512 entries, 0 to 511
Data columns (total 9 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          512 non-null    int64  
 1   Score_0        512 non-null    float64
 2   Proba_0        512 non-null    float64
 3   LogProba_0     512 non-null    float64
 4   Score_1        512 non-null    float64
 5   Proba_1        512 non-null    float64
 6   LogProba_1     512 non-null    float64
 7   Decision       512 non-null    int64  
 8   DecisionProba  512 non-null    float64
dtypes: float64(7), int64(2)
memory usage: 36.1 KB
     index   Score_0   Proba_0  ...  LogProba_1  Decision  DecisionProba
0        0 -0.029670  0.485169  ...   -0.663917         1       0.514831
1        1  0.304616  0.647765  ...   -1.043458         0       0.647765
2        2  0.005414  0.502707  ...   -0.698576         0       0.502707
3        3 -0.362328  0.326369  ...   -0.395072         1       0.673631
4        4  0.218248  0.607424  ...   -0.935025         0       0.607424
..     ...       ...       ...  ...         ...       ...            ...
507    507  0.466169  0.717549  ...   -1.264252         0       0.717549
508    508 -0.406709  0.307163  ...   -0.366960         1       0.692837
509    509  0.241154  0.618293  ...   -0.963101         0       0.618293
510    510 -0.229522  0.387213  ...   -0.489737         1       0.612787
511    511 -0.108097  0.446161  ...   -0.590881         1       0.553839

[512 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
     index   Score_0  SQL_Proba_0  ...  Py_Proba_0  Py_Proba_1  Py_Decision
496    496 -0.756049     0.180628  ...    0.180628    0.819372            1
497    497 -0.262628     0.371624  ...    0.371624    0.628376            1
498    498  0.621283     0.776011  ...    0.776010    0.223990            0
499    499 -0.740613     0.185242  ...    0.185242    0.814758            1
500    500 -0.063844     0.468122  ...    0.468121    0.531879            1
501    501  0.246618     0.620869  ...    0.620869    0.379131            0
502    502 -0.387699     0.315313  ...    0.315312    0.684688            1
503    503  0.327474     0.658125  ...    0.658125    0.341875            0
504    504  0.550409     0.750413  ...    0.750412    0.249588            0
505    505  0.320815     0.655122  ...    0.655122    0.344878            0
506    506 -0.032497     0.483757  ...    0.483757    0.516243            1
507    507  0.466169     0.717549  ...    0.717550    0.282450            0
508    508 -0.406709     0.307163  ...    0.307162    0.692838            1
509    509  0.241154     0.618293  ...    0.618294    0.381706            0
510    510 -0.229522     0.387213  ...    0.387213    0.612787            1
511    511 -0.108097     0.446161  ...    0.446159    0.553841            1

[16 rows x 12 columns]
MLLITE_CLASS_SQL_ERROR ('BinaryClass_100_medium', 'RidgeClassifier', 'sqlite') ('Py_Proba_0', 'SQL_Proba_0') 4.930349027842322e-07
     Py_Proba_0  SQL_Proba_0   SQL_Error_0
496    0.180628     0.180628 -1.959102e-08
497    0.371624     0.371624  1.842026e-07
498    0.776010     0.776011 -5.018981e-08
499    0.185242     0.185242 -6.204407e-07
500    0.468121     0.468122 -8.012877e-07
501    0.620869     0.620869  5.878717e-07
502    0.315312     0.315313 -4.194405e-07
503    0.658125     0.658125 -2.022339e-07
504    0.750412     0.750413 -1.040087e-06
505    0.655122     0.655122  5.246961e-07
506    0.483757     0.483757 -4.491637e-07
507    0.717550     0.717549  1.934745e-07
508    0.307162     0.307163 -5.375604e-07
509    0.618294     0.618293  1.074739e-06
510    0.387213     0.387213 -1.005765e-07
511    0.446159     0.446161 -2.005035e-06
MLLITE_CLASS_SQL_ERROR ('BinaryClass_100_medium', 'RidgeClassifier', 'sqlite') ('Py_Proba_1', 'SQL_Proba_1') 4.919572520572222e-07
     Py_Proba_1  SQL_Proba_1   SQL_Error_1
496    0.819372     0.819372  4.689856e-09
497    0.628376     0.628376 -1.245980e-07
498    0.223990     0.223989  5.486331e-09
499    0.814758     0.814758  6.651442e-07
500    0.531879     0.531878  7.714854e-07
501    0.379131     0.379131 -5.282670e-07
502    0.684688     0.684687  4.492428e-07
503    0.341875     0.341875  2.022339e-07
504    0.249588     0.249587  1.025186e-06
505    0.344878     0.344878 -5.246961e-07
506    0.516243     0.516243  4.491637e-07
507    0.282450     0.282451 -1.636722e-07
508    0.692838     0.692837  5.971650e-07
509    0.381706     0.381707 -1.044937e-06
510    0.612787     0.612787  1.303788e-07
511    0.553841     0.553839  2.034837e-06
MLLITE_CLASS_SQL_EXECUTION_STATUS ('BinaryClass_100_medium', 'RidgeClassifier', 'sqlite', 'Success')
     Py_Decision  SQL_Decision
496            1             1
497            1             1
498            0             0
499            1             1
500            1             1
501            0             0
502            1             1
503            0             0
504            0             0
505            0             0
506            1             1
507            0             0
508            1             1
509            0             0
510            1             1
511            1             1
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
