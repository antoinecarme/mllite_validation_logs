READING_CSV FourClass_10_tiny ['data/tiny/FourClass_10_tiny.csv']
         X_0       X_1       X_2  ...       X_8       X_9  target
0  -1.050659  0.920640 -0.455125  ... -0.010797 -1.586949       2
1   1.869880 -2.312190 -1.153852  ... -1.648043  2.109906       3
2  -0.124049  0.768644 -1.040184  ...  1.247335 -1.413962       1
3   0.928858 -1.177375  0.542731  ...  0.485529  1.106564       0
4  -1.598324  1.482463  1.664691  ...  1.816533  0.637000       3
5  -1.750210  1.576099  0.286503  ... -2.267550  1.213184       0
6   0.476411  0.555172  2.004011  ...  0.821823  0.485550       3
7  -0.049861  1.019062 -0.239901  ...  0.642133  0.460004       1
8  -0.649409  1.030112  0.590313  ... -0.635514  0.255228       0
9   0.914030 -0.385815  2.120265  ... -0.152956 -0.427271       2
10 -1.979466  2.354344 -0.380747  ...  2.837784  0.027100       3
11 -1.368644  0.716127  0.307297  ...  1.172710  1.728196       1
12  1.184632 -1.691100 -0.781676  ... -1.114233  0.622367       3
13 -1.728087  2.393295  0.055107  ...  0.248741  1.048002       1
14 -0.128543  1.029262 -1.338428  ... -0.885099  0.307255       2
15  0.420960  0.508218  0.792587  ...  0.458008  1.340859       2

[16 rows x 11 columns]
MLLITE_MODEL_SET_OPTIONS RidgeClassifier {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { "alpha" : 0.0000001,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
('OPERATION_START', 'TRAINING')
[[-1.0506592   0.92064023 -0.4551253  -0.05012989 -0.19162714  0.5843286
   0.9430313   1.0213077  -0.01079692 -1.5869486 ]
 [ 1.86988    -2.3121896  -1.1538523   1.292078   -1.061729    2.0429258
   1.284271   -1.3353989  -1.6480426   2.1099062 ]
 [-0.1240493   0.7686444  -1.040184   -1.0419097  -0.5159428   1.4802165
  -1.7200696   0.34235197  1.2473352  -1.4139622 ]
 [ 0.9288579  -1.1773754   0.5427306   1.248167   -0.7323589   0.6922126
   0.362028   -0.05373104  0.48552942  1.1065644 ]
 [-1.5983242   1.4824632   1.6646907  -0.7911312  -0.3269162  -0.07355959
  -3.3526254  -1.3474813   1.8165325   0.6370003 ]] [2 3 1 0 3]
MLLITE_FIT_USING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 6 6
('OPERATION_END_ELAPSED', 0.014, 'TRAINING')
{ "alpha" : 0.0000001,   }
{ "alpha" : 0.0000001,   }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 10 },
	"classes" : [ 0, 1, 2, 3 ],
	"equations" : {
		"class_0" : {
			"intercept" : -0.442135,
			"coeffs" : [ -0.154429, 0.015149, 0.104946, 0.076330, -0.066677, -0.186832, 0.103110, -0.171904, -0.206620, -0.019599 ]
		},
		"class_1" : {
			"intercept" : -0.668150,
			"coeffs" : [ -0.011216, 0.077046, -0.145877, -0.018421, -0.100731, 0.115675, 0.008068, 0.421474, 0.201976, 0.154531 ]
		},
		"class_2" : {
			"intercept" : 0.737475,
			"coeffs" : [ 0.174692, -0.171246, -0.363852, 0.179531, 0.708414, -1.011025, 0.060251, 0.012783, 0.019254, -0.233526 ]
		},
		"class_3" : {
			"intercept" : -1.627377,
			"coeffs" : [ -0.008912, 0.079408, 0.404783, -0.237477, -0.541006, 1.082182, -0.171383, -0.262605, -0.014581, 0.098594 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_10_tiny_option_1.json'

RELOADING_MODEL_FROM_JSON_START ('FourClass_10_tiny', 'RidgeClassifier')
MLLITE_MODEL_SET_OPTIONS RidgeClassifier {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { "alpha" : 0.0000001,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
MLLITE_RELOADING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 10 },
	"classes" : [ 0, 1, 2, 3 ],
	"equations" : {
		"class_0" : {
			"intercept" : -0.442135,
			"coeffs" : [ -0.154429, 0.015149, 0.104946, 0.076330, -0.066677, -0.186832, 0.103110, -0.171904, -0.206620, -0.019599 ]
		},
		"class_1" : {
			"intercept" : -0.668150,
			"coeffs" : [ -0.011216, 0.077046, -0.145877, -0.018421, -0.100731, 0.115675, 0.008068, 0.421474, 0.201976, 0.154531 ]
		},
		"class_2" : {
			"intercept" : 0.737475,
			"coeffs" : [ 0.174692, -0.171246, -0.363852, 0.179531, 0.708414, -1.011025, 0.060251, 0.012783, 0.019254, -0.233526 ]
		},
		"class_3" : {
			"intercept" : -1.627377,
			"coeffs" : [ -0.008912, 0.079408, 0.404783, -0.237477, -0.541006, 1.082182, -0.171383, -0.262605, -0.014581, 0.098594 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1, 2, 3 ],
	"dataset" : 	{
		"dataset_features" : 10,
		"dataset_rows" : 16
	},
	"equations" : 	{
		"class_0" : 	{
			"coeffs" : [ -0.154429, 0.015149, 0.104946, 0.07633, -0.066677, -0.186832, 0.10311, -0.171904, -0.20662, -0.019599 ],
			"intercept" : -0.442135
		},
		"class_1" : 	{
			"coeffs" : [ -0.011216, 0.077046, -0.145877, -0.018421, -0.100731, 0.115675, 0.008068, 0.421474, 0.201976, 0.154531 ],
			"intercept" : -0.66815
		},
		"class_2" : 	{
			"coeffs" : [ 0.174692, -0.171246, -0.363852, 0.179531, 0.708414, -1.011025, 0.060251, 0.012783, 0.019254, -0.233526 ],
			"intercept" : 0.737475
		},
		"class_3" : 	{
			"coeffs" : [ -0.008912, 0.079408, 0.404783, -0.237477, -0.541006, 1.082182, -0.171383, -0.262605, -0.014581, 0.098594 ],
			"intercept" : -1.627377
		}
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_il8", "version" : "2024-W14" },
	"options" :  { "alpha" : 0.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
RELOADING_MODEL_FROM_JSON_END ('FourClass_10_tiny', 'RidgeClassifier')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0.2155 0.2681 0.4452 0.0711]
 [0.2099 0.1272 0.101  0.5618]
 [0.0943 0.3321 0.1519 0.4217]
 [0.223  0.2562 0.2976 0.2232]
 [0.2039 0.1445 0.1226 0.529 ]
 [0.5546 0.0937 0.1352 0.2165]
 [0.1094 0.2448 0.0749 0.5708]
 [0.1186 0.3469 0.3572 0.1773]
 [0.2941 0.1823 0.3567 0.167 ]
 [0.1806 0.0393 0.677  0.103 ]
 [0.0997 0.2659 0.1421 0.4923]
 [0.1794 0.3889 0.0806 0.351 ]
 [0.1838 0.1482 0.1475 0.5205]
 [0.1977 0.6184 0.1264 0.0576]
 [0.1399 0.2375 0.519  0.1036]
 [0.204  0.1886 0.4208 0.1866]]
(16, 4)
(16, 4) float32
MODEL_PERFS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': '{"alpha" : 0.0000001}', 'dataset': 'FourClass_10_tiny', 'size': 16, 'accuracy': 0.75, 'auc': 1.0}
WRITING_PERF_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_10_tiny_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': '{"alpha" : 0.0000001}', 'dataset': 'FourClass_10_tiny', 'training_time_in_sec': 0.014, 'prediction_time_in_sec': 0.0}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 0 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 1 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 2 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 3 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 4 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 5 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 6 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 7 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 8 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 9 10
{
   "Contributions" : {
      "X_0" : [ 0.005561, 0.000382, -0.005334, -0.000610 ],
      "X_1" : [ 0.000544, 0.002353, -0.006795, 0.003898 ],
      "X_2" : [ 0.003312, -0.000395, -0.001722, -0.001195 ],
      "X_3" : [ 0.001547, 0.001727, -0.003999, 0.000725 ],
      "X_4" : [ -0.001051, -0.001890, 0.018272, -0.015331 ],
      "X_5" : [ 0.018004, 0.017568, -0.015433, -0.020138 ],
      "X_6" : [ 0.001909, -0.001726, -0.000555, 0.000372 ],
      "X_7" : [ -0.007995, 0.021174, -0.002330, -0.010849 ],
      "X_8" : [ -0.008113, 0.005128, 0.002902, 0.000083 ],
      "X_9" : [ -0.001895, 0.000326, 0.002155, -0.000585 ]   
   },
   "Most_Contributive_Features_By_Class" : {
      "class_0" : [ 5, 8, 7, 0, 2, 6, 9, 3, 4, 1 ],
      "class_1" : [ 7, 5, 8, 1, 4, 3, 6, 2, 0, 9 ],
      "class_2" : [ 4, 5, 1, 0, 3, 8, 7, 9, 2, 6 ],
      "class_3" : [ 5, 4, 7, 1, 2, 3, 0, 9, 6, 8 ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_10_tiny_option_1_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_10_tiny_option_1_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('FourClass_10_tiny', 'RidgeClassifier', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "FourClass_10_tiny" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT t."index" AS "index",
   -0.442135 + -0.154429 * t."X_0" + 0.015149 * t."X_1" + 0.104946 * t."X_2" + 0.076330 * t."X_3" + -0.066677 * t."X_4" + -0.186832 * t."X_5" + 0.103110 * t."X_6" + -0.171904 * t."X_7" + -0.206620 * t."X_8" + -0.019599 * t."X_9" AS "Score_0",
   CAST(NULL AS FLOAT) AS "Proba_0",
   CAST(NULL AS FLOAT) AS "LogProba_0",
   -0.668150 + -0.011216 * t."X_0" + 0.077046 * t."X_1" + -0.145877 * t."X_2" + -0.018421 * t."X_3" + -0.100731 * t."X_4" + 0.115675 * t."X_5" + 0.008068 * t."X_6" + 0.421474 * t."X_
SQL_OUT_PUT_FIRST_LINES_END ('FourClass_10_tiny', 'RidgeClassifier', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('FourClass_10_tiny', 'RidgeClassifier', 'duckdb')
ore_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."Score_3" AS "Score_3",
  arg_max_cte."Proba_3" AS "Proba_3",
  CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN LN( arg_max_cte."Proba_3" ) ELSE -1.79769313486231e+308 END AS "LogProba_3",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('FourClass_10_tiny', 'RidgeClassifier', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 16 entries, 0 to 15
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     16 non-null     float32
 1   X_1     16 non-null     float32
 2   X_2     16 non-null     float32
 3   X_3     16 non-null     float32
 4   X_4     16 non-null     float32
 5   X_5     16 non-null     float32
 6   X_6     16 non-null     float32
 7   X_7     16 non-null     float32
 8   X_8     16 non-null     float32
 9   X_9     16 non-null     float32
dtypes: float32(10)
memory usage: 768.0 bytes
            X_0       X_1       X_2  ...       X_7       X_8       X_9
index                                ...                              
0     -1.050659  0.920640 -0.455125  ...  1.021308 -0.010797 -1.586949
1      1.869880 -2.312190 -1.153852  ... -1.335399 -1.648043  2.109906
2     -0.124049  0.768644 -1.040184  ...  0.342352  1.247335 -1.413962
3      0.928858 -1.177375  0.542731  ... -0.053731  0.485529  1.106564
4     -1.598324  1.482463  1.664691  ... -1.347481  1.816532  0.637000
5     -1.750210  1.576099  0.286503  ... -1.160993 -2.267550  1.213184
6      0.476411  0.555172  2.004011  ...  0.803645  0.821823  0.485550
7     -0.049861  1.019062 -0.239901  ...  0.600685  0.642133  0.460004
8     -0.649409  1.030112  0.590313  ... -0.064296 -0.635514  0.255228
9      0.914030 -0.385815  2.120265  ... -1.398672 -0.152956 -0.427271
10    -1.979466  2.354344 -0.380747  ... -1.103278  2.837784  0.027100
11    -1.368644  0.716127  0.307297  ...  0.215110  1.172710  1.728197
12     1.184632 -1.691100 -0.781676  ... -0.742383 -1.114233  0.622367
13    -1.728087  2.393295  0.055107  ...  2.200070  0.248741  1.048002
14    -0.128543  1.029262 -1.338428  ...  0.340163 -0.885099  0.307255
15     0.420960  0.508218  0.792587  ... -0.576551  0.458008  1.340859

[16 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 16 entries, 0 to 15
Data columns (total 15 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          16 non-null     int64  
 1   Score_0        16 non-null     float64
 2   Proba_0        16 non-null     float64
 3   LogProba_0     16 non-null     float64
 4   Score_1        16 non-null     float64
 5   Proba_1        16 non-null     float64
 6   LogProba_1     16 non-null     float64
 7   Score_2        16 non-null     float64
 8   Proba_2        16 non-null     float64
 9   LogProba_2     16 non-null     float64
 10  Score_3        16 non-null     float64
 11  Proba_3        16 non-null     float64
 12  LogProba_3     16 non-null     float64
 13  Decision       16 non-null     int64  
 14  DecisionProba  16 non-null     float64
dtypes: float64(13), int64(2)
memory usage: 2.0 KB
    index   Score_0   Proba_0  ...  LogProba_3  Decision  DecisionProba
0       0 -0.458918  0.215521  ...   -2.643115         2       0.445229
1       1 -0.438137  0.209927  ...   -0.576549         3       0.561834
2       2 -1.308397  0.094301  ...   -0.863438         3       0.421710
3       3 -0.607122  0.223014  ...   -1.499875         2       0.297594
4       4 -0.524861  0.203928  ...   -0.636812         3       0.528976
5       5  0.532682  0.554620  ...   -1.530384         0       0.554620
6       6 -1.019552  0.109429  ...   -0.560639         3       0.570844
7       7 -1.144752  0.118564  ...   -1.729690         2       0.357175
8       8 -0.287170  0.294072  ...   -1.789717         2       0.356652
9       9 -0.308883  0.180597  ...   -2.272578         2       0.677045
10     10 -1.232920  0.099698  ...   -0.708595         3       0.492335
11     11 -0.661290  0.179425  ...   -1.047032         1       0.388949
12     12 -0.651638  0.183773  ...   -0.652895         3       0.520537
13     13 -0.364883  0.197669  ...   -2.855011         1       0.618376
14     14 -0.885170  0.139857  ...   -2.267413         2       0.519018
15     15 -0.639003  0.204015  ...   -1.678886         2       0.420770

[16 rows x 15 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Score_3', 'Proba_3',
       'LogProba_3', 'Decision', 'DecisionProba'],
      dtype='object')
    index   Score_0  SQL_Proba_0  ...  Py_Proba_2  Py_Proba_3  Py_Decision
0       0 -0.458918     0.215521  ...    0.445228    0.071139            2
1       1 -0.438137     0.209927  ...    0.100992    0.561835            3
2       2 -1.308397     0.094301  ...    0.151927    0.421709            3
3       3 -0.607122     0.223014  ...    0.297594    0.223158            2
4       4 -0.524861     0.203928  ...    0.122617    0.528975            3
5       5  0.532682     0.554620  ...    0.135189    0.216452            0
6       6 -1.019552     0.109429  ...    0.074912    0.570844            3
7       7 -1.144752     0.118564  ...    0.357175    0.177339            2
8       8 -0.287170     0.294072  ...    0.356652    0.167007            2
9       9 -0.308883     0.180597  ...    0.677045    0.103046            2
10     10 -1.232920     0.099698  ...    0.142108    0.492334            3
11     11 -0.661290     0.179425  ...    0.080648    0.350978            1
12     12 -0.651638     0.183773  ...    0.147488    0.520537            3
13     13 -0.364883     0.197669  ...    0.126399    0.057555            1
14     14 -0.885170     0.139857  ...    0.519018    0.103580            2
15     15 -0.639003     0.204015  ...    0.420771    0.186581            2

[16 rows x 20 columns]
MLLITE_CLASS_SQL_ERROR ('FourClass_10_tiny', 'RidgeClassifier', 'duckdb') ('Py_Proba_0', 'SQL_Proba_0') 2.605911721166587e-07
    Py_Proba_0  SQL_Proba_0   SQL_Error_0
0     0.215521     0.215521  5.318405e-07
1     0.209927     0.209927 -4.116457e-07
2     0.094301     0.094301  1.474194e-07
3     0.223013     0.223014 -2.040582e-07
4     0.203928     0.203928  4.134028e-07
5     0.554621     0.554620  6.098176e-07
6     0.109429     0.109429  2.043232e-07
7     0.118564     0.118564  1.015539e-07
8     0.294073     0.294072  3.386888e-07
9     0.180597     0.180597 -9.836825e-08
10    0.099698     0.099698  2.263813e-07
11    0.179425     0.179425  7.277253e-08
12    0.183772     0.183773 -1.266575e-07
13    0.197670     0.197669  2.882064e-07
14    0.139857     0.139857  2.667549e-07
15    0.204015     0.204015 -1.275678e-07
MLLITE_CLASS_SQL_ERROR ('FourClass_10_tiny', 'RidgeClassifier', 'duckdb') ('Py_Proba_1', 'SQL_Proba_1') 2.3314805592568322e-07
    Py_Proba_1  SQL_Proba_1   SQL_Error_1
0     0.268111     0.268111 -2.973040e-07
1     0.127246     0.127246  2.291844e-07
2     0.332063     0.332062  2.803778e-07
3     0.256234     0.256234  3.257231e-07
4     0.144479     0.144479  3.340312e-07
5     0.093738     0.093738 -8.627380e-08
6     0.244815     0.244814  5.303835e-07
7     0.346922     0.346922  2.289122e-07
8     0.182268     0.182269 -9.267346e-08
9     0.039312     0.039312  9.003519e-10
10    0.265860     0.265860  7.835470e-07
11    0.388949     0.388949  3.319659e-08
12    0.148202     0.148202 -8.838468e-09
13    0.618376     0.618376 -1.076164e-07
14    0.237546     0.237546  3.308505e-08
15    0.188633     0.188633  3.583215e-07
MLLITE_CLASS_SQL_ERROR ('FourClass_10_tiny', 'RidgeClassifier', 'duckdb') ('Py_Proba_2', 'SQL_Proba_2') 2.4635314290356175e-07
    Py_Proba_2  SQL_Proba_2   SQL_Error_2
0     0.445228     0.445229 -3.679879e-07
1     0.100992     0.100992 -3.002831e-07
2     0.151927     0.151927 -7.656672e-08
3     0.297594     0.297594 -2.658014e-07
4     0.122617     0.122617  4.593651e-07
5     0.135189     0.135190 -1.745499e-07
6     0.074912     0.074912  9.035183e-08
7     0.357175     0.357175  7.428897e-08
8     0.356652     0.356652 -5.254515e-08
9     0.677045     0.677045  4.065745e-07
10    0.142108     0.142107  5.853625e-07
11    0.080648     0.080648 -2.766408e-08
12    0.147488     0.147488 -4.331178e-07
13    0.126399     0.126400 -1.109656e-07
14    0.519018     0.519018 -1.236746e-07
15    0.420771     0.420770  3.925511e-07
MLLITE_CLASS_SQL_ERROR ('FourClass_10_tiny', 'RidgeClassifier', 'duckdb') ('Py_Proba_3', 'SQL_Proba_3') 4.608258990148467e-07
    Py_Proba_3  SQL_Proba_3   SQL_Error_3
0     0.071139     0.071139  1.409020e-07
1     0.561835     0.561834  5.050961e-07
2     0.421709     0.421710 -2.990763e-07
3     0.223158     0.223158  2.037411e-07
4     0.528975     0.528976 -1.169546e-06
5     0.216452     0.216453 -3.787963e-07
6     0.570844     0.570844 -8.772126e-07
7     0.177339     0.177339 -3.749527e-07
8     0.167007     0.167007 -2.679760e-07
9     0.103046     0.103046 -3.649860e-07
10    0.492334     0.492335 -1.476081e-06
11    0.350978     0.350978 -6.340388e-08
12    0.520537     0.520537  5.388115e-07
13    0.057555     0.057555 -1.747028e-08
14    0.103580     0.103580 -1.016595e-07
15    0.186581     0.186582 -5.935025e-07
MLLITE_CLASS_SQL_EXECUTION_STATUS ('FourClass_10_tiny', 'RidgeClassifier', 'duckdb', 'Success')
    Py_Decision  SQL_Decision
0             2             2
1             3             3
2             3             3
3             2             2
4             3             3
5             0             0
6             3             3
7             2             2
8             2             2
9             2             2
10            3             3
11            1             1
12            3             3
13            1             1
14            2             2
15            2             2
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_10_tiny_option_1_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('FourClass_10_tiny', 'RidgeClassifier', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "FourClass_10_tiny" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT t."index" AS "index",
   -0.442135 + -0.154429 * t."X_0" + 0.015149 * t."X_1" + 0.104946 * t."X_2" + 0.076330 * t."X_3" + -0.066677 * t."X_4" + -0.186832 * t."X_5" + 0.103110 * t."X_6" + -0.171904 * t."X_7" + -0.206620 * t."X_8" + -0.019599 * t."X_9" AS "Score_0",
   CAST(NULL AS FLOAT) AS "Proba_0",
   CAST(NULL AS FLOAT) AS "LogProba_0",
   -0.668150 + -0.011216 * t."X_0" + 0.077046 * t."X_1" + -0.145877 * t."X_2" + -0.018421 * t."X_3" + -0.100731 * t."X_4" + 0.115675 * t."X_5" + 0.008068 * t."X_6" + 0.421474 * t."X_
SQL_OUT_PUT_FIRST_LINES_END ('FourClass_10_tiny', 'RidgeClassifier', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('FourClass_10_tiny', 'RidgeClassifier', 'sqlite')
ore_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."Score_3" AS "Score_3",
  arg_max_cte."Proba_3" AS "Proba_3",
  CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN LN( arg_max_cte."Proba_3" ) ELSE -1.79769313486231e+308 END AS "LogProba_3",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('FourClass_10_tiny', 'RidgeClassifier', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 16 entries, 0 to 15
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     16 non-null     float32
 1   X_1     16 non-null     float32
 2   X_2     16 non-null     float32
 3   X_3     16 non-null     float32
 4   X_4     16 non-null     float32
 5   X_5     16 non-null     float32
 6   X_6     16 non-null     float32
 7   X_7     16 non-null     float32
 8   X_8     16 non-null     float32
 9   X_9     16 non-null     float32
dtypes: float32(10)
memory usage: 768.0 bytes
            X_0       X_1       X_2  ...       X_7       X_8       X_9
index                                ...                              
0     -1.050659  0.920640 -0.455125  ...  1.021308 -0.010797 -1.586949
1      1.869880 -2.312190 -1.153852  ... -1.335399 -1.648043  2.109906
2     -0.124049  0.768644 -1.040184  ...  0.342352  1.247335 -1.413962
3      0.928858 -1.177375  0.542731  ... -0.053731  0.485529  1.106564
4     -1.598324  1.482463  1.664691  ... -1.347481  1.816532  0.637000
5     -1.750210  1.576099  0.286503  ... -1.160993 -2.267550  1.213184
6      0.476411  0.555172  2.004011  ...  0.803645  0.821823  0.485550
7     -0.049861  1.019062 -0.239901  ...  0.600685  0.642133  0.460004
8     -0.649409  1.030112  0.590313  ... -0.064296 -0.635514  0.255228
9      0.914030 -0.385815  2.120265  ... -1.398672 -0.152956 -0.427271
10    -1.979466  2.354344 -0.380747  ... -1.103278  2.837784  0.027100
11    -1.368644  0.716127  0.307297  ...  0.215110  1.172710  1.728197
12     1.184632 -1.691100 -0.781676  ... -0.742383 -1.114233  0.622367
13    -1.728087  2.393295  0.055107  ...  2.200070  0.248741  1.048002
14    -0.128543  1.029262 -1.338428  ...  0.340163 -0.885099  0.307255
15     0.420960  0.508218  0.792587  ... -0.576551  0.458008  1.340859

[16 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 16 entries, 0 to 15
Data columns (total 15 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          16 non-null     int64  
 1   Score_0        16 non-null     float64
 2   Proba_0        16 non-null     float64
 3   LogProba_0     16 non-null     float64
 4   Score_1        16 non-null     float64
 5   Proba_1        16 non-null     float64
 6   LogProba_1     16 non-null     float64
 7   Score_2        16 non-null     float64
 8   Proba_2        16 non-null     float64
 9   LogProba_2     16 non-null     float64
 10  Score_3        16 non-null     float64
 11  Proba_3        16 non-null     float64
 12  LogProba_3     16 non-null     float64
 13  Decision       16 non-null     int64  
 14  DecisionProba  16 non-null     float64
dtypes: float64(13), int64(2)
memory usage: 2.0 KB
    index   Score_0   Proba_0  ...  LogProba_3  Decision  DecisionProba
0       0 -0.458918  0.215521  ...   -2.643115         2       0.445229
1       1 -0.438137  0.209928  ...   -0.576549         3       0.561834
2       2 -1.308397  0.094301  ...   -0.863438         3       0.421710
3       3 -0.607122  0.223014  ...   -1.499875         2       0.297594
4       4 -0.524861  0.203928  ...   -0.636812         3       0.528976
5       5  0.532682  0.554620  ...   -1.530384         0       0.554620
6       6 -1.019552  0.109429  ...   -0.560639         3       0.570844
7       7 -1.144752  0.118564  ...   -1.729690         2       0.357175
8       8 -0.287170  0.294072  ...   -1.789717         2       0.356652
9       9 -0.308883  0.180597  ...   -2.272578         2       0.677045
10     10 -1.232920  0.099698  ...   -0.708595         3       0.492335
11     11 -0.661290  0.179425  ...   -1.047032         1       0.388949
12     12 -0.651638  0.183773  ...   -0.652895         3       0.520537
13     13 -0.364883  0.197669  ...   -2.855011         1       0.618376
14     14 -0.885170  0.139857  ...   -2.267413         2       0.519018
15     15 -0.639003  0.204015  ...   -1.678886         2       0.420770

[16 rows x 15 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Score_3', 'Proba_3',
       'LogProba_3', 'Decision', 'DecisionProba'],
      dtype='object')
    index   Score_0  SQL_Proba_0  ...  Py_Proba_2  Py_Proba_3  Py_Decision
0       0 -0.458918     0.215521  ...    0.445228    0.071139            2
1       1 -0.438137     0.209928  ...    0.100992    0.561835            3
2       2 -1.308397     0.094301  ...    0.151927    0.421709            3
3       3 -0.607122     0.223014  ...    0.297594    0.223158            2
4       4 -0.524861     0.203928  ...    0.122617    0.528975            3
5       5  0.532682     0.554620  ...    0.135189    0.216452            0
6       6 -1.019552     0.109429  ...    0.074912    0.570844            3
7       7 -1.144752     0.118564  ...    0.357175    0.177339            2
8       8 -0.287170     0.294072  ...    0.356652    0.167007            2
9       9 -0.308883     0.180597  ...    0.677045    0.103046            2
10     10 -1.232920     0.099698  ...    0.142108    0.492334            3
11     11 -0.661290     0.179425  ...    0.080648    0.350978            1
12     12 -0.651638     0.183773  ...    0.147488    0.520537            3
13     13 -0.364883     0.197669  ...    0.126399    0.057555            1
14     14 -0.885170     0.139857  ...    0.519018    0.103580            2
15     15 -0.639003     0.204015  ...    0.420771    0.186581            2

[16 rows x 20 columns]
MLLITE_CLASS_SQL_ERROR ('FourClass_10_tiny', 'RidgeClassifier', 'sqlite') ('Py_Proba_0', 'SQL_Proba_0') 2.66323970400488e-07
    Py_Proba_0  SQL_Proba_0   SQL_Error_0
0     0.215521     0.215521  5.307594e-07
1     0.209927     0.209928 -4.530751e-07
2     0.094301     0.094301  1.324633e-07
3     0.223013     0.223014 -2.053260e-07
4     0.203928     0.203928  4.132426e-07
5     0.554621     0.554620  6.163673e-07
6     0.109429     0.109429  2.216192e-07
7     0.118564     0.118564  1.067345e-07
8     0.294073     0.294072  3.513641e-07
9     0.180597     0.180597 -1.054698e-07
10    0.099698     0.099698  2.266313e-07
11    0.179425     0.179425  7.080264e-08
12    0.183772     0.183773 -1.643615e-07
13    0.197670     0.197669  2.897273e-07
14    0.139857     0.139857  2.428951e-07
15    0.204015     0.204015 -1.303445e-07
MLLITE_CLASS_SQL_ERROR ('FourClass_10_tiny', 'RidgeClassifier', 'sqlite') ('Py_Proba_1', 'SQL_Proba_1') 2.2579859626633766e-07
    Py_Proba_1  SQL_Proba_1   SQL_Error_1
0     0.268111     0.268111 -3.034853e-07
1     0.127246     0.127246  2.072977e-07
2     0.332063     0.332062  2.659281e-07
3     0.256234     0.256234  3.280073e-07
4     0.144479     0.144479  3.353334e-07
5     0.093738     0.093738 -7.850973e-08
6     0.244815     0.244814  4.992535e-07
7     0.346922     0.346922  2.136557e-07
8     0.182268     0.182269 -8.491650e-08
9     0.039312     0.039312  3.178959e-09
10    0.265860     0.265860  7.855984e-07
11    0.388949     0.388949  1.563325e-08
12    0.148202     0.148202 -2.374952e-08
13    0.618376     0.618376 -7.362764e-08
14    0.237546     0.237546  2.245119e-08
15    0.188633     0.188633  3.721514e-07
MLLITE_CLASS_SQL_ERROR ('FourClass_10_tiny', 'RidgeClassifier', 'sqlite') ('Py_Proba_2', 'SQL_Proba_2') 2.4737420704565305e-07
    Py_Proba_2  SQL_Proba_2   SQL_Error_2
0     0.445228     0.445229 -3.710468e-07
1     0.100992     0.100992 -3.033614e-07
2     0.151927     0.151927 -5.300854e-08
3     0.297594     0.297594 -2.742163e-07
4     0.122617     0.122617  4.664998e-07
5     0.135189     0.135190 -1.847646e-07
6     0.074912     0.074912  9.548153e-08
7     0.357175     0.357175  8.206104e-08
8     0.356652     0.356652 -6.496353e-08
9     0.677045     0.677045  4.153023e-07
10    0.142108     0.142107  5.796829e-07
11    0.080648     0.080648 -2.329535e-08
12    0.147488     0.147488 -4.362212e-07
13    0.126399     0.126400 -1.360232e-07
14    0.519018     0.519018 -8.374765e-08
15    0.420771     0.420770  3.883112e-07
MLLITE_CLASS_SQL_ERROR ('FourClass_10_tiny', 'RidgeClassifier', 'sqlite') ('Py_Proba_3', 'SQL_Proba_3') 4.702901290408283e-07
    Py_Proba_3  SQL_Proba_3   SQL_Error_3
0     0.071139     0.071139  1.512232e-07
1     0.561835     0.561834  5.714906e-07
2     0.421709     0.421710 -2.932287e-07
3     0.223158     0.223158  2.111397e-07
4     0.528975     0.528976 -1.177823e-06
5     0.216452     0.216453 -3.828953e-07
6     0.570844     0.570844 -8.685083e-07
7     0.177339     0.177339 -3.726489e-07
8     0.167007     0.167007 -2.759899e-07
9     0.103046     0.103046 -3.688908e-07
10    0.492334     0.492335 -1.472703e-06
11    0.350978     0.350978 -4.823937e-08
12    0.520537     0.520537  5.945298e-07
13    0.057555     0.057555 -2.792244e-08
14    0.103580     0.103580 -1.070928e-07
15    0.186581     0.186582 -6.003159e-07
MLLITE_CLASS_SQL_EXECUTION_STATUS ('FourClass_10_tiny', 'RidgeClassifier', 'sqlite', 'Success')
    Py_Decision  SQL_Decision
0             2             2
1             3             3
2             3             3
3             2             2
4             3             3
5             0             0
6             3             3
7             2             2
8             2             2
9             2             2
10            3             3
11            1             1
12            3             3
13            1             1
14            2             2
15            2             2
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
