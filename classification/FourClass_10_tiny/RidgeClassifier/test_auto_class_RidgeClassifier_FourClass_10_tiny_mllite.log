READING_CSV FourClass_10_tiny ['data/tiny/FourClass_10_tiny.csv']
         X_0       X_1       X_2  ...       X_8       X_9  target
0  -1.050659  0.920640 -0.455125  ... -0.010797 -1.586949       2
1   1.869880 -2.312190 -1.153852  ... -1.648043  2.109906       3
2  -0.124049  0.768644 -1.040184  ...  1.247335 -1.413962       1
3   0.928858 -1.177375  0.542731  ...  0.485529  1.106564       0
4  -1.598324  1.482463  1.664691  ...  1.816533  0.637000       3
5  -1.750210  1.576099  0.286503  ... -2.267550  1.213184       0
6   0.476411  0.555172  2.004011  ...  0.821823  0.485550       3
7  -0.049861  1.019062 -0.239901  ...  0.642133  0.460004       1
8  -0.649409  1.030112  0.590313  ... -0.635514  0.255228       0
9   0.914030 -0.385815  2.120265  ... -0.152956 -0.427271       2
10 -1.979466  2.354344 -0.380747  ...  2.837784  0.027100       3
11 -1.368644  0.716127  0.307297  ...  1.172710  1.728196       1
12  1.184632 -1.691100 -0.781676  ... -1.114233  0.622367       3
13 -1.728087  2.393295  0.055107  ...  0.248741  1.048002       1
14 -0.128543  1.029262 -1.338428  ... -0.885099  0.307255       2
15  0.420960  0.508218  0.792587  ...  0.458008  1.340859       2

[16 rows x 11 columns]
MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
('OPERATION_START', 'TRAINING')
[[-1.0506592   0.92064023 -0.4551253  -0.05012989 -0.19162714  0.5843286
   0.9430313   1.0213077  -0.01079692 -1.5869486 ]
 [ 1.86988    -2.3121896  -1.1538523   1.292078   -1.061729    2.0429258
   1.284271   -1.3353989  -1.6480426   2.1099062 ]
 [-0.1240493   0.7686444  -1.040184   -1.0419097  -0.5159428   1.4802165
  -1.7200696   0.34235197  1.2473352  -1.4139622 ]
 [ 0.9288579  -1.1773754   0.5427306   1.248167   -0.7323589   0.6922126
   0.362028   -0.05373104  0.48552942  1.1065644 ]
 [-1.5983242   1.4824632   1.6646907  -0.7911312  -0.3269162  -0.07355959
  -3.3526254  -1.3474813   1.8165325   0.6370003 ]] [2 3 1 0 3]
MLLITE_FIT_USING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 6 6
('OPERATION_END_ELAPSED', 0.008, 'TRAINING')
{ ,   }
{ ,   }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 10 },
	"classes" : [ 0, 1, 2, 3 ],
	"equations" : {
		"class_0" : {
			"intercept" : -0.473434,
			"coeffs" : [ -0.134872, 0.014711, 0.100101, 0.060697, -0.076689, -0.166755, 0.093890, -0.155452, -0.195004, -0.009150 ]
		},
		"class_1" : {
			"intercept" : -0.652669,
			"coeffs" : [ -0.019153, 0.075403, -0.137828, -0.013920, -0.104139, 0.107722, 0.009723, 0.393580, 0.186228, 0.132176 ]
		},
		"class_2" : {
			"intercept" : 0.412964,
			"coeffs" : [ 0.157958, -0.125283, -0.228915, 0.078264, 0.560754, -0.731915, 0.044269, 0.008193, -0.030522, -0.233614 ]
		},
		"class_3" : {
			"intercept" : -1.286860,
			"coeffs" : [ -0.003933, 0.035169, 0.266642, -0.125041, -0.379927, 0.790948, -0.147882, -0.246321, 0.039298, 0.110588 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_10_tiny.json'

RELOADING_MODEL_FROM_JSON_START ('FourClass_10_tiny', 'RidgeClassifier')
MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
MLLITE_RELOADING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 10 },
	"classes" : [ 0, 1, 2, 3 ],
	"equations" : {
		"class_0" : {
			"intercept" : -0.473434,
			"coeffs" : [ -0.134872, 0.014711, 0.100101, 0.060697, -0.076689, -0.166755, 0.093890, -0.155452, -0.195004, -0.009150 ]
		},
		"class_1" : {
			"intercept" : -0.652669,
			"coeffs" : [ -0.019153, 0.075403, -0.137828, -0.013920, -0.104139, 0.107722, 0.009723, 0.393580, 0.186228, 0.132176 ]
		},
		"class_2" : {
			"intercept" : 0.412964,
			"coeffs" : [ 0.157958, -0.125283, -0.228915, 0.078264, 0.560754, -0.731915, 0.044269, 0.008193, -0.030522, -0.233614 ]
		},
		"class_3" : {
			"intercept" : -1.286860,
			"coeffs" : [ -0.003933, 0.035169, 0.266642, -0.125041, -0.379927, 0.790948, -0.147882, -0.246321, 0.039298, 0.110588 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1, 2, 3 ],
	"dataset" : 	{
		"dataset_features" : 10,
		"dataset_rows" : 16
	},
	"equations" : 	{
		"class_0" : 	{
			"coeffs" : [ -0.134872, 0.014711, 0.100101, 0.060697, -0.076689, -0.166755, 0.09389, -0.155452, -0.195004, -0.00915 ],
			"intercept" : -0.473434
		},
		"class_1" : 	{
			"coeffs" : [ -0.019153, 0.075403, -0.137828, -0.01392, -0.104139, 0.107722, 0.009723, 0.39358, 0.186228, 0.132176 ],
			"intercept" : -0.652669
		},
		"class_2" : 	{
			"coeffs" : [ 0.157958, -0.125283, -0.228915, 0.078264, 0.560754, -0.731915, 0.044269, 0.008193, -0.030522, -0.233614 ],
			"intercept" : 0.412964
		},
		"class_3" : 	{
			"coeffs" : [ -0.003933, 0.035169, 0.266642, -0.125041, -0.379927, 0.790948, -0.147882, -0.246321, 0.039298, 0.110588 ],
			"intercept" : -1.28686
		}
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_il8", "version" : "2024-W14" },
	"options" :  { "alpha" : 1.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
RELOADING_MODEL_FROM_JSON_END ('FourClass_10_tiny', 'RidgeClassifier')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0.2174 0.2892 0.4045 0.0889]
 [0.2184 0.1316 0.1086 0.5414]
 [0.1028 0.3437 0.1808 0.3727]
 [0.224  0.2541 0.2508 0.2712]
 [0.2062 0.1531 0.136  0.5047]
 [0.5373 0.1045 0.1623 0.1959]
 [0.1345 0.2767 0.1243 0.4644]
 [0.1255 0.3386 0.3437 0.1921]
 [0.2877 0.1873 0.355  0.17  ]
 [0.1929 0.0467 0.629  0.1314]
 [0.1032 0.2658 0.1432 0.4878]
 [0.1789 0.3757 0.0831 0.3624]
 [0.189  0.1552 0.1657 0.4902]
 [0.2053 0.6038 0.1264 0.0645]
 [0.1484 0.2433 0.4874 0.1209]
 [0.2146 0.1925 0.3748 0.2181]]
(16, 4)
(16, 4) float32
MODEL_PERFS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'FourClass_10_tiny', 'size': 16, 'accuracy': 0.75, 'auc': 1.0}
WRITING_PERF_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_10_tiny.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'FourClass_10_tiny', 'training_time_in_sec': 0.008, 'prediction_time_in_sec': 0.0}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 0 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 1 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 2 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 3 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 4 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 5 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 6 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 7 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 8 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 9 10
{
   "Contributions" : {
      "X_0" : [ 0.005668, 0.000786, -0.005609, -0.000845 ],
      "X_1" : [ 0.000830, 0.003291, -0.005946, 0.001825 ],
      "X_2" : [ 0.002213, -0.001320, -0.001783, 0.000891 ],
      "X_3" : [ -0.000194, 0.000630, -0.001852, 0.001416 ],
      "X_4" : [ -0.001940, -0.003001, 0.016607, -0.011666 ],
      "X_5" : [ 0.010357, 0.010081, -0.007139, -0.013299 ],
      "X_6" : [ 0.001159, -0.002019, -0.000401, 0.001261 ],
      "X_7" : [ -0.008137, 0.021609, -0.002024, -0.011448 ],
      "X_8" : [ -0.007998, 0.004861, 0.001295, 0.001842 ],
      "X_9" : [ -0.001490, 0.000329, 0.002032, -0.000872 ]   
   },
   "Most_Contributive_Features_By_Class" : {
      "class_0" : [ 5, 7, 8, 0, 2, 4, 9, 6, 1, 3 ],
      "class_1" : [ 7, 5, 8, 1, 4, 6, 2, 0, 3, 9 ],
      "class_2" : [ 4, 5, 1, 0, 9, 7, 3, 2, 8, 6 ],
      "class_3" : [ 5, 4, 7, 8, 1, 3, 6, 2, 9, 0 ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_10_tiny_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_10_tiny_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('FourClass_10_tiny', 'RidgeClassifier', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "FourClass_10_tiny" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT t."index" AS "index",
   -0.473434 + -0.134872 * t."X_0" + 0.014711 * t."X_1" + 0.100101 * t."X_2" + 0.060697 * t."X_3" + -0.076689 * t."X_4" + -0.166755 * t."X_5" + 0.093890 * t."X_6" + -0.155452 * t."X_7" + -0.195004 * t."X_8" + -0.009150 * t."X_9" AS "Score_0",
   CAST(NULL AS FLOAT) AS "Proba_0",
   CAST(NULL AS FLOAT) AS "LogProba_0",
   -0.652669 + -0.019153 * t."X_0" + 0.075403 * t."X_1" + -0.137828 * t."X_2" + -0.013920 * t."X_3" + -0.104139 * t."X_4" + 0.107722 * t."X_5" + 0.009723 * t."X_6" + 0.393580 * t."X_
SQL_OUT_PUT_FIRST_LINES_END ('FourClass_10_tiny', 'RidgeClassifier', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('FourClass_10_tiny', 'RidgeClassifier', 'duckdb')
ore_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."Score_3" AS "Score_3",
  arg_max_cte."Proba_3" AS "Proba_3",
  CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN LN( arg_max_cte."Proba_3" ) ELSE -1.79769313486231e+308 END AS "LogProba_3",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('FourClass_10_tiny', 'RidgeClassifier', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 16 entries, 0 to 15
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     16 non-null     float32
 1   X_1     16 non-null     float32
 2   X_2     16 non-null     float32
 3   X_3     16 non-null     float32
 4   X_4     16 non-null     float32
 5   X_5     16 non-null     float32
 6   X_6     16 non-null     float32
 7   X_7     16 non-null     float32
 8   X_8     16 non-null     float32
 9   X_9     16 non-null     float32
dtypes: float32(10)
memory usage: 768.0 bytes
            X_0       X_1       X_2  ...       X_7       X_8       X_9
index                                ...                              
0     -1.050659  0.920640 -0.455125  ...  1.021308 -0.010797 -1.586949
1      1.869880 -2.312190 -1.153852  ... -1.335399 -1.648043  2.109906
2     -0.124049  0.768644 -1.040184  ...  0.342352  1.247335 -1.413962
3      0.928858 -1.177375  0.542731  ... -0.053731  0.485529  1.106564
4     -1.598324  1.482463  1.664691  ... -1.347481  1.816532  0.637000
5     -1.750210  1.576099  0.286503  ... -1.160993 -2.267550  1.213184
6      0.476411  0.555172  2.004011  ...  0.803645  0.821823  0.485550
7     -0.049861  1.019062 -0.239901  ...  0.600685  0.642133  0.460004
8     -0.649409  1.030112  0.590313  ... -0.064296 -0.635514  0.255228
9      0.914030 -0.385815  2.120265  ... -1.398672 -0.152956 -0.427271
10    -1.979466  2.354344 -0.380747  ... -1.103278  2.837784  0.027100
11    -1.368644  0.716127  0.307297  ...  0.215110  1.172710  1.728197
12     1.184632 -1.691100 -0.781676  ... -0.742383 -1.114233  0.622367
13    -1.728087  2.393295  0.055107  ...  2.200070  0.248741  1.048002
14    -0.128543  1.029262 -1.338428  ...  0.340163 -0.885099  0.307255
15     0.420960  0.508218  0.792587  ... -0.576551  0.458008  1.340859

[16 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 16 entries, 0 to 15
Data columns (total 15 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          16 non-null     int64  
 1   Score_0        16 non-null     float64
 2   Proba_0        16 non-null     float64
 3   LogProba_0     16 non-null     float64
 4   Score_1        16 non-null     float64
 5   Proba_1        16 non-null     float64
 6   LogProba_1     16 non-null     float64
 7   Score_2        16 non-null     float64
 8   Proba_2        16 non-null     float64
 9   LogProba_2     16 non-null     float64
 10  Score_3        16 non-null     float64
 11  Proba_3        16 non-null     float64
 12  LogProba_3     16 non-null     float64
 13  Decision       16 non-null     int64  
 14  DecisionProba  16 non-null     float64
dtypes: float64(13), int64(2)
memory usage: 2.0 KB
    index   Score_0   Proba_0  ...  LogProba_3  Decision  DecisionProba
0       0 -0.503128  0.217365  ...   -2.420457         2       0.404509
1       1 -0.425725  0.218398  ...   -0.613660         3       0.541366
2       2 -1.265041  0.102784  ...   -0.987020         3       0.372686
3       3 -0.607671  0.223956  ...   -1.305016         3       0.271168
4       4 -0.545470  0.206159  ...   -0.683718         3       0.504737
5       5  0.460965  0.537337  ...   -1.630291         0       0.537337
6       6 -0.970310  0.134532  ...   -0.766941         3       0.464432
7       7 -1.106412  0.125515  ...   -1.649604         2       0.343723
8       8 -0.313861  0.287660  ...   -1.771799         2       0.355031
9       9 -0.344923  0.192931  ...   -2.029845         2       0.628969
10     10 -1.206626  0.103210  ...   -0.717788         3       0.487830
11     11 -0.670375  0.178863  ...   -1.015074         1       0.375668
12     12 -0.656125  0.188975  ...   -0.712993         3       0.490175
13     13 -0.359233  0.205275  ...   -2.740772         1       0.603757
14     14 -0.869633  0.148407  ...   -2.112788         2       0.487358
15     15 -0.616419  0.214571  ...   -1.522796         2       0.374793

[16 rows x 15 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Score_3', 'Proba_3',
       'LogProba_3', 'Decision', 'DecisionProba'],
      dtype='object')
    index   Score_0  SQL_Proba_0  ...  Py_Proba_2  Py_Proba_3  Py_Decision
0       0 -0.503128     0.217365  ...    0.404509    0.088881            2
1       1 -0.425725     0.218398  ...    0.108636    0.541366            3
2       2 -1.265041     0.102784  ...    0.180821    0.372685            3
3       3 -0.607671     0.223956  ...    0.250811    0.271168            3
4       4 -0.545470     0.206159  ...    0.136006    0.504737            3
5       5  0.460965     0.537337  ...    0.162294    0.195873            0
6       6 -0.970310     0.134532  ...    0.124314    0.464432            3
7       7 -1.106412     0.125515  ...    0.343723    0.192126            2
8       8 -0.313861     0.287660  ...    0.355031    0.170027            2
9       9 -0.344923     0.192931  ...    0.628968    0.131356            2
10     10 -1.206626     0.103210  ...    0.143205    0.487830            3
11     11 -0.670375     0.178863  ...    0.083094    0.362376            1
12     12 -0.656125     0.188975  ...    0.165693    0.490175            3
13     13 -0.359233     0.205275  ...    0.126448    0.064520            1
14     14 -0.869633     0.148407  ...    0.487358    0.120900            2
15     15 -0.616419     0.214571  ...    0.374794    0.218101            2

[16 rows x 20 columns]
MLLITE_CLASS_SQL_ERROR ('FourClass_10_tiny', 'RidgeClassifier', 'duckdb') ('Py_Proba_0', 'SQL_Proba_0') 1.4768949912775248e-07
    Py_Proba_0  SQL_Proba_0   SQL_Error_0
0     0.217365     0.217365 -3.846089e-09
1     0.218398     0.218398 -3.316309e-07
2     0.102784     0.102784  9.796517e-08
3     0.223955     0.223956 -1.179643e-07
4     0.206158     0.206159 -1.307041e-07
5     0.537337     0.537337 -6.811107e-07
6     0.134532     0.134532  2.756008e-08
7     0.125515     0.125515 -1.145972e-08
8     0.287659     0.287660 -1.703834e-07
9     0.192931     0.192931 -8.161229e-09
10    0.103211     0.103210  4.127741e-08
11    0.178862     0.178863 -1.615478e-07
12    0.188974     0.188975 -1.361644e-07
13    0.205275     0.205275 -1.931697e-07
14    0.148407     0.148407 -1.089641e-07
15    0.214571     0.214571 -1.411229e-07
MLLITE_CLASS_SQL_ERROR ('FourClass_10_tiny', 'RidgeClassifier', 'duckdb') ('Py_Proba_1', 'SQL_Proba_1') 1.373796439585115e-07
    Py_Proba_1  SQL_Proba_1   SQL_Error_1
0     0.289245     0.289245 -1.375866e-07
1     0.131600     0.131600  9.730147e-08
2     0.343710     0.343710  2.448882e-07
3     0.254065     0.254065  8.277494e-08
4     0.153098     0.153098  5.951230e-08
5     0.104496     0.104496  1.185863e-07
6     0.276722     0.276722 -1.869531e-07
7     0.338637     0.338637 -1.919270e-07
8     0.187283     0.187283 -8.907499e-08
9     0.046745     0.046745 -1.568855e-08
10    0.265755     0.265755  4.036791e-07
11    0.375668     0.375668  4.711277e-08
12    0.155157     0.155158 -5.756720e-08
13    0.603757     0.603757  1.080831e-07
14    0.243334     0.243335 -2.463892e-07
15    0.192534     0.192534  1.109494e-07
MLLITE_CLASS_SQL_ERROR ('FourClass_10_tiny', 'RidgeClassifier', 'duckdb') ('Py_Proba_2', 'SQL_Proba_2') 1.7318720719507186e-07
    Py_Proba_2  SQL_Proba_2   SQL_Error_2
0     0.404509     0.404509  2.342921e-07
1     0.108636     0.108636 -5.504319e-08
2     0.180821     0.180821  2.278170e-07
3     0.250811     0.250811 -2.020573e-08
4     0.136006     0.136006  8.198065e-09
5     0.162294     0.162294  1.985252e-07
6     0.124314     0.124314  1.322516e-07
7     0.343723     0.343723  4.406147e-07
8     0.355031     0.355031  3.007458e-07
9     0.628968     0.628969 -9.282709e-08
10    0.143205     0.143205  2.053889e-07
11    0.083094     0.083094  4.654112e-08
12    0.165693     0.165693 -4.824389e-09
13    0.126448     0.126448  1.594184e-07
14    0.487358     0.487358  4.782266e-07
15    0.374794     0.374793  1.660756e-07
MLLITE_CLASS_SQL_ERROR ('FourClass_10_tiny', 'RidgeClassifier', 'duckdb') ('Py_Proba_3', 'SQL_Proba_3') 1.9394890226915457e-07
    Py_Proba_3  SQL_Proba_3   SQL_Error_3
0     0.088881     0.088881 -8.540882e-08
1     0.541366     0.541366  3.340761e-07
2     0.372685     0.372686 -5.706704e-07
3     0.271168     0.271168  5.539505e-08
4     0.504737     0.504737  3.319137e-08
5     0.195873     0.195873  4.012520e-07
6     0.464432     0.464432  6.439437e-08
7     0.192126     0.192126 -2.223268e-07
8     0.170027     0.170027  1.831716e-08
9     0.131356     0.131356  9.059984e-08
10    0.487830     0.487830 -5.683890e-07
11    0.362376     0.362376  7.534451e-08
12    0.490175     0.490175  2.134572e-07
13    0.064520     0.064520 -6.688111e-08
14    0.120900     0.120900 -1.675767e-07
15    0.218101     0.218101 -1.359020e-07
MLLITE_CLASS_SQL_EXECUTION_STATUS ('FourClass_10_tiny', 'RidgeClassifier', 'duckdb', 'Success')
    Py_Decision  SQL_Decision
0             2             2
1             3             3
2             3             3
3             3             3
4             3             3
5             0             0
6             3             3
7             2             2
8             2             2
9             2             2
10            3             3
11            1             1
12            3             3
13            1             1
14            2             2
15            2             2
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_10_tiny_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('FourClass_10_tiny', 'RidgeClassifier', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "FourClass_10_tiny" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT t."index" AS "index",
   -0.473434 + -0.134872 * t."X_0" + 0.014711 * t."X_1" + 0.100101 * t."X_2" + 0.060697 * t."X_3" + -0.076689 * t."X_4" + -0.166755 * t."X_5" + 0.093890 * t."X_6" + -0.155452 * t."X_7" + -0.195004 * t."X_8" + -0.009150 * t."X_9" AS "Score_0",
   CAST(NULL AS FLOAT) AS "Proba_0",
   CAST(NULL AS FLOAT) AS "LogProba_0",
   -0.652669 + -0.019153 * t."X_0" + 0.075403 * t."X_1" + -0.137828 * t."X_2" + -0.013920 * t."X_3" + -0.104139 * t."X_4" + 0.107722 * t."X_5" + 0.009723 * t."X_6" + 0.393580 * t."X_
SQL_OUT_PUT_FIRST_LINES_END ('FourClass_10_tiny', 'RidgeClassifier', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('FourClass_10_tiny', 'RidgeClassifier', 'sqlite')
ore_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."Score_3" AS "Score_3",
  arg_max_cte."Proba_3" AS "Proba_3",
  CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN LN( arg_max_cte."Proba_3" ) ELSE -1.79769313486231e+308 END AS "LogProba_3",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('FourClass_10_tiny', 'RidgeClassifier', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 16 entries, 0 to 15
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     16 non-null     float32
 1   X_1     16 non-null     float32
 2   X_2     16 non-null     float32
 3   X_3     16 non-null     float32
 4   X_4     16 non-null     float32
 5   X_5     16 non-null     float32
 6   X_6     16 non-null     float32
 7   X_7     16 non-null     float32
 8   X_8     16 non-null     float32
 9   X_9     16 non-null     float32
dtypes: float32(10)
memory usage: 768.0 bytes
            X_0       X_1       X_2  ...       X_7       X_8       X_9
index                                ...                              
0     -1.050659  0.920640 -0.455125  ...  1.021308 -0.010797 -1.586949
1      1.869880 -2.312190 -1.153852  ... -1.335399 -1.648043  2.109906
2     -0.124049  0.768644 -1.040184  ...  0.342352  1.247335 -1.413962
3      0.928858 -1.177375  0.542731  ... -0.053731  0.485529  1.106564
4     -1.598324  1.482463  1.664691  ... -1.347481  1.816532  0.637000
5     -1.750210  1.576099  0.286503  ... -1.160993 -2.267550  1.213184
6      0.476411  0.555172  2.004011  ...  0.803645  0.821823  0.485550
7     -0.049861  1.019062 -0.239901  ...  0.600685  0.642133  0.460004
8     -0.649409  1.030112  0.590313  ... -0.064296 -0.635514  0.255228
9      0.914030 -0.385815  2.120265  ... -1.398672 -0.152956 -0.427271
10    -1.979466  2.354344 -0.380747  ... -1.103278  2.837784  0.027100
11    -1.368644  0.716127  0.307297  ...  0.215110  1.172710  1.728197
12     1.184632 -1.691100 -0.781676  ... -0.742383 -1.114233  0.622367
13    -1.728087  2.393295  0.055107  ...  2.200070  0.248741  1.048002
14    -0.128543  1.029262 -1.338428  ...  0.340163 -0.885099  0.307255
15     0.420960  0.508218  0.792587  ... -0.576551  0.458008  1.340859

[16 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 16 entries, 0 to 15
Data columns (total 15 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          16 non-null     int64  
 1   Score_0        16 non-null     float64
 2   Proba_0        16 non-null     float64
 3   LogProba_0     16 non-null     float64
 4   Score_1        16 non-null     float64
 5   Proba_1        16 non-null     float64
 6   LogProba_1     16 non-null     float64
 7   Score_2        16 non-null     float64
 8   Proba_2        16 non-null     float64
 9   LogProba_2     16 non-null     float64
 10  Score_3        16 non-null     float64
 11  Proba_3        16 non-null     float64
 12  LogProba_3     16 non-null     float64
 13  Decision       16 non-null     int64  
 14  DecisionProba  16 non-null     float64
dtypes: float64(13), int64(2)
memory usage: 2.0 KB
    index   Score_0   Proba_0  ...  LogProba_3  Decision  DecisionProba
0       0 -0.503128  0.217365  ...   -2.420457         2       0.404509
1       1 -0.425725  0.218398  ...   -0.613660         3       0.541366
2       2 -1.265041  0.102784  ...   -0.987020         3       0.372686
3       3 -0.607671  0.223956  ...   -1.305016         3       0.271168
4       4 -0.545470  0.206159  ...   -0.683718         3       0.504737
5       5  0.460965  0.537337  ...   -1.630291         0       0.537337
6       6 -0.970310  0.134532  ...   -0.766941         3       0.464432
7       7 -1.106412  0.125515  ...   -1.649604         2       0.343723
8       8 -0.313861  0.287660  ...   -1.771799         2       0.355031
9       9 -0.344923  0.192931  ...   -2.029845         2       0.628969
10     10 -1.206626  0.103210  ...   -0.717788         3       0.487830
11     11 -0.670375  0.178863  ...   -1.015073         1       0.375668
12     12 -0.656125  0.188975  ...   -0.712993         3       0.490175
13     13 -0.359233  0.205275  ...   -2.740772         1       0.603757
14     14 -0.869633  0.148407  ...   -2.112787         2       0.487358
15     15 -0.616419  0.214571  ...   -1.522796         2       0.374793

[16 rows x 15 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Score_3', 'Proba_3',
       'LogProba_3', 'Decision', 'DecisionProba'],
      dtype='object')
    index   Score_0  SQL_Proba_0  ...  Py_Proba_2  Py_Proba_3  Py_Decision
0       0 -0.503128     0.217365  ...    0.404509    0.088881            2
1       1 -0.425725     0.218398  ...    0.108636    0.541366            3
2       2 -1.265041     0.102784  ...    0.180821    0.372685            3
3       3 -0.607671     0.223956  ...    0.250811    0.271168            3
4       4 -0.545470     0.206159  ...    0.136006    0.504737            3
5       5  0.460965     0.537337  ...    0.162294    0.195873            0
6       6 -0.970310     0.134532  ...    0.124314    0.464432            3
7       7 -1.106412     0.125515  ...    0.343723    0.192126            2
8       8 -0.313861     0.287660  ...    0.355031    0.170027            2
9       9 -0.344923     0.192931  ...    0.628968    0.131356            2
10     10 -1.206626     0.103210  ...    0.143205    0.487830            3
11     11 -0.670375     0.178863  ...    0.083094    0.362376            1
12     12 -0.656125     0.188975  ...    0.165693    0.490175            3
13     13 -0.359233     0.205275  ...    0.126448    0.064520            1
14     14 -0.869633     0.148407  ...    0.487358    0.120900            2
15     15 -0.616419     0.214571  ...    0.374794    0.218101            2

[16 rows x 20 columns]
MLLITE_CLASS_SQL_ERROR ('FourClass_10_tiny', 'RidgeClassifier', 'sqlite') ('Py_Proba_0', 'SQL_Proba_0') 1.4939906827198673e-07
    Py_Proba_0  SQL_Proba_0   SQL_Error_0
0     0.217365     0.217365 -8.721534e-10
1     0.218398     0.218398 -3.440335e-07
2     0.102784     0.102784  9.889780e-08
3     0.223955     0.223956 -1.197398e-07
4     0.206158     0.206159 -1.381234e-07
5     0.537337     0.537337 -6.818865e-07
6     0.134532     0.134532  3.772630e-08
7     0.125515     0.125515 -7.233284e-09
8     0.287659     0.287660 -1.737347e-07
9     0.192931     0.192931 -1.499828e-08
10    0.103211     0.103210  5.769749e-08
11    0.178862     0.178863 -1.595029e-07
12    0.188974     0.188975 -1.285439e-07
13    0.205275     0.205275 -1.860558e-07
14    0.148407     0.148407 -1.046176e-07
15    0.214571     0.214571 -1.367218e-07
MLLITE_CLASS_SQL_ERROR ('FourClass_10_tiny', 'RidgeClassifier', 'sqlite') ('Py_Proba_1', 'SQL_Proba_1') 1.386647967148609e-07
    Py_Proba_1  SQL_Proba_1   SQL_Error_1
0     0.289245     0.289245 -1.414297e-07
1     0.131600     0.131600  9.317430e-08
2     0.343710     0.343710  2.255973e-07
3     0.254065     0.254065  7.278060e-08
4     0.153098     0.153098  6.196344e-08
5     0.104496     0.104496  1.205110e-07
6     0.276722     0.276722 -1.907514e-07
7     0.338637     0.338637 -1.950901e-07
8     0.187283     0.187283 -8.274991e-08
9     0.046745     0.046745 -1.211967e-08
10    0.265755     0.265755  4.335941e-07
11    0.375668     0.375668  6.139649e-08
12    0.155157     0.155158 -6.066642e-08
13    0.603757     0.603757  9.950540e-08
14    0.243334     0.243335 -2.579332e-07
15    0.192534     0.192534  1.093736e-07
MLLITE_CLASS_SQL_ERROR ('FourClass_10_tiny', 'RidgeClassifier', 'sqlite') ('Py_Proba_2', 'SQL_Proba_2') 1.7471532846348448e-07
    Py_Proba_2  SQL_Proba_2   SQL_Error_2
0     0.404509     0.404509  2.323862e-07
1     0.108636     0.108636 -5.103393e-08
2     0.180821     0.180821  2.268007e-07
3     0.250811     0.250811 -3.780063e-08
4     0.136006     0.136006  1.009121e-08
5     0.162294     0.162294  1.988759e-07
6     0.124314     0.124314  1.543797e-07
7     0.343723     0.343723  4.357823e-07
8     0.355031     0.355031  2.964638e-07
9     0.628968     0.628969 -9.245591e-08
10    0.143205     0.143205  2.075821e-07
11    0.083094     0.083094  4.643418e-08
12    0.165693     0.165693 -9.193319e-09
13    0.126448     0.126448  1.537202e-07
14    0.487358     0.487358  4.992726e-07
15    0.374794     0.374793  1.431725e-07
MLLITE_CLASS_SQL_ERROR ('FourClass_10_tiny', 'RidgeClassifier', 'sqlite') ('Py_Proba_3', 'SQL_Proba_3') 1.9469981292485894e-07
    Py_Proba_3  SQL_Proba_3   SQL_Error_3
0     0.088881     0.088881 -8.263378e-08
1     0.541366     0.541366  3.465966e-07
2     0.372685     0.372686 -5.512958e-07
3     0.271168     0.271168  8.475982e-08
4     0.504737     0.504737  3.626648e-08
5     0.195873     0.195873  3.997524e-07
6     0.464432     0.464432  3.589827e-08
7     0.192126     0.192126 -2.185578e-07
8     0.170027     0.170027  1.962552e-08
9     0.131356     0.131356  9.349684e-08
10    0.487830     0.487830 -6.169173e-07
11    0.362376     0.362376  5.912279e-08
12    0.490175     0.490175  2.133048e-07
13    0.064520     0.064520 -5.971928e-08
14    0.120900     0.120900 -1.814253e-07
15    0.218101     0.218101 -1.158244e-07
MLLITE_CLASS_SQL_EXECUTION_STATUS ('FourClass_10_tiny', 'RidgeClassifier', 'sqlite', 'Success')
    Py_Decision  SQL_Decision
0             2             2
1             3             3
2             3             3
3             3             3
4             3             3
5             0             0
6             3             3
7             2             2
8             2             2
9             2             2
10            3             3
11            1             1
12            3             3
13            1             1
14            2             2
15            2             2
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
