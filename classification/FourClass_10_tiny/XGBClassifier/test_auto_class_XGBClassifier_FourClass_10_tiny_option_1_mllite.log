         X_0       X_1       X_2  ...       X_8       X_9  target
0  -1.050659  0.920640 -0.455125  ... -0.010797 -1.586949       2
1   1.869880 -2.312190 -1.153852  ... -1.648043  2.109906       3
2  -0.124049  0.768644 -1.040184  ...  1.247335 -1.413962       1
3   0.928858 -1.177375  0.542731  ...  0.485529  1.106564       0
4  -1.598324  1.482463  1.664691  ...  1.816533  0.637000       3
5  -1.750210  1.576099  0.286503  ... -2.267550  1.213184       0
6   0.476411  0.555172  2.004011  ...  0.821823  0.485550       3
7  -0.049861  1.019062 -0.239901  ...  0.642133  0.460004       1
8  -0.649409  1.030112  0.590313  ... -0.635514  0.255228       0
9   0.914030 -0.385815  2.120265  ... -0.152956 -0.427271       2
10 -1.979466  2.354344 -0.380747  ...  2.837784  0.027100       3
11 -1.368644  0.716127  0.307297  ...  1.172710  1.728196       1
12  1.184632 -1.691100 -0.781676  ... -1.114233  0.622367       3
13 -1.728087  2.393295  0.055107  ...  0.248741  1.048002       1
14 -0.128543  1.029262 -1.338428  ... -0.885099  0.307255       2
15  0.420960  0.508218  0.792587  ...  0.458008  1.340859       2

[16 rows x 11 columns]
MLLITE_MODEL_SET_OPTIONS XGBClassifier {"max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 }
MLLITE_MODEL_OPTIONS_DEFAULT XGBClassifier { "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING XGBClassifier { "max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 ,  "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32  }
MLLITE_MODEL_JSON_AFTER_SETTING XGBClassifier None
('OPERATION_START', 'TRAINING')
[[-1.0506592   0.92064023 -0.4551253  -0.05012989 -0.19162714  0.5843286
   0.9430313   1.0213077  -0.01079692 -1.5869486 ]
 [ 1.86988    -2.3121896  -1.1538523   1.292078   -1.061729    2.0429258
   1.284271   -1.3353989  -1.6480426   2.1099062 ]
 [-0.1240493   0.7686444  -1.040184   -1.0419097  -0.5159428   1.4802165
  -1.7200696   0.34235197  1.2473352  -1.4139622 ]
 [ 0.9288579  -1.1773754   0.5427306   1.248167   -0.7323589   0.6922126
   0.362028   -0.05373104  0.48552942  1.1065644 ]
 [-1.5983242   1.4824632   1.6646907  -0.7911312  -0.3269162  -0.07355959
  -3.3526254  -1.3474813   1.8165325   0.6370003 ]] [2 3 1 0 3]
MLLITE_FIT_USING_MODEL mllite_xgb_class.XGBClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_CLASSIFIER_FIT' 1 3
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_CLASSIFIER_FIT' 2 3
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 1 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 2 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 3 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 4 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 5 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 6 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 7 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_CLASSIFIER_FIT' 3 3
('OPERATION_END_ELAPSED', 0.008, 'TRAINING')
{ "max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 ,  "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32  }
{ "max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 ,  "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32  }
{
	"metadata" : { "model" : "Friedman_XGB", "version" : "2024-W13", "signature" : "ff4_il8"},
	"options" : { "base_score" : [ ], "early_stopping_rounds" : 0, "eval_metric" : "", "gamma" : 0.000000, "grow_policy" : 0, "learning_rate" : 0.300000, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 32, "min_child_weight" : 5.000000, "n_estimators" : 5, "objective" : "reg:squarederror", "reg_alpha" : 0.000000, "reg_lambda" : 1.000000, "tree_method" : "auto" },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 10 },
	"classes" : [ 0, 1, 2, 3 ],
	"booster" : {
		"BaseScore" : [ 0.187500, 0.250000, 0.250000, 0.312500 ],
		"Trees" : 5,
		"Tree_0" : {
			"Node_0" : { "leaf_value" : [ 0.187500, 0.250000, 0.250000, 0.312500 ], "parent" : null, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_1" : {
			"Node_0" : { "leaf_value" : [ 0.375000, 0.500000, 0.500000, 0.625000 ], "parent" : null, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_2" : {
			"Node_0" : { "leaf_value" : [ 0.750000, 1.000000, 1.000000, 1.250000 ], "parent" : null, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_3" : {
			"Node_0" : { "leaf_value" : [ 1.500000, 2.000000, 2.000000, 2.500000 ], "parent" : null, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_4" : {
			"Node_0" : { "leaf_value" : [ 3.000000, 4.000000, 4.000000, 5.000000 ], "parent" : null, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/XGBClassifier/mllite.XGBClassifier_FourClass_10_tiny_option_1.json'

MLLITE_MODEL_SET_OPTIONS XGBClassifier {"max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 }
MLLITE_MODEL_OPTIONS_DEFAULT XGBClassifier { "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING XGBClassifier { "max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 ,  "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32  }
MLLITE_MODEL_JSON_AFTER_SETTING XGBClassifier None
MLLITE_RELOADING_MODEL mllite_xgb_class.XGBClassifier_ff4_il8
{
	"metadata" : { "model" : "Friedman_XGB", "version" : "2024-W13", "signature" : "ff4_il8"},
	"options" : { "base_score" : [ ], "early_stopping_rounds" : 0, "eval_metric" : "", "gamma" : 0.000000, "grow_policy" : 0, "learning_rate" : 0.300000, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 32, "min_child_weight" : 5.000000, "n_estimators" : 5, "objective" : "reg:squarederror", "reg_alpha" : 0.000000, "reg_lambda" : 1.000000, "tree_method" : "auto" },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 10 },
	"classes" : [ 0, 1, 2, 3 ],
	"booster" : {
		"BaseScore" : [ 0.187500, 0.250000, 0.250000, 0.312500 ],
		"Trees" : 5,
		"Tree_0" : {
			"Node_0" : { "leaf_value" : [ 0.187500, 0.250000, 0.250000, 0.312500 ], "parent" : null, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_1" : {
			"Node_0" : { "leaf_value" : [ 0.375000, 0.500000, 0.500000, 0.625000 ], "parent" : null, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_2" : {
			"Node_0" : { "leaf_value" : [ 0.750000, 1.000000, 1.000000, 1.250000 ], "parent" : null, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_3" : {
			"Node_0" : { "leaf_value" : [ 1.500000, 2.000000, 2.000000, 2.500000 ], "parent" : null, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_4" : {
			"Node_0" : { "leaf_value" : [ 3.000000, 4.000000, 4.000000, 5.000000 ], "parent" : null, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		}
	}
}
BEAUTIFIED_JSON_START
{
	"booster" : 	{
		"BaseScore" : [ 0.1875, 0.25, 0.25, 0.3125 ],
		"Tree_0" : 	{
			"Node_0" : 	{
				"leaf_value" : [ 0.1875, 0.25, 0.25, 0.3125 ],
				"left" : null,
				"parent" : null,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			}
		},
		"Tree_1" : 	{
			"Node_0" : 	{
				"leaf_value" : [ 0.375, 0.5, 0.5, 0.625 ],
				"left" : null,
				"parent" : null,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			}
		},
		"Tree_2" : 	{
			"Node_0" : 	{
				"leaf_value" : [ 0.75, 1.0, 1.0, 1.25 ],
				"left" : null,
				"parent" : null,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			}
		},
		"Tree_3" : 	{
			"Node_0" : 	{
				"leaf_value" : [ 1.5, 2.0, 2.0, 2.5 ],
				"left" : null,
				"parent" : null,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			}
		},
		"Tree_4" : 	{
			"Node_0" : 	{
				"leaf_value" : [ 3.0, 4.0, 4.0, 5.0 ],
				"left" : null,
				"parent" : null,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			}
		},
		"Trees" : 5
	},
	"classes" : [ 0, 1, 2, 3 ],
	"dataset" : 	{
		"dataset_features" : 10,
		"dataset_rows" : 16
	},
	"metadata" :  { "model" : "Friedman_XGB", "signature" : "ff4_il8", "version" : "2024-W13" },
	"options" :  { "base_score" : [ ], "early_stopping_rounds" : 0, "eval_metric" : "", "gamma" : 0.0, "grow_policy" : 0, "learning_rate" : 0.3, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 32, "min_child_weight" : 5.0, "n_estimators" : 5, "objective" : "reg:squarederror", "reg_alpha" : 0.0, "reg_lambda" : 1.0, "tree_method" : "auto" }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0.0142 0.105  0.105  0.7758]
 [0.0142 0.105  0.105  0.7758]
 [0.0142 0.105  0.105  0.7758]
 [0.0142 0.105  0.105  0.7758]
 [0.0142 0.105  0.105  0.7758]
 [0.0142 0.105  0.105  0.7758]
 [0.0142 0.105  0.105  0.7758]
 [0.0142 0.105  0.105  0.7758]
 [0.0142 0.105  0.105  0.7758]
 [0.0142 0.105  0.105  0.7758]
 [0.0142 0.105  0.105  0.7758]
 [0.0142 0.105  0.105  0.7758]
 [0.0142 0.105  0.105  0.7758]
 [0.0142 0.105  0.105  0.7758]
 [0.0142 0.105  0.105  0.7758]
 [0.0142 0.105  0.105  0.7758]]
(16, 4)
(16, 4) float32
MODEL_PERFS {'class_name': 'mllite.XGBClassifier', 'model_name': 'XGBClassifier', 'options': '{"max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 }', 'dataset': 'FourClass_10_tiny', 'size': 16, 'accuracy': 0.3125, 'auc': 0.5}
WRITING_PERF_CODE 'logs/auto_tests/classification/XGBClassifier/mllite.XGBClassifier_FourClass_10_tiny_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.XGBClassifier', 'model_name': 'XGBClassifier', 'options': '{"max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 }', 'dataset': 'FourClass_10_tiny', 'training_time_in_sec': 0.008, 'prediction_time_in_sec': 0.0}
WRITING_SQL_CODE 'logs/auto_tests/classification/XGBClassifier/mllite.XGBClassifier_FourClass_10_tiny_option_1_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('FourClass_10_tiny', 'XGBClassifier', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
"DT_node_lookup_0" AS 
 (SELECT
    t."index" AS "index",
    0 AS node_id
  FROM model_input t
 )
,
"DT_node_data_0" AS 
 (SELECT
    "Values".nid AS nid,
    "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3"
  FROM (
    SELECT 0 AS nid,  0.187500 AS "P_0", 0.250000 AS "P_1", 0.250000 AS "P_2", 0.312500 AS "P_3"
  ) AS "Values")
,
"DT_output_0" AS 
 (SELECT
   t1."index" AS "index",
   t1.node_id AS node_id,
   t2.nid AS nid,
   t2."P_0" AS "P_0", t2."P_1" AS "P_1", t2."P_2" AS "P_2", t2."P_3" AS 
SQL_OUT_PUT_FIRST_LINES_END ('FourClass_10_tiny', 'XGBClassifier', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('FourClass_10_tiny', 'XGBClassifier', 'duckdb')
ore_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."Score_3" AS "Score_3",
  arg_max_cte."Proba_3" AS "Proba_3",
  CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN LN( arg_max_cte."Proba_3" ) ELSE -1.79769313486231e+308 END AS "LogProba_3",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('FourClass_10_tiny', 'XGBClassifier', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 16 entries, 0 to 15
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     16 non-null     float32
 1   X_1     16 non-null     float32
 2   X_2     16 non-null     float32
 3   X_3     16 non-null     float32
 4   X_4     16 non-null     float32
 5   X_5     16 non-null     float32
 6   X_6     16 non-null     float32
 7   X_7     16 non-null     float32
 8   X_8     16 non-null     float32
 9   X_9     16 non-null     float32
dtypes: float32(10)
memory usage: 768.0 bytes
            X_0       X_1       X_2  ...       X_7       X_8       X_9
index                                ...                              
0     -1.050659  0.920640 -0.455125  ...  1.021308 -0.010797 -1.586949
1      1.869880 -2.312190 -1.153852  ... -1.335399 -1.648043  2.109906
2     -0.124049  0.768644 -1.040184  ...  0.342352  1.247335 -1.413962
3      0.928858 -1.177375  0.542731  ... -0.053731  0.485529  1.106564
4     -1.598324  1.482463  1.664691  ... -1.347481  1.816532  0.637000
5     -1.750210  1.576099  0.286503  ... -1.160993 -2.267550  1.213184
6      0.476411  0.555172  2.004011  ...  0.803645  0.821823  0.485550
7     -0.049861  1.019062 -0.239901  ...  0.600685  0.642133  0.460004
8     -0.649409  1.030112  0.590313  ... -0.064296 -0.635514  0.255228
9      0.914030 -0.385815  2.120265  ... -1.398672 -0.152956 -0.427271
10    -1.979466  2.354344 -0.380747  ... -1.103278  2.837784  0.027100
11    -1.368644  0.716127  0.307297  ...  0.215110  1.172710  1.728197
12     1.184632 -1.691100 -0.781676  ... -0.742383 -1.114233  0.622367
13    -1.728087  2.393295  0.055107  ...  2.200070  0.248741  1.048002
14    -0.128543  1.029262 -1.338428  ...  0.340163 -0.885099  0.307255
15     0.420960  0.508218  0.792587  ... -0.576551  0.458008  1.340859

[16 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 16 entries, 0 to 15
Data columns (total 15 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          16 non-null     int64  
 1   Score_0        16 non-null     float64
 2   Proba_0        16 non-null     float64
 3   LogProba_0     16 non-null     float64
 4   Score_1        16 non-null     float64
 5   Proba_1        16 non-null     float64
 6   LogProba_1     16 non-null     float64
 7   Score_2        16 non-null     float64
 8   Proba_2        16 non-null     float64
 9   LogProba_2     16 non-null     float64
 10  Score_3        16 non-null     float64
 11  Proba_3        16 non-null     float64
 12  LogProba_3     16 non-null     float64
 13  Decision       16 non-null     int64  
 14  DecisionProba  16 non-null     float64
dtypes: float64(13), int64(2)
memory usage: 2.0 KB
    index  Score_0   Proba_0  ...  LogProba_3  Decision  DecisionProba
0       0      6.0  0.014209  ...   -0.253856         3       0.775803
1       1      6.0  0.014209  ...   -0.253856         3       0.775803
2       2      6.0  0.014209  ...   -0.253856         3       0.775803
3       3      6.0  0.014209  ...   -0.253856         3       0.775803
4       4      6.0  0.014209  ...   -0.253856         3       0.775803
5       5      6.0  0.014209  ...   -0.253856         3       0.775803
6       6      6.0  0.014209  ...   -0.253856         3       0.775803
7       7      6.0  0.014209  ...   -0.253856         3       0.775803
8       8      6.0  0.014209  ...   -0.253856         3       0.775803
9       9      6.0  0.014209  ...   -0.253856         3       0.775803
10     10      6.0  0.014209  ...   -0.253856         3       0.775803
11     11      6.0  0.014209  ...   -0.253856         3       0.775803
12     12      6.0  0.014209  ...   -0.253856         3       0.775803
13     13      6.0  0.014209  ...   -0.253856         3       0.775803
14     14      6.0  0.014209  ...   -0.253856         3       0.775803
15     15      6.0  0.014209  ...   -0.253856         3       0.775803

[16 rows x 15 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Score_3', 'Proba_3',
       'LogProba_3', 'Decision', 'DecisionProba'],
      dtype='object')
    index  Score_0  SQL_Proba_0  ...  Py_Proba_2  Py_Proba_3  Py_Decision
0       0      6.0     0.014209  ...    0.104994    0.775804            3
1       1      6.0     0.014209  ...    0.104994    0.775804            3
2       2      6.0     0.014209  ...    0.104994    0.775804            3
3       3      6.0     0.014209  ...    0.104994    0.775804            3
4       4      6.0     0.014209  ...    0.104994    0.775804            3
5       5      6.0     0.014209  ...    0.104994    0.775804            3
6       6      6.0     0.014209  ...    0.104994    0.775804            3
7       7      6.0     0.014209  ...    0.104994    0.775804            3
8       8      6.0     0.014209  ...    0.104994    0.775804            3
9       9      6.0     0.014209  ...    0.104994    0.775804            3
10     10      6.0     0.014209  ...    0.104994    0.775804            3
11     11      6.0     0.014209  ...    0.104994    0.775804            3
12     12      6.0     0.014209  ...    0.104994    0.775804            3
13     13      6.0     0.014209  ...    0.104994    0.775804            3
14     14      6.0     0.014209  ...    0.104994    0.775804            3
15     15      6.0     0.014209  ...    0.104994    0.775804            3

[16 rows x 20 columns]
MLLITE_CLASS_SQL_ERROR ('FourClass_10_tiny', 'XGBClassifier', 'duckdb') ('Py_Proba_0', 'SQL_Proba_0') 4.639199555761531e-09
    Py_Proba_0  SQL_Proba_0   SQL_Error_0
0     0.014209     0.014209  4.639200e-09
1     0.014209     0.014209  4.639200e-09
2     0.014209     0.014209  4.639200e-09
3     0.014209     0.014209  4.639200e-09
4     0.014209     0.014209  4.639200e-09
5     0.014209     0.014209  4.639200e-09
6     0.014209     0.014209  4.639200e-09
7     0.014209     0.014209  4.639200e-09
8     0.014209     0.014209  4.639200e-09
9     0.014209     0.014209  4.639200e-09
10    0.014209     0.014209  4.639200e-09
11    0.014209     0.014209  4.639200e-09
12    0.014209     0.014209  4.639200e-09
13    0.014209     0.014209  4.639200e-09
14    0.014209     0.014209  4.639200e-09
15    0.014209     0.014209  4.639200e-09
MLLITE_CLASS_SQL_ERROR ('FourClass_10_tiny', 'XGBClassifier', 'duckdb') ('Py_Proba_1', 'SQL_Proba_1') 3.3621247050308334e-08
    Py_Proba_1  SQL_Proba_1   SQL_Error_1
0     0.104994     0.104994  3.362125e-08
1     0.104994     0.104994  3.362125e-08
2     0.104994     0.104994  3.362125e-08
3     0.104994     0.104994  3.362125e-08
4     0.104994     0.104994  3.362125e-08
5     0.104994     0.104994  3.362125e-08
6     0.104994     0.104994  3.362125e-08
7     0.104994     0.104994  3.362125e-08
8     0.104994     0.104994  3.362125e-08
9     0.104994     0.104994  3.362125e-08
10    0.104994     0.104994  3.362125e-08
11    0.104994     0.104994  3.362125e-08
12    0.104994     0.104994  3.362125e-08
13    0.104994     0.104994  3.362125e-08
14    0.104994     0.104994  3.362125e-08
15    0.104994     0.104994  3.362125e-08
MLLITE_CLASS_SQL_ERROR ('FourClass_10_tiny', 'XGBClassifier', 'duckdb') ('Py_Proba_2', 'SQL_Proba_2') 3.3621247050308334e-08
    Py_Proba_2  SQL_Proba_2   SQL_Error_2
0     0.104994     0.104994  3.362125e-08
1     0.104994     0.104994  3.362125e-08
2     0.104994     0.104994  3.362125e-08
3     0.104994     0.104994  3.362125e-08
4     0.104994     0.104994  3.362125e-08
5     0.104994     0.104994  3.362125e-08
6     0.104994     0.104994  3.362125e-08
7     0.104994     0.104994  3.362125e-08
8     0.104994     0.104994  3.362125e-08
9     0.104994     0.104994  3.362125e-08
10    0.104994     0.104994  3.362125e-08
11    0.104994     0.104994  3.362125e-08
12    0.104994     0.104994  3.362125e-08
13    0.104994     0.104994  3.362125e-08
14    0.104994     0.104994  3.362125e-08
15    0.104994     0.104994  3.362125e-08
MLLITE_CLASS_SQL_ERROR ('FourClass_10_tiny', 'XGBClassifier', 'duckdb') ('Py_Proba_3', 'SQL_Proba_3') 2.522185623687889e-07
    Py_Proba_3  SQL_Proba_3   SQL_Error_3
0     0.775804     0.775803  2.522186e-07
1     0.775804     0.775803  2.522186e-07
2     0.775804     0.775803  2.522186e-07
3     0.775804     0.775803  2.522186e-07
4     0.775804     0.775803  2.522186e-07
5     0.775804     0.775803  2.522186e-07
6     0.775804     0.775803  2.522186e-07
7     0.775804     0.775803  2.522186e-07
8     0.775804     0.775803  2.522186e-07
9     0.775804     0.775803  2.522186e-07
10    0.775804     0.775803  2.522186e-07
11    0.775804     0.775803  2.522186e-07
12    0.775804     0.775803  2.522186e-07
13    0.775804     0.775803  2.522186e-07
14    0.775804     0.775803  2.522186e-07
15    0.775804     0.775803  2.522186e-07
MLLITE_CLASS_SQL_EXECUTION_STATUS ('FourClass_10_tiny', 'XGBClassifier', 'duckdb', 'Success')
    Py_Decision  SQL_Decision
0             3             3
1             3             3
2             3             3
3             3             3
4             3             3
5             3             3
6             3             3
7             3             3
8             3             3
9             3             3
10            3             3
11            3             3
12            3             3
13            3             3
14            3             3
15            3             3
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/XGBClassifier/mllite.XGBClassifier_FourClass_10_tiny_option_1_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('FourClass_10_tiny', 'XGBClassifier', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
"DT_node_lookup_0" AS 
 (SELECT
    t."index" AS "index",
    0 AS node_id
  FROM model_input t
 )
,
"DT_node_data_0" AS 
 (SELECT
    "Values".nid AS nid,
    "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3"
  FROM (
    SELECT 0 AS nid,  0.187500 AS "P_0", 0.250000 AS "P_1", 0.250000 AS "P_2", 0.312500 AS "P_3"
  ) AS "Values")
,
"DT_output_0" AS 
 (SELECT
   t1."index" AS "index",
   t1.node_id AS node_id,
   t2.nid AS nid,
   t2."P_0" AS "P_0", t2."P_1" AS "P_1", t2."P_2" AS "P_2", t2."P_3" AS 
SQL_OUT_PUT_FIRST_LINES_END ('FourClass_10_tiny', 'XGBClassifier', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('FourClass_10_tiny', 'XGBClassifier', 'sqlite')
ore_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."Score_3" AS "Score_3",
  arg_max_cte."Proba_3" AS "Proba_3",
  CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN LN( arg_max_cte."Proba_3" ) ELSE -1.79769313486231e+308 END AS "LogProba_3",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('FourClass_10_tiny', 'XGBClassifier', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 16 entries, 0 to 15
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     16 non-null     float32
 1   X_1     16 non-null     float32
 2   X_2     16 non-null     float32
 3   X_3     16 non-null     float32
 4   X_4     16 non-null     float32
 5   X_5     16 non-null     float32
 6   X_6     16 non-null     float32
 7   X_7     16 non-null     float32
 8   X_8     16 non-null     float32
 9   X_9     16 non-null     float32
dtypes: float32(10)
memory usage: 768.0 bytes
            X_0       X_1       X_2  ...       X_7       X_8       X_9
index                                ...                              
0     -1.050659  0.920640 -0.455125  ...  1.021308 -0.010797 -1.586949
1      1.869880 -2.312190 -1.153852  ... -1.335399 -1.648043  2.109906
2     -0.124049  0.768644 -1.040184  ...  0.342352  1.247335 -1.413962
3      0.928858 -1.177375  0.542731  ... -0.053731  0.485529  1.106564
4     -1.598324  1.482463  1.664691  ... -1.347481  1.816532  0.637000
5     -1.750210  1.576099  0.286503  ... -1.160993 -2.267550  1.213184
6      0.476411  0.555172  2.004011  ...  0.803645  0.821823  0.485550
7     -0.049861  1.019062 -0.239901  ...  0.600685  0.642133  0.460004
8     -0.649409  1.030112  0.590313  ... -0.064296 -0.635514  0.255228
9      0.914030 -0.385815  2.120265  ... -1.398672 -0.152956 -0.427271
10    -1.979466  2.354344 -0.380747  ... -1.103278  2.837784  0.027100
11    -1.368644  0.716127  0.307297  ...  0.215110  1.172710  1.728197
12     1.184632 -1.691100 -0.781676  ... -0.742383 -1.114233  0.622367
13    -1.728087  2.393295  0.055107  ...  2.200070  0.248741  1.048002
14    -0.128543  1.029262 -1.338428  ...  0.340163 -0.885099  0.307255
15     0.420960  0.508218  0.792587  ... -0.576551  0.458008  1.340859

[16 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 16 entries, 0 to 15
Data columns (total 15 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          16 non-null     int64  
 1   Score_0        16 non-null     float64
 2   Proba_0        16 non-null     float64
 3   LogProba_0     16 non-null     float64
 4   Score_1        16 non-null     float64
 5   Proba_1        16 non-null     float64
 6   LogProba_1     16 non-null     float64
 7   Score_2        16 non-null     float64
 8   Proba_2        16 non-null     float64
 9   LogProba_2     16 non-null     float64
 10  Score_3        16 non-null     float64
 11  Proba_3        16 non-null     float64
 12  LogProba_3     16 non-null     float64
 13  Decision       16 non-null     int64  
 14  DecisionProba  16 non-null     float64
dtypes: float64(13), int64(2)
memory usage: 2.0 KB
    index  Score_0   Proba_0  ...  LogProba_3  Decision  DecisionProba
0       0      6.0  0.014209  ...   -0.253856         3       0.775803
1       1      6.0  0.014209  ...   -0.253856         3       0.775803
2       2      6.0  0.014209  ...   -0.253856         3       0.775803
3       3      6.0  0.014209  ...   -0.253856         3       0.775803
4       4      6.0  0.014209  ...   -0.253856         3       0.775803
5       5      6.0  0.014209  ...   -0.253856         3       0.775803
6       6      6.0  0.014209  ...   -0.253856         3       0.775803
7       7      6.0  0.014209  ...   -0.253856         3       0.775803
8       8      6.0  0.014209  ...   -0.253856         3       0.775803
9       9      6.0  0.014209  ...   -0.253856         3       0.775803
10     10      6.0  0.014209  ...   -0.253856         3       0.775803
11     11      6.0  0.014209  ...   -0.253856         3       0.775803
12     12      6.0  0.014209  ...   -0.253856         3       0.775803
13     13      6.0  0.014209  ...   -0.253856         3       0.775803
14     14      6.0  0.014209  ...   -0.253856         3       0.775803
15     15      6.0  0.014209  ...   -0.253856         3       0.775803

[16 rows x 15 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Score_3', 'Proba_3',
       'LogProba_3', 'Decision', 'DecisionProba'],
      dtype='object')
    index  Score_0  SQL_Proba_0  ...  Py_Proba_2  Py_Proba_3  Py_Decision
0       0      6.0     0.014209  ...    0.104994    0.775804            3
1       1      6.0     0.014209  ...    0.104994    0.775804            3
2       2      6.0     0.014209  ...    0.104994    0.775804            3
3       3      6.0     0.014209  ...    0.104994    0.775804            3
4       4      6.0     0.014209  ...    0.104994    0.775804            3
5       5      6.0     0.014209  ...    0.104994    0.775804            3
6       6      6.0     0.014209  ...    0.104994    0.775804            3
7       7      6.0     0.014209  ...    0.104994    0.775804            3
8       8      6.0     0.014209  ...    0.104994    0.775804            3
9       9      6.0     0.014209  ...    0.104994    0.775804            3
10     10      6.0     0.014209  ...    0.104994    0.775804            3
11     11      6.0     0.014209  ...    0.104994    0.775804            3
12     12      6.0     0.014209  ...    0.104994    0.775804            3
13     13      6.0     0.014209  ...    0.104994    0.775804            3
14     14      6.0     0.014209  ...    0.104994    0.775804            3
15     15      6.0     0.014209  ...    0.104994    0.775804            3

[16 rows x 20 columns]
MLLITE_CLASS_SQL_ERROR ('FourClass_10_tiny', 'XGBClassifier', 'sqlite') ('Py_Proba_0', 'SQL_Proba_0') 4.639199555761531e-09
    Py_Proba_0  SQL_Proba_0   SQL_Error_0
0     0.014209     0.014209  4.639200e-09
1     0.014209     0.014209  4.639200e-09
2     0.014209     0.014209  4.639200e-09
3     0.014209     0.014209  4.639200e-09
4     0.014209     0.014209  4.639200e-09
5     0.014209     0.014209  4.639200e-09
6     0.014209     0.014209  4.639200e-09
7     0.014209     0.014209  4.639200e-09
8     0.014209     0.014209  4.639200e-09
9     0.014209     0.014209  4.639200e-09
10    0.014209     0.014209  4.639200e-09
11    0.014209     0.014209  4.639200e-09
12    0.014209     0.014209  4.639200e-09
13    0.014209     0.014209  4.639200e-09
14    0.014209     0.014209  4.639200e-09
15    0.014209     0.014209  4.639200e-09
MLLITE_CLASS_SQL_ERROR ('FourClass_10_tiny', 'XGBClassifier', 'sqlite') ('Py_Proba_1', 'SQL_Proba_1') 3.3621247050308334e-08
    Py_Proba_1  SQL_Proba_1   SQL_Error_1
0     0.104994     0.104994  3.362125e-08
1     0.104994     0.104994  3.362125e-08
2     0.104994     0.104994  3.362125e-08
3     0.104994     0.104994  3.362125e-08
4     0.104994     0.104994  3.362125e-08
5     0.104994     0.104994  3.362125e-08
6     0.104994     0.104994  3.362125e-08
7     0.104994     0.104994  3.362125e-08
8     0.104994     0.104994  3.362125e-08
9     0.104994     0.104994  3.362125e-08
10    0.104994     0.104994  3.362125e-08
11    0.104994     0.104994  3.362125e-08
12    0.104994     0.104994  3.362125e-08
13    0.104994     0.104994  3.362125e-08
14    0.104994     0.104994  3.362125e-08
15    0.104994     0.104994  3.362125e-08
MLLITE_CLASS_SQL_ERROR ('FourClass_10_tiny', 'XGBClassifier', 'sqlite') ('Py_Proba_2', 'SQL_Proba_2') 3.3621247050308334e-08
    Py_Proba_2  SQL_Proba_2   SQL_Error_2
0     0.104994     0.104994  3.362125e-08
1     0.104994     0.104994  3.362125e-08
2     0.104994     0.104994  3.362125e-08
3     0.104994     0.104994  3.362125e-08
4     0.104994     0.104994  3.362125e-08
5     0.104994     0.104994  3.362125e-08
6     0.104994     0.104994  3.362125e-08
7     0.104994     0.104994  3.362125e-08
8     0.104994     0.104994  3.362125e-08
9     0.104994     0.104994  3.362125e-08
10    0.104994     0.104994  3.362125e-08
11    0.104994     0.104994  3.362125e-08
12    0.104994     0.104994  3.362125e-08
13    0.104994     0.104994  3.362125e-08
14    0.104994     0.104994  3.362125e-08
15    0.104994     0.104994  3.362125e-08
MLLITE_CLASS_SQL_ERROR ('FourClass_10_tiny', 'XGBClassifier', 'sqlite') ('Py_Proba_3', 'SQL_Proba_3') 2.522185623687889e-07
    Py_Proba_3  SQL_Proba_3   SQL_Error_3
0     0.775804     0.775803  2.522186e-07
1     0.775804     0.775803  2.522186e-07
2     0.775804     0.775803  2.522186e-07
3     0.775804     0.775803  2.522186e-07
4     0.775804     0.775803  2.522186e-07
5     0.775804     0.775803  2.522186e-07
6     0.775804     0.775803  2.522186e-07
7     0.775804     0.775803  2.522186e-07
8     0.775804     0.775803  2.522186e-07
9     0.775804     0.775803  2.522186e-07
10    0.775804     0.775803  2.522186e-07
11    0.775804     0.775803  2.522186e-07
12    0.775804     0.775803  2.522186e-07
13    0.775804     0.775803  2.522186e-07
14    0.775804     0.775803  2.522186e-07
15    0.775804     0.775803  2.522186e-07
MLLITE_CLASS_SQL_EXECUTION_STATUS ('FourClass_10_tiny', 'XGBClassifier', 'sqlite', 'Success')
    Py_Decision  SQL_Decision
0             3             3
1             3             3
2             3             3
3             3             3
4             3             3
5             3             3
6             3             3
7             3             3
8             3             3
9             3             3
10            3             3
11            3             3
12            3             3
13            3             3
14            3             3
15            3             3
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/XGBClassifier/mllite.XGBClassifier_FourClass_10_tiny_option_1_pgsql.sql'



SQL_OUT_PUT_FIRST_LINES_START ('FourClass_10_tiny', 'XGBClassifier', 'pgsql')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
"DT_node_lookup_0" AS 
 (SELECT
    t."index" AS "index",
    0 AS node_id
  FROM model_input t
 )
,
"DT_node_data_0" AS 
 (SELECT
    "Values".nid AS nid,
    "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3"
  FROM (
    SELECT 0 AS nid,  0.187500 AS "P_0", 0.250000 AS "P_1", 0.250000 AS "P_2", 0.312500 AS "P_3"
  ) AS "Values")
,
"DT_output_0" AS 
 (SELECT
   t1."index" AS "index",
   t1.node_id AS node_id,
   t2.nid AS nid,
   t2."P_0" AS "P_0", t2."P_1" AS "P_1", t2."P_2" AS "P_2", t2."P_3" AS 
SQL_OUT_PUT_FIRST_LINES_END ('FourClass_10_tiny', 'XGBClassifier', 'pgsql')
SQL_OUT_PUT_LAST_LINES_START ('FourClass_10_tiny', 'XGBClassifier', 'pgsql')
ore_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."Score_3" AS "Score_3",
  arg_max_cte."Proba_3" AS "Proba_3",
  CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN LN( arg_max_cte."Proba_3" ) ELSE -1.79769313486231e+308 END AS "LogProba_3",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('FourClass_10_tiny', 'XGBClassifier', 'pgsql') 




COPY_TRAINING_DATA_TO_SQLITE_START
