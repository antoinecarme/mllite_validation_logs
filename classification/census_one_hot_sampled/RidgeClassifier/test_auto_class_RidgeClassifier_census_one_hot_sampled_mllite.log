      age  workclass_Local-gov  ...  native-country_infrequent_sklearn  target
0       2                  0.0  ...                                0.0    >50K
1       1                  0.0  ...                                0.0   <=50K
2       1                  0.0  ...                                0.0    >50K
3       1                  0.0  ...                                1.0    >50K
4       1                  0.0  ...                                0.0   <=50K
...   ...                  ...  ...                                ...     ...
6100    2                  0.0  ...                                1.0   <=50K
6101    2                  0.0  ...                                0.0   <=50K
6102    3                  0.0  ...                                0.0   <=50K
6103    1                  0.0  ...                                0.0   <=50K
6104    4                  0.0  ...                                0.0   <=50K

[6105 rows x 54 columns]
MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
('OPERATION_START', 'TRAINING')
[[2.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 1.889500e+05 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 1.400000e+01 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  3.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00]
 [1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00 1.033222e+06 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 1.000000e+00
  0.000000e+00 1.000000e+01 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  2.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00]
 [1.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 1.297070e+05 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.300000e+01 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 1.000000e+00 4.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00]
 [1.000000e+00 0.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 7.853000e+04 0.000000e+00
  0.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 9.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  4.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 1.000000e+00]
 [1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00 1.595370e+05 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 1.200000e+01 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  2.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00]] ['>50K' '<=50K' '>50K' '>50K' '<=50K']
MLLITE_FIT_USING_MODEL mllite_ridge_class.RidgeClassifier_ff4_OO8
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 3 4
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 4 4
('OPERATION_END_ELAPSED', 0.587, 'TRAINING')
{ ,   }
{ ,   }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_OO8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 6105, "dataset_features" : 53 },
	"classes" : [ "<=50K", ">50K" ],
	"equations" : {
		"class_1" : {
			"intercept" : -1.468280,
			"coeffs" : [ 0.054462, -0.057452, 0.008345, 0.171257, -0.196306, -0.019335, 0.001807, -0.017380, 0.000000, -0.053708, -0.071319, 0.049236, -0.101680, 0.093375, -0.037578, -0.009545, 0.047502, -0.177663, 0.170021, 0.005331, -0.125746, -0.074034, -0.088165, -0.170599, -0.018736, -0.039345, 0.160372, -0.052566, 0.134119, 0.022034, -0.096898, 0.089199, -0.153793, -0.093133, -0.086929, -0.106298, 0.345713, -0.045236, 0.006429, 0.017454, 0.099268, 0.082555, 0.075918, 0.292079, 0.160002, 0.086833, 0.153658, -0.177971, 0.089059, -0.121229, 0.008449, -0.012738, -0.038499 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_census_one_hot_sampled.json'

MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
MLLITE_RELOADING_MODEL mllite_ridge_class.RidgeClassifier_ff4_OO8
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_OO8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 6105, "dataset_features" : 53 },
	"classes" : [ "<=50K", ">50K" ],
	"equations" : {
		"class_1" : {
			"intercept" : -1.468280,
			"coeffs" : [ 0.054462, -0.057452, 0.008345, 0.171257, -0.196306, -0.019335, 0.001807, -0.017380, 0.000000, -0.053708, -0.071319, 0.049236, -0.101680, 0.093375, -0.037578, -0.009545, 0.047502, -0.177663, 0.170021, 0.005331, -0.125746, -0.074034, -0.088165, -0.170599, -0.018736, -0.039345, 0.160372, -0.052566, 0.134119, 0.022034, -0.096898, 0.089199, -0.153793, -0.093133, -0.086929, -0.106298, 0.345713, -0.045236, 0.006429, 0.017454, 0.099268, 0.082555, 0.075918, 0.292079, 0.160002, 0.086833, 0.153658, -0.177971, 0.089059, -0.121229, 0.008449, -0.012738, -0.038499 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ "<=50K", ">50K" ],
	"dataset" : 	{
		"dataset_features" : 53,
		"dataset_rows" : 6105
	},
	"equations" : 	{
		"class_1" : 	{
			"coeffs" : [ 0.054462, -0.057452, 0.008345, 0.171257, -0.196306, -0.019335, 0.001807, -0.01738, 0.0, -0.053708, -0.071319, 0.049236, -0.10168, 0.093375, -0.037578, -0.009545, 0.047502, -0.177663, 0.170021, 0.005331, -0.125746, -0.074034, -0.088165, -0.170599, -0.018736, -0.039345, 0.160372, -0.052566, 0.134119, 0.022034, -0.096898, 0.089199, -0.153793, -0.093133, -0.086929, -0.106298, 0.345713, -0.045236, 0.006429, 0.017454, 0.099268, 0.082555, 0.075918, 0.292079, 0.160002, 0.086833, 0.153658, -0.177971, 0.089059, -0.121229, 0.008449, -0.012738, -0.038499 ],
			"intercept" : -1.46828
		}
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_OO8", "version" : "2024-W12" },
	"options" :  { "alpha" : 1.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.004, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.004, 'PREDICT')
[[0.3549 0.6451]
 [0.6226 0.3774]
 [0.0985 0.9015]
 ...
 [0.4809 0.5191]
 [0.7541 0.2459]
 [0.578  0.422 ]]
(6105, 2)
(6105,) float32
MODEL_PERFS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'census_one_hot_sampled', 'size': 6105, 'accuracy': 0.8548730548730549, 'auc': 0.9059420972107802}
WRITING_PERF_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_census_one_hot_sampled.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'census_one_hot_sampled', 'training_time_in_sec': 0.587, 'prediction_time_in_sec': 0.004}
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_census_one_hot_sampled.sql'



SQL_OUT_PUT_FIRST_LINES_START
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END
SQL_OUT_PUT_LAST_LINES_START
ax."index" AS "index_Score",
     max(union_with_max.class) AS "arg_max_Score"
    FROM union_with_max
    WHERE union_with_max."max_Score" <= union_with_max."Score"
    GROUP BY union_with_max."index"
   ) AS "arg_max_t_Score"
   ON score_max."index" = "arg_max_t_Score"."index_Score"
 )
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."arg_max_Score" AS "Decision",
  CASE
   WHEN (arg_max_cte."arg_max_Score" = 0) THEN arg_max_cte."Proba_0"
   WHEN (arg_max_cte."arg_max_Score" = 1) THEN arg_max_cte."Proba_1"
 END AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END




COPY_TRAINING_DATA_TO_SQLITE_START
      X_0  X_1  X_2  X_3  X_4  X_5  ...  X_48  X_49  X_50  X_51  X_52   KEY
0     2.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   1.0   0.0   0.0     0
1     1.0  0.0  0.0  0.0  0.0  1.0  ...   0.0   0.0   1.0   0.0   0.0     1
2     1.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   1.0   0.0   0.0     2
3     1.0  0.0  0.0  1.0  0.0  0.0  ...   0.0   0.0   0.0   0.0   1.0     3
4     1.0  0.0  0.0  0.0  0.0  1.0  ...   0.0   0.0   1.0   0.0   0.0     4
...   ...  ...  ...  ...  ...  ...  ...   ...   ...   ...   ...   ...   ...
6100  2.0  0.0  0.0  1.0  0.0  0.0  ...   0.0   0.0   0.0   0.0   1.0  6100
6101  2.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   1.0   0.0   0.0  6101
6102  3.0  0.0  0.0  0.0  1.0  0.0  ...   0.0   0.0   1.0   0.0   0.0  6102
6103  1.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   1.0   0.0   0.0  6103
6104  4.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   1.0   0.0   0.0  6104

[6105 rows x 54 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
      index   Score_0   Proba_0  ...  LogProba_1  Decision  DecisionProba
0         0 -0.254405  0.375473  ...   -0.470760         1       0.624527
1         1  0.492801  0.728218  ...   -1.302756         0       0.728218
2         2 -1.076699  0.104014  ...   -0.109831         1       0.895986
3         3  0.029825  0.514908  ...   -0.723417         0       0.514908
4         4  0.312211  0.651224  ...   -1.053324         0       0.651224
...     ...       ...       ...  ...         ...       ...            ...
6100   6100 -0.279015  0.364003  ...   -0.452562         1       0.635997
6101   6101  0.410659  0.694516  ...   -1.185858         0       0.694516
6102   6102 -0.012575  0.493713  ...   -0.680651         1       0.506287
6103   6103  0.568795  0.757237  ...   -1.415669         0       0.757237
6104   6104  0.294407  0.643093  ...   -1.030280         0       0.643093

[6105 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
      index   Score_0  SQL_Proba_0  ...  Py_Proba_0  Py_Proba_1  Py_Decision
6089   6089  0.851980     0.846051  ...    0.833538    0.166462        <=50K
6090   6090  0.887259     0.855019  ...    0.840651    0.159349        <=50K
6091   6091  0.111067     0.555306  ...    0.548973    0.451027        <=50K
6092   6092  0.576725     0.760141  ...    0.748285    0.251715        <=50K
6093   6093  0.568795     0.757237  ...    0.747677    0.252322        <=50K
6094   6094  0.855010     0.846839  ...    0.834923    0.165077        <=50K
6095   6095 -0.162764     0.419329  ...    0.413066    0.586934         >50K
6096   6096  1.414697     0.944244  ...    0.938519    0.061481        <=50K
6097   6097  0.464710     0.716958  ...    0.698433    0.301567        <=50K
6098   6098  1.001636     0.881140  ...    0.872688    0.127312        <=50K
6099   6099  0.609096     0.771745  ...    0.747749    0.252251        <=50K
6100   6100 -0.279015     0.364003  ...    0.352937    0.647063         >50K
6101   6101  0.410659     0.694516  ...    0.662294    0.337706        <=50K
6102   6102 -0.012575     0.493713  ...    0.480888    0.519112         >50K
6103   6103  0.568795     0.757237  ...    0.754102    0.245898        <=50K
6104   6104  0.294407     0.643093  ...    0.578023    0.421977        <=50K

[16 rows x 12 columns]
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
