READING_CSV BinaryClass_10_tiny ['data/tiny/BinaryClass_10_tiny.csv']
         X_0       X_1       X_2  ...       X_8       X_9  target
0  -1.064559 -0.820872 -0.723270  ... -0.319080 -0.383915       0
1  -0.960957 -1.294560 -0.778172  ...  0.207019 -0.945521       0
2  -1.406136 -0.242116  1.301289  ... -1.426875  1.876952       1
3  -1.954561 -1.845000  0.508844  ... -1.374292  2.746056       0
4  -0.098659 -1.731538  2.272469  ...  1.740497  0.199837       1
5  -2.816561 -1.091985 -0.089846  ...  0.481645 -0.115846       1
6  -2.525895 -0.477894 -0.273729  ... -0.136594  0.296252       1
7  -2.810322  0.803423  0.052149  ...  1.221721  1.307240       1
8   0.509511 -0.339445 -0.100619  ...  0.213285 -1.199707       0
9  -0.366856 -2.698274  0.045788  ...  0.057282 -0.702300       0
10 -1.388256 -0.178366  0.039211  ... -1.172041 -0.253551       0
11  0.444082 -0.224036 -0.126428  ...  1.706341 -0.190966       1
12  1.360494  0.682985 -1.812859  ...  2.206119 -1.293514       0
13 -0.143033 -0.745429  1.941176  ...  0.532632 -2.605754       1
14  0.983214 -0.343181 -0.498688  ...  0.430213  0.588898       0
15 -0.890672  0.398898 -0.046821  ...  0.973574 -0.299585       1

[16 rows x 11 columns]
MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
('OPERATION_START', 'TRAINING')
[[-1.0645586  -0.8208718  -0.72327    -0.09642018 -0.40463343 -0.81522477
  -0.8386918   0.65200984 -0.31908    -0.3839149 ]
 [-0.9609572  -1.2945602  -0.77817184  0.8359748  -1.0189681  -0.12086504
  -0.68072116 -0.5189585   0.20701888 -0.9455213 ]
 [-1.4061359  -0.24211647  1.301289   -0.49436462  1.0264262   1.0800456
   1.3956257  -1.0432675  -1.426875    1.8769516 ]
 [-1.9545612  -1.8449999   0.5088439  -0.224022    0.66320896  0.0830382
   0.446295    0.53221494 -1.3742915   2.7460556 ]
 [-0.09865901 -1.7315376   2.2724695   0.11809641  1.0834117   2.8048902
   2.7064822   0.84583855  1.7404972   0.19983661]] [0 0 1 0 1]
MLLITE_FIT_USING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 3 4
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 4 4
('OPERATION_END_ELAPSED', 0.008, 'TRAINING')
{ ,   }
{ ,   }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 10 },
	"classes" : [ 0, 1 ],
	"equations" : {
		"class_1" : {
			"intercept" : -0.394584,
			"coeffs" : [ -0.394657, 0.296095, 0.233951, 0.161713, 0.048136, 0.177003, 0.228771, -0.188083, 0.366605, -0.048062 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_10_tiny.json'

RELOADING_MODEL_FROM_JSON_START ('BinaryClass_10_tiny', 'RidgeClassifier')
MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
MLLITE_RELOADING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 10 },
	"classes" : [ 0, 1 ],
	"equations" : {
		"class_1" : {
			"intercept" : -0.394584,
			"coeffs" : [ -0.394657, 0.296095, 0.233951, 0.161713, 0.048136, 0.177003, 0.228771, -0.188083, 0.366605, -0.048062 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1 ],
	"dataset" : 	{
		"dataset_features" : 10,
		"dataset_rows" : 16
	},
	"equations" : 	{
		"class_1" : 	{
			"coeffs" : [ -0.394657, 0.296095, 0.233951, 0.161713, 0.048136, 0.177003, 0.228771, -0.188083, 0.366605, -0.048062 ],
			"intercept" : -0.394584
		}
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_il8", "version" : "2024-W14" },
	"options" :  { "alpha" : 1.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
RELOADING_MODEL_FROM_JSON_END ('BinaryClass_10_tiny', 'RidgeClassifier')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0.7269 0.2731]
 [0.6113 0.3887]
 [0.388  0.612 ]
 [0.6624 0.3376]
 [0.2109 0.7891]
 [0.4249 0.5751]
 [0.392  0.608 ]
 [0.1764 0.8236]
 [0.7402 0.2598]
 [0.7313 0.2687]
 [0.5841 0.4159]
 [0.4307 0.5693]
 [0.7053 0.2947]
 [0.2711 0.7289]
 [0.6939 0.3061]
 [0.2974 0.7026]]
(16, 2)
(16,) float32
MODEL_PERFS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'BinaryClass_10_tiny', 'size': 16, 'accuracy': 1.0, 'auc': 1.0}
WRITING_PERF_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_10_tiny.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'BinaryClass_10_tiny', 'training_time_in_sec': 0.008, 'prediction_time_in_sec': 0.0}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 0 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 1 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 2 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 3 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 4 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 5 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 6 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 7 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 8 10
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 9 10
{
   "Contributions" : {
      "X_0" : [ 0.020383, -0.020383 ],
      "X_1" : [ 0.002582, -0.002582 ],
      "X_2" : [ -0.005762, 0.005762 ],
      "X_3" : [ -0.007331, 0.007331 ],
      "X_4" : [ -0.000100, 0.000100 ],
      "X_5" : [ -0.007049, 0.007049 ],
      "X_6" : [ -0.007196, 0.007196 ],
      "X_7" : [ 0.008761, -0.008761 ],
      "X_8" : [ -0.008730, 0.008730 ],
      "X_9" : [ -0.000913, 0.000913 ]   
   },
   "Most_Contributive_Features_By_Class" : {
      "class_0" : [ 0, 7, 8, 3, 6, 5, 2, 1, 9, 4 ],
      "class_1" : [ 0, 7, 8, 3, 6, 5, 2, 1, 9, 4 ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_10_tiny_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_10_tiny_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('BinaryClass_10_tiny', 'RidgeClassifier', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "BinaryClass_10_tiny" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT t."index" AS "index",
   -0.5 * ( -0.394584 + -0.394657 * t."X_0" + 0.296095 * t."X_1" + 0.233951 * t."X_2" + 0.161713 * t."X_3" + 0.048136 * t."X_4" + 0.177003 * t."X_5" + 0.228771 * t."X_6" + -0.188083 * t."X_7" + 0.366605 * t."X_8" + -0.048062 * t."X_9" ) AS "Score_0",
   CAST(NULL AS FLOAT) AS "Proba_0",
   CAST(NULL AS FLOAT) AS "LogProba_0",
   0.5 * ( -0.394584 + -0.394657 * t."X_0" + 0.296095 * t."X_1" + 0.233951 * t."X_2" + 0.161713 * t."X_3" + 0.048136 * t."X_4" + 0.177003 * t."X_5" + 0.228771 * t."X_6" + -
SQL_OUT_PUT_FIRST_LINES_END ('BinaryClass_10_tiny', 'RidgeClassifier', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('BinaryClass_10_tiny', 'RidgeClassifier', 'duckdb')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('BinaryClass_10_tiny', 'RidgeClassifier', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 16 entries, 0 to 15
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     16 non-null     float32
 1   X_1     16 non-null     float32
 2   X_2     16 non-null     float32
 3   X_3     16 non-null     float32
 4   X_4     16 non-null     float32
 5   X_5     16 non-null     float32
 6   X_6     16 non-null     float32
 7   X_7     16 non-null     float32
 8   X_8     16 non-null     float32
 9   X_9     16 non-null     float32
dtypes: float32(10)
memory usage: 768.0 bytes
            X_0       X_1       X_2  ...       X_7       X_8       X_9
index                                ...                              
0     -1.064559 -0.820872 -0.723270  ...  0.652010 -0.319080 -0.383915
1     -0.960957 -1.294560 -0.778172  ... -0.518959  0.207019 -0.945521
2     -1.406136 -0.242116  1.301289  ... -1.043267 -1.426875  1.876952
3     -1.954561 -1.845000  0.508844  ...  0.532215 -1.374292  2.746056
4     -0.098659 -1.731538  2.272470  ...  0.845839  1.740497  0.199837
5     -2.816561 -1.091985 -0.089846  ... -0.176273  0.481645 -0.115846
6     -2.525896 -0.477894 -0.273729  ...  1.096727 -0.136594  0.296252
7     -2.810322  0.803423  0.052149  ... -0.584702  1.221721  1.307240
8      0.509511 -0.339445 -0.100619  ...  0.303728  0.213285 -1.199707
9     -0.366856 -2.698274  0.045788  ... -0.850652  0.057282 -0.702300
10    -1.388256 -0.178366  0.039211  ... -0.225993 -1.172041 -0.253551
11     0.444082 -0.224036 -0.126428  ... -0.491621  1.706341 -0.190966
12     1.360494  0.682985 -1.812859  ... -0.935174  2.206119 -1.293514
13    -0.143033 -0.745429  1.941176  ...  1.262047  0.532632 -2.605754
14     0.983214 -0.343181 -0.498688  ... -0.797164  0.430213  0.588898
15    -0.890672  0.398898 -0.046821  ... -2.143014  0.973574 -0.299585

[16 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 16 entries, 0 to 15
Data columns (total 9 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          16 non-null     int64  
 1   Score_0        16 non-null     float64
 2   Proba_0        16 non-null     float64
 3   LogProba_0     16 non-null     float64
 4   Score_1        16 non-null     float64
 5   Proba_1        16 non-null     float64
 6   LogProba_1     16 non-null     float64
 7   Decision       16 non-null     int64  
 8   DecisionProba  16 non-null     float64
dtypes: float64(7), int64(2)
memory usage: 1.3 KB
    index   Score_0   Proba_0  ...  LogProba_1  Decision  DecisionProba
0       0  0.489553  0.726931  ...   -1.298030         0       0.726931
1       1  0.226371  0.611291  ...   -0.944924         0       0.611291
2       2 -0.227965  0.387952  ...   -0.490944         1       0.612048
3       3  0.336931  0.662368  ...   -1.085797         0       0.662368
4       4 -0.659785  0.210890  ...   -0.236849         1       0.789110
5       5 -0.151330  0.424907  ...   -0.553224         1       0.575093
6       6 -0.219359  0.392047  ...   -0.497657         1       0.607953
7       7 -0.770330  0.176439  ...   -0.194118         1       0.823561
8       8  0.523517  0.740205  ...   -1.347862         0       0.740205
9       9  0.500642  0.731311  ...   -1.314200         0       0.731311
10     10  0.169904  0.584144  ...   -0.877416         0       0.584144
11     11 -0.139593  0.430653  ...   -0.563266         1       0.569347
12     12  0.436368  0.705315  ...   -1.221847         0       0.705315
13     13 -0.494488  0.271114  ...   -0.316238         1       0.728886
14     14  0.409310  0.693943  ...   -1.183985         0       0.693943
15     15 -0.429743  0.297447  ...   -0.353034         1       0.702553

[16 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
    index   Score_0  SQL_Proba_0  ...  Py_Proba_0  Py_Proba_1  Py_Decision
0       0  0.489553     0.726931  ...    0.726931    0.273069            0
1       1  0.226371     0.611291  ...    0.611290    0.388710            0
2       2 -0.227965     0.387952  ...    0.387952    0.612048            1
3       3  0.336931     0.662368  ...    0.662368    0.337632            0
4       4 -0.659785     0.210890  ...    0.210890    0.789110            1
5       5 -0.151330     0.424907  ...    0.424907    0.575093            1
6       6 -0.219359     0.392047  ...    0.392046    0.607954            1
7       7 -0.770330     0.176439  ...    0.176439    0.823561            1
8       8  0.523517     0.740205  ...    0.740205    0.259795            0
9       9  0.500642     0.731311  ...    0.731311    0.268689            0
10     10  0.169904     0.584144  ...    0.584144    0.415856            0
11     11 -0.139593     0.430653  ...    0.430653    0.569347            1
12     12  0.436368     0.705315  ...    0.705314    0.294686            0
13     13 -0.494488     0.271114  ...    0.271114    0.728886            1
14     14  0.409310     0.693943  ...    0.693944    0.306056            0
15     15 -0.429743     0.297447  ...    0.297447    0.702553            1

[16 rows x 12 columns]
MLLITE_CLASS_SQL_ERROR ('BinaryClass_10_tiny', 'RidgeClassifier', 'duckdb') ('Py_Proba_0', 'SQL_Proba_0') 1.8583538181730919e-07
    Py_Proba_0  SQL_Proba_0   SQL_Error_0
0     0.726931     0.726931 -2.338484e-07
1     0.611290     0.611291 -2.989605e-07
2     0.387952     0.387952  4.616408e-07
3     0.662368     0.662368  1.933941e-07
4     0.210890     0.210890 -7.063056e-08
5     0.424907     0.424907 -3.691485e-07
6     0.392046     0.392047 -2.871041e-07
7     0.176439     0.176439 -8.692373e-08
8     0.740205     0.740205 -6.413504e-08
9     0.731311     0.731311 -2.663329e-08
10    0.584144     0.584144  1.490474e-08
11    0.430653     0.430653 -1.951952e-07
12    0.705314     0.705315 -2.810389e-07
13    0.271114     0.271114 -2.570860e-07
14    0.693944     0.693943  1.273879e-07
15    0.297447     0.297447  5.334513e-09
MLLITE_CLASS_SQL_ERROR ('BinaryClass_10_tiny', 'RidgeClassifier', 'duckdb') ('Py_Proba_1', 'SQL_Proba_1') 1.8237460001901962e-07
    Py_Proba_1  SQL_Proba_1   SQL_Error_1
0     0.273069     0.273069  2.338484e-07
1     0.388710     0.388709  2.691581e-07
2     0.612048     0.612048 -4.020361e-07
3     0.337632     0.337632 -2.231964e-07
4     0.789110     0.789110  5.572940e-08
5     0.575093     0.575093  3.691485e-07
6     0.607954     0.607953  3.169064e-07
7     0.823561     0.823561  8.692373e-08
8     0.259795     0.259795  6.413504e-08
9     0.268689     0.268689  1.160403e-07
10    0.415856     0.415856 -7.450938e-08
11    0.569347     0.569347  1.355906e-07
12    0.294686     0.294685  1.916319e-07
13    0.728886     0.728886  2.272837e-07
14    0.306056     0.306057 -1.273879e-07
15    0.702553     0.702553  2.446781e-08
MLLITE_CLASS_SQL_EXECUTION_STATUS ('BinaryClass_10_tiny', 'RidgeClassifier', 'duckdb', 'Success')
    Py_Decision  SQL_Decision
0             0             0
1             0             0
2             1             1
3             0             0
4             1             1
5             1             1
6             1             1
7             1             1
8             0             0
9             0             0
10            0             0
11            1             1
12            0             0
13            1             1
14            0             0
15            1             1
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_10_tiny_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('BinaryClass_10_tiny', 'RidgeClassifier', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "BinaryClass_10_tiny" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT t."index" AS "index",
   -0.5 * ( -0.394584 + -0.394657 * t."X_0" + 0.296095 * t."X_1" + 0.233951 * t."X_2" + 0.161713 * t."X_3" + 0.048136 * t."X_4" + 0.177003 * t."X_5" + 0.228771 * t."X_6" + -0.188083 * t."X_7" + 0.366605 * t."X_8" + -0.048062 * t."X_9" ) AS "Score_0",
   CAST(NULL AS FLOAT) AS "Proba_0",
   CAST(NULL AS FLOAT) AS "LogProba_0",
   0.5 * ( -0.394584 + -0.394657 * t."X_0" + 0.296095 * t."X_1" + 0.233951 * t."X_2" + 0.161713 * t."X_3" + 0.048136 * t."X_4" + 0.177003 * t."X_5" + 0.228771 * t."X_6" + -
SQL_OUT_PUT_FIRST_LINES_END ('BinaryClass_10_tiny', 'RidgeClassifier', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('BinaryClass_10_tiny', 'RidgeClassifier', 'sqlite')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('BinaryClass_10_tiny', 'RidgeClassifier', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 16 entries, 0 to 15
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     16 non-null     float32
 1   X_1     16 non-null     float32
 2   X_2     16 non-null     float32
 3   X_3     16 non-null     float32
 4   X_4     16 non-null     float32
 5   X_5     16 non-null     float32
 6   X_6     16 non-null     float32
 7   X_7     16 non-null     float32
 8   X_8     16 non-null     float32
 9   X_9     16 non-null     float32
dtypes: float32(10)
memory usage: 768.0 bytes
            X_0       X_1       X_2  ...       X_7       X_8       X_9
index                                ...                              
0     -1.064559 -0.820872 -0.723270  ...  0.652010 -0.319080 -0.383915
1     -0.960957 -1.294560 -0.778172  ... -0.518959  0.207019 -0.945521
2     -1.406136 -0.242116  1.301289  ... -1.043267 -1.426875  1.876952
3     -1.954561 -1.845000  0.508844  ...  0.532215 -1.374292  2.746056
4     -0.098659 -1.731538  2.272470  ...  0.845839  1.740497  0.199837
5     -2.816561 -1.091985 -0.089846  ... -0.176273  0.481645 -0.115846
6     -2.525896 -0.477894 -0.273729  ...  1.096727 -0.136594  0.296252
7     -2.810322  0.803423  0.052149  ... -0.584702  1.221721  1.307240
8      0.509511 -0.339445 -0.100619  ...  0.303728  0.213285 -1.199707
9     -0.366856 -2.698274  0.045788  ... -0.850652  0.057282 -0.702300
10    -1.388256 -0.178366  0.039211  ... -0.225993 -1.172041 -0.253551
11     0.444082 -0.224036 -0.126428  ... -0.491621  1.706341 -0.190966
12     1.360494  0.682985 -1.812859  ... -0.935174  2.206119 -1.293514
13    -0.143033 -0.745429  1.941176  ...  1.262047  0.532632 -2.605754
14     0.983214 -0.343181 -0.498688  ... -0.797164  0.430213  0.588898
15    -0.890672  0.398898 -0.046821  ... -2.143014  0.973574 -0.299585

[16 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 16 entries, 0 to 15
Data columns (total 9 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          16 non-null     int64  
 1   Score_0        16 non-null     float64
 2   Proba_0        16 non-null     float64
 3   LogProba_0     16 non-null     float64
 4   Score_1        16 non-null     float64
 5   Proba_1        16 non-null     float64
 6   LogProba_1     16 non-null     float64
 7   Decision       16 non-null     int64  
 8   DecisionProba  16 non-null     float64
dtypes: float64(7), int64(2)
memory usage: 1.3 KB
    index   Score_0   Proba_0  ...  LogProba_1  Decision  DecisionProba
0       0  0.489553  0.726931  ...   -1.298030         0       0.726931
1       1  0.226371  0.611291  ...   -0.944924         0       0.611291
2       2 -0.227965  0.387952  ...   -0.490944         1       0.612048
3       3  0.336931  0.662368  ...   -1.085797         0       0.662368
4       4 -0.659785  0.210890  ...   -0.236849         1       0.789110
5       5 -0.151330  0.424907  ...   -0.553224         1       0.575093
6       6 -0.219359  0.392047  ...   -0.497657         1       0.607953
7       7 -0.770330  0.176439  ...   -0.194118         1       0.823561
8       8  0.523517  0.740205  ...   -1.347862         0       0.740205
9       9  0.500642  0.731311  ...   -1.314200         0       0.731311
10     10  0.169904  0.584144  ...   -0.877416         0       0.584144
11     11 -0.139593  0.430653  ...   -0.563266         1       0.569347
12     12  0.436368  0.705315  ...   -1.221847         0       0.705315
13     13 -0.494488  0.271114  ...   -0.316238         1       0.728886
14     14  0.409310  0.693943  ...   -1.183985         0       0.693943
15     15 -0.429743  0.297447  ...   -0.353034         1       0.702553

[16 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
    index   Score_0  SQL_Proba_0  ...  Py_Proba_0  Py_Proba_1  Py_Decision
0       0  0.489553     0.726931  ...    0.726931    0.273069            0
1       1  0.226371     0.611291  ...    0.611290    0.388710            0
2       2 -0.227965     0.387952  ...    0.387952    0.612048            1
3       3  0.336931     0.662368  ...    0.662368    0.337632            0
4       4 -0.659785     0.210890  ...    0.210890    0.789110            1
5       5 -0.151330     0.424907  ...    0.424907    0.575093            1
6       6 -0.219359     0.392047  ...    0.392046    0.607954            1
7       7 -0.770330     0.176439  ...    0.176439    0.823561            1
8       8  0.523517     0.740205  ...    0.740205    0.259795            0
9       9  0.500642     0.731311  ...    0.731311    0.268689            0
10     10  0.169904     0.584144  ...    0.584144    0.415856            0
11     11 -0.139593     0.430653  ...    0.430653    0.569347            1
12     12  0.436368     0.705315  ...    0.705314    0.294686            0
13     13 -0.494488     0.271114  ...    0.271114    0.728886            1
14     14  0.409310     0.693943  ...    0.693944    0.306056            0
15     15 -0.429743     0.297447  ...    0.297447    0.702553            1

[16 rows x 12 columns]
MLLITE_CLASS_SQL_ERROR ('BinaryClass_10_tiny', 'RidgeClassifier', 'sqlite') ('Py_Proba_0', 'SQL_Proba_0') 1.9027357758827357e-07
    Py_Proba_0  SQL_Proba_0   SQL_Error_0
0     0.726931     0.726931 -2.206183e-07
1     0.611290     0.611291 -3.016528e-07
2     0.387952     0.387952  4.721247e-07
3     0.662368     0.662368  2.023901e-07
4     0.210890     0.210890 -8.374391e-08
5     0.424907     0.424907 -3.495800e-07
6     0.392046     0.392047 -2.854085e-07
7     0.176439     0.176439 -7.423050e-08
8     0.740205     0.740205 -7.963658e-08
9     0.731311     0.731311  7.180671e-09
10    0.584144     0.584144  3.583061e-08
11    0.430653     0.430653 -1.973554e-07
12    0.705314     0.705315 -3.125147e-07
13    0.271114     0.271114 -2.679308e-07
14    0.693944     0.693943  1.404513e-07
15    0.297447     0.297447  1.372833e-08
MLLITE_CLASS_SQL_ERROR ('BinaryClass_10_tiny', 'RidgeClassifier', 'sqlite') ('Py_Proba_1', 'SQL_Proba_1') 1.8486598446151858e-07
    Py_Proba_1  SQL_Proba_1   SQL_Error_1
0     0.273069     0.273069  2.206183e-07
1     0.388710     0.388709  2.718505e-07
2     0.612048     0.612048 -4.125201e-07
3     0.337632     0.337632 -2.321924e-07
4     0.789110     0.789110  6.884275e-08
5     0.575093     0.575093  3.495800e-07
6     0.607954     0.607953  3.152109e-07
7     0.823561     0.823561  7.423050e-08
8     0.259795     0.259795  7.963658e-08
9     0.268689     0.268689  8.222630e-08
10    0.415856     0.415856 -9.543525e-08
11    0.569347     0.569347  1.377508e-07
12    0.294686     0.294685  2.231077e-07
13    0.728886     0.728886  2.381285e-07
14    0.306056     0.306057 -1.404513e-07
15    0.702553     0.702553  1.607399e-08
MLLITE_CLASS_SQL_EXECUTION_STATUS ('BinaryClass_10_tiny', 'RidgeClassifier', 'sqlite', 'Success')
    Py_Decision  SQL_Decision
0             0             0
1             0             0
2             1             1
3             0             0
4             1             1
5             1             1
6             1             1
7             1             1
8             0             0
9             0             0
10            0             0
11            1             1
12            0             0
13            1             1
14            0             0
15            1             1
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
