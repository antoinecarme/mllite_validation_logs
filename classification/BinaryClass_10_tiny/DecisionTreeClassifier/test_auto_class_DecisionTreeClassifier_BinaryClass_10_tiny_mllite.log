         X_0       X_1       X_2  ...       X_8       X_9  target
0  -1.064559 -0.820872 -0.723270  ... -0.319080 -0.383915       0
1  -0.960957 -1.294560 -0.778172  ...  0.207019 -0.945521       0
2  -1.406136 -0.242116  1.301289  ... -1.426875  1.876952       1
3  -1.954561 -1.845000  0.508844  ... -1.374292  2.746056       0
4  -0.098659 -1.731538  2.272469  ...  1.740497  0.199837       1
5  -2.816561 -1.091985 -0.089846  ...  0.481645 -0.115846       1
6  -2.525895 -0.477894 -0.273729  ... -0.136594  0.296252       1
7  -2.810322  0.803423  0.052149  ...  1.221721  1.307240       1
8   0.509511 -0.339445 -0.100619  ...  0.213285 -1.199707       0
9  -0.366856 -2.698274  0.045788  ...  0.057282 -0.702300       0
10 -1.388256 -0.178366  0.039211  ... -1.172041 -0.253551       0
11  0.444082 -0.224036 -0.126428  ...  1.706341 -0.190966       1
12  1.360494  0.682985 -1.812859  ...  2.206119 -1.293514       0
13 -0.143033 -0.745429  1.941176  ...  0.532632 -2.605754       1
14  0.983214 -0.343181 -0.498688  ...  0.430213  0.588898       0
15 -0.890672  0.398898 -0.046821  ...  0.973574 -0.299585       1

[16 rows x 11 columns]
MLLITE_MODEL_SET_OPTIONS DecisionTreeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT DecisionTreeClassifier { "max_leaf_nodes" : 64}
MLLITE_MODEL_OPTIONS_AFTER_SETTING DecisionTreeClassifier { ,  "max_leaf_nodes" : 64 }
MLLITE_MODEL_JSON_AFTER_SETTING DecisionTreeClassifier None
('OPERATION_START', 'TRAINING')
[[-1.0645586  -0.8208718  -0.72327    -0.09642018 -0.40463343 -0.81522477
  -0.8386918   0.65200984 -0.31908    -0.3839149 ]
 [-0.9609572  -1.2945602  -0.77817184  0.8359748  -1.0189681  -0.12086504
  -0.68072116 -0.5189585   0.20701888 -0.9455213 ]
 [-1.4061359  -0.24211647  1.301289   -0.49436462  1.0264262   1.0800456
   1.3956257  -1.0432675  -1.426875    1.8769516 ]
 [-1.9545612  -1.8449999   0.5088439  -0.224022    0.66320896  0.0830382
   0.446295    0.53221494 -1.3742915   2.7460556 ]
 [-0.09865901 -1.7315376   2.2724695   0.11809641  1.0834117   2.8048902
   2.7064822   0.84583855  1.7404972   0.19983661]] [0 0 1 0 1]
MLLITE_FIT_USING_MODEL mllite_decision_tree_class.DecisionTreeClassifier_ff4_il8
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ib1_ib1'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ib1_ih2'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ib1_ii4'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ib1_il8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ib1_ff4'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ib1_fd8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ib1_OO8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ih2_ib1'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ih2_ih2'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ih2_ii4'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ih2_il8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ih2_ff4'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ih2_fd8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ih2_OO8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ii4_ib1'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ii4_ih2'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ii4_ii4'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ii4_il8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ii4_ff4'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ii4_fd8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ii4_OO8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_il8_ib1'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_il8_ih2'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_il8_ii4'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_il8_il8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_il8_ff4'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_il8_fd8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_il8_OO8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ff4_ib1'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ff4_ih2'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ff4_ii4'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ff4_il8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ff4_ff4'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ff4_fd8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ff4_OO8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_fd8_ib1'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_fd8_ih2'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_fd8_ii4'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_fd8_il8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_fd8_ff4'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_fd8_fd8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_fd8_OO8'
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_CLASSIFIER_FIT' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 0 16
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 16 16
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_CLASSIFIER_FIT' 2 4
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_CLASSIFIER_FIT' 3 4
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_CLASSIFIER_FIT' 4 4
('OPERATION_END_ELAPSED', 0.007, 'TRAINING')
{ ,  "max_leaf_nodes" : 64 }
{ ,  "max_leaf_nodes" : 64 }
{
	"metadata" : { "model" : "Breiman_CART", "version" : "2024-W12", "signature" : "ff4_il8"},
	"options" : { "ccp_alpha" : 0.000000, "criterion" : "", "max_depth" : null, "max_features" : null, "max_leaf_nodes" : 64, "min_impurity_decrease" : 0.000000, "min_samples_leaf" : 1, "min_samples_split" : 2, "min_weight_fraction_leaf" : 0.000000, "random_state" : 1789, "splitter" : "best" },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 10 },
	"classes" : [ 0, 1 ],
	"tree" : {
	"features" : 10,
	"outputs" : 2,
	"max_depth" : 1,
	"node_count" : 5,
	"nodes" : {
		"node_0" : {"left" : 1, "right" : 2, "feature" : 6, "threshold" : -0.259701, "impurity" : 0.500000, "n_samples" : 16, "w_samples" : 16.000000, "value" : [0.500000, 0.500000]},
		"node_1" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 7, "w_samples" : 7.000000, "value" : [1.000000, 0.000000]},
		"node_2" : {"left" : 3, "right" : 4, "feature" : 1, "threshold" : -1.788269, "impurity" : 0.197531, "n_samples" : 9, "w_samples" : 9.000000, "value" : [0.111111, 0.888889]},
		"node_3" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.000000, 0.000000]},
		"node_4" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 8, "w_samples" : 8.000000, "value" : [0.000000, 1.000000]}
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/DecisionTreeClassifier/mllite.DecisionTreeClassifier_BinaryClass_10_tiny.json'

MLLITE_MODEL_SET_OPTIONS DecisionTreeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT DecisionTreeClassifier { "max_leaf_nodes" : 64}
MLLITE_MODEL_OPTIONS_AFTER_SETTING DecisionTreeClassifier { ,  "max_leaf_nodes" : 64 }
MLLITE_MODEL_JSON_AFTER_SETTING DecisionTreeClassifier None
MLLITE_RELOADING_MODEL mllite_decision_tree_class.DecisionTreeClassifier_ff4_il8
{
	"metadata" : { "model" : "Breiman_CART", "version" : "2024-W12", "signature" : "ff4_il8"},
	"options" : { "ccp_alpha" : 0.000000, "criterion" : "", "max_depth" : null, "max_features" : null, "max_leaf_nodes" : 64, "min_impurity_decrease" : 0.000000, "min_samples_leaf" : 1, "min_samples_split" : 2, "min_weight_fraction_leaf" : 0.000000, "random_state" : 1789, "splitter" : "best" },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 10 },
	"classes" : [ 0, 1 ],
	"tree" : {
	"features" : 10,
	"outputs" : 2,
	"max_depth" : 1,
	"node_count" : 5,
	"nodes" : {
		"node_0" : {"left" : 1, "right" : 2, "feature" : 6, "threshold" : -0.259701, "impurity" : 0.500000, "n_samples" : 16, "w_samples" : 16.000000, "value" : [0.500000, 0.500000]},
		"node_1" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 7, "w_samples" : 7.000000, "value" : [1.000000, 0.000000]},
		"node_2" : {"left" : 3, "right" : 4, "feature" : 1, "threshold" : -1.788269, "impurity" : 0.197531, "n_samples" : 9, "w_samples" : 9.000000, "value" : [0.111111, 0.888889]},
		"node_3" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.000000, 0.000000]},
		"node_4" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 8, "w_samples" : 8.000000, "value" : [0.000000, 1.000000]}
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1 ],
	"dataset" : 	{
		"dataset_features" : 10,
		"dataset_rows" : 16
	},
	"metadata" :  { "model" : "Breiman_CART", "signature" : "ff4_il8", "version" : "2024-W12" },
	"options" :  { "ccp_alpha" : 0.0, "criterion" : "", "max_depth" : null, "max_features" : null, "max_leaf_nodes" : 64, "min_impurity_decrease" : 0.0, "min_samples_leaf" : 1, "min_samples_split" : 2, "min_weight_fraction_leaf" : 0.0, "random_state" : 1789, "splitter" : "best" },
	"tree" : 	{
		"features" : 10,
		"max_depth" : 1,
		"node_count" : 5,
		"nodes" : 	{
			"node_0" :  { "feature" : 6, "impurity" : 0.5, "left" : 1, "n_samples" : 16, "right" : 2, "threshold" : -0.259701, "value" : [ 0.5, 0.5 ], "w_samples" : 16.0 },
			"node_1" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 7, "right" : null, "threshold" : null, "value" : [ 1.0, 0.0 ], "w_samples" : 7.0 },
			"node_2" :  { "feature" : 1, "impurity" : 0.197531, "left" : 3, "n_samples" : 9, "right" : 4, "threshold" : -1.788269, "value" : [ 0.111111, 0.888889 ], "w_samples" : 9.0 },
			"node_3" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 1.0, 0.0 ], "w_samples" : 1.0 },
			"node_4" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 8, "right" : null, "threshold" : null, "value" : [ 0.0, 1.0 ], "w_samples" : 8.0 }
		},
		"outputs" : 2
	}
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[1. 0.]
 [1. 0.]
 [0. 1.]
 [1. 0.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [0. 1.]
 [1. 0.]
 [0. 1.]
 [1. 0.]
 [0. 1.]]
(16, 2)
(16,) float32
MODEL_PERFS {'class_name': 'mllite.DecisionTreeClassifier', 'model_name': 'DecisionTreeClassifier', 'options': None, 'dataset': 'BinaryClass_10_tiny', 'size': 16, 'accuracy': 1.0, 'auc': 1.0}
WRITING_PERF_CODE 'logs/auto_tests/classification/DecisionTreeClassifier/mllite.DecisionTreeClassifier_BinaryClass_10_tiny.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.DecisionTreeClassifier', 'model_name': 'DecisionTreeClassifier', 'options': None, 'dataset': 'BinaryClass_10_tiny', 'training_time_in_sec': 0.007, 'prediction_time_in_sec': 0.0}
WRITING_SQL_CODE 'logs/auto_tests/classification/DecisionTreeClassifier/mllite.DecisionTreeClassifier_BinaryClass_10_tiny.sql'



SQL_OUT_PUT_FIRST_LINES_START
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
"DT_node_lookup" AS 
 (SELECT
    t."index" AS "index",
    COALESCE( t1."Leaf_1", t1."Leaf_3", t1."Leaf_4" ) AS node_id
  FROM
    model_input t
    LEFT OUTER JOIN
   (SELECT
      t."index" AS "index",
      CASE WHEN((t."X_6" <= -0.259701)) THEN 1 ELSE NULL END AS Leaf_1,
      CASE WHEN((t."X_6" > -0.259701) AND (t."X_1" <= -1.788269)) THEN 3 ELSE NULL END AS Leaf_3,
      CASE WHEN((t."X_6" > -0.259701) AND (t."X_1" > -1.788269)) THEN 4 ELSE NULL END AS Leaf_4
    FROM model_input t
    ) AS t1
    ON(t."index" == t1."index")
 ),
"DT_node_da
SQL_OUT_PUT_FIRST_LINES_END
SQL_OUT_PUT_LAST_LINES_START
AS "P_0", 0.000000 AS "P_1", 0 AS "D", 1.000000 AS "DP"
    UNION ALL
    SELECT 4 AS nid,  0.000000 AS "P_0", 1.000000 AS "P_1", 1 AS "D", 1.000000 AS "DP"
  ) AS "Values"),
"DT_output" AS 
 (SELECT
   t1."index" AS "index",
   t1.node_id AS node_id,
   t2.nid AS nid,
   t2."P_0" AS "P_0", t2."P_1" AS "P_1", 
   t2."D" AS "D", 
   t2."DP" AS "DP"
  FROM
   "DT_node_lookup" AS t1
   LEFT OUTER JOIN
   "DT_node_data" AS t2
   ON t1.node_id = t2.nid
 )
SELECT
   "DT_Output"."index" AS "index",
   CAST(NULL AS FLOAT)  AS "Score_0",
   "DT_Output"."P_0" AS "Proba_0",
   CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN LN( "DT_Output"."P_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
   CAST(NULL AS FLOAT)  AS "Score_1",
   "DT_Output"."P_1" AS "Proba_1",
   CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN LN( "DT_Output"."P_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
   "DT_Output"."D" AS "Decision",
   "DT_Output"."DP" AS "DecisionProba"
FROM "DT_Output"
SQL_OUT_PUT_LAST_LINES_END




COPY_TRAINING_DATA_TO_SQLITE_START
         X_0       X_1       X_2       X_3  ...       X_7       X_8       X_9  KEY
0  -1.064559 -0.820872 -0.723270 -0.096420  ...  0.652010 -0.319080 -0.383915    0
1  -0.960957 -1.294560 -0.778172  0.835975  ... -0.518959  0.207019 -0.945521    1
2  -1.406136 -0.242116  1.301289 -0.494365  ... -1.043267 -1.426875  1.876952    2
3  -1.954561 -1.845000  0.508844 -0.224022  ...  0.532215 -1.374292  2.746056    3
4  -0.098659 -1.731538  2.272470  0.118096  ...  0.845839  1.740497  0.199837    4
5  -2.816561 -1.091985 -0.089846 -1.001222  ... -0.176273  0.481645 -0.115846    5
6  -2.525896 -0.477894 -0.273729  1.188786  ...  1.096727 -0.136594  0.296252    6
7  -2.810322  0.803423  0.052149 -2.649015  ... -0.584702  1.221721  1.307240    7
8   0.509511 -0.339445 -0.100619  0.563929  ...  0.303728  0.213285 -1.199707    8
9  -0.366856 -2.698274  0.045788  0.314876  ... -0.850652  0.057282 -0.702300    9
10 -1.388256 -0.178366  0.039211  0.978269  ... -0.225993 -1.172041 -0.253551   10
11  0.444082 -0.224036 -0.126428  0.204438  ... -0.491621  1.706341 -0.190966   11
12  1.360494  0.682985 -1.812859 -0.395256  ... -0.935174  2.206119 -1.293514   12
13 -0.143033 -0.745429  1.941176  0.378268  ...  1.262047  0.532632 -2.605754   13
14  0.983214 -0.343181 -0.498688  0.163199  ... -0.797164  0.430213  0.588898   14
15 -0.890672  0.398898 -0.046821 -0.951328  ... -2.143014  0.973574 -0.299585   15

[16 rows x 11 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
    index Score_0  Proba_0  ...     LogProba_1 Decision  DecisionProba
0       0    None      1.0  ... -1.797693e+308        0            1.0
1       1    None      1.0  ... -1.797693e+308        0            1.0
2       2    None      0.0  ...   0.000000e+00        1            1.0
3       3    None      1.0  ... -1.797693e+308        0            1.0
4       4    None      0.0  ...   0.000000e+00        1            1.0
5       5    None      0.0  ...   0.000000e+00        1            1.0
6       6    None      0.0  ...   0.000000e+00        1            1.0
7       7    None      0.0  ...   0.000000e+00        1            1.0
8       8    None      1.0  ... -1.797693e+308        0            1.0
9       9    None      1.0  ... -1.797693e+308        0            1.0
10     10    None      1.0  ... -1.797693e+308        0            1.0
11     11    None      0.0  ...   0.000000e+00        1            1.0
12     12    None      1.0  ... -1.797693e+308        0            1.0
13     13    None      0.0  ...   0.000000e+00        1            1.0
14     14    None      1.0  ... -1.797693e+308        0            1.0
15     15    None      0.0  ...   0.000000e+00        1            1.0

[16 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
    index Score_0  SQL_Proba_0  ...  Py_Proba_0 Py_Proba_1  Py_Decision
0       0    None          1.0  ...         1.0        0.0            0
1       1    None          1.0  ...         1.0        0.0            0
2       2    None          0.0  ...         0.0        1.0            1
3       3    None          1.0  ...         1.0        0.0            0
4       4    None          0.0  ...         0.0        1.0            1
5       5    None          0.0  ...         0.0        1.0            1
6       6    None          0.0  ...         0.0        1.0            1
7       7    None          0.0  ...         0.0        1.0            1
8       8    None          1.0  ...         1.0        0.0            0
9       9    None          1.0  ...         1.0        0.0            0
10     10    None          1.0  ...         1.0        0.0            0
11     11    None          0.0  ...         0.0        1.0            1
12     12    None          1.0  ...         1.0        0.0            0
13     13    None          0.0  ...         0.0        1.0            1
14     14    None          1.0  ...         1.0        0.0            0
15     15    None          0.0  ...         0.0        1.0            1

[16 rows x 12 columns]
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
