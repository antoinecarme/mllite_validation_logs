         X_0       X_1       X_2  ...       X_8       X_9  target
0  -1.050659  0.920640 -0.455125  ... -0.010797 -1.586949       2
1   1.869880 -2.312190 -1.153852  ... -1.648043  2.109906       3
2  -0.124049  0.768644 -1.040184  ...  1.247335 -1.413962       1
3   0.928858 -1.177375  0.542731  ...  0.485529  1.106564       0
4  -1.598324  1.482463  1.664691  ...  1.816533  0.637000       3
..       ...       ...       ...  ...       ...       ...     ...
59  1.914430 -1.187978 -1.908593  ...  1.147780 -0.640430       1
60 -2.300030  2.981089  1.310992  ...  0.000418  0.598406       0
61 -0.438059 -0.593217  0.535711  ... -0.652815 -1.264656       3
62  0.855164 -0.934582 -1.885349  ... -2.566222  0.077759       2
63  0.141928 -0.408314  0.402206  ...  0.317499 -0.049391       1

[64 rows x 11 columns]
MLLITE_MODEL_SET_OPTIONS RidgeClassifier {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { "alpha" : 0.0000001,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
('OPERATION_START', 'TRAINING')
[[-1.0506592   0.92064023 -0.4551253  -0.05012989 -0.19162714  0.5843286
   0.9430313   1.0213077  -0.01079692 -1.5869486 ]
 [ 1.86988    -2.3121896  -1.1538523   1.292078   -1.061729    2.0429258
   1.284271   -1.3353989  -1.6480426   2.1099062 ]
 [-0.1240493   0.7686444  -1.040184   -1.0419097  -0.5159428   1.4802165
  -1.7200696   0.34235197  1.2473352  -1.4139622 ]
 [ 0.9288579  -1.1773754   0.5427306   1.248167   -0.7323589   0.6922126
   0.362028   -0.05373104  0.48552942  1.1065644 ]
 [-1.5983242   1.4824632   1.6646907  -0.7911312  -0.3269162  -0.07355959
  -3.3526254  -1.3474813   1.8165325   0.6370003 ]] [2 3 1 0 3]
MLLITE_FIT_USING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 6 6
('OPERATION_END_ELAPSED', 0.009, 'TRAINING')
{ "alpha" : 0.0000001,   }
{ "alpha" : 0.0000001,   }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W13", "signature" : "ff4_il8"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 10 },
	"classes" : [ 0, 1, 2, 3 ],
	"equations" : {
		"class_0" : {
			"intercept" : -0.444093,
			"coeffs" : [ -0.088923, -0.022614, 0.076674, 0.114622, 0.013969, -0.064895, -0.004922, -0.149565, 0.003574, -0.046438 ]
		},
		"class_1" : {
			"intercept" : -0.333723,
			"coeffs" : [ 0.082042, 0.026467, 0.017055, -0.021515, -0.053963, -0.096309, -0.006036, 0.302685, 0.176253, 0.049556 ]
		},
		"class_2" : {
			"intercept" : -0.577581,
			"coeffs" : [ 0.063162, 0.008796, -0.074449, -0.154844, 0.002084, -0.041886, 0.037052, -0.012974, -0.188436, -0.108870 ]
		},
		"class_3" : {
			"intercept" : -0.644906,
			"coeffs" : [ -0.056636, -0.013205, -0.019280, 0.061730, 0.037911, 0.203091, -0.026917, -0.139775, 0.008297, 0.105752 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_10_small_option_1.json'

MLLITE_MODEL_SET_OPTIONS RidgeClassifier {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { "alpha" : 0.0000001,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
MLLITE_RELOADING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W13", "signature" : "ff4_il8"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 10 },
	"classes" : [ 0, 1, 2, 3 ],
	"equations" : {
		"class_0" : {
			"intercept" : -0.444093,
			"coeffs" : [ -0.088923, -0.022614, 0.076674, 0.114622, 0.013969, -0.064895, -0.004922, -0.149565, 0.003574, -0.046438 ]
		},
		"class_1" : {
			"intercept" : -0.333723,
			"coeffs" : [ 0.082042, 0.026467, 0.017055, -0.021515, -0.053963, -0.096309, -0.006036, 0.302685, 0.176253, 0.049556 ]
		},
		"class_2" : {
			"intercept" : -0.577581,
			"coeffs" : [ 0.063162, 0.008796, -0.074449, -0.154844, 0.002084, -0.041886, 0.037052, -0.012974, -0.188436, -0.108870 ]
		},
		"class_3" : {
			"intercept" : -0.644906,
			"coeffs" : [ -0.056636, -0.013205, -0.019280, 0.061730, 0.037911, 0.203091, -0.026917, -0.139775, 0.008297, 0.105752 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1, 2, 3 ],
	"dataset" : 	{
		"dataset_features" : 10,
		"dataset_rows" : 64
	},
	"equations" : 	{
		"class_0" : 	{
			"coeffs" : [ -0.088923, -0.022614, 0.076674, 0.114622, 0.013969, -0.064895, -0.004922, -0.149565, 0.003574, -0.046438 ],
			"intercept" : -0.444093
		},
		"class_1" : 	{
			"coeffs" : [ 0.082042, 0.026467, 0.017055, -0.021515, -0.053963, -0.096309, -0.006036, 0.302685, 0.176253, 0.049556 ],
			"intercept" : -0.333723
		},
		"class_2" : 	{
			"coeffs" : [ 0.063162, 0.008796, -0.074449, -0.154844, 0.002084, -0.041886, 0.037052, -0.012974, -0.188436, -0.10887 ],
			"intercept" : -0.577581
		},
		"class_3" : 	{
			"coeffs" : [ -0.056636, -0.013205, -0.01928, 0.06173, 0.037911, 0.203091, -0.026917, -0.139775, 0.008297, 0.105752 ],
			"intercept" : -0.644906
		}
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_il8", "version" : "2024-W13" },
	"options" :  { "alpha" : 0.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0.2358 0.3218 0.2642 0.1782]
 [0.217  0.1356 0.2215 0.4259]
 [0.1952 0.3403 0.2322 0.2322]
 [0.262  0.3208 0.1471 0.2701]
 [0.3456 0.2591 0.1174 0.2779]
 [0.2679 0.1448 0.3548 0.2325]
 [0.1895 0.4331 0.1768 0.2005]
 [0.1745 0.3762 0.2302 0.2191]
 [0.241  0.2648 0.2865 0.2077]
 [0.3332 0.2108 0.2528 0.2031]
 [0.2674 0.3088 0.13   0.2938]
 [0.2503 0.3111 0.1035 0.3351]
 [0.2285 0.1428 0.216  0.4128]
 [0.1338 0.5764 0.1889 0.101 ]
 [0.1584 0.2454 0.3676 0.2286]
 [0.2299 0.3498 0.2198 0.2005]
 [0.1375 0.2671 0.3793 0.2161]
 [0.2586 0.4717 0.1369 0.1327]
 [0.3664 0.0632 0.3594 0.211 ]
 [0.2838 0.2174 0.1585 0.3403]
 [0.2404 0.1631 0.4069 0.1895]
 [0.278  0.1976 0.2945 0.2299]
 [0.4234 0.2304 0.1182 0.228 ]
 [0.2259 0.179  0.333  0.262 ]
 [0.2832 0.1883 0.1654 0.3631]
 [0.2369 0.2426 0.2847 0.2358]
 [0.3477 0.2272 0.1257 0.2994]
 [0.112  0.5489 0.2451 0.094 ]
 [0.2448 0.2296 0.334  0.1917]
 [0.3015 0.3412 0.1964 0.161 ]
 [0.4742 0.0528 0.1854 0.2875]
 [0.1379 0.4783 0.1958 0.188 ]
 [0.2816 0.0905 0.3379 0.2899]
 [0.1495 0.5615 0.1896 0.0994]
 [0.3451 0.2    0.1835 0.2715]
 [0.1743 0.2688 0.3793 0.1775]
 [0.131  0.414  0.3111 0.1439]
 [0.2629 0.3039 0.2056 0.2276]
 [0.2215 0.1434 0.3674 0.2677]
 [0.3187 0.178  0.0983 0.4051]
 [0.267  0.2987 0.2041 0.2301]
 [0.1582 0.4869 0.1662 0.1887]
 [0.1452 0.5664 0.2058 0.0826]
 [0.2232 0.3661 0.1504 0.2603]
 [0.325  0.3393 0.0798 0.2559]
 [0.3344 0.2321 0.1708 0.2628]
 [0.1965 0.3522 0.2607 0.1906]
 [0.3525 0.2671 0.1969 0.1836]
 [0.3482 0.3005 0.1407 0.2107]
 [0.168  0.4398 0.1623 0.2298]
 [0.3956 0.2113 0.0965 0.2967]
 [0.1918 0.4995 0.1134 0.1952]
 [0.3391 0.0504 0.4199 0.1906]
 [0.2494 0.3095 0.1731 0.2679]
 [0.157  0.4472 0.2511 0.1447]
 [0.1058 0.1247 0.6677 0.1017]
 [0.3021 0.1402 0.2877 0.27  ]
 [0.2598 0.2629 0.2491 0.2282]
 [0.3219 0.1468 0.2991 0.2322]
 [0.2009 0.4387 0.2366 0.1239]
 [0.1843 0.3129 0.227  0.2757]
 [0.2837 0.3024 0.2053 0.2086]
 [0.2092 0.1594 0.455  0.1763]
 [0.3204 0.225  0.1918 0.2628]]
(64, 4)
(64, 4) float32
MODEL_PERFS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': '{"alpha" : 0.0000001}', 'dataset': 'FourClass_10_small', 'size': 64, 'accuracy': 0.515625, 'auc': 0.8229782528913021}
WRITING_PERF_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_10_small_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': '{"alpha" : 0.0000001}', 'dataset': 'FourClass_10_small', 'training_time_in_sec': 0.009, 'prediction_time_in_sec': 0.0}
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_10_small_option_1_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('FourClass_10_small', 'RidgeClassifier', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT t."index" AS "index",
   -0.444093 + -0.088923 * t."X_0" + -0.022614 * t."X_1" + 0.076674 * t."X_2" + 0.114622 * t."X_3" + 0.013969 * t."X_4" + -0.064895 * t."X_5" + -0.004922 * t."X_6" + -0.149565 * t."X_7" + 0.003574 * t."X_8" + -0.046438 * t."X_9" AS "Score_0",
   CAST(NULL AS FLOAT) AS "Proba_0",
   CAST(NULL AS FLOAT) AS "LogProba_0",
   -0.333723 + 0.082042 * t."X_0" + 0.026467 * t."X_1" + 0.017055 * t."X_2" + -0.021515 * t."X_3" + -0.053963 * t."X_4" + -0.096309 * t."X_5" + -0.006036 * t."X_6" + 0.302685 * t."X
SQL_OUT_PUT_FIRST_LINES_END ('FourClass_10_small', 'RidgeClassifier', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('FourClass_10_small', 'RidgeClassifier', 'duckdb')
ore_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."Score_3" AS "Score_3",
  arg_max_cte."Proba_3" AS "Proba_3",
  CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN LN( arg_max_cte."Proba_3" ) ELSE -1.79769313486231e+308 END AS "LogProba_3",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('FourClass_10_small', 'RidgeClassifier', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 64 entries, 0 to 63
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     64 non-null     float32
 1   X_1     64 non-null     float32
 2   X_2     64 non-null     float32
 3   X_3     64 non-null     float32
 4   X_4     64 non-null     float32
 5   X_5     64 non-null     float32
 6   X_6     64 non-null     float32
 7   X_7     64 non-null     float32
 8   X_8     64 non-null     float32
 9   X_9     64 non-null     float32
dtypes: float32(10)
memory usage: 3.0 KB
            X_0       X_1       X_2  ...       X_7       X_8       X_9
index                                ...                              
0     -1.050659  0.920640 -0.455125  ...  1.021308 -0.010797 -1.586949
1      1.869880 -2.312190 -1.153852  ... -1.335399 -1.648043  2.109906
2     -0.124049  0.768644 -1.040184  ...  0.342352  1.247335 -1.413962
3      0.928858 -1.177375  0.542731  ... -0.053731  0.485529  1.106564
4     -1.598324  1.482463  1.664691  ... -1.347481  1.816532  0.637000
...         ...       ...       ...  ...       ...       ...       ...
59     1.914430 -1.187978 -1.908593  ...  0.100255  1.147780 -0.640430
60    -2.300030  2.981089  1.310992  ...  0.945393  0.000418  0.598406
61    -0.438059 -0.593217  0.535711  ...  1.507209 -0.652815 -1.264657
62     0.855164 -0.934582 -1.885349  ... -0.362082 -2.566222  0.077759
63     0.141928 -0.408314  0.402207  ... -0.685914  0.317499 -0.049391

[64 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 64 entries, 0 to 63
Data columns (total 15 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          64 non-null     int64  
 1   Score_0        64 non-null     float64
 2   Proba_0        64 non-null     float64
 3   LogProba_0     64 non-null     float64
 4   Score_1        64 non-null     float64
 5   Proba_1        64 non-null     float64
 6   LogProba_1     64 non-null     float64
 7   Score_2        64 non-null     float64
 8   Proba_2        64 non-null     float64
 9   LogProba_2     64 non-null     float64
 10  Score_3        64 non-null     float64
 11  Proba_3        64 non-null     float64
 12  LogProba_3     64 non-null     float64
 13  Decision       64 non-null     int64  
 14  DecisionProba  64 non-null     float64
dtypes: float64(13), int64(2)
memory usage: 7.6 KB
    index   Score_0   Proba_0  ...  LogProba_3  Decision  DecisionProba
0       0 -0.536461  0.235771  ...   -1.724953         1       0.321837
1       1 -0.556320  0.217011  ...   -0.853569         3       0.425892
2       2 -0.725509  0.195242  ...   -1.459975         1       0.340336
3       3 -0.413932  0.262024  ...   -1.309132         1       0.320830
4       4 -0.103376  0.345568  ...   -1.280391         0       0.345568
..    ...       ...       ...  ...         ...       ...            ...
59     59 -0.615313  0.200867  ...   -2.088115         1       0.438655
60     60 -0.785077  0.184324  ...   -1.288311         1       0.312892
61     61 -0.358691  0.283717  ...   -1.567498         1       0.302418
62     62 -0.583697  0.209241  ...   -1.735669         2       0.455037
63     63 -0.233864  0.320385  ...   -1.336228         0       0.320385

[64 rows x 15 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Score_3', 'Proba_3',
       'LogProba_3', 'Decision', 'DecisionProba'],
      dtype='object')
    index   Score_0  SQL_Proba_0  ...  Py_Proba_2  Py_Proba_3  Py_Decision
48     48 -0.111063     0.348201  ...    0.140662    0.210654            0
49     49 -0.810080     0.168018  ...    0.162348    0.229811            1
50     50  0.081869     0.395607  ...    0.096467    0.296656            0
51     51 -0.612609     0.191838  ...    0.113415    0.195201            1
52     52  0.066290     0.339051  ...    0.419934    0.190576            2
53     53 -0.480020     0.249440  ...    0.173074    0.267940            1
54     54 -0.858570     0.157037  ...    0.251105    0.144701            1
55     55 -0.992266     0.105807  ...    0.667700    0.101746            2
56     56 -0.268182     0.302095  ...    0.287664    0.270009            0
57     57 -0.459467     0.259813  ...    0.249093    0.228188            1
58     58 -0.204338     0.321852  ...    0.299085    0.232224            0
59     59 -0.615313     0.200867  ...    0.236557    0.123920            1
60     60 -0.785077     0.184324  ...    0.227048    0.275736            1
61     61 -0.358691     0.283717  ...    0.205299    0.208566            1
62     62 -0.583697     0.209241  ...    0.455036    0.176282            2
63     63 -0.233864     0.320385  ...    0.191758    0.262835            0

[16 rows x 20 columns]
MLLITE_CLASS_SQL_ERROR ('FourClass_10_small', 'RidgeClassifier', 'duckdb') ('Py_Proba_0', 'SQL_Proba_0') 3.607932481104574e-07
    Py_Proba_0  SQL_Proba_0   SQL_Error_0
48    0.348201     0.348201 -4.723493e-07
49    0.168017     0.168018 -3.670082e-07
50    0.395606     0.395607 -1.122610e-06
51    0.191838     0.191838 -1.403472e-08
52    0.339052     0.339051  1.790676e-06
53    0.249439     0.249440 -8.506455e-07
54    0.157037     0.157037 -2.556353e-08
55    0.105807     0.105807  3.155174e-07
56    0.302095     0.302095  5.408207e-07
57    0.259813     0.259813 -6.837426e-07
58    0.321853     0.321852  7.740866e-07
59    0.200867     0.200867 -2.352938e-07
60    0.184324     0.184324  8.087278e-09
61    0.283717     0.283717  6.635438e-07
62    0.209241     0.209241  4.492924e-07
63    0.320385     0.320385 -1.411524e-07
MLLITE_CLASS_SQL_ERROR ('FourClass_10_small', 'RidgeClassifier', 'duckdb') ('Py_Proba_1', 'SQL_Proba_1') 1.4069498035791227e-07
    Py_Proba_1  SQL_Proba_1   SQL_Error_1
48    0.300483     0.300483  1.782935e-07
49    0.439824     0.439823  6.959239e-08
50    0.211270     0.211270 -1.062339e-07
51    0.499546     0.499546 -2.864507e-08
52    0.050438     0.050438  7.975805e-08
53    0.309547     0.309547 -2.566880e-07
54    0.447158     0.447158 -1.121563e-07
55    0.124747     0.124747 -1.370199e-07
56    0.140232     0.140232 -8.929143e-09
57    0.262906     0.262907 -3.190792e-07
58    0.146839     0.146839  7.978493e-08
59    0.438656     0.438655  1.409500e-07
60    0.312892     0.312892 -2.003272e-07
61    0.302418     0.302418  7.174983e-08
62    0.159440     0.159440 -2.552859e-08
63    0.225022     0.225022 -5.797458e-08
MLLITE_CLASS_SQL_ERROR ('FourClass_10_small', 'RidgeClassifier', 'duckdb') ('Py_Proba_2', 'SQL_Proba_2') 1.456234192496065e-07
    Py_Proba_2  SQL_Proba_2   SQL_Error_2
48    0.140662     0.140662  1.785735e-08
49    0.162348     0.162348  5.692595e-08
50    0.096467     0.096467  9.110148e-08
51    0.113415     0.113415 -1.863411e-08
52    0.419934     0.419935 -1.056179e-06
53    0.173074     0.173074  2.300624e-07
54    0.251105     0.251104  1.747592e-07
55    0.667700     0.667700  1.428718e-07
56    0.287664     0.287664 -1.482498e-07
57    0.249093     0.249092  4.538940e-07
58    0.299085     0.299085 -4.077305e-07
59    0.236557     0.236557  4.989087e-08
60    0.227048     0.227048  6.094926e-08
61    0.205299     0.205299 -3.283758e-07
62    0.455036     0.455037 -1.125913e-07
63    0.191758     0.191758  2.436656e-08
MLLITE_CLASS_SQL_ERROR ('FourClass_10_small', 'RidgeClassifier', 'duckdb') ('Py_Proba_3', 'SQL_Proba_3') 3.090816451699948e-07
    Py_Proba_3  SQL_Proba_3   SQL_Error_3
48    0.210654     0.210654  3.209019e-07
49    0.229811     0.229810  2.404898e-07
50    0.296656     0.296655  1.152643e-06
51    0.195201     0.195201  1.581714e-07
52    0.190576     0.190577 -8.515080e-07
53    0.267940     0.267939  8.176664e-07
54    0.144701     0.144701 -2.213822e-08
55    0.101746     0.101746 -2.990176e-07
56    0.270009     0.270009 -3.389383e-07
57    0.228188     0.228188  4.446196e-07
58    0.232224     0.232224 -5.206469e-07
59    0.123920     0.123921 -2.260231e-08
60    0.275736     0.275736  1.759942e-07
61    0.208566     0.208566 -4.069179e-07
62    0.176282     0.176282 -3.111725e-07
63    0.262835     0.262835  2.045628e-07
MLLITE_CLASS_SQL_EXECUTION_STATUS ('FourClass_10_small', 'RidgeClassifier', 'duckdb', 'Success')
    Py_Decision  SQL_Decision
48            0             0
49            1             1
50            0             0
51            1             1
52            2             2
53            1             1
54            1             1
55            2             2
56            0             0
57            1             1
58            0             0
59            1             1
60            1             1
61            1             1
62            2             2
63            0             0
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_10_small_option_1_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('FourClass_10_small', 'RidgeClassifier', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT t."index" AS "index",
   -0.444093 + -0.088923 * t."X_0" + -0.022614 * t."X_1" + 0.076674 * t."X_2" + 0.114622 * t."X_3" + 0.013969 * t."X_4" + -0.064895 * t."X_5" + -0.004922 * t."X_6" + -0.149565 * t."X_7" + 0.003574 * t."X_8" + -0.046438 * t."X_9" AS "Score_0",
   CAST(NULL AS FLOAT) AS "Proba_0",
   CAST(NULL AS FLOAT) AS "LogProba_0",
   -0.333723 + 0.082042 * t."X_0" + 0.026467 * t."X_1" + 0.017055 * t."X_2" + -0.021515 * t."X_3" + -0.053963 * t."X_4" + -0.096309 * t."X_5" + -0.006036 * t."X_6" + 0.302685 * t."X
SQL_OUT_PUT_FIRST_LINES_END ('FourClass_10_small', 'RidgeClassifier', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('FourClass_10_small', 'RidgeClassifier', 'sqlite')
ore_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."Score_3" AS "Score_3",
  arg_max_cte."Proba_3" AS "Proba_3",
  CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN LN( arg_max_cte."Proba_3" ) ELSE -1.79769313486231e+308 END AS "LogProba_3",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('FourClass_10_small', 'RidgeClassifier', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 64 entries, 0 to 63
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     64 non-null     float32
 1   X_1     64 non-null     float32
 2   X_2     64 non-null     float32
 3   X_3     64 non-null     float32
 4   X_4     64 non-null     float32
 5   X_5     64 non-null     float32
 6   X_6     64 non-null     float32
 7   X_7     64 non-null     float32
 8   X_8     64 non-null     float32
 9   X_9     64 non-null     float32
dtypes: float32(10)
memory usage: 3.0 KB
            X_0       X_1       X_2  ...       X_7       X_8       X_9
index                                ...                              
0     -1.050659  0.920640 -0.455125  ...  1.021308 -0.010797 -1.586949
1      1.869880 -2.312190 -1.153852  ... -1.335399 -1.648043  2.109906
2     -0.124049  0.768644 -1.040184  ...  0.342352  1.247335 -1.413962
3      0.928858 -1.177375  0.542731  ... -0.053731  0.485529  1.106564
4     -1.598324  1.482463  1.664691  ... -1.347481  1.816532  0.637000
...         ...       ...       ...  ...       ...       ...       ...
59     1.914430 -1.187978 -1.908593  ...  0.100255  1.147780 -0.640430
60    -2.300030  2.981089  1.310992  ...  0.945393  0.000418  0.598406
61    -0.438059 -0.593217  0.535711  ...  1.507209 -0.652815 -1.264657
62     0.855164 -0.934582 -1.885349  ... -0.362082 -2.566222  0.077759
63     0.141928 -0.408314  0.402207  ... -0.685914  0.317499 -0.049391

[64 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 64 entries, 0 to 63
Data columns (total 15 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          64 non-null     int64  
 1   Score_0        64 non-null     float64
 2   Proba_0        64 non-null     float64
 3   LogProba_0     64 non-null     float64
 4   Score_1        64 non-null     float64
 5   Proba_1        64 non-null     float64
 6   LogProba_1     64 non-null     float64
 7   Score_2        64 non-null     float64
 8   Proba_2        64 non-null     float64
 9   LogProba_2     64 non-null     float64
 10  Score_3        64 non-null     float64
 11  Proba_3        64 non-null     float64
 12  LogProba_3     64 non-null     float64
 13  Decision       64 non-null     int64  
 14  DecisionProba  64 non-null     float64
dtypes: float64(13), int64(2)
memory usage: 7.6 KB
    index   Score_0   Proba_0  ...  LogProba_3  Decision  DecisionProba
0       0 -0.536461  0.235771  ...   -1.724953         1       0.321837
1       1 -0.556320  0.217011  ...   -0.853569         3       0.425892
2       2 -0.725509  0.195242  ...   -1.459975         1       0.340336
3       3 -0.413932  0.262024  ...   -1.309132         1       0.320830
4       4 -0.103376  0.345568  ...   -1.280391         0       0.345568
..    ...       ...       ...  ...         ...       ...            ...
59     59 -0.615313  0.200867  ...   -2.088115         1       0.438655
60     60 -0.785077  0.184324  ...   -1.288311         1       0.312892
61     61 -0.358691  0.283717  ...   -1.567498         1       0.302418
62     62 -0.583697  0.209241  ...   -1.735669         2       0.455037
63     63 -0.233864  0.320385  ...   -1.336228         0       0.320385

[64 rows x 15 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Score_3', 'Proba_3',
       'LogProba_3', 'Decision', 'DecisionProba'],
      dtype='object')
    index   Score_0  SQL_Proba_0  ...  Py_Proba_2  Py_Proba_3  Py_Decision
48     48 -0.111063     0.348201  ...    0.140662    0.210654            0
49     49 -0.810080     0.168018  ...    0.162348    0.229811            1
50     50  0.081869     0.395607  ...    0.096467    0.296656            0
51     51 -0.612609     0.191838  ...    0.113415    0.195201            1
52     52  0.066290     0.339051  ...    0.419934    0.190576            2
53     53 -0.480020     0.249440  ...    0.173074    0.267940            1
54     54 -0.858570     0.157037  ...    0.251105    0.144701            1
55     55 -0.992266     0.105807  ...    0.667700    0.101746            2
56     56 -0.268182     0.302095  ...    0.287664    0.270009            0
57     57 -0.459467     0.259813  ...    0.249093    0.228188            1
58     58 -0.204338     0.321852  ...    0.299085    0.232224            0
59     59 -0.615313     0.200867  ...    0.236557    0.123920            1
60     60 -0.785077     0.184324  ...    0.227048    0.275736            1
61     61 -0.358691     0.283717  ...    0.205299    0.208566            1
62     62 -0.583697     0.209241  ...    0.455036    0.176282            2
63     63 -0.233864     0.320385  ...    0.191758    0.262835            0

[16 rows x 20 columns]
MLLITE_CLASS_SQL_ERROR ('FourClass_10_small', 'RidgeClassifier', 'sqlite') ('Py_Proba_0', 'SQL_Proba_0') 3.613927802041325e-07
    Py_Proba_0  SQL_Proba_0   SQL_Error_0
48    0.348201     0.348201 -4.853162e-07
49    0.168017     0.168018 -3.575649e-07
50    0.395606     0.395607 -1.129989e-06
51    0.191838     0.191838 -5.434518e-09
52    0.339052     0.339051  1.787895e-06
53    0.249439     0.249440 -8.515232e-07
54    0.157037     0.157037 -2.924203e-08
55    0.105807     0.105807  3.089728e-07
56    0.302095     0.302095  5.448667e-07
57    0.259813     0.259813 -6.716412e-07
58    0.321853     0.321852  7.864841e-07
59    0.200867     0.200867 -2.360874e-07
60    0.184324     0.184324  1.659819e-08
61    0.283717     0.283717  6.665484e-07
62    0.209241     0.209241  4.529842e-07
63    0.320385     0.320385 -1.341026e-07
MLLITE_CLASS_SQL_ERROR ('FourClass_10_small', 'RidgeClassifier', 'sqlite') ('Py_Proba_1', 'SQL_Proba_1') 1.3936516990963044e-07
    Py_Proba_1  SQL_Proba_1   SQL_Error_1
48    0.300483     0.300483  1.651861e-07
49    0.439824     0.439823  6.829923e-08
50    0.211270     0.211270 -1.073592e-07
51    0.499546     0.499546 -7.539578e-08
52    0.050438     0.050438  8.200563e-08
53    0.309547     0.309547 -2.673877e-07
54    0.447158     0.447158 -1.352408e-07
55    0.124747     0.124747 -1.547433e-07
56    0.140232     0.140232 -1.612559e-09
57    0.262906     0.262907 -3.242277e-07
58    0.146839     0.146839  7.275001e-08
59    0.438656     0.438655  1.420780e-07
60    0.312892     0.312892 -1.876565e-07
61    0.302418     0.302418  5.613863e-08
62    0.159440     0.159440 -2.487744e-08
63    0.225022     0.225022 -4.766051e-08
MLLITE_CLASS_SQL_ERROR ('FourClass_10_small', 'RidgeClassifier', 'sqlite') ('Py_Proba_2', 'SQL_Proba_2') 1.4528289961476468e-07
    Py_Proba_2  SQL_Proba_2   SQL_Error_2
48    0.140662     0.140662  3.549479e-08
49    0.162348     0.162348  4.826665e-08
50    0.096467     0.096467  9.405781e-08
51    0.113415     0.113415 -2.230050e-09
52    0.419934     0.419935 -1.060512e-06
53    0.173074     0.173074  2.331797e-07
54    0.251105     0.251104  1.928436e-07
55    0.667700     0.667700  1.779410e-07
56    0.287664     0.287664 -1.555679e-07
57    0.249093     0.249092  4.415097e-07
58    0.299085     0.299085 -3.991705e-07
59    0.236557     0.236557  3.967087e-08
60    0.227048     0.227048  5.362656e-08
61    0.205299     0.205299 -3.204971e-07
62    0.455036     0.455037 -1.060382e-07
63    0.191758     0.191758  2.481150e-08
MLLITE_CLASS_SQL_ERROR ('FourClass_10_small', 'RidgeClassifier', 'sqlite') ('Py_Proba_3', 'SQL_Proba_3') 3.082028304450101e-07
    Py_Proba_3  SQL_Proba_3   SQL_Error_3
48    0.210654     0.210654  3.293388e-07
49    0.229811     0.229810  2.409990e-07
50    0.296656     0.296655  1.158192e-06
51    0.195201     0.195201  1.799179e-07
52    0.190576     0.190577 -8.466422e-07
53    0.267940     0.267939  8.261266e-07
54    0.144701     0.144701 -1.345963e-08
55    0.101746     0.101746 -3.098187e-07
56    0.270009     0.270009 -3.429828e-07
57    0.228188     0.228188  4.500510e-07
58    0.232224     0.232224 -5.345695e-07
59    0.123920     0.123920 -1.271667e-08
60    0.275736     0.275736  1.621352e-07
61    0.208566     0.208566 -4.021898e-07
62    0.176282     0.176282 -3.220686e-07
63    0.262835     0.262835  1.867539e-07
MLLITE_CLASS_SQL_EXECUTION_STATUS ('FourClass_10_small', 'RidgeClassifier', 'sqlite', 'Success')
    Py_Decision  SQL_Decision
48            0             0
49            1             1
50            0             0
51            1             1
52            2             2
53            1             1
54            1             1
55            2             2
56            0             0
57            1             1
58            0             0
59            1             1
60            1             1
61            1             1
62            2             2
63            0             0
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_10_small_option_1_pgsql.sql'



SQL_OUT_PUT_FIRST_LINES_START ('FourClass_10_small', 'RidgeClassifier', 'pgsql')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT t."index" AS "index",
   -0.444093 + -0.088923 * t."X_0" + -0.022614 * t."X_1" + 0.076674 * t."X_2" + 0.114622 * t."X_3" + 0.013969 * t."X_4" + -0.064895 * t."X_5" + -0.004922 * t."X_6" + -0.149565 * t."X_7" + 0.003574 * t."X_8" + -0.046438 * t."X_9" AS "Score_0",
   CAST(NULL AS FLOAT) AS "Proba_0",
   CAST(NULL AS FLOAT) AS "LogProba_0",
   -0.333723 + 0.082042 * t."X_0" + 0.026467 * t."X_1" + 0.017055 * t."X_2" + -0.021515 * t."X_3" + -0.053963 * t."X_4" + -0.096309 * t."X_5" + -0.006036 * t."X_6" + 0.302685 * t."X
SQL_OUT_PUT_FIRST_LINES_END ('FourClass_10_small', 'RidgeClassifier', 'pgsql')
SQL_OUT_PUT_LAST_LINES_START ('FourClass_10_small', 'RidgeClassifier', 'pgsql')
ore_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."Score_3" AS "Score_3",
  arg_max_cte."Proba_3" AS "Proba_3",
  CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN LN( arg_max_cte."Proba_3" ) ELSE -1.79769313486231e+308 END AS "LogProba_3",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('FourClass_10_small', 'RidgeClassifier', 'pgsql') 




COPY_TRAINING_DATA_TO_SQLITE_START
