    age  workclass     fnlwgt  ...  hoursperweek  native-country  target
0   2.0        0.0   188950.0  ...           3.0             0.0    >50K
1   1.0        0.0  1033222.0  ...           2.0             0.0   <=50K
2   1.0        0.0   129707.0  ...           1.0             0.0    >50K
3   1.0        0.0    78530.0  ...           4.0             0.0    >50K
4   1.0        0.0   159537.0  ...           2.0             0.0   <=50K
..  ...        ...        ...  ...           ...             ...     ...
59  1.0        0.0   112963.0  ...           2.0             0.0   <=50K
60  0.0        0.0    34307.0  ...           2.0             0.0   <=50K
61  4.0        0.0   111795.0  ...           2.0             0.0    >50K
62  4.0        0.0   411604.0  ...           2.0             0.0   <=50K
63  3.0        0.0   121441.0  ...           3.0             0.0   <=50K

[64 rows x 15 columns]
MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
('OPERATION_START', 'TRAINING')
[[2.000000e+00 0.000000e+00 1.889500e+05 0.000000e+00 1.400000e+01
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 3.000000e+00 0.000000e+00]
 [1.000000e+00 0.000000e+00 1.033222e+06 0.000000e+00 1.000000e+01
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 2.000000e+00 0.000000e+00]
 [1.000000e+00 0.000000e+00 1.297070e+05 0.000000e+00 1.300000e+01
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  4.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00]
 [1.000000e+00 0.000000e+00 7.853000e+04 0.000000e+00 9.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 4.000000e+00 0.000000e+00]
 [1.000000e+00 0.000000e+00 1.595370e+05 0.000000e+00 1.200000e+01
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 2.000000e+00 0.000000e+00]] ['>50K' '<=50K' '>50K' '>50K' '<=50K']
MLLITE_FIT_USING_MODEL mllite_ridge_class.RidgeClassifier_ff4_OO8
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 3 4
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 4 4
('OPERATION_END_ELAPSED', 0.008, 'TRAINING')
{ ,   }
{ ,   }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_OO8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 14 },
	"classes" : [ "<=50K", ">50K" ],
	"equations" : {
		"class_1" : {
			"intercept" : 22020.355469,
			"coeffs" : [ -1305.617920, 0.000000, -0.082703, 0.000000, -384.225159, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -790.494568, -1593.595947, 262.210663, 0.000000 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_census_small.json'

MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
MLLITE_RELOADING_MODEL mllite_ridge_class.RidgeClassifier_ff4_OO8
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_OO8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 14 },
	"classes" : [ "<=50K", ">50K" ],
	"equations" : {
		"class_1" : {
			"intercept" : 22020.355469,
			"coeffs" : [ -1305.617920, 0.000000, -0.082703, 0.000000, -384.225159, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -790.494568, -1593.595947, 262.210663, 0.000000 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ "<=50K", ">50K" ],
	"dataset" : 	{
		"dataset_features" : 14,
		"dataset_rows" : 64
	},
	"equations" : 	{
		"class_1" : 	{
			"coeffs" : [ -1305.61792, 0.0, -0.082703, 0.0, -384.225159, 0.0, 0.0, 0.0, 0.0, 0.0, -790.494568, -1593.595947, 262.210663, 0.0 ],
			"intercept" : 22020.355469
		}
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_OO8", "version" : "2024-W12" },
	"options" :  { "alpha" : 1.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[1.   0.  ]
 [1.   0.  ]
 [0.   1.  ]
 [0.   1.  ]
 [0.   1.  ]
 [0.   1.  ]
 [0.   1.  ]
 [0.   1.  ]
 [1.   0.  ]
 [1.   0.  ]
 [0.   1.  ]
 [1.   0.  ]
 [0.   1.  ]
 [0.   1.  ]
 [0.   1.  ]
 [0.   1.  ]
 [1.   0.  ]
 [1.   0.  ]
 [0.   1.  ]
 [1.   0.  ]
 [0.   1.  ]
 [1.   0.  ]
 [1.   0.  ]
 [0.39 0.61]
 [0.   1.  ]
 [0.   1.  ]
 [0.   1.  ]
 [0.   1.  ]
 [0.   1.  ]
 [0.   1.  ]
 [1.   0.  ]
 [1.   0.  ]
 [0.   1.  ]
 [0.   1.  ]
 [1.   0.  ]
 [0.   1.  ]
 [0.   1.  ]
 [1.   0.  ]
 [1.   0.  ]
 [1.   0.  ]
 [0.   1.  ]
 [0.   1.  ]
 [0.   1.  ]
 [0.   1.  ]
 [1.   0.  ]
 [0.   1.  ]
 [0.   1.  ]
 [1.   0.  ]
 [1.   0.  ]
 [1.   0.  ]
 [0.   1.  ]
 [0.   1.  ]
 [1.   0.  ]
 [1.   0.  ]
 [0.   1.  ]
 [1.   0.  ]
 [0.   1.  ]
 [0.   1.  ]
 [0.   1.  ]
 [0.   1.  ]
 [0.   1.  ]
 [0.   1.  ]
 [1.   0.  ]
 [0.   1.  ]]
(64, 2)
(64,) float32
MODEL_PERFS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'census_small', 'size': 64, 'accuracy': 0.375, 'auc': 0.39642857142857146}
WRITING_PERF_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_census_small.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'census_small', 'training_time_in_sec': 0.007, 'prediction_time_in_sec': 0.0}
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_census_small.sql'



SQL_OUT_PUT_FIRST_LINES_START
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT model_input."index" AS "index",
   22020.355469 + -1305.617920 * X_0 + 0.000000 * X_1 + -0.082703 * X_2 + 0.000000 * X_3 + -384.225159 * X_4 + 0.000000 * X_5 + 0.000000 * X_6 + 0.000000 * X_7 + 0.000000 * X_8 + 0.000000 * X_9 + -790.494568 * X_10 + -1593.595947 * X_11 + 262.210663 * X_12 + 0.000000 * X_13 AS "Score_1", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS
SQL_OUT_PUT_FIRST_LINES_END
SQL_OUT_PUT_LAST_LINES_START
S t
),
arg_max_cte_with_max_proba_idx AS 
( SELECT t.*,
   CASE WHEN(t."Proba_0" = t."Max_Proba") THEN 0 else NULL END AS "max_idx_0",
   CASE WHEN(t."Proba_1" = t."Max_Proba") THEN 1 else NULL END AS "max_idx_1"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
 (SELECT t.*,
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 64 entries, 0 to 63
Data columns (total 14 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     64 non-null     float32
 1   X_1     64 non-null     float32
 2   X_2     64 non-null     float32
 3   X_3     64 non-null     float32
 4   X_4     64 non-null     float32
 5   X_5     64 non-null     float32
 6   X_6     64 non-null     float32
 7   X_7     64 non-null     float32
 8   X_8     64 non-null     float32
 9   X_9     64 non-null     float32
 10  X_10    64 non-null     float32
 11  X_11    64 non-null     float32
 12  X_12    64 non-null     float32
 13  X_13    64 non-null     float32
dtypes: float32(14)
memory usage: 4.0 KB
       X_0  X_1        X_2  X_3   X_4  X_5  ...  X_8  X_9  X_10  X_11  X_12  X_13
index                                       ...                                  
0      2.0  0.0   188950.0  0.0  14.0  0.0  ...  0.0  0.0   0.0   0.0   3.0   0.0
1      1.0  0.0  1033222.0  0.0  10.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
2      1.0  0.0   129707.0  0.0  13.0  0.0  ...  0.0  0.0   4.0   0.0   1.0   0.0
3      1.0  0.0    78530.0  0.0   9.0  0.0  ...  0.0  0.0   0.0   0.0   4.0   0.0
4      1.0  0.0   159537.0  0.0  12.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
...    ...  ...        ...  ...   ...  ...  ...  ...  ...   ...   ...   ...   ...
59     1.0  0.0   112963.0  0.0  10.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
60     0.0  0.0    34307.0  0.0  10.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
61     4.0  0.0   111795.0  0.0  13.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
62     4.0  0.0   411604.0  0.0   5.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
63     3.0  0.0   121441.0  0.0  10.0  0.0  ...  0.0  0.0   0.0   0.0   3.0   0.0

[64 rows x 14 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
