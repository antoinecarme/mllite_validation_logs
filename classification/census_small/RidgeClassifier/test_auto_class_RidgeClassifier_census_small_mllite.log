READING_CSV census_small ['data/small/census_small.csv']
    age  workclass     fnlwgt  ...  hoursperweek  native-country  target
0   2.0        0.0   188950.0  ...           3.0             0.0    >50K
1   1.0        0.0  1033222.0  ...           2.0             0.0   <=50K
2   1.0        0.0   129707.0  ...           1.0             0.0    >50K
3   1.0        0.0    78530.0  ...           4.0             0.0    >50K
4   1.0        0.0   159537.0  ...           2.0             0.0   <=50K
..  ...        ...        ...  ...           ...             ...     ...
59  1.0        0.0   112963.0  ...           2.0             0.0   <=50K
60  0.0        0.0    34307.0  ...           2.0             0.0   <=50K
61  4.0        0.0   111795.0  ...           2.0             0.0    >50K
62  4.0        0.0   411604.0  ...           2.0             0.0   <=50K
63  3.0        0.0   121441.0  ...           3.0             0.0   <=50K

[64 rows x 15 columns]
MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
('OPERATION_START', 'TRAINING')
[[2.000000e+00 0.000000e+00 1.889500e+05 0.000000e+00 1.400000e+01
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 3.000000e+00 0.000000e+00]
 [1.000000e+00 0.000000e+00 1.033222e+06 0.000000e+00 1.000000e+01
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 2.000000e+00 0.000000e+00]
 [1.000000e+00 0.000000e+00 1.297070e+05 0.000000e+00 1.300000e+01
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  4.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00]
 [1.000000e+00 0.000000e+00 7.853000e+04 0.000000e+00 9.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 4.000000e+00 0.000000e+00]
 [1.000000e+00 0.000000e+00 1.595370e+05 0.000000e+00 1.200000e+01
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 2.000000e+00 0.000000e+00]] ['>50K' '<=50K' '>50K' '>50K' '<=50K']
MLLITE_FIT_USING_MODEL mllite_ridge_class.RidgeClassifier_ff4_OO8
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 3 4
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 4 4
('OPERATION_END_ELAPSED', 0.007, 'TRAINING')
{ ,   }
{ ,   }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_OO8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 14 },
	"classes" : [ "<=50K", ">50K" ],
	"equations" : {
		"class_1" : {
			"intercept" : 22020.355469,
			"coeffs" : [ -1305.617920, 0.000000, -0.082703, 0.000000, -384.225159, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -790.494568, -1593.595947, 262.210663, 0.000000 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_census_small.json'

RELOADING_MODEL_FROM_JSON_START ('census_small', 'RidgeClassifier')
MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
MLLITE_RELOADING_MODEL mllite_ridge_class.RidgeClassifier_ff4_OO8
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_OO8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 14 },
	"classes" : [ "<=50K", ">50K" ],
	"equations" : {
		"class_1" : {
			"intercept" : 22020.355469,
			"coeffs" : [ -1305.617920, 0.000000, -0.082703, 0.000000, -384.225159, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -790.494568, -1593.595947, 262.210663, 0.000000 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ "<=50K", ">50K" ],
	"dataset" : 	{
		"dataset_features" : 14,
		"dataset_rows" : 64
	},
	"equations" : 	{
		"class_1" : 	{
			"coeffs" : [ -1305.61792, 0.0, -0.082703, 0.0, -384.225159, 0.0, 0.0, 0.0, 0.0, 0.0, -790.494568, -1593.595947, 262.210663, 0.0 ],
			"intercept" : 22020.355469
		}
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_OO8", "version" : "2024-W14" },
	"options" :  { "alpha" : 1.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
RELOADING_MODEL_FROM_JSON_END ('census_small', 'RidgeClassifier')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[1.     0.    ]
 [1.     0.    ]
 [0.     1.    ]
 [0.     1.    ]
 [0.     1.    ]
 [0.     1.    ]
 [0.     1.    ]
 [0.     1.    ]
 [1.     0.    ]
 [1.     0.    ]
 [0.     1.    ]
 [1.     0.    ]
 [0.     1.    ]
 [0.     1.    ]
 [0.     1.    ]
 [0.     1.    ]
 [1.     0.    ]
 [1.     0.    ]
 [0.     1.    ]
 [1.     0.    ]
 [0.     1.    ]
 [1.     0.    ]
 [1.     0.    ]
 [0.4443 0.5557]
 [0.     1.    ]
 [0.     1.    ]
 [0.     1.    ]
 [0.     1.    ]
 [0.     1.    ]
 [0.     1.    ]
 [1.     0.    ]
 [1.     0.    ]
 [0.     1.    ]
 [0.     1.    ]
 [1.     0.    ]
 [0.     1.    ]
 [0.     1.    ]
 [1.     0.    ]
 [1.     0.    ]
 [1.     0.    ]
 [0.     1.    ]
 [0.     1.    ]
 [0.     1.    ]
 [0.     1.    ]
 [1.     0.    ]
 [0.     1.    ]
 [0.     1.    ]
 [1.     0.    ]
 [1.     0.    ]
 [1.     0.    ]
 [0.     1.    ]
 [0.     1.    ]
 [1.     0.    ]
 [1.     0.    ]
 [0.     1.    ]
 [1.     0.    ]
 [0.     1.    ]
 [0.     1.    ]
 [0.     1.    ]
 [0.     1.    ]
 [0.     1.    ]
 [0.     1.    ]
 [1.     0.    ]
 [0.     1.    ]]
(64, 2)
(64,) float32
MODEL_PERFS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'census_small', 'size': 64, 'accuracy': 0.375, 'auc': 0.39642857142857146}
WRITING_PERF_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_census_small.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'census_small', 'training_time_in_sec': 0.007, 'prediction_time_in_sec': 0.0}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 0 14
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 1 14
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 2 14
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 3 14
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 4 14
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 5 14
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 6 14
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 7 14
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 8 14
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 9 14
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 10 14
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 11 14
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 12 14
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 13 14
{
   "Contributions" : {
      "X_0" : [ -0.006456, 0.006456 ],
      "X_1" : [ 0.000000, 0.000000 ],
      "X_2" : [ 0.047488, -0.047488 ],
      "X_3" : [ 0.000000, 0.000000 ],
      "X_4" : [ 0.008718, -0.008718 ],
      "X_5" : [ 0.000000, 0.000000 ],
      "X_6" : [ 0.000000, 0.000000 ],
      "X_7" : [ 0.000000, 0.000000 ],
      "X_8" : [ 0.000000, 0.000000 ],
      "X_9" : [ 0.000000, 0.000000 ],
      "X_10" : [ -0.006945, 0.006945 ],
      "X_11" : [ 0.007812, -0.007812 ],
      "X_12" : [ -0.002960, 0.002960 ],
      "X_13" : [ 0.000000, 0.000000 ]   
   },
   "Most_Contributive_Features_By_Class" : {
      "class_0" : [ 2, 4, 11, 10, 0, 12 ],
      "class_1" : [ 2, 4, 11, 10, 0, 12 ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_census_small_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_census_small_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('census_small', 'RidgeClassifier', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13"
  FROM "census_small" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT t."index" AS "index",
   -0.5 * ( 22020.355469 + -1305.617920 * t."X_0" + 0.000000 * t."X_1" + -0.082703 * t."X_2" + 0.000000 * t."X_3" + -384.225159 * t."X_4" + 0.000000 * t."X_5" + 0.000000 * t."X_6" + 0.000000 * t."X_7" + 0.000000 * t."X_8" + 0.000000 * t."X_9" + -790.494568 * t."X_10" + -1593.595947 * t."X_11" + 262.210663 * t."X_12" + 0.000000 * t."X_13" ) AS "Score
SQL_OUT_PUT_FIRST_LINES_END ('census_small', 'RidgeClassifier', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('census_small', 'RidgeClassifier', 'duckdb')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('census_small', 'RidgeClassifier', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 64 entries, 0 to 63
Data columns (total 14 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     64 non-null     float32
 1   X_1     64 non-null     float32
 2   X_2     64 non-null     float32
 3   X_3     64 non-null     float32
 4   X_4     64 non-null     float32
 5   X_5     64 non-null     float32
 6   X_6     64 non-null     float32
 7   X_7     64 non-null     float32
 8   X_8     64 non-null     float32
 9   X_9     64 non-null     float32
 10  X_10    64 non-null     float32
 11  X_11    64 non-null     float32
 12  X_12    64 non-null     float32
 13  X_13    64 non-null     float32
dtypes: float32(14)
memory usage: 4.0 KB
       X_0  X_1        X_2  X_3   X_4  X_5  ...  X_8  X_9  X_10  X_11  X_12  X_13
index                                       ...                                  
0      2.0  0.0   188950.0  0.0  14.0  0.0  ...  0.0  0.0   0.0   0.0   3.0   0.0
1      1.0  0.0  1033222.0  0.0  10.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
2      1.0  0.0   129707.0  0.0  13.0  0.0  ...  0.0  0.0   4.0   0.0   1.0   0.0
3      1.0  0.0    78530.0  0.0   9.0  0.0  ...  0.0  0.0   0.0   0.0   4.0   0.0
4      1.0  0.0   159537.0  0.0  12.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
...    ...  ...        ...  ...   ...  ...  ...  ...  ...   ...   ...   ...   ...
59     1.0  0.0   112963.0  0.0  10.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
60     0.0  0.0    34307.0  0.0  10.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
61     4.0  0.0   111795.0  0.0  13.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
62     4.0  0.0   411604.0  0.0   5.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
63     3.0  0.0   121441.0  0.0  10.0  0.0  ...  0.0  0.0   0.0   0.0   3.0   0.0

[64 rows x 14 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 64 entries, 0 to 63
Data columns (total 9 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          64 non-null     int64  
 1   Score_0        64 non-null     float64
 2   Proba_0        64 non-null     float64
 3   LogProba_0     64 non-null     float64
 4   Score_1        64 non-null     float64
 5   Proba_1        64 non-null     float64
 6   LogProba_1     64 non-null     float64
 7   Decision       64 non-null     int64  
 8   DecisionProba  64 non-null     float64
dtypes: float64(7), int64(2)
memory usage: 4.6 KB
    index       Score_0  Proba_0  ...     LogProba_1  Decision  DecisionProba
0       0    405.066833      1.0  ... -1.797693e+308         0            1.0
1       1  34026.828125      1.0  ... -1.797693e+308         0            1.0
2       2  -1046.442627      0.0  ...   0.000000e+00         1            1.0
3       3  -5905.444336      0.0  ...   0.000000e+00         1            1.0
4       4  -1717.134521      0.0  ...   0.000000e+00         1            1.0
..    ...           ...      ...  ...            ...       ...            ...
59     59  -4027.264648      0.0  ...   0.000000e+00         1            1.0
60     60  -7932.615723      0.0  ...   0.000000e+00         1            1.0
61     61  -1540.797363      0.0  ...   0.000000e+00         1            1.0
62     62   9319.853516      1.0  ... -1.797693e+308         0            1.0
63     63  -2502.173584      0.0  ...   0.000000e+00         1            1.0

[64 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
    index      Score_0    SQL_Proba_0  ...  Py_Proba_0  Py_Proba_1  Py_Decision
48     48  1318.513916   1.000000e+00  ...         1.0         0.0        <=50K
49     49  1389.477539   1.000000e+00  ...         1.0         0.0        <=50K
50     50  -227.530487  2.341693e-198  ...         0.0         1.0         >50K
51     51 -6887.849609   0.000000e+00  ...         0.0         1.0         >50K
52     52  1347.342041   1.000000e+00  ...         1.0         0.0        <=50K
53     53   568.578125   1.000000e+00  ...         1.0         0.0        <=50K
54     54 -2151.325684   0.000000e+00  ...         0.0         1.0         >50K
55     55  3729.801270   1.000000e+00  ...         1.0         0.0        <=50K
56     56 -1362.071533   0.000000e+00  ...         0.0         1.0         >50K
57     57 -5187.888184   0.000000e+00  ...         0.0         1.0         >50K
58     58 -5616.332520   0.000000e+00  ...         0.0         1.0         >50K
59     59 -4027.264648   0.000000e+00  ...         0.0         1.0         >50K
60     60 -7932.615723   0.000000e+00  ...         0.0         1.0         >50K
61     61 -1540.797363   0.000000e+00  ...         0.0         1.0         >50K
62     62  9319.853516   1.000000e+00  ...         1.0         0.0        <=50K
63     63 -2502.173584   0.000000e+00  ...         0.0         1.0         >50K

[16 rows x 12 columns]
MLLITE_CLASS_SQL_ERROR ('census_small', 'RidgeClassifier', 'duckdb') ('Py_Proba_0', 'SQL_Proba_0') 0.00014659892100008388
    Py_Proba_0    SQL_Proba_0    SQL_Error_0
48         1.0   1.000000e+00   0.000000e+00
49         1.0   1.000000e+00   0.000000e+00
50         0.0  2.341693e-198 -2.341693e-198
51         0.0   0.000000e+00   0.000000e+00
52         1.0   1.000000e+00   0.000000e+00
53         1.0   1.000000e+00   0.000000e+00
54         0.0   0.000000e+00   0.000000e+00
55         1.0   1.000000e+00   0.000000e+00
56         0.0   0.000000e+00   0.000000e+00
57         0.0   0.000000e+00   0.000000e+00
58         0.0   0.000000e+00   0.000000e+00
59         0.0   0.000000e+00   0.000000e+00
60         0.0   0.000000e+00   0.000000e+00
61         0.0   0.000000e+00   0.000000e+00
62         1.0   1.000000e+00   0.000000e+00
63         0.0   0.000000e+00   0.000000e+00
MLLITE_CLASS_SQL_ERROR ('census_small', 'RidgeClassifier', 'duckdb') ('Py_Proba_1', 'SQL_Proba_1') 0.000146598921000083
    Py_Proba_1  SQL_Proba_1  SQL_Error_1
48         0.0          0.0          0.0
49         0.0          0.0          0.0
50         1.0          1.0          0.0
51         1.0          1.0          0.0
52         0.0          0.0          0.0
53         0.0          0.0          0.0
54         1.0          1.0          0.0
55         0.0          0.0          0.0
56         1.0          1.0          0.0
57         1.0          1.0          0.0
58         1.0          1.0          0.0
59         1.0          1.0          0.0
60         1.0          1.0          0.0
61         1.0          1.0          0.0
62         0.0          0.0          0.0
63         1.0          1.0          0.0
MLLITE_CLASS_SQL_EXECUTION_STATUS ('census_small', 'RidgeClassifier', 'duckdb', 'Success')
   Py_Decision  SQL_Decision
48       <=50K             0
49       <=50K             0
50        >50K             1
51        >50K             1
52       <=50K             0
53       <=50K             0
54        >50K             1
55       <=50K             0
56        >50K             1
57        >50K             1
58        >50K             1
59        >50K             1
60        >50K             1
61        >50K             1
62       <=50K             0
63        >50K             1
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_census_small_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('census_small', 'RidgeClassifier', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13"
  FROM "census_small" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT t."index" AS "index",
   -0.5 * ( 22020.355469 + -1305.617920 * t."X_0" + 0.000000 * t."X_1" + -0.082703 * t."X_2" + 0.000000 * t."X_3" + -384.225159 * t."X_4" + 0.000000 * t."X_5" + 0.000000 * t."X_6" + 0.000000 * t."X_7" + 0.000000 * t."X_8" + 0.000000 * t."X_9" + -790.494568 * t."X_10" + -1593.595947 * t."X_11" + 262.210663 * t."X_12" + 0.000000 * t."X_13" ) AS "Score
SQL_OUT_PUT_FIRST_LINES_END ('census_small', 'RidgeClassifier', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('census_small', 'RidgeClassifier', 'sqlite')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('census_small', 'RidgeClassifier', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 64 entries, 0 to 63
Data columns (total 14 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     64 non-null     float32
 1   X_1     64 non-null     float32
 2   X_2     64 non-null     float32
 3   X_3     64 non-null     float32
 4   X_4     64 non-null     float32
 5   X_5     64 non-null     float32
 6   X_6     64 non-null     float32
 7   X_7     64 non-null     float32
 8   X_8     64 non-null     float32
 9   X_9     64 non-null     float32
 10  X_10    64 non-null     float32
 11  X_11    64 non-null     float32
 12  X_12    64 non-null     float32
 13  X_13    64 non-null     float32
dtypes: float32(14)
memory usage: 4.0 KB
       X_0  X_1        X_2  X_3   X_4  X_5  ...  X_8  X_9  X_10  X_11  X_12  X_13
index                                       ...                                  
0      2.0  0.0   188950.0  0.0  14.0  0.0  ...  0.0  0.0   0.0   0.0   3.0   0.0
1      1.0  0.0  1033222.0  0.0  10.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
2      1.0  0.0   129707.0  0.0  13.0  0.0  ...  0.0  0.0   4.0   0.0   1.0   0.0
3      1.0  0.0    78530.0  0.0   9.0  0.0  ...  0.0  0.0   0.0   0.0   4.0   0.0
4      1.0  0.0   159537.0  0.0  12.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
...    ...  ...        ...  ...   ...  ...  ...  ...  ...   ...   ...   ...   ...
59     1.0  0.0   112963.0  0.0  10.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
60     0.0  0.0    34307.0  0.0  10.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
61     4.0  0.0   111795.0  0.0  13.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
62     4.0  0.0   411604.0  0.0   5.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
63     3.0  0.0   121441.0  0.0  10.0  0.0  ...  0.0  0.0   0.0   0.0   3.0   0.0

[64 rows x 14 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 64 entries, 0 to 63
Data columns (total 9 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          64 non-null     int64  
 1   Score_0        64 non-null     float64
 2   Proba_0        64 non-null     float64
 3   LogProba_0     64 non-null     float64
 4   Score_1        64 non-null     float64
 5   Proba_1        64 non-null     float64
 6   LogProba_1     64 non-null     float64
 7   Decision       64 non-null     int64  
 8   DecisionProba  64 non-null     float64
dtypes: float64(7), int64(2)
memory usage: 4.6 KB
    index       Score_0  Proba_0  ...     LogProba_1  Decision  DecisionProba
0       0    405.066229      1.0  ... -1.797693e+308         0            1.0
1       1  34026.825891      1.0  ... -1.797693e+308         0            1.0
2       2  -1046.442426      0.0  ...   0.000000e+00         1            1.0
3       3  -5905.443590      0.0  ...   0.000000e+00         1            1.0
4       4  -1717.134228      0.0  ...   0.000000e+00         1            1.0
..    ...           ...      ...  ...            ...       ...            ...
59     59  -4027.264148      0.0  ...   0.000000e+00         1            1.0
60     60  -7932.616692      0.0  ...   0.000000e+00         1            1.0
61     61  -1540.798081      0.0  ...   0.000000e+00         1            1.0
62     62   9319.853146      1.0  ... -1.797693e+308         0            1.0
63     63  -2502.173542      0.0  ...   0.000000e+00         1            1.0

[64 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
    index      Score_0    SQL_Proba_0  ...  Py_Proba_0  Py_Proba_1  Py_Decision
48     48  1318.513317   1.000000e+00  ...         1.0         0.0        <=50K
49     49  1389.476943   1.000000e+00  ...         1.0         0.0        <=50K
50     50  -227.531186  2.338420e-198  ...         0.0         1.0         >50K
51     51 -6887.849968   0.000000e+00  ...         0.0         1.0         >50K
52     52  1347.342053   1.000000e+00  ...         1.0         0.0        <=50K
53     53   568.577539   1.000000e+00  ...         1.0         0.0        <=50K
54     54 -2151.325910   0.000000e+00  ...         0.0         1.0         >50K
55     55  3729.800072   1.000000e+00  ...         1.0         0.0        <=50K
56     56 -1362.072022   0.000000e+00  ...         0.0         1.0         >50K
57     57 -5187.888996   0.000000e+00  ...         0.0         1.0         >50K
58     58 -5616.333250   0.000000e+00  ...         0.0         1.0         >50K
59     59 -4027.264148   0.000000e+00  ...         0.0         1.0         >50K
60     60 -7932.616692   0.000000e+00  ...         0.0         1.0         >50K
61     61 -1540.798081   0.000000e+00  ...         0.0         1.0         >50K
62     62  9319.853146   1.000000e+00  ...         1.0         0.0        <=50K
63     63 -2502.173542   0.000000e+00  ...         0.0         1.0         >50K

[16 rows x 12 columns]
MLLITE_CLASS_SQL_ERROR ('census_small', 'RidgeClassifier', 'sqlite') ('Py_Proba_0', 'SQL_Proba_0') 0.0001521366271514911
    Py_Proba_0    SQL_Proba_0    SQL_Error_0
48         1.0   1.000000e+00   0.000000e+00
49         1.0   1.000000e+00   0.000000e+00
50         0.0  2.338420e-198 -2.338420e-198
51         0.0   0.000000e+00   0.000000e+00
52         1.0   1.000000e+00   0.000000e+00
53         1.0   1.000000e+00   0.000000e+00
54         0.0   0.000000e+00   0.000000e+00
55         1.0   1.000000e+00   0.000000e+00
56         0.0   0.000000e+00   0.000000e+00
57         0.0   0.000000e+00   0.000000e+00
58         0.0   0.000000e+00   0.000000e+00
59         0.0   0.000000e+00   0.000000e+00
60         0.0   0.000000e+00   0.000000e+00
61         0.0   0.000000e+00   0.000000e+00
62         1.0   1.000000e+00   0.000000e+00
63         0.0   0.000000e+00   0.000000e+00
MLLITE_CLASS_SQL_ERROR ('census_small', 'RidgeClassifier', 'sqlite') ('Py_Proba_1', 'SQL_Proba_1') 0.0001521366271514911
    Py_Proba_1  SQL_Proba_1  SQL_Error_1
48         0.0          0.0          0.0
49         0.0          0.0          0.0
50         1.0          1.0          0.0
51         1.0          1.0          0.0
52         0.0          0.0          0.0
53         0.0          0.0          0.0
54         1.0          1.0          0.0
55         0.0          0.0          0.0
56         1.0          1.0          0.0
57         1.0          1.0          0.0
58         1.0          1.0          0.0
59         1.0          1.0          0.0
60         1.0          1.0          0.0
61         1.0          1.0          0.0
62         0.0          0.0          0.0
63         1.0          1.0          0.0
MLLITE_CLASS_SQL_EXECUTION_STATUS ('census_small', 'RidgeClassifier', 'sqlite', 'Success')
   Py_Decision  SQL_Decision
48       <=50K             0
49       <=50K             0
50        >50K             1
51        >50K             1
52       <=50K             0
53       <=50K             0
54        >50K             1
55       <=50K             0
56        >50K             1
57        >50K             1
58        >50K             1
59        >50K             1
60        >50K             1
61        >50K             1
62       <=50K             0
63        >50K             1
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
