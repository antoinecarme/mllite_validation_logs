READING_CSV census_small ['data/small/census_small.csv']
    age  workclass     fnlwgt  ...  hoursperweek  native-country  target
0   2.0        0.0   188950.0  ...           3.0             0.0    >50K
1   1.0        0.0  1033222.0  ...           2.0             0.0   <=50K
2   1.0        0.0   129707.0  ...           1.0             0.0    >50K
3   1.0        0.0    78530.0  ...           4.0             0.0    >50K
4   1.0        0.0   159537.0  ...           2.0             0.0   <=50K
..  ...        ...        ...  ...           ...             ...     ...
59  1.0        0.0   112963.0  ...           2.0             0.0   <=50K
60  0.0        0.0    34307.0  ...           2.0             0.0   <=50K
61  4.0        0.0   111795.0  ...           2.0             0.0    >50K
62  4.0        0.0   411604.0  ...           2.0             0.0   <=50K
63  3.0        0.0   121441.0  ...           3.0             0.0   <=50K

[64 rows x 15 columns]
MLLITE_MODEL_SET_OPTIONS XGBClassifier {"max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 }
MLLITE_MODEL_OPTIONS_DEFAULT XGBClassifier { "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING XGBClassifier { "max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 ,  "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32  }
MLLITE_MODEL_JSON_AFTER_SETTING XGBClassifier None
('OPERATION_START', 'TRAINING')
[[2.000000e+00 0.000000e+00 1.889500e+05 0.000000e+00 1.400000e+01
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 3.000000e+00 0.000000e+00]
 [1.000000e+00 0.000000e+00 1.033222e+06 0.000000e+00 1.000000e+01
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 2.000000e+00 0.000000e+00]
 [1.000000e+00 0.000000e+00 1.297070e+05 0.000000e+00 1.300000e+01
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  4.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00]
 [1.000000e+00 0.000000e+00 7.853000e+04 0.000000e+00 9.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 4.000000e+00 0.000000e+00]
 [1.000000e+00 0.000000e+00 1.595370e+05 0.000000e+00 1.200000e+01
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 2.000000e+00 0.000000e+00]] ['>50K' '<=50K' '>50K' '>50K' '<=50K']
MLLITE_FIT_USING_MODEL mllite_xgb_class.XGBClassifier_ff4_OO8
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_CLASSIFIER_FIT' 1 3
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_CLASSIFIER_FIT' 2 3
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 1 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 2 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 3 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 4 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 5 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 6 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 7 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_CLASSIFIER_FIT' 3 3
('OPERATION_END_ELAPSED', 0.009, 'TRAINING')
{ "max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 ,  "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32  }
{ "max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 ,  "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32  }
{
	"metadata" : { "model" : "Friedman_XGB", "version" : "2024-W14", "signature" : "ff4_OO8"},
	"options" : { "base_score" : [ ], "early_stopping_rounds" : 0, "eval_metric" : "", "gamma" : 0.000000, "grow_policy" : 0, "learning_rate" : 0.300000, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 32, "min_child_weight" : 5.000000, "n_estimators" : 5, "objective" : "reg:squarederror", "reg_alpha" : 0.000000, "reg_lambda" : 1.000000, "tree_method" : "auto" },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 14 },
	"classes" : [ "<=50K", ">50K" ],
	"booster" : {
		"BaseScore" : [ 0.781250, 0.218750 ],
		"Trees" : 5,
		"Tree_0" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : 13.000000, "sindex" : 4 },
			"Node_1" : { "leaf_value" : [ ], "parent" : 0, "left" : 3, "right" : 4, "svalue" : 121441.000000, "sindex" : 2 },
			"Node_2" : { "leaf_value" : [ -0.096594, 0.096594 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_3" : { "leaf_value" : [ 0.054602, -0.054602 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_4" : { "leaf_value" : [ 0.185509, -0.185509 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_1" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : 11.000000, "sindex" : 4 },
			"Node_1" : { "leaf_value" : [ ], "parent" : 0, "left" : 3, "right" : 4, "svalue" : 3.000000, "sindex" : 12 },
			"Node_2" : { "leaf_value" : [ ], "parent" : 0, "left" : 5, "right" : 6, "svalue" : 2.000000, "sindex" : 0 },
			"Node_3" : { "leaf_value" : [ 0.174917, -0.174917 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_4" : { "leaf_value" : [ 0.030349, -0.030349 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_5" : { "leaf_value" : [ 0.051885, -0.051885 ], "parent" : 2, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_6" : { "leaf_value" : [ -0.113648, 0.113648 ], "parent" : 2, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_2" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : 13.000000, "sindex" : 4 },
			"Node_1" : { "leaf_value" : [ ], "parent" : 0, "left" : 3, "right" : 4, "svalue" : 121441.000000, "sindex" : 2 },
			"Node_2" : { "leaf_value" : [ -0.057761, 0.057761 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_3" : { "leaf_value" : [ 0.021228, -0.021228 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_4" : { "leaf_value" : [ ], "parent" : 1, "left" : 5, "right" : 6, "svalue" : 10.000000, "sindex" : 4 },
			"Node_5" : { "leaf_value" : [ 0.167320, -0.167320 ], "parent" : 4, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_6" : { "leaf_value" : [ 0.092459, -0.092458 ], "parent" : 4, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_3" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : 10.000000, "sindex" : 4 },
			"Node_1" : { "leaf_value" : [ 0.136026, -0.136026 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_2" : { "leaf_value" : [ ], "parent" : 0, "left" : 3, "right" : 4, "svalue" : 2.000000, "sindex" : 0 },
			"Node_3" : { "leaf_value" : [ 0.090513, -0.090513 ], "parent" : 2, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_4" : { "leaf_value" : [ -0.079602, 0.079602 ], "parent" : 2, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_4" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : 13.000000, "sindex" : 4 },
			"Node_1" : { "leaf_value" : [ ], "parent" : 0, "left" : 3, "right" : 4, "svalue" : 121441.000000, "sindex" : 2 },
			"Node_2" : { "leaf_value" : [ -0.042062, 0.042062 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_3" : { "leaf_value" : [ 0.001263, -0.001263 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_4" : { "leaf_value" : [ 0.114273, -0.114273 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/XGBClassifier/mllite.XGBClassifier_census_small_option_1.json'

RELOADING_MODEL_FROM_JSON_START ('census_small', 'XGBClassifier')
MLLITE_MODEL_SET_OPTIONS XGBClassifier {"max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 }
MLLITE_MODEL_OPTIONS_DEFAULT XGBClassifier { "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING XGBClassifier { "max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 ,  "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32  }
MLLITE_MODEL_JSON_AFTER_SETTING XGBClassifier None
MLLITE_RELOADING_MODEL mllite_xgb_class.XGBClassifier_ff4_OO8
{
	"metadata" : { "model" : "Friedman_XGB", "version" : "2024-W14", "signature" : "ff4_OO8"},
	"options" : { "base_score" : [ ], "early_stopping_rounds" : 0, "eval_metric" : "", "gamma" : 0.000000, "grow_policy" : 0, "learning_rate" : 0.300000, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 32, "min_child_weight" : 5.000000, "n_estimators" : 5, "objective" : "reg:squarederror", "reg_alpha" : 0.000000, "reg_lambda" : 1.000000, "tree_method" : "auto" },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 14 },
	"classes" : [ "<=50K", ">50K" ],
	"booster" : {
		"BaseScore" : [ 0.781250, 0.218750 ],
		"Trees" : 5,
		"Tree_0" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : 13.000000, "sindex" : 4 },
			"Node_1" : { "leaf_value" : [ ], "parent" : 0, "left" : 3, "right" : 4, "svalue" : 121441.000000, "sindex" : 2 },
			"Node_2" : { "leaf_value" : [ -0.096594, 0.096594 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_3" : { "leaf_value" : [ 0.054602, -0.054602 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_4" : { "leaf_value" : [ 0.185509, -0.185509 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_1" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : 11.000000, "sindex" : 4 },
			"Node_1" : { "leaf_value" : [ ], "parent" : 0, "left" : 3, "right" : 4, "svalue" : 3.000000, "sindex" : 12 },
			"Node_2" : { "leaf_value" : [ ], "parent" : 0, "left" : 5, "right" : 6, "svalue" : 2.000000, "sindex" : 0 },
			"Node_3" : { "leaf_value" : [ 0.174917, -0.174917 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_4" : { "leaf_value" : [ 0.030349, -0.030349 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_5" : { "leaf_value" : [ 0.051885, -0.051885 ], "parent" : 2, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_6" : { "leaf_value" : [ -0.113648, 0.113648 ], "parent" : 2, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_2" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : 13.000000, "sindex" : 4 },
			"Node_1" : { "leaf_value" : [ ], "parent" : 0, "left" : 3, "right" : 4, "svalue" : 121441.000000, "sindex" : 2 },
			"Node_2" : { "leaf_value" : [ -0.057761, 0.057761 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_3" : { "leaf_value" : [ 0.021228, -0.021228 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_4" : { "leaf_value" : [ ], "parent" : 1, "left" : 5, "right" : 6, "svalue" : 10.000000, "sindex" : 4 },
			"Node_5" : { "leaf_value" : [ 0.167320, -0.167320 ], "parent" : 4, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_6" : { "leaf_value" : [ 0.092459, -0.092458 ], "parent" : 4, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_3" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : 10.000000, "sindex" : 4 },
			"Node_1" : { "leaf_value" : [ 0.136026, -0.136026 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_2" : { "leaf_value" : [ ], "parent" : 0, "left" : 3, "right" : 4, "svalue" : 2.000000, "sindex" : 0 },
			"Node_3" : { "leaf_value" : [ 0.090513, -0.090513 ], "parent" : 2, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_4" : { "leaf_value" : [ -0.079602, 0.079602 ], "parent" : 2, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_4" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : 13.000000, "sindex" : 4 },
			"Node_1" : { "leaf_value" : [ ], "parent" : 0, "left" : 3, "right" : 4, "svalue" : 121441.000000, "sindex" : 2 },
			"Node_2" : { "leaf_value" : [ -0.042062, 0.042062 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_3" : { "leaf_value" : [ 0.001263, -0.001263 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_4" : { "leaf_value" : [ 0.114273, -0.114273 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		}
	}
}
BEAUTIFIED_JSON_START
{
	"booster" : 	{
		"BaseScore" : [ 0.78125, 0.21875 ],
		"Tree_0" : 	{
			"Node_0" : 	{
				"leaf_value" : [  ],
				"left" : 1,
				"parent" : null,
				"right" : 2,
				"sindex" : 4,
				"svalue" : 13.0
			},
			"Node_1" : 	{
				"leaf_value" : [  ],
				"left" : 3,
				"parent" : 0,
				"right" : 4,
				"sindex" : 2,
				"svalue" : 121441.0
			},
			"Node_2" : 	{
				"leaf_value" : [ -0.096594, 0.096594 ],
				"left" : null,
				"parent" : 0,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_3" : 	{
				"leaf_value" : [ 0.054602, -0.054602 ],
				"left" : null,
				"parent" : 1,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_4" : 	{
				"leaf_value" : [ 0.185509, -0.185509 ],
				"left" : null,
				"parent" : 1,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			}
		},
		"Tree_1" : 	{
			"Node_0" : 	{
				"leaf_value" : [  ],
				"left" : 1,
				"parent" : null,
				"right" : 2,
				"sindex" : 4,
				"svalue" : 11.0
			},
			"Node_1" : 	{
				"leaf_value" : [  ],
				"left" : 3,
				"parent" : 0,
				"right" : 4,
				"sindex" : 12,
				"svalue" : 3.0
			},
			"Node_2" : 	{
				"leaf_value" : [  ],
				"left" : 5,
				"parent" : 0,
				"right" : 6,
				"sindex" : 0,
				"svalue" : 2.0
			},
			"Node_3" : 	{
				"leaf_value" : [ 0.174917, -0.174917 ],
				"left" : null,
				"parent" : 1,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_4" : 	{
				"leaf_value" : [ 0.030349, -0.030349 ],
				"left" : null,
				"parent" : 1,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_5" : 	{
				"leaf_value" : [ 0.051885, -0.051885 ],
				"left" : null,
				"parent" : 2,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_6" : 	{
				"leaf_value" : [ -0.113648, 0.113648 ],
				"left" : null,
				"parent" : 2,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			}
		},
		"Tree_2" : 	{
			"Node_0" : 	{
				"leaf_value" : [  ],
				"left" : 1,
				"parent" : null,
				"right" : 2,
				"sindex" : 4,
				"svalue" : 13.0
			},
			"Node_1" : 	{
				"leaf_value" : [  ],
				"left" : 3,
				"parent" : 0,
				"right" : 4,
				"sindex" : 2,
				"svalue" : 121441.0
			},
			"Node_2" : 	{
				"leaf_value" : [ -0.057761, 0.057761 ],
				"left" : null,
				"parent" : 0,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_3" : 	{
				"leaf_value" : [ 0.021228, -0.021228 ],
				"left" : null,
				"parent" : 1,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_4" : 	{
				"leaf_value" : [  ],
				"left" : 5,
				"parent" : 1,
				"right" : 6,
				"sindex" : 4,
				"svalue" : 10.0
			},
			"Node_5" : 	{
				"leaf_value" : [ 0.16732, -0.16732 ],
				"left" : null,
				"parent" : 4,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_6" : 	{
				"leaf_value" : [ 0.092459, -0.092458 ],
				"left" : null,
				"parent" : 4,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			}
		},
		"Tree_3" : 	{
			"Node_0" : 	{
				"leaf_value" : [  ],
				"left" : 1,
				"parent" : null,
				"right" : 2,
				"sindex" : 4,
				"svalue" : 10.0
			},
			"Node_1" : 	{
				"leaf_value" : [ 0.136026, -0.136026 ],
				"left" : null,
				"parent" : 0,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_2" : 	{
				"leaf_value" : [  ],
				"left" : 3,
				"parent" : 0,
				"right" : 4,
				"sindex" : 0,
				"svalue" : 2.0
			},
			"Node_3" : 	{
				"leaf_value" : [ 0.090513, -0.090513 ],
				"left" : null,
				"parent" : 2,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_4" : 	{
				"leaf_value" : [ -0.079602, 0.079602 ],
				"left" : null,
				"parent" : 2,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			}
		},
		"Tree_4" : 	{
			"Node_0" : 	{
				"leaf_value" : [  ],
				"left" : 1,
				"parent" : null,
				"right" : 2,
				"sindex" : 4,
				"svalue" : 13.0
			},
			"Node_1" : 	{
				"leaf_value" : [  ],
				"left" : 3,
				"parent" : 0,
				"right" : 4,
				"sindex" : 2,
				"svalue" : 121441.0
			},
			"Node_2" : 	{
				"leaf_value" : [ -0.042062, 0.042062 ],
				"left" : null,
				"parent" : 0,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_3" : 	{
				"leaf_value" : [ 0.001263, -0.001263 ],
				"left" : null,
				"parent" : 1,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_4" : 	{
				"leaf_value" : [ 0.114273, -0.114273 ],
				"left" : null,
				"parent" : 1,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			}
		},
		"Trees" : 5
	},
	"classes" : [ "<=50K", ">50K" ],
	"dataset" : 	{
		"dataset_features" : 14,
		"dataset_rows" : 64
	},
	"metadata" :  { "model" : "Friedman_XGB", "signature" : "ff4_OO8", "version" : "2024-W14" },
	"options" :  { "base_score" : [ ], "early_stopping_rounds" : 0, "eval_metric" : "", "gamma" : 0.0, "grow_policy" : 0, "learning_rate" : 0.3, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 32, "min_child_weight" : 5.0, "n_estimators" : 5, "objective" : "reg:squarederror", "reg_alpha" : 0.0, "reg_lambda" : 1.0, "tree_method" : "auto" }
}
BEAUTIFIED_JSON_END
RELOADING_MODEL_FROM_JSON_END ('census_small', 'XGBClassifier')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0.446  0.554 ]
 [0.8674 0.1326]
 [0.6117 0.3883]
 [0.7407 0.2593]
 [0.8364 0.1636]
 [0.7125 0.2875]
 [0.777  0.223 ]
 [0.8927 0.1073]
 [0.8231 0.1769]
 [0.6117 0.3883]
 [0.446  0.554 ]
 [0.6117 0.3883]
 [0.7923 0.2077]
 [0.7407 0.2593]
 [0.8231 0.1769]
 [0.7923 0.2077]
 [0.8617 0.1383]
 [0.446  0.554 ]
 [0.6498 0.3502]
 [0.8927 0.1073]
 [0.8674 0.1326]
 [0.7232 0.2768]
 [0.446  0.554 ]
 [0.446  0.554 ]
 [0.8927 0.1073]
 [0.8617 0.1383]
 [0.6117 0.3883]
 [0.7923 0.2077]
 [0.8927 0.1073]
 [0.8674 0.1326]
 [0.8927 0.1073]
 [0.8674 0.1326]
 [0.7923 0.2077]
 [0.8231 0.1769]
 [0.8617 0.1383]
 [0.8927 0.1073]
 [0.8364 0.1636]
 [0.8927 0.1073]
 [0.6117 0.3883]
 [0.446  0.554 ]
 [0.6117 0.3883]
 [0.5818 0.4182]
 [0.7313 0.2687]
 [0.7407 0.2593]
 [0.8364 0.1636]
 [0.8617 0.1383]
 [0.8674 0.1326]
 [0.777  0.223 ]
 [0.8927 0.1073]
 [0.446  0.554 ]
 [0.8927 0.1073]
 [0.7769 0.2231]
 [0.7232 0.2768]
 [0.8927 0.1073]
 [0.8927 0.1073]
 [0.777  0.223 ]
 [0.8927 0.1073]
 [0.6117 0.3883]
 [0.5818 0.4182]
 [0.7769 0.2231]
 [0.7769 0.2231]
 [0.446  0.554 ]
 [0.8927 0.1073]
 [0.777  0.223 ]]
(64, 2)
(64,) float32
MODEL_PERFS {'class_name': 'mllite.XGBClassifier', 'model_name': 'XGBClassifier', 'options': '{"max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 }', 'dataset': 'census_small', 'size': 64, 'accuracy': 0.84375, 'auc': 0.8685714285714284}
WRITING_PERF_CODE 'logs/auto_tests/classification/XGBClassifier/mllite.XGBClassifier_census_small_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.XGBClassifier', 'model_name': 'XGBClassifier', 'options': '{"max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 }', 'dataset': 'census_small', 'training_time_in_sec': 0.009, 'prediction_time_in_sec': 0.0}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 0 14
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 1 14
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 2 14
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 3 14
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 4 14
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 5 14
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 6 14
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 7 14
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 8 14
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 9 14
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 10 14
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 11 14
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 12 14
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 13 14
{
   "Contributions" : {
      "X_0" : [ -0.006809, 0.006809 ],
      "X_1" : [ 0.000000, 0.000000 ],
      "X_2" : [ -0.005064, 0.005064 ],
      "X_3" : [ 0.000000, 0.000000 ],
      "X_4" : [ -0.019799, 0.019799 ],
      "X_5" : [ 0.000000, 0.000000 ],
      "X_6" : [ 0.000000, 0.000000 ],
      "X_7" : [ 0.000000, 0.000000 ],
      "X_8" : [ 0.000000, 0.000000 ],
      "X_9" : [ 0.000000, 0.000000 ],
      "X_10" : [ 0.000000, 0.000000 ],
      "X_11" : [ 0.000000, 0.000000 ],
      "X_12" : [ -0.002107, 0.002107 ],
      "X_13" : [ 0.000000, 0.000000 ]   
   },
   "Most_Contributive_Features_By_Class" : {
      "class_0" : [ 4, 0, 2, 12 ],
      "class_1" : [ 4, 0, 2, 12 ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/classification/XGBClassifier/mllite.XGBClassifier_census_small_option_1_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/classification/XGBClassifier/mllite.XGBClassifier_census_small_option_1_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('census_small', 'XGBClassifier', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13"
  FROM "census_small" AS "ADS" 
 ),
"DT_node_lookup_0" AS 
 (SELECT
    t."index" AS "index",
    CASE WHEN (t."X_4" < 13.000000) THEN CASE WHEN (t."X_2" < 121441.000000) THEN 3 ELSE 4 END ELSE 2 END AS node_id
  FROM model_input t
 )
,
"DT_node_data_0" AS 
 (SELECT
    "Values".nid AS nid,
    "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1"
  FROM (
    SELECT 2 AS nid,  -0.096594 AS "P_0", 0.096594 AS "P_1"
    UNION ALL
    SELECT 
SQL_OUT_PUT_FIRST_LINES_END ('census_small', 'XGBClassifier', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('census_small', 'XGBClassifier', 'duckdb')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('census_small', 'XGBClassifier', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 64 entries, 0 to 63
Data columns (total 14 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     64 non-null     float32
 1   X_1     64 non-null     float32
 2   X_2     64 non-null     float32
 3   X_3     64 non-null     float32
 4   X_4     64 non-null     float32
 5   X_5     64 non-null     float32
 6   X_6     64 non-null     float32
 7   X_7     64 non-null     float32
 8   X_8     64 non-null     float32
 9   X_9     64 non-null     float32
 10  X_10    64 non-null     float32
 11  X_11    64 non-null     float32
 12  X_12    64 non-null     float32
 13  X_13    64 non-null     float32
dtypes: float32(14)
memory usage: 4.0 KB
       X_0  X_1        X_2  X_3   X_4  X_5  ...  X_8  X_9  X_10  X_11  X_12  X_13
index                                       ...                                  
0      2.0  0.0   188950.0  0.0  14.0  0.0  ...  0.0  0.0   0.0   0.0   3.0   0.0
1      1.0  0.0  1033222.0  0.0  10.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
2      1.0  0.0   129707.0  0.0  13.0  0.0  ...  0.0  0.0   4.0   0.0   1.0   0.0
3      1.0  0.0    78530.0  0.0   9.0  0.0  ...  0.0  0.0   0.0   0.0   4.0   0.0
4      1.0  0.0   159537.0  0.0  12.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
...    ...  ...        ...  ...   ...  ...  ...  ...  ...   ...   ...   ...   ...
59     1.0  0.0   112963.0  0.0  10.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
60     0.0  0.0    34307.0  0.0  10.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
61     4.0  0.0   111795.0  0.0  13.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
62     4.0  0.0   411604.0  0.0   5.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
63     3.0  0.0   121441.0  0.0  10.0  0.0  ...  0.0  0.0   0.0   0.0   3.0   0.0

[64 rows x 14 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 64 entries, 0 to 63
Data columns (total 9 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          64 non-null     int64  
 1   Score_0        64 non-null     float64
 2   Proba_0        64 non-null     float64
 3   LogProba_0     64 non-null     float64
 4   Score_1        64 non-null     float64
 5   Proba_1        64 non-null     float64
 6   LogProba_1     64 non-null     float64
 7   Decision       64 non-null     int64  
 8   DecisionProba  64 non-null     float64
dtypes: float64(7), int64(2)
memory usage: 4.6 KB
    index   Score_0   Proba_0  ...  LogProba_1  Decision  DecisionProba
0       0  0.391583  0.446003  ...   -0.590596         1       0.553997
1       1  1.438921  0.867363  ...   -2.020139         0       0.867363
2       2  0.727231  0.611700  ...   -0.945976         0       0.611700
3       3  1.024718  0.740667  ...   -1.349641         0       0.740667
4       4  1.315889  0.836413  ...   -1.810410         0       0.836413
..    ...       ...       ...  ...         ...       ...            ...
59     59  1.123773  0.776875  ...   -1.500022         0       0.776875
60     60  1.123773  0.776875  ...   -1.500022         0       0.776875
61     61  0.391583  0.446003  ...   -0.590596         1       0.553997
62     62  1.559295  0.892697  ...   -2.232098         0       0.892697
63     63  1.124238  0.777036  ...   -1.500744         0       0.777036

[64 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
    index   Score_0  SQL_Proba_0  ...  Py_Proba_0  Py_Proba_1  Py_Decision
48     48  1.559295     0.892697  ...    0.892697    0.107303        <=50K
49     49  0.391583     0.446003  ...    0.446003    0.553997         >50K
50     50  1.559295     0.892697  ...    0.892697    0.107303        <=50K
51     51  1.123773     0.776875  ...    0.776874    0.223125        <=50K
52     52  0.980241     0.723218  ...    0.723218    0.276782        <=50K
53     53  1.559295     0.892697  ...    0.892697    0.107303        <=50K
54     54  1.559295     0.892697  ...    0.892697    0.107303        <=50K
55     55  1.124238     0.777036  ...    0.777036    0.222964        <=50K
56     56  1.559295     0.892697  ...    0.892697    0.107303        <=50K
57     57  0.727231     0.611700  ...    0.611699    0.388301        <=50K
58     58  0.665093     0.581805  ...    0.581805    0.418195        <=50K
59     59  1.123773     0.776875  ...    0.776874    0.223125        <=50K
60     60  1.123773     0.776875  ...    0.776874    0.223125        <=50K
61     61  0.391583     0.446003  ...    0.446003    0.553997         >50K
62     62  1.559295     0.892697  ...    0.892697    0.107303        <=50K
63     63  1.124238     0.777036  ...    0.777036    0.222964        <=50K

[16 rows x 12 columns]
MLLITE_CLASS_SQL_ERROR ('census_small', 'XGBClassifier', 'duckdb') ('Py_Proba_0', 'SQL_Proba_0') 2.0927244614304952e-07
    Py_Proba_0  SQL_Proba_0   SQL_Error_0
48    0.892697     0.892697 -2.033879e-07
49    0.446003     0.446003  2.693562e-07
50    0.892697     0.892697 -2.033879e-07
51    0.776874     0.776875 -2.903391e-07
52    0.723218     0.723218 -7.522461e-08
53    0.892697     0.892697 -2.033879e-07
54    0.892697     0.892697 -2.033879e-07
55    0.777036     0.777036 -1.111529e-07
56    0.892697     0.892697 -2.033879e-07
57    0.611699     0.611700 -1.868688e-07
58    0.581805     0.581805  1.195312e-07
59    0.776874     0.776875 -2.903391e-07
60    0.776874     0.776875 -2.903391e-07
61    0.446003     0.446003  2.693562e-07
62    0.892697     0.892697 -2.033879e-07
63    0.777036     0.777036 -1.111529e-07
MLLITE_CLASS_SQL_ERROR ('census_small', 'XGBClassifier', 'duckdb') ('Py_Proba_1', 'SQL_Proba_1') 2.0997093807314376e-07
    Py_Proba_1  SQL_Proba_1   SQL_Error_1
48    0.107303     0.107303  1.586844e-07
49    0.553997     0.553997 -2.991585e-07
50    0.107303     0.107303  1.586844e-07
51    0.223125     0.223125  2.307345e-07
52    0.276782     0.276782  4.542229e-08
53    0.107303     0.107303  1.586844e-07
54    0.107303     0.107303  1.586844e-07
55    0.222964     0.222964  1.111529e-07
56    0.107303     0.107303  1.586844e-07
57    0.388301     0.388300  2.762758e-07
58    0.418195     0.418195 -3.218774e-10
59    0.223125     0.223125  2.307345e-07
60    0.223125     0.223125  2.307345e-07
61    0.553997     0.553997 -2.991585e-07
62    0.107303     0.107303  1.586844e-07
63    0.222964     0.222964  1.111529e-07
MLLITE_CLASS_SQL_EXECUTION_STATUS ('census_small', 'XGBClassifier', 'duckdb', 'Success')
   Py_Decision  SQL_Decision
48       <=50K             0
49        >50K             1
50       <=50K             0
51       <=50K             0
52       <=50K             0
53       <=50K             0
54       <=50K             0
55       <=50K             0
56       <=50K             0
57       <=50K             0
58       <=50K             0
59       <=50K             0
60       <=50K             0
61        >50K             1
62       <=50K             0
63       <=50K             0
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/XGBClassifier/mllite.XGBClassifier_census_small_option_1_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('census_small', 'XGBClassifier', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13"
  FROM "census_small" AS "ADS" 
 ),
"DT_node_lookup_0" AS 
 (SELECT
    t."index" AS "index",
    CASE WHEN (t."X_4" < 13.000000) THEN CASE WHEN (t."X_2" < 121441.000000) THEN 3 ELSE 4 END ELSE 2 END AS node_id
  FROM model_input t
 )
,
"DT_node_data_0" AS 
 (SELECT
    "Values".nid AS nid,
    "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1"
  FROM (
    SELECT 2 AS nid,  -0.096594 AS "P_0", 0.096594 AS "P_1"
    UNION ALL
    SELECT 
SQL_OUT_PUT_FIRST_LINES_END ('census_small', 'XGBClassifier', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('census_small', 'XGBClassifier', 'sqlite')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('census_small', 'XGBClassifier', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 64 entries, 0 to 63
Data columns (total 14 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     64 non-null     float32
 1   X_1     64 non-null     float32
 2   X_2     64 non-null     float32
 3   X_3     64 non-null     float32
 4   X_4     64 non-null     float32
 5   X_5     64 non-null     float32
 6   X_6     64 non-null     float32
 7   X_7     64 non-null     float32
 8   X_8     64 non-null     float32
 9   X_9     64 non-null     float32
 10  X_10    64 non-null     float32
 11  X_11    64 non-null     float32
 12  X_12    64 non-null     float32
 13  X_13    64 non-null     float32
dtypes: float32(14)
memory usage: 4.0 KB
       X_0  X_1        X_2  X_3   X_4  X_5  ...  X_8  X_9  X_10  X_11  X_12  X_13
index                                       ...                                  
0      2.0  0.0   188950.0  0.0  14.0  0.0  ...  0.0  0.0   0.0   0.0   3.0   0.0
1      1.0  0.0  1033222.0  0.0  10.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
2      1.0  0.0   129707.0  0.0  13.0  0.0  ...  0.0  0.0   4.0   0.0   1.0   0.0
3      1.0  0.0    78530.0  0.0   9.0  0.0  ...  0.0  0.0   0.0   0.0   4.0   0.0
4      1.0  0.0   159537.0  0.0  12.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
...    ...  ...        ...  ...   ...  ...  ...  ...  ...   ...   ...   ...   ...
59     1.0  0.0   112963.0  0.0  10.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
60     0.0  0.0    34307.0  0.0  10.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
61     4.0  0.0   111795.0  0.0  13.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
62     4.0  0.0   411604.0  0.0   5.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
63     3.0  0.0   121441.0  0.0  10.0  0.0  ...  0.0  0.0   0.0   0.0   3.0   0.0

[64 rows x 14 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 64 entries, 0 to 63
Data columns (total 9 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          64 non-null     int64  
 1   Score_0        64 non-null     float64
 2   Proba_0        64 non-null     float64
 3   LogProba_0     64 non-null     float64
 4   Score_1        64 non-null     float64
 5   Proba_1        64 non-null     float64
 6   LogProba_1     64 non-null     float64
 7   Decision       64 non-null     int64  
 8   DecisionProba  64 non-null     float64
dtypes: float64(7), int64(2)
memory usage: 4.6 KB
    index   Score_0   Proba_0  ...  LogProba_1  Decision  DecisionProba
0       0  0.391583  0.446003  ...   -0.590596         1       0.553997
1       1  1.438921  0.867363  ...   -2.020139         0       0.867363
2       2  0.727231  0.611700  ...   -0.945976         0       0.611700
3       3  1.024718  0.740667  ...   -1.349641         0       0.740667
4       4  1.315889  0.836413  ...   -1.810410         0       0.836413
..    ...       ...       ...  ...         ...       ...            ...
59     59  1.123773  0.776875  ...   -1.500022         0       0.776875
60     60  1.123773  0.776875  ...   -1.500022         0       0.776875
61     61  0.391583  0.446003  ...   -0.590596         1       0.553997
62     62  1.559295  0.892697  ...   -2.232098         0       0.892697
63     63  1.124238  0.777036  ...   -1.500744         0       0.777036

[64 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
    index   Score_0  SQL_Proba_0  ...  Py_Proba_0  Py_Proba_1  Py_Decision
48     48  1.559295     0.892697  ...    0.892697    0.107303        <=50K
49     49  0.391583     0.446003  ...    0.446003    0.553997         >50K
50     50  1.559295     0.892697  ...    0.892697    0.107303        <=50K
51     51  1.123773     0.776875  ...    0.776874    0.223125        <=50K
52     52  0.980241     0.723218  ...    0.723218    0.276782        <=50K
53     53  1.559295     0.892697  ...    0.892697    0.107303        <=50K
54     54  1.559295     0.892697  ...    0.892697    0.107303        <=50K
55     55  1.124238     0.777036  ...    0.777036    0.222964        <=50K
56     56  1.559295     0.892697  ...    0.892697    0.107303        <=50K
57     57  0.727231     0.611700  ...    0.611699    0.388301        <=50K
58     58  0.665093     0.581805  ...    0.581805    0.418195        <=50K
59     59  1.123773     0.776875  ...    0.776874    0.223125        <=50K
60     60  1.123773     0.776875  ...    0.776874    0.223125        <=50K
61     61  0.391583     0.446003  ...    0.446003    0.553997         >50K
62     62  1.559295     0.892697  ...    0.892697    0.107303        <=50K
63     63  1.124238     0.777036  ...    0.777036    0.222964        <=50K

[16 rows x 12 columns]
MLLITE_CLASS_SQL_ERROR ('census_small', 'XGBClassifier', 'sqlite') ('Py_Proba_0', 'SQL_Proba_0') 2.0927244613784535e-07
    Py_Proba_0  SQL_Proba_0   SQL_Error_0
48    0.892697     0.892697 -2.033879e-07
49    0.446003     0.446003  2.693562e-07
50    0.892697     0.892697 -2.033879e-07
51    0.776874     0.776875 -2.903391e-07
52    0.723218     0.723218 -7.522461e-08
53    0.892697     0.892697 -2.033879e-07
54    0.892697     0.892697 -2.033879e-07
55    0.777036     0.777036 -1.111529e-07
56    0.892697     0.892697 -2.033879e-07
57    0.611699     0.611700 -1.868688e-07
58    0.581805     0.581805  1.195312e-07
59    0.776874     0.776875 -2.903391e-07
60    0.776874     0.776875 -2.903391e-07
61    0.446003     0.446003  2.693562e-07
62    0.892697     0.892697 -2.033879e-07
63    0.777036     0.777036 -1.111529e-07
MLLITE_CLASS_SQL_ERROR ('census_small', 'XGBClassifier', 'sqlite') ('Py_Proba_1', 'SQL_Proba_1') 2.0997093807531217e-07
    Py_Proba_1  SQL_Proba_1   SQL_Error_1
48    0.107303     0.107303  1.586844e-07
49    0.553997     0.553997 -2.991585e-07
50    0.107303     0.107303  1.586844e-07
51    0.223125     0.223125  2.307345e-07
52    0.276782     0.276782  4.542229e-08
53    0.107303     0.107303  1.586844e-07
54    0.107303     0.107303  1.586844e-07
55    0.222964     0.222964  1.111529e-07
56    0.107303     0.107303  1.586844e-07
57    0.388301     0.388300  2.762758e-07
58    0.418195     0.418195 -3.218774e-10
59    0.223125     0.223125  2.307345e-07
60    0.223125     0.223125  2.307345e-07
61    0.553997     0.553997 -2.991585e-07
62    0.107303     0.107303  1.586844e-07
63    0.222964     0.222964  1.111529e-07
MLLITE_CLASS_SQL_EXECUTION_STATUS ('census_small', 'XGBClassifier', 'sqlite', 'Success')
   Py_Decision  SQL_Decision
48       <=50K             0
49        >50K             1
50       <=50K             0
51       <=50K             0
52       <=50K             0
53       <=50K             0
54       <=50K             0
55       <=50K             0
56       <=50K             0
57       <=50K             0
58       <=50K             0
59       <=50K             0
60       <=50K             0
61        >50K             1
62       <=50K             0
63       <=50K             0
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
