    age  workclass     fnlwgt  ...  hoursperweek  native-country  target
0   2.0        0.0   188950.0  ...           3.0             0.0    >50K
1   1.0        0.0  1033222.0  ...           2.0             0.0   <=50K
2   1.0        0.0   129707.0  ...           1.0             0.0    >50K
3   1.0        0.0    78530.0  ...           4.0             0.0    >50K
4   1.0        0.0   159537.0  ...           2.0             0.0   <=50K
..  ...        ...        ...  ...           ...             ...     ...
59  1.0        0.0   112963.0  ...           2.0             0.0   <=50K
60  0.0        0.0    34307.0  ...           2.0             0.0   <=50K
61  4.0        0.0   111795.0  ...           2.0             0.0    >50K
62  4.0        0.0   411604.0  ...           2.0             0.0   <=50K
63  3.0        0.0   121441.0  ...           3.0             0.0   <=50K

[64 rows x 15 columns]
MLLITE_MODEL_SET_OPTIONS SVC None
MLLITE_MODEL_OPTIONS_DEFAULT SVC { "max_iter" : 128 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING SVC { ,  "max_iter" : 128  }
MLLITE_MODEL_JSON_AFTER_SETTING SVC None
('OPERATION_START', 'TRAINING')
[[2.000000e+00 0.000000e+00 1.889500e+05 0.000000e+00 1.400000e+01
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 3.000000e+00 0.000000e+00]
 [1.000000e+00 0.000000e+00 1.033222e+06 0.000000e+00 1.000000e+01
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 2.000000e+00 0.000000e+00]
 [1.000000e+00 0.000000e+00 1.297070e+05 0.000000e+00 1.300000e+01
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  4.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00]
 [1.000000e+00 0.000000e+00 7.853000e+04 0.000000e+00 9.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 4.000000e+00 0.000000e+00]
 [1.000000e+00 0.000000e+00 1.595370e+05 0.000000e+00 1.200000e+01
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 2.000000e+00 0.000000e+00]] ['>50K' '<=50K' '>50K' '>50K' '<=50K']
MLLITE_FIT_USING_MODEL mllite_svm_class.SVC_ff4_OO8
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_CLASSIFIER_FIT' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_CLASSIFIER_FIT' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_CLASSIFIER_FIT' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_CLASSIFIER_FIT' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_CV_FOLD_1' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_CV_FOLD_1' 24 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_CV_FOLD_1' 36 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_CV_FOLD_1' 48 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_CV_FOLD_1' 60 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_CV_FOLD_1' 72 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_CV_FOLD_1' 84 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_CV_FOLD_1' 96 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_CV_FOLD_1' 108 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_CV_FOLD_1' 120 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_CV_FOLD_1' 128 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_CV_FOLD_2' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_CV_FOLD_2' 24 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_CV_FOLD_3' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_CV_FOLD_3' 24 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_CV_FOLD_3' 36 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_CV_FOLD_4' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_CV_FOLD_4' 24 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_CV_FOLD_4' 36 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_CV_FOLD_4' 48 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_CV_FOLD_4' 60 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_CV_FOLD_5' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_CV_FOLD_5' 24 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_CV_FOLD_5' 36 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_CV_FOLD_5' 48 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_CV_FOLD_5' 60 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_CV_FOLD_5' 72 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global' 24 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global' 36 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global' 48 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global' 60 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_CLASSIFIER_FIT' 5 5
('OPERATION_END_ELAPSED', 0.193, 'TRAINING')
{ ,  "max_iter" : 128  }
{ ,  "max_iter" : 128  }
{
	"metadata" : { "model" : "Vapnik_SVC_RBF", "version" : "2024-W13", "signature" : "ff4_OO8"},
	"options" : {"svm_type" : "c_svc", "kernel" : "rbf", "degree" : 3, "gamma" : 0.000000, "coef0" : 0.000000, "cache_size" : 300, "tol" : 0.001000, "nu" : 0.500000, "epsilon" : 0.000000, "shrinking" : 0, "probability" : 1, "C" : 1.000000, "max_iter" : 128, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 14 },
	"classes" : [ "<=50K", ">50K" ],
	"svm_model" : {
	"classes" : 2,
	"L" : 35,
	"SupportVectors" : {
		"SV_00" : [ 1.000000, 0.000000, 159537.000000, 0.000000, 12.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 0.000000 ],
		"SV_01" : [ 2.000000, 0.000000, 25806.000000, 0.000000, 16.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 0.000000 ],
		"SV_02" : [ 3.000000, 0.000000, 126840.000000, 0.000000, 10.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 0.000000 ],
		"SV_03" : [ 4.000000, 0.000000, 249368.000000, 0.000000, 9.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 4.000000, 0.000000 ],
		"SV_04" : [ 0.000000, 0.000000, 520759.000000, 0.000000, 9.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000 ],
		"SV_05" : [ 2.000000, 0.000000, 421633.000000, 0.000000, 11.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 0.000000 ],
		"SV_06" : [ 4.000000, 0.000000, 187919.000000, 0.000000, 14.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 0.000000, 2.000000, 0.000000 ],
		"SV_07" : [ 1.000000, 0.000000, 210313.000000, 0.000000, 9.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 3.000000, 0.000000 ],
		"SV_08" : [ 4.000000, 0.000000, 100301.000000, 0.000000, 6.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
		"SV_09" : [ 3.000000, 0.000000, 144084.000000, 0.000000, 9.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 0.000000 ],
		"SV_10" : [ 2.000000, 0.000000, 79036.000000, 0.000000, 9.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 0.000000 ],
		"SV_11" : [ 1.000000, 0.000000, 150324.000000, 0.000000, 11.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 0.000000 ],
		"SV_12" : [ 1.000000, 0.000000, 108386.000000, 0.000000, 12.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 0.000000 ],
		"SV_13" : [ 4.000000, 0.000000, 162137.000000, 0.000000, 9.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 0.000000 ],
		"SV_14" : [ 2.000000, 0.000000, 222504.000000, 0.000000, 11.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 0.000000 ],
		"SV_15" : [ 4.000000, 0.000000, 171831.000000, 0.000000, 9.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 2.000000, 0.000000 ],
		"SV_16" : [ 4.000000, 0.000000, 142297.000000, 0.000000, 6.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
		"SV_17" : [ 0.000000, 0.000000, 86745.000000, 0.000000, 13.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 0.000000 ],
		"SV_18" : [ 2.000000, 0.000000, 54102.000000, 0.000000, 11.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 0.000000 ],
		"SV_19" : [ 1.000000, 0.000000, 112963.000000, 0.000000, 10.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 0.000000 ],
		"SV_20" : [ 3.000000, 0.000000, 121441.000000, 0.000000, 10.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 3.000000, 0.000000 ],
		"SV_21" : [ 2.000000, 0.000000, 188950.000000, 0.000000, 14.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 3.000000, 0.000000 ],
		"SV_22" : [ 1.000000, 0.000000, 129707.000000, 0.000000, 13.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 4.000000, 0.000000, 1.000000, 0.000000 ],
		"SV_23" : [ 1.000000, 0.000000, 78530.000000, 0.000000, 9.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 4.000000, 0.000000 ],
		"SV_24" : [ 3.000000, 0.000000, 96586.000000, 0.000000, 10.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 0.000000 ],
		"SV_25" : [ 1.000000, 0.000000, 229656.000000, 0.000000, 14.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 2.000000, 0.000000 ],
		"SV_26" : [ 2.000000, 0.000000, 192569.000000, 0.000000, 15.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 0.000000 ],
		"SV_27" : [ 2.000000, 0.000000, 116975.000000, 0.000000, 10.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 3.000000, 0.000000 ],
		"SV_28" : [ 2.000000, 0.000000, 161510.000000, 0.000000, 13.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 0.000000, 2.000000, 0.000000 ],
		"SV_29" : [ 2.000000, 0.000000, 185145.000000, 0.000000, 16.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 0.000000 ],
		"SV_30" : [ 3.000000, 0.000000, 106707.000000, 0.000000, 12.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
		"SV_31" : [ 1.000000, 0.000000, 420749.000000, 0.000000, 12.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 0.000000 ],
		"SV_32" : [ 3.000000, 0.000000, 187563.000000, 0.000000, 10.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 3.000000, 0.000000 ],
		"SV_33" : [ 4.000000, 0.000000, 105582.000000, 0.000000, 13.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 4.000000, 2.000000, 0.000000 ],
		"SV_34" : [ 4.000000, 0.000000, 111795.000000, 0.000000, 13.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 0.000000 ]
	},
	"SupportVectorsCoefs" : {
		"SV_coef_0" : [ 1.000000, 0.052301, 1.000000, 0.365314, 0.015988, 0.950858, 1.000000, 1.000000, 1.000000, 0.074093, 0.325296, 1.000000, 1.000000, 0.001863, 0.942565, 1.000000, 0.146906, 1.000000, 0.124816, 1.000000, 1.000000, -1.000000, -1.000000, -1.000000, -1.000000, -1.000000, -1.000000, -1.000000, -1.000000, -1.000000, -1.000000, -1.000000, -1.000000, -1.000000, -1.000000 ]
	},
	"rho" : [ -1.001551 ],
	"nSV" : [ 21, 14 ],
	"probA" : [ 271.037506 ],
	"probB" : [ -272.283844 ],
	"n_iter" : [ 70 ]
}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/SVC/mllite.SVC_census_small.json'

MLLITE_MODEL_SET_OPTIONS SVC None
MLLITE_MODEL_OPTIONS_DEFAULT SVC { "max_iter" : 128 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING SVC { ,  "max_iter" : 128  }
MLLITE_MODEL_JSON_AFTER_SETTING SVC None
MLLITE_RELOADING_MODEL mllite_svm_class.SVC_ff4_OO8
{
	"metadata" : { "model" : "Vapnik_SVC_RBF", "version" : "2024-W13", "signature" : "ff4_OO8"},
	"options" : {"svm_type" : "c_svc", "kernel" : "rbf", "degree" : 3, "gamma" : 0.000000, "coef0" : 0.000000, "cache_size" : 300, "tol" : 0.001000, "nu" : 0.500000, "epsilon" : 0.000000, "shrinking" : 0, "probability" : 1, "C" : 1.000000, "max_iter" : 128, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 14 },
	"classes" : [ "<=50K", ">50K" ],
	"svm_model" : {
	"classes" : 2,
	"L" : 35,
	"SupportVectors" : {
		"SV_00" : [ 1.000000, 0.000000, 159537.000000, 0.000000, 12.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 0.000000 ],
		"SV_01" : [ 2.000000, 0.000000, 25806.000000, 0.000000, 16.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 0.000000 ],
		"SV_02" : [ 3.000000, 0.000000, 126840.000000, 0.000000, 10.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 0.000000 ],
		"SV_03" : [ 4.000000, 0.000000, 249368.000000, 0.000000, 9.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 4.000000, 0.000000 ],
		"SV_04" : [ 0.000000, 0.000000, 520759.000000, 0.000000, 9.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000 ],
		"SV_05" : [ 2.000000, 0.000000, 421633.000000, 0.000000, 11.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 0.000000 ],
		"SV_06" : [ 4.000000, 0.000000, 187919.000000, 0.000000, 14.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 0.000000, 2.000000, 0.000000 ],
		"SV_07" : [ 1.000000, 0.000000, 210313.000000, 0.000000, 9.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 3.000000, 0.000000 ],
		"SV_08" : [ 4.000000, 0.000000, 100301.000000, 0.000000, 6.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
		"SV_09" : [ 3.000000, 0.000000, 144084.000000, 0.000000, 9.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 0.000000 ],
		"SV_10" : [ 2.000000, 0.000000, 79036.000000, 0.000000, 9.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 0.000000 ],
		"SV_11" : [ 1.000000, 0.000000, 150324.000000, 0.000000, 11.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 0.000000 ],
		"SV_12" : [ 1.000000, 0.000000, 108386.000000, 0.000000, 12.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 0.000000 ],
		"SV_13" : [ 4.000000, 0.000000, 162137.000000, 0.000000, 9.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 0.000000 ],
		"SV_14" : [ 2.000000, 0.000000, 222504.000000, 0.000000, 11.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 0.000000 ],
		"SV_15" : [ 4.000000, 0.000000, 171831.000000, 0.000000, 9.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 2.000000, 0.000000 ],
		"SV_16" : [ 4.000000, 0.000000, 142297.000000, 0.000000, 6.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
		"SV_17" : [ 0.000000, 0.000000, 86745.000000, 0.000000, 13.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 0.000000 ],
		"SV_18" : [ 2.000000, 0.000000, 54102.000000, 0.000000, 11.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 0.000000 ],
		"SV_19" : [ 1.000000, 0.000000, 112963.000000, 0.000000, 10.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 0.000000 ],
		"SV_20" : [ 3.000000, 0.000000, 121441.000000, 0.000000, 10.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 3.000000, 0.000000 ],
		"SV_21" : [ 2.000000, 0.000000, 188950.000000, 0.000000, 14.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 3.000000, 0.000000 ],
		"SV_22" : [ 1.000000, 0.000000, 129707.000000, 0.000000, 13.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 4.000000, 0.000000, 1.000000, 0.000000 ],
		"SV_23" : [ 1.000000, 0.000000, 78530.000000, 0.000000, 9.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 4.000000, 0.000000 ],
		"SV_24" : [ 3.000000, 0.000000, 96586.000000, 0.000000, 10.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 0.000000 ],
		"SV_25" : [ 1.000000, 0.000000, 229656.000000, 0.000000, 14.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 2.000000, 0.000000 ],
		"SV_26" : [ 2.000000, 0.000000, 192569.000000, 0.000000, 15.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 0.000000 ],
		"SV_27" : [ 2.000000, 0.000000, 116975.000000, 0.000000, 10.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 3.000000, 0.000000 ],
		"SV_28" : [ 2.000000, 0.000000, 161510.000000, 0.000000, 13.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 0.000000, 2.000000, 0.000000 ],
		"SV_29" : [ 2.000000, 0.000000, 185145.000000, 0.000000, 16.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 0.000000 ],
		"SV_30" : [ 3.000000, 0.000000, 106707.000000, 0.000000, 12.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
		"SV_31" : [ 1.000000, 0.000000, 420749.000000, 0.000000, 12.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 0.000000 ],
		"SV_32" : [ 3.000000, 0.000000, 187563.000000, 0.000000, 10.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 3.000000, 0.000000 ],
		"SV_33" : [ 4.000000, 0.000000, 105582.000000, 0.000000, 13.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 4.000000, 2.000000, 0.000000 ],
		"SV_34" : [ 4.000000, 0.000000, 111795.000000, 0.000000, 13.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 0.000000 ]
	},
	"SupportVectorsCoefs" : {
		"SV_coef_0" : [ 1.000000, 0.052301, 1.000000, 0.365314, 0.015988, 0.950858, 1.000000, 1.000000, 1.000000, 0.074093, 0.325296, 1.000000, 1.000000, 0.001863, 0.942565, 1.000000, 0.146906, 1.000000, 0.124816, 1.000000, 1.000000, -1.000000, -1.000000, -1.000000, -1.000000, -1.000000, -1.000000, -1.000000, -1.000000, -1.000000, -1.000000, -1.000000, -1.000000, -1.000000, -1.000000 ]
	},
	"rho" : [ -1.001551 ],
	"nSV" : [ 21, 14 ],
	"probA" : [ 271.037506 ],
	"probB" : [ -272.283844 ],
	"n_iter" : [ 70 ]
}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ "<=50K", ">50K" ],
	"dataset" : 	{
		"dataset_features" : 14,
		"dataset_rows" : 64
	},
	"metadata" :  { "model" : "Vapnik_SVC_RBF", "signature" : "ff4_OO8", "version" : "2024-W13" },
	"options" :  { "C" : 1.0, "cache_size" : 300, "coef0" : 0.0, "degree" : 3, "epsilon" : 0.0, "gamma" : 0.0, "kernel" : "rbf", "max_iter" : 128, "nu" : 0.5, "probability" : 1, "random_state" : 1789, "shrinking" : 0, "svm_type" : "c_svc", "tol" : 0.001 },
	"svm_model" : 	{
		"L" : 35,
		"SupportVectors" : 	{
			"SV_00" : [ 1.0, 0.0, 159537.0, 0.0, 12.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0 ],
			"SV_01" : [ 2.0, 0.0, 25806.0, 0.0, 16.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0 ],
			"SV_02" : [ 3.0, 0.0, 126840.0, 0.0, 10.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0 ],
			"SV_03" : [ 4.0, 0.0, 249368.0, 0.0, 9.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.0, 0.0 ],
			"SV_04" : [ 0.0, 0.0, 520759.0, 0.0, 9.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0 ],
			"SV_05" : [ 2.0, 0.0, 421633.0, 0.0, 11.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0 ],
			"SV_06" : [ 4.0, 0.0, 187919.0, 0.0, 14.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0, 2.0, 0.0 ],
			"SV_07" : [ 1.0, 0.0, 210313.0, 0.0, 9.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.0, 0.0 ],
			"SV_08" : [ 4.0, 0.0, 100301.0, 0.0, 6.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ],
			"SV_09" : [ 3.0, 0.0, 144084.0, 0.0, 9.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0 ],
			"SV_10" : [ 2.0, 0.0, 79036.0, 0.0, 9.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0 ],
			"SV_11" : [ 1.0, 0.0, 150324.0, 0.0, 11.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0 ],
			"SV_12" : [ 1.0, 0.0, 108386.0, 0.0, 12.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0 ],
			"SV_13" : [ 4.0, 0.0, 162137.0, 0.0, 9.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0 ],
			"SV_14" : [ 2.0, 0.0, 222504.0, 0.0, 11.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0 ],
			"SV_15" : [ 4.0, 0.0, 171831.0, 0.0, 9.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 2.0, 0.0 ],
			"SV_16" : [ 4.0, 0.0, 142297.0, 0.0, 6.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ],
			"SV_17" : [ 0.0, 0.0, 86745.0, 0.0, 13.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0 ],
			"SV_18" : [ 2.0, 0.0, 54102.0, 0.0, 11.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0 ],
			"SV_19" : [ 1.0, 0.0, 112963.0, 0.0, 10.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0 ],
			"SV_20" : [ 3.0, 0.0, 121441.0, 0.0, 10.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.0, 0.0 ],
			"SV_21" : [ 2.0, 0.0, 188950.0, 0.0, 14.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.0, 0.0 ],
			"SV_22" : [ 1.0, 0.0, 129707.0, 0.0, 13.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.0, 0.0, 1.0, 0.0 ],
			"SV_23" : [ 1.0, 0.0, 78530.0, 0.0, 9.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.0, 0.0 ],
			"SV_24" : [ 3.0, 0.0, 96586.0, 0.0, 10.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0 ],
			"SV_25" : [ 1.0, 0.0, 229656.0, 0.0, 14.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 2.0, 0.0 ],
			"SV_26" : [ 2.0, 0.0, 192569.0, 0.0, 15.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0 ],
			"SV_27" : [ 2.0, 0.0, 116975.0, 0.0, 10.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 3.0, 0.0 ],
			"SV_28" : [ 2.0, 0.0, 161510.0, 0.0, 13.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0, 2.0, 0.0 ],
			"SV_29" : [ 2.0, 0.0, 185145.0, 0.0, 16.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0 ],
			"SV_30" : [ 3.0, 0.0, 106707.0, 0.0, 12.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ],
			"SV_31" : [ 1.0, 0.0, 420749.0, 0.0, 12.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0 ],
			"SV_32" : [ 3.0, 0.0, 187563.0, 0.0, 10.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.0, 0.0 ],
			"SV_33" : [ 4.0, 0.0, 105582.0, 0.0, 13.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.0, 2.0, 0.0 ],
			"SV_34" : [ 4.0, 0.0, 111795.0, 0.0, 13.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0 ]
		},
		"SupportVectorsCoefs" : 	{
			"SV_coef_0" : [ 1.0, 0.052301, 1.0, 0.365314, 0.015988, 0.950858, 1.0, 1.0, 1.0, 0.074093, 0.325296, 1.0, 1.0, 0.001863, 0.942565, 1.0, 0.146906, 1.0, 0.124816, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0 ]
		},
		"classes" : 2,
		"nSV" : [ 21, 14 ],
		"n_iter" : [ 70 ],
		"probA" : [ 271.037506 ],
		"probB" : [ -272.283844 ],
		"rho" : [ -1.001551 ]
	}
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0. 1.]
 [1. 0.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]]
(64, 2)
(64,) float32
MODEL_PERFS {'class_name': 'mllite.SVC', 'model_name': 'SVC', 'options': None, 'dataset': 'census_small', 'size': 64, 'accuracy': 0.78125, 'auc': 0.51}
WRITING_PERF_CODE 'logs/auto_tests/classification/SVC/mllite.SVC_census_small.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.SVC', 'model_name': 'SVC', 'options': None, 'dataset': 'census_small', 'training_time_in_sec': 0.193, 'prediction_time_in_sec': 0.0}
WRITING_SQL_CODE 'logs/auto_tests/classification/SVC/mllite.SVC_census_small_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('census_small', 'SVC', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
"SV_data" AS
 ( SELECT 
   "Values"."sv_idx" AS "sv_idx",
   CAST("Values"."sv_0" AS FLOAT) AS "sv_0",
   CAST("Values"."sv_1" AS FLOAT) AS "sv_1",
   CAST("Values"."sv_2" AS FLOAT) AS "sv_2",
   CAST("Values"."sv_3" AS FLOAT) AS "sv_3",
   CAST("Values"."sv_4" AS FLOAT) AS "sv_4",
   CAST("Values"."sv_5" AS FLOAT) AS "sv_5",
   CAST("Values"."sv_6" AS FLOAT) AS "sv_6",
   CAST("Values"."sv_7" 
SQL_OUT_PUT_FIRST_LINES_END ('census_small', 'SVC', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('census_small', 'SVC', 'duckdb')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('census_small', 'SVC', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 64 entries, 0 to 63
Data columns (total 14 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     64 non-null     float32
 1   X_1     64 non-null     float32
 2   X_2     64 non-null     float32
 3   X_3     64 non-null     float32
 4   X_4     64 non-null     float32
 5   X_5     64 non-null     float32
 6   X_6     64 non-null     float32
 7   X_7     64 non-null     float32
 8   X_8     64 non-null     float32
 9   X_9     64 non-null     float32
 10  X_10    64 non-null     float32
 11  X_11    64 non-null     float32
 12  X_12    64 non-null     float32
 13  X_13    64 non-null     float32
dtypes: float32(14)
memory usage: 4.0 KB
       X_0  X_1        X_2  X_3   X_4  X_5  ...  X_8  X_9  X_10  X_11  X_12  X_13
index                                       ...                                  
0      2.0  0.0   188950.0  0.0  14.0  0.0  ...  0.0  0.0   0.0   0.0   3.0   0.0
1      1.0  0.0  1033222.0  0.0  10.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
2      1.0  0.0   129707.0  0.0  13.0  0.0  ...  0.0  0.0   4.0   0.0   1.0   0.0
3      1.0  0.0    78530.0  0.0   9.0  0.0  ...  0.0  0.0   0.0   0.0   4.0   0.0
4      1.0  0.0   159537.0  0.0  12.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
...    ...  ...        ...  ...   ...  ...  ...  ...  ...   ...   ...   ...   ...
59     1.0  0.0   112963.0  0.0  10.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
60     0.0  0.0    34307.0  0.0  10.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
61     4.0  0.0   111795.0  0.0  13.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
62     4.0  0.0   411604.0  0.0   5.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
63     3.0  0.0   121441.0  0.0  10.0  0.0  ...  0.0  0.0   0.0   0.0   3.0   0.0

[64 rows x 14 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 64 entries, 0 to 63
Data columns (total 9 columns):
 #   Column         Non-Null Count  Dtype 
---  ------         --------------  ----- 
 0   index          64 non-null     int64 
 1   Score_0        64 non-null     int64 
 2   Proba_0        0 non-null      object
 3   LogProba_0     0 non-null      object
 4   Score_1        64 non-null     int64 
 5   Proba_1        0 non-null      object
 6   LogProba_1     0 non-null      object
 7   Decision       0 non-null      object
 8   DecisionProba  0 non-null      object
dtypes: int64(3), object(6)
memory usage: 4.6+ KB
    index  Score_0 Proba_0 LogProba_0  ...  Proba_1 LogProba_1 Decision DecisionProba
0       0        1    None       None  ...     None       None     None          None
1       1        1    None       None  ...     None       None     None          None
2       2        1    None       None  ...     None       None     None          None
3       3        1    None       None  ...     None       None     None          None
4       4        1    None       None  ...     None       None     None          None
..    ...      ...     ...        ...  ...      ...        ...      ...           ...
59     59        1    None       None  ...     None       None     None          None
60     60        1    None       None  ...     None       None     None          None
61     61        1    None       None  ...     None       None     None          None
62     62        1    None       None  ...     None       None     None          None
63     63        1    None       None  ...     None       None     None          None

[64 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
    index  Score_0 SQL_Proba_0  ...    Py_Proba_0  Py_Proba_1 Py_Decision
48     48        1        None  ...  3.000001e-14         1.0       <=50K
49     49        1        None  ...  3.000001e-14         1.0       <=50K
50     50        1        None  ...  3.000001e-14         1.0       <=50K
51     51        1        None  ...  3.000001e-14         1.0       <=50K
52     52        1        None  ...  3.000001e-14         1.0       <=50K
53     53        1        None  ...  3.000001e-14         1.0       <=50K
54     54        1        None  ...  3.000001e-14         1.0       <=50K
55     55        1        None  ...  3.000001e-14         1.0       <=50K
56     56        1        None  ...  3.000001e-14         1.0       <=50K
57     57        1        None  ...  3.000001e-14         1.0       <=50K
58     58        1        None  ...  3.000001e-14         1.0       <=50K
59     59        1        None  ...  3.000001e-14         1.0       <=50K
60     60        1        None  ...  3.000001e-14         1.0       <=50K
61     61        1        None  ...  3.000001e-14         1.0       <=50K
62     62        1        None  ...  3.000001e-14         1.0       <=50K
63     63        1        None  ...  3.000001e-14         1.0       <=50K

[16 rows x 12 columns]
MLLITE_CLASS_SQL_ERROR ('census_small', 'SVC', 'duckdb') ('Py_Proba_0', 'SQL_Proba_0') nan
      Py_Proba_0 SQL_Proba_0 SQL_Error_0
48  3.000001e-14        None         NaN
49  3.000001e-14        None         NaN
50  3.000001e-14        None         NaN
51  3.000001e-14        None         NaN
52  3.000001e-14        None         NaN
53  3.000001e-14        None         NaN
54  3.000001e-14        None         NaN
55  3.000001e-14        None         NaN
56  3.000001e-14        None         NaN
57  3.000001e-14        None         NaN
58  3.000001e-14        None         NaN
59  3.000001e-14        None         NaN
60  3.000001e-14        None         NaN
61  3.000001e-14        None         NaN
62  3.000001e-14        None         NaN
63  3.000001e-14        None         NaN
MLLITE_CLASS_SQL_ERROR ('census_small', 'SVC', 'duckdb') ('Py_Proba_1', 'SQL_Proba_1') nan
    Py_Proba_1 SQL_Proba_1 SQL_Error_1
48         1.0        None         NaN
49         1.0        None         NaN
50         1.0        None         NaN
51         1.0        None         NaN
52         1.0        None         NaN
53         1.0        None         NaN
54         1.0        None         NaN
55         1.0        None         NaN
56         1.0        None         NaN
57         1.0        None         NaN
58         1.0        None         NaN
59         1.0        None         NaN
60         1.0        None         NaN
61         1.0        None         NaN
62         1.0        None         NaN
63         1.0        None         NaN
MLLITE_CLASS_SQL_EXECUTION_STATUS ('census_small', 'SVC', 'duckdb', 'Success')
   Py_Decision SQL_Decision
48       <=50K         None
49       <=50K         None
50       <=50K         None
51       <=50K         None
52       <=50K         None
53       <=50K         None
54       <=50K         None
55       <=50K         None
56       <=50K         None
57       <=50K         None
58       <=50K         None
59       <=50K         None
60       <=50K         None
61       <=50K         None
62       <=50K         None
63       <=50K         None
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/SVC/mllite.SVC_census_small_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('census_small', 'SVC', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
"SV_data" AS
 ( SELECT 
   "Values"."sv_idx" AS "sv_idx",
   CAST("Values"."sv_0" AS FLOAT) AS "sv_0",
   CAST("Values"."sv_1" AS FLOAT) AS "sv_1",
   CAST("Values"."sv_2" AS FLOAT) AS "sv_2",
   CAST("Values"."sv_3" AS FLOAT) AS "sv_3",
   CAST("Values"."sv_4" AS FLOAT) AS "sv_4",
   CAST("Values"."sv_5" AS FLOAT) AS "sv_5",
   CAST("Values"."sv_6" AS FLOAT) AS "sv_6",
   CAST("Values"."sv_7" 
SQL_OUT_PUT_FIRST_LINES_END ('census_small', 'SVC', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('census_small', 'SVC', 'sqlite')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('census_small', 'SVC', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 64 entries, 0 to 63
Data columns (total 14 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     64 non-null     float32
 1   X_1     64 non-null     float32
 2   X_2     64 non-null     float32
 3   X_3     64 non-null     float32
 4   X_4     64 non-null     float32
 5   X_5     64 non-null     float32
 6   X_6     64 non-null     float32
 7   X_7     64 non-null     float32
 8   X_8     64 non-null     float32
 9   X_9     64 non-null     float32
 10  X_10    64 non-null     float32
 11  X_11    64 non-null     float32
 12  X_12    64 non-null     float32
 13  X_13    64 non-null     float32
dtypes: float32(14)
memory usage: 4.0 KB
       X_0  X_1        X_2  X_3   X_4  X_5  ...  X_8  X_9  X_10  X_11  X_12  X_13
index                                       ...                                  
0      2.0  0.0   188950.0  0.0  14.0  0.0  ...  0.0  0.0   0.0   0.0   3.0   0.0
1      1.0  0.0  1033222.0  0.0  10.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
2      1.0  0.0   129707.0  0.0  13.0  0.0  ...  0.0  0.0   4.0   0.0   1.0   0.0
3      1.0  0.0    78530.0  0.0   9.0  0.0  ...  0.0  0.0   0.0   0.0   4.0   0.0
4      1.0  0.0   159537.0  0.0  12.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
...    ...  ...        ...  ...   ...  ...  ...  ...  ...   ...   ...   ...   ...
59     1.0  0.0   112963.0  0.0  10.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
60     0.0  0.0    34307.0  0.0  10.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
61     4.0  0.0   111795.0  0.0  13.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
62     4.0  0.0   411604.0  0.0   5.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
63     3.0  0.0   121441.0  0.0  10.0  0.0  ...  0.0  0.0   0.0   0.0   3.0   0.0

[64 rows x 14 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
MODEL_SQL_EXECUTION_FAILED ('census_small', 'SVC', 'sqlite', '(sqlite3.OperationalError) no such function: ANY_VALUE')
WRITING_SQL_CODE 'logs/auto_tests/classification/SVC/mllite.SVC_census_small_pgsql.sql'



SQL_OUT_PUT_FIRST_LINES_START ('census_small', 'SVC', 'pgsql')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
"SV_data" AS
 ( SELECT 
   "Values"."sv_idx" AS "sv_idx",
   CAST("Values"."sv_0" AS FLOAT) AS "sv_0",
   CAST("Values"."sv_1" AS FLOAT) AS "sv_1",
   CAST("Values"."sv_2" AS FLOAT) AS "sv_2",
   CAST("Values"."sv_3" AS FLOAT) AS "sv_3",
   CAST("Values"."sv_4" AS FLOAT) AS "sv_4",
   CAST("Values"."sv_5" AS FLOAT) AS "sv_5",
   CAST("Values"."sv_6" AS FLOAT) AS "sv_6",
   CAST("Values"."sv_7" 
SQL_OUT_PUT_FIRST_LINES_END ('census_small', 'SVC', 'pgsql')
SQL_OUT_PUT_LAST_LINES_START ('census_small', 'SVC', 'pgsql')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('census_small', 'SVC', 'pgsql') 




COPY_TRAINING_DATA_TO_SQLITE_START
