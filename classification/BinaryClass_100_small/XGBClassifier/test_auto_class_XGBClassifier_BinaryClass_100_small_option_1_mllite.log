READING_CSV BinaryClass_100_small ['data/small/BinaryClass_100_small.csv']
         X_0       X_1       X_2  ...      X_98      X_99  target
0  -0.001923 -2.371688 -1.181275  ... -0.370192  0.432550       0
1  -0.094974  0.975498  0.650450  ... -0.220261  0.222239       1
2   0.060564 -1.800755  0.053222  ...  0.793880 -0.469869       0
3  -0.113704  0.680545 -0.819322  ...  0.428237 -0.069851       1
4  -0.494085  0.103852  0.838905  ... -0.711862 -0.910029       1
..       ...       ...       ...  ...       ...       ...     ...
59 -1.169706  0.833569 -1.073999  ... -0.652372  0.767728       1
60 -2.264480 -0.441056  0.919001  ... -0.118272  1.843460       0
61  0.085538 -0.999074  1.070574  ...  0.081873  0.336336       0
62  2.044900  2.532641  1.239658  ...  2.476811 -0.145179       1
63 -0.178941  1.595470  1.800108  ... -0.852391  0.839960       0

[64 rows x 101 columns]
MLLITE_MODEL_SET_OPTIONS XGBClassifier {"max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 }
MLLITE_MODEL_OPTIONS_DEFAULT XGBClassifier { "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING XGBClassifier { "max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 ,  "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32  }
MLLITE_MODEL_JSON_AFTER_SETTING XGBClassifier None
('OPERATION_START', 'TRAINING')
[[-1.92301034e-03 -2.37168813e+00 -1.18127453e+00 -8.41143429e-01
  -2.27833748e+00  5.56165516e-01 -4.33400422e-01  6.68530583e-01
  -4.45269734e-01  1.08730054e+00  9.94111359e-01  6.15174830e-01
  -1.42712057e-01 -5.43691695e-01  2.51998758e+00 -5.76757491e-01
  -4.96940762e-01 -1.37897694e+00 -1.15515006e+00 -5.45445085e-01
   9.39146876e-01  5.58746934e-01  6.42707646e-02  9.41048622e-01
   3.70287567e-01  3.05628687e-01  6.59754872e-01 -5.34938514e-01
   3.41925710e-01 -9.02376890e-01  2.64374584e-01  1.05001062e-01
   1.58149529e+00 -2.39867258e+00  3.65284145e-01 -1.43215582e-01
  -6.91276610e-01 -1.09551179e+00  6.00470424e-01 -1.27839279e+00
  -1.51853383e+00 -7.39996552e-01 -1.09941888e+00 -1.00493443e+00
   5.02316713e-01  5.94181597e-01 -4.22067046e-01  5.80759704e-01
  -9.45604265e-01 -8.63473296e-01  1.73380065e+00  4.05579746e-01
  -1.31068170e+00 -2.56809741e-01  2.29151353e-01  3.84321451e-01
  -5.51349640e-01  1.19658613e+00  3.84441763e-01 -3.77902836e-01
   6.52891636e-01 -1.64592862e+00  1.05294979e+00  8.23636234e-01
   1.37784421e+00 -7.36219212e-02  1.61197138e+00 -1.98621261e+00
   1.18670213e+00  1.34875977e+00 -3.60972047e-01 -2.41051650e+00
  -1.94886446e+00 -6.28324568e-01 -1.05058098e+00 -2.54030657e+00
   1.56220317e-01  1.23859513e+00 -8.52460384e-01 -1.03192151e+00
   7.05807090e-01  3.12049419e-01  1.97033249e-02 -1.49339557e+00
  -9.82222795e-01 -2.90390223e-01  9.48299840e-02 -1.34775198e+00
  -5.61226130e-01 -4.61151361e-01  6.03559203e-02  1.79786313e+00
   4.18422371e-01  1.31290972e+00 -5.27386606e-01  7.88664445e-02
  -4.97837096e-01 -1.82821357e+00 -3.70192051e-01  4.32550102e-01]
 [-9.49740633e-02  9.75498080e-01  6.50450408e-01 -1.63987532e-01
   1.19377956e-01 -8.87404203e-01 -9.85744298e-01 -1.57699615e-01
  -5.53503856e-02 -4.89691913e-01  3.95107746e-01 -1.86406958e+00
   2.06569105e-01  1.19034803e+00  9.08305228e-01 -6.49589598e-01
   8.17796350e-01 -5.65862536e-01 -1.62303770e+00  1.96794593e+00
  -9.01196182e-01  2.21370864e+00 -1.26184642e+00  7.29401052e-01
   1.97460622e-01  5.53488255e-01 -4.16989103e-02  2.21864507e-01
  -1.60427725e+00 -1.14986289e+00  7.22467899e-01 -1.29073668e+00
  -6.89864635e-01 -9.29718554e-01  5.53363264e-01  7.69885540e-01
   3.78352642e-01  9.23741400e-01  2.08281234e-01  3.80240083e-02
  -8.87683213e-01  3.33101004e-01  1.00212204e+00  1.69690156e+00
   2.44307727e-01 -1.86227322e+00 -4.06760365e-01 -6.38921678e-01
  -1.67613909e-01  1.53844684e-01  8.42663527e-01 -1.62592280e+00
  -1.59404182e+00  7.38830745e-01 -8.74506593e-01 -1.22548962e+00
  -5.25257468e-01 -4.70152795e-01 -1.15468964e-01  4.96193357e-02
  -8.19156051e-01  2.99073744e+00  4.35046047e-01 -7.59149939e-02
  -1.56339154e-01 -6.03336692e-01 -6.89302310e-02 -2.13743591e+00
   2.04948735e+00 -1.69878006e+00  1.88749945e+00  4.05677646e-01
  -5.13272583e-01 -5.22737443e-01  1.29273057e+00  1.05886006e+00
  -3.68327975e-01  5.86420834e-01  1.94629407e+00  3.96328539e-01
  -2.22653337e-02  1.84837833e-01  1.55221510e+00  7.67667949e-01
   4.12257463e-01 -4.74151075e-02 -8.58929634e-01 -3.77886832e-01
   8.46213162e-01  3.82268399e-01  4.52266574e-01  3.67907345e-01
  -1.74708021e+00  2.97413111e-01  1.39319599e-01  6.18183054e-02
  -1.14589304e-01 -4.91930753e-01 -2.20261484e-01  2.22238824e-01]
 [ 6.05639964e-02 -1.80075538e+00  5.32221198e-02  1.13705254e+00
  -1.11454320e+00 -6.12991691e-01  6.58748865e-01 -6.18573092e-02
  -1.36188239e-01 -6.56564057e-01 -3.13579798e-01  2.24243671e-01
   4.27837819e-01  1.69016683e+00  1.13053429e+00 -1.34645033e+00
   4.66799051e-01 -1.12207568e+00 -1.80836928e+00  2.61885583e-01
  -1.46927464e+00 -2.81107831e+00  4.71088886e-01 -9.81634736e-01
   1.54162824e-01 -9.45118725e-01 -7.67153800e-01  2.78682500e-01
  -3.97465616e-01 -3.84304225e-01 -2.76822597e-02 -9.13487732e-01
   5.98323822e-01  7.34539688e-01  1.80665767e+00 -1.05402780e+00
  -2.37955928e+00 -1.01849586e-01 -1.25161910e+00 -3.40773277e-02
  -5.89699388e-01  4.64297593e-01 -7.69342899e-01 -4.94058549e-01
   1.90302110e+00 -1.28648996e+00 -2.02911228e-01  1.30722094e+00
  -9.35619593e-01 -7.99053609e-01 -8.04178536e-01 -1.16746537e-01
   1.43000674e+00  5.87966681e-01 -7.76776969e-01  1.36388794e-01
  -1.52828979e+00  1.08090746e+00  1.06615996e+00  6.13719285e-01
  -1.56638134e+00 -2.99079442e+00 -9.23732638e-01  1.24830830e+00
  -3.28231335e-01 -7.79168904e-01 -2.46622109e+00  7.15086102e-01
  -1.71361104e-01  1.16359353e+00  4.88843828e-01  8.57221186e-01
  -1.30257130e+00  7.77815223e-01  1.57720637e+00  2.45493579e+00
   8.09955537e-01  2.80593574e-01  4.77433234e-01 -2.73493845e-02
   1.58274734e+00  1.18173122e+00  1.69938195e+00  1.51718628e+00
  -1.84085965e-01  6.12297058e-01 -1.40703619e-01  9.34502482e-01
   3.93216848e-01 -9.26083088e-01  7.44229436e-01  2.88019562e+00
   1.62651956e+00 -1.24643338e+00  1.11573339e-02  1.65077448e-01
   3.82369637e+00  1.63663363e+00  7.93880284e-01 -4.69868749e-01]
 [-1.13704078e-01  6.80544913e-01 -8.19322228e-01 -9.69877481e-01
   7.71628141e-01 -1.57383764e+00  2.48730704e-01  5.41360080e-01
  -1.59036744e+00 -3.12054634e-01 -1.64359498e+00  1.50122166e+00
  -1.00549912e+00 -1.26486790e+00 -2.33127594e+00  1.01962104e-01
   5.75607657e-01 -1.20477211e+00 -9.19741020e-02 -1.16153848e+00
   2.32242107e+00  1.63334921e-01  1.69249582e+00  2.74418384e-01
  -1.81126118e+00  8.80577981e-01  7.02414274e-01  1.03724468e+00
   1.05812097e+00  1.13643229e+00 -7.69474387e-01  5.84956825e-01
  -9.34404075e-01 -1.12673771e+00 -3.59424800e-01 -1.02582085e+00
  -9.53075886e-01 -8.06699455e-01 -2.95903623e-01  1.28596336e-01
  -2.09618449e+00  1.96716547e-01 -1.33443916e+00  6.67538345e-01
  -2.04303360e+00  6.56667471e-01 -1.87788701e+00 -7.45100915e-01
   3.34480464e-01  2.30912209e-01 -1.05614233e+00  1.71417046e+00
   1.68882191e+00  1.25794733e+00  7.77477682e-01 -1.20922111e-01
   1.01463521e+00  7.94170141e-01  8.18609297e-01  1.13752067e-01
   7.90019155e-01  1.38778999e-01  8.86305422e-02  1.08791220e+00
  -1.64308107e+00 -9.54914749e-01  2.37339306e+00  9.95790303e-01
  -1.40296519e-01 -4.31657374e-01 -3.15623283e-02 -1.30086195e+00
  -5.68930566e-01  5.63574135e-01 -8.70503426e-01  4.14068997e-01
  -8.70141163e-02 -1.51894724e+00 -1.23855531e+00  1.29880026e-01
  -5.59461713e-01 -1.26385403e+00  1.59277141e-01 -1.86286375e-01
   5.10727882e-01  1.43785611e-01 -1.63213980e+00  3.82019728e-01
  -1.09840834e+00 -1.70634732e-01 -4.41302881e-02 -3.41793835e-01
   3.30759794e-01  4.17531244e-02 -3.37710887e-01  1.44820738e+00
   1.34170282e+00 -7.92602599e-01  4.28236961e-01 -6.98510483e-02]
 [-4.94084507e-01  1.03852168e-01  8.38904679e-01 -7.35904038e-01
  -7.04967678e-02  5.73717237e-01  2.18849331e-01  1.05623102e+00
  -1.25785077e+00  1.13013601e+00 -1.55437517e+00  9.51525688e-01
  -1.67592776e+00 -3.48637164e-01  1.60759163e+00  6.90805376e-01
  -1.13699162e+00  9.32226717e-01 -8.86185884e-01  6.50337562e-02
  -6.33093655e-01 -4.60071653e-01 -3.17828417e-01 -6.01315439e-01
  -7.02504814e-02 -2.66349375e-01 -1.10489130e+00  1.07519376e+00
  -4.23042387e-01  3.45855922e-01 -5.60104251e-01  3.57963622e-01
   1.71203125e+00  1.49234402e+00 -1.28127527e+00  3.17688972e-01
   2.95880270e+00  8.53792131e-01 -2.06153846e+00 -3.91467154e-01
  -2.43756063e-02  1.67333499e-01  1.17837632e+00 -4.12473530e-01
   1.56250536e-01 -3.51341099e-01 -9.60100651e-01  1.04467452e+00
   1.08441925e+00  5.52181721e-01 -1.01620758e+00 -2.87865996e+00
   5.76726556e-01 -5.82755208e-01  6.56063616e-01 -1.08061683e+00
  -5.74857712e-01  7.20476925e-01 -1.94190967e+00 -5.61854243e-01
   6.89151466e-01  5.53826809e-01 -3.96725759e-02 -2.25085169e-01
   2.28897452e+00  6.30537391e-01  1.64857304e+00 -5.28170049e-01
   5.29594898e-01 -1.10107467e-01  1.42280829e+00  1.06736279e+00
  -2.18277469e-01 -2.87699342e-01  4.86762732e-01 -1.59002244e+00
   5.11812679e-02 -4.70185161e-01  1.38356775e-01  7.31057286e-01
  -1.03853390e-01  4.13611174e-01  4.17555958e-01  1.10078800e+00
   8.31761479e-01  1.25986600e+00  2.73322630e+00  1.30618227e+00
  -1.60953015e-01 -1.14850438e+00 -1.69689417e+00 -4.59983468e-01
   1.92816043e+00 -1.38011467e+00  1.83180821e+00  5.52028716e-01
   3.90167475e-01 -7.98744082e-01 -7.11862028e-01 -9.10029233e-01]] [0 1 0 1 1]
MLLITE_FIT_USING_MODEL mllite_xgb_class.XGBClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_CLASSIFIER_FIT' 1 3
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_CLASSIFIER_FIT' 2 3
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 1 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 2 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 3 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 4 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 5 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 6 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 7 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_CLASSIFIER_FIT' 3 3
('OPERATION_END_ELAPSED', 0.044, 'TRAINING')
{ "max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 ,  "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32  }
{ "max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 ,  "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32  }
{
	"metadata" : { "model" : "Friedman_XGB", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : { "base_score" : [ ], "early_stopping_rounds" : 0, "eval_metric" : "", "gamma" : 0.000000, "grow_policy" : 0, "learning_rate" : 0.300000, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 32, "min_child_weight" : 5.000000, "n_estimators" : 5, "objective" : "reg:squarederror", "reg_alpha" : 0.000000, "reg_lambda" : 1.000000, "tree_method" : "auto" },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 100 },
	"classes" : [ 0, 1 ],
	"booster" : {
		"BaseScore" : [ 0.562500, 0.437500 ],
		"Trees" : 5,
		"Tree_0" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : -0.108359, "sindex" : 61 },
			"Node_1" : { "leaf_value" : [ ], "parent" : 0, "left" : 3, "right" : 4, "svalue" : -0.359908, "sindex" : 28 },
			"Node_2" : { "leaf_value" : [ ], "parent" : 0, "left" : 5, "right" : 6, "svalue" : 0.369371, "sindex" : 84 },
			"Node_3" : { "leaf_value" : [ 0.099869, -0.099869 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_4" : { "leaf_value" : [ 0.257733, -0.257733 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_5" : { "leaf_value" : [ -0.050152, 0.050152 ], "parent" : 2, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_6" : { "leaf_value" : [ -0.284296, 0.284296 ], "parent" : 2, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_1" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : -0.108359, "sindex" : 61 },
			"Node_1" : { "leaf_value" : [ ], "parent" : 0, "left" : 3, "right" : 4, "svalue" : -0.053499, "sindex" : 31 },
			"Node_2" : { "leaf_value" : [ ], "parent" : 0, "left" : 5, "right" : 6, "svalue" : -0.494365, "sindex" : 23 },
			"Node_3" : { "leaf_value" : [ 0.060308, -0.060308 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_4" : { "leaf_value" : [ 0.214285, -0.214285 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_5" : { "leaf_value" : [ -0.236193, 0.236193 ], "parent" : 2, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_6" : { "leaf_value" : [ -0.046078, 0.046078 ], "parent" : 2, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_2" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : -0.352168, "sindex" : 1 },
			"Node_1" : { "leaf_value" : [ 0.173104, -0.173104 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_2" : { "leaf_value" : [ ], "parent" : 0, "left" : 3, "right" : 4, "svalue" : -0.997243, "sindex" : 93 },
			"Node_3" : { "leaf_value" : [ 0.077765, -0.077765 ], "parent" : 2, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_4" : { "leaf_value" : [ ], "parent" : 2, "left" : 5, "right" : 6, "svalue" : 0.228449, "sindex" : 63 },
			"Node_5" : { "leaf_value" : [ -0.033373, 0.033373 ], "parent" : 4, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_6" : { "leaf_value" : [ -0.230437, 0.230437 ], "parent" : 4, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_3" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : -0.352168, "sindex" : 1 },
			"Node_1" : { "leaf_value" : [ 0.148746, -0.148746 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_2" : { "leaf_value" : [ ], "parent" : 0, "left" : 3, "right" : 4, "svalue" : -0.058589, "sindex" : 84 },
			"Node_3" : { "leaf_value" : [ 0.037178, -0.037178 ], "parent" : 2, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_4" : { "leaf_value" : [ -0.166688, 0.166688 ], "parent" : 2, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_4" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : 0.138779, "sindex" : 61 },
			"Node_1" : { "leaf_value" : [ ], "parent" : 0, "left" : 3, "right" : 4, "svalue" : -0.513273, "sindex" : 72 },
			"Node_2" : { "leaf_value" : [ ], "parent" : 0, "left" : 5, "right" : 6, "svalue" : -0.000157, "sindex" : 25 },
			"Node_3" : { "leaf_value" : [ -0.003370, 0.003370 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_4" : { "leaf_value" : [ 0.163568, -0.163568 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_5" : { "leaf_value" : [ -0.022127, 0.022127 ], "parent" : 2, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_6" : { "leaf_value" : [ -0.147473, 0.147473 ], "parent" : 2, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/XGBClassifier/mllite.XGBClassifier_BinaryClass_100_small_option_1.json'

RELOADING_MODEL_FROM_JSON_START ('BinaryClass_100_small', 'XGBClassifier')
MLLITE_MODEL_SET_OPTIONS XGBClassifier {"max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 }
MLLITE_MODEL_OPTIONS_DEFAULT XGBClassifier { "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING XGBClassifier { "max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 ,  "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32  }
MLLITE_MODEL_JSON_AFTER_SETTING XGBClassifier None
MLLITE_RELOADING_MODEL mllite_xgb_class.XGBClassifier_ff4_il8
{
	"metadata" : { "model" : "Friedman_XGB", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : { "base_score" : [ ], "early_stopping_rounds" : 0, "eval_metric" : "", "gamma" : 0.000000, "grow_policy" : 0, "learning_rate" : 0.300000, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 32, "min_child_weight" : 5.000000, "n_estimators" : 5, "objective" : "reg:squarederror", "reg_alpha" : 0.000000, "reg_lambda" : 1.000000, "tree_method" : "auto" },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 100 },
	"classes" : [ 0, 1 ],
	"booster" : {
		"BaseScore" : [ 0.562500, 0.437500 ],
		"Trees" : 5,
		"Tree_0" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : -0.108359, "sindex" : 61 },
			"Node_1" : { "leaf_value" : [ ], "parent" : 0, "left" : 3, "right" : 4, "svalue" : -0.359908, "sindex" : 28 },
			"Node_2" : { "leaf_value" : [ ], "parent" : 0, "left" : 5, "right" : 6, "svalue" : 0.369371, "sindex" : 84 },
			"Node_3" : { "leaf_value" : [ 0.099869, -0.099869 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_4" : { "leaf_value" : [ 0.257733, -0.257733 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_5" : { "leaf_value" : [ -0.050152, 0.050152 ], "parent" : 2, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_6" : { "leaf_value" : [ -0.284296, 0.284296 ], "parent" : 2, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_1" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : -0.108359, "sindex" : 61 },
			"Node_1" : { "leaf_value" : [ ], "parent" : 0, "left" : 3, "right" : 4, "svalue" : -0.053499, "sindex" : 31 },
			"Node_2" : { "leaf_value" : [ ], "parent" : 0, "left" : 5, "right" : 6, "svalue" : -0.494365, "sindex" : 23 },
			"Node_3" : { "leaf_value" : [ 0.060308, -0.060308 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_4" : { "leaf_value" : [ 0.214285, -0.214285 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_5" : { "leaf_value" : [ -0.236193, 0.236193 ], "parent" : 2, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_6" : { "leaf_value" : [ -0.046078, 0.046078 ], "parent" : 2, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_2" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : -0.352168, "sindex" : 1 },
			"Node_1" : { "leaf_value" : [ 0.173104, -0.173104 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_2" : { "leaf_value" : [ ], "parent" : 0, "left" : 3, "right" : 4, "svalue" : -0.997243, "sindex" : 93 },
			"Node_3" : { "leaf_value" : [ 0.077765, -0.077765 ], "parent" : 2, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_4" : { "leaf_value" : [ ], "parent" : 2, "left" : 5, "right" : 6, "svalue" : 0.228449, "sindex" : 63 },
			"Node_5" : { "leaf_value" : [ -0.033373, 0.033373 ], "parent" : 4, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_6" : { "leaf_value" : [ -0.230437, 0.230437 ], "parent" : 4, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_3" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : -0.352168, "sindex" : 1 },
			"Node_1" : { "leaf_value" : [ 0.148746, -0.148746 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_2" : { "leaf_value" : [ ], "parent" : 0, "left" : 3, "right" : 4, "svalue" : -0.058589, "sindex" : 84 },
			"Node_3" : { "leaf_value" : [ 0.037178, -0.037178 ], "parent" : 2, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_4" : { "leaf_value" : [ -0.166688, 0.166688 ], "parent" : 2, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_4" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : 0.138779, "sindex" : 61 },
			"Node_1" : { "leaf_value" : [ ], "parent" : 0, "left" : 3, "right" : 4, "svalue" : -0.513273, "sindex" : 72 },
			"Node_2" : { "leaf_value" : [ ], "parent" : 0, "left" : 5, "right" : 6, "svalue" : -0.000157, "sindex" : 25 },
			"Node_3" : { "leaf_value" : [ -0.003370, 0.003370 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_4" : { "leaf_value" : [ 0.163568, -0.163568 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_5" : { "leaf_value" : [ -0.022127, 0.022127 ], "parent" : 2, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_6" : { "leaf_value" : [ -0.147473, 0.147473 ], "parent" : 2, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		}
	}
}
BEAUTIFIED_JSON_START
{
	"booster" : 	{
		"BaseScore" : [ 0.5625, 0.4375 ],
		"Tree_0" : 	{
			"Node_0" : 	{
				"leaf_value" : [  ],
				"left" : 1,
				"parent" : null,
				"right" : 2,
				"sindex" : 61,
				"svalue" : -0.108359
			},
			"Node_1" : 	{
				"leaf_value" : [  ],
				"left" : 3,
				"parent" : 0,
				"right" : 4,
				"sindex" : 28,
				"svalue" : -0.359908
			},
			"Node_2" : 	{
				"leaf_value" : [  ],
				"left" : 5,
				"parent" : 0,
				"right" : 6,
				"sindex" : 84,
				"svalue" : 0.369371
			},
			"Node_3" : 	{
				"leaf_value" : [ 0.099869, -0.099869 ],
				"left" : null,
				"parent" : 1,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_4" : 	{
				"leaf_value" : [ 0.257733, -0.257733 ],
				"left" : null,
				"parent" : 1,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_5" : 	{
				"leaf_value" : [ -0.050152, 0.050152 ],
				"left" : null,
				"parent" : 2,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_6" : 	{
				"leaf_value" : [ -0.284296, 0.284296 ],
				"left" : null,
				"parent" : 2,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			}
		},
		"Tree_1" : 	{
			"Node_0" : 	{
				"leaf_value" : [  ],
				"left" : 1,
				"parent" : null,
				"right" : 2,
				"sindex" : 61,
				"svalue" : -0.108359
			},
			"Node_1" : 	{
				"leaf_value" : [  ],
				"left" : 3,
				"parent" : 0,
				"right" : 4,
				"sindex" : 31,
				"svalue" : -0.053499
			},
			"Node_2" : 	{
				"leaf_value" : [  ],
				"left" : 5,
				"parent" : 0,
				"right" : 6,
				"sindex" : 23,
				"svalue" : -0.494365
			},
			"Node_3" : 	{
				"leaf_value" : [ 0.060308, -0.060308 ],
				"left" : null,
				"parent" : 1,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_4" : 	{
				"leaf_value" : [ 0.214285, -0.214285 ],
				"left" : null,
				"parent" : 1,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_5" : 	{
				"leaf_value" : [ -0.236193, 0.236193 ],
				"left" : null,
				"parent" : 2,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_6" : 	{
				"leaf_value" : [ -0.046078, 0.046078 ],
				"left" : null,
				"parent" : 2,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			}
		},
		"Tree_2" : 	{
			"Node_0" : 	{
				"leaf_value" : [  ],
				"left" : 1,
				"parent" : null,
				"right" : 2,
				"sindex" : 1,
				"svalue" : -0.352168
			},
			"Node_1" : 	{
				"leaf_value" : [ 0.173104, -0.173104 ],
				"left" : null,
				"parent" : 0,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_2" : 	{
				"leaf_value" : [  ],
				"left" : 3,
				"parent" : 0,
				"right" : 4,
				"sindex" : 93,
				"svalue" : -0.997243
			},
			"Node_3" : 	{
				"leaf_value" : [ 0.077765, -0.077765 ],
				"left" : null,
				"parent" : 2,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_4" : 	{
				"leaf_value" : [  ],
				"left" : 5,
				"parent" : 2,
				"right" : 6,
				"sindex" : 63,
				"svalue" : 0.228449
			},
			"Node_5" : 	{
				"leaf_value" : [ -0.033373, 0.033373 ],
				"left" : null,
				"parent" : 4,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_6" : 	{
				"leaf_value" : [ -0.230437, 0.230437 ],
				"left" : null,
				"parent" : 4,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			}
		},
		"Tree_3" : 	{
			"Node_0" : 	{
				"leaf_value" : [  ],
				"left" : 1,
				"parent" : null,
				"right" : 2,
				"sindex" : 1,
				"svalue" : -0.352168
			},
			"Node_1" : 	{
				"leaf_value" : [ 0.148746, -0.148746 ],
				"left" : null,
				"parent" : 0,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_2" : 	{
				"leaf_value" : [  ],
				"left" : 3,
				"parent" : 0,
				"right" : 4,
				"sindex" : 84,
				"svalue" : -0.058589
			},
			"Node_3" : 	{
				"leaf_value" : [ 0.037178, -0.037178 ],
				"left" : null,
				"parent" : 2,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_4" : 	{
				"leaf_value" : [ -0.166688, 0.166688 ],
				"left" : null,
				"parent" : 2,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			}
		},
		"Tree_4" : 	{
			"Node_0" : 	{
				"leaf_value" : [  ],
				"left" : 1,
				"parent" : null,
				"right" : 2,
				"sindex" : 61,
				"svalue" : 0.138779
			},
			"Node_1" : 	{
				"leaf_value" : [  ],
				"left" : 3,
				"parent" : 0,
				"right" : 4,
				"sindex" : 72,
				"svalue" : -0.513273
			},
			"Node_2" : 	{
				"leaf_value" : [  ],
				"left" : 5,
				"parent" : 0,
				"right" : 6,
				"sindex" : 25,
				"svalue" : -0.000157
			},
			"Node_3" : 	{
				"leaf_value" : [ -0.00337, 0.00337 ],
				"left" : null,
				"parent" : 1,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_4" : 	{
				"leaf_value" : [ 0.163568, -0.163568 ],
				"left" : null,
				"parent" : 1,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_5" : 	{
				"leaf_value" : [ -0.022127, 0.022127 ],
				"left" : null,
				"parent" : 2,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_6" : 	{
				"leaf_value" : [ -0.147473, 0.147473 ],
				"left" : null,
				"parent" : 2,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			}
		},
		"Trees" : 5
	},
	"classes" : [ 0, 1 ],
	"dataset" : 	{
		"dataset_features" : 100,
		"dataset_rows" : 64
	},
	"metadata" :  { "model" : "Friedman_XGB", "signature" : "ff4_il8", "version" : "2024-W14" },
	"options" :  { "base_score" : [ ], "early_stopping_rounds" : 0, "eval_metric" : "", "gamma" : 0.0, "grow_policy" : 0, "learning_rate" : 0.3, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 32, "min_child_weight" : 5.0, "n_estimators" : 5, "objective" : "reg:squarederror", "reg_alpha" : 0.0, "reg_lambda" : 1.0, "tree_method" : "auto" }
}
BEAUTIFIED_JSON_END
RELOADING_MODEL_FROM_JSON_END ('BinaryClass_100_small', 'XGBClassifier')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0.8463 0.1537]
 [0.226  0.774 ]
 [0.7469 0.2531]
 [0.1645 0.8355]
 [0.2427 0.7573]
 [0.3812 0.6188]
 [0.3241 0.6759]
 [0.2729 0.7271]
 [0.8463 0.1537]
 [0.1523 0.8477]
 [0.8497 0.1503]
 [0.3211 0.6789]
 [0.7315 0.2685]
 [0.2019 0.7981]
 [0.8849 0.1151]
 [0.5664 0.4336]
 [0.7845 0.2155]
 [0.3191 0.6809]
 [0.208  0.792 ]
 [0.2935 0.7065]
 [0.8463 0.1537]
 [0.8463 0.1537]
 [0.8487 0.1513]
 [0.8849 0.1151]
 [0.7718 0.2282]
 [0.8019 0.1981]
 [0.8463 0.1537]
 [0.8487 0.1513]
 [0.5295 0.4705]
 [0.513  0.487 ]
 [0.1187 0.8813]
 [0.1645 0.8355]
 [0.6299 0.3701]
 [0.3695 0.6305]
 [0.8497 0.1503]
 [0.4122 0.5878]
 [0.2042 0.7958]
 [0.8497 0.1503]
 [0.5295 0.4705]
 [0.3211 0.6789]
 [0.7469 0.2531]
 [0.8028 0.1972]
 [0.3241 0.6759]
 [0.5664 0.4336]
 [0.1645 0.8355]
 [0.412  0.588 ]
 [0.8849 0.1151]
 [0.7315 0.2685]
 [0.8006 0.1994]
 [0.1187 0.8813]
 [0.8849 0.1151]
 [0.2019 0.7981]
 [0.2103 0.7897]
 [0.8849 0.1151]
 [0.2849 0.7151]
 [0.8487 0.1513]
 [0.8019 0.1981]
 [0.7718 0.2282]
 [0.8463 0.1537]
 [0.3745 0.6255]
 [0.8006 0.1994]
 [0.8849 0.1151]
 [0.1187 0.8813]
 [0.5295 0.4705]]
(64, 2)
(64,) float32
MODEL_PERFS {'class_name': 'mllite.XGBClassifier', 'model_name': 'XGBClassifier', 'options': '{"max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 }', 'dataset': 'BinaryClass_100_small', 'size': 64, 'accuracy': 0.953125, 'auc': 0.9895833333333334}
WRITING_PERF_CODE 'logs/auto_tests/classification/XGBClassifier/mllite.XGBClassifier_BinaryClass_100_small_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.XGBClassifier', 'model_name': 'XGBClassifier', 'options': '{"max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 }', 'dataset': 'BinaryClass_100_small', 'training_time_in_sec': 0.044, 'prediction_time_in_sec': 0.0}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 0 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 1 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 2 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 3 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 4 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 5 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 6 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 7 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 8 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 9 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 10 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 11 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 12 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 13 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 14 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 15 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 16 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 17 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 18 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 19 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 20 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 21 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 22 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 23 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 24 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 25 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 26 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 27 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 28 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 29 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 30 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 31 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 32 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 33 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 34 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 35 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 36 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 37 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 38 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 39 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 40 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 41 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 42 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 43 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 44 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 45 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 46 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 47 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 48 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 49 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 50 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 51 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 52 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 53 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 54 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 55 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 56 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 57 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 58 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 59 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 60 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 61 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 62 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 63 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 64 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 65 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 66 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 67 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 68 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 69 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 70 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 71 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 72 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 73 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 74 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 75 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 76 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 77 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 78 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 79 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 80 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 81 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 82 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 83 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 84 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 85 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 86 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 87 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 88 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 89 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 90 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 91 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 92 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 93 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 94 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 95 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 96 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 97 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 98 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 99 100
{
   "Contributions" : {
      "X_0" : [ 0.000000, 0.000000 ],
      "X_1" : [ 0.000261, -0.000261 ],
      "X_2" : [ 0.000000, 0.000000 ],
      "X_3" : [ 0.000000, 0.000000 ],
      "X_4" : [ 0.000000, 0.000000 ],
      "X_5" : [ 0.000000, 0.000000 ],
      "X_6" : [ 0.000000, 0.000000 ],
      "X_7" : [ 0.000000, 0.000000 ],
      "X_8" : [ 0.000000, 0.000000 ],
      "X_9" : [ 0.000000, 0.000000 ],
      "X_10" : [ 0.000000, 0.000000 ],
      "X_11" : [ 0.000000, 0.000000 ],
      "X_12" : [ 0.000000, 0.000000 ],
      "X_13" : [ 0.000000, 0.000000 ],
      "X_14" : [ 0.000000, 0.000000 ],
      "X_15" : [ 0.000000, 0.000000 ],
      "X_16" : [ 0.000000, 0.000000 ],
      "X_17" : [ 0.000000, 0.000000 ],
      "X_18" : [ 0.000000, 0.000000 ],
      "X_19" : [ 0.000000, 0.000000 ],
      "X_20" : [ 0.000000, 0.000000 ],
      "X_21" : [ 0.000000, 0.000000 ],
      "X_22" : [ 0.000000, 0.000000 ],
      "X_23" : [ 0.001152, -0.001152 ],
      "X_24" : [ 0.000000, 0.000000 ],
      "X_25" : [ 0.001410, -0.001410 ],
      "X_26" : [ 0.000000, 0.000000 ],
      "X_27" : [ 0.000000, 0.000000 ],
      "X_28" : [ 0.002816, -0.002816 ],
      "X_29" : [ 0.000000, 0.000000 ],
      "X_30" : [ 0.000000, 0.000000 ],
      "X_31" : [ 0.001802, -0.001802 ],
      "X_32" : [ 0.000000, 0.000000 ],
      "X_33" : [ 0.000000, 0.000000 ],
      "X_34" : [ 0.000000, 0.000000 ],
      "X_35" : [ 0.000000, 0.000000 ],
      "X_36" : [ 0.000000, 0.000000 ],
      "X_37" : [ 0.000000, 0.000000 ],
      "X_38" : [ 0.000000, 0.000000 ],
      "X_39" : [ 0.000000, 0.000000 ],
      "X_40" : [ 0.000000, 0.000000 ],
      "X_41" : [ 0.000000, 0.000000 ],
      "X_42" : [ 0.000000, 0.000000 ],
      "X_43" : [ 0.000000, 0.000000 ],
      "X_44" : [ 0.000000, 0.000000 ],
      "X_45" : [ 0.000000, 0.000000 ],
      "X_46" : [ 0.000000, 0.000000 ],
      "X_47" : [ 0.000000, 0.000000 ],
      "X_48" : [ 0.000000, 0.000000 ],
      "X_49" : [ 0.000000, 0.000000 ],
      "X_50" : [ 0.000000, 0.000000 ],
      "X_51" : [ 0.000000, 0.000000 ],
      "X_52" : [ 0.000000, 0.000000 ],
      "X_53" : [ 0.000000, 0.000000 ],
      "X_54" : [ 0.000000, 0.000000 ],
      "X_55" : [ 0.000000, 0.000000 ],
      "X_56" : [ 0.000000, 0.000000 ],
      "X_57" : [ 0.000000, 0.000000 ],
      "X_58" : [ 0.000000, 0.000000 ],
      "X_59" : [ 0.000000, 0.000000 ],
      "X_60" : [ 0.000000, 0.000000 ],
      "X_61" : [ -0.029453, 0.029454 ],
      "X_62" : [ 0.000000, 0.000000 ],
      "X_63" : [ 0.001198, -0.001198 ],
      "X_64" : [ 0.000000, 0.000000 ],
      "X_65" : [ 0.000000, 0.000000 ],
      "X_66" : [ 0.000000, 0.000000 ],
      "X_67" : [ 0.000000, 0.000000 ],
      "X_68" : [ 0.000000, 0.000000 ],
      "X_69" : [ 0.000000, 0.000000 ],
      "X_70" : [ 0.000000, 0.000000 ],
      "X_71" : [ 0.000000, 0.000000 ],
      "X_72" : [ 0.005968, -0.005968 ],
      "X_73" : [ 0.000000, 0.000000 ],
      "X_74" : [ 0.000000, 0.000000 ],
      "X_75" : [ 0.000000, 0.000000 ],
      "X_76" : [ 0.000000, 0.000000 ],
      "X_77" : [ 0.000000, 0.000000 ],
      "X_78" : [ 0.000000, 0.000000 ],
      "X_79" : [ 0.000000, 0.000000 ],
      "X_80" : [ 0.000000, 0.000000 ],
      "X_81" : [ 0.000000, 0.000000 ],
      "X_82" : [ 0.000000, 0.000000 ],
      "X_83" : [ 0.000000, 0.000000 ],
      "X_84" : [ 0.002764, -0.002764 ],
      "X_85" : [ 0.000000, 0.000000 ],
      "X_86" : [ 0.000000, 0.000000 ],
      "X_87" : [ 0.000000, 0.000000 ],
      "X_88" : [ 0.000000, 0.000000 ],
      "X_89" : [ 0.000000, 0.000000 ],
      "X_90" : [ 0.000000, 0.000000 ],
      "X_91" : [ 0.000000, 0.000000 ],
      "X_92" : [ 0.000000, 0.000000 ],
      "X_93" : [ 0.003039, -0.003039 ],
      "X_94" : [ 0.000000, 0.000000 ],
      "X_95" : [ 0.000000, 0.000000 ],
      "X_96" : [ 0.000000, 0.000000 ],
      "X_97" : [ 0.000000, 0.000000 ],
      "X_98" : [ 0.000000, 0.000000 ],
      "X_99" : [ 0.000000, 0.000000 ]   
   },
   "Most_Contributive_Features_By_Class" : {
      "class_0" : [ 61, 72, 93, 28, 84, 31, 25, 63, 23, 1 ],
      "class_1" : [ 61, 72, 93, 28, 84, 31, 25, 63, 23, 1 ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/classification/XGBClassifier/mllite.XGBClassifier_BinaryClass_100_small_option_1_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/classification/XGBClassifier/mllite.XGBClassifier_BinaryClass_100_small_option_1_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('BinaryClass_100_small', 'XGBClassifier', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('BinaryClass_100_small', 'XGBClassifier', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('BinaryClass_100_small', 'XGBClassifier', 'duckdb')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('BinaryClass_100_small', 'XGBClassifier', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 64 entries, 0 to 63
Data columns (total 100 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     64 non-null     float32
 1   X_1     64 non-null     float32
 2   X_2     64 non-null     float32
 3   X_3     64 non-null     float32
 4   X_4     64 non-null     float32
 5   X_5     64 non-null     float32
 6   X_6     64 non-null     float32
 7   X_7     64 non-null     float32
 8   X_8     64 non-null     float32
 9   X_9     64 non-null     float32
 10  X_10    64 non-null     float32
 11  X_11    64 non-null     float32
 12  X_12    64 non-null     float32
 13  X_13    64 non-null     float32
 14  X_14    64 non-null     float32
 15  X_15    64 non-null     float32
 16  X_16    64 non-null     float32
 17  X_17    64 non-null     float32
 18  X_18    64 non-null     float32
 19  X_19    64 non-null     float32
 20  X_20    64 non-null     float32
 21  X_21    64 non-null     float32
 22  X_22    64 non-null     float32
 23  X_23    64 non-null     float32
 24  X_24    64 non-null     float32
 25  X_25    64 non-null     float32
 26  X_26    64 non-null     float32
 27  X_27    64 non-null     float32
 28  X_28    64 non-null     float32
 29  X_29    64 non-null     float32
 30  X_30    64 non-null     float32
 31  X_31    64 non-null     float32
 32  X_32    64 non-null     float32
 33  X_33    64 non-null     float32
 34  X_34    64 non-null     float32
 35  X_35    64 non-null     float32
 36  X_36    64 non-null     float32
 37  X_37    64 non-null     float32
 38  X_38    64 non-null     float32
 39  X_39    64 non-null     float32
 40  X_40    64 non-null     float32
 41  X_41    64 non-null     float32
 42  X_42    64 non-null     float32
 43  X_43    64 non-null     float32
 44  X_44    64 non-null     float32
 45  X_45    64 non-null     float32
 46  X_46    64 non-null     float32
 47  X_47    64 non-null     float32
 48  X_48    64 non-null     float32
 49  X_49    64 non-null     float32
 50  X_50    64 non-null     float32
 51  X_51    64 non-null     float32
 52  X_52    64 non-null     float32
 53  X_53    64 non-null     float32
 54  X_54    64 non-null     float32
 55  X_55    64 non-null     float32
 56  X_56    64 non-null     float32
 57  X_57    64 non-null     float32
 58  X_58    64 non-null     float32
 59  X_59    64 non-null     float32
 60  X_60    64 non-null     float32
 61  X_61    64 non-null     float32
 62  X_62    64 non-null     float32
 63  X_63    64 non-null     float32
 64  X_64    64 non-null     float32
 65  X_65    64 non-null     float32
 66  X_66    64 non-null     float32
 67  X_67    64 non-null     float32
 68  X_68    64 non-null     float32
 69  X_69    64 non-null     float32
 70  X_70    64 non-null     float32
 71  X_71    64 non-null     float32
 72  X_72    64 non-null     float32
 73  X_73    64 non-null     float32
 74  X_74    64 non-null     float32
 75  X_75    64 non-null     float32
 76  X_76    64 non-null     float32
 77  X_77    64 non-null     float32
 78  X_78    64 non-null     float32
 79  X_79    64 non-null     float32
 80  X_80    64 non-null     float32
 81  X_81    64 non-null     float32
 82  X_82    64 non-null     float32
 83  X_83    64 non-null     float32
 84  X_84    64 non-null     float32
 85  X_85    64 non-null     float32
 86  X_86    64 non-null     float32
 87  X_87    64 non-null     float32
 88  X_88    64 non-null     float32
 89  X_89    64 non-null     float32
 90  X_90    64 non-null     float32
 91  X_91    64 non-null     float32
 92  X_92    64 non-null     float32
 93  X_93    64 non-null     float32
 94  X_94    64 non-null     float32
 95  X_95    64 non-null     float32
 96  X_96    64 non-null     float32
 97  X_97    64 non-null     float32
 98  X_98    64 non-null     float32
 99  X_99    64 non-null     float32
dtypes: float32(100)
memory usage: 25.5 KB
            X_0       X_1       X_2  ...      X_97      X_98      X_99
index                                ...                              
0     -0.001923 -2.371688 -1.181275  ... -1.828214 -0.370192  0.432550
1     -0.094974  0.975498  0.650450  ... -0.491931 -0.220261  0.222239
2      0.060564 -1.800755  0.053222  ...  1.636634  0.793880 -0.469869
3     -0.113704  0.680545 -0.819322  ... -0.792603  0.428237 -0.069851
4     -0.494085  0.103852  0.838905  ... -0.798744 -0.711862 -0.910029
...         ...       ...       ...  ...       ...       ...       ...
59    -1.169706  0.833569 -1.073999  ...  2.771628 -0.652372  0.767728
60    -2.264480 -0.441056  0.919001  ...  0.156628 -0.118272  1.843460
61     0.085538 -0.999074  1.070574  ... -0.772819  0.081873  0.336336
62     2.044900  2.532641  1.239658  ...  0.677309  2.476811 -0.145179
63    -0.178941  1.595470  1.800108  ... -1.020739 -0.852391  0.839960

[64 rows x 100 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 64 entries, 0 to 63
Data columns (total 9 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          64 non-null     int64  
 1   Score_0        64 non-null     float64
 2   Proba_0        64 non-null     float64
 3   LogProba_0     64 non-null     float64
 4   Score_1        64 non-null     float64
 5   Proba_1        64 non-null     float64
 6   LogProba_1     64 non-null     float64
 7   Decision       64 non-null     int64  
 8   DecisionProba  64 non-null     float64
dtypes: float64(7), int64(2)
memory usage: 4.6 KB
    index   Score_0   Proba_0  ...  LogProba_1  Decision  DecisionProba
0       0  1.352998  0.846316  ...   -1.872858         0       0.846316
1       1 -0.115408  0.226039  ...   -0.256233         1       0.773961
2       2  1.041157  0.746932  ...   -1.374096         0       0.746932
3       3 -0.312472  0.164524  ...   -0.179754         1       0.835476
4       4 -0.069039  0.242673  ...   -0.277961         1       0.757327
..    ...       ...       ...  ...         ...       ...            ...
59     59  0.243625  0.374549  ...   -0.469282         1       0.625451
60     60  1.195134  0.800635  ...   -1.612618         0       0.800635
61     61  1.519936  0.884920  ...   -2.162130         0       0.884920
62     62 -0.502587  0.118661  ...   -0.126313         1       0.881339
63     63  0.559086  0.529509  ...   -0.753978         0       0.529509

[64 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
    index   Score_0  SQL_Proba_0  ...  Py_Proba_0  Py_Proba_1  Py_Decision
48     48  1.195134     0.800635  ...    0.800635    0.199365            0
49     49 -0.502587     0.118661  ...    0.118661    0.881339            1
50     50  1.519936     0.884920  ...    0.884920    0.115080            0
51     51 -0.187126     0.201934  ...    0.201934    0.798066            1
52     52 -0.161420     0.210346  ...    0.210346    0.789654            1
53     53  1.519936     0.884920  ...    0.884920    0.115080            0
54     54  0.039759     0.284860  ...    0.284860    0.715140            1
55     55  1.362072     0.848662  ...    0.848662    0.151338            0
56     56  1.199021     0.801873  ...    0.801873    0.198127            0
57     57  1.109163     0.771769  ...    0.771769    0.228231            0
58     58  1.352998     0.846316  ...    0.846316    0.153684            0
59     59  0.243625     0.374549  ...    0.374549    0.625451            1
60     60  1.195134     0.800635  ...    0.800635    0.199365            0
61     61  1.519936     0.884920  ...    0.884920    0.115080            0
62     62 -0.502587     0.118661  ...    0.118661    0.881339            1
63     63  0.559086     0.529509  ...    0.529509    0.470491            0

[16 rows x 12 columns]
MLLITE_CLASS_SQL_ERROR ('BinaryClass_100_small', 'XGBClassifier', 'duckdb') ('Py_Proba_0', 'SQL_Proba_0') 0.002269113796694584
    Py_Proba_0  SQL_Proba_0   SQL_Error_0
48    0.800635     0.800635  2.538470e-07
49    0.118661     0.118661 -1.705307e-07
50    0.884920     0.884920  6.551749e-08
51    0.201934     0.201934 -8.828793e-08
52    0.210346     0.210346 -7.682506e-08
53    0.884920     0.884920  6.551749e-08
54    0.284860     0.284860 -3.636952e-08
55    0.848662     0.848662  1.191639e-07
56    0.801873     0.801873 -9.061404e-08
57    0.771769     0.771769  4.560832e-08
58    0.846316     0.846316  5.245964e-08
59    0.374549     0.374549 -1.112731e-07
60    0.800635     0.800635  2.538470e-07
61    0.884920     0.884920  6.551749e-08
62    0.118661     0.118661 -1.705307e-07
63    0.529509     0.529509  1.609092e-07
MLLITE_CLASS_SQL_ERROR ('BinaryClass_100_small', 'XGBClassifier', 'duckdb') ('Py_Proba_1', 'SQL_Proba_1') 0.00226911533451648
    Py_Proba_1  SQL_Proba_1   SQL_Error_1
48    0.199365     0.199365 -2.687481e-07
49    0.881339     0.881339  1.258272e-07
50    0.115080     0.115080 -1.336343e-08
51    0.798066     0.798066  1.180902e-07
52    0.789654     0.789654  7.682506e-08
53    0.115080     0.115080 -1.336343e-08
54    0.715140     0.715140  9.597417e-08
55    0.151338     0.151338 -1.340651e-07
56    0.198127     0.198127  7.571288e-08
57    0.228231     0.228231 -3.070715e-08
58    0.153684     0.153684 -1.269654e-07
59    0.625451     0.625451  1.112731e-07
60    0.199365     0.199365 -2.687481e-07
61    0.115080     0.115080 -1.336343e-08
62    0.881339     0.881339  1.258272e-07
63    0.470491     0.470491 -1.311069e-07
MLLITE_CLASS_SQL_EXECUTION_STATUS ('BinaryClass_100_small', 'XGBClassifier', 'duckdb', 'Failure')
    Py_Decision  SQL_Decision
48            0             0
49            1             1
50            0             0
51            1             1
52            1             1
53            0             0
54            1             1
55            0             0
56            0             0
57            0             0
58            0             0
59            1             1
60            0             0
61            0             0
62            1             1
63            0             0
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/XGBClassifier/mllite.XGBClassifier_BinaryClass_100_small_option_1_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('BinaryClass_100_small', 'XGBClassifier', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('BinaryClass_100_small', 'XGBClassifier', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('BinaryClass_100_small', 'XGBClassifier', 'sqlite')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('BinaryClass_100_small', 'XGBClassifier', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 64 entries, 0 to 63
Data columns (total 100 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     64 non-null     float32
 1   X_1     64 non-null     float32
 2   X_2     64 non-null     float32
 3   X_3     64 non-null     float32
 4   X_4     64 non-null     float32
 5   X_5     64 non-null     float32
 6   X_6     64 non-null     float32
 7   X_7     64 non-null     float32
 8   X_8     64 non-null     float32
 9   X_9     64 non-null     float32
 10  X_10    64 non-null     float32
 11  X_11    64 non-null     float32
 12  X_12    64 non-null     float32
 13  X_13    64 non-null     float32
 14  X_14    64 non-null     float32
 15  X_15    64 non-null     float32
 16  X_16    64 non-null     float32
 17  X_17    64 non-null     float32
 18  X_18    64 non-null     float32
 19  X_19    64 non-null     float32
 20  X_20    64 non-null     float32
 21  X_21    64 non-null     float32
 22  X_22    64 non-null     float32
 23  X_23    64 non-null     float32
 24  X_24    64 non-null     float32
 25  X_25    64 non-null     float32
 26  X_26    64 non-null     float32
 27  X_27    64 non-null     float32
 28  X_28    64 non-null     float32
 29  X_29    64 non-null     float32
 30  X_30    64 non-null     float32
 31  X_31    64 non-null     float32
 32  X_32    64 non-null     float32
 33  X_33    64 non-null     float32
 34  X_34    64 non-null     float32
 35  X_35    64 non-null     float32
 36  X_36    64 non-null     float32
 37  X_37    64 non-null     float32
 38  X_38    64 non-null     float32
 39  X_39    64 non-null     float32
 40  X_40    64 non-null     float32
 41  X_41    64 non-null     float32
 42  X_42    64 non-null     float32
 43  X_43    64 non-null     float32
 44  X_44    64 non-null     float32
 45  X_45    64 non-null     float32
 46  X_46    64 non-null     float32
 47  X_47    64 non-null     float32
 48  X_48    64 non-null     float32
 49  X_49    64 non-null     float32
 50  X_50    64 non-null     float32
 51  X_51    64 non-null     float32
 52  X_52    64 non-null     float32
 53  X_53    64 non-null     float32
 54  X_54    64 non-null     float32
 55  X_55    64 non-null     float32
 56  X_56    64 non-null     float32
 57  X_57    64 non-null     float32
 58  X_58    64 non-null     float32
 59  X_59    64 non-null     float32
 60  X_60    64 non-null     float32
 61  X_61    64 non-null     float32
 62  X_62    64 non-null     float32
 63  X_63    64 non-null     float32
 64  X_64    64 non-null     float32
 65  X_65    64 non-null     float32
 66  X_66    64 non-null     float32
 67  X_67    64 non-null     float32
 68  X_68    64 non-null     float32
 69  X_69    64 non-null     float32
 70  X_70    64 non-null     float32
 71  X_71    64 non-null     float32
 72  X_72    64 non-null     float32
 73  X_73    64 non-null     float32
 74  X_74    64 non-null     float32
 75  X_75    64 non-null     float32
 76  X_76    64 non-null     float32
 77  X_77    64 non-null     float32
 78  X_78    64 non-null     float32
 79  X_79    64 non-null     float32
 80  X_80    64 non-null     float32
 81  X_81    64 non-null     float32
 82  X_82    64 non-null     float32
 83  X_83    64 non-null     float32
 84  X_84    64 non-null     float32
 85  X_85    64 non-null     float32
 86  X_86    64 non-null     float32
 87  X_87    64 non-null     float32
 88  X_88    64 non-null     float32
 89  X_89    64 non-null     float32
 90  X_90    64 non-null     float32
 91  X_91    64 non-null     float32
 92  X_92    64 non-null     float32
 93  X_93    64 non-null     float32
 94  X_94    64 non-null     float32
 95  X_95    64 non-null     float32
 96  X_96    64 non-null     float32
 97  X_97    64 non-null     float32
 98  X_98    64 non-null     float32
 99  X_99    64 non-null     float32
dtypes: float32(100)
memory usage: 25.5 KB
            X_0       X_1       X_2  ...      X_97      X_98      X_99
index                                ...                              
0     -0.001923 -2.371688 -1.181275  ... -1.828214 -0.370192  0.432550
1     -0.094974  0.975498  0.650450  ... -0.491931 -0.220261  0.222239
2      0.060564 -1.800755  0.053222  ...  1.636634  0.793880 -0.469869
3     -0.113704  0.680545 -0.819322  ... -0.792603  0.428237 -0.069851
4     -0.494085  0.103852  0.838905  ... -0.798744 -0.711862 -0.910029
...         ...       ...       ...  ...       ...       ...       ...
59    -1.169706  0.833569 -1.073999  ...  2.771628 -0.652372  0.767728
60    -2.264480 -0.441056  0.919001  ...  0.156628 -0.118272  1.843460
61     0.085538 -0.999074  1.070574  ... -0.772819  0.081873  0.336336
62     2.044900  2.532641  1.239658  ...  0.677309  2.476811 -0.145179
63    -0.178941  1.595470  1.800108  ... -1.020739 -0.852391  0.839960

[64 rows x 100 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 64 entries, 0 to 63
Data columns (total 9 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          64 non-null     int64  
 1   Score_0        64 non-null     float64
 2   Proba_0        64 non-null     float64
 3   LogProba_0     64 non-null     float64
 4   Score_1        64 non-null     float64
 5   Proba_1        64 non-null     float64
 6   LogProba_1     64 non-null     float64
 7   Decision       64 non-null     int64  
 8   DecisionProba  64 non-null     float64
dtypes: float64(7), int64(2)
memory usage: 4.6 KB
    index   Score_0   Proba_0  ...  LogProba_1  Decision  DecisionProba
0       0  1.352998  0.846316  ...   -1.872858         0       0.846316
1       1 -0.115408  0.226039  ...   -0.256233         1       0.773961
2       2  1.041157  0.746932  ...   -1.374096         0       0.746932
3       3 -0.168369  0.208047  ...   -0.233253         1       0.791953
4       4 -0.069039  0.242673  ...   -0.277961         1       0.757327
..    ...       ...       ...  ...         ...       ...            ...
59     59  0.243625  0.374549  ...   -0.469282         1       0.625451
60     60  1.195134  0.800635  ...   -1.612618         0       0.800635
61     61  1.519936  0.884920  ...   -2.162130         0       0.884920
62     62 -0.502587  0.118661  ...   -0.126313         1       0.881339
63     63  0.559086  0.529509  ...   -0.753978         0       0.529509

[64 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
    index   Score_0  SQL_Proba_0  ...  Py_Proba_0  Py_Proba_1  Py_Decision
48     48  1.195134     0.800635  ...    0.800635    0.199365            0
49     49 -0.502587     0.118661  ...    0.118661    0.881339            1
50     50  1.519936     0.884920  ...    0.884920    0.115080            0
51     51 -0.187126     0.201934  ...    0.201934    0.798066            1
52     52 -0.161420     0.210346  ...    0.210346    0.789654            1
53     53  1.519936     0.884920  ...    0.884920    0.115080            0
54     54  0.039759     0.284860  ...    0.284860    0.715140            1
55     55  1.362072     0.848662  ...    0.848662    0.151338            0
56     56  1.199021     0.801873  ...    0.801873    0.198127            0
57     57  1.109163     0.771769  ...    0.771769    0.228231            0
58     58  1.352998     0.846316  ...    0.846316    0.153684            0
59     59  0.243625     0.374549  ...    0.374549    0.625451            1
60     60  1.195134     0.800635  ...    0.800635    0.199365            0
61     61  1.519936     0.884920  ...    0.884920    0.115080            0
62     62 -0.502587     0.118661  ...    0.118661    0.881339            1
63     63  0.559086     0.529509  ...    0.529509    0.470491            0

[16 rows x 12 columns]
MLLITE_CLASS_SQL_ERROR ('BinaryClass_100_small', 'XGBClassifier', 'sqlite') ('Py_Proba_0', 'SQL_Proba_0') 0.002949158246791865
    Py_Proba_0  SQL_Proba_0   SQL_Error_0
48    0.800635     0.800635  2.538470e-07
49    0.118661     0.118661 -1.705307e-07
50    0.884920     0.884920  6.551749e-08
51    0.201934     0.201934 -8.828793e-08
52    0.210346     0.210346 -7.682506e-08
53    0.884920     0.884920  6.551749e-08
54    0.284860     0.284860 -3.636952e-08
55    0.848662     0.848662  1.191639e-07
56    0.801873     0.801873 -9.061404e-08
57    0.771769     0.771769  4.560832e-08
58    0.846316     0.846316  5.245964e-08
59    0.374549     0.374549 -1.112731e-07
60    0.800635     0.800635  2.538470e-07
61    0.884920     0.884920  6.551749e-08
62    0.118661     0.118661 -1.705307e-07
63    0.529509     0.529509  1.609092e-07
MLLITE_CLASS_SQL_ERROR ('BinaryClass_100_small', 'XGBClassifier', 'sqlite') ('Py_Proba_1', 'SQL_Proba_1') 0.002949159784613772
    Py_Proba_1  SQL_Proba_1   SQL_Error_1
48    0.199365     0.199365 -2.687481e-07
49    0.881339     0.881339  1.258272e-07
50    0.115080     0.115080 -1.336343e-08
51    0.798066     0.798066  1.180902e-07
52    0.789654     0.789654  7.682506e-08
53    0.115080     0.115080 -1.336343e-08
54    0.715140     0.715140  9.597417e-08
55    0.151338     0.151338 -1.340651e-07
56    0.198127     0.198127  7.571288e-08
57    0.228231     0.228231 -3.070715e-08
58    0.153684     0.153684 -1.269654e-07
59    0.625451     0.625451  1.112731e-07
60    0.199365     0.199365 -2.687481e-07
61    0.115080     0.115080 -1.336343e-08
62    0.881339     0.881339  1.258272e-07
63    0.470491     0.470491 -1.311069e-07
MLLITE_CLASS_SQL_EXECUTION_STATUS ('BinaryClass_100_small', 'XGBClassifier', 'sqlite', 'Failure')
    Py_Decision  SQL_Decision
48            0             0
49            1             1
50            0             0
51            1             1
52            1             1
53            0             0
54            1             1
55            0             0
56            0             0
57            0             0
58            0             0
59            1             1
60            0             0
61            0             0
62            1             1
63            0             0
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
