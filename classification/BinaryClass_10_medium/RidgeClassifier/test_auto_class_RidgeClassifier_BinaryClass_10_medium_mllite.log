          X_0       X_1       X_2  ...       X_8       X_9  target
0   -0.044962  1.210300  0.837871  ... -0.036524  0.927011       0
1   -0.899949  1.417506  0.234098  ...  1.065277 -0.527426       1
2    0.210234  0.615278 -0.232967  ... -0.159713  0.429757       0
3    1.372308 -0.697183  1.020035  ... -0.034774 -1.017369       1
4    0.739356  0.040085 -0.293706  ... -0.883563  0.285353       1
..        ...       ...       ...  ...       ...       ...     ...
507 -1.371079 -0.448472  2.455614  ... -0.836368  0.570578       1
508  1.140010 -0.836796  0.169285  ... -0.338076  1.167627       1
509  1.632208 -2.034283  0.818088  ... -0.256977  0.896508       0
510 -3.195565  1.571081 -0.291694  ...  0.663319 -0.701417       0
511  0.095037 -0.527445  0.090365  ... -0.948822  0.514737       1

[512 rows x 11 columns]
MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
('OPERATION_START', 'TRAINING')
[[-0.04496161  1.2103002   0.83787066  0.0368216   0.9801959   0.28167102
   0.77735424  0.49240956 -0.03652414  0.927011  ]
 [-0.8999486   1.4175057   0.23409756  0.05489743  0.9185508  -0.756675
  -0.02763553  0.20107657  1.0652769  -0.5274255 ]
 [ 0.21023437  0.6152782  -0.23296675  2.4819782   1.2316058  -2.0273561
  -0.7873507   0.38282165 -0.15971345  0.42975688]
 [ 1.3723081  -0.69718254  1.0200353  -0.1598945   0.9574759   0.64849085
   1.0359191   0.16233616 -0.03477355 -1.0173686 ]
 [ 0.73935616  0.04008485 -0.29370642 -1.0730926  -0.6452065   0.2920823
  -0.1579546   1.3678225  -0.8835631   0.28535333]] [0 1 0 1 1]
MLLITE_FIT_USING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 3 4
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 4 4
('OPERATION_END_ELAPSED', 0.014, 'TRAINING')
{ ,   }
{ ,   }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_il8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 512, "dataset_features" : 10 },
	"classes" : [ 0, 1 ],
	"equations" : {
		"class_1" : {
			"intercept" : -0.021819,
			"coeffs" : [ 0.014980, 0.031930, 0.166824, 0.051565, -0.140502, 0.283793, 0.233261, -0.007832, 0.009379, 0.030091 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_10_medium.json'

MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
MLLITE_RELOADING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_il8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 512, "dataset_features" : 10 },
	"classes" : [ 0, 1 ],
	"equations" : {
		"class_1" : {
			"intercept" : -0.021819,
			"coeffs" : [ 0.014980, 0.031930, 0.166824, 0.051565, -0.140502, 0.283793, 0.233261, -0.007832, 0.009379, 0.030091 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1 ],
	"dataset" : 	{
		"dataset_features" : 10,
		"dataset_rows" : 512
	},
	"equations" : 	{
		"class_1" : 	{
			"coeffs" : [ 0.01498, 0.03193, 0.166824, 0.051565, -0.140502, 0.283793, 0.233261, -0.007832, 0.009379, 0.030091 ],
			"intercept" : -0.021819
		}
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_il8", "version" : "2024-W12" },
	"options" :  { "alpha" : 1.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0.352  0.648 ]
 [0.6483 0.3517]
 [0.8412 0.1588]
 ...
 [0.5005 0.4995]
 [0.9078 0.0922]
 [0.1652 0.8348]]
(512, 2)
(512,) float32
MODEL_PERFS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'BinaryClass_10_medium', 'size': 512, 'accuracy': 0.87109375, 'auc': 0.9370260166323339}
WRITING_PERF_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_10_medium.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'BinaryClass_10_medium', 'training_time_in_sec': 0.014, 'prediction_time_in_sec': 0.0}
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_10_medium.sql'



SQL_OUT_PUT_FIRST_LINES_START
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT model_input."index" AS "index",
   -0.021819 + 0.014980 * X_0 + 0.031930 * X_1 + 0.166824 * X_2 + 0.051565 * X_3 + -0.140502 * X_4 + 0.283793 * X_5 + 0.233261 * X_6 + -0.007832 * X_7 + 0.009379 * X_8 + 0.030091 * X_9 AS "Score_1", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "LogProba_1"
  FROM model_input
 ),
soft_max_orig_cte AS 
( SELECT t."index" AS "index", 
   -t."Score_1" AS "Score_0",
   1.0 - t."Proba_1" AS "Proba_0",
   CAST(NULL AS FLOAT) AS "LogProba_0",
   t."Score_1" AS "Score_1",
   t."Proba
SQL_OUT_PUT_FIRST_LINES_END
SQL_OUT_PUT_LAST_LINES_START
S t
),
arg_max_cte_with_max_proba_idx AS 
( SELECT t.*,
   CASE WHEN(t."Proba_0" = t."Max_Proba") THEN 0 else NULL END AS "max_idx_0",
   CASE WHEN(t."Proba_1" = t."Max_Proba") THEN 1 else NULL END AS "max_idx_1"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
 (SELECT t.*,
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 512 entries, 0 to 511
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     512 non-null    float32
 1   X_1     512 non-null    float32
 2   X_2     512 non-null    float32
 3   X_3     512 non-null    float32
 4   X_4     512 non-null    float32
 5   X_5     512 non-null    float32
 6   X_6     512 non-null    float32
 7   X_7     512 non-null    float32
 8   X_8     512 non-null    float32
 9   X_9     512 non-null    float32
dtypes: float32(10)
memory usage: 24.0 KB
            X_0       X_1       X_2  ...       X_7       X_8       X_9
index                                ...                              
0     -0.044962  1.210300  0.837871  ...  0.492410 -0.036524  0.927011
1     -0.899949  1.417506  0.234098  ...  0.201077  1.065277 -0.527426
2      0.210234  0.615278 -0.232967  ...  0.382822 -0.159713  0.429757
3      1.372308 -0.697183  1.020035  ...  0.162336 -0.034774 -1.017369
4      0.739356  0.040085 -0.293706  ...  1.367823 -0.883563  0.285353
...         ...       ...       ...  ...       ...       ...       ...
507   -1.371079 -0.448472  2.455614  ... -0.899182 -0.836368  0.570578
508    1.140010 -0.836796  0.169285  ... -1.595744 -0.338076  1.167627
509    1.632208 -2.034282  0.818088  ...  0.787438 -0.256977  0.896508
510   -3.195565  1.571081 -0.291694  ...  0.676890  0.663319 -0.701417
511    0.095037 -0.527445  0.090365  ...  1.243205 -0.948822  0.514737

[512 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
