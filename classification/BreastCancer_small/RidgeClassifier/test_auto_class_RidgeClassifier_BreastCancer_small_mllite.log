    mean radius  mean texture  ...  worst fractal dimension  target
0        19.730         19.82  ...                  0.12970       0
1        21.370         15.10  ...                  0.08666       0
2        19.400         23.50  ...                  0.07614       0
3        10.170         14.88  ...                  0.08020       1
4         8.888         14.64  ...                  0.10840       1
..          ...           ...  ...                      ...     ...
59       19.800         21.56  ...                  0.08255       0
60        9.847         15.68  ...                  0.09209       1
61       23.510         24.27  ...                  0.07738       0
62       14.900         22.53  ...                  0.11550       0
63       11.060         14.83  ...                  0.09158       1

[64 rows x 31 columns]
MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
('OPERATION_START', 'TRAINING')
[[1.973e+01 1.982e+01 1.307e+02 1.206e+03 1.062e-01 1.849e-01 2.417e-01
  9.740e-02 1.733e-01 6.697e-02 7.661e-01 7.800e-01 4.115e+00 9.281e+01
  8.482e-03 5.057e-02 6.800e-02 1.971e-02 1.467e-02 7.259e-03 2.528e+01
  2.559e+01 1.598e+02 1.933e+03 1.710e-01 5.955e-01 8.489e-01 2.507e-01
  2.749e-01 1.297e-01]
 [2.137e+01 1.510e+01 1.413e+02 1.386e+03 1.001e-01 1.515e-01 1.932e-01
  1.255e-01 1.973e-01 6.183e-02 3.414e-01 1.309e+00 2.407e+00 3.906e+01
  4.426e-03 2.675e-02 3.437e-02 1.343e-02 1.675e-02 4.367e-03 2.269e+01
  2.184e+01 1.521e+02 1.535e+03 1.192e-01 2.840e-01 4.024e-01 1.966e-01
  2.730e-01 8.666e-02]
 [1.940e+01 2.350e+01 1.291e+02 1.155e+03 1.027e-01 1.558e-01 2.049e-01
  8.886e-02 1.978e-01 6.000e-02 5.243e-01 1.802e+00 4.037e+00 6.041e+01
  1.061e-02 3.252e-02 3.915e-02 1.559e-02 2.186e-02 3.949e-03 2.165e+01
  3.053e+01 1.449e+02 1.417e+03 1.463e-01 2.968e-01 3.458e-01 1.564e-01
  2.920e-01 7.614e-02]
 [1.017e+01 1.488e+01 6.455e+01 3.119e+02 1.134e-01 8.061e-02 1.084e-02
  1.290e-02 2.743e-01 6.960e-02 5.158e-01 1.441e+00 3.312e+00 3.462e+01
  7.514e-03 1.099e-02 7.665e-03 8.193e-03 4.183e-02 5.953e-03 1.102e+01
  1.745e+01 6.986e+01 3.686e+02 1.275e-01 9.866e-02 2.168e-02 2.579e-02
  3.557e-01 8.020e-02]
 [8.888e+00 1.464e+01 5.879e+01 2.440e+02 9.783e-02 1.531e-01 8.606e-02
  2.872e-02 1.902e-01 8.980e-02 5.262e-01 8.522e-01 3.168e+00 2.544e+01
  1.721e-02 9.368e-02 5.671e-02 1.766e-02 2.541e-02 2.193e-02 9.733e+00
  1.567e+01 6.256e+01 2.844e+02 1.207e-01 2.436e-01 1.434e-01 4.786e-02
  2.254e-01 1.084e-01]] [0 0 0 1 1]
MLLITE_FIT_USING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 3 4
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 4 4
('OPERATION_END_ELAPSED', 0.014, 'TRAINING')
{ ,   }
{ ,   }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_il8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 30 },
	"classes" : [ 0, 1 ],
	"equations" : {
		"class_1" : {
			"intercept" : 0.666003,
			"coeffs" : [ 0.012787, 0.039315, -0.002059, 0.000611, 10.736835, -0.338003, -3.828273, -5.412663, 2.053481, 40.240379, 0.051434, 0.208954, -0.109343, 0.006940, -8.345314, 7.892314, 1.376035, 14.065242, -27.807629, -89.529884, -0.034483, -0.071056, -0.012344, 0.000381, -4.015500, 0.219368, 0.521799, -6.221741, 0.464487, -4.306025 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BreastCancer_small.json'

MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
MLLITE_RELOADING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_il8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 30 },
	"classes" : [ 0, 1 ],
	"equations" : {
		"class_1" : {
			"intercept" : 0.666003,
			"coeffs" : [ 0.012787, 0.039315, -0.002059, 0.000611, 10.736835, -0.338003, -3.828273, -5.412663, 2.053481, 40.240379, 0.051434, 0.208954, -0.109343, 0.006940, -8.345314, 7.892314, 1.376035, 14.065242, -27.807629, -89.529884, -0.034483, -0.071056, -0.012344, 0.000381, -4.015500, 0.219368, 0.521799, -6.221741, 0.464487, -4.306025 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1 ],
	"dataset" : 	{
		"dataset_features" : 30,
		"dataset_rows" : 64
	},
	"equations" : 	{
		"class_1" : 	{
			"coeffs" : [ 0.012787, 0.039315, -0.002059, 0.000611, 10.736835, -0.338003, -3.828273, -5.412663, 2.053481, 40.240379, 0.051434, 0.208954, -0.109343, 0.00694, -8.345314, 7.892314, 1.376035, 14.065242, -27.807629, -89.529884, -0.034483, -0.071056, -0.012344, 0.000381, -4.0155, 0.219368, 0.521799, -6.221741, 0.464487, -4.306025 ],
			"intercept" : 0.666003
		}
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_il8", "version" : "2024-W12" },
	"options" :  { "alpha" : 1.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0.909  0.091 ]
 [0.8491 0.1509]
 [0.8648 0.1352]
 [0.0596 0.9404]
 [0.1073 0.8927]
 [0.1069 0.8931]
 [0.1251 0.8749]
 [0.1547 0.8453]
 [0.9093 0.0907]
 [0.2972 0.7028]
 [0.7324 0.2676]
 [0.879  0.121 ]
 [0.813  0.187 ]
 [0.9162 0.0838]
 [0.1302 0.8698]
 [0.1648 0.8352]
 [0.8621 0.1379]
 [0.7784 0.2216]
 [0.1295 0.8705]
 [0.0638 0.9362]
 [0.9168 0.0832]
 [0.844  0.156 ]
 [0.3156 0.6844]
 [0.3142 0.6858]
 [0.5683 0.4317]
 [0.2017 0.7983]
 [0.278  0.722 ]
 [0.9531 0.0469]
 [0.7541 0.2459]
 [0.0961 0.9039]
 [0.1287 0.8713]
 [0.8721 0.1279]
 [0.2163 0.7837]
 [0.8553 0.1447]
 [0.2979 0.7021]
 [0.7928 0.2072]
 [0.1202 0.8798]
 [0.4682 0.5318]
 [0.5787 0.4213]
 [0.0764 0.9236]
 [0.6489 0.3511]
 [0.8073 0.1927]
 [0.6856 0.3144]
 [0.3077 0.6923]
 [0.8124 0.1876]
 [0.1075 0.8925]
 [0.8351 0.1649]
 [0.0871 0.9129]
 [0.1352 0.8648]
 [0.2649 0.7351]
 [0.1396 0.8604]
 [0.3196 0.6804]
 [0.6968 0.3032]
 [0.3081 0.6919]
 [0.0954 0.9046]
 [0.9123 0.0877]
 [0.9379 0.0621]
 [0.0822 0.9178]
 [0.4016 0.5984]
 [0.8611 0.1389]
 [0.151  0.849 ]
 [0.9438 0.0562]
 [0.9054 0.0946]
 [0.1242 0.8758]]
(64, 2)
(64,) float32
MODEL_PERFS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'BreastCancer_small', 'size': 64, 'accuracy': 0.984375, 'auc': 0.9990224828934506}
WRITING_PERF_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BreastCancer_small.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'BreastCancer_small', 'training_time_in_sec': 0.014, 'prediction_time_in_sec': 0.0}
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BreastCancer_small.sql'



SQL_OUT_PUT_FIRST_LINES_START
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END
SQL_OUT_PUT_LAST_LINES_START
ax."index" AS "index_Score",
     max(union_with_max.class) AS "arg_max_Score"
    FROM union_with_max
    WHERE union_with_max."max_Score" <= union_with_max."Score"
    GROUP BY union_with_max."index"
   ) AS "arg_max_t_Score"
   ON score_max."index" = "arg_max_t_Score"."index_Score"
 )
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."arg_max_Score" AS "Decision",
  CASE
   WHEN (arg_max_cte."arg_max_Score" = 0) THEN arg_max_cte."Proba_0"
   WHEN (arg_max_cte."arg_max_Score" = 1) THEN arg_max_cte."Proba_1"
 END AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END




COPY_TRAINING_DATA_TO_SQLITE_START
          X_0        X_1         X_2  ...    X_28     X_29  KEY
0   19.730000  19.820000  130.699997  ...  0.2749  0.12970    0
1   21.370001  15.100000  141.300003  ...  0.2730  0.08666    1
2   19.400000  23.500000  129.100006  ...  0.2920  0.07614    2
3   10.170000  14.880000   64.550003  ...  0.3557  0.08020    3
4    8.888000  14.640000   58.790001  ...  0.2254  0.10840    4
..        ...        ...         ...  ...     ...      ...  ...
59  19.799999  21.559999  129.699997  ...  0.3070  0.08255   59
60   9.847000  15.680000   63.000000  ...  0.2502  0.09209   60
61  23.510000  24.270000  155.100006  ...  0.2593  0.07738   61
62  14.900000  22.530001  102.099998  ...  0.2866  0.11550   62
63  11.060000  14.830000   70.309998  ...  0.2590  0.09158   63

[64 rows x 31 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
    index   Score_0   Proba_0  ...  LogProba_1  Decision  DecisionProba
0       0  1.150672  0.908988  ...   -2.396766         0       0.908988
1       1  0.863628  0.849061  ...   -1.890880         0       0.849061
2       2  0.927640  0.864746  ...   -2.000600         0       0.864746
3       3 -1.379656  0.059563  ...   -0.061411         1       0.940437
4       4 -1.059395  0.107284  ...   -0.113487         1       0.892716
..    ...       ...       ...  ...         ...       ...            ...
59     59  0.911968  0.861038  ...   -1.973552         0       0.861038
60     60 -0.863279  0.151028  ...   -0.163729         1       0.848972
61     61  1.409595  0.943704  ...   -2.877133         0       0.943704
62     62  1.129299  0.905390  ...   -2.357989         0       0.905390
63     63 -0.976647  0.124195  ...   -0.132611         1       0.875805

[64 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
    index   Score_0  SQL_Proba_0  ...  Py_Proba_0  Py_Proba_1  Py_Decision
48     48 -0.928047     0.135159  ...    0.135167    0.864832            1
49     49 -0.510407     0.264869  ...    0.264927    0.735073            1
50     50 -0.909377     0.139583  ...    0.139596    0.860404            1
51     51 -0.377993     0.319518  ...    0.319571    0.680429            1
52     52  0.415958     0.696760  ...    0.696825    0.303175            0
53     53 -0.404541     0.308086  ...    0.308114    0.691886            1
54     54 -1.124526     0.095431  ...    0.095439    0.904561            1
55     55  1.170710     0.912250  ...    0.912291    0.087709            0
56     56  1.357068     0.937856  ...    0.937874    0.062126            0
57     57 -1.206775     0.082145  ...    0.082153    0.917847            1
58     58 -0.199425     0.401589  ...    0.401645    0.598355            1
59     59  0.911968     0.861038  ...    0.861107    0.138893            0
60     60 -0.863279     0.151028  ...    0.151039    0.848961            1
61     61  1.409595     0.943704  ...    0.943751    0.056249            0
62     62  1.129299     0.905390  ...    0.905409    0.094591            0
63     63 -0.976647     0.124195  ...    0.124209    0.875791            1

[16 rows x 12 columns]
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
