    sepal length (cm)  sepal width (cm)  ...  petal width (cm)  target
0                 6.4               3.2  ...               2.3       2
1                 6.3               3.3  ...               1.6       1
2                 7.1               3.0  ...               2.1       2
3                 6.1               2.6  ...               1.4       2
4                 6.8               3.2  ...               2.3       2
..                ...               ...  ...               ...     ...
59                5.4               3.9  ...               0.4       0
60                5.0               3.4  ...               0.4       0
61                6.3               2.5  ...               1.9       2
62                6.9               3.1  ...               2.3       2
63                6.5               3.0  ...               2.0       2

[64 rows x 5 columns]
MLLITE_MODEL_SET_OPTIONS XGBClassifier {"max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 }
MLLITE_MODEL_OPTIONS_DEFAULT XGBClassifier { "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING XGBClassifier { "max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 ,  "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32  }
MLLITE_MODEL_JSON_AFTER_SETTING XGBClassifier None
('OPERATION_START', 'TRAINING')
[[6.4 3.2 5.3 2.3]
 [6.3 3.3 4.7 1.6]
 [7.1 3.  5.9 2.1]
 [6.1 2.6 5.6 1.4]
 [6.8 3.2 5.9 2.3]] [2 1 2 2 2]
MLLITE_FIT_USING_MODEL mllite_xgb_class.XGBClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_CLASSIFIER_FIT' 1 3
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_CLASSIFIER_FIT' 2 3
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 1 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 2 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 3 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 4 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 5 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 6 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 7 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_CLASSIFIER_FIT' 3 3
('OPERATION_END_ELAPSED', 0.008, 'TRAINING')
{ "max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 ,  "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32  }
{ "max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 ,  "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32  }
{
	"metadata" : { "model" : "Friedman_XGB", "version" : "2024-W13", "signature" : "ff4_il8"},
	"options" : { "base_score" : [ ], "early_stopping_rounds" : 0, "eval_metric" : "", "gamma" : 0.000000, "grow_policy" : 0, "learning_rate" : 0.300000, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 32, "min_child_weight" : 5.000000, "n_estimators" : 5, "objective" : "reg:squarederror", "reg_alpha" : 0.000000, "reg_lambda" : 1.000000, "tree_method" : "auto" },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 4 },
	"classes" : [ 0, 1, 2 ],
	"booster" : {
		"BaseScore" : [ 0.328125, 0.250000, 0.421875 ],
		"Trees" : 5,
		"Tree_0" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : 5.000000, "sindex" : 2 },
			"Node_1" : { "leaf_value" : [ ], "parent" : 0, "left" : 3, "right" : 4, "svalue" : 1.200000, "sindex" : 3 },
			"Node_2" : { "leaf_value" : [ -0.206227, -0.198167, 0.381197 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_3" : { "leaf_value" : [ ], "parent" : 1, "left" : 5, "right" : 6, "svalue" : 3.400000, "sindex" : 1 },
			"Node_4" : { "leaf_value" : [ -0.193004, 0.376527, -0.163953 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_5" : { "leaf_value" : [ 0.239068, -0.033026, -0.199628 ], "parent" : 3, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_6" : { "leaf_value" : [ 0.381636, -0.180663, -0.199628 ], "parent" : 3, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_1" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : 5.000000, "sindex" : 2 },
			"Node_1" : { "leaf_value" : [ ], "parent" : 0, "left" : 3, "right" : 4, "svalue" : 1.700000, "sindex" : 2 },
			"Node_2" : { "leaf_value" : [ -0.183080, -0.178130, 0.275477 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_3" : { "leaf_value" : [ 0.304653, -0.179481, -0.186104 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_4" : { "leaf_value" : [ -0.105657, 0.241232, -0.158705 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_2" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : 5.000000, "sindex" : 2 },
			"Node_1" : { "leaf_value" : [ ], "parent" : 0, "left" : 3, "right" : 4, "svalue" : 1.700000, "sindex" : 2 },
			"Node_2" : { "leaf_value" : [ -0.166695, -0.163248, 0.224656 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_3" : { "leaf_value" : [ 0.239293, -0.162829, -0.167260 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_4" : { "leaf_value" : [ -0.087126, 0.181367, -0.139888 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_3" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : 1.800000, "sindex" : 3 },
			"Node_1" : { "leaf_value" : [ ], "parent" : 0, "left" : 3, "right" : 4, "svalue" : 5.700000, "sindex" : 0 },
			"Node_2" : { "leaf_value" : [ -0.153028, -0.163972, 0.209091 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_3" : { "leaf_value" : [ 0.174261, -0.081374, -0.160924 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_4" : { "leaf_value" : [ -0.118419, 0.160988, -0.086940 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_4" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : 5.000000, "sindex" : 2 },
			"Node_1" : { "leaf_value" : [ 0.065006, 0.039038, -0.137247 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_2" : { "leaf_value" : [ -0.144166, -0.143599, 0.178258 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/XGBClassifier/mllite.XGBClassifier_iris_small_option_1.json'

MLLITE_MODEL_SET_OPTIONS XGBClassifier {"max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 }
MLLITE_MODEL_OPTIONS_DEFAULT XGBClassifier { "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING XGBClassifier { "max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 ,  "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32  }
MLLITE_MODEL_JSON_AFTER_SETTING XGBClassifier None
MLLITE_RELOADING_MODEL mllite_xgb_class.XGBClassifier_ff4_il8
{
	"metadata" : { "model" : "Friedman_XGB", "version" : "2024-W13", "signature" : "ff4_il8"},
	"options" : { "base_score" : [ ], "early_stopping_rounds" : 0, "eval_metric" : "", "gamma" : 0.000000, "grow_policy" : 0, "learning_rate" : 0.300000, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 32, "min_child_weight" : 5.000000, "n_estimators" : 5, "objective" : "reg:squarederror", "reg_alpha" : 0.000000, "reg_lambda" : 1.000000, "tree_method" : "auto" },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 4 },
	"classes" : [ 0, 1, 2 ],
	"booster" : {
		"BaseScore" : [ 0.328125, 0.250000, 0.421875 ],
		"Trees" : 5,
		"Tree_0" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : 5.000000, "sindex" : 2 },
			"Node_1" : { "leaf_value" : [ ], "parent" : 0, "left" : 3, "right" : 4, "svalue" : 1.200000, "sindex" : 3 },
			"Node_2" : { "leaf_value" : [ -0.206227, -0.198167, 0.381197 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_3" : { "leaf_value" : [ ], "parent" : 1, "left" : 5, "right" : 6, "svalue" : 3.400000, "sindex" : 1 },
			"Node_4" : { "leaf_value" : [ -0.193004, 0.376527, -0.163953 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_5" : { "leaf_value" : [ 0.239068, -0.033026, -0.199628 ], "parent" : 3, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_6" : { "leaf_value" : [ 0.381636, -0.180663, -0.199628 ], "parent" : 3, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_1" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : 5.000000, "sindex" : 2 },
			"Node_1" : { "leaf_value" : [ ], "parent" : 0, "left" : 3, "right" : 4, "svalue" : 1.700000, "sindex" : 2 },
			"Node_2" : { "leaf_value" : [ -0.183080, -0.178130, 0.275477 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_3" : { "leaf_value" : [ 0.304653, -0.179481, -0.186104 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_4" : { "leaf_value" : [ -0.105657, 0.241232, -0.158705 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_2" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : 5.000000, "sindex" : 2 },
			"Node_1" : { "leaf_value" : [ ], "parent" : 0, "left" : 3, "right" : 4, "svalue" : 1.700000, "sindex" : 2 },
			"Node_2" : { "leaf_value" : [ -0.166695, -0.163248, 0.224656 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_3" : { "leaf_value" : [ 0.239293, -0.162829, -0.167260 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_4" : { "leaf_value" : [ -0.087126, 0.181367, -0.139888 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_3" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : 1.800000, "sindex" : 3 },
			"Node_1" : { "leaf_value" : [ ], "parent" : 0, "left" : 3, "right" : 4, "svalue" : 5.700000, "sindex" : 0 },
			"Node_2" : { "leaf_value" : [ -0.153028, -0.163972, 0.209091 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_3" : { "leaf_value" : [ 0.174261, -0.081374, -0.160924 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_4" : { "leaf_value" : [ -0.118419, 0.160988, -0.086940 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_4" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : 5.000000, "sindex" : 2 },
			"Node_1" : { "leaf_value" : [ 0.065006, 0.039038, -0.137247 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_2" : { "leaf_value" : [ -0.144166, -0.143599, 0.178258 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		}
	}
}
BEAUTIFIED_JSON_START
{
	"booster" : 	{
		"BaseScore" : [ 0.328125, 0.25, 0.421875 ],
		"Tree_0" : 	{
			"Node_0" : 	{
				"leaf_value" : [  ],
				"left" : 1,
				"parent" : null,
				"right" : 2,
				"sindex" : 2,
				"svalue" : 5.0
			},
			"Node_1" : 	{
				"leaf_value" : [  ],
				"left" : 3,
				"parent" : 0,
				"right" : 4,
				"sindex" : 3,
				"svalue" : 1.2
			},
			"Node_2" : 	{
				"leaf_value" : [ -0.206227, -0.198167, 0.381197 ],
				"left" : null,
				"parent" : 0,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_3" : 	{
				"leaf_value" : [  ],
				"left" : 5,
				"parent" : 1,
				"right" : 6,
				"sindex" : 1,
				"svalue" : 3.4
			},
			"Node_4" : 	{
				"leaf_value" : [ -0.193004, 0.376527, -0.163953 ],
				"left" : null,
				"parent" : 1,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_5" : 	{
				"leaf_value" : [ 0.239068, -0.033026, -0.199628 ],
				"left" : null,
				"parent" : 3,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_6" : 	{
				"leaf_value" : [ 0.381636, -0.180663, -0.199628 ],
				"left" : null,
				"parent" : 3,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			}
		},
		"Tree_1" : 	{
			"Node_0" : 	{
				"leaf_value" : [  ],
				"left" : 1,
				"parent" : null,
				"right" : 2,
				"sindex" : 2,
				"svalue" : 5.0
			},
			"Node_1" : 	{
				"leaf_value" : [  ],
				"left" : 3,
				"parent" : 0,
				"right" : 4,
				"sindex" : 2,
				"svalue" : 1.7
			},
			"Node_2" : 	{
				"leaf_value" : [ -0.18308, -0.17813, 0.275477 ],
				"left" : null,
				"parent" : 0,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_3" : 	{
				"leaf_value" : [ 0.304653, -0.179481, -0.186104 ],
				"left" : null,
				"parent" : 1,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_4" : 	{
				"leaf_value" : [ -0.105657, 0.241232, -0.158705 ],
				"left" : null,
				"parent" : 1,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			}
		},
		"Tree_2" : 	{
			"Node_0" : 	{
				"leaf_value" : [  ],
				"left" : 1,
				"parent" : null,
				"right" : 2,
				"sindex" : 2,
				"svalue" : 5.0
			},
			"Node_1" : 	{
				"leaf_value" : [  ],
				"left" : 3,
				"parent" : 0,
				"right" : 4,
				"sindex" : 2,
				"svalue" : 1.7
			},
			"Node_2" : 	{
				"leaf_value" : [ -0.166695, -0.163248, 0.224656 ],
				"left" : null,
				"parent" : 0,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_3" : 	{
				"leaf_value" : [ 0.239293, -0.162829, -0.16726 ],
				"left" : null,
				"parent" : 1,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_4" : 	{
				"leaf_value" : [ -0.087126, 0.181367, -0.139888 ],
				"left" : null,
				"parent" : 1,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			}
		},
		"Tree_3" : 	{
			"Node_0" : 	{
				"leaf_value" : [  ],
				"left" : 1,
				"parent" : null,
				"right" : 2,
				"sindex" : 3,
				"svalue" : 1.8
			},
			"Node_1" : 	{
				"leaf_value" : [  ],
				"left" : 3,
				"parent" : 0,
				"right" : 4,
				"sindex" : 0,
				"svalue" : 5.7
			},
			"Node_2" : 	{
				"leaf_value" : [ -0.153028, -0.163972, 0.209091 ],
				"left" : null,
				"parent" : 0,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_3" : 	{
				"leaf_value" : [ 0.174261, -0.081374, -0.160924 ],
				"left" : null,
				"parent" : 1,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_4" : 	{
				"leaf_value" : [ -0.118419, 0.160988, -0.08694 ],
				"left" : null,
				"parent" : 1,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			}
		},
		"Tree_4" : 	{
			"Node_0" : 	{
				"leaf_value" : [  ],
				"left" : 1,
				"parent" : null,
				"right" : 2,
				"sindex" : 2,
				"svalue" : 5.0
			},
			"Node_1" : 	{
				"leaf_value" : [ 0.065006, 0.039038, -0.137247 ],
				"left" : null,
				"parent" : 0,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_2" : 	{
				"leaf_value" : [ -0.144166, -0.143599, 0.178258 ],
				"left" : null,
				"parent" : 0,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			}
		},
		"Trees" : 5
	},
	"classes" : [ 0, 1, 2 ],
	"dataset" : 	{
		"dataset_features" : 4,
		"dataset_rows" : 64
	},
	"metadata" :  { "model" : "Friedman_XGB", "signature" : "ff4_il8", "version" : "2024-W13" },
	"options" :  { "base_score" : [ ], "early_stopping_rounds" : 0, "eval_metric" : "", "gamma" : 0.0, "grow_policy" : 0, "learning_rate" : 0.3, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 32, "min_child_weight" : 5.0, "n_estimators" : 5, "objective" : "reg:squarederror", "reg_alpha" : 0.0, "reg_lambda" : 1.0, "tree_method" : "auto" }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0.0901 0.0838 0.826 ]
 [0.1738 0.6772 0.149 ]
 [0.0901 0.0838 0.826 ]
 [0.1132 0.1409 0.7459]
 [0.0901 0.0838 0.826 ]
 [0.3109 0.5222 0.167 ]
 [0.1738 0.6772 0.149 ]
 [0.1738 0.6772 0.149 ]
 [0.7632 0.1251 0.1116]
 [0.7632 0.1251 0.1116]
 [0.7632 0.1251 0.1116]
 [0.1738 0.6772 0.149 ]
 [0.4245 0.4175 0.158 ]
 [0.1738 0.6772 0.149 ]
 [0.0901 0.0838 0.826 ]
 [0.7206 0.1579 0.1215]
 [0.1738 0.6772 0.149 ]
 [0.7206 0.1579 0.1215]
 [0.0901 0.0838 0.826 ]
 [0.7632 0.1251 0.1116]
 [0.0901 0.0838 0.826 ]
 [0.0901 0.0838 0.826 ]
 [0.1738 0.6772 0.149 ]
 [0.0901 0.0838 0.826 ]
 [0.7632 0.1251 0.1116]
 [0.0901 0.0838 0.826 ]
 [0.7206 0.1579 0.1215]
 [0.0901 0.0838 0.826 ]
 [0.7632 0.1251 0.1116]
 [0.7206 0.1579 0.1215]
 [0.0901 0.0838 0.826 ]
 [0.0901 0.0838 0.826 ]
 [0.1132 0.1409 0.7459]
 [0.7206 0.1579 0.1215]
 [0.0901 0.0838 0.826 ]
 [0.258  0.5887 0.1533]
 [0.0901 0.0838 0.826 ]
 [0.4245 0.4175 0.158 ]
 [0.0901 0.0838 0.826 ]
 [0.0901 0.0838 0.826 ]
 [0.1958 0.5706 0.2336]
 [0.3673 0.4616 0.1711]
 [0.7632 0.1251 0.1116]
 [0.1132 0.1409 0.7459]
 [0.1738 0.6772 0.149 ]
 [0.7632 0.1251 0.1116]
 [0.0901 0.0838 0.826 ]
 [0.0901 0.0838 0.826 ]
 [0.7206 0.1579 0.1215]
 [0.1738 0.6772 0.149 ]
 [0.4245 0.4175 0.158 ]
 [0.7206 0.1579 0.1215]
 [0.7632 0.1251 0.1116]
 [0.0901 0.0838 0.826 ]
 [0.7206 0.1579 0.1215]
 [0.1738 0.6772 0.149 ]
 [0.1738 0.6772 0.149 ]
 [0.1738 0.6772 0.149 ]
 [0.0901 0.0838 0.826 ]
 [0.4857 0.3575 0.1568]
 [0.7632 0.1251 0.1116]
 [0.0901 0.0838 0.826 ]
 [0.0901 0.0838 0.826 ]
 [0.0901 0.0838 0.826 ]]
(64, 3)
(64, 3) float32
MODEL_PERFS {'class_name': 'mllite.XGBClassifier', 'model_name': 'XGBClassifier', 'options': '{"max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 }', 'dataset': 'iris_small', 'size': 64, 'accuracy': 0.9375, 'auc': 0.9962884136212624}
WRITING_PERF_CODE 'logs/auto_tests/classification/XGBClassifier/mllite.XGBClassifier_iris_small_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.XGBClassifier', 'model_name': 'XGBClassifier', 'options': '{"max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 }', 'dataset': 'iris_small', 'training_time_in_sec': 0.008, 'prediction_time_in_sec': 0.0}
WRITING_SQL_CODE 'logs/auto_tests/classification/XGBClassifier/mllite.XGBClassifier_iris_small_option_1_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('iris_small', 'XGBClassifier', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
"DT_node_lookup_0" AS 
 (SELECT
    t."index" AS "index",
    CASE WHEN (t."X_2" < 5.000000) THEN CASE WHEN (t."X_3" < 1.200000) THEN CASE WHEN (t."X_1" < 3.400000) THEN 5 ELSE 6 END ELSE 4 END ELSE 2 END AS node_id
  FROM model_input t
 )
,
"DT_node_data_0" AS 
 (SELECT
    "Values".nid AS nid,
    "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2"
  FROM (
    SELECT 2 AS nid,  -0.206227 AS "P_0", -0.198167 AS "P_1", 0.381197 AS "P_2"
    UNION ALL
    SELECT 4 AS nid,  -0.193004 AS "P_0", 0.376527 AS "P_1", -0.163953 AS "P_2"
    UNION ALL
    SELECT 5 AS nid,  0.239068 AS "P_0", -0.033026 AS "P_1", -0.199628 AS "P_2"
    UNION ALL
    SELECT 6 AS nid,  0.381636 AS "P_0", -0.180663 AS "P_1", -0.199628 AS "P_2"
  ) AS "Values")
,
"DT_output
SQL_OUT_PUT_FIRST_LINES_END ('iris_small', 'XGBClassifier', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('iris_small', 'XGBClassifier', 'duckdb')
roba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1", t."max_idx_2" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('iris_small', 'XGBClassifier', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 64 entries, 0 to 63
Data columns (total 4 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     64 non-null     float32
 1   X_1     64 non-null     float32
 2   X_2     64 non-null     float32
 3   X_3     64 non-null     float32
dtypes: float32(4)
memory usage: 1.5 KB
       X_0  X_1  X_2  X_3
index                    
0      6.4  3.2  5.3  2.3
1      6.3  3.3  4.7  1.6
2      7.1  3.0  5.9  2.1
3      6.1  2.6  5.6  1.4
4      6.8  3.2  5.9  2.3
...    ...  ...  ...  ...
59     5.4  3.9  1.7  0.4
60     5.0  3.4  1.6  0.4
61     6.3  2.5  5.0  1.9
62     6.9  3.1  5.1  2.3
63     6.5  3.0  5.2  2.0

[64 rows x 4 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 64 entries, 0 to 63
Data columns (total 12 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          64 non-null     int64  
 1   Score_0        64 non-null     float64
 2   Proba_0        64 non-null     float64
 3   LogProba_0     64 non-null     float64
 4   Score_1        64 non-null     float64
 5   Proba_1        64 non-null     float64
 6   LogProba_1     64 non-null     float64
 7   Score_2        64 non-null     float64
 8   Proba_2        64 non-null     float64
 9   LogProba_2     64 non-null     float64
 10  Decision       64 non-null     int64  
 11  DecisionProba  64 non-null     float64
dtypes: float64(10), int64(2)
memory usage: 6.1 KB
    index   Score_0   Proba_0  ...  LogProba_2  Decision  DecisionProba
0       0 -0.525071  0.090109  ...   -0.191106         2       0.826045
1       1 -0.111075  0.173776  ...   -1.903771         1       0.677218
2       2 -0.525071  0.090109  ...   -0.191106         2       0.826045
3       3 -0.490462  0.113247  ...   -0.293195         2       0.745876
4       4 -0.525071  0.090109  ...   -0.191106         2       0.826045
..    ...       ...       ...  ...         ...       ...            ...
59     59  0.756245  0.485744  ...   -1.852836         0       0.485744
60     60  1.492974  0.763236  ...   -2.192450         0       0.763236
61     61 -0.525071  0.090109  ...   -0.191106         2       0.826045
62     62 -0.525071  0.090109  ...   -0.191106         2       0.826045
63     63 -0.525071  0.090109  ...   -0.191106         2       0.826045

[64 rows x 12 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Decision',
       'DecisionProba'],
      dtype='object')
    index   Score_0  SQL_Proba_0  ...  Py_Proba_1  Py_Proba_2  Py_Decision
48     48  1.350406     0.720553  ...    0.157897    0.121550            0
49     49 -0.111075     0.173776  ...    0.677218    0.149006            1
50     50  0.613677     0.424459  ...    0.417537    0.158004            0
51     51  1.350406     0.720553  ...    0.157897    0.121550            0
52     52  1.492974     0.763236  ...    0.125121    0.111643            0
53     53 -0.525071     0.090109  ...    0.083846    0.826045            2
54     54  1.350406     0.720553  ...    0.157897    0.121550            0
55     55 -0.111075     0.173776  ...    0.677218    0.149006            1
56     56 -0.111075     0.173776  ...    0.677218    0.149006            1
57     57 -0.111075     0.173776  ...    0.677218    0.149006            1
58     58 -0.525071     0.090109  ...    0.083846    0.826045            2
59     59  0.756245     0.485744  ...    0.357464    0.156792            0
60     60  1.492974     0.763236  ...    0.125121    0.111643            0
61     61 -0.525071     0.090109  ...    0.083846    0.826045            2
62     62 -0.525071     0.090109  ...    0.083846    0.826045            2
63     63 -0.525071     0.090109  ...    0.083846    0.826045            2

[16 rows x 16 columns]
MLLITE_CLASS_SQL_ERROR ('iris_small', 'XGBClassifier', 'duckdb') ('Py_Proba_0', 'SQL_Proba_0') 1.2465029299631863e-07
    Py_Proba_0  SQL_Proba_0   SQL_Error_0
48    0.720553     0.720553  1.722380e-07
49    0.173776     0.173776  4.102383e-08
50    0.424459     0.424459  1.535706e-07
51    0.720553     0.720553  1.722380e-07
52    0.763236     0.763236  1.901179e-07
53    0.090109     0.090109 -1.197238e-07
54    0.720553     0.720553  1.722380e-07
55    0.173776     0.173776  4.102383e-08
56    0.173776     0.173776  4.102383e-08
57    0.173776     0.173776  4.102383e-08
58    0.090109     0.090109 -1.197238e-07
59    0.485744     0.485744  1.846916e-07
60    0.763236     0.763236  1.901179e-07
61    0.090109     0.090109 -1.197238e-07
62    0.090109     0.090109 -1.197238e-07
63    0.090109     0.090109 -1.197238e-07
MLLITE_CLASS_SQL_ERROR ('iris_small', 'XGBClassifier', 'duckdb') ('Py_Proba_1', 'SQL_Proba_1') 7.4974312952664e-08
    Py_Proba_1  SQL_Proba_1   SQL_Error_1
48    0.157897     0.157897  7.680297e-08
49    0.677218     0.677218 -6.380107e-08
50    0.417537     0.417537 -1.162893e-07
51    0.157897     0.157897  7.680297e-08
52    0.125121     0.125121  1.064722e-08
53    0.083846     0.083846 -8.389915e-08
54    0.157897     0.157897  7.680297e-08
55    0.677218     0.677218 -6.380107e-08
56    0.677218     0.677218 -6.380107e-08
57    0.677218     0.677218 -6.380107e-08
58    0.083846     0.083846 -8.389915e-08
59    0.357464     0.357464 -1.834838e-07
60    0.125121     0.125121  1.064722e-08
61    0.083846     0.083846 -8.389915e-08
62    0.083846     0.083846 -8.389915e-08
63    0.083846     0.083846 -8.389915e-08
MLLITE_CLASS_SQL_ERROR ('iris_small', 'XGBClassifier', 'duckdb') ('Py_Proba_2', 'SQL_Proba_2') 1.356813617262205e-07
    Py_Proba_2  SQL_Proba_2   SQL_Error_2
48    0.121550     0.121550 -1.521834e-07
49    0.149006     0.149006  3.767839e-08
50    0.158004     0.158004 -2.238013e-08
51    0.121550     0.121550 -1.521834e-07
52    0.111643     0.111643 -1.858639e-07
53    0.826045     0.826045  1.738206e-07
54    0.121550     0.121550 -1.521834e-07
55    0.149006     0.149006  3.767839e-08
56    0.149006     0.149006  3.767839e-08
57    0.149006     0.149006  3.767839e-08
58    0.826045     0.826045  1.738206e-07
59    0.156792     0.156792 -4.591126e-08
60    0.111643     0.111643 -1.858639e-07
61    0.826045     0.826045  1.738206e-07
62    0.826045     0.826045  1.738206e-07
63    0.826045     0.826045  1.738206e-07
MLLITE_CLASS_SQL_EXECUTION_STATUS ('iris_small', 'XGBClassifier', 'duckdb', 'Success')
    Py_Decision  SQL_Decision
48            0             0
49            1             1
50            0             0
51            0             0
52            0             0
53            2             2
54            0             0
55            1             1
56            1             1
57            1             1
58            2             2
59            0             0
60            0             0
61            2             2
62            2             2
63            2             2
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/XGBClassifier/mllite.XGBClassifier_iris_small_option_1_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('iris_small', 'XGBClassifier', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
"DT_node_lookup_0" AS 
 (SELECT
    t."index" AS "index",
    CASE WHEN (t."X_2" < 5.000000) THEN CASE WHEN (t."X_3" < 1.200000) THEN CASE WHEN (t."X_1" < 3.400000) THEN 5 ELSE 6 END ELSE 4 END ELSE 2 END AS node_id
  FROM model_input t
 )
,
"DT_node_data_0" AS 
 (SELECT
    "Values".nid AS nid,
    "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2"
  FROM (
    SELECT 2 AS nid,  -0.206227 AS "P_0", -0.198167 AS "P_1", 0.381197 AS "P_2"
    UNION ALL
    SELECT 4 AS nid,  -0.193004 AS "P_0", 0.376527 AS "P_1", -0.163953 AS "P_2"
    UNION ALL
    SELECT 5 AS nid,  0.239068 AS "P_0", -0.033026 AS "P_1", -0.199628 AS "P_2"
    UNION ALL
    SELECT 6 AS nid,  0.381636 AS "P_0", -0.180663 AS "P_1", -0.199628 AS "P_2"
  ) AS "Values")
,
"DT_output
SQL_OUT_PUT_FIRST_LINES_END ('iris_small', 'XGBClassifier', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('iris_small', 'XGBClassifier', 'sqlite')
roba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1", t."max_idx_2" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('iris_small', 'XGBClassifier', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 64 entries, 0 to 63
Data columns (total 4 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     64 non-null     float32
 1   X_1     64 non-null     float32
 2   X_2     64 non-null     float32
 3   X_3     64 non-null     float32
dtypes: float32(4)
memory usage: 1.5 KB
       X_0  X_1  X_2  X_3
index                    
0      6.4  3.2  5.3  2.3
1      6.3  3.3  4.7  1.6
2      7.1  3.0  5.9  2.1
3      6.1  2.6  5.6  1.4
4      6.8  3.2  5.9  2.3
...    ...  ...  ...  ...
59     5.4  3.9  1.7  0.4
60     5.0  3.4  1.6  0.4
61     6.3  2.5  5.0  1.9
62     6.9  3.1  5.1  2.3
63     6.5  3.0  5.2  2.0

[64 rows x 4 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 64 entries, 0 to 63
Data columns (total 12 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          64 non-null     int64  
 1   Score_0        64 non-null     float64
 2   Proba_0        64 non-null     float64
 3   LogProba_0     64 non-null     float64
 4   Score_1        64 non-null     float64
 5   Proba_1        64 non-null     float64
 6   LogProba_1     64 non-null     float64
 7   Score_2        64 non-null     float64
 8   Proba_2        64 non-null     float64
 9   LogProba_2     64 non-null     float64
 10  Decision       64 non-null     int64  
 11  DecisionProba  64 non-null     float64
dtypes: float64(10), int64(2)
memory usage: 6.1 KB
    index   Score_0   Proba_0  ...  LogProba_2  Decision  DecisionProba
0       0 -0.525071  0.090109  ...   -0.191106         2       0.826045
1       1 -0.111075  0.173776  ...   -1.903771         1       0.677218
2       2 -0.525071  0.090109  ...   -0.191106         2       0.826045
3       3 -0.490462  0.113247  ...   -0.293195         2       0.745876
4       4 -0.525071  0.090109  ...   -0.191106         2       0.826045
..    ...       ...       ...  ...         ...       ...            ...
59     59  0.756245  0.485744  ...   -1.852836         0       0.485744
60     60  1.492974  0.763236  ...   -2.192450         0       0.763236
61     61 -0.525071  0.090109  ...   -0.191106         2       0.826045
62     62 -0.525071  0.090109  ...   -0.191106         2       0.826045
63     63 -0.525071  0.090109  ...   -0.191106         2       0.826045

[64 rows x 12 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Decision',
       'DecisionProba'],
      dtype='object')
    index   Score_0  SQL_Proba_0  ...  Py_Proba_1  Py_Proba_2  Py_Decision
48     48  1.350406     0.720553  ...    0.157897    0.121550            0
49     49  0.181605     0.257961  ...    0.677218    0.149006            1
50     50  0.613677     0.424459  ...    0.417537    0.158004            0
51     51  1.350406     0.720553  ...    0.157897    0.121550            0
52     52  1.492974     0.763236  ...    0.125121    0.111643            0
53     53 -0.525071     0.090109  ...    0.083846    0.826045            2
54     54  1.350406     0.720553  ...    0.157897    0.121550            0
55     55 -0.111075     0.173776  ...    0.677218    0.149006            1
56     56 -0.111075     0.173776  ...    0.677218    0.149006            1
57     57 -0.111075     0.173776  ...    0.677218    0.149006            1
58     58 -0.525071     0.090109  ...    0.083846    0.826045            2
59     59  0.756245     0.485744  ...    0.357464    0.156792            0
60     60  1.492974     0.763236  ...    0.125121    0.111643            0
61     61 -0.525071     0.090109  ...    0.083846    0.826045            2
62     62 -0.525071     0.090109  ...    0.083846    0.826045            2
63     63 -0.525071     0.090109  ...    0.083846    0.826045            2

[16 rows x 16 columns]
MLLITE_CLASS_SQL_ERROR ('iris_small', 'XGBClassifier', 'sqlite') ('Py_Proba_0', 'SQL_Proba_0') 0.006270608481238066
    Py_Proba_0  SQL_Proba_0   SQL_Error_0
48    0.720553     0.720553  1.722380e-07
49    0.173776     0.257961 -8.418481e-02
50    0.424459     0.424459  1.535706e-07
51    0.720553     0.720553  1.722380e-07
52    0.763236     0.763236  1.901179e-07
53    0.090109     0.090109 -1.197238e-07
54    0.720553     0.720553  1.722380e-07
55    0.173776     0.173776  4.102383e-08
56    0.173776     0.173776  4.102383e-08
57    0.173776     0.173776  4.102383e-08
58    0.090109     0.090109 -1.197238e-07
59    0.485744     0.485744  1.846916e-07
60    0.763236     0.763236  1.901179e-07
61    0.090109     0.090109 -1.197238e-07
62    0.090109     0.090109 -1.197238e-07
63    0.090109     0.090109 -1.197238e-07
MLLITE_CLASS_SQL_ERROR ('iris_small', 'XGBClassifier', 'sqlite') ('Py_Proba_1', 'SQL_Proba_1') 0.00962165550519088
    Py_Proba_1  SQL_Proba_1   SQL_Error_1
48    0.157897     0.157897  7.680297e-08
49    0.677218     0.588745  8.847365e-02
50    0.417537     0.417537 -1.162893e-07
51    0.157897     0.157897  7.680297e-08
52    0.125121     0.125121  1.064722e-08
53    0.083846     0.083846 -8.389915e-08
54    0.157897     0.157897  7.680297e-08
55    0.677218     0.677218 -6.380107e-08
56    0.677218     0.677218 -6.380107e-08
57    0.677218     0.677218 -6.380107e-08
58    0.083846     0.083846 -8.389915e-08
59    0.357464     0.357464 -1.834838e-07
60    0.125121     0.125121  1.064722e-08
61    0.083846     0.083846 -8.389915e-08
62    0.083846     0.083846 -8.389915e-08
63    0.083846     0.083846 -8.389915e-08
MLLITE_CLASS_SQL_ERROR ('iris_small', 'XGBClassifier', 'sqlite') ('Py_Proba_2', 'SQL_Proba_2') 0.006690186032117219
    Py_Proba_2  SQL_Proba_2   SQL_Error_2
48    0.121550     0.121550 -1.521834e-07
49    0.149006     0.153294 -4.288829e-03
50    0.158004     0.158004 -2.238013e-08
51    0.121550     0.121550 -1.521834e-07
52    0.111643     0.111643 -1.858639e-07
53    0.826045     0.826045  1.738206e-07
54    0.121550     0.121550 -1.521834e-07
55    0.149006     0.149006  3.767839e-08
56    0.149006     0.149006  3.767839e-08
57    0.149006     0.149006  3.767839e-08
58    0.826045     0.826045  1.738206e-07
59    0.156792     0.156792 -4.591126e-08
60    0.111643     0.111643 -1.858639e-07
61    0.826045     0.826045  1.738206e-07
62    0.826045     0.826045  1.738206e-07
63    0.826045     0.826045  1.738206e-07
MLLITE_CLASS_SQL_EXECUTION_STATUS ('iris_small', 'XGBClassifier', 'sqlite', 'Failure')
    Py_Decision  SQL_Decision
48            0             0
49            1             1
50            0             0
51            0             0
52            0             0
53            2             2
54            0             0
55            1             1
56            1             1
57            1             1
58            2             2
59            0             0
60            0             0
61            2             2
62            2             2
63            2             2
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/XGBClassifier/mllite.XGBClassifier_iris_small_option_1_pgsql.sql'



SQL_OUT_PUT_FIRST_LINES_START ('iris_small', 'XGBClassifier', 'pgsql')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
"DT_node_lookup_0" AS 
 (SELECT
    t."index" AS "index",
    CASE WHEN (t."X_2" < 5.000000) THEN CASE WHEN (t."X_3" < 1.200000) THEN CASE WHEN (t."X_1" < 3.400000) THEN 5 ELSE 6 END ELSE 4 END ELSE 2 END AS node_id
  FROM model_input t
 )
,
"DT_node_data_0" AS 
 (SELECT
    "Values".nid AS nid,
    "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2"
  FROM (
    SELECT 2 AS nid,  -0.206227 AS "P_0", -0.198167 AS "P_1", 0.381197 AS "P_2"
    UNION ALL
    SELECT 4 AS nid,  -0.193004 AS "P_0", 0.376527 AS "P_1", -0.163953 AS "P_2"
    UNION ALL
    SELECT 5 AS nid,  0.239068 AS "P_0", -0.033026 AS "P_1", -0.199628 AS "P_2"
    UNION ALL
    SELECT 6 AS nid,  0.381636 AS "P_0", -0.180663 AS "P_1", -0.199628 AS "P_2"
  ) AS "Values")
,
"DT_output
SQL_OUT_PUT_FIRST_LINES_END ('iris_small', 'XGBClassifier', 'pgsql')
SQL_OUT_PUT_LAST_LINES_START ('iris_small', 'XGBClassifier', 'pgsql')
roba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1", t."max_idx_2" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('iris_small', 'XGBClassifier', 'pgsql') 




COPY_TRAINING_DATA_TO_SQLITE_START
