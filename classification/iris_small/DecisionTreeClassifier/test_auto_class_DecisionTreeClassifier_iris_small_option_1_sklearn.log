    sepal length (cm)  sepal width (cm)  ...  petal width (cm)  target
0                 6.4               3.2  ...               2.3       2
1                 6.3               3.3  ...               1.6       1
2                 7.1               3.0  ...               2.1       2
3                 6.1               2.6  ...               1.4       2
4                 6.8               3.2  ...               2.3       2
..                ...               ...  ...               ...     ...
59                5.4               3.9  ...               0.4       0
60                5.0               3.4  ...               0.4       0
61                6.3               2.5  ...               1.9       2
62                6.9               3.1  ...               2.3       2
63                6.5               3.0  ...               2.0       2

[64 rows x 5 columns]
SKLEARN_MODEL_SET_OPTIONS DecisionTreeClassifier {"max_depth" : 6, "max_leaf_nodes" : 32}
('OPERATION_START', 'TRAINING')
[[6.4 3.2 5.3 2.3]
 [6.3 3.3 4.7 1.6]
 [7.1 3.  5.9 2.1]
 [6.1 2.6 5.6 1.4]
 [6.8 3.2 5.9 2.3]] [2 1 2 2 2]
('OPERATION_END_ELAPSED', 0.002, 'TRAINING')
CONVERT_MODEL  <class 'sklearn.tree._classes.DecisionTreeClassifier'>
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1, 2 ],
	"metadata" :  { "model" : "sklearn.tree._classes.DecisionTreeClassifier", "version" : "1.4.1.post1" },
	"options" :  { "ccp_alpha" : 0.0, "criterion" : "gini", "max_depth" : 6, "max_features" : null, "max_leaf_nodes" : 32, "min_impurity_decrease" : 0.0, "min_samples_leaf" : 1, "min_samples_split" : 2, "min_weight_fraction_leaf" : 0.0, "random_state" : 1789, "splitter" : "best" },
	"tree" : 	{
		"features" : 4,
		"max_depth" : 3,
		"node_count" : 9,
		"nodes" : 	{
			"node_0" :  { "feature" : 2, "impurity" : 0.65185546875, "left" : 1, "n_samples" : 64, "right" : 2, "threshold" : 4.75, "value" : [ 0.328125, 0.25, 0.421875 ], "w_samples" : 64.0 },
			"node_1" :  { "feature" : 2, "impurity" : 0.48611111111111116, "left" : 3, "n_samples" : 36, "right" : 4, "threshold" : 2.350000023841858, "value" : [ 0.5833333333333334, 0.4166666666666667, 0.0 ], "w_samples" : 36.0 },
			"node_2" :  { "feature" : 2, "impurity" : 0.06887755102040816, "left" : 5, "n_samples" : 28, "right" : 6, "threshold" : 4.950000047683716, "value" : [ 0.0, 0.03571428571428571, 0.9642857142857143 ], "w_samples" : 28.0 },
			"node_3" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 21, "right" : null, "threshold" : null, "value" : [ 1.0, 0.0, 0.0 ], "w_samples" : 21.0 },
			"node_4" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 15, "right" : null, "threshold" : null, "value" : [ 0.0, 1.0, 0.0 ], "w_samples" : 15.0 },
			"node_5" :  { "feature" : 0, "impurity" : 0.5, "left" : 7, "n_samples" : 2, "right" : 8, "threshold" : 6.450000047683716, "value" : [ 0.0, 0.5, 0.5 ], "w_samples" : 2.0 },
			"node_6" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 26, "right" : null, "threshold" : null, "value" : [ 0.0, 0.0, 1.0 ], "w_samples" : 26.0 },
			"node_7" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 0.0, 0.0, 1.0 ], "w_samples" : 1.0 },
			"node_8" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 0.0, 1.0, 0.0 ], "w_samples" : 1.0 }
		},
		"outputs" : 1
	}
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0. 0. 1.]
 [0. 1. 0.]
 [0. 0. 1.]
 [0. 0. 1.]
 [0. 0. 1.]
 [0. 1. 0.]
 [0. 1. 0.]
 [0. 1. 0.]
 [1. 0. 0.]
 [1. 0. 0.]
 [1. 0. 0.]
 [0. 1. 0.]
 [0. 1. 0.]
 [0. 1. 0.]
 [0. 0. 1.]
 [1. 0. 0.]
 [0. 1. 0.]
 [1. 0. 0.]
 [0. 0. 1.]
 [1. 0. 0.]
 [0. 0. 1.]
 [0. 0. 1.]
 [0. 1. 0.]
 [0. 0. 1.]
 [1. 0. 0.]
 [0. 0. 1.]
 [1. 0. 0.]
 [0. 0. 1.]
 [1. 0. 0.]
 [1. 0. 0.]
 [0. 0. 1.]
 [0. 0. 1.]
 [0. 0. 1.]
 [1. 0. 0.]
 [0. 0. 1.]
 [0. 1. 0.]
 [0. 0. 1.]
 [1. 0. 0.]
 [0. 0. 1.]
 [0. 0. 1.]
 [0. 0. 1.]
 [1. 0. 0.]
 [1. 0. 0.]
 [0. 0. 1.]
 [0. 1. 0.]
 [1. 0. 0.]
 [0. 0. 1.]
 [0. 0. 1.]
 [1. 0. 0.]
 [0. 1. 0.]
 [0. 1. 0.]
 [1. 0. 0.]
 [1. 0. 0.]
 [0. 0. 1.]
 [1. 0. 0.]
 [0. 1. 0.]
 [0. 1. 0.]
 [0. 1. 0.]
 [0. 0. 1.]
 [1. 0. 0.]
 [1. 0. 0.]
 [0. 0. 1.]
 [0. 0. 1.]
 [0. 0. 1.]]
(64, 3)
(64, 3) float32
MODEL_PERFS {'class_name': 'sklearn.tree._classes.DecisionTreeClassifier', 'model_name': 'DecisionTreeClassifier', 'options': '{"max_depth" : 6, "max_leaf_nodes" : 32}', 'dataset': 'iris_small', 'size': 64, 'accuracy': 1.0, 'auc': 1.0}
WRITING_PERF_CODE 'logs/auto_tests/classification/DecisionTreeClassifier/sklearn.tree._classes.DecisionTreeClassifier_iris_small_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'sklearn.tree._classes.DecisionTreeClassifier', 'model_name': 'DecisionTreeClassifier', 'options': '{"max_depth" : 6, "max_leaf_nodes" : 32}', 'dataset': 'iris_small', 'training_time_in_sec': 0.002, 'prediction_time_in_sec': 0.0}
