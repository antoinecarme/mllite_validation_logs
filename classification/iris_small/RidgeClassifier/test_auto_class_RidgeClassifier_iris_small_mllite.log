    sepal length (cm)  sepal width (cm)  ...  petal width (cm)  target
0                 6.4               3.2  ...               2.3       2
1                 6.3               3.3  ...               1.6       1
2                 7.1               3.0  ...               2.1       2
3                 6.1               2.6  ...               1.4       2
4                 6.8               3.2  ...               2.3       2
..                ...               ...  ...               ...     ...
59                5.4               3.9  ...               0.4       0
60                5.0               3.4  ...               0.4       0
61                6.3               2.5  ...               1.9       2
62                6.9               3.1  ...               2.3       2
63                6.5               3.0  ...               2.0       2

[64 rows x 5 columns]
MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
('OPERATION_START', 'TRAINING')
[[6.4 3.2 5.3 2.3]
 [6.3 3.3 4.7 1.6]
 [7.1 3.  5.9 2.1]
 [6.1 2.6 5.6 1.4]
 [6.8 3.2 5.9 2.3]] [2 1 2 2 2]
MLLITE_FIT_USING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 5 5
('OPERATION_END_ELAPSED', 0.008, 'TRAINING')
{ ,   }
{ ,   }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_il8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 4 },
	"classes" : [ 0, 1, 2 ],
	"equations" : {
		"class_0" : {
			"intercept" : -0.430242,
			"coeffs" : [ 0.015209, 0.532474, -0.369107, -0.186778 ]
		},
		"class_1" : {
			"intercept" : 1.161481,
			"coeffs" : [ 0.194343, -0.849024, 0.144426, -0.563945 ]
		},
		"class_2" : {
			"intercept" : -1.731240,
			"coeffs" : [ -0.209552, 0.316551, 0.224681, 0.750721 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_iris_small.json'

MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
MLLITE_RELOADING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_il8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 4 },
	"classes" : [ 0, 1, 2 ],
	"equations" : {
		"class_0" : {
			"intercept" : -0.430242,
			"coeffs" : [ 0.015209, 0.532474, -0.369107, -0.186778 ]
		},
		"class_1" : {
			"intercept" : 1.161481,
			"coeffs" : [ 0.194343, -0.849024, 0.144426, -0.563945 ]
		},
		"class_2" : {
			"intercept" : -1.731240,
			"coeffs" : [ -0.209552, 0.316551, 0.224681, 0.750721 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1, 2 ],
	"dataset" : 	{
		"dataset_features" : 4,
		"dataset_rows" : 64
	},
	"equations" : 	{
		"class_0" : 	{
			"coeffs" : [ 0.015209, 0.532474, -0.369107, -0.186778 ],
			"intercept" : -0.430242
		},
		"class_1" : 	{
			"coeffs" : [ 0.194343, -0.849024, 0.144426, -0.563945 ],
			"intercept" : 1.161481
		},
		"class_2" : 	{
			"coeffs" : [ -0.209552, 0.316551, 0.224681, 0.750721 ],
			"intercept" : -1.73124
		}
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_il8", "version" : "2024-W12" },
	"options" :  { "alpha" : 1.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0.115  0.1366 0.7484]
 [0.2305 0.224  0.5454]
 [0.0955 0.2485 0.656 ]
 [0.1076 0.4542 0.4382]
 [0.0891 0.1546 0.7564]
 [0.2452 0.4599 0.2949]
 [0.2607 0.3812 0.358 ]
 [0.2549 0.1845 0.5606]
 [0.7918 0.1236 0.0847]
 [0.7343 0.164  0.1017]
 [0.7371 0.1614 0.1015]
 [0.252  0.2771 0.4709]
 [0.3296 0.3935 0.2768]
 [0.2329 0.4418 0.3253]
 [0.1149 0.166  0.7191]
 [0.7353 0.1763 0.0884]
 [0.2449 0.3705 0.3846]
 [0.729  0.1807 0.0903]
 [0.0863 0.3734 0.5403]
 [0.7972 0.1081 0.0947]
 [0.1169 0.1834 0.6997]
 [0.0824 0.2455 0.6721]
 [0.223  0.3186 0.4584]
 [0.0884 0.1232 0.7885]
 [0.7525 0.1629 0.0846]
 [0.1137 0.2827 0.6036]
 [0.5073 0.405  0.0876]
 [0.0928 0.15   0.7572]
 [0.8273 0.0819 0.0908]
 [0.7146 0.2037 0.0817]
 [0.0887 0.1896 0.7217]
 [0.0849 0.0936 0.8214]
 [0.1535 0.3795 0.4671]
 [0.6959 0.2012 0.103 ]
 [0.1211 0.1618 0.717 ]
 [0.2755 0.2942 0.4303]
 [0.1474 0.2298 0.6227]
 [0.6943 0.1766 0.1292]
 [0.095  0.1529 0.7521]
 [0.1173 0.278  0.6047]
 [0.1719 0.2339 0.5942]
 [0.7849 0.1201 0.095 ]
 [0.7842 0.1075 0.1082]
 [0.125  0.3799 0.4951]
 [0.2519 0.331  0.4171]
 [0.7706 0.1427 0.0867]
 [0.1332 0.2429 0.6239]
 [0.1082 0.2862 0.6056]
 [0.7314 0.1718 0.0969]
 [0.2729 0.3243 0.4027]
 [0.234  0.5127 0.2533]
 [0.6833 0.2319 0.0848]
 [0.845  0.076  0.0789]
 [0.1205 0.2691 0.6103]
 [0.6835 0.2234 0.0931]
 [0.1944 0.3854 0.4203]
 [0.206  0.3381 0.4559]
 [0.2456 0.3524 0.4021]
 [0.1132 0.1036 0.7832]
 [0.7932 0.0965 0.1104]
 [0.7276 0.1562 0.1163]
 [0.1175 0.3593 0.5232]
 [0.1312 0.1765 0.6923]
 [0.1348 0.2284 0.6368]]
(64, 3)
(64, 3) float32
MODEL_PERFS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'iris_small', 'size': 64, 'accuracy': 0.8125, 'auc': 0.9540960231064398}
WRITING_PERF_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_iris_small.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'iris_small', 'training_time_in_sec': 0.007, 'prediction_time_in_sec': 0.0}
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_iris_small.sql'



SQL_OUT_PUT_FIRST_LINES_START
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT model_input."index" AS "index",
   -0.430242 + 0.015209 * X_0 + 0.532474 * X_1 + -0.369107 * X_2 + -0.186778 * X_3 AS "Score_0", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "LogProba_0",
   1.161481 + 0.194343 * X_0 + -0.849024 * X_1 + 0.144426 * X_2 + -0.563945 * X_3 AS "Score_1", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "LogProba_1",
   -1.731240 + -0.209552 * X_0 + 0.316551 * X_1 + 0.224681 * X_2 + 0.750721 * X_3 AS "Score_2", CAST(NULL AS FLOAT) AS "Proba_2", CAST(NULL AS FLOAT) AS "LogProba_2"
  FROM model_input
 ),
soft_max_orig_cte AS 
( SELECT t."index" AS "index", 
   t."Score_0" AS "Score_0",
   t."Proba_0" AS "Proba_0",
   t."LogProba_0" AS "LogProba_0",
   t."Score_1" AS "Score_1",
   t."Proba_1
SQL_OUT_PUT_FIRST_LINES_END
SQL_OUT_PUT_LAST_LINES_START
ba" AS t
),
arg_max_cte AS 
 (SELECT t.*,
     COALESCE(  t."max_idx_0", t."max_idx_1", t."max_idx_2" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 64 entries, 0 to 63
Data columns (total 4 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     64 non-null     float32
 1   X_1     64 non-null     float32
 2   X_2     64 non-null     float32
 3   X_3     64 non-null     float32
dtypes: float32(4)
memory usage: 1.5 KB
       X_0  X_1  X_2  X_3
index                    
0      6.4  3.2  5.3  2.3
1      6.3  3.3  4.7  1.6
2      7.1  3.0  5.9  2.1
3      6.1  2.6  5.6  1.4
4      6.8  3.2  5.9  2.3
...    ...  ...  ...  ...
59     5.4  3.9  1.7  0.4
60     5.0  3.4  1.6  0.4
61     6.3  2.5  5.0  1.9
62     6.9  3.1  5.1  2.3
63     6.5  3.0  5.2  2.0

[64 rows x 4 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 64 entries, 0 to 63
Data columns (total 12 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          64 non-null     int64  
 1   Score_0        64 non-null     float64
 2   Proba_0        64 non-null     float64
 3   LogProba_0     64 non-null     float64
 4   Score_1        64 non-null     float64
 5   Proba_1        64 non-null     float64
 6   LogProba_1     64 non-null     float64
 7   Score_2        64 non-null     float64
 8   Proba_2        64 non-null     float64
 9   LogProba_2     64 non-null     float64
 10  Decision       64 non-null     int64  
 11  DecisionProba  64 non-null     float64
dtypes: float64(10), int64(2)
memory usage: 6.1 KB
    index   Score_0   Proba_0  ...  LogProba_2  Decision  DecisionProba
0       0 -1.014844  0.115017  ...   -0.289776         2       0.748431
1       1 -0.610909  0.230520  ...   -0.606153         2       0.545445
2       2 -1.294801  0.095456  ...   -0.421564         2       0.656020
3       3 -1.281523  0.107590  ...   -0.825152         1       0.454241
4       4 -1.230225  0.089056  ...   -0.279222         2       0.756372
..    ...       ...       ...  ...         ...       ...            ...
59     59  1.026342  0.793165  ...   -2.204091         0       0.793165
60     60  0.790932  0.727587  ...   -2.151903         0       0.727587
61     61 -1.203653  0.117515  ...   -0.647803         2       0.523194
62     62 -0.986666  0.131194  ...   -0.367725         2       0.692308
63     63 -1.026874  0.134762  ...   -0.451260         2       0.636825

[64 rows x 12 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Decision',
       'DecisionProba'],
      dtype='object')
    index   Score_0  SQL_Proba_0  ...  Py_Proba_1  Py_Proba_2  Py_Decision
48     48  0.823400     0.731352  ...    0.171773    0.096875            0
49     49 -0.520512     0.272939  ...    0.324336    0.402725            2
50     50 -0.621129     0.234020  ...    0.512693    0.253287            1
51     51  0.722613     0.683328  ...    0.231920    0.084751            0
52     52  1.259650     0.845031  ...    0.076023    0.078946            0
53     53 -1.141674     0.120549  ...    0.269108    0.610343            2
54     54  0.703935     0.683502  ...    0.223393    0.093105            0
55     55 -0.818515     0.194370  ...    0.385355    0.420275            2
56     56 -0.763422     0.205967  ...    0.338114    0.455920            2
57     57 -0.618001     0.245581  ...    0.352359    0.402060            2
58     58 -0.948302     0.113222  ...    0.103566    0.783212            2
59     59  1.026342     0.793165  ...    0.096484    0.110351            0
60     60  0.790932     0.727587  ...    0.156150    0.116263            0
61     61 -1.203653     0.117515  ...    0.359291    0.523194            2
62     62 -0.986666     0.131194  ...    0.176498    0.692308            2
63     63 -1.026874     0.134762  ...    0.228412    0.636826            2

[16 rows x 16 columns]
MLLITE_SQL_ERROR ('Py_Proba_0', 'SQL_Proba_0') 1.0975462225321254e-06
    Py_Proba_0  SQL_Proba_0
48    0.731352     0.731352
49    0.272939     0.272939
50    0.234020     0.234020
51    0.683328     0.683328
52    0.845031     0.845031
53    0.120549     0.120549
54    0.683502     0.683502
55    0.194370     0.194370
56    0.205967     0.205967
57    0.245581     0.245581
58    0.113222     0.113222
59    0.793165     0.793165
60    0.727587     0.727587
61    0.117515     0.117515
62    0.131193     0.131194
63    0.134762     0.134762
MLLITE_SQL_ERROR ('Py_Proba_1', 'SQL_Proba_1') 2.8087013610447867e-07
    Py_Proba_1  SQL_Proba_1
48    0.171773     0.171773
49    0.324336     0.324336
50    0.512693     0.512693
51    0.231920     0.231920
52    0.076023     0.076023
53    0.269108     0.269108
54    0.223393     0.223393
55    0.385355     0.385355
56    0.338114     0.338114
57    0.352359     0.352359
58    0.103566     0.103566
59    0.096484     0.096484
60    0.156150     0.156150
61    0.359291     0.359291
62    0.176498     0.176499
63    0.228412     0.228412
MLLITE_SQL_ERROR ('Py_Proba_2', 'SQL_Proba_2') 2.8342150895799797e-07
    Py_Proba_2  SQL_Proba_2
48    0.096875     0.096875
49    0.402725     0.402725
50    0.253287     0.253287
51    0.084751     0.084751
52    0.078946     0.078946
53    0.610343     0.610343
54    0.093105     0.093105
55    0.420275     0.420275
56    0.455920     0.455919
57    0.402060     0.402060
58    0.783212     0.783212
59    0.110351     0.110351
60    0.116263     0.116263
61    0.523194     0.523194
62    0.692308     0.692308
63    0.636826     0.636825
    Py_Decision  SQL_Decision
48            0             0
49            2             2
50            1             1
51            0             0
52            0             0
53            2             2
54            0             0
55            2             2
56            2             2
57            2             2
58            2             2
59            0             0
60            0             0
61            2             2
62            2             2
63            2             2
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
