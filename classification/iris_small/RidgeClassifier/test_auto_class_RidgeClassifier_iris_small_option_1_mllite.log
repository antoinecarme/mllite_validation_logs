    sepal length (cm)  sepal width (cm)  ...  petal width (cm)  target
0                 6.4               3.2  ...               2.3       2
1                 6.3               3.3  ...               1.6       1
2                 7.1               3.0  ...               2.1       2
3                 6.1               2.6  ...               1.4       2
4                 6.8               3.2  ...               2.3       2
..                ...               ...  ...               ...     ...
59                5.4               3.9  ...               0.4       0
60                5.0               3.4  ...               0.4       0
61                6.3               2.5  ...               1.9       2
62                6.9               3.1  ...               2.3       2
63                6.5               3.0  ...               2.0       2

[64 rows x 5 columns]
MLLITE_MODEL_SET_OPTIONS RidgeClassifier {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { "alpha" : 0.0000001,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
('OPERATION_START', 'TRAINING')
[[6.4 3.2 5.3 2.3]
 [6.3 3.3 4.7 1.6]
 [7.1 3.  5.9 2.1]
 [6.1 2.6 5.6 1.4]
 [6.8 3.2 5.9 2.3]] [2 1 2 2 2]
MLLITE_FIT_USING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 5 5
('OPERATION_END_ELAPSED', 0.009, 'TRAINING')
{ "alpha" : 0.0000001,   }
{ "alpha" : 0.0000001,   }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_il8"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 4 },
	"classes" : [ 0, 1, 2 ],
	"equations" : {
		"class_0" : {
			"intercept" : -0.589837,
			"coeffs" : [ 0.124797, 0.462737, -0.486750, -0.043288 ]
		},
		"class_1" : {
			"intercept" : 1.178981,
			"coeffs" : [ 0.168951, -0.842424, 0.228782, -0.732506 ]
		},
		"class_2" : {
			"intercept" : -1.589140,
			"coeffs" : [ -0.293749, 0.379687, 0.257969, 0.775793 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_iris_small_option_1.json'

MLLITE_MODEL_SET_OPTIONS RidgeClassifier {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { "alpha" : 0.0000001,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
MLLITE_RELOADING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_il8"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 4 },
	"classes" : [ 0, 1, 2 ],
	"equations" : {
		"class_0" : {
			"intercept" : -0.589837,
			"coeffs" : [ 0.124797, 0.462737, -0.486750, -0.043288 ]
		},
		"class_1" : {
			"intercept" : 1.178981,
			"coeffs" : [ 0.168951, -0.842424, 0.228782, -0.732506 ]
		},
		"class_2" : {
			"intercept" : -1.589140,
			"coeffs" : [ -0.293749, 0.379687, 0.257969, 0.775793 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1, 2 ],
	"dataset" : 	{
		"dataset_features" : 4,
		"dataset_rows" : 64
	},
	"equations" : 	{
		"class_0" : 	{
			"coeffs" : [ 0.124797, 0.462737, -0.48675, -0.043288 ],
			"intercept" : -0.589837
		},
		"class_1" : 	{
			"coeffs" : [ 0.168951, -0.842424, 0.228782, -0.732506 ],
			"intercept" : 1.178981
		},
		"class_2" : 	{
			"coeffs" : [ -0.293749, 0.379687, 0.257969, 0.775793 ],
			"intercept" : -1.58914
		}
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_il8", "version" : "2024-W12" },
	"options" :  { "alpha" : 0.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0.1151 0.125  0.7599]
 [0.2242 0.2242 0.5516]
 [0.098  0.2511 0.651 ]
 [0.09   0.4863 0.4236]
 [0.0875 0.1485 0.7639]
 [0.2296 0.4839 0.2865]
 [0.2692 0.382  0.3487]
 [0.2418 0.1816 0.5766]
 [0.7979 0.121  0.0811]
 [0.7252 0.1701 0.1047]
 [0.7586 0.1482 0.0932]
 [0.2511 0.2734 0.4755]
 [0.3401 0.3833 0.2767]
 [0.2313 0.4505 0.3182]
 [0.1102 0.1625 0.7273]
 [0.7412 0.1733 0.0855]
 [0.2445 0.379  0.3765]
 [0.7315 0.179  0.0895]
 [0.0882 0.3939 0.5179]
 [0.791  0.1116 0.0974]
 [0.1278 0.1699 0.7023]
 [0.0934 0.247  0.6597]
 [0.229  0.3243 0.4466]
 [0.0829 0.1271 0.79  ]
 [0.7621 0.1577 0.0802]
 [0.1036 0.2897 0.6068]
 [0.5295 0.388  0.0824]
 [0.096  0.1392 0.7648]
 [0.8406 0.0741 0.0853]
 [0.7109 0.206  0.0831]
 [0.0849 0.1842 0.7309]
 [0.0848 0.0874 0.8279]
 [0.1444 0.3957 0.4598]
 [0.6867 0.2082 0.1051]
 [0.1193 0.1709 0.7098]
 [0.2604 0.299  0.4406]
 [0.1348 0.2273 0.6379]
 [0.7075 0.1674 0.1251]
 [0.094  0.1354 0.7706]
 [0.1124 0.2943 0.5934]
 [0.1668 0.2279 0.6054]
 [0.7954 0.1155 0.0891]
 [0.7898 0.103  0.1073]
 [0.1203 0.407  0.4726]
 [0.2396 0.3382 0.4222]
 [0.7754 0.1402 0.0844]
 [0.1228 0.2474 0.6298]
 [0.1056 0.2749 0.6195]
 [0.7245 0.1749 0.1006]
 [0.2539 0.3371 0.409 ]
 [0.2279 0.5267 0.2454]
 [0.6807 0.2367 0.0826]
 [0.8375 0.08   0.0825]
 [0.1135 0.2631 0.6234]
 [0.6867 0.2228 0.0905]
 [0.202  0.3904 0.4076]
 [0.2114 0.3485 0.4401]
 [0.2565 0.3561 0.3875]
 [0.1053 0.0938 0.8009]
 [0.7974 0.0936 0.109 ]
 [0.7339 0.1513 0.1148]
 [0.1239 0.355  0.5211]
 [0.1482 0.1624 0.6894]
 [0.1371 0.2222 0.6407]]
(64, 3)
(64, 3) float32
MODEL_PERFS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': '{"alpha" : 0.0000001}', 'dataset': 'iris_small', 'size': 64, 'accuracy': 0.828125, 'auc': 0.950390494661328}
WRITING_PERF_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_iris_small_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': '{"alpha" : 0.0000001}', 'dataset': 'iris_small', 'training_time_in_sec': 0.009, 'prediction_time_in_sec': 0.0}
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_iris_small_option_1.sql'



SQL_OUT_PUT_FIRST_LINES_START
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT model_input."index" AS "index",
   -0.589837 + 0.124797 * X_0 + 0.462737 * X_1 + -0.486750 * X_2 + -0.043288 * X_3 AS "Score_0", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "LogProba_0",
   1.178981 + 0.168951 * X_0 + -0.842424 * X_1 + 0.228782 * X_2 + -0.732506 * X_3 AS "Score_1", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "LogProba_1",
   -1.589140 + -0.293749 * X_0 + 0.379687 * X_1 + 0.257969 * X_2 + 0.775793 * X_3 AS "Score_2", CAST(NULL AS FLOAT) AS "Proba_2", CAST(NULL AS FLOAT) AS "LogProba_2"
  FROM model_input
 )
,
soft_max_orig_cte AS 
 (SELECT t."index" AS "index", 
   t."Score_0" AS "Score_0",
   t."Proba_0" AS "Proba_0",
   t."LogProba_0" AS "LogProba_0",
   t."Score_1" AS "Score_1",
   t."Proba_
SQL_OUT_PUT_FIRST_LINES_END
SQL_OUT_PUT_LAST_LINES_START
x_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."arg_max_Score" AS "Decision",
  CASE
   WHEN (arg_max_cte."arg_max_Score" = 0) THEN arg_max_cte."Proba_0"
   WHEN (arg_max_cte."arg_max_Score" = 1) THEN arg_max_cte."Proba_1"
   WHEN (arg_max_cte."arg_max_Score" = 2) THEN arg_max_cte."Proba_2"
 END AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END




COPY_TRAINING_DATA_TO_SQLITE_START
    X_0  X_1  X_2  X_3  KEY
0   6.4  3.2  5.3  2.3    0
1   6.3  3.3  4.7  1.6    1
2   7.1  3.0  5.9  2.1    2
3   6.1  2.6  5.6  1.4    3
4   6.8  3.2  5.9  2.3    4
..  ...  ...  ...  ...  ...
59  5.4  3.9  1.7  0.4   59
60  5.0  3.4  1.6  0.4   60
61  6.3  2.5  5.0  1.9   61
62  6.9  3.1  5.1  2.3   62
63  6.5  3.0  5.2  2.0   63

[64 rows x 5 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
    index   Score_0   Proba_0  ...  LogProba_2  Decision  DecisionProba
0       0 -0.989715  0.115129  ...   -0.274564         2       0.759903
1       1 -0.633570  0.224163  ...   -0.594882         2       0.551628
2       2 -1.278297  0.097969  ...   -0.429318         2       0.650953
3       3 -1.411862  0.090026  ...   -0.858884         1       0.486340
4       4 -1.231846  0.087525  ...   -0.269282         2       0.763927
..    ...       ...       ...  ...         ...       ...            ...
59     59  1.043951  0.797360  ...   -2.216141         0       0.797360
60     60  0.811339  0.733869  ...   -2.164646         0       0.733869
61     61 -1.162771  0.123943  ...   -0.651852         2       0.521080
62     62 -0.876240  0.148203  ...   -0.371942         2       0.689394
63     63 -1.008121  0.137119  ...   -0.445204         2       0.640694

[64 rows x 12 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Decision',
       'DecisionProba'],
      dtype='object')
    index   Score_0  SQL_Proba_0  ...  Py_Proba_1  Py_Proba_2  Py_Decision
48     48  0.798596     0.724503  ...    0.174934    0.100562            0
49     49 -0.586579     0.253945  ...    0.337073    0.408982            2
50     50 -0.637148     0.227927  ...    0.526659    0.245413            1
51     51  0.721699     0.680693  ...    0.236668    0.082638            0
52     52  1.221875     0.837473  ...    0.079999    0.082527            0
53     53 -1.181297     0.113514  ...    0.263116    0.623370            2
54     54  0.717370     0.686673  ...    0.222847    0.090479            0
55     55 -0.786975     0.202000  ...    0.390432    0.407568            2
56     56 -0.744260     0.211431  ...    0.348506    0.440063            2
57     57 -0.580269     0.256462  ...    0.356082    0.387456            2
58     58 -0.970802     0.105324  ...    0.093760    0.800916            2
59     59  1.043951     0.797360  ...    0.093610    0.109029            0
60     60  0.811339     0.733869  ...    0.151340    0.114791            0
61     61 -1.162771     0.123943  ...    0.354976    0.521081            2
62     62 -0.876240     0.148203  ...    0.162402    0.689395            2
63     63 -1.008121     0.137119  ...    0.222186    0.640694            2

[16 rows x 16 columns]
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
