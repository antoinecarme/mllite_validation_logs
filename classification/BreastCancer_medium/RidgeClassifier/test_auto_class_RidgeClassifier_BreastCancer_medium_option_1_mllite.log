     mean radius  mean texture  ...  worst fractal dimension  target
0          17.99         10.38  ...                  0.11890       0
1          20.57         17.77  ...                  0.08902       0
2          19.69         21.25  ...                  0.08758       0
3          11.42         20.38  ...                  0.17300       0
4          20.29         14.34  ...                  0.07678       0
..           ...           ...  ...                      ...     ...
507        11.06         17.12  ...                  0.11680       1
508        16.30         15.70  ...                  0.07230       1
509        15.46         23.95  ...                  0.10670       0
510        11.74         14.69  ...                  0.09879       1
511        14.81         14.70  ...                  0.06142       1

[512 rows x 31 columns]
MLLITE_MODEL_SET_OPTIONS RidgeClassifier {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { "alpha" : 0.0000001,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
('OPERATION_START', 'TRAINING')
[[1.799e+01 1.038e+01 1.228e+02 1.001e+03 1.184e-01 2.776e-01 3.001e-01
  1.471e-01 2.419e-01 7.871e-02 1.095e+00 9.053e-01 8.589e+00 1.534e+02
  6.399e-03 4.904e-02 5.373e-02 1.587e-02 3.003e-02 6.193e-03 2.538e+01
  1.733e+01 1.846e+02 2.019e+03 1.622e-01 6.656e-01 7.119e-01 2.654e-01
  4.601e-01 1.189e-01]
 [2.057e+01 1.777e+01 1.329e+02 1.326e+03 8.474e-02 7.864e-02 8.690e-02
  7.017e-02 1.812e-01 5.667e-02 5.435e-01 7.339e-01 3.398e+00 7.408e+01
  5.225e-03 1.308e-02 1.860e-02 1.340e-02 1.389e-02 3.532e-03 2.499e+01
  2.341e+01 1.588e+02 1.956e+03 1.238e-01 1.866e-01 2.416e-01 1.860e-01
  2.750e-01 8.902e-02]
 [1.969e+01 2.125e+01 1.300e+02 1.203e+03 1.096e-01 1.599e-01 1.974e-01
  1.279e-01 2.069e-01 5.999e-02 7.456e-01 7.869e-01 4.585e+00 9.403e+01
  6.150e-03 4.006e-02 3.832e-02 2.058e-02 2.250e-02 4.571e-03 2.357e+01
  2.553e+01 1.525e+02 1.709e+03 1.444e-01 4.245e-01 4.504e-01 2.430e-01
  3.613e-01 8.758e-02]
 [1.142e+01 2.038e+01 7.758e+01 3.861e+02 1.425e-01 2.839e-01 2.414e-01
  1.052e-01 2.597e-01 9.744e-02 4.956e-01 1.156e+00 3.445e+00 2.723e+01
  9.110e-03 7.458e-02 5.661e-02 1.867e-02 5.963e-02 9.208e-03 1.491e+01
  2.650e+01 9.887e+01 5.677e+02 2.098e-01 8.663e-01 6.869e-01 2.575e-01
  6.638e-01 1.730e-01]
 [2.029e+01 1.434e+01 1.351e+02 1.297e+03 1.003e-01 1.328e-01 1.980e-01
  1.043e-01 1.809e-01 5.883e-02 7.572e-01 7.813e-01 5.438e+00 9.444e+01
  1.149e-02 2.461e-02 5.688e-02 1.885e-02 1.756e-02 5.115e-03 2.254e+01
  1.667e+01 1.522e+02 1.575e+03 1.374e-01 2.050e-01 4.000e-01 1.625e-01
  2.364e-01 7.678e-02]] [0 0 0 0 0]
MLLITE_FIT_USING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 3 4
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 4 4
('OPERATION_END_ELAPSED', 0.019, 'TRAINING')
{ "alpha" : 0.0000001,   }
{ "alpha" : 0.0000001,   }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_il8"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 512, "dataset_features" : 30 },
	"classes" : [ 0, 1 ],
	"equations" : {
		"class_1" : {
			"intercept" : 5.532585,
			"coeffs" : [ 0.433393, -0.021644, -0.046256, -0.000776, -2.611462, 9.123813, -3.757194, -1.976325, 0.221736, -2.127784, -0.871243, -0.010197, 0.062211, 0.001217, -29.947268, 1.463524, 8.584777, -31.118158, -1.059332, 6.850546, -0.383521, -0.006696, 0.000156, 0.002213, -0.971352, -0.517911, -0.655961, -0.390574, -1.543964, -7.500098 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BreastCancer_medium_option_1.json'

MLLITE_MODEL_SET_OPTIONS RidgeClassifier {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { "alpha" : 0.0000001,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
MLLITE_RELOADING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_il8"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 512, "dataset_features" : 30 },
	"classes" : [ 0, 1 ],
	"equations" : {
		"class_1" : {
			"intercept" : 5.532585,
			"coeffs" : [ 0.433393, -0.021644, -0.046256, -0.000776, -2.611462, 9.123813, -3.757194, -1.976325, 0.221736, -2.127784, -0.871243, -0.010197, 0.062211, 0.001217, -29.947268, 1.463524, 8.584777, -31.118158, -1.059332, 6.850546, -0.383521, -0.006696, 0.000156, 0.002213, -0.971352, -0.517911, -0.655961, -0.390574, -1.543964, -7.500098 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1 ],
	"dataset" : 	{
		"dataset_features" : 30,
		"dataset_rows" : 512
	},
	"equations" : 	{
		"class_1" : 	{
			"coeffs" : [ 0.433393, -0.021644, -0.046256, -0.000776, -2.611462, 9.123813, -3.757194, -1.976325, 0.221736, -2.127784, -0.871243, -0.010197, 0.062211, 0.001217, -29.947268, 1.463524, 8.584777, -31.118158, -1.059332, 6.850546, -0.383521, -0.006696, 0.000156, 0.002213, -0.971352, -0.517911, -0.655961, -0.390574, -1.543964, -7.500098 ],
			"intercept" : 5.532585
		}
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_il8", "version" : "2024-W12" },
	"options" :  { "alpha" : 0.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0.8952 0.1048]
 [0.7874 0.2126]
 [0.931  0.069 ]
 ...
 [0.7814 0.2186]
 [0.1366 0.8634]
 [0.1802 0.8198]]
(512, 2)
(512,) float32
MODEL_PERFS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': '{"alpha" : 0.0000001}', 'dataset': 'BreastCancer_medium', 'size': 512, 'accuracy': 0.966796875, 'auc': 0.997169143665959}
WRITING_PERF_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BreastCancer_medium_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': '{"alpha" : 0.0000001}', 'dataset': 'BreastCancer_medium', 'training_time_in_sec': 0.019, 'prediction_time_in_sec': 0.0}
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BreastCancer_medium_option_1.sql'



SQL_OUT_PUT_FIRST_LINES_START
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END
SQL_OUT_PUT_LAST_LINES_START
ax."index" AS "index_Score",
     max(union_with_max.class) AS "arg_max_Score"
    FROM union_with_max
    WHERE union_with_max."max_Score" <= union_with_max."Score"
    GROUP BY union_with_max."index"
   ) AS "arg_max_t_Score"
   ON score_max."index" = "arg_max_t_Score"."index_Score"
 )
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."arg_max_Score" AS "Decision",
  CASE
   WHEN (arg_max_cte."arg_max_Score" = 0) THEN arg_max_cte."Proba_0"
   WHEN (arg_max_cte."arg_max_Score" = 1) THEN arg_max_cte."Proba_1"
 END AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END




COPY_TRAINING_DATA_TO_SQLITE_START
           X_0        X_1         X_2  ...    X_28     X_29  KEY
0    17.990000  10.380000  122.800003  ...  0.4601  0.11890    0
1    20.570000  17.770000  132.899994  ...  0.2750  0.08902    1
2    19.690001  21.250000  130.000000  ...  0.3613  0.08758    2
3    11.420000  20.379999   77.580002  ...  0.6638  0.17300    3
4    20.290001  14.340000  135.100006  ...  0.2364  0.07678    4
..         ...        ...         ...  ...     ...      ...  ...
507  11.060000  17.120001   71.250000  ...  0.2780  0.11680  507
508  16.299999  15.700000  104.699997  ...  0.2300  0.07230  508
509  15.460000  23.950001  103.800003  ...  0.3013  0.10670  509
510  11.740000  14.690000   76.309998  ...  0.2604  0.09879  510
511  14.810000  14.700000   94.660004  ...  0.2334  0.06142  511

[512 rows x 31 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
     index   Score_0   Proba_0  ...  LogProba_1  Decision  DecisionProba
0        0  1.072939  0.895283  ...   -2.256493         0       0.895283
1        1  0.655339  0.787627  ...   -1.549409         0       0.787627
2        2  1.301536  0.931059  ...   -2.674505         0       0.931059
3        3  1.498728  0.952459  ...   -3.046164         0       0.952459
4        4  0.682966  0.796722  ...   -1.593182         0       0.796722
..     ...       ...       ...  ...         ...       ...            ...
507    507 -0.661159  0.210433  ...   -0.236270         1       0.789567
508    508 -0.271370  0.367550  ...   -0.458155         1       0.632450
509    509  0.637377  0.781556  ...   -1.521224         0       0.781556
510    510 -0.921525  0.136691  ...   -0.146983         1       0.863309
511    511 -0.757175  0.180295  ...   -0.198811         1       0.819705

[512 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
     index   Score_0  SQL_Proba_0  ...  Py_Proba_0  Py_Proba_1  Py_Decision
496    496 -0.383502     0.317127  ...    0.317031    0.682969            1
497    497 -0.732753     0.187627  ...    0.187560    0.812440            1
498    498  0.747714     0.816892  ...    0.816740    0.183260            0
499    499  0.995762     0.879904  ...    0.879775    0.120226            0
500    500 -0.665594     0.208963  ...    0.208861    0.791139            1
501    501  0.582857     0.762369  ...    0.762271    0.237729            0
502    502 -0.686325     0.202192  ...    0.202124    0.797876            1
503    503  1.407307     0.943460  ...    0.943372    0.056628            0
504    504 -1.186740     0.085217  ...    0.085201    0.914799            1
505    505 -1.018344     0.115404  ...    0.115381    0.884619            1
506    506 -0.826343     0.160746  ...    0.160693    0.839308            1
507    507 -0.661159     0.210433  ...    0.210380    0.789620            1
508    508 -0.271370     0.367550  ...    0.367380    0.632620            1
509    509  0.637377     0.781556  ...    0.781443    0.218557            0
510    510 -0.921525     0.136691  ...    0.136647    0.863353            1
511    511 -0.757175     0.180295  ...    0.180206    0.819793            1

[16 rows x 12 columns]
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
