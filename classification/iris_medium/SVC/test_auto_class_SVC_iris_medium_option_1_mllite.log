READING_CSV iris_medium ['data/medium/iris_medium.csv']
     sepal length (cm)  sepal width (cm)  ...  petal width (cm)  target
0                  5.1               3.5  ...               0.2       0
1                  4.9               3.0  ...               0.2       0
2                  4.7               3.2  ...               0.2       0
3                  4.6               3.1  ...               0.2       0
4                  5.0               3.6  ...               0.2       0
..                 ...               ...  ...               ...     ...
145                6.7               3.0  ...               2.3       2
146                6.3               2.5  ...               1.9       2
147                6.5               3.0  ...               2.0       2
148                6.2               3.4  ...               2.3       2
149                5.9               3.0  ...               1.8       2

[150 rows x 5 columns]
MLLITE_MODEL_SET_OPTIONS SVC {"C" : 2}
MLLITE_MODEL_OPTIONS_DEFAULT SVC { "max_iter" : 128 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING SVC { "C" : 2,  "max_iter" : 128  }
MLLITE_MODEL_JSON_AFTER_SETTING SVC None
('OPERATION_START', 'TRAINING')
[[5.1 3.5 1.4 0.2]
 [4.9 3.  1.4 0.2]
 [4.7 3.2 1.3 0.2]
 [4.6 3.1 1.5 0.2]
 [5.  3.6 1.4 0.2]] [0 0 0 0 0]
MLLITE_FIT_USING_MODEL mllite_svm_class.SVC_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_CLASSIFIER_FIT' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_CLASSIFIER_FIT' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_CLASSIFIER_FIT' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_CLASSIFIER_FIT' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 1 3
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_0_1_CV_FOLD_1' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_0_1_CV_FOLD_4' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 2 3
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_0_2_CV_FOLD_1' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_0_2_CV_FOLD_2' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_0_2_CV_FOLD_3' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_0_2_CV_FOLD_4' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_0_2_CV_FOLD_5' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 3 3
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_1_2_CV_FOLD_1' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_1_2_CV_FOLD_1' 24 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_1_2_CV_FOLD_2' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_1_2_CV_FOLD_2' 24 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_1_2_CV_FOLD_2' 36 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_1_2_CV_FOLD_3' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_1_2_CV_FOLD_4' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_1_2_CV_FOLD_4' 24 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_1_2_CV_FOLD_5' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_1_2_CV_FOLD_5' 24 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_1_2' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_1_2' 24 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_1_2' 36 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_1_2' 48 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_CLASSIFIER_FIT' 5 5
('OPERATION_END_ELAPSED', 0.045, 'TRAINING')
{ "C" : 2,  "max_iter" : 128  }
{ "C" : 2,  "max_iter" : 128  }
{
	"metadata" : { "model" : "Vapnik_SVC_RBF", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : {"svm_type" : "c_svc", "kernel" : "rbf", "degree" : 3, "gamma" : 0.064167, "coef0" : 0.000000, "cache_size" : 300, "tol" : 0.001000, "nu" : 0.500000, "epsilon" : 0.000000, "shrinking" : 0, "probability" : 1, "C" : 2.000000, "max_iter" : 128, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 150, "dataset_features" : 4 },
	"classes" : [ 0, 1, 2 ],
	"svm_model" : {
	"classes" : 3,
	"L" : 46,
	"SupportVectors" : {
		"SV_00" : [ 5.100000, 3.300000, 1.700000, 0.500000 ],
		"SV_01" : [ 4.800000, 3.400000, 1.900000, 0.200000 ],
		"SV_02" : [ 4.500000, 2.300000, 1.300000, 0.300000 ],
		"SV_03" : [ 5.100000, 3.800000, 1.900000, 0.400000 ],
		"SV_04" : [ 6.900000, 3.100000, 4.900000, 1.500000 ],
		"SV_05" : [ 6.500000, 2.800000, 4.600000, 1.500000 ],
		"SV_06" : [ 5.700000, 2.800000, 4.500000, 1.300000 ],
		"SV_07" : [ 6.300000, 3.300000, 4.700000, 1.600000 ],
		"SV_08" : [ 4.900000, 2.400000, 3.300000, 1.000000 ],
		"SV_09" : [ 6.100000, 2.900000, 4.700000, 1.400000 ],
		"SV_10" : [ 5.600000, 3.000000, 4.500000, 1.500000 ],
		"SV_11" : [ 6.200000, 2.200000, 4.500000, 1.500000 ],
		"SV_12" : [ 5.900000, 3.200000, 4.800000, 1.800000 ],
		"SV_13" : [ 6.300000, 2.500000, 4.900000, 1.500000 ],
		"SV_14" : [ 6.100000, 2.800000, 4.700000, 1.200000 ],
		"SV_15" : [ 6.800000, 2.800000, 4.800000, 1.400000 ],
		"SV_16" : [ 6.700000, 3.000000, 5.000000, 1.700000 ],
		"SV_17" : [ 6.000000, 2.900000, 4.500000, 1.500000 ],
		"SV_18" : [ 6.000000, 2.700000, 5.100000, 1.600000 ],
		"SV_19" : [ 5.400000, 3.000000, 4.500000, 1.500000 ],
		"SV_20" : [ 6.000000, 3.400000, 4.500000, 1.600000 ],
		"SV_21" : [ 6.700000, 3.100000, 4.700000, 1.500000 ],
		"SV_22" : [ 6.300000, 2.300000, 4.400000, 1.300000 ],
		"SV_23" : [ 6.100000, 3.000000, 4.600000, 1.400000 ],
		"SV_24" : [ 5.000000, 2.300000, 3.300000, 1.000000 ],
		"SV_25" : [ 5.100000, 2.500000, 3.000000, 1.100000 ],
		"SV_26" : [ 5.800000, 2.700000, 5.100000, 1.900000 ],
		"SV_27" : [ 4.900000, 2.500000, 4.500000, 1.700000 ],
		"SV_28" : [ 6.500000, 3.200000, 5.100000, 2.000000 ],
		"SV_29" : [ 5.700000, 2.500000, 5.000000, 2.000000 ],
		"SV_30" : [ 6.000000, 2.200000, 5.000000, 1.500000 ],
		"SV_31" : [ 5.600000, 2.800000, 4.900000, 2.000000 ],
		"SV_32" : [ 6.300000, 2.700000, 4.900000, 1.800000 ],
		"SV_33" : [ 6.200000, 2.800000, 4.800000, 1.800000 ],
		"SV_34" : [ 6.100000, 3.000000, 4.900000, 1.800000 ],
		"SV_35" : [ 7.200000, 3.000000, 5.800000, 1.600000 ],
		"SV_36" : [ 7.900000, 3.800000, 6.400000, 2.000000 ],
		"SV_37" : [ 6.300000, 2.800000, 5.100000, 1.500000 ],
		"SV_38" : [ 6.100000, 2.600000, 5.600000, 1.400000 ],
		"SV_39" : [ 6.400000, 3.100000, 5.500000, 1.800000 ],
		"SV_40" : [ 6.000000, 3.000000, 4.800000, 1.800000 ],
		"SV_41" : [ 6.900000, 3.100000, 5.100000, 2.300000 ],
		"SV_42" : [ 5.800000, 2.700000, 5.100000, 1.900000 ],
		"SV_43" : [ 6.300000, 2.500000, 5.000000, 1.900000 ],
		"SV_44" : [ 6.500000, 3.000000, 5.200000, 2.000000 ],
		"SV_45" : [ 5.900000, 3.000000, 5.100000, 1.800000 ]
	},
	"SupportVectorsCoefs" : {
		"SV_coef_0" : [ 2.000000, 2.000000, 1.106046, 0.000000, -0.000000, -0.000000, -0.000000, -0.000000, -2.000000, -0.000000, -0.000000, -0.000000, -0.000000, -0.000000, -0.000000, -0.000000, -0.000000, -0.000000, -0.000000, -0.000000, -0.000000, -0.000000, -0.000000, -0.000000, -1.106046, -2.000000, -0.000000, -1.841305, -0.000000, -0.000000, -0.000000, -0.000000, -0.000000, -0.000000, -0.000000, -0.000000, -0.412678, -0.000000, -0.000000, -0.000000, -0.000000, -0.000000, -0.000000, -0.000000, -0.000000, -0.000000 ],
		"SV_coef_1" : [ 0.000000, 0.000000, 0.670836, 1.583146, 2.000000, 2.000000, 2.000000, 2.000000, 0.000000, 2.000000, 2.000000, 2.000000, 2.000000, 2.000000, 2.000000, 2.000000, 2.000000, 2.000000, 2.000000, 2.000000, 2.000000, 2.000000, 0.247438, 2.000000, 0.000000, 0.000000, -2.000000, -2.000000, -2.000000, -1.731109, -2.000000, -2.000000, -2.000000, -2.000000, -2.000000, -1.774368, -0.000000, -2.000000, -2.000000, -0.741961, -2.000000, -2.000000, -2.000000, -2.000000, -2.000000, -2.000000 ]
	},
	"rho" : [ -0.140946, 0.121082, 0.266362 ],
	"nSV" : [ 4, 22, 20 ],
	"probA" : [ -3.216073, -3.484164, -3.208125 ],
	"probB" : [ -0.034475, -0.050869, 0.070338 ],
	"n_iter" : [ 10, 8, 47 ]
}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/SVC/mllite.SVC_iris_medium_option_1.json'

RELOADING_MODEL_FROM_JSON_START ('iris_medium', 'SVC')
MLLITE_MODEL_SET_OPTIONS SVC {"C" : 2}
MLLITE_MODEL_OPTIONS_DEFAULT SVC { "max_iter" : 128 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING SVC { "C" : 2,  "max_iter" : 128  }
MLLITE_MODEL_JSON_AFTER_SETTING SVC None
MLLITE_RELOADING_MODEL mllite_svm_class.SVC_ff4_il8
{
	"metadata" : { "model" : "Vapnik_SVC_RBF", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : {"svm_type" : "c_svc", "kernel" : "rbf", "degree" : 3, "gamma" : 0.064167, "coef0" : 0.000000, "cache_size" : 300, "tol" : 0.001000, "nu" : 0.500000, "epsilon" : 0.000000, "shrinking" : 0, "probability" : 1, "C" : 2.000000, "max_iter" : 128, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 150, "dataset_features" : 4 },
	"classes" : [ 0, 1, 2 ],
	"svm_model" : {
	"classes" : 3,
	"L" : 46,
	"SupportVectors" : {
		"SV_00" : [ 5.100000, 3.300000, 1.700000, 0.500000 ],
		"SV_01" : [ 4.800000, 3.400000, 1.900000, 0.200000 ],
		"SV_02" : [ 4.500000, 2.300000, 1.300000, 0.300000 ],
		"SV_03" : [ 5.100000, 3.800000, 1.900000, 0.400000 ],
		"SV_04" : [ 6.900000, 3.100000, 4.900000, 1.500000 ],
		"SV_05" : [ 6.500000, 2.800000, 4.600000, 1.500000 ],
		"SV_06" : [ 5.700000, 2.800000, 4.500000, 1.300000 ],
		"SV_07" : [ 6.300000, 3.300000, 4.700000, 1.600000 ],
		"SV_08" : [ 4.900000, 2.400000, 3.300000, 1.000000 ],
		"SV_09" : [ 6.100000, 2.900000, 4.700000, 1.400000 ],
		"SV_10" : [ 5.600000, 3.000000, 4.500000, 1.500000 ],
		"SV_11" : [ 6.200000, 2.200000, 4.500000, 1.500000 ],
		"SV_12" : [ 5.900000, 3.200000, 4.800000, 1.800000 ],
		"SV_13" : [ 6.300000, 2.500000, 4.900000, 1.500000 ],
		"SV_14" : [ 6.100000, 2.800000, 4.700000, 1.200000 ],
		"SV_15" : [ 6.800000, 2.800000, 4.800000, 1.400000 ],
		"SV_16" : [ 6.700000, 3.000000, 5.000000, 1.700000 ],
		"SV_17" : [ 6.000000, 2.900000, 4.500000, 1.500000 ],
		"SV_18" : [ 6.000000, 2.700000, 5.100000, 1.600000 ],
		"SV_19" : [ 5.400000, 3.000000, 4.500000, 1.500000 ],
		"SV_20" : [ 6.000000, 3.400000, 4.500000, 1.600000 ],
		"SV_21" : [ 6.700000, 3.100000, 4.700000, 1.500000 ],
		"SV_22" : [ 6.300000, 2.300000, 4.400000, 1.300000 ],
		"SV_23" : [ 6.100000, 3.000000, 4.600000, 1.400000 ],
		"SV_24" : [ 5.000000, 2.300000, 3.300000, 1.000000 ],
		"SV_25" : [ 5.100000, 2.500000, 3.000000, 1.100000 ],
		"SV_26" : [ 5.800000, 2.700000, 5.100000, 1.900000 ],
		"SV_27" : [ 4.900000, 2.500000, 4.500000, 1.700000 ],
		"SV_28" : [ 6.500000, 3.200000, 5.100000, 2.000000 ],
		"SV_29" : [ 5.700000, 2.500000, 5.000000, 2.000000 ],
		"SV_30" : [ 6.000000, 2.200000, 5.000000, 1.500000 ],
		"SV_31" : [ 5.600000, 2.800000, 4.900000, 2.000000 ],
		"SV_32" : [ 6.300000, 2.700000, 4.900000, 1.800000 ],
		"SV_33" : [ 6.200000, 2.800000, 4.800000, 1.800000 ],
		"SV_34" : [ 6.100000, 3.000000, 4.900000, 1.800000 ],
		"SV_35" : [ 7.200000, 3.000000, 5.800000, 1.600000 ],
		"SV_36" : [ 7.900000, 3.800000, 6.400000, 2.000000 ],
		"SV_37" : [ 6.300000, 2.800000, 5.100000, 1.500000 ],
		"SV_38" : [ 6.100000, 2.600000, 5.600000, 1.400000 ],
		"SV_39" : [ 6.400000, 3.100000, 5.500000, 1.800000 ],
		"SV_40" : [ 6.000000, 3.000000, 4.800000, 1.800000 ],
		"SV_41" : [ 6.900000, 3.100000, 5.100000, 2.300000 ],
		"SV_42" : [ 5.800000, 2.700000, 5.100000, 1.900000 ],
		"SV_43" : [ 6.300000, 2.500000, 5.000000, 1.900000 ],
		"SV_44" : [ 6.500000, 3.000000, 5.200000, 2.000000 ],
		"SV_45" : [ 5.900000, 3.000000, 5.100000, 1.800000 ]
	},
	"SupportVectorsCoefs" : {
		"SV_coef_0" : [ 2.000000, 2.000000, 1.106046, 0.000000, -0.000000, -0.000000, -0.000000, -0.000000, -2.000000, -0.000000, -0.000000, -0.000000, -0.000000, -0.000000, -0.000000, -0.000000, -0.000000, -0.000000, -0.000000, -0.000000, -0.000000, -0.000000, -0.000000, -0.000000, -1.106046, -2.000000, -0.000000, -1.841305, -0.000000, -0.000000, -0.000000, -0.000000, -0.000000, -0.000000, -0.000000, -0.000000, -0.412678, -0.000000, -0.000000, -0.000000, -0.000000, -0.000000, -0.000000, -0.000000, -0.000000, -0.000000 ],
		"SV_coef_1" : [ 0.000000, 0.000000, 0.670836, 1.583146, 2.000000, 2.000000, 2.000000, 2.000000, 0.000000, 2.000000, 2.000000, 2.000000, 2.000000, 2.000000, 2.000000, 2.000000, 2.000000, 2.000000, 2.000000, 2.000000, 2.000000, 2.000000, 0.247438, 2.000000, 0.000000, 0.000000, -2.000000, -2.000000, -2.000000, -1.731109, -2.000000, -2.000000, -2.000000, -2.000000, -2.000000, -1.774368, -0.000000, -2.000000, -2.000000, -0.741961, -2.000000, -2.000000, -2.000000, -2.000000, -2.000000, -2.000000 ]
	},
	"rho" : [ -0.140946, 0.121082, 0.266362 ],
	"nSV" : [ 4, 22, 20 ],
	"probA" : [ -3.216073, -3.484164, -3.208125 ],
	"probB" : [ -0.034475, -0.050869, 0.070338 ],
	"n_iter" : [ 10, 8, 47 ]
}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1, 2 ],
	"dataset" : 	{
		"dataset_features" : 4,
		"dataset_rows" : 150
	},
	"metadata" :  { "model" : "Vapnik_SVC_RBF", "signature" : "ff4_il8", "version" : "2024-W14" },
	"options" :  { "C" : 2.0, "cache_size" : 300, "coef0" : 0.0, "degree" : 3, "epsilon" : 0.0, "gamma" : 0.064167, "kernel" : "rbf", "max_iter" : 128, "nu" : 0.5, "probability" : 1, "random_state" : 1789, "shrinking" : 0, "svm_type" : "c_svc", "tol" : 0.001 },
	"svm_model" : 	{
		"L" : 46,
		"SupportVectors" : 	{
			"SV_00" : [ 5.1, 3.3, 1.7, 0.5 ],
			"SV_01" : [ 4.8, 3.4, 1.9, 0.2 ],
			"SV_02" : [ 4.5, 2.3, 1.3, 0.3 ],
			"SV_03" : [ 5.1, 3.8, 1.9, 0.4 ],
			"SV_04" : [ 6.9, 3.1, 4.9, 1.5 ],
			"SV_05" : [ 6.5, 2.8, 4.6, 1.5 ],
			"SV_06" : [ 5.7, 2.8, 4.5, 1.3 ],
			"SV_07" : [ 6.3, 3.3, 4.7, 1.6 ],
			"SV_08" : [ 4.9, 2.4, 3.3, 1.0 ],
			"SV_09" : [ 6.1, 2.9, 4.7, 1.4 ],
			"SV_10" : [ 5.6, 3.0, 4.5, 1.5 ],
			"SV_11" : [ 6.2, 2.2, 4.5, 1.5 ],
			"SV_12" : [ 5.9, 3.2, 4.8, 1.8 ],
			"SV_13" : [ 6.3, 2.5, 4.9, 1.5 ],
			"SV_14" : [ 6.1, 2.8, 4.7, 1.2 ],
			"SV_15" : [ 6.8, 2.8, 4.8, 1.4 ],
			"SV_16" : [ 6.7, 3.0, 5.0, 1.7 ],
			"SV_17" : [ 6.0, 2.9, 4.5, 1.5 ],
			"SV_18" : [ 6.0, 2.7, 5.1, 1.6 ],
			"SV_19" : [ 5.4, 3.0, 4.5, 1.5 ],
			"SV_20" : [ 6.0, 3.4, 4.5, 1.6 ],
			"SV_21" : [ 6.7, 3.1, 4.7, 1.5 ],
			"SV_22" : [ 6.3, 2.3, 4.4, 1.3 ],
			"SV_23" : [ 6.1, 3.0, 4.6, 1.4 ],
			"SV_24" : [ 5.0, 2.3, 3.3, 1.0 ],
			"SV_25" : [ 5.1, 2.5, 3.0, 1.1 ],
			"SV_26" : [ 5.8, 2.7, 5.1, 1.9 ],
			"SV_27" : [ 4.9, 2.5, 4.5, 1.7 ],
			"SV_28" : [ 6.5, 3.2, 5.1, 2.0 ],
			"SV_29" : [ 5.7, 2.5, 5.0, 2.0 ],
			"SV_30" : [ 6.0, 2.2, 5.0, 1.5 ],
			"SV_31" : [ 5.6, 2.8, 4.9, 2.0 ],
			"SV_32" : [ 6.3, 2.7, 4.9, 1.8 ],
			"SV_33" : [ 6.2, 2.8, 4.8, 1.8 ],
			"SV_34" : [ 6.1, 3.0, 4.9, 1.8 ],
			"SV_35" : [ 7.2, 3.0, 5.8, 1.6 ],
			"SV_36" : [ 7.9, 3.8, 6.4, 2.0 ],
			"SV_37" : [ 6.3, 2.8, 5.1, 1.5 ],
			"SV_38" : [ 6.1, 2.6, 5.6, 1.4 ],
			"SV_39" : [ 6.4, 3.1, 5.5, 1.8 ],
			"SV_40" : [ 6.0, 3.0, 4.8, 1.8 ],
			"SV_41" : [ 6.9, 3.1, 5.1, 2.3 ],
			"SV_42" : [ 5.8, 2.7, 5.1, 1.9 ],
			"SV_43" : [ 6.3, 2.5, 5.0, 1.9 ],
			"SV_44" : [ 6.5, 3.0, 5.2, 2.0 ],
			"SV_45" : [ 5.9, 3.0, 5.1, 1.8 ]
		},
		"SupportVectorsCoefs" : 	{
			"SV_coef_0" : [ 2.0, 2.0, 1.106046, 0.0, -0.0, -0.0, -0.0, -0.0, -2.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -1.106046, -2.0, -0.0, -1.841305, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.412678, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0 ],
			"SV_coef_1" : [ 0.0, 0.0, 0.670836, 1.583146, 2.0, 2.0, 2.0, 2.0, 0.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 0.247438, 2.0, 0.0, 0.0, -2.0, -2.0, -2.0, -1.731109, -2.0, -2.0, -2.0, -2.0, -2.0, -1.774368, -0.0, -2.0, -2.0, -0.741961, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0 ]
		},
		"classes" : 3,
		"nSV" : [ 4, 22, 20 ],
		"n_iter" : [ 10, 8, 47 ],
		"probA" : [ -3.216073, -3.484164, -3.208125 ],
		"probB" : [ -0.034475, -0.050869, 0.070338 ],
		"rho" : [ -0.140946, 0.121082, 0.266362 ]
	}
}
BEAUTIFIED_JSON_END
RELOADING_MODEL_FROM_JSON_END ('iris_medium', 'SVC')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
[[0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [0.000e+00 0.000e+00 1.000e+00]
 [2.410e-02 1.600e-03 9.743e-01]
 [2.540e-02 1.600e-03 9.730e-01]
 [1.650e-02 8.000e-04 9.826e-01]
 [4.350e-02 4.000e-03 9.525e-01]
 [1.870e-02 9.000e-04 9.804e-01]
 [2.270e-02 1.200e-03 9.761e-01]
 [1.850e-02 9.000e-04 9.806e-01]
 [1.872e-01 7.210e-02 7.408e-01]
 [2.300e-02 1.300e-03 9.757e-01]
 [5.800e-02 7.100e-03 9.348e-01]
 [1.201e-01 3.020e-02 8.497e-01]
 [3.520e-02 2.800e-03 9.620e-01]
 [5.420e-02 6.200e-03 9.396e-01]
 [1.680e-02 7.000e-04 9.825e-01]
 [1.124e-01 2.670e-02 8.608e-01]
 [3.180e-02 2.500e-03 9.657e-01]
 [2.140e-02 1.100e-03 9.776e-01]
 [5.530e-02 6.600e-03 9.381e-01]
 [1.700e-02 7.000e-04 9.823e-01]
 [6.640e-02 9.300e-03 9.243e-01]
 [5.100e-03 9.947e-01 2.000e-04]
 [5.340e-02 6.200e-03 9.405e-01]
 [3.500e-03 9.964e-01 1.000e-04]
 [1.890e-02 9.000e-04 9.803e-01]
 [3.460e-02 2.800e-03 9.626e-01]
 [2.980e-02 2.100e-03 9.681e-01]
 [1.700e-02 8.000e-04 9.822e-01]
 [9.700e-03 4.597e-01 5.307e-01]
 [2.070e-02 1.000e-03 9.783e-01]
 [1.432e-01 4.270e-02 8.141e-01]
 [7.530e-02 1.200e-02 9.127e-01]
 [9.710e-02 1.980e-02 8.831e-01]
 [6.600e-02 9.300e-03 9.247e-01]
 [7.300e-03 2.018e-01 7.910e-01]
 [2.160e-02 1.100e-03 9.774e-01]
 [2.530e-02 1.600e-03 9.730e-01]
 [1.960e-02 1.000e-03 9.793e-01]
 [2.370e-02 1.300e-03 9.750e-01]
 [4.980e-02 5.400e-03 9.448e-01]
 [4.700e-02 4.700e-03 9.483e-01]
 [2.680e-02 1.600e-03 9.717e-01]
 [2.030e-02 1.000e-03 9.787e-01]
 [5.290e-02 6.000e-03 9.411e-01]
 [1.789e-01 6.620e-02 7.548e-01]
 [3.590e-02 2.800e-03 9.614e-01]
 [4.530e-02 4.500e-03 9.502e-01]
 [3.940e-02 3.400e-03 9.572e-01]
 [3.390e-02 2.600e-03 9.635e-01]
 [3.843e-01 3.222e-01 2.935e-01]
 [4.470e-02 4.300e-03 9.510e-01]
 [5.800e-03 6.000e-04 9.936e-01]
 [7.300e-03 5.080e-02 9.420e-01]
 [7.800e-03 3.300e-03 9.889e-01]
 [6.000e-03 1.480e-02 9.792e-01]
 [5.700e-03 1.800e-03 9.925e-01]
 [1.190e-02 1.800e-03 9.863e-01]
 [1.020e-02 4.154e-01 5.744e-01]
 [9.100e-03 2.700e-03 9.882e-01]
 [6.200e-03 4.900e-03 9.889e-01]
 [1.020e-02 1.900e-03 9.879e-01]
 [9.200e-03 1.336e-01 8.571e-01]
 [6.900e-03 3.260e-02 9.605e-01]
 [7.400e-03 1.290e-02 9.797e-01]
 [6.900e-03 3.610e-02 9.570e-01]
 [6.200e-03 7.500e-03 9.863e-01]
 [7.300e-03 1.410e-02 9.786e-01]
 [7.100e-03 3.350e-02 9.593e-01]
 [1.700e-02 3.700e-03 9.793e-01]
 [1.480e-02 1.900e-03 9.833e-01]
 [7.500e-03 2.203e-01 7.722e-01]
 [7.600e-03 3.900e-03 9.885e-01]
 [7.800e-03 8.690e-02 9.053e-01]
 [1.320e-02 2.000e-03 9.849e-01]
 [8.200e-03 2.786e-01 7.132e-01]
 [7.300e-03 7.800e-03 9.849e-01]
 [9.100e-03 1.000e-02 9.809e-01]
 [8.200e-03 4.141e-01 5.777e-01]
 [8.400e-03 3.502e-01 6.414e-01]
 [5.600e-03 4.000e-03 9.904e-01]
 [9.500e-03 3.660e-02 9.539e-01]
 [9.300e-03 3.700e-03 9.870e-01]
 [1.830e-02 9.000e-03 9.727e-01]
 [5.500e-03 2.700e-03 9.918e-01]
 [7.700e-03 3.869e-01 6.054e-01]
 [6.600e-03 4.270e-02 9.507e-01]
 [1.170e-02 2.600e-03 9.857e-01]
 [6.600e-03 3.300e-03 9.901e-01]
 [7.200e-03 3.620e-02 9.566e-01]
 [8.300e-03 4.526e-01 5.390e-01]
 [8.500e-03 2.660e-02 9.649e-01]
 [6.800e-03 2.800e-03 9.904e-01]
 [1.020e-02 4.870e-02 9.412e-01]
 [7.300e-03 5.080e-02 9.420e-01]
 [6.900e-03 1.700e-03 9.915e-01]
 [7.200e-03 1.900e-03 9.909e-01]
 [8.100e-03 2.150e-02 9.703e-01]
 [7.700e-03 9.380e-02 8.986e-01]
 [8.600e-03 6.120e-02 9.302e-01]
 [7.200e-03 1.060e-02 9.822e-01]
 [7.600e-03 1.355e-01 8.569e-01]]
(150, 3)
(150, 3) float32
MODEL_PERFS {'class_name': 'mllite.SVC', 'model_name': 'SVC', 'options': '{"C" : 2}', 'dataset': 'iris_medium', 'size': 150, 'accuracy': 0.9866666666666667, 'auc': 0.32780000000000004}
WRITING_PERF_CODE 'logs/auto_tests/classification/SVC/mllite.SVC_iris_medium_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.SVC', 'model_name': 'SVC', 'options': '{"C" : 2}', 'dataset': 'iris_medium', 'training_time_in_sec': 0.045, 'prediction_time_in_sec': 0.001}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 0 4
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 2 4
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 3 4
{
   "Contributions" : {
      "X_0" : [ -0.002620, 0.003559, -0.000939 ],
      "X_1" : [ -0.002372, 0.001654, 0.000717 ],
      "X_2" : [ -0.007926, -0.005099, 0.013025 ],
      "X_3" : [ -0.000253, -0.001131, 0.001385 ]   
   },
   "Most_Contributive_Features_By_Class" : {
      "class_0" : [ 2, 0, 1, 3 ],
      "class_1" : [ 2, 0, 1, 3 ],
      "class_2" : [ 2, 3, 0, 1 ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/classification/SVC/mllite.SVC_iris_medium_option_1_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/classification/SVC/mllite.SVC_iris_medium_option_1_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('iris_medium', 'SVC', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "iris_medium" AS "ADS" 
 ),
"SV_data" AS
 ( SELECT 
   "Values"."sv_idx" AS "sv_idx",
   CAST("Values"."sv_0" AS FLOAT) AS "sv_0",
   CAST("Values"."sv_1" AS FLOAT) AS "sv_1",
   CAST("Values"."sv_2" AS FLOAT) AS "sv_2",
   CAST("Values"."sv_3" AS FLOAT) AS "sv_3"
  FROM
  (
     SELECT 0 AS "sv_idx", 5.100000 AS "sv_0", 3.300000 AS "sv_1", 1.700000 AS "sv_2", 0.500000 AS "sv_3"
     UNION ALL
     SELECT 1 AS "sv_idx", 4.800000 AS "sv_0", 3.400000 AS "sv_1", 1.900000 AS "sv_2", 0.200000 AS "sv_3"
     UNION ALL
     SELECT 2 AS "sv_idx", 4.500000 AS "sv_0", 2.300000 AS "sv_1", 1.300000 AS "sv_2", 0.300000 AS "sv_3"
     UNION ALL
     SELECT 3 AS "sv_idx", 5.100000 AS "sv_0", 3.800000 AS "sv_1", 1.900000 AS "sv_2", 0.400000 AS "sv_3"
     UNION ALL
     SELECT 4 AS "sv_idx", 6.900000 AS "sv_0", 3.1
SQL_OUT_PUT_FIRST_LINES_END ('iris_medium', 'SVC', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('iris_medium', 'SVC', 'duckdb')
roba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1", t."max_idx_2" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('iris_medium', 'SVC', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 150 entries, 0 to 149
Data columns (total 4 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     150 non-null    float32
 1   X_1     150 non-null    float32
 2   X_2     150 non-null    float32
 3   X_3     150 non-null    float32
dtypes: float32(4)
memory usage: 3.5 KB
       X_0  X_1  X_2  X_3
index                    
0      5.1  3.5  1.4  0.2
1      4.9  3.0  1.4  0.2
2      4.7  3.2  1.3  0.2
3      4.6  3.1  1.5  0.2
4      5.0  3.6  1.4  0.2
...    ...  ...  ...  ...
145    6.7  3.0  5.2  2.3
146    6.3  2.5  5.0  1.9
147    6.5  3.0  5.2  2.0
148    6.2  3.4  5.4  2.3
149    5.9  3.0  5.1  1.8

[150 rows x 4 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 150 entries, 0 to 149
Data columns (total 12 columns):
 #   Column         Non-Null Count  Dtype 
---  ------         --------------  ----- 
 0   index          150 non-null    int64 
 1   Score_0        150 non-null    int64 
 2   Proba_0        0 non-null      object
 3   LogProba_0     0 non-null      object
 4   Score_1        150 non-null    int64 
 5   Proba_1        0 non-null      object
 6   LogProba_1     0 non-null      object
 7   Score_2        150 non-null    int64 
 8   Proba_2        0 non-null      object
 9   LogProba_2     0 non-null      object
 10  Decision       0 non-null      object
 11  DecisionProba  0 non-null      object
dtypes: int64(4), object(8)
memory usage: 14.2+ KB
     index  Score_0 Proba_0  ... LogProba_2  Decision DecisionProba
0        0        2    None  ...       None      None          None
1        1        2    None  ...       None      None          None
2        2        2    None  ...       None      None          None
3        3        2    None  ...       None      None          None
4        4        2    None  ...       None      None          None
..     ...      ...     ...  ...        ...       ...           ...
145    145        2    None  ...       None      None          None
146    146        2    None  ...       None      None          None
147    147        2    None  ...       None      None          None
148    148        2    None  ...       None      None          None
149    149        2    None  ...       None      None          None

[150 rows x 12 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Decision',
       'DecisionProba'],
      dtype='object')
     index  Score_0 SQL_Proba_0  ... Py_Proba_1  Py_Proba_2 Py_Decision
134    134        2        None  ...   0.042698    0.950652           2
135    135        2        None  ...   0.002608    0.985706           2
136    136        2        None  ...   0.003255    0.990096           2
137    137        2        None  ...   0.036195    0.956644           2
138    138        2        None  ...   0.452638    0.539039           2
139    139        2        None  ...   0.026646    0.964892           2
140    140        2        None  ...   0.002818    0.990377           2
141    141        2        None  ...   0.048685    0.941152           2
142    142        2        None  ...   0.050777    0.941963           2
143    143        2        None  ...   0.001666    0.991453           2
144    144        2        None  ...   0.001933    0.990910           2
145    145        2        None  ...   0.021512    0.970340           2
146    146        2        None  ...   0.093765    0.898584           2
147    147        2        None  ...   0.061189    0.930245           2
148    148        2        None  ...   0.010624    0.982193           2
149    149        2        None  ...   0.135496    0.856886           2

[16 rows x 16 columns]
MLLITE_CLASS_SQL_ERROR ('iris_medium', 'SVC', 'duckdb') ('Py_Proba_0', 'SQL_Proba_0') nan
     Py_Proba_0 SQL_Proba_0 SQL_Error_0
134    0.006650        None         NaN
135    0.011686        None         NaN
136    0.006649        None         NaN
137    0.007161        None         NaN
138    0.008322        None         NaN
139    0.008462        None         NaN
140    0.006805        None         NaN
141    0.010163        None         NaN
142    0.007260        None         NaN
143    0.006881        None         NaN
144    0.007157        None         NaN
145    0.008147        None         NaN
146    0.007651        None         NaN
147    0.008566        None         NaN
148    0.007183        None         NaN
149    0.007618        None         NaN
MLLITE_CLASS_SQL_ERROR ('iris_medium', 'SVC', 'duckdb') ('Py_Proba_1', 'SQL_Proba_1') nan
     Py_Proba_1 SQL_Proba_1 SQL_Error_1
134    0.042698        None         NaN
135    0.002608        None         NaN
136    0.003255        None         NaN
137    0.036195        None         NaN
138    0.452638        None         NaN
139    0.026646        None         NaN
140    0.002818        None         NaN
141    0.048685        None         NaN
142    0.050777        None         NaN
143    0.001666        None         NaN
144    0.001933        None         NaN
145    0.021512        None         NaN
146    0.093765        None         NaN
147    0.061189        None         NaN
148    0.010624        None         NaN
149    0.135496        None         NaN
MLLITE_CLASS_SQL_ERROR ('iris_medium', 'SVC', 'duckdb') ('Py_Proba_2', 'SQL_Proba_2') nan
     Py_Proba_2 SQL_Proba_2 SQL_Error_2
134    0.950652        None         NaN
135    0.985706        None         NaN
136    0.990096        None         NaN
137    0.956644        None         NaN
138    0.539039        None         NaN
139    0.964892        None         NaN
140    0.990377        None         NaN
141    0.941152        None         NaN
142    0.941963        None         NaN
143    0.991453        None         NaN
144    0.990910        None         NaN
145    0.970340        None         NaN
146    0.898584        None         NaN
147    0.930245        None         NaN
148    0.982193        None         NaN
149    0.856886        None         NaN
MLLITE_CLASS_SQL_EXECUTION_STATUS ('iris_medium', 'SVC', 'duckdb', 'Success')
     Py_Decision SQL_Decision
134            2         None
135            2         None
136            2         None
137            2         None
138            2         None
139            2         None
140            2         None
141            2         None
142            2         None
143            2         None
144            2         None
145            2         None
146            2         None
147            2         None
148            2         None
149            2         None
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/SVC/mllite.SVC_iris_medium_option_1_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('iris_medium', 'SVC', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "iris_medium" AS "ADS" 
 ),
"SV_data" AS
 ( SELECT 
   "Values"."sv_idx" AS "sv_idx",
   CAST("Values"."sv_0" AS FLOAT) AS "sv_0",
   CAST("Values"."sv_1" AS FLOAT) AS "sv_1",
   CAST("Values"."sv_2" AS FLOAT) AS "sv_2",
   CAST("Values"."sv_3" AS FLOAT) AS "sv_3"
  FROM
  (
     SELECT 0 AS "sv_idx", 5.100000 AS "sv_0", 3.300000 AS "sv_1", 1.700000 AS "sv_2", 0.500000 AS "sv_3"
     UNION ALL
     SELECT 1 AS "sv_idx", 4.800000 AS "sv_0", 3.400000 AS "sv_1", 1.900000 AS "sv_2", 0.200000 AS "sv_3"
     UNION ALL
     SELECT 2 AS "sv_idx", 4.500000 AS "sv_0", 2.300000 AS "sv_1", 1.300000 AS "sv_2", 0.300000 AS "sv_3"
     UNION ALL
     SELECT 3 AS "sv_idx", 5.100000 AS "sv_0", 3.800000 AS "sv_1", 1.900000 AS "sv_2", 0.400000 AS "sv_3"
     UNION ALL
     SELECT 4 AS "sv_idx", 6.900000 AS "sv_0", 3.1
SQL_OUT_PUT_FIRST_LINES_END ('iris_medium', 'SVC', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('iris_medium', 'SVC', 'sqlite')
roba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1", t."max_idx_2" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('iris_medium', 'SVC', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 150 entries, 0 to 149
Data columns (total 4 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     150 non-null    float32
 1   X_1     150 non-null    float32
 2   X_2     150 non-null    float32
 3   X_3     150 non-null    float32
dtypes: float32(4)
memory usage: 3.5 KB
       X_0  X_1  X_2  X_3
index                    
0      5.1  3.5  1.4  0.2
1      4.9  3.0  1.4  0.2
2      4.7  3.2  1.3  0.2
3      4.6  3.1  1.5  0.2
4      5.0  3.6  1.4  0.2
...    ...  ...  ...  ...
145    6.7  3.0  5.2  2.3
146    6.3  2.5  5.0  1.9
147    6.5  3.0  5.2  2.0
148    6.2  3.4  5.4  2.3
149    5.9  3.0  5.1  1.8

[150 rows x 4 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
MODEL_SQL_EXECUTION_FAILED ('iris_medium', 'SVC', 'sqlite', '(sqlite3.OperationalError) no such function: ANY_VALUE')
MLLITE_CLASS_SQL_EXECUTION_STATUS ('iris_medium', 'SVC', 'sqlite', 'sql_execution_failed')
