           X_0       X_1       X_2  ...       X_8       X_9  target
0    -1.104915  0.852920  0.507679  ... -1.472978 -1.793182       0
1     1.845877 -1.230132  0.868872  ...  0.362403 -0.619445       3
2    -2.837179  1.477195  0.565303  ...  1.102744  1.483759       1
3    -0.817915  0.349464 -0.778337  ... -0.344547 -0.450057       3
4     2.867865 -1.912016  0.005109  ... -0.616466 -0.572385       0
...        ...       ...       ...  ...       ...       ...     ...
1019 -2.095001  1.294078 -1.552071  ... -3.931552 -1.074179       2
1020 -1.743265  0.891375  1.671782  ... -0.360963  0.011059       3
1021 -1.760887  1.921145  0.350258  ...  2.763857 -0.710372       3
1022 -1.134328  1.876722  2.781903  ...  2.604618  0.626265       3
1023 -0.770972  1.261518  1.808595  ... -1.336243  0.434694       2

[1024 rows x 11 columns]
MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
('OPERATION_START', 'TRAINING')
[[-1.10491490e+00  8.52919877e-01  5.07678568e-01 -3.81407499e-01
  -6.32111073e-01  6.43055558e-01  1.64998901e+00  4.79870588e-01
  -1.47297835e+00 -1.79318225e+00]
 [ 1.84587657e+00 -1.23013234e+00  8.68871808e-01 -1.36471283e+00
   1.38019109e+00 -6.07883871e-01 -4.83270741e+00 -3.81645823e+00
   3.62403333e-01 -6.19445145e-01]
 [-2.83717918e+00  1.47719467e+00  5.65303147e-01  1.38211691e+00
   1.26869273e+00 -1.04379274e-01  2.91604996e-01 -1.22561082e-02
   1.10274434e+00  1.48375893e+00]
 [-8.17914605e-01  3.49463820e-01 -7.78337240e-01  3.11694108e-02
   1.09836125e+00 -2.34135496e-03 -4.48572785e-01 -1.05435896e+00
  -3.44547480e-01 -4.50056911e-01]
 [ 2.86786485e+00 -1.91201603e+00  5.10907173e-03 -8.97717237e-01
  -4.13689524e-01  1.13818514e+00 -1.69676435e+00 -1.53572273e+00
  -6.16465807e-01 -5.72385132e-01]] [0 3 1 3 0]
MLLITE_FIT_USING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 6 6
('OPERATION_END_ELAPSED', 0.014, 'TRAINING')
{ ,   }
{ ,   }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_il8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 1024, "dataset_features" : 10 },
	"classes" : [ 0, 1, 2, 3 ],
	"equations" : {
		"class_0" : {
			"intercept" : -0.476820,
			"coeffs" : [ -0.080516, -0.023581, 0.019267, 0.120748, -0.023388, -0.024345, -0.008040, -0.117158, 0.013197, -0.034930 ]
		},
		"class_1" : {
			"intercept" : -0.468939,
			"coeffs" : [ 0.083195, 0.035626, 0.001254, -0.049244, 0.027638, -0.010272, -0.011532, 0.242909, 0.184741, 0.040190 ]
		},
		"class_2" : {
			"intercept" : -0.549862,
			"coeffs" : [ 0.070768, 0.013034, -0.009926, -0.169575, -0.036088, -0.002820, 0.041183, 0.022116, -0.193116, -0.008953 ]
		},
		"class_3" : {
			"intercept" : -0.504380,
			"coeffs" : [ -0.073481, -0.025128, -0.010595, 0.098029, 0.031839, 0.037437, -0.021588, -0.147879, -0.004793, 0.003692 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_10_original.json'

MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
MLLITE_RELOADING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_il8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 1024, "dataset_features" : 10 },
	"classes" : [ 0, 1, 2, 3 ],
	"equations" : {
		"class_0" : {
			"intercept" : -0.476820,
			"coeffs" : [ -0.080516, -0.023581, 0.019267, 0.120748, -0.023388, -0.024345, -0.008040, -0.117158, 0.013197, -0.034930 ]
		},
		"class_1" : {
			"intercept" : -0.468939,
			"coeffs" : [ 0.083195, 0.035626, 0.001254, -0.049244, 0.027638, -0.010272, -0.011532, 0.242909, 0.184741, 0.040190 ]
		},
		"class_2" : {
			"intercept" : -0.549862,
			"coeffs" : [ 0.070768, 0.013034, -0.009926, -0.169575, -0.036088, -0.002820, 0.041183, 0.022116, -0.193116, -0.008953 ]
		},
		"class_3" : {
			"intercept" : -0.504380,
			"coeffs" : [ -0.073481, -0.025128, -0.010595, 0.098029, 0.031839, 0.037437, -0.021588, -0.147879, -0.004793, 0.003692 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1, 2, 3 ],
	"dataset" : 	{
		"dataset_features" : 10,
		"dataset_rows" : 1024
	},
	"equations" : 	{
		"class_0" : 	{
			"coeffs" : [ -0.080516, -0.023581, 0.019267, 0.120748, -0.023388, -0.024345, -0.00804, -0.117158, 0.013197, -0.03493 ],
			"intercept" : -0.47682
		},
		"class_1" : 	{
			"coeffs" : [ 0.083195, 0.035626, 0.001254, -0.049244, 0.027638, -0.010272, -0.011532, 0.242909, 0.184741, 0.04019 ],
			"intercept" : -0.468939
		},
		"class_2" : 	{
			"coeffs" : [ 0.070768, 0.013034, -0.009926, -0.169575, -0.036088, -0.00282, 0.041183, 0.022116, -0.193116, -0.008953 ],
			"intercept" : -0.549862
		},
		"class_3" : 	{
			"coeffs" : [ -0.073481, -0.025128, -0.010595, 0.098029, 0.031839, 0.037437, -0.021588, -0.147879, -0.004793, 0.003692 ],
			"intercept" : -0.50438
		}
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_il8", "version" : "2024-W12" },
	"options" :  { "alpha" : 1.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0.2506 0.1837 0.3431 0.2226]
 [0.2996 0.1312 0.2093 0.3599]
 [0.3205 0.2482 0.111  0.3203]
 ...
 [0.3299 0.2658 0.1227 0.2816]
 [0.2209 0.4219 0.1387 0.2185]
 [0.2123 0.1716 0.3806 0.2355]]
(1024, 4)
(1024, 4) float32
MODEL_PERFS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'FourClass_10_original', 'size': 1024, 'accuracy': 0.5771484375, 'auc': 0.8119532588526955}
WRITING_PERF_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_10_original.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'FourClass_10_original', 'training_time_in_sec': 0.014, 'prediction_time_in_sec': 0.0}
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_10_original.sql'



SQL_OUT_PUT_FIRST_LINES_START
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT model_input."index" AS "index",
   -0.476820 + -0.080516 * X_0 + -0.023581 * X_1 + 0.019267 * X_2 + 0.120748 * X_3 + -0.023388 * X_4 + -0.024345 * X_5 + -0.008040 * X_6 + -0.117158 * X_7 + 0.013197 * X_8 + -0.034930 * X_9 AS "Score_0", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "LogProba_0",
   -0.468939 + 0.083195 * X_0 + 0.035626 * X_1 + 0.001254 * X_2 + -0.049244 * X_3 + 0.027638 * X_4 + -0.010272 * X_5 + -0.011532 * X_6 + 0.242909 * X_7 + 0.184741 * X_8 + 0.040190 * X_9 AS "Score_1", CAST(NULL AS FLO
SQL_OUT_PUT_FIRST_LINES_END
SQL_OUT_PUT_LAST_LINES_START
ore_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."Score_3" AS "Score_3",
  arg_max_cte."Proba_3" AS "Proba_3",
  CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN LN( arg_max_cte."Proba_3" ) ELSE -1.79769313486231e+308 END AS "LogProba_3",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 1024 entries, 0 to 1023
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     1024 non-null   float32
 1   X_1     1024 non-null   float32
 2   X_2     1024 non-null   float32
 3   X_3     1024 non-null   float32
 4   X_4     1024 non-null   float32
 5   X_5     1024 non-null   float32
 6   X_6     1024 non-null   float32
 7   X_7     1024 non-null   float32
 8   X_8     1024 non-null   float32
 9   X_9     1024 non-null   float32
dtypes: float32(10)
memory usage: 48.0 KB
            X_0       X_1       X_2  ...       X_7       X_8       X_9
index                                ...                              
0     -1.104915  0.852920  0.507679  ...  0.479871 -1.472978 -1.793182
1      1.845877 -1.230132  0.868872  ... -3.816458  0.362403 -0.619445
2     -2.837179  1.477195  0.565303  ... -0.012256  1.102744  1.483759
3     -0.817915  0.349464 -0.778337  ... -1.054359 -0.344547 -0.450057
4      2.867865 -1.912016  0.005109  ... -1.535723 -0.616466 -0.572385
...         ...       ...       ...  ...       ...       ...       ...
1019  -2.095001  1.294078 -1.552071  ...  1.112683 -3.931551 -1.074179
1020  -1.743265  0.891375  1.671782  ...  0.265348 -0.360963  0.011059
1021  -1.760887  1.921145  0.350258  ... -1.772515  2.763857 -0.710372
1022  -1.134328  1.876722  2.781903  ... -0.109672  2.604619  0.626265
1023  -0.770972  1.261518  1.808595  ... -0.898929 -1.336243  0.434694

[1024 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 1024 entries, 0 to 1023
Data columns (total 15 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          1024 non-null   int64  
 1   Score_0        1024 non-null   float64
 2   Proba_0        1024 non-null   float64
 3   LogProba_0     1024 non-null   float64
 4   Score_1        1024 non-null   float64
 5   Proba_1        1024 non-null   float64
 6   LogProba_1     1024 non-null   float64
 7   Score_2        1024 non-null   float64
 8   Proba_2        1024 non-null   float64
 9   LogProba_2     1024 non-null   float64
 10  Score_3        1024 non-null   float64
 11  Proba_3        1024 non-null   float64
 12  LogProba_3     1024 non-null   float64
 13  Decision       1024 non-null   int64  
 14  DecisionProba  1024 non-null   float64
dtypes: float64(13), int64(2)
memory usage: 120.1 KB
      index   Score_0   Proba_0  ...  LogProba_3  Decision  DecisionProba
0         0 -0.471403  0.250574  ...   -1.502182         2       0.343069
1         1 -0.249558  0.299637  ...   -1.021854         3       0.359927
2         2 -0.170750  0.320517  ...   -1.138396         0       0.320517
3         3 -0.317763  0.292020  ...   -1.154453         3       0.315230
4         4 -0.583553  0.224829  ...   -1.369978         2       0.334051
...     ...       ...       ...  ...         ...       ...            ...
1019   1019 -0.638527  0.187257  ...   -1.594224         2       0.496283
1020   1020 -0.311401  0.298064  ...   -1.271115         0       0.298064
1021   1021 -0.159013  0.329945  ...   -1.267372         0       0.329945
1022   1022 -0.542809  0.220882  ...   -1.520896         1       0.421865
1023   1023 -0.618575  0.212318  ...   -1.446076         2       0.380593

[1024 rows x 15 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Score_3', 'Proba_3',
       'LogProba_3', 'Decision', 'DecisionProba'],
      dtype='object')
      index   Score_0  SQL_Proba_0  ...  Py_Proba_2  Py_Proba_3  Py_Decision
1008   1008 -0.197743     0.324381  ...    0.215762    0.305082            0
1009   1009 -0.830411     0.168551  ...    0.249344    0.178341            1
1010   1010 -0.213130     0.322590  ...    0.161430    0.281377            0
1011   1011 -0.926945     0.143458  ...    0.407737    0.122372            2
1012   1012 -0.720362     0.186861  ...    0.207035    0.177545            1
1013   1013 -1.385881     0.070460  ...    0.519115    0.068082            2
1014   1014 -0.317199     0.278570  ...    0.112106    0.302675            1
1015   1015 -0.580987     0.217310  ...    0.410356    0.195281            2
1016   1016 -0.212924     0.288328  ...    0.285953    0.349690            3
1017   1017 -0.414454     0.245776  ...    0.410315    0.234169            2
1018   1018 -0.545772     0.234769  ...    0.333491    0.217750            2
1019   1019 -0.638527     0.187257  ...    0.496282    0.203066            2
1020   1020 -0.311401     0.298064  ...    0.208970    0.280519            0
1021   1021 -0.159013     0.329945  ...    0.122707    0.281571            0
1022   1022 -0.542809     0.220882  ...    0.138737    0.218516            1
1023   1023 -0.618575     0.212318  ...    0.380593    0.235492            2

[16 rows x 20 columns]
MLLITE_SQL_ERROR ('Py_Proba_0', 'SQL_Proba_0') 1.256369834315552e-06
      Py_Proba_0  SQL_Proba_0
1008    0.324381     0.324381
1009    0.168551     0.168551
1010    0.322589     0.322590
1011    0.143459     0.143458
1012    0.186861     0.186861
1013    0.070460     0.070460
1014    0.278570     0.278570
1015    0.217310     0.217310
1016    0.288328     0.288328
1017    0.245776     0.245776
1018    0.234769     0.234769
1019    0.187257     0.187257
1020    0.298064     0.298064
1021    0.329945     0.329945
1022    0.220882     0.220882
1023    0.212318     0.212318
MLLITE_SQL_ERROR ('Py_Proba_1', 'SQL_Proba_1') 1.125424178608946e-06
      Py_Proba_1  SQL_Proba_1
1008    0.154775     0.154776
1009    0.403764     0.403764
1010    0.234605     0.234605
1011    0.326433     0.326433
1012    0.428559     0.428559
1013    0.342343     0.342343
1014    0.306649     0.306649
1015    0.177054     0.177054
1016    0.076030     0.076030
1017    0.109739     0.109739
1018    0.213990     0.213990
1019    0.113394     0.113394
1020    0.212447     0.212448
1021    0.265777     0.265777
1022    0.421865     0.421865
1023    0.171596     0.171597
MLLITE_SQL_ERROR ('Py_Proba_2', 'SQL_Proba_2') 1.2434601609468832e-06
      Py_Proba_2  SQL_Proba_2
1008    0.215762     0.215762
1009    0.249344     0.249344
1010    0.161430     0.161429
1011    0.407737     0.407737
1012    0.207035     0.207035
1013    0.519115     0.519116
1014    0.112106     0.112106
1015    0.410356     0.410356
1016    0.285953     0.285952
1017    0.410315     0.410315
1018    0.333491     0.333491
1019    0.496282     0.496283
1020    0.208970     0.208970
1021    0.122707     0.122707
1022    0.138737     0.138737
1023    0.380593     0.380593
MLLITE_SQL_ERROR ('Py_Proba_3', 'SQL_Proba_3') 6.581602979900738e-07
      Py_Proba_3  SQL_Proba_3
1008    0.305082     0.305082
1009    0.178341     0.178341
1010    0.281377     0.281376
1011    0.122372     0.122372
1012    0.177545     0.177545
1013    0.068082     0.068082
1014    0.302675     0.302675
1015    0.195281     0.195281
1016    0.349690     0.349690
1017    0.234169     0.234169
1018    0.217750     0.217750
1019    0.203066     0.203066
1020    0.280519     0.280519
1021    0.281571     0.281571
1022    0.218516     0.218516
1023    0.235492     0.235493
      Py_Decision  SQL_Decision
1008            0             0
1009            1             1
1010            0             0
1011            2             2
1012            1             1
1013            2             2
1014            1             1
1015            2             2
1016            3             3
1017            2             2
1018            2             2
1019            2             2
1020            0             0
1021            0             0
1022            1             1
1023            2             2
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
