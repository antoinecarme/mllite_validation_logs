READING_CSV FourClass_100_tiny ['data/tiny/FourClass_100_tiny.csv']
         X_0       X_1       X_2  ...      X_98      X_99  target
0   0.935563  2.247500 -1.070940  ... -0.177791 -0.249523       3
1   0.293314 -1.260450 -3.448018  ...  0.164190  2.205145       2
2   0.596661  1.589408 -0.810968  ...  0.026429 -0.565740       0
3   1.456436 -2.080544  0.694122  ...  1.059889  0.328791       1
4  -1.193096 -0.499944  0.528137  ...  1.236806  1.097111       2
5   0.004588  0.415182  1.122491  ... -1.470151 -1.415749       2
6  -0.566579  0.216205  0.537669  ...  0.253076 -0.257734       0
7   0.094549 -0.840780 -0.040313  ... -2.097391 -1.175138       3
8  -1.035038  0.028587  2.388027  ... -0.100060  0.578063       0
9   0.104933  1.209696  0.297718  ...  0.305889  1.176062       0
10  1.684619 -0.394139  0.273230  ...  0.335744 -0.537372       3
11  0.833314  0.023464 -1.279124  ... -0.350409 -0.664509       0
12  0.236087  1.340066 -0.531894  ...  0.078043 -0.185077       1
13 -1.152497 -1.187080 -1.877030  ...  0.388650 -0.153948       3
14  1.760033 -1.403882 -1.183618  ... -2.253838 -1.221147       1
15  1.879904 -0.295988  0.027052  ... -0.809065  0.313258       2

[16 rows x 101 columns]
MLLITE_MODEL_SET_OPTIONS DecisionTreeClassifier {"max_depth" : 6, "max_leaf_nodes" : 32}
MLLITE_MODEL_OPTIONS_DEFAULT DecisionTreeClassifier { "max_leaf_nodes" : 64}
MLLITE_MODEL_OPTIONS_AFTER_SETTING DecisionTreeClassifier { "max_depth" : 6, "max_leaf_nodes" : 32,  "max_leaf_nodes" : 64 }
MLLITE_MODEL_JSON_AFTER_SETTING DecisionTreeClassifier None
('OPERATION_START', 'TRAINING')
[[ 9.35562551e-01  2.24750018e+00 -1.07094014e+00  5.08270264e-01
   1.43985808e-01 -4.33900356e-01  2.20938280e-01 -6.05712712e-01
   1.04623568e+00 -5.11191189e-01 -1.49217200e+00  5.78792810e-01
  -5.20725727e-01  8.71259570e-01 -1.55619383e+00  1.52518547e+00
  -7.36531466e-02 -1.17264986e+00 -6.90029681e-01 -1.00071573e+00
   3.37273180e-01 -5.52994728e-01  4.75280344e-01 -1.40307999e+00
   9.60445762e-01 -4.87094879e-01 -7.87123621e-01  4.54730177e+00
   1.16833878e+00 -5.16704082e-01  1.26904652e-01 -2.69020295e+00
  -1.60714972e+00 -1.60194361e+00  1.45940697e+00 -2.07469568e-01
  -7.90602565e-01 -2.78487932e-02 -1.21024287e+00  5.58430433e-01
  -1.63653836e-01  6.32869065e-01 -1.25206620e-01 -3.34407538e-01
   6.30639970e-01  1.33564019e+00  3.52602506e+00  7.06132531e-01
   1.95425427e+00 -2.52463102e-01 -4.60086882e-01 -1.19924438e+00
   6.41360343e-01 -2.27416492e+00 -1.08663130e+00 -1.79455566e+00
  -4.53341693e-01 -5.69205701e-01 -2.71141529e-01  6.19319558e-01
  -2.58924603e+00  9.84492600e-01  2.16141731e-01  8.48047435e-01
  -2.20009804e-01 -3.31227589e+00  1.16689853e-01  1.42259753e+00
   1.79406500e+00 -1.90514177e-01  7.55192041e-01  1.54058591e-01
   7.11078942e-01 -1.32698989e+00 -2.07093787e+00  9.34237540e-01
  -4.60939616e-01 -8.04052234e-01 -5.02367616e-02 -3.75201797e+00
   6.09228611e-02 -1.00079381e+00 -9.43618715e-01  2.28104413e-01
  -9.84539762e-02 -8.51119459e-02  8.69812146e-02 -1.41765642e+00
   2.71681398e-01 -8.74418080e-01 -2.53257823e+00 -5.78377783e-01
  -7.53983378e-01  9.52363431e-01 -9.63835180e-01 -6.48602486e-01
  -1.77499366e+00  6.77245975e-01 -1.77790895e-01 -2.49523029e-01]
 [ 2.93314219e-01 -1.26045048e+00 -3.44801831e+00  2.69382149e-01
   1.54421818e+00 -6.00797161e-02  2.80081749e-01 -3.49374235e-01
  -1.71003997e+00  8.22554767e-01  7.01598311e-03  7.73456335e-01
  -1.02132368e+00 -1.34428933e-01 -2.03461379e-01  1.28476620e+00
  -1.16496360e+00 -5.35073131e-02  8.57034981e-01  1.38256717e+00
   9.03933793e-02  8.63964017e-03 -5.40078878e-01 -4.88574624e-01
   4.52568620e-01  5.42306304e-01  1.07568896e+00  3.46140218e+00
   3.28359604e+00 -3.20053488e-01 -1.14804339e+00 -2.76097941e+00
   1.55631797e-02  8.74092340e-01 -7.98800826e-01 -2.42959595e+00
  -6.76247656e-01 -1.14995682e+00  4.39849287e-01 -1.87727064e-01
   1.34595573e+00 -9.83103573e-01 -8.30253839e-01 -1.39651984e-01
   2.03547105e-01  4.51490223e-01 -3.95970130e+00 -3.51787716e-01
   7.84379542e-01 -4.29442495e-01  1.05397455e-01  7.79593885e-01
  -1.13827668e-01 -5.40005386e-01 -1.16847146e+00 -3.36890638e-01
   9.90479112e-01  5.00425518e-01 -2.40916753e+00 -8.40187371e-01
  -2.07494095e-01 -4.10496503e-01  4.08632898e+00  9.31320012e-01
   9.54048574e-01 -9.11957398e-02 -7.51672363e+00  7.23851264e-01
  -3.96382175e-02  1.77101314e+00 -1.17600811e+00  1.22991554e-01
  -3.74346748e-02  1.72770336e-01 -4.08644319e-01  4.94354963e-01
   1.74994171e+00  9.89653885e-01  1.74723223e-01 -9.37665176e+00
  -4.31565335e-03 -1.70145118e+00 -1.74992526e+00 -1.72720656e-01
   5.82682490e-01 -5.26583374e-01  1.91324139e+00 -2.40155920e-01
  -1.35112417e+00 -3.65208060e-01 -1.35532707e-01  1.08672369e+00
   7.04294443e-01 -8.71233284e-01  1.04183960e+00 -6.46791577e-01
   3.74140948e-01  3.27620208e-01  1.64190233e-01  2.20514464e+00]
 [ 5.96660793e-01  1.58940768e+00 -8.10967982e-01 -4.73919630e-01
  -9.17869389e-01 -1.61617601e+00 -6.78639174e-01  1.03318654e-01
  -5.00028312e-01  1.78057873e+00 -1.34553814e+00 -5.28248453e+00
   7.20736444e-01  1.79546729e-01 -1.75809467e+00 -8.59387755e-01
  -2.27263141e-02 -1.87025774e+00  1.67022240e+00 -2.89478928e-01
   8.37067842e-01  6.59622908e-01  4.29693535e-02 -9.46969926e-01
   4.30729359e-01 -7.75742769e-01  3.41510355e-01 -2.02011466e+00
  -1.02778935e+00 -1.69667840e+00 -1.71012551e-01  4.23166782e-01
  -1.79182720e+00 -5.75773478e-01 -1.71246231e+00  5.68344474e-01
  -6.81339622e-01  3.23087126e-01 -1.44740534e+00 -1.38365650e+00
   3.77985537e-01 -6.37483299e-01  7.76762664e-01  5.55373728e-01
   1.11285400e+00 -1.27088690e+00  2.94207788e+00  4.38418001e-01
   7.77927995e-01  8.14674795e-01 -3.88954520e-01 -1.27854240e+00
   3.87139380e-01 -5.47252417e-01  7.68055022e-01  1.48158407e+00
  -5.30028522e-01  8.71521354e-01  2.20103472e-01 -1.80267835e+00
   1.62707639e+00  2.93988436e-01  4.04036474e+00 -1.38034463e+00
  -8.25688243e-01  7.04825699e-01  8.15395546e+00  1.22501051e+00
   1.66788650e+00  2.72147131e+00  6.49030805e-01 -9.60100591e-01
  -1.05595326e+00 -4.90769893e-02 -1.56489909e+00  3.93039435e-01
   8.80326271e-01  1.46846676e+00  2.43020996e-01 -1.33081412e+00
   2.29413652e+00  7.48559713e-01  1.10301085e-01  1.11530209e+00
  -3.07022452e-01 -3.43551278e-01  7.95005918e-01  2.63235778e-01
   7.99354970e-01 -5.73727824e-02  7.56435156e-01 -3.64444673e-01
   1.29907846e+00 -3.82006057e-02  7.76137769e-01 -8.31591904e-01
   1.53442824e+00 -1.27538812e+00  2.64287349e-02 -5.65739751e-01]
 [ 1.45643616e+00 -2.08054376e+00  6.94121957e-01 -5.21965921e-01
  -2.32917964e-01  1.52993643e+00 -1.81002557e-01 -9.00278687e-01
  -3.17071170e-01  4.05129343e-01 -9.13353622e-01  1.52238500e+00
   1.75047374e+00 -7.30361819e-01  1.55085921e+00  1.42706335e-01
   4.59196642e-02  4.07628447e-01 -3.26506257e-01 -4.81859356e-01
   9.39201862e-02 -2.45961189e-01 -1.96491504e+00  5.07482708e-01
   1.15683150e+00 -3.67391527e-01 -9.73286927e-01 -3.10479784e+00
  -2.73889601e-01  1.66504610e+00 -1.51400971e+00 -9.55533683e-01
   2.07410976e-01  1.52923656e+00 -1.69865060e+00  1.74417377e+00
  -1.26610243e+00 -5.80420077e-01 -8.55364025e-01  1.04407564e-01
   5.93953609e-01 -1.41621888e+00  1.08122841e-01 -4.84067738e-01
   1.69581461e+00  1.38722503e+00 -3.99619937e+00  1.27301514e+00
   6.38230085e-01  2.15354633e+00 -8.86631683e-02  9.06281710e-01
   1.31646347e+00  1.80131924e+00  5.43839991e-01 -1.20308149e+00
   1.03996921e+00  4.74938527e-02 -2.78281540e-01 -1.01100028e+00
   1.63605332e+00 -6.30008936e-01  2.86958098e+00  1.29696774e+00
   1.89161137e-01  2.85747457e+00 -4.18727446e+00 -7.44388819e-01
   2.98897564e-01  1.36116946e+00  1.38416719e+00 -2.11131483e-01
   1.18849802e+00  1.96934193e-01 -1.47064614e+00 -3.63175780e-01
   7.84732163e-01 -1.32636324e-01  1.00253135e-01  2.38688135e+00
  -2.33116910e-01  4.48122442e-01  2.28070378e+00 -1.26993442e+00
  -3.67890954e-01 -8.16320002e-01 -9.08941507e-01 -7.01003969e-01
   1.05856764e+00 -3.64899427e-01 -2.01056767e+00 -1.06769252e+00
   1.60698414e+00 -2.91990757e-01  2.26473403e+00 -4.49902713e-01
   4.62933123e-01  7.53116310e-01  1.05988944e+00  3.28791380e-01]
 [-1.19309628e+00 -4.99944448e-01  5.28136671e-01  1.85364544e-01
  -7.10495830e-01 -8.85336176e-02 -6.38042450e-01  8.81741822e-01
   1.25752389e+00 -8.73580158e-01 -9.55399573e-01 -1.35603696e-01
   4.83997911e-01 -9.96602833e-01  9.37519133e-01 -5.89864291e-02
  -1.13989949e+00 -1.25818241e+00  5.26024342e-01 -7.01516032e-01
   1.32973158e+00  2.44526839e+00 -7.72712529e-01  5.13766646e-01
   4.98695105e-01  1.14376044e+00 -6.54239535e-01 -6.17800094e-02
  -1.03205192e+00  2.77230233e-01 -9.69139159e-01  1.10734671e-01
  -5.05987525e-01  1.02873945e+00  1.02971303e+00 -2.58090401e+00
  -9.99437511e-01  2.12422752e+00 -3.89198899e-01 -9.32601035e-01
  -6.93674445e-01 -4.07995224e-01 -1.90250194e+00 -6.23405516e-01
  -1.66650927e+00 -2.14010692e+00 -3.13505024e-01  9.16595995e-01
  -1.29809892e+00  1.01324391e+00  1.43364155e+00 -1.01352572e+00
  -1.49118865e+00 -2.45811558e+00  1.11938548e+00  4.71531510e-01
   2.87433833e-01  6.17101133e-01  5.58946013e-01 -9.08716619e-01
   2.14687967e+00 -1.05833352e+00 -8.24340701e-01  1.51690736e-01
   1.60771608e+00  9.55081761e-01 -1.60897672e+00 -1.66303873e+00
   7.57982671e-01  3.17573786e-01  3.93135488e-01  1.26543090e-01
   1.48471398e-02 -1.58860159e+00 -5.91678858e-01  3.42316389e-01
  -2.10359603e-01 -1.42355669e+00 -2.23383650e-01 -4.08269119e+00
   9.26247478e-01  5.84456980e-01 -5.01928627e-01 -5.45637131e-01
   6.72929883e-01 -1.34969640e+00  1.73498929e+00 -2.95029342e-01
   7.98496783e-01  1.77032605e-01 -2.69206595e+00  1.26748353e-01
  -5.17131031e-01  9.58465040e-01 -5.24760962e-01  3.00141931e-01
   9.27737057e-02 -5.06614506e-01  1.23680639e+00  1.09711075e+00]] [3 2 0 1 2]
MLLITE_FIT_USING_MODEL mllite_decision_tree_class.DecisionTreeClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_CLASSIFIER_FIT' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 0 6
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_CLASSIFIER_FIT' 2 4
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_CLASSIFIER_FIT' 3 4
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_CLASSIFIER_FIT' 4 4
('OPERATION_END_ELAPSED', 0.013, 'TRAINING')
{ "max_depth" : 6, "max_leaf_nodes" : 32,  "max_leaf_nodes" : 64 }
{ "max_depth" : 6, "max_leaf_nodes" : 32,  "max_leaf_nodes" : 64 }
{
	"metadata" : { "model" : "Breiman_CART", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : { "ccp_alpha" : 0.000000, "criterion" : "", "max_depth" : 6, "max_features" : null, "max_leaf_nodes" : 32, "min_impurity_decrease" : 0.000000, "min_samples_leaf" : 1, "min_samples_split" : 2, "min_weight_fraction_leaf" : 0.000000, "random_state" : 1789, "splitter" : "best" },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 100 },
	"classes" : [ 0, 1, 2, 3 ],
	"tree" : {
	"features" : 100,
	"outputs" : 4,
	"max_depth" : 2,
	"node_count" : 9,
	"nodes" : {
		"node_0" : {"left" : 1, "right" : 2, "feature" : 66, "threshold" : 2.123984, "impurity" : 0.742188, "n_samples" : 16, "w_samples" : 16.000000, "value" : [0.312500, 0.187500, 0.250000, 0.250000]},
		"node_1" : {"left" : 3, "right" : 4, "feature" : 25, "threshold" : 0.211866, "impurity" : 0.660000, "n_samples" : 10, "w_samples" : 10.000000, "value" : [0.000000, 0.300000, 0.400000, 0.300000]},
		"node_2" : {"left" : 7, "right" : 8, "feature" : 9, "threshold" : 1.812834, "impurity" : 0.277778, "n_samples" : 6, "w_samples" : 6.000000, "value" : [0.833333, 0.000000, 0.000000, 0.166667]},
		"node_3" : {"left" : 5, "right" : 6, "feature" : 75, "threshold" : 0.232310, "impurity" : 0.500000, "n_samples" : 6, "w_samples" : 6.000000, "value" : [0.000000, 0.500000, 0.000000, 0.500000]},
		"node_4" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 4, "w_samples" : 4.000000, "value" : [0.000000, 0.000000, 1.000000, 0.000000]},
		"node_5" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 3, "w_samples" : 3.000000, "value" : [0.000000, 1.000000, 0.000000, 0.000000]},
		"node_6" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 3, "w_samples" : 3.000000, "value" : [0.000000, 0.000000, 0.000000, 1.000000]},
		"node_7" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 5, "w_samples" : 5.000000, "value" : [1.000000, 0.000000, 0.000000, 0.000000]},
		"node_8" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 0.000000, 0.000000, 1.000000]}
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/DecisionTreeClassifier/mllite.DecisionTreeClassifier_FourClass_100_tiny_option_1.json'

RELOADING_MODEL_FROM_JSON_START ('FourClass_100_tiny', 'DecisionTreeClassifier')
MLLITE_MODEL_SET_OPTIONS DecisionTreeClassifier {"max_depth" : 6, "max_leaf_nodes" : 32}
MLLITE_MODEL_OPTIONS_DEFAULT DecisionTreeClassifier { "max_leaf_nodes" : 64}
MLLITE_MODEL_OPTIONS_AFTER_SETTING DecisionTreeClassifier { "max_depth" : 6, "max_leaf_nodes" : 32,  "max_leaf_nodes" : 64 }
MLLITE_MODEL_JSON_AFTER_SETTING DecisionTreeClassifier None
MLLITE_RELOADING_MODEL mllite_decision_tree_class.DecisionTreeClassifier_ff4_il8
{
	"metadata" : { "model" : "Breiman_CART", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : { "ccp_alpha" : 0.000000, "criterion" : "", "max_depth" : 6, "max_features" : null, "max_leaf_nodes" : 32, "min_impurity_decrease" : 0.000000, "min_samples_leaf" : 1, "min_samples_split" : 2, "min_weight_fraction_leaf" : 0.000000, "random_state" : 1789, "splitter" : "best" },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 100 },
	"classes" : [ 0, 1, 2, 3 ],
	"tree" : {
	"features" : 100,
	"outputs" : 4,
	"max_depth" : 2,
	"node_count" : 9,
	"nodes" : {
		"node_0" : {"left" : 1, "right" : 2, "feature" : 66, "threshold" : 2.123984, "impurity" : 0.742188, "n_samples" : 16, "w_samples" : 16.000000, "value" : [0.312500, 0.187500, 0.250000, 0.250000]},
		"node_1" : {"left" : 3, "right" : 4, "feature" : 25, "threshold" : 0.211866, "impurity" : 0.660000, "n_samples" : 10, "w_samples" : 10.000000, "value" : [0.000000, 0.300000, 0.400000, 0.300000]},
		"node_2" : {"left" : 7, "right" : 8, "feature" : 9, "threshold" : 1.812834, "impurity" : 0.277778, "n_samples" : 6, "w_samples" : 6.000000, "value" : [0.833333, 0.000000, 0.000000, 0.166667]},
		"node_3" : {"left" : 5, "right" : 6, "feature" : 75, "threshold" : 0.232310, "impurity" : 0.500000, "n_samples" : 6, "w_samples" : 6.000000, "value" : [0.000000, 0.500000, 0.000000, 0.500000]},
		"node_4" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 4, "w_samples" : 4.000000, "value" : [0.000000, 0.000000, 1.000000, 0.000000]},
		"node_5" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 3, "w_samples" : 3.000000, "value" : [0.000000, 1.000000, 0.000000, 0.000000]},
		"node_6" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 3, "w_samples" : 3.000000, "value" : [0.000000, 0.000000, 0.000000, 1.000000]},
		"node_7" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 5, "w_samples" : 5.000000, "value" : [1.000000, 0.000000, 0.000000, 0.000000]},
		"node_8" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 0.000000, 0.000000, 1.000000]}
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1, 2, 3 ],
	"dataset" : 	{
		"dataset_features" : 100,
		"dataset_rows" : 16
	},
	"metadata" :  { "model" : "Breiman_CART", "signature" : "ff4_il8", "version" : "2024-W14" },
	"options" :  { "ccp_alpha" : 0.0, "criterion" : "", "max_depth" : 6, "max_features" : null, "max_leaf_nodes" : 32, "min_impurity_decrease" : 0.0, "min_samples_leaf" : 1, "min_samples_split" : 2, "min_weight_fraction_leaf" : 0.0, "random_state" : 1789, "splitter" : "best" },
	"tree" : 	{
		"features" : 100,
		"max_depth" : 2,
		"node_count" : 9,
		"nodes" : 	{
			"node_0" :  { "feature" : 66, "impurity" : 0.742188, "left" : 1, "n_samples" : 16, "right" : 2, "threshold" : 2.123984, "value" : [ 0.3125, 0.1875, 0.25, 0.25 ], "w_samples" : 16.0 },
			"node_1" :  { "feature" : 25, "impurity" : 0.66, "left" : 3, "n_samples" : 10, "right" : 4, "threshold" : 0.211866, "value" : [ 0.0, 0.3, 0.4, 0.3 ], "w_samples" : 10.0 },
			"node_2" :  { "feature" : 9, "impurity" : 0.277778, "left" : 7, "n_samples" : 6, "right" : 8, "threshold" : 1.812834, "value" : [ 0.833333, 0.0, 0.0, 0.166667 ], "w_samples" : 6.0 },
			"node_3" :  { "feature" : 75, "impurity" : 0.5, "left" : 5, "n_samples" : 6, "right" : 6, "threshold" : 0.23231, "value" : [ 0.0, 0.5, 0.0, 0.5 ], "w_samples" : 6.0 },
			"node_4" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 4, "right" : null, "threshold" : null, "value" : [ 0.0, 0.0, 1.0, 0.0 ], "w_samples" : 4.0 },
			"node_5" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 3, "right" : null, "threshold" : null, "value" : [ 0.0, 1.0, 0.0, 0.0 ], "w_samples" : 3.0 },
			"node_6" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 3, "right" : null, "threshold" : null, "value" : [ 0.0, 0.0, 0.0, 1.0 ], "w_samples" : 3.0 },
			"node_7" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 5, "right" : null, "threshold" : null, "value" : [ 1.0, 0.0, 0.0, 0.0 ], "w_samples" : 5.0 },
			"node_8" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 0.0, 0.0, 0.0, 1.0 ], "w_samples" : 1.0 }
		},
		"outputs" : 4
	}
}
BEAUTIFIED_JSON_END
RELOADING_MODEL_FROM_JSON_END ('FourClass_100_tiny', 'DecisionTreeClassifier')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0. 0. 0. 1.]
 [0. 0. 1. 0.]
 [1. 0. 0. 0.]
 [0. 1. 0. 0.]
 [0. 0. 1. 0.]
 [0. 0. 1. 0.]
 [1. 0. 0. 0.]
 [0. 0. 0. 1.]
 [1. 0. 0. 0.]
 [1. 0. 0. 0.]
 [0. 0. 0. 1.]
 [1. 0. 0. 0.]
 [0. 1. 0. 0.]
 [0. 0. 0. 1.]
 [0. 1. 0. 0.]
 [0. 0. 1. 0.]]
(16, 4)
(16, 4) float32
MODEL_PERFS {'class_name': 'mllite.DecisionTreeClassifier', 'model_name': 'DecisionTreeClassifier', 'options': '{"max_depth" : 6, "max_leaf_nodes" : 32}', 'dataset': 'FourClass_100_tiny', 'size': 16, 'accuracy': 1.0, 'auc': 1.0}
WRITING_PERF_CODE 'logs/auto_tests/classification/DecisionTreeClassifier/mllite.DecisionTreeClassifier_FourClass_100_tiny_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.DecisionTreeClassifier', 'model_name': 'DecisionTreeClassifier', 'options': '{"max_depth" : 6, "max_leaf_nodes" : 32}', 'dataset': 'FourClass_100_tiny', 'training_time_in_sec': 0.013, 'prediction_time_in_sec': 0.0}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 0 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 1 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 2 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 3 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 4 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 5 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 6 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 7 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 8 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 9 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 10 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 11 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 12 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 13 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 14 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 15 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 16 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 17 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 18 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 19 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 20 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 21 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 22 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 23 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 24 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 25 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 26 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 27 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 28 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 29 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 30 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 31 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 32 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 33 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 34 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 35 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 36 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 37 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 38 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 39 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 40 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 41 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 42 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 43 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 44 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 45 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 46 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 47 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 48 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 49 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 50 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 51 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 52 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 53 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 54 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 55 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 56 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 57 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 58 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 59 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 60 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 61 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 62 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 63 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 64 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 65 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 66 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 67 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 68 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 69 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 70 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 71 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 72 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 73 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 74 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 75 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 76 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 77 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 78 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 79 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 80 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 81 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 82 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 83 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 84 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 85 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 86 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 87 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 88 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 89 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 90 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 91 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 92 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 93 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 94 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 95 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 96 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 97 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 98 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 99 100
{
   "Contributions" : {
      "X_0" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_1" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_2" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_3" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_4" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_5" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_6" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_7" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_8" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_9" : [ -0.031250, 0.000000, 0.000000, 0.031250 ],
      "X_10" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_11" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_12" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_13" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_14" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_15" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_16" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_17" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_18" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_19" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_20" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_21" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_22" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_23" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_24" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_25" : [ 0.000000, 0.005859, 0.074219, -0.080078 ],
      "X_26" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_27" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_28" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_29" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_30" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_31" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_32" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_33" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_34" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_35" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_36" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_37" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_38" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_39" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_40" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_41" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_42" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_43" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_44" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_45" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_46" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_47" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_48" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_49" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_50" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_51" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_52" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_53" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_54" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_55" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_56" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_57" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_58" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_59" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_60" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_61" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_62" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_63" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_64" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_65" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_66" : [ 0.113281, -0.076172, -0.050781, 0.013672 ],
      "X_67" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_68" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_69" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_70" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_71" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_72" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_73" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_74" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_75" : [ 0.000000, -0.058594, 0.000000, 0.058594 ],
      "X_76" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_77" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_78" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_79" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_80" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_81" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_82" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_83" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_84" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_85" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_86" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_87" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_88" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_89" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_90" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_91" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_92" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_93" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_94" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_95" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_96" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_97" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_98" : [ 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_99" : [ 0.000000, 0.000000, 0.000000, 0.000000 ]   
   },
   "Most_Contributive_Features_By_Class" : {
      "class_0" : [ 66, 9 ],
      "class_1" : [ 66, 75, 25 ],
      "class_2" : [ 25, 66 ],
      "class_3" : [ 25, 75, 9, 66 ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/classification/DecisionTreeClassifier/mllite.DecisionTreeClassifier_FourClass_100_tiny_option_1_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/classification/DecisionTreeClassifier/mllite.DecisionTreeClassifier_FourClass_100_tiny_option_1_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('FourClass_100_tiny', 'DecisionTreeClassifier', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('FourClass_100_tiny', 'DecisionTreeClassifier', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('FourClass_100_tiny', 'DecisionTreeClassifier', 'duckdb')
e_id = t2.nid
 )
SELECT
   "DT_Output"."index" AS "index",
   CAST(NULL AS FLOAT)  AS "Score_0",
   "DT_Output"."P_0" AS "Proba_0",
   CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN LN( "DT_Output"."P_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
   CAST(NULL AS FLOAT)  AS "Score_1",
   "DT_Output"."P_1" AS "Proba_1",
   CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN LN( "DT_Output"."P_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
   CAST(NULL AS FLOAT)  AS "Score_2",
   "DT_Output"."P_2" AS "Proba_2",
   CASE WHEN ("DT_Output"."P_2" IS NULL OR "DT_Output"."P_2" > 0.0) THEN LN( "DT_Output"."P_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
   CAST(NULL AS FLOAT)  AS "Score_3",
   "DT_Output"."P_3" AS "Proba_3",
   CASE WHEN ("DT_Output"."P_3" IS NULL OR "DT_Output"."P_3" > 0.0) THEN LN( "DT_Output"."P_3" ) ELSE -1.79769313486231e+308 END AS "LogProba_3",
   "DT_Output"."D" AS "Decision",
   "DT_Output"."DP" AS "DecisionProba"
FROM "DT_Output"
SQL_OUT_PUT_LAST_LINES_END ('FourClass_100_tiny', 'DecisionTreeClassifier', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 16 entries, 0 to 15
Data columns (total 100 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     16 non-null     float32
 1   X_1     16 non-null     float32
 2   X_2     16 non-null     float32
 3   X_3     16 non-null     float32
 4   X_4     16 non-null     float32
 5   X_5     16 non-null     float32
 6   X_6     16 non-null     float32
 7   X_7     16 non-null     float32
 8   X_8     16 non-null     float32
 9   X_9     16 non-null     float32
 10  X_10    16 non-null     float32
 11  X_11    16 non-null     float32
 12  X_12    16 non-null     float32
 13  X_13    16 non-null     float32
 14  X_14    16 non-null     float32
 15  X_15    16 non-null     float32
 16  X_16    16 non-null     float32
 17  X_17    16 non-null     float32
 18  X_18    16 non-null     float32
 19  X_19    16 non-null     float32
 20  X_20    16 non-null     float32
 21  X_21    16 non-null     float32
 22  X_22    16 non-null     float32
 23  X_23    16 non-null     float32
 24  X_24    16 non-null     float32
 25  X_25    16 non-null     float32
 26  X_26    16 non-null     float32
 27  X_27    16 non-null     float32
 28  X_28    16 non-null     float32
 29  X_29    16 non-null     float32
 30  X_30    16 non-null     float32
 31  X_31    16 non-null     float32
 32  X_32    16 non-null     float32
 33  X_33    16 non-null     float32
 34  X_34    16 non-null     float32
 35  X_35    16 non-null     float32
 36  X_36    16 non-null     float32
 37  X_37    16 non-null     float32
 38  X_38    16 non-null     float32
 39  X_39    16 non-null     float32
 40  X_40    16 non-null     float32
 41  X_41    16 non-null     float32
 42  X_42    16 non-null     float32
 43  X_43    16 non-null     float32
 44  X_44    16 non-null     float32
 45  X_45    16 non-null     float32
 46  X_46    16 non-null     float32
 47  X_47    16 non-null     float32
 48  X_48    16 non-null     float32
 49  X_49    16 non-null     float32
 50  X_50    16 non-null     float32
 51  X_51    16 non-null     float32
 52  X_52    16 non-null     float32
 53  X_53    16 non-null     float32
 54  X_54    16 non-null     float32
 55  X_55    16 non-null     float32
 56  X_56    16 non-null     float32
 57  X_57    16 non-null     float32
 58  X_58    16 non-null     float32
 59  X_59    16 non-null     float32
 60  X_60    16 non-null     float32
 61  X_61    16 non-null     float32
 62  X_62    16 non-null     float32
 63  X_63    16 non-null     float32
 64  X_64    16 non-null     float32
 65  X_65    16 non-null     float32
 66  X_66    16 non-null     float32
 67  X_67    16 non-null     float32
 68  X_68    16 non-null     float32
 69  X_69    16 non-null     float32
 70  X_70    16 non-null     float32
 71  X_71    16 non-null     float32
 72  X_72    16 non-null     float32
 73  X_73    16 non-null     float32
 74  X_74    16 non-null     float32
 75  X_75    16 non-null     float32
 76  X_76    16 non-null     float32
 77  X_77    16 non-null     float32
 78  X_78    16 non-null     float32
 79  X_79    16 non-null     float32
 80  X_80    16 non-null     float32
 81  X_81    16 non-null     float32
 82  X_82    16 non-null     float32
 83  X_83    16 non-null     float32
 84  X_84    16 non-null     float32
 85  X_85    16 non-null     float32
 86  X_86    16 non-null     float32
 87  X_87    16 non-null     float32
 88  X_88    16 non-null     float32
 89  X_89    16 non-null     float32
 90  X_90    16 non-null     float32
 91  X_91    16 non-null     float32
 92  X_92    16 non-null     float32
 93  X_93    16 non-null     float32
 94  X_94    16 non-null     float32
 95  X_95    16 non-null     float32
 96  X_96    16 non-null     float32
 97  X_97    16 non-null     float32
 98  X_98    16 non-null     float32
 99  X_99    16 non-null     float32
dtypes: float32(100)
memory usage: 6.4 KB
            X_0       X_1       X_2  ...      X_97      X_98      X_99
index                                ...                              
0      0.935563  2.247500 -1.070940  ...  0.677246 -0.177791 -0.249523
1      0.293314 -1.260450 -3.448018  ...  0.327620  0.164190  2.205145
2      0.596661  1.589408 -0.810968  ... -1.275388  0.026429 -0.565740
3      1.456436 -2.080544  0.694122  ...  0.753116  1.059889  0.328791
4     -1.193096 -0.499944  0.528137  ... -0.506615  1.236806  1.097111
5      0.004588  0.415182  1.122491  ...  0.469463 -1.470150 -1.415749
6     -0.566579  0.216205  0.537669  ... -0.327327  0.253076 -0.257734
7      0.094549 -0.840780 -0.040313  ... -1.588936 -2.097391 -1.175138
8     -1.035038  0.028587  2.388027  ...  0.137861 -0.100060  0.578063
9      0.104933  1.209696  0.297718  ... -0.028398  0.305889  1.176062
10     1.684619 -0.394139  0.273230  ... -0.067597  0.335744 -0.537372
11     0.833314  0.023464 -1.279124  ...  0.708903 -0.350409 -0.664509
12     0.236087  1.340066 -0.531894  ...  1.625548  0.078043 -0.185077
13    -1.152497 -1.187080 -1.877030  ... -0.309107  0.388650 -0.153948
14     1.760033 -1.403882 -1.183618  ...  0.997268 -2.253838 -1.221147
15     1.879904 -0.295988  0.027052  ...  0.519573 -0.809065  0.313258

[16 rows x 100 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 16 entries, 0 to 15
Data columns (total 15 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          16 non-null     int64  
 1   Score_0        0 non-null      object 
 2   Proba_0        16 non-null     float64
 3   LogProba_0     16 non-null     float64
 4   Score_1        0 non-null      object 
 5   Proba_1        16 non-null     float64
 6   LogProba_1     16 non-null     float64
 7   Score_2        0 non-null      object 
 8   Proba_2        16 non-null     float64
 9   LogProba_2     16 non-null     float64
 10  Score_3        0 non-null      object 
 11  Proba_3        16 non-null     float64
 12  LogProba_3     16 non-null     float64
 13  Decision       16 non-null     int64  
 14  DecisionProba  16 non-null     float64
dtypes: float64(9), int64(2), object(4)
memory usage: 2.0+ KB
    index Score_0  Proba_0  ...     LogProba_3 Decision  DecisionProba
0       0    None      0.0  ...   0.000000e+00        3            1.0
1       1    None      0.0  ... -1.797693e+308        2            1.0
2       2    None      1.0  ... -1.797693e+308        0            1.0
3       3    None      0.0  ... -1.797693e+308        1            1.0
4       4    None      0.0  ... -1.797693e+308        2            1.0
5       5    None      0.0  ... -1.797693e+308        2            1.0
6       6    None      1.0  ... -1.797693e+308        0            1.0
7       7    None      0.0  ...   0.000000e+00        3            1.0
8       8    None      1.0  ... -1.797693e+308        0            1.0
9       9    None      1.0  ... -1.797693e+308        0            1.0
10     10    None      0.0  ...   0.000000e+00        3            1.0
11     11    None      1.0  ... -1.797693e+308        0            1.0
12     12    None      0.0  ... -1.797693e+308        1            1.0
13     13    None      0.0  ...   0.000000e+00        3            1.0
14     14    None      0.0  ... -1.797693e+308        1            1.0
15     15    None      0.0  ... -1.797693e+308        2            1.0

[16 rows x 15 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Score_3', 'Proba_3',
       'LogProba_3', 'Decision', 'DecisionProba'],
      dtype='object')
    index Score_0  SQL_Proba_0  ...  Py_Proba_2 Py_Proba_3  Py_Decision
0       0    None          0.0  ...         0.0        1.0            3
1       1    None          0.0  ...         1.0        0.0            2
2       2    None          1.0  ...         0.0        0.0            0
3       3    None          0.0  ...         0.0        0.0            1
4       4    None          0.0  ...         1.0        0.0            2
5       5    None          0.0  ...         1.0        0.0            2
6       6    None          1.0  ...         0.0        0.0            0
7       7    None          0.0  ...         0.0        1.0            3
8       8    None          1.0  ...         0.0        0.0            0
9       9    None          1.0  ...         0.0        0.0            0
10     10    None          0.0  ...         0.0        1.0            3
11     11    None          1.0  ...         0.0        0.0            0
12     12    None          0.0  ...         0.0        0.0            1
13     13    None          0.0  ...         0.0        1.0            3
14     14    None          0.0  ...         0.0        0.0            1
15     15    None          0.0  ...         1.0        0.0            2

[16 rows x 20 columns]
MLLITE_CLASS_SQL_ERROR ('FourClass_100_tiny', 'DecisionTreeClassifier', 'duckdb') ('Py_Proba_0', 'SQL_Proba_0') 0.0
    Py_Proba_0  SQL_Proba_0  SQL_Error_0
0          0.0          0.0          0.0
1          0.0          0.0          0.0
2          1.0          1.0          0.0
3          0.0          0.0          0.0
4          0.0          0.0          0.0
5          0.0          0.0          0.0
6          1.0          1.0          0.0
7          0.0          0.0          0.0
8          1.0          1.0          0.0
9          1.0          1.0          0.0
10         0.0          0.0          0.0
11         1.0          1.0          0.0
12         0.0          0.0          0.0
13         0.0          0.0          0.0
14         0.0          0.0          0.0
15         0.0          0.0          0.0
MLLITE_CLASS_SQL_ERROR ('FourClass_100_tiny', 'DecisionTreeClassifier', 'duckdb') ('Py_Proba_1', 'SQL_Proba_1') 0.0
    Py_Proba_1  SQL_Proba_1  SQL_Error_1
0          0.0          0.0          0.0
1          0.0          0.0          0.0
2          0.0          0.0          0.0
3          1.0          1.0          0.0
4          0.0          0.0          0.0
5          0.0          0.0          0.0
6          0.0          0.0          0.0
7          0.0          0.0          0.0
8          0.0          0.0          0.0
9          0.0          0.0          0.0
10         0.0          0.0          0.0
11         0.0          0.0          0.0
12         1.0          1.0          0.0
13         0.0          0.0          0.0
14         1.0          1.0          0.0
15         0.0          0.0          0.0
MLLITE_CLASS_SQL_ERROR ('FourClass_100_tiny', 'DecisionTreeClassifier', 'duckdb') ('Py_Proba_2', 'SQL_Proba_2') 0.0
    Py_Proba_2  SQL_Proba_2  SQL_Error_2
0          0.0          0.0          0.0
1          1.0          1.0          0.0
2          0.0          0.0          0.0
3          0.0          0.0          0.0
4          1.0          1.0          0.0
5          1.0          1.0          0.0
6          0.0          0.0          0.0
7          0.0          0.0          0.0
8          0.0          0.0          0.0
9          0.0          0.0          0.0
10         0.0          0.0          0.0
11         0.0          0.0          0.0
12         0.0          0.0          0.0
13         0.0          0.0          0.0
14         0.0          0.0          0.0
15         1.0          1.0          0.0
MLLITE_CLASS_SQL_ERROR ('FourClass_100_tiny', 'DecisionTreeClassifier', 'duckdb') ('Py_Proba_3', 'SQL_Proba_3') 0.0
    Py_Proba_3  SQL_Proba_3  SQL_Error_3
0          1.0          1.0          0.0
1          0.0          0.0          0.0
2          0.0          0.0          0.0
3          0.0          0.0          0.0
4          0.0          0.0          0.0
5          0.0          0.0          0.0
6          0.0          0.0          0.0
7          1.0          1.0          0.0
8          0.0          0.0          0.0
9          0.0          0.0          0.0
10         1.0          1.0          0.0
11         0.0          0.0          0.0
12         0.0          0.0          0.0
13         1.0          1.0          0.0
14         0.0          0.0          0.0
15         0.0          0.0          0.0
MLLITE_CLASS_SQL_EXECUTION_STATUS ('FourClass_100_tiny', 'DecisionTreeClassifier', 'duckdb', 'Success')
    Py_Decision  SQL_Decision
0             3             3
1             2             2
2             0             0
3             1             1
4             2             2
5             2             2
6             0             0
7             3             3
8             0             0
9             0             0
10            3             3
11            0             0
12            1             1
13            3             3
14            1             1
15            2             2
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/DecisionTreeClassifier/mllite.DecisionTreeClassifier_FourClass_100_tiny_option_1_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('FourClass_100_tiny', 'DecisionTreeClassifier', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('FourClass_100_tiny', 'DecisionTreeClassifier', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('FourClass_100_tiny', 'DecisionTreeClassifier', 'sqlite')
e_id = t2.nid
 )
SELECT
   "DT_Output"."index" AS "index",
   CAST(NULL AS FLOAT)  AS "Score_0",
   "DT_Output"."P_0" AS "Proba_0",
   CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN LN( "DT_Output"."P_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
   CAST(NULL AS FLOAT)  AS "Score_1",
   "DT_Output"."P_1" AS "Proba_1",
   CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN LN( "DT_Output"."P_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
   CAST(NULL AS FLOAT)  AS "Score_2",
   "DT_Output"."P_2" AS "Proba_2",
   CASE WHEN ("DT_Output"."P_2" IS NULL OR "DT_Output"."P_2" > 0.0) THEN LN( "DT_Output"."P_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
   CAST(NULL AS FLOAT)  AS "Score_3",
   "DT_Output"."P_3" AS "Proba_3",
   CASE WHEN ("DT_Output"."P_3" IS NULL OR "DT_Output"."P_3" > 0.0) THEN LN( "DT_Output"."P_3" ) ELSE -1.79769313486231e+308 END AS "LogProba_3",
   "DT_Output"."D" AS "Decision",
   "DT_Output"."DP" AS "DecisionProba"
FROM "DT_Output"
SQL_OUT_PUT_LAST_LINES_END ('FourClass_100_tiny', 'DecisionTreeClassifier', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 16 entries, 0 to 15
Data columns (total 100 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     16 non-null     float32
 1   X_1     16 non-null     float32
 2   X_2     16 non-null     float32
 3   X_3     16 non-null     float32
 4   X_4     16 non-null     float32
 5   X_5     16 non-null     float32
 6   X_6     16 non-null     float32
 7   X_7     16 non-null     float32
 8   X_8     16 non-null     float32
 9   X_9     16 non-null     float32
 10  X_10    16 non-null     float32
 11  X_11    16 non-null     float32
 12  X_12    16 non-null     float32
 13  X_13    16 non-null     float32
 14  X_14    16 non-null     float32
 15  X_15    16 non-null     float32
 16  X_16    16 non-null     float32
 17  X_17    16 non-null     float32
 18  X_18    16 non-null     float32
 19  X_19    16 non-null     float32
 20  X_20    16 non-null     float32
 21  X_21    16 non-null     float32
 22  X_22    16 non-null     float32
 23  X_23    16 non-null     float32
 24  X_24    16 non-null     float32
 25  X_25    16 non-null     float32
 26  X_26    16 non-null     float32
 27  X_27    16 non-null     float32
 28  X_28    16 non-null     float32
 29  X_29    16 non-null     float32
 30  X_30    16 non-null     float32
 31  X_31    16 non-null     float32
 32  X_32    16 non-null     float32
 33  X_33    16 non-null     float32
 34  X_34    16 non-null     float32
 35  X_35    16 non-null     float32
 36  X_36    16 non-null     float32
 37  X_37    16 non-null     float32
 38  X_38    16 non-null     float32
 39  X_39    16 non-null     float32
 40  X_40    16 non-null     float32
 41  X_41    16 non-null     float32
 42  X_42    16 non-null     float32
 43  X_43    16 non-null     float32
 44  X_44    16 non-null     float32
 45  X_45    16 non-null     float32
 46  X_46    16 non-null     float32
 47  X_47    16 non-null     float32
 48  X_48    16 non-null     float32
 49  X_49    16 non-null     float32
 50  X_50    16 non-null     float32
 51  X_51    16 non-null     float32
 52  X_52    16 non-null     float32
 53  X_53    16 non-null     float32
 54  X_54    16 non-null     float32
 55  X_55    16 non-null     float32
 56  X_56    16 non-null     float32
 57  X_57    16 non-null     float32
 58  X_58    16 non-null     float32
 59  X_59    16 non-null     float32
 60  X_60    16 non-null     float32
 61  X_61    16 non-null     float32
 62  X_62    16 non-null     float32
 63  X_63    16 non-null     float32
 64  X_64    16 non-null     float32
 65  X_65    16 non-null     float32
 66  X_66    16 non-null     float32
 67  X_67    16 non-null     float32
 68  X_68    16 non-null     float32
 69  X_69    16 non-null     float32
 70  X_70    16 non-null     float32
 71  X_71    16 non-null     float32
 72  X_72    16 non-null     float32
 73  X_73    16 non-null     float32
 74  X_74    16 non-null     float32
 75  X_75    16 non-null     float32
 76  X_76    16 non-null     float32
 77  X_77    16 non-null     float32
 78  X_78    16 non-null     float32
 79  X_79    16 non-null     float32
 80  X_80    16 non-null     float32
 81  X_81    16 non-null     float32
 82  X_82    16 non-null     float32
 83  X_83    16 non-null     float32
 84  X_84    16 non-null     float32
 85  X_85    16 non-null     float32
 86  X_86    16 non-null     float32
 87  X_87    16 non-null     float32
 88  X_88    16 non-null     float32
 89  X_89    16 non-null     float32
 90  X_90    16 non-null     float32
 91  X_91    16 non-null     float32
 92  X_92    16 non-null     float32
 93  X_93    16 non-null     float32
 94  X_94    16 non-null     float32
 95  X_95    16 non-null     float32
 96  X_96    16 non-null     float32
 97  X_97    16 non-null     float32
 98  X_98    16 non-null     float32
 99  X_99    16 non-null     float32
dtypes: float32(100)
memory usage: 6.4 KB
            X_0       X_1       X_2  ...      X_97      X_98      X_99
index                                ...                              
0      0.935563  2.247500 -1.070940  ...  0.677246 -0.177791 -0.249523
1      0.293314 -1.260450 -3.448018  ...  0.327620  0.164190  2.205145
2      0.596661  1.589408 -0.810968  ... -1.275388  0.026429 -0.565740
3      1.456436 -2.080544  0.694122  ...  0.753116  1.059889  0.328791
4     -1.193096 -0.499944  0.528137  ... -0.506615  1.236806  1.097111
5      0.004588  0.415182  1.122491  ...  0.469463 -1.470150 -1.415749
6     -0.566579  0.216205  0.537669  ... -0.327327  0.253076 -0.257734
7      0.094549 -0.840780 -0.040313  ... -1.588936 -2.097391 -1.175138
8     -1.035038  0.028587  2.388027  ...  0.137861 -0.100060  0.578063
9      0.104933  1.209696  0.297718  ... -0.028398  0.305889  1.176062
10     1.684619 -0.394139  0.273230  ... -0.067597  0.335744 -0.537372
11     0.833314  0.023464 -1.279124  ...  0.708903 -0.350409 -0.664509
12     0.236087  1.340066 -0.531894  ...  1.625548  0.078043 -0.185077
13    -1.152497 -1.187080 -1.877030  ... -0.309107  0.388650 -0.153948
14     1.760033 -1.403882 -1.183618  ...  0.997268 -2.253838 -1.221147
15     1.879904 -0.295988  0.027052  ...  0.519573 -0.809065  0.313258

[16 rows x 100 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 16 entries, 0 to 15
Data columns (total 15 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          16 non-null     int64  
 1   Score_0        0 non-null      object 
 2   Proba_0        16 non-null     float64
 3   LogProba_0     16 non-null     float64
 4   Score_1        0 non-null      object 
 5   Proba_1        16 non-null     float64
 6   LogProba_1     16 non-null     float64
 7   Score_2        0 non-null      object 
 8   Proba_2        16 non-null     float64
 9   LogProba_2     16 non-null     float64
 10  Score_3        0 non-null      object 
 11  Proba_3        16 non-null     float64
 12  LogProba_3     16 non-null     float64
 13  Decision       16 non-null     int64  
 14  DecisionProba  16 non-null     float64
dtypes: float64(9), int64(2), object(4)
memory usage: 2.0+ KB
    index Score_0  Proba_0  ...     LogProba_3 Decision  DecisionProba
0       0    None      0.0  ...   0.000000e+00        3            1.0
1       1    None      0.0  ... -1.797693e+308        2            1.0
2       2    None      1.0  ... -1.797693e+308        0            1.0
3       3    None      0.0  ... -1.797693e+308        1            1.0
4       4    None      0.0  ... -1.797693e+308        2            1.0
5       5    None      0.0  ... -1.797693e+308        2            1.0
6       6    None      1.0  ... -1.797693e+308        0            1.0
7       7    None      0.0  ...   0.000000e+00        3            1.0
8       8    None      1.0  ... -1.797693e+308        0            1.0
9       9    None      1.0  ... -1.797693e+308        0            1.0
10     10    None      0.0  ...   0.000000e+00        3            1.0
11     11    None      1.0  ... -1.797693e+308        0            1.0
12     12    None      0.0  ... -1.797693e+308        1            1.0
13     13    None      0.0  ...   0.000000e+00        3            1.0
14     14    None      0.0  ... -1.797693e+308        1            1.0
15     15    None      0.0  ... -1.797693e+308        2            1.0

[16 rows x 15 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Score_3', 'Proba_3',
       'LogProba_3', 'Decision', 'DecisionProba'],
      dtype='object')
    index Score_0  SQL_Proba_0  ...  Py_Proba_2 Py_Proba_3  Py_Decision
0       0    None          0.0  ...         0.0        1.0            3
1       1    None          0.0  ...         1.0        0.0            2
2       2    None          1.0  ...         0.0        0.0            0
3       3    None          0.0  ...         0.0        0.0            1
4       4    None          0.0  ...         1.0        0.0            2
5       5    None          0.0  ...         1.0        0.0            2
6       6    None          1.0  ...         0.0        0.0            0
7       7    None          0.0  ...         0.0        1.0            3
8       8    None          1.0  ...         0.0        0.0            0
9       9    None          1.0  ...         0.0        0.0            0
10     10    None          0.0  ...         0.0        1.0            3
11     11    None          1.0  ...         0.0        0.0            0
12     12    None          0.0  ...         0.0        0.0            1
13     13    None          0.0  ...         0.0        1.0            3
14     14    None          0.0  ...         0.0        0.0            1
15     15    None          0.0  ...         1.0        0.0            2

[16 rows x 20 columns]
MLLITE_CLASS_SQL_ERROR ('FourClass_100_tiny', 'DecisionTreeClassifier', 'sqlite') ('Py_Proba_0', 'SQL_Proba_0') 0.0
    Py_Proba_0  SQL_Proba_0  SQL_Error_0
0          0.0          0.0          0.0
1          0.0          0.0          0.0
2          1.0          1.0          0.0
3          0.0          0.0          0.0
4          0.0          0.0          0.0
5          0.0          0.0          0.0
6          1.0          1.0          0.0
7          0.0          0.0          0.0
8          1.0          1.0          0.0
9          1.0          1.0          0.0
10         0.0          0.0          0.0
11         1.0          1.0          0.0
12         0.0          0.0          0.0
13         0.0          0.0          0.0
14         0.0          0.0          0.0
15         0.0          0.0          0.0
MLLITE_CLASS_SQL_ERROR ('FourClass_100_tiny', 'DecisionTreeClassifier', 'sqlite') ('Py_Proba_1', 'SQL_Proba_1') 0.0
    Py_Proba_1  SQL_Proba_1  SQL_Error_1
0          0.0          0.0          0.0
1          0.0          0.0          0.0
2          0.0          0.0          0.0
3          1.0          1.0          0.0
4          0.0          0.0          0.0
5          0.0          0.0          0.0
6          0.0          0.0          0.0
7          0.0          0.0          0.0
8          0.0          0.0          0.0
9          0.0          0.0          0.0
10         0.0          0.0          0.0
11         0.0          0.0          0.0
12         1.0          1.0          0.0
13         0.0          0.0          0.0
14         1.0          1.0          0.0
15         0.0          0.0          0.0
MLLITE_CLASS_SQL_ERROR ('FourClass_100_tiny', 'DecisionTreeClassifier', 'sqlite') ('Py_Proba_2', 'SQL_Proba_2') 0.0
    Py_Proba_2  SQL_Proba_2  SQL_Error_2
0          0.0          0.0          0.0
1          1.0          1.0          0.0
2          0.0          0.0          0.0
3          0.0          0.0          0.0
4          1.0          1.0          0.0
5          1.0          1.0          0.0
6          0.0          0.0          0.0
7          0.0          0.0          0.0
8          0.0          0.0          0.0
9          0.0          0.0          0.0
10         0.0          0.0          0.0
11         0.0          0.0          0.0
12         0.0          0.0          0.0
13         0.0          0.0          0.0
14         0.0          0.0          0.0
15         1.0          1.0          0.0
MLLITE_CLASS_SQL_ERROR ('FourClass_100_tiny', 'DecisionTreeClassifier', 'sqlite') ('Py_Proba_3', 'SQL_Proba_3') 0.0
    Py_Proba_3  SQL_Proba_3  SQL_Error_3
0          1.0          1.0          0.0
1          0.0          0.0          0.0
2          0.0          0.0          0.0
3          0.0          0.0          0.0
4          0.0          0.0          0.0
5          0.0          0.0          0.0
6          0.0          0.0          0.0
7          1.0          1.0          0.0
8          0.0          0.0          0.0
9          0.0          0.0          0.0
10         1.0          1.0          0.0
11         0.0          0.0          0.0
12         0.0          0.0          0.0
13         1.0          1.0          0.0
14         0.0          0.0          0.0
15         0.0          0.0          0.0
MLLITE_CLASS_SQL_EXECUTION_STATUS ('FourClass_100_tiny', 'DecisionTreeClassifier', 'sqlite', 'Success')
    Py_Decision  SQL_Decision
0             3             3
1             2             2
2             0             0
3             1             1
4             2             2
5             2             2
6             0             0
7             3             3
8             0             0
9             0             0
10            3             3
11            0             0
12            1             1
13            3             3
14            1             1
15            2             2
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
