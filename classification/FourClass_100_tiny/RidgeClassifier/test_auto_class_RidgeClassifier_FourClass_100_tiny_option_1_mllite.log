READING_CSV FourClass_100_tiny ['data/tiny/FourClass_100_tiny.csv']
         X_0       X_1       X_2  ...      X_98      X_99  target
0   0.935563  2.247500 -1.070940  ... -0.177791 -0.249523       3
1   0.293314 -1.260450 -3.448018  ...  0.164190  2.205145       2
2   0.596661  1.589408 -0.810968  ...  0.026429 -0.565740       0
3   1.456436 -2.080544  0.694122  ...  1.059889  0.328791       1
4  -1.193096 -0.499944  0.528137  ...  1.236806  1.097111       2
5   0.004588  0.415182  1.122491  ... -1.470151 -1.415749       2
6  -0.566579  0.216205  0.537669  ...  0.253076 -0.257734       0
7   0.094549 -0.840780 -0.040313  ... -2.097391 -1.175138       3
8  -1.035038  0.028587  2.388027  ... -0.100060  0.578063       0
9   0.104933  1.209696  0.297718  ...  0.305889  1.176062       0
10  1.684619 -0.394139  0.273230  ...  0.335744 -0.537372       3
11  0.833314  0.023464 -1.279124  ... -0.350409 -0.664509       0
12  0.236087  1.340066 -0.531894  ...  0.078043 -0.185077       1
13 -1.152497 -1.187080 -1.877030  ...  0.388650 -0.153948       3
14  1.760033 -1.403882 -1.183618  ... -2.253838 -1.221147       1
15  1.879904 -0.295988  0.027052  ... -0.809065  0.313258       2

[16 rows x 101 columns]
MLLITE_MODEL_SET_OPTIONS RidgeClassifier {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { "alpha" : 0.0000001,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
('OPERATION_START', 'TRAINING')
[[ 9.35562551e-01  2.24750018e+00 -1.07094014e+00  5.08270264e-01
   1.43985808e-01 -4.33900356e-01  2.20938280e-01 -6.05712712e-01
   1.04623568e+00 -5.11191189e-01 -1.49217200e+00  5.78792810e-01
  -5.20725727e-01  8.71259570e-01 -1.55619383e+00  1.52518547e+00
  -7.36531466e-02 -1.17264986e+00 -6.90029681e-01 -1.00071573e+00
   3.37273180e-01 -5.52994728e-01  4.75280344e-01 -1.40307999e+00
   9.60445762e-01 -4.87094879e-01 -7.87123621e-01  4.54730177e+00
   1.16833878e+00 -5.16704082e-01  1.26904652e-01 -2.69020295e+00
  -1.60714972e+00 -1.60194361e+00  1.45940697e+00 -2.07469568e-01
  -7.90602565e-01 -2.78487932e-02 -1.21024287e+00  5.58430433e-01
  -1.63653836e-01  6.32869065e-01 -1.25206620e-01 -3.34407538e-01
   6.30639970e-01  1.33564019e+00  3.52602506e+00  7.06132531e-01
   1.95425427e+00 -2.52463102e-01 -4.60086882e-01 -1.19924438e+00
   6.41360343e-01 -2.27416492e+00 -1.08663130e+00 -1.79455566e+00
  -4.53341693e-01 -5.69205701e-01 -2.71141529e-01  6.19319558e-01
  -2.58924603e+00  9.84492600e-01  2.16141731e-01  8.48047435e-01
  -2.20009804e-01 -3.31227589e+00  1.16689853e-01  1.42259753e+00
   1.79406500e+00 -1.90514177e-01  7.55192041e-01  1.54058591e-01
   7.11078942e-01 -1.32698989e+00 -2.07093787e+00  9.34237540e-01
  -4.60939616e-01 -8.04052234e-01 -5.02367616e-02 -3.75201797e+00
   6.09228611e-02 -1.00079381e+00 -9.43618715e-01  2.28104413e-01
  -9.84539762e-02 -8.51119459e-02  8.69812146e-02 -1.41765642e+00
   2.71681398e-01 -8.74418080e-01 -2.53257823e+00 -5.78377783e-01
  -7.53983378e-01  9.52363431e-01 -9.63835180e-01 -6.48602486e-01
  -1.77499366e+00  6.77245975e-01 -1.77790895e-01 -2.49523029e-01]
 [ 2.93314219e-01 -1.26045048e+00 -3.44801831e+00  2.69382149e-01
   1.54421818e+00 -6.00797161e-02  2.80081749e-01 -3.49374235e-01
  -1.71003997e+00  8.22554767e-01  7.01598311e-03  7.73456335e-01
  -1.02132368e+00 -1.34428933e-01 -2.03461379e-01  1.28476620e+00
  -1.16496360e+00 -5.35073131e-02  8.57034981e-01  1.38256717e+00
   9.03933793e-02  8.63964017e-03 -5.40078878e-01 -4.88574624e-01
   4.52568620e-01  5.42306304e-01  1.07568896e+00  3.46140218e+00
   3.28359604e+00 -3.20053488e-01 -1.14804339e+00 -2.76097941e+00
   1.55631797e-02  8.74092340e-01 -7.98800826e-01 -2.42959595e+00
  -6.76247656e-01 -1.14995682e+00  4.39849287e-01 -1.87727064e-01
   1.34595573e+00 -9.83103573e-01 -8.30253839e-01 -1.39651984e-01
   2.03547105e-01  4.51490223e-01 -3.95970130e+00 -3.51787716e-01
   7.84379542e-01 -4.29442495e-01  1.05397455e-01  7.79593885e-01
  -1.13827668e-01 -5.40005386e-01 -1.16847146e+00 -3.36890638e-01
   9.90479112e-01  5.00425518e-01 -2.40916753e+00 -8.40187371e-01
  -2.07494095e-01 -4.10496503e-01  4.08632898e+00  9.31320012e-01
   9.54048574e-01 -9.11957398e-02 -7.51672363e+00  7.23851264e-01
  -3.96382175e-02  1.77101314e+00 -1.17600811e+00  1.22991554e-01
  -3.74346748e-02  1.72770336e-01 -4.08644319e-01  4.94354963e-01
   1.74994171e+00  9.89653885e-01  1.74723223e-01 -9.37665176e+00
  -4.31565335e-03 -1.70145118e+00 -1.74992526e+00 -1.72720656e-01
   5.82682490e-01 -5.26583374e-01  1.91324139e+00 -2.40155920e-01
  -1.35112417e+00 -3.65208060e-01 -1.35532707e-01  1.08672369e+00
   7.04294443e-01 -8.71233284e-01  1.04183960e+00 -6.46791577e-01
   3.74140948e-01  3.27620208e-01  1.64190233e-01  2.20514464e+00]
 [ 5.96660793e-01  1.58940768e+00 -8.10967982e-01 -4.73919630e-01
  -9.17869389e-01 -1.61617601e+00 -6.78639174e-01  1.03318654e-01
  -5.00028312e-01  1.78057873e+00 -1.34553814e+00 -5.28248453e+00
   7.20736444e-01  1.79546729e-01 -1.75809467e+00 -8.59387755e-01
  -2.27263141e-02 -1.87025774e+00  1.67022240e+00 -2.89478928e-01
   8.37067842e-01  6.59622908e-01  4.29693535e-02 -9.46969926e-01
   4.30729359e-01 -7.75742769e-01  3.41510355e-01 -2.02011466e+00
  -1.02778935e+00 -1.69667840e+00 -1.71012551e-01  4.23166782e-01
  -1.79182720e+00 -5.75773478e-01 -1.71246231e+00  5.68344474e-01
  -6.81339622e-01  3.23087126e-01 -1.44740534e+00 -1.38365650e+00
   3.77985537e-01 -6.37483299e-01  7.76762664e-01  5.55373728e-01
   1.11285400e+00 -1.27088690e+00  2.94207788e+00  4.38418001e-01
   7.77927995e-01  8.14674795e-01 -3.88954520e-01 -1.27854240e+00
   3.87139380e-01 -5.47252417e-01  7.68055022e-01  1.48158407e+00
  -5.30028522e-01  8.71521354e-01  2.20103472e-01 -1.80267835e+00
   1.62707639e+00  2.93988436e-01  4.04036474e+00 -1.38034463e+00
  -8.25688243e-01  7.04825699e-01  8.15395546e+00  1.22501051e+00
   1.66788650e+00  2.72147131e+00  6.49030805e-01 -9.60100591e-01
  -1.05595326e+00 -4.90769893e-02 -1.56489909e+00  3.93039435e-01
   8.80326271e-01  1.46846676e+00  2.43020996e-01 -1.33081412e+00
   2.29413652e+00  7.48559713e-01  1.10301085e-01  1.11530209e+00
  -3.07022452e-01 -3.43551278e-01  7.95005918e-01  2.63235778e-01
   7.99354970e-01 -5.73727824e-02  7.56435156e-01 -3.64444673e-01
   1.29907846e+00 -3.82006057e-02  7.76137769e-01 -8.31591904e-01
   1.53442824e+00 -1.27538812e+00  2.64287349e-02 -5.65739751e-01]
 [ 1.45643616e+00 -2.08054376e+00  6.94121957e-01 -5.21965921e-01
  -2.32917964e-01  1.52993643e+00 -1.81002557e-01 -9.00278687e-01
  -3.17071170e-01  4.05129343e-01 -9.13353622e-01  1.52238500e+00
   1.75047374e+00 -7.30361819e-01  1.55085921e+00  1.42706335e-01
   4.59196642e-02  4.07628447e-01 -3.26506257e-01 -4.81859356e-01
   9.39201862e-02 -2.45961189e-01 -1.96491504e+00  5.07482708e-01
   1.15683150e+00 -3.67391527e-01 -9.73286927e-01 -3.10479784e+00
  -2.73889601e-01  1.66504610e+00 -1.51400971e+00 -9.55533683e-01
   2.07410976e-01  1.52923656e+00 -1.69865060e+00  1.74417377e+00
  -1.26610243e+00 -5.80420077e-01 -8.55364025e-01  1.04407564e-01
   5.93953609e-01 -1.41621888e+00  1.08122841e-01 -4.84067738e-01
   1.69581461e+00  1.38722503e+00 -3.99619937e+00  1.27301514e+00
   6.38230085e-01  2.15354633e+00 -8.86631683e-02  9.06281710e-01
   1.31646347e+00  1.80131924e+00  5.43839991e-01 -1.20308149e+00
   1.03996921e+00  4.74938527e-02 -2.78281540e-01 -1.01100028e+00
   1.63605332e+00 -6.30008936e-01  2.86958098e+00  1.29696774e+00
   1.89161137e-01  2.85747457e+00 -4.18727446e+00 -7.44388819e-01
   2.98897564e-01  1.36116946e+00  1.38416719e+00 -2.11131483e-01
   1.18849802e+00  1.96934193e-01 -1.47064614e+00 -3.63175780e-01
   7.84732163e-01 -1.32636324e-01  1.00253135e-01  2.38688135e+00
  -2.33116910e-01  4.48122442e-01  2.28070378e+00 -1.26993442e+00
  -3.67890954e-01 -8.16320002e-01 -9.08941507e-01 -7.01003969e-01
   1.05856764e+00 -3.64899427e-01 -2.01056767e+00 -1.06769252e+00
   1.60698414e+00 -2.91990757e-01  2.26473403e+00 -4.49902713e-01
   4.62933123e-01  7.53116310e-01  1.05988944e+00  3.28791380e-01]
 [-1.19309628e+00 -4.99944448e-01  5.28136671e-01  1.85364544e-01
  -7.10495830e-01 -8.85336176e-02 -6.38042450e-01  8.81741822e-01
   1.25752389e+00 -8.73580158e-01 -9.55399573e-01 -1.35603696e-01
   4.83997911e-01 -9.96602833e-01  9.37519133e-01 -5.89864291e-02
  -1.13989949e+00 -1.25818241e+00  5.26024342e-01 -7.01516032e-01
   1.32973158e+00  2.44526839e+00 -7.72712529e-01  5.13766646e-01
   4.98695105e-01  1.14376044e+00 -6.54239535e-01 -6.17800094e-02
  -1.03205192e+00  2.77230233e-01 -9.69139159e-01  1.10734671e-01
  -5.05987525e-01  1.02873945e+00  1.02971303e+00 -2.58090401e+00
  -9.99437511e-01  2.12422752e+00 -3.89198899e-01 -9.32601035e-01
  -6.93674445e-01 -4.07995224e-01 -1.90250194e+00 -6.23405516e-01
  -1.66650927e+00 -2.14010692e+00 -3.13505024e-01  9.16595995e-01
  -1.29809892e+00  1.01324391e+00  1.43364155e+00 -1.01352572e+00
  -1.49118865e+00 -2.45811558e+00  1.11938548e+00  4.71531510e-01
   2.87433833e-01  6.17101133e-01  5.58946013e-01 -9.08716619e-01
   2.14687967e+00 -1.05833352e+00 -8.24340701e-01  1.51690736e-01
   1.60771608e+00  9.55081761e-01 -1.60897672e+00 -1.66303873e+00
   7.57982671e-01  3.17573786e-01  3.93135488e-01  1.26543090e-01
   1.48471398e-02 -1.58860159e+00 -5.91678858e-01  3.42316389e-01
  -2.10359603e-01 -1.42355669e+00 -2.23383650e-01 -4.08269119e+00
   9.26247478e-01  5.84456980e-01 -5.01928627e-01 -5.45637131e-01
   6.72929883e-01 -1.34969640e+00  1.73498929e+00 -2.95029342e-01
   7.98496783e-01  1.77032605e-01 -2.69206595e+00  1.26748353e-01
  -5.17131031e-01  9.58465040e-01 -5.24760962e-01  3.00141931e-01
   9.27737057e-02 -5.06614506e-01  1.23680639e+00  1.09711075e+00]] [3 2 0 1 2]
MLLITE_FIT_USING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 6 6
('OPERATION_END_ELAPSED', 0.027, 'TRAINING')
{ "alpha" : 0.0000001,   }
{ "alpha" : 0.0000001,   }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 100 },
	"classes" : [ 0, 1, 2, 3 ],
	"equations" : {
		"class_0" : {
			"intercept" : -0.249764,
			"coeffs" : [ -0.034088, 0.047886, 0.009084, -0.042919, 0.025753, -0.042496, 0.032411, 0.017392, -0.003303, -0.000838, 0.054237, -0.018617, -0.020033, -0.072613, 0.039798, -0.070648, -0.039930, -0.031152, -0.007756, 0.012360, 0.039965, -0.041931, 0.005864, 0.013420, 0.009487, -0.047506, -0.002141, -0.002503, -0.012646, 0.004098, 0.023039, -0.000580, -0.044879, -0.066652, -0.025728, 0.062745, 0.073222, -0.050289, 0.001466, -0.093689, -0.012472, -0.004735, 0.012735, 0.056510, 0.020743, -0.005499, 0.016190, -0.045699, -0.029008, -0.021522, -0.043904, 0.056282, -0.022608, -0.004164, -0.005038, 0.040178, -0.071343, -0.007547, 0.017895, -0.008320, -0.008388, -0.020937, 0.015179, -0.073968, 0.027338, 0.005516, 0.014735, 0.006003, 0.035024, 0.026232, 0.000917, 0.019292, -0.057747, 0.046539, 0.018269, -0.050856, -0.019636, 0.017174, -0.037880, 0.006587, 0.068576, -0.021022, 0.014044, 0.069827, -0.095092, 0.057562, -0.005839, -0.012111, 0.058334, 0.053692, 0.039327, 0.070143, 0.044262, 0.028203, 0.029245, 0.037150, 0.007452, -0.026724, 0.005302, 0.010378 ]
		},
		"class_1" : {
			"intercept" : -0.721142,
			"coeffs" : [ 0.026303, -0.006725, 0.003565, -0.043000, 0.021624, 0.037354, 0.046966, -0.039131, -0.001706, -0.049447, 0.010489, 0.019075, 0.031750, -0.002341, 0.027066, -0.011137, 0.022588, -0.002567, -0.033878, -0.088524, -0.015384, -0.004840, -0.048900, 0.035851, -0.010083, -0.023691, 0.007725, -0.010715, -0.006534, 0.007896, -0.060820, 0.002814, 0.003168, 0.004953, -0.014746, 0.024390, -0.052568, 0.012176, -0.002866, 0.017438, 0.010052, -0.026068, -0.006183, -0.006017, 0.034391, -0.004025, -0.019766, 0.015756, 0.002617, 0.033893, 0.004284, 0.020899, 0.040768, 0.033853, 0.003856, -0.025700, 0.022298, 0.003499, 0.020435, 0.010202, 0.019919, -0.005402, 0.011443, -0.005818, -0.006753, 0.015513, -0.010535, 0.030824, -0.004498, -0.002330, 0.005735, -0.028815, 0.045041, 0.019202, -0.000205, -0.018902, 0.022190, 0.012523, 0.069980, 0.015162, 0.013834, 0.038073, 0.037931, -0.020212, -0.017106, 0.014184, -0.002691, 0.011076, 0.015652, -0.018810, -0.029814, -0.038810, 0.018374, -0.034143, -0.009092, -0.048827, -0.002948, 0.069434, 0.002573, -0.023575 ]
		},
		"class_2" : {
			"intercept" : -0.371580,
			"coeffs" : [ 0.000749, -0.028673, -0.004020, 0.078597, -0.028633, -0.003233, -0.038975, 0.041159, -0.045940, 0.010036, -0.034866, -0.011978, 0.019739, -0.005200, 0.012650, 0.017398, -0.017576, 0.033484, -0.002991, 0.060348, 0.020768, 0.042264, 0.025789, -0.006139, 0.023488, 0.074655, 0.061068, 0.006185, 0.010836, 0.005290, 0.001627, -0.010353, 0.036052, 0.064790, 0.026674, -0.057848, -0.031899, 0.029768, 0.040371, 0.013840, 0.059247, -0.015333, -0.058556, 0.018660, -0.071975, -0.054678, -0.018829, -0.001606, -0.040738, 0.004861, 0.009258, -0.021952, -0.062384, -0.009439, 0.007298, 0.011234, 0.032855, 0.055935, -0.022100, -0.024423, 0.028127, -0.005155, -0.004535, 0.049443, 0.024434, -0.008194, -0.007390, -0.021013, -0.023609, -0.016641, -0.032271, 0.023958, 0.037844, -0.064828, 0.011873, 0.027174, 0.006571, -0.007445, -0.048240, -0.018764, -0.019771, -0.028316, -0.033124, 0.032528, 0.081677, 0.021303, 0.014935, -0.019353, -0.020788, 0.045431, 0.028446, 0.019835, -0.050134, -0.019675, -0.015673, -0.028451, 0.038023, 0.008009, -0.006147, 0.041936 ]
		},
		"class_3" : {
			"intercept" : -0.654503,
			"coeffs" : [ 0.006419, -0.013296, -0.007335, 0.005733, -0.018201, 0.009288, -0.042305, -0.021465, 0.052181, 0.039126, -0.029900, 0.011114, -0.033003, 0.081857, -0.079889, 0.062139, 0.033954, -0.000017, 0.045007, 0.014128, -0.043519, 0.004675, 0.016688, -0.042899, -0.022466, -0.003887, -0.066883, 0.007881, 0.008569, -0.017293, 0.036491, 0.008928, 0.006007, -0.004521, 0.014710, -0.028908, 0.013450, 0.007845, -0.038306, 0.061985, -0.055060, 0.046235, 0.051721, -0.068738, 0.016808, 0.064105, 0.021904, 0.031909, 0.068342, -0.016808, 0.028814, -0.055475, 0.044601, -0.019337, -0.006191, -0.026433, 0.015496, -0.052721, -0.015970, 0.022406, -0.039583, 0.031539, -0.022787, 0.029417, -0.043925, -0.012699, 0.003533, -0.015828, -0.008358, -0.007076, 0.026349, -0.014080, -0.025565, -0.001387, -0.030164, 0.043446, -0.007890, -0.022125, 0.013946, -0.002570, -0.063332, 0.011570, -0.018764, -0.081508, 0.030609, -0.093331, -0.006565, 0.020318, -0.050286, -0.079402, -0.038421, -0.052625, -0.012047, 0.025634, -0.004478, 0.040106, -0.042445, -0.054569, -0.003156, -0.028634 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_100_tiny_option_1.json'

RELOADING_MODEL_FROM_JSON_START ('FourClass_100_tiny', 'RidgeClassifier')
MLLITE_MODEL_SET_OPTIONS RidgeClassifier {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { "alpha" : 0.0000001,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
MLLITE_RELOADING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 100 },
	"classes" : [ 0, 1, 2, 3 ],
	"equations" : {
		"class_0" : {
			"intercept" : -0.249764,
			"coeffs" : [ -0.034088, 0.047886, 0.009084, -0.042919, 0.025753, -0.042496, 0.032411, 0.017392, -0.003303, -0.000838, 0.054237, -0.018617, -0.020033, -0.072613, 0.039798, -0.070648, -0.039930, -0.031152, -0.007756, 0.012360, 0.039965, -0.041931, 0.005864, 0.013420, 0.009487, -0.047506, -0.002141, -0.002503, -0.012646, 0.004098, 0.023039, -0.000580, -0.044879, -0.066652, -0.025728, 0.062745, 0.073222, -0.050289, 0.001466, -0.093689, -0.012472, -0.004735, 0.012735, 0.056510, 0.020743, -0.005499, 0.016190, -0.045699, -0.029008, -0.021522, -0.043904, 0.056282, -0.022608, -0.004164, -0.005038, 0.040178, -0.071343, -0.007547, 0.017895, -0.008320, -0.008388, -0.020937, 0.015179, -0.073968, 0.027338, 0.005516, 0.014735, 0.006003, 0.035024, 0.026232, 0.000917, 0.019292, -0.057747, 0.046539, 0.018269, -0.050856, -0.019636, 0.017174, -0.037880, 0.006587, 0.068576, -0.021022, 0.014044, 0.069827, -0.095092, 0.057562, -0.005839, -0.012111, 0.058334, 0.053692, 0.039327, 0.070143, 0.044262, 0.028203, 0.029245, 0.037150, 0.007452, -0.026724, 0.005302, 0.010378 ]
		},
		"class_1" : {
			"intercept" : -0.721142,
			"coeffs" : [ 0.026303, -0.006725, 0.003565, -0.043000, 0.021624, 0.037354, 0.046966, -0.039131, -0.001706, -0.049447, 0.010489, 0.019075, 0.031750, -0.002341, 0.027066, -0.011137, 0.022588, -0.002567, -0.033878, -0.088524, -0.015384, -0.004840, -0.048900, 0.035851, -0.010083, -0.023691, 0.007725, -0.010715, -0.006534, 0.007896, -0.060820, 0.002814, 0.003168, 0.004953, -0.014746, 0.024390, -0.052568, 0.012176, -0.002866, 0.017438, 0.010052, -0.026068, -0.006183, -0.006017, 0.034391, -0.004025, -0.019766, 0.015756, 0.002617, 0.033893, 0.004284, 0.020899, 0.040768, 0.033853, 0.003856, -0.025700, 0.022298, 0.003499, 0.020435, 0.010202, 0.019919, -0.005402, 0.011443, -0.005818, -0.006753, 0.015513, -0.010535, 0.030824, -0.004498, -0.002330, 0.005735, -0.028815, 0.045041, 0.019202, -0.000205, -0.018902, 0.022190, 0.012523, 0.069980, 0.015162, 0.013834, 0.038073, 0.037931, -0.020212, -0.017106, 0.014184, -0.002691, 0.011076, 0.015652, -0.018810, -0.029814, -0.038810, 0.018374, -0.034143, -0.009092, -0.048827, -0.002948, 0.069434, 0.002573, -0.023575 ]
		},
		"class_2" : {
			"intercept" : -0.371580,
			"coeffs" : [ 0.000749, -0.028673, -0.004020, 0.078597, -0.028633, -0.003233, -0.038975, 0.041159, -0.045940, 0.010036, -0.034866, -0.011978, 0.019739, -0.005200, 0.012650, 0.017398, -0.017576, 0.033484, -0.002991, 0.060348, 0.020768, 0.042264, 0.025789, -0.006139, 0.023488, 0.074655, 0.061068, 0.006185, 0.010836, 0.005290, 0.001627, -0.010353, 0.036052, 0.064790, 0.026674, -0.057848, -0.031899, 0.029768, 0.040371, 0.013840, 0.059247, -0.015333, -0.058556, 0.018660, -0.071975, -0.054678, -0.018829, -0.001606, -0.040738, 0.004861, 0.009258, -0.021952, -0.062384, -0.009439, 0.007298, 0.011234, 0.032855, 0.055935, -0.022100, -0.024423, 0.028127, -0.005155, -0.004535, 0.049443, 0.024434, -0.008194, -0.007390, -0.021013, -0.023609, -0.016641, -0.032271, 0.023958, 0.037844, -0.064828, 0.011873, 0.027174, 0.006571, -0.007445, -0.048240, -0.018764, -0.019771, -0.028316, -0.033124, 0.032528, 0.081677, 0.021303, 0.014935, -0.019353, -0.020788, 0.045431, 0.028446, 0.019835, -0.050134, -0.019675, -0.015673, -0.028451, 0.038023, 0.008009, -0.006147, 0.041936 ]
		},
		"class_3" : {
			"intercept" : -0.654503,
			"coeffs" : [ 0.006419, -0.013296, -0.007335, 0.005733, -0.018201, 0.009288, -0.042305, -0.021465, 0.052181, 0.039126, -0.029900, 0.011114, -0.033003, 0.081857, -0.079889, 0.062139, 0.033954, -0.000017, 0.045007, 0.014128, -0.043519, 0.004675, 0.016688, -0.042899, -0.022466, -0.003887, -0.066883, 0.007881, 0.008569, -0.017293, 0.036491, 0.008928, 0.006007, -0.004521, 0.014710, -0.028908, 0.013450, 0.007845, -0.038306, 0.061985, -0.055060, 0.046235, 0.051721, -0.068738, 0.016808, 0.064105, 0.021904, 0.031909, 0.068342, -0.016808, 0.028814, -0.055475, 0.044601, -0.019337, -0.006191, -0.026433, 0.015496, -0.052721, -0.015970, 0.022406, -0.039583, 0.031539, -0.022787, 0.029417, -0.043925, -0.012699, 0.003533, -0.015828, -0.008358, -0.007076, 0.026349, -0.014080, -0.025565, -0.001387, -0.030164, 0.043446, -0.007890, -0.022125, 0.013946, -0.002570, -0.063332, 0.011570, -0.018764, -0.081508, 0.030609, -0.093331, -0.006565, 0.020318, -0.050286, -0.079402, -0.038421, -0.052625, -0.012047, 0.025634, -0.004478, 0.040106, -0.042445, -0.054569, -0.003156, -0.028634 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1, 2, 3 ],
	"dataset" : 	{
		"dataset_features" : 100,
		"dataset_rows" : 16
	},
	"equations" : 	{
		"class_0" : 	{
			"coeffs" : [ -0.034088, 0.047886, 0.009084, -0.042919, 0.025753, -0.042496, 0.032411, 0.017392, -0.003303, -0.000838, 0.054237, -0.018617, -0.020033, -0.072613, 0.039798, -0.070648, -0.03993, -0.031152, -0.007756, 0.01236, 0.039965, -0.041931, 0.005864, 0.01342, 0.009487, -0.047506, -0.002141, -0.002503, -0.012646, 0.004098, 0.023039, -0.00058, -0.044879, -0.066652, -0.025728, 0.062745, 0.073222, -0.050289, 0.001466, -0.093689, -0.012472, -0.004735, 0.012735, 0.05651, 0.020743, -0.005499, 0.01619, -0.045699, -0.029008, -0.021522, -0.043904, 0.056282, -0.022608, -0.004164, -0.005038, 0.040178, -0.071343, -0.007547, 0.017895, -0.00832, -0.008388, -0.020937, 0.015179, -0.073968, 0.027338, 0.005516, 0.014735, 0.006003, 0.035024, 0.026232, 0.000917, 0.019292, -0.057747, 0.046539, 0.018269, -0.050856, -0.019636, 0.017174, -0.03788, 0.006587, 0.068576, -0.021022, 0.014044, 0.069827, -0.095092, 0.057562, -0.005839, -0.012111, 0.058334, 0.053692, 0.039327, 0.070143, 0.044262, 0.028203, 0.029245, 0.03715, 0.007452, -0.026724, 0.005302, 0.010378 ],
			"intercept" : -0.249764
		},
		"class_1" : 	{
			"coeffs" : [ 0.026303, -0.006725, 0.003565, -0.043, 0.021624, 0.037354, 0.046966, -0.039131, -0.001706, -0.049447, 0.010489, 0.019075, 0.03175, -0.002341, 0.027066, -0.011137, 0.022588, -0.002567, -0.033878, -0.088524, -0.015384, -0.00484, -0.0489, 0.035851, -0.010083, -0.023691, 0.007725, -0.010715, -0.006534, 0.007896, -0.06082, 0.002814, 0.003168, 0.004953, -0.014746, 0.02439, -0.052568, 0.012176, -0.002866, 0.017438, 0.010052, -0.026068, -0.006183, -0.006017, 0.034391, -0.004025, -0.019766, 0.015756, 0.002617, 0.033893, 0.004284, 0.020899, 0.040768, 0.033853, 0.003856, -0.0257, 0.022298, 0.003499, 0.020435, 0.010202, 0.019919, -0.005402, 0.011443, -0.005818, -0.006753, 0.015513, -0.010535, 0.030824, -0.004498, -0.00233, 0.005735, -0.028815, 0.045041, 0.019202, -0.000205, -0.018902, 0.02219, 0.012523, 0.06998, 0.015162, 0.013834, 0.038073, 0.037931, -0.020212, -0.017106, 0.014184, -0.002691, 0.011076, 0.015652, -0.01881, -0.029814, -0.03881, 0.018374, -0.034143, -0.009092, -0.048827, -0.002948, 0.069434, 0.002573, -0.023575 ],
			"intercept" : -0.721142
		},
		"class_2" : 	{
			"coeffs" : [ 0.000749, -0.028673, -0.00402, 0.078597, -0.028633, -0.003233, -0.038975, 0.041159, -0.04594, 0.010036, -0.034866, -0.011978, 0.019739, -0.0052, 0.01265, 0.017398, -0.017576, 0.033484, -0.002991, 0.060348, 0.020768, 0.042264, 0.025789, -0.006139, 0.023488, 0.074655, 0.061068, 0.006185, 0.010836, 0.00529, 0.001627, -0.010353, 0.036052, 0.06479, 0.026674, -0.057848, -0.031899, 0.029768, 0.040371, 0.01384, 0.059247, -0.015333, -0.058556, 0.01866, -0.071975, -0.054678, -0.018829, -0.001606, -0.040738, 0.004861, 0.009258, -0.021952, -0.062384, -0.009439, 0.007298, 0.011234, 0.032855, 0.055935, -0.0221, -0.024423, 0.028127, -0.005155, -0.004535, 0.049443, 0.024434, -0.008194, -0.00739, -0.021013, -0.023609, -0.016641, -0.032271, 0.023958, 0.037844, -0.064828, 0.011873, 0.027174, 0.006571, -0.007445, -0.04824, -0.018764, -0.019771, -0.028316, -0.033124, 0.032528, 0.081677, 0.021303, 0.014935, -0.019353, -0.020788, 0.045431, 0.028446, 0.019835, -0.050134, -0.019675, -0.015673, -0.028451, 0.038023, 0.008009, -0.006147, 0.041936 ],
			"intercept" : -0.37158
		},
		"class_3" : 	{
			"coeffs" : [ 0.006419, -0.013296, -0.007335, 0.005733, -0.018201, 0.009288, -0.042305, -0.021465, 0.052181, 0.039126, -0.0299, 0.011114, -0.033003, 0.081857, -0.079889, 0.062139, 0.033954, -1.7e-05, 0.045007, 0.014128, -0.043519, 0.004675, 0.016688, -0.042899, -0.022466, -0.003887, -0.066883, 0.007881, 0.008569, -0.017293, 0.036491, 0.008928, 0.006007, -0.004521, 0.01471, -0.028908, 0.01345, 0.007845, -0.038306, 0.061985, -0.05506, 0.046235, 0.051721, -0.068738, 0.016808, 0.064105, 0.021904, 0.031909, 0.068342, -0.016808, 0.028814, -0.055475, 0.044601, -0.019337, -0.006191, -0.026433, 0.015496, -0.052721, -0.01597, 0.022406, -0.039583, 0.031539, -0.022787, 0.029417, -0.043925, -0.012699, 0.003533, -0.015828, -0.008358, -0.007076, 0.026349, -0.01408, -0.025565, -0.001387, -0.030164, 0.043446, -0.00789, -0.022125, 0.013946, -0.00257, -0.063332, 0.01157, -0.018764, -0.081508, 0.030609, -0.093331, -0.006565, 0.020318, -0.050286, -0.079402, -0.038421, -0.052625, -0.012047, 0.025634, -0.004478, 0.040106, -0.042445, -0.054569, -0.003156, -0.028634 ],
			"intercept" : -0.654503
		}
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_il8", "version" : "2024-W14" },
	"options" :  { "alpha" : 0.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
RELOADING_MODEL_FROM_JSON_END ('FourClass_100_tiny', 'RidgeClassifier')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0.096  0.096  0.0957 0.7123]
 [0.0963 0.0953 0.7118 0.0966]
 [0.7107 0.0967 0.0965 0.0961]
 [0.0959 0.7104 0.0974 0.0962]
 [0.0967 0.0957 0.7111 0.0965]
 [0.0966 0.0962 0.711  0.0962]
 [0.7137 0.0956 0.0957 0.0951]
 [0.0955 0.0967 0.0952 0.7125]
 [0.7121 0.0961 0.0957 0.0961]
 [0.709  0.0973 0.0977 0.0961]
 [0.0976 0.0965 0.0968 0.7092]
 [0.7121 0.0964 0.0954 0.096 ]
 [0.0953 0.712  0.0967 0.096 ]
 [0.0967 0.0963 0.096  0.711 ]
 [0.0958 0.7108 0.0964 0.097 ]
 [0.0962 0.0965 0.71   0.0972]]
(16, 4)
(16, 4) float32
MODEL_PERFS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': '{"alpha" : 0.0000001}', 'dataset': 'FourClass_100_tiny', 'size': 16, 'accuracy': 1.0, 'auc': 1.0}
WRITING_PERF_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_100_tiny_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': '{"alpha" : 0.0000001}', 'dataset': 'FourClass_100_tiny', 'training_time_in_sec': 0.027, 'prediction_time_in_sec': 0.0}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 0 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 1 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 2 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 3 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 4 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 5 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 6 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 7 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 8 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 9 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 10 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 11 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 12 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 13 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 14 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 15 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 16 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 17 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 18 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 19 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 20 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 21 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 22 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 23 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 24 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 25 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 26 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 27 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 28 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 29 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 30 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 31 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 32 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 33 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 34 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 35 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 36 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 37 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 38 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 39 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 40 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 41 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 42 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 43 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 44 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 45 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 46 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 47 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 48 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 49 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 50 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 51 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 52 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 53 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 54 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 55 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 56 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 57 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 58 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 59 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 60 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 61 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 62 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 63 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 64 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 65 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 66 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 67 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 68 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 69 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 70 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 71 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 72 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 73 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 74 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 75 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 76 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 77 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 78 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 79 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 80 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 81 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 82 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 83 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 84 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 85 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 86 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 87 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 88 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 89 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 90 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 91 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 92 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 93 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 94 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 95 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 96 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 97 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 98 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 99 100
{
   "Contributions" : {
      "X_0" : [ 0.001550, -0.000988, -0.000132, -0.000431 ],
      "X_1" : [ -0.000257, -0.000200, 0.000366, 0.000092 ],
      "X_2" : [ 0.000210, -0.000113, 0.000027, -0.000124 ],
      "X_3" : [ 0.000768, 0.000596, -0.001213, -0.000151 ],
      "X_4" : [ -0.000230, -0.000143, 0.000054, 0.000319 ],
      "X_5" : [ -0.000754, 0.000665, -0.000096, 0.000186 ],
      "X_6" : [ -0.001171, -0.002104, 0.001366, 0.001908 ],
      "X_7" : [ 0.000509, -0.000411, 0.000159, -0.000257 ],
      "X_8" : [ -0.000324, -0.000327, 0.002749, -0.002097 ],
      "X_9" : [ 0.000262, -0.002284, 0.000392, 0.001630 ],
      "X_10" : [ 0.002360, 0.000140, -0.001241, -0.001258 ],
      "X_11" : [ 0.001076, -0.001305, 0.000228, 0.000001 ],
      "X_12" : [ 0.000040, -0.000414, -0.000898, 0.001272 ],
      "X_13" : [ 0.003275, -0.000327, 0.000026, -0.002974 ],
      "X_14" : [ 0.001693, 0.000337, -0.000070, -0.001960 ],
      "X_15" : [ 0.002814, -0.000750, -0.000696, -0.001368 ],
      "X_16" : [ 0.001632, -0.001039, 0.000344, -0.000937 ],
      "X_17" : [ 0.000147, -0.000267, 0.000333, -0.000213 ],
      "X_18" : [ 0.000429, -0.000201, -0.000049, -0.000180 ],
      "X_19" : [ 0.001066, -0.006354, 0.004572, 0.000717 ],
      "X_20" : [ 0.001653, -0.000991, -0.000362, -0.000300 ],
      "X_21" : [ -0.000277, -0.000002, 0.000212, 0.000068 ],
      "X_22" : [ 0.000525, -0.002490, 0.001233, 0.000733 ],
      "X_23" : [ -0.000355, -0.001650, 0.000215, 0.001790 ],
      "X_24" : [ 0.000196, -0.000194, -0.000189, 0.000187 ],
      "X_25" : [ -0.001673, -0.001513, 0.003734, -0.000548 ],
      "X_26" : [ -0.000539, -0.001025, 0.000677, 0.000887 ],
      "X_27" : [ -0.000212, -0.000483, 0.000477, 0.000218 ],
      "X_28" : [ -0.000024, -0.000225, 0.000301, -0.000051 ],
      "X_29" : [ -0.000073, -0.000124, -0.000148, 0.000345 ],
      "X_30" : [ 0.001996, -0.003667, 0.000302, 0.001369 ],
      "X_31" : [ -0.000142, -0.000164, 0.000359, -0.000054 ],
      "X_32" : [ 0.001461, -0.000723, -0.000428, -0.000310 ],
      "X_33" : [ -0.000438, -0.000154, 0.000811, -0.000219 ],
      "X_34" : [ 0.000085, -0.000127, 0.000154, -0.000111 ],
      "X_35" : [ 0.002220, -0.000976, -0.000456, -0.000787 ],
      "X_36" : [ 0.002134, -0.001488, -0.000355, -0.000291 ],
      "X_37" : [ 0.000540, -0.000012, -0.000720, 0.000191 ],
      "X_38" : [ 0.000071, -0.000066, 0.000929, -0.000934 ],
      "X_39" : [ 0.007864, -0.002461, -0.001433, -0.003970 ],
      "X_40" : [ -0.000373, -0.000989, 0.001565, -0.000204 ],
      "X_41" : [ -0.000086, 0.000424, 0.000229, -0.000567 ],
      "X_42" : [ -0.000131, -0.000773, -0.000591, 0.001495 ],
      "X_43" : [ -0.001462, -0.000014, -0.000156, 0.001632 ],
      "X_44" : [ 0.000049, -0.000708, 0.000789, -0.000129 ],
      "X_45" : [ -0.000179, -0.000200, -0.002565, 0.002944 ],
      "X_46" : [ 0.000545, -0.000999, 0.000329, 0.000126 ],
      "X_47" : [ 0.000840, -0.000012, 0.000005, -0.000834 ],
      "X_48" : [ 0.000780, -0.000362, -0.001688, 0.001270 ],
      "X_49" : [ 0.005595, -0.007840, -0.001241, 0.003486 ],
      "X_50" : [ -0.000881, 0.000093, 0.000134, 0.000654 ],
      "X_51" : [ 0.002094, 0.000253, -0.001065, -0.001282 ],
      "X_52" : [ 0.001440, -0.002078, 0.001322, -0.000684 ],
      "X_53" : [ 0.000631, -0.002029, 0.000200, 0.001198 ],
      "X_54" : [ -0.000023, 0.000062, -0.000247, 0.000208 ],
      "X_55" : [ 0.002990, -0.001651, 0.000411, -0.001751 ],
      "X_56" : [ 0.000744, -0.000460, -0.000039, -0.000245 ],
      "X_57" : [ 0.000061, 0.000043, 0.000463, -0.000566 ],
      "X_58" : [ 0.000207, -0.000312, 0.000238, -0.000133 ],
      "X_59" : [ 0.000380, -0.000349, 0.000001, -0.000033 ],
      "X_60" : [ -0.000117, -0.000917, -0.001902, 0.002936 ],
      "X_61" : [ 0.000986, 0.000151, 0.000174, -0.001311 ],
      "X_62" : [ -0.000302, -0.000566, -0.000522, 0.001389 ],
      "X_63" : [ -0.000247, -0.000112, 0.000423, -0.000065 ],
      "X_64" : [ 0.000248, -0.000266, -0.000270, 0.000288 ],
      "X_65" : [ -0.000241, -0.000624, 0.000420, 0.000445 ],
      "X_66" : [ 0.004760, -0.003910, -0.001189, 0.000338 ],
      "X_67" : [ -0.000205, -0.003190, 0.001472, 0.001923 ],
      "X_68" : [ 0.002185, -0.000550, -0.000990, -0.000645 ],
      "X_69" : [ 0.000451, -0.000184, -0.000374, 0.000106 ],
      "X_70" : [ -0.000107, -0.000119, 0.000958, -0.000731 ],
      "X_71" : [ -0.000148, 0.000379, -0.000633, 0.000403 ],
      "X_72" : [ 0.001917, -0.001695, -0.001169, 0.000946 ],
      "X_73" : [ 0.000780, 0.000382, -0.001471, 0.000309 ],
      "X_74" : [ 0.000006, -0.000015, 0.000272, -0.000264 ],
      "X_75" : [ 0.003353, 0.000275, -0.001163, -0.002466 ],
      "X_76" : [ 0.000551, -0.000371, 0.000013, -0.000193 ],
      "X_77" : [ -0.000830, -0.000307, 0.000054, 0.001083 ],
      "X_78" : [ 0.002303, -0.003566, 0.002119, -0.000856 ],
      "X_79" : [ -0.000648, -0.002025, 0.002668, 0.000004 ],
      "X_80" : [ -0.001802, -0.001341, 0.000136, 0.003007 ],
      "X_81" : [ 0.000261, -0.001136, 0.001425, -0.000549 ],
      "X_82" : [ 0.000024, -0.000098, 0.000400, -0.000325 ],
      "X_83" : [ -0.001409, -0.000270, -0.000900, 0.002578 ],
      "X_84" : [ 0.002632, -0.000991, -0.000558, -0.001083 ],
      "X_85" : [ 0.000559, -0.001005, -0.000721, 0.001167 ],
      "X_86" : [ -0.000015, -0.000007, 0.000161, -0.000139 ],
      "X_87" : [ -0.000110, -0.000098, 0.000074, 0.000133 ],
      "X_88" : [ 0.000131, -0.000940, 0.000082, 0.000727 ],
      "X_89" : [ 0.002978, -0.002163, 0.000299, -0.001113 ],
      "X_90" : [ 0.002707, -0.001966, 0.001445, -0.002187 ],
      "X_91" : [ 0.002069, -0.000894, 0.000640, -0.001815 ],
      "X_92" : [ 0.000663, 0.000159, -0.000716, -0.000106 ],
      "X_93" : [ 0.000543, -0.000728, 0.000203, -0.000019 ],
      "X_94" : [ 0.000656, -0.000427, -0.000232, 0.000003 ],
      "X_95" : [ 0.001742, -0.002260, -0.000273, 0.000791 ],
      "X_96" : [ 0.000226, -0.000254, 0.001266, -0.001238 ],
      "X_97" : [ 0.001107, -0.002097, 0.000124, 0.000866 ],
      "X_98" : [ 0.000192, 0.000075, -0.000121, -0.000146 ],
      "X_99" : [ 0.000574, -0.001302, 0.001914, -0.001186 ]   
   },
   "Most_Contributive_Features_By_Class" : {
      "class_0" : [ 39, 49, 66, 75, 13, 55, 89, 15, 90, 84 ],
      "class_1" : [ 49, 19, 66, 30, 78, 67, 22, 39, 9, 95 ],
      "class_2" : [ 19, 25, 8, 79, 45, 78, 99, 60, 48, 40 ],
      "class_3" : [ 39, 49, 80, 13, 45, 60, 83, 75, 90, 8 ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_100_tiny_option_1_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_100_tiny_option_1_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('FourClass_100_tiny', 'RidgeClassifier', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('FourClass_100_tiny', 'RidgeClassifier', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('FourClass_100_tiny', 'RidgeClassifier', 'duckdb')
ore_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."Score_3" AS "Score_3",
  arg_max_cte."Proba_3" AS "Proba_3",
  CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN LN( arg_max_cte."Proba_3" ) ELSE -1.79769313486231e+308 END AS "LogProba_3",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('FourClass_100_tiny', 'RidgeClassifier', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 16 entries, 0 to 15
Data columns (total 100 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     16 non-null     float32
 1   X_1     16 non-null     float32
 2   X_2     16 non-null     float32
 3   X_3     16 non-null     float32
 4   X_4     16 non-null     float32
 5   X_5     16 non-null     float32
 6   X_6     16 non-null     float32
 7   X_7     16 non-null     float32
 8   X_8     16 non-null     float32
 9   X_9     16 non-null     float32
 10  X_10    16 non-null     float32
 11  X_11    16 non-null     float32
 12  X_12    16 non-null     float32
 13  X_13    16 non-null     float32
 14  X_14    16 non-null     float32
 15  X_15    16 non-null     float32
 16  X_16    16 non-null     float32
 17  X_17    16 non-null     float32
 18  X_18    16 non-null     float32
 19  X_19    16 non-null     float32
 20  X_20    16 non-null     float32
 21  X_21    16 non-null     float32
 22  X_22    16 non-null     float32
 23  X_23    16 non-null     float32
 24  X_24    16 non-null     float32
 25  X_25    16 non-null     float32
 26  X_26    16 non-null     float32
 27  X_27    16 non-null     float32
 28  X_28    16 non-null     float32
 29  X_29    16 non-null     float32
 30  X_30    16 non-null     float32
 31  X_31    16 non-null     float32
 32  X_32    16 non-null     float32
 33  X_33    16 non-null     float32
 34  X_34    16 non-null     float32
 35  X_35    16 non-null     float32
 36  X_36    16 non-null     float32
 37  X_37    16 non-null     float32
 38  X_38    16 non-null     float32
 39  X_39    16 non-null     float32
 40  X_40    16 non-null     float32
 41  X_41    16 non-null     float32
 42  X_42    16 non-null     float32
 43  X_43    16 non-null     float32
 44  X_44    16 non-null     float32
 45  X_45    16 non-null     float32
 46  X_46    16 non-null     float32
 47  X_47    16 non-null     float32
 48  X_48    16 non-null     float32
 49  X_49    16 non-null     float32
 50  X_50    16 non-null     float32
 51  X_51    16 non-null     float32
 52  X_52    16 non-null     float32
 53  X_53    16 non-null     float32
 54  X_54    16 non-null     float32
 55  X_55    16 non-null     float32
 56  X_56    16 non-null     float32
 57  X_57    16 non-null     float32
 58  X_58    16 non-null     float32
 59  X_59    16 non-null     float32
 60  X_60    16 non-null     float32
 61  X_61    16 non-null     float32
 62  X_62    16 non-null     float32
 63  X_63    16 non-null     float32
 64  X_64    16 non-null     float32
 65  X_65    16 non-null     float32
 66  X_66    16 non-null     float32
 67  X_67    16 non-null     float32
 68  X_68    16 non-null     float32
 69  X_69    16 non-null     float32
 70  X_70    16 non-null     float32
 71  X_71    16 non-null     float32
 72  X_72    16 non-null     float32
 73  X_73    16 non-null     float32
 74  X_74    16 non-null     float32
 75  X_75    16 non-null     float32
 76  X_76    16 non-null     float32
 77  X_77    16 non-null     float32
 78  X_78    16 non-null     float32
 79  X_79    16 non-null     float32
 80  X_80    16 non-null     float32
 81  X_81    16 non-null     float32
 82  X_82    16 non-null     float32
 83  X_83    16 non-null     float32
 84  X_84    16 non-null     float32
 85  X_85    16 non-null     float32
 86  X_86    16 non-null     float32
 87  X_87    16 non-null     float32
 88  X_88    16 non-null     float32
 89  X_89    16 non-null     float32
 90  X_90    16 non-null     float32
 91  X_91    16 non-null     float32
 92  X_92    16 non-null     float32
 93  X_93    16 non-null     float32
 94  X_94    16 non-null     float32
 95  X_95    16 non-null     float32
 96  X_96    16 non-null     float32
 97  X_97    16 non-null     float32
 98  X_98    16 non-null     float32
 99  X_99    16 non-null     float32
dtypes: float32(100)
memory usage: 6.4 KB
            X_0       X_1       X_2  ...      X_97      X_98      X_99
index                                ...                              
0      0.935563  2.247500 -1.070940  ...  0.677246 -0.177791 -0.249523
1      0.293314 -1.260450 -3.448018  ...  0.327620  0.164190  2.205145
2      0.596661  1.589408 -0.810968  ... -1.275388  0.026429 -0.565740
3      1.456436 -2.080544  0.694122  ...  0.753116  1.059889  0.328791
4     -1.193096 -0.499944  0.528137  ... -0.506615  1.236806  1.097111
5      0.004588  0.415182  1.122491  ...  0.469463 -1.470150 -1.415749
6     -0.566579  0.216205  0.537669  ... -0.327327  0.253076 -0.257734
7      0.094549 -0.840780 -0.040313  ... -1.588936 -2.097391 -1.175138
8     -1.035038  0.028587  2.388027  ...  0.137861 -0.100060  0.578063
9      0.104933  1.209696  0.297718  ... -0.028398  0.305889  1.176062
10     1.684619 -0.394139  0.273230  ... -0.067597  0.335744 -0.537372
11     0.833314  0.023464 -1.279124  ...  0.708903 -0.350409 -0.664509
12     0.236087  1.340066 -0.531894  ...  1.625548  0.078043 -0.185077
13    -1.152497 -1.187080 -1.877030  ... -0.309107  0.388650 -0.153948
14     1.760033 -1.403882 -1.183618  ...  0.997268 -2.253838 -1.221147
15     1.879904 -0.295988  0.027052  ...  0.519573 -0.809065  0.313258

[16 rows x 100 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 16 entries, 0 to 15
Data columns (total 15 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          16 non-null     int64  
 1   Score_0        16 non-null     float64
 2   Proba_0        16 non-null     float64
 3   LogProba_0     16 non-null     float64
 4   Score_1        16 non-null     float64
 5   Proba_1        16 non-null     float64
 6   LogProba_1     16 non-null     float64
 7   Score_2        16 non-null     float64
 8   Proba_2        16 non-null     float64
 9   LogProba_2     16 non-null     float64
 10  Score_3        16 non-null     float64
 11  Proba_3        16 non-null     float64
 12  LogProba_3     16 non-null     float64
 13  Decision       16 non-null     int64  
 14  DecisionProba  16 non-null     float64
dtypes: float64(13), int64(2)
memory usage: 2.0 KB
    index   Score_0   Proba_0  ...  LogProba_3  Decision  DecisionProba
0       0 -1.000049  0.095998  ...   -0.339263         3       0.712295
1       1 -1.003191  0.096302  ...   -2.337552         2       0.711822
2       2  0.999983  0.710705  ...   -2.342256         0       0.710705
3       3 -1.004568  0.095941  ...   -2.341429         1       0.710443
4       4 -0.995634  0.096674  ...   -2.338676         2       0.711149
5       5 -0.995209  0.096608  ...   -2.341846         2       0.711011
6       6  1.012615  0.713651  ...   -2.352754         0       0.713651
7       7 -1.002355  0.095516  ...   -0.338942         3       0.712524
8       8  1.003305  0.712096  ...   -2.342179         0       0.712096
9       9  0.993916  0.708976  ...   -2.342550         0       0.708976
10     10 -0.993234  0.097587  ...   -0.343626         3       0.709194
11     11  1.002463  0.712103  ...   -2.342962         0       0.712103
12     12 -1.009192  0.095302  ...   -2.343269         1       0.712004
13     13 -0.996648  0.096680  ...   -0.341086         3       0.710998
14     14 -1.008571  0.095754  ...   -2.333013         1       0.710814
15     15 -1.003634  0.096248  ...   -2.330992         2       0.710019

[16 rows x 15 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Score_3', 'Proba_3',
       'LogProba_3', 'Decision', 'DecisionProba'],
      dtype='object')
    index   Score_0  SQL_Proba_0  ...  Py_Proba_2  Py_Proba_3  Py_Decision
0       0 -1.000049     0.095998  ...    0.095685    0.712295            3
1       1 -1.003191     0.096302  ...    0.711822    0.096564            2
2       2  0.999983     0.710705  ...    0.096522    0.096110            0
3       3 -1.004568     0.095941  ...    0.097426    0.096191            1
4       4 -0.995634     0.096674  ...    0.711149    0.096455            2
5       5 -0.995209     0.096608  ...    0.711009    0.096150            2
6       6  1.012615     0.713651  ...    0.095672    0.095107            0
7       7 -1.002355     0.095516  ...    0.095226    0.712522            3
8       8  1.003305     0.712096  ...    0.095700    0.096118            0
9       9  0.993916     0.708976  ...    0.097676    0.096083            0
10     10 -0.993234     0.097587  ...    0.096768    0.709195            3
11     11  1.002463     0.712103  ...    0.095421    0.096043            0
12     12 -1.009192     0.095302  ...    0.096681    0.096013            1
13     13 -0.996648     0.096680  ...    0.095985    0.710998            3
14     14 -1.008571     0.095754  ...    0.096430    0.097003            1
15     15 -1.003634     0.096248  ...    0.710020    0.097199            2

[16 rows x 20 columns]
MLLITE_CLASS_SQL_ERROR ('FourClass_100_tiny', 'RidgeClassifier', 'duckdb') ('Py_Proba_0', 'SQL_Proba_0') 3.5809719670185786e-07
    Py_Proba_0  SQL_Proba_0   SQL_Error_0
0     0.095998     0.095998 -1.678933e-07
1     0.096302     0.096302 -1.043238e-07
2     0.710705     0.710705 -5.904024e-08
3     0.095941     0.095941  2.114663e-07
4     0.096674     0.096674  3.172872e-07
5     0.096608     0.096608  5.042468e-07
6     0.713650     0.713651 -7.780936e-07
7     0.095517     0.095516  6.199519e-07
8     0.712096     0.712096  4.427204e-07
9     0.708976     0.708976 -1.942763e-07
10    0.097586     0.097587 -5.317727e-07
11    0.712103     0.712103 -3.004712e-07
12    0.095301     0.095302 -7.218465e-07
13    0.096681     0.096680  1.484955e-07
14    0.095755     0.095754  5.751162e-07
15    0.096249     0.096248  5.255304e-08
MLLITE_CLASS_SQL_ERROR ('FourClass_100_tiny', 'RidgeClassifier', 'duckdb') ('Py_Proba_1', 'SQL_Proba_1') 4.4533168377415555e-07
    Py_Proba_1  SQL_Proba_1   SQL_Error_1
0     0.096022     0.096021  3.598172e-07
1     0.095312     0.095312 -1.065145e-07
2     0.096663     0.096662  1.261996e-07
3     0.710442     0.710443 -9.274083e-07
4     0.095721     0.095722 -1.877448e-07
5     0.096232     0.096231  6.947879e-07
6     0.095571     0.095570  4.393068e-07
7     0.096735     0.096734  7.753154e-07
8     0.096086     0.096086  2.394426e-07
9     0.097266     0.097266  2.472961e-08
10    0.096451     0.096451  3.464913e-07
11    0.096433     0.096433  5.874282e-07
12    0.712004     0.712004  5.687884e-07
13    0.096336     0.096336  2.170079e-07
14    0.710813     0.710814 -1.200223e-06
15    0.096533     0.096533 -3.241018e-07
MLLITE_CLASS_SQL_ERROR ('FourClass_100_tiny', 'RidgeClassifier', 'duckdb') ('Py_Proba_2', 'SQL_Proba_2') 3.233464754290663e-07
    Py_Proba_2  SQL_Proba_2   SQL_Error_2
0     0.095685     0.095685  1.030950e-07
1     0.711822     0.711822  3.571056e-07
2     0.096522     0.096522  3.205839e-07
3     0.097426     0.097426  1.109612e-08
4     0.711149     0.711149  1.344139e-07
5     0.711009     0.711011 -1.347918e-06
6     0.095672     0.095672  1.548922e-07
7     0.095226     0.095226  1.061845e-07
8     0.095700     0.095700 -3.043652e-07
9     0.097676     0.097676 -9.566072e-08
10    0.096768     0.096768 -4.884689e-07
11    0.095421     0.095421 -5.074696e-07
12    0.096681     0.096681 -6.623299e-08
13    0.095985     0.095986 -3.029185e-07
14    0.096430     0.096429  3.055915e-07
15    0.710020     0.710019  5.675471e-07
MLLITE_CLASS_SQL_ERROR ('FourClass_100_tiny', 'RidgeClassifier', 'duckdb') ('Py_Proba_3', 'SQL_Proba_3') 3.754446465933578e-07
    Py_Proba_3  SQL_Proba_3   SQL_Error_3
0     0.712295     0.712295 -2.205131e-07
1     0.096564     0.096564 -1.835202e-07
2     0.096110     0.096111 -3.579409e-07
3     0.096191     0.096190  6.675929e-07
4     0.096455     0.096455 -3.533633e-07
5     0.096150     0.096150  1.861361e-07
6     0.095107     0.095107  2.584005e-07
7     0.712522     0.712524 -1.419495e-06
8     0.096118     0.096118 -3.852484e-07
9     0.096083     0.096082  3.620650e-07
10    0.709195     0.709194  5.694422e-07
11    0.096043     0.096043  1.609079e-07
12    0.096013     0.096013  2.043900e-07
13    0.710998     0.710998 -1.147389e-07
14    0.097003     0.097003  2.748118e-07
15    0.097199     0.097199 -2.885477e-07
MLLITE_CLASS_SQL_EXECUTION_STATUS ('FourClass_100_tiny', 'RidgeClassifier', 'duckdb', 'Success')
    Py_Decision  SQL_Decision
0             3             3
1             2             2
2             0             0
3             1             1
4             2             2
5             2             2
6             0             0
7             3             3
8             0             0
9             0             0
10            3             3
11            0             0
12            1             1
13            3             3
14            1             1
15            2             2
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_100_tiny_option_1_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('FourClass_100_tiny', 'RidgeClassifier', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('FourClass_100_tiny', 'RidgeClassifier', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('FourClass_100_tiny', 'RidgeClassifier', 'sqlite')
ore_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."Score_3" AS "Score_3",
  arg_max_cte."Proba_3" AS "Proba_3",
  CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN LN( arg_max_cte."Proba_3" ) ELSE -1.79769313486231e+308 END AS "LogProba_3",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('FourClass_100_tiny', 'RidgeClassifier', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 16 entries, 0 to 15
Data columns (total 100 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     16 non-null     float32
 1   X_1     16 non-null     float32
 2   X_2     16 non-null     float32
 3   X_3     16 non-null     float32
 4   X_4     16 non-null     float32
 5   X_5     16 non-null     float32
 6   X_6     16 non-null     float32
 7   X_7     16 non-null     float32
 8   X_8     16 non-null     float32
 9   X_9     16 non-null     float32
 10  X_10    16 non-null     float32
 11  X_11    16 non-null     float32
 12  X_12    16 non-null     float32
 13  X_13    16 non-null     float32
 14  X_14    16 non-null     float32
 15  X_15    16 non-null     float32
 16  X_16    16 non-null     float32
 17  X_17    16 non-null     float32
 18  X_18    16 non-null     float32
 19  X_19    16 non-null     float32
 20  X_20    16 non-null     float32
 21  X_21    16 non-null     float32
 22  X_22    16 non-null     float32
 23  X_23    16 non-null     float32
 24  X_24    16 non-null     float32
 25  X_25    16 non-null     float32
 26  X_26    16 non-null     float32
 27  X_27    16 non-null     float32
 28  X_28    16 non-null     float32
 29  X_29    16 non-null     float32
 30  X_30    16 non-null     float32
 31  X_31    16 non-null     float32
 32  X_32    16 non-null     float32
 33  X_33    16 non-null     float32
 34  X_34    16 non-null     float32
 35  X_35    16 non-null     float32
 36  X_36    16 non-null     float32
 37  X_37    16 non-null     float32
 38  X_38    16 non-null     float32
 39  X_39    16 non-null     float32
 40  X_40    16 non-null     float32
 41  X_41    16 non-null     float32
 42  X_42    16 non-null     float32
 43  X_43    16 non-null     float32
 44  X_44    16 non-null     float32
 45  X_45    16 non-null     float32
 46  X_46    16 non-null     float32
 47  X_47    16 non-null     float32
 48  X_48    16 non-null     float32
 49  X_49    16 non-null     float32
 50  X_50    16 non-null     float32
 51  X_51    16 non-null     float32
 52  X_52    16 non-null     float32
 53  X_53    16 non-null     float32
 54  X_54    16 non-null     float32
 55  X_55    16 non-null     float32
 56  X_56    16 non-null     float32
 57  X_57    16 non-null     float32
 58  X_58    16 non-null     float32
 59  X_59    16 non-null     float32
 60  X_60    16 non-null     float32
 61  X_61    16 non-null     float32
 62  X_62    16 non-null     float32
 63  X_63    16 non-null     float32
 64  X_64    16 non-null     float32
 65  X_65    16 non-null     float32
 66  X_66    16 non-null     float32
 67  X_67    16 non-null     float32
 68  X_68    16 non-null     float32
 69  X_69    16 non-null     float32
 70  X_70    16 non-null     float32
 71  X_71    16 non-null     float32
 72  X_72    16 non-null     float32
 73  X_73    16 non-null     float32
 74  X_74    16 non-null     float32
 75  X_75    16 non-null     float32
 76  X_76    16 non-null     float32
 77  X_77    16 non-null     float32
 78  X_78    16 non-null     float32
 79  X_79    16 non-null     float32
 80  X_80    16 non-null     float32
 81  X_81    16 non-null     float32
 82  X_82    16 non-null     float32
 83  X_83    16 non-null     float32
 84  X_84    16 non-null     float32
 85  X_85    16 non-null     float32
 86  X_86    16 non-null     float32
 87  X_87    16 non-null     float32
 88  X_88    16 non-null     float32
 89  X_89    16 non-null     float32
 90  X_90    16 non-null     float32
 91  X_91    16 non-null     float32
 92  X_92    16 non-null     float32
 93  X_93    16 non-null     float32
 94  X_94    16 non-null     float32
 95  X_95    16 non-null     float32
 96  X_96    16 non-null     float32
 97  X_97    16 non-null     float32
 98  X_98    16 non-null     float32
 99  X_99    16 non-null     float32
dtypes: float32(100)
memory usage: 6.4 KB
            X_0       X_1       X_2  ...      X_97      X_98      X_99
index                                ...                              
0      0.935563  2.247500 -1.070940  ...  0.677246 -0.177791 -0.249523
1      0.293314 -1.260450 -3.448018  ...  0.327620  0.164190  2.205145
2      0.596661  1.589408 -0.810968  ... -1.275388  0.026429 -0.565740
3      1.456436 -2.080544  0.694122  ...  0.753116  1.059889  0.328791
4     -1.193096 -0.499944  0.528137  ... -0.506615  1.236806  1.097111
5      0.004588  0.415182  1.122491  ...  0.469463 -1.470150 -1.415749
6     -0.566579  0.216205  0.537669  ... -0.327327  0.253076 -0.257734
7      0.094549 -0.840780 -0.040313  ... -1.588936 -2.097391 -1.175138
8     -1.035038  0.028587  2.388027  ...  0.137861 -0.100060  0.578063
9      0.104933  1.209696  0.297718  ... -0.028398  0.305889  1.176062
10     1.684619 -0.394139  0.273230  ... -0.067597  0.335744 -0.537372
11     0.833314  0.023464 -1.279124  ...  0.708903 -0.350409 -0.664509
12     0.236087  1.340066 -0.531894  ...  1.625548  0.078043 -0.185077
13    -1.152497 -1.187080 -1.877030  ... -0.309107  0.388650 -0.153948
14     1.760033 -1.403882 -1.183618  ...  0.997268 -2.253838 -1.221147
15     1.879904 -0.295988  0.027052  ...  0.519573 -0.809065  0.313258

[16 rows x 100 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 16 entries, 0 to 15
Data columns (total 15 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          16 non-null     int64  
 1   Score_0        16 non-null     float64
 2   Proba_0        16 non-null     float64
 3   LogProba_0     16 non-null     float64
 4   Score_1        16 non-null     float64
 5   Proba_1        16 non-null     float64
 6   LogProba_1     16 non-null     float64
 7   Score_2        16 non-null     float64
 8   Proba_2        16 non-null     float64
 9   LogProba_2     16 non-null     float64
 10  Score_3        16 non-null     float64
 11  Proba_3        16 non-null     float64
 12  LogProba_3     16 non-null     float64
 13  Decision       16 non-null     int64  
 14  DecisionProba  16 non-null     float64
dtypes: float64(13), int64(2)
memory usage: 2.0 KB
    index   Score_0   Proba_0  ...  LogProba_3  Decision  DecisionProba
0       0 -1.000050  0.095998  ...   -0.339263         3       0.712295
1       1 -1.003192  0.096302  ...   -2.337552         2       0.711822
2       2  0.999983  0.710705  ...   -2.342256         0       0.710705
3       3 -1.004568  0.095941  ...   -2.341429         1       0.710443
4       4 -0.995634  0.096674  ...   -2.338675         2       0.711149
5       5 -0.995209  0.096608  ...   -2.341846         2       0.711011
6       6  1.012615  0.713651  ...   -2.352754         0       0.713651
7       7 -1.002355  0.095516  ...   -0.338942         3       0.712524
8       8  1.003305  0.712096  ...   -2.342178         0       0.712096
9       9  0.993916  0.708976  ...   -2.342550         0       0.708976
10     10 -0.993234  0.097587  ...   -0.343626         3       0.709194
11     11  1.002464  0.712103  ...   -2.342962         0       0.712103
12     12 -1.009192  0.095302  ...   -2.343269         1       0.712004
13     13 -0.996648  0.096680  ...   -0.341086         3       0.710998
14     14 -1.008571  0.095754  ...   -2.333013         1       0.710814
15     15 -1.003634  0.096248  ...   -2.330993         2       0.710019

[16 rows x 15 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Score_3', 'Proba_3',
       'LogProba_3', 'Decision', 'DecisionProba'],
      dtype='object')
    index   Score_0  SQL_Proba_0  ...  Py_Proba_2  Py_Proba_3  Py_Decision
0       0 -1.000050     0.095998  ...    0.095685    0.712295            3
1       1 -1.003192     0.096302  ...    0.711822    0.096564            2
2       2  0.999983     0.710705  ...    0.096522    0.096110            0
3       3 -1.004568     0.095941  ...    0.097426    0.096191            1
4       4 -0.995634     0.096674  ...    0.711149    0.096455            2
5       5 -0.995209     0.096608  ...    0.711009    0.096150            2
6       6  1.012615     0.713651  ...    0.095672    0.095107            0
7       7 -1.002355     0.095516  ...    0.095226    0.712522            3
8       8  1.003305     0.712096  ...    0.095700    0.096118            0
9       9  0.993916     0.708976  ...    0.097676    0.096083            0
10     10 -0.993234     0.097587  ...    0.096768    0.709195            3
11     11  1.002464     0.712103  ...    0.095421    0.096043            0
12     12 -1.009192     0.095302  ...    0.096681    0.096013            1
13     13 -0.996648     0.096680  ...    0.095985    0.710998            3
14     14 -1.008571     0.095754  ...    0.096430    0.097003            1
15     15 -1.003634     0.096248  ...    0.710020    0.097199            2

[16 rows x 20 columns]
MLLITE_CLASS_SQL_ERROR ('FourClass_100_tiny', 'RidgeClassifier', 'sqlite') ('Py_Proba_0', 'SQL_Proba_0') 3.6341965990033254e-07
    Py_Proba_0  SQL_Proba_0   SQL_Error_0
0     0.095998     0.095998 -1.453519e-07
1     0.096302     0.096302 -1.010182e-07
2     0.710705     0.710705 -7.627794e-08
3     0.095941     0.095941  2.499837e-07
4     0.096674     0.096674  2.832688e-07
5     0.096608     0.096608  5.088415e-07
6     0.713650     0.713651 -7.840569e-07
7     0.095517     0.095516  6.206400e-07
8     0.712096     0.712096  4.524563e-07
9     0.708976     0.708976 -1.853081e-07
10    0.097586     0.097587 -5.393349e-07
11    0.712103     0.712103 -3.462997e-07
12    0.095301     0.095302 -7.464999e-07
13    0.096681     0.096680  1.322878e-07
14    0.095755     0.095754  5.720300e-07
15    0.096249     0.096248  7.105878e-08
MLLITE_CLASS_SQL_ERROR ('FourClass_100_tiny', 'RidgeClassifier', 'sqlite') ('Py_Proba_1', 'SQL_Proba_1') 4.5882367922123884e-07
    Py_Proba_1  SQL_Proba_1   SQL_Error_1
0     0.096022     0.096021  3.825214e-07
1     0.095312     0.095312 -9.245436e-08
2     0.096663     0.096662  1.176216e-07
3     0.710442     0.710443 -1.009479e-06
4     0.095721     0.095722 -2.407104e-07
5     0.096232     0.096231  6.838977e-07
6     0.095571     0.095570  4.700952e-07
7     0.096735     0.096734  7.959501e-07
8     0.096086     0.096086  2.307035e-07
9     0.097266     0.097266  2.199710e-08
10    0.096451     0.096451  3.265137e-07
11    0.096433     0.096433  6.316682e-07
12    0.712004     0.712004  6.331885e-07
13    0.096336     0.096336  2.012235e-07
14    0.710813     0.710814 -1.195233e-06
15    0.096533     0.096533 -3.079216e-07
MLLITE_CLASS_SQL_ERROR ('FourClass_100_tiny', 'RidgeClassifier', 'sqlite') ('Py_Proba_2', 'SQL_Proba_2') 3.2939123092295963e-07
    Py_Proba_2  SQL_Proba_2   SQL_Error_2
0     0.095685     0.095685  1.103795e-07
1     0.711822     0.711822  3.444038e-07
2     0.096522     0.096522  3.347370e-07
3     0.097426     0.097426  4.797660e-08
4     0.711149     0.711149  2.618468e-07
5     0.711009     0.711011 -1.331445e-06
6     0.095672     0.095672  1.285239e-07
7     0.095226     0.095226  1.127745e-07
8     0.095700     0.095700 -2.833185e-07
9     0.097676     0.097676 -1.066853e-07
10    0.096768     0.096768 -5.059860e-07
11    0.095421     0.095421 -5.184278e-07
12    0.096681     0.096681 -9.298813e-08
13    0.095985     0.095986 -2.788529e-07
14    0.096430     0.096429  2.952076e-07
15    0.710020     0.710019  5.167062e-07
MLLITE_CLASS_SQL_ERROR ('FourClass_100_tiny', 'RidgeClassifier', 'sqlite') ('Py_Proba_3', 'SQL_Proba_3') 3.859306047931943e-07
    Py_Proba_3  SQL_Proba_3   SQL_Error_3
0     0.712295     0.712295 -2.730432e-07
1     0.096564     0.096564 -1.881841e-07
2     0.096110     0.096111 -3.462784e-07
3     0.096191     0.096190  6.742661e-07
4     0.096455     0.096455 -3.938122e-07
5     0.096150     0.096150  1.759590e-07
6     0.095107     0.095107  2.599437e-07
7     0.712522     0.712524 -1.447408e-06
8     0.096118     0.096118 -4.072919e-07
9     0.096083     0.096082  3.668539e-07
10    0.709195     0.709194  6.144990e-07
11    0.096043     0.096043  1.734547e-07
12    0.096013     0.096013  1.913984e-07
13    0.710998     0.710998 -1.068124e-07
14    0.097003     0.097003  2.832917e-07
15    0.097199     0.097199 -2.723928e-07
MLLITE_CLASS_SQL_EXECUTION_STATUS ('FourClass_100_tiny', 'RidgeClassifier', 'sqlite', 'Success')
    Py_Decision  SQL_Decision
0             3             3
1             2             2
2             0             0
3             1             1
4             2             2
5             2             2
6             0             0
7             3             3
8             0             0
9             0             0
10            3             3
11            0             0
12            1             1
13            3             3
14            1             1
15            2             2
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
