READING_CSV FourClass_100_tiny ['data/tiny/FourClass_100_tiny.csv']
         X_0       X_1       X_2  ...      X_98      X_99  target
0   0.935563  2.247500 -1.070940  ... -0.177791 -0.249523       3
1   0.293314 -1.260450 -3.448018  ...  0.164190  2.205145       2
2   0.596661  1.589408 -0.810968  ...  0.026429 -0.565740       0
3   1.456436 -2.080544  0.694122  ...  1.059889  0.328791       1
4  -1.193096 -0.499944  0.528137  ...  1.236806  1.097111       2
5   0.004588  0.415182  1.122491  ... -1.470151 -1.415749       2
6  -0.566579  0.216205  0.537669  ...  0.253076 -0.257734       0
7   0.094549 -0.840780 -0.040313  ... -2.097391 -1.175138       3
8  -1.035038  0.028587  2.388027  ... -0.100060  0.578063       0
9   0.104933  1.209696  0.297718  ...  0.305889  1.176062       0
10  1.684619 -0.394139  0.273230  ...  0.335744 -0.537372       3
11  0.833314  0.023464 -1.279124  ... -0.350409 -0.664509       0
12  0.236087  1.340066 -0.531894  ...  0.078043 -0.185077       1
13 -1.152497 -1.187080 -1.877030  ...  0.388650 -0.153948       3
14  1.760033 -1.403882 -1.183618  ... -2.253838 -1.221147       1
15  1.879904 -0.295988  0.027052  ... -0.809065  0.313258       2

[16 rows x 101 columns]
MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
('OPERATION_START', 'TRAINING')
[[ 9.35562551e-01  2.24750018e+00 -1.07094014e+00  5.08270264e-01
   1.43985808e-01 -4.33900356e-01  2.20938280e-01 -6.05712712e-01
   1.04623568e+00 -5.11191189e-01 -1.49217200e+00  5.78792810e-01
  -5.20725727e-01  8.71259570e-01 -1.55619383e+00  1.52518547e+00
  -7.36531466e-02 -1.17264986e+00 -6.90029681e-01 -1.00071573e+00
   3.37273180e-01 -5.52994728e-01  4.75280344e-01 -1.40307999e+00
   9.60445762e-01 -4.87094879e-01 -7.87123621e-01  4.54730177e+00
   1.16833878e+00 -5.16704082e-01  1.26904652e-01 -2.69020295e+00
  -1.60714972e+00 -1.60194361e+00  1.45940697e+00 -2.07469568e-01
  -7.90602565e-01 -2.78487932e-02 -1.21024287e+00  5.58430433e-01
  -1.63653836e-01  6.32869065e-01 -1.25206620e-01 -3.34407538e-01
   6.30639970e-01  1.33564019e+00  3.52602506e+00  7.06132531e-01
   1.95425427e+00 -2.52463102e-01 -4.60086882e-01 -1.19924438e+00
   6.41360343e-01 -2.27416492e+00 -1.08663130e+00 -1.79455566e+00
  -4.53341693e-01 -5.69205701e-01 -2.71141529e-01  6.19319558e-01
  -2.58924603e+00  9.84492600e-01  2.16141731e-01  8.48047435e-01
  -2.20009804e-01 -3.31227589e+00  1.16689853e-01  1.42259753e+00
   1.79406500e+00 -1.90514177e-01  7.55192041e-01  1.54058591e-01
   7.11078942e-01 -1.32698989e+00 -2.07093787e+00  9.34237540e-01
  -4.60939616e-01 -8.04052234e-01 -5.02367616e-02 -3.75201797e+00
   6.09228611e-02 -1.00079381e+00 -9.43618715e-01  2.28104413e-01
  -9.84539762e-02 -8.51119459e-02  8.69812146e-02 -1.41765642e+00
   2.71681398e-01 -8.74418080e-01 -2.53257823e+00 -5.78377783e-01
  -7.53983378e-01  9.52363431e-01 -9.63835180e-01 -6.48602486e-01
  -1.77499366e+00  6.77245975e-01 -1.77790895e-01 -2.49523029e-01]
 [ 2.93314219e-01 -1.26045048e+00 -3.44801831e+00  2.69382149e-01
   1.54421818e+00 -6.00797161e-02  2.80081749e-01 -3.49374235e-01
  -1.71003997e+00  8.22554767e-01  7.01598311e-03  7.73456335e-01
  -1.02132368e+00 -1.34428933e-01 -2.03461379e-01  1.28476620e+00
  -1.16496360e+00 -5.35073131e-02  8.57034981e-01  1.38256717e+00
   9.03933793e-02  8.63964017e-03 -5.40078878e-01 -4.88574624e-01
   4.52568620e-01  5.42306304e-01  1.07568896e+00  3.46140218e+00
   3.28359604e+00 -3.20053488e-01 -1.14804339e+00 -2.76097941e+00
   1.55631797e-02  8.74092340e-01 -7.98800826e-01 -2.42959595e+00
  -6.76247656e-01 -1.14995682e+00  4.39849287e-01 -1.87727064e-01
   1.34595573e+00 -9.83103573e-01 -8.30253839e-01 -1.39651984e-01
   2.03547105e-01  4.51490223e-01 -3.95970130e+00 -3.51787716e-01
   7.84379542e-01 -4.29442495e-01  1.05397455e-01  7.79593885e-01
  -1.13827668e-01 -5.40005386e-01 -1.16847146e+00 -3.36890638e-01
   9.90479112e-01  5.00425518e-01 -2.40916753e+00 -8.40187371e-01
  -2.07494095e-01 -4.10496503e-01  4.08632898e+00  9.31320012e-01
   9.54048574e-01 -9.11957398e-02 -7.51672363e+00  7.23851264e-01
  -3.96382175e-02  1.77101314e+00 -1.17600811e+00  1.22991554e-01
  -3.74346748e-02  1.72770336e-01 -4.08644319e-01  4.94354963e-01
   1.74994171e+00  9.89653885e-01  1.74723223e-01 -9.37665176e+00
  -4.31565335e-03 -1.70145118e+00 -1.74992526e+00 -1.72720656e-01
   5.82682490e-01 -5.26583374e-01  1.91324139e+00 -2.40155920e-01
  -1.35112417e+00 -3.65208060e-01 -1.35532707e-01  1.08672369e+00
   7.04294443e-01 -8.71233284e-01  1.04183960e+00 -6.46791577e-01
   3.74140948e-01  3.27620208e-01  1.64190233e-01  2.20514464e+00]
 [ 5.96660793e-01  1.58940768e+00 -8.10967982e-01 -4.73919630e-01
  -9.17869389e-01 -1.61617601e+00 -6.78639174e-01  1.03318654e-01
  -5.00028312e-01  1.78057873e+00 -1.34553814e+00 -5.28248453e+00
   7.20736444e-01  1.79546729e-01 -1.75809467e+00 -8.59387755e-01
  -2.27263141e-02 -1.87025774e+00  1.67022240e+00 -2.89478928e-01
   8.37067842e-01  6.59622908e-01  4.29693535e-02 -9.46969926e-01
   4.30729359e-01 -7.75742769e-01  3.41510355e-01 -2.02011466e+00
  -1.02778935e+00 -1.69667840e+00 -1.71012551e-01  4.23166782e-01
  -1.79182720e+00 -5.75773478e-01 -1.71246231e+00  5.68344474e-01
  -6.81339622e-01  3.23087126e-01 -1.44740534e+00 -1.38365650e+00
   3.77985537e-01 -6.37483299e-01  7.76762664e-01  5.55373728e-01
   1.11285400e+00 -1.27088690e+00  2.94207788e+00  4.38418001e-01
   7.77927995e-01  8.14674795e-01 -3.88954520e-01 -1.27854240e+00
   3.87139380e-01 -5.47252417e-01  7.68055022e-01  1.48158407e+00
  -5.30028522e-01  8.71521354e-01  2.20103472e-01 -1.80267835e+00
   1.62707639e+00  2.93988436e-01  4.04036474e+00 -1.38034463e+00
  -8.25688243e-01  7.04825699e-01  8.15395546e+00  1.22501051e+00
   1.66788650e+00  2.72147131e+00  6.49030805e-01 -9.60100591e-01
  -1.05595326e+00 -4.90769893e-02 -1.56489909e+00  3.93039435e-01
   8.80326271e-01  1.46846676e+00  2.43020996e-01 -1.33081412e+00
   2.29413652e+00  7.48559713e-01  1.10301085e-01  1.11530209e+00
  -3.07022452e-01 -3.43551278e-01  7.95005918e-01  2.63235778e-01
   7.99354970e-01 -5.73727824e-02  7.56435156e-01 -3.64444673e-01
   1.29907846e+00 -3.82006057e-02  7.76137769e-01 -8.31591904e-01
   1.53442824e+00 -1.27538812e+00  2.64287349e-02 -5.65739751e-01]
 [ 1.45643616e+00 -2.08054376e+00  6.94121957e-01 -5.21965921e-01
  -2.32917964e-01  1.52993643e+00 -1.81002557e-01 -9.00278687e-01
  -3.17071170e-01  4.05129343e-01 -9.13353622e-01  1.52238500e+00
   1.75047374e+00 -7.30361819e-01  1.55085921e+00  1.42706335e-01
   4.59196642e-02  4.07628447e-01 -3.26506257e-01 -4.81859356e-01
   9.39201862e-02 -2.45961189e-01 -1.96491504e+00  5.07482708e-01
   1.15683150e+00 -3.67391527e-01 -9.73286927e-01 -3.10479784e+00
  -2.73889601e-01  1.66504610e+00 -1.51400971e+00 -9.55533683e-01
   2.07410976e-01  1.52923656e+00 -1.69865060e+00  1.74417377e+00
  -1.26610243e+00 -5.80420077e-01 -8.55364025e-01  1.04407564e-01
   5.93953609e-01 -1.41621888e+00  1.08122841e-01 -4.84067738e-01
   1.69581461e+00  1.38722503e+00 -3.99619937e+00  1.27301514e+00
   6.38230085e-01  2.15354633e+00 -8.86631683e-02  9.06281710e-01
   1.31646347e+00  1.80131924e+00  5.43839991e-01 -1.20308149e+00
   1.03996921e+00  4.74938527e-02 -2.78281540e-01 -1.01100028e+00
   1.63605332e+00 -6.30008936e-01  2.86958098e+00  1.29696774e+00
   1.89161137e-01  2.85747457e+00 -4.18727446e+00 -7.44388819e-01
   2.98897564e-01  1.36116946e+00  1.38416719e+00 -2.11131483e-01
   1.18849802e+00  1.96934193e-01 -1.47064614e+00 -3.63175780e-01
   7.84732163e-01 -1.32636324e-01  1.00253135e-01  2.38688135e+00
  -2.33116910e-01  4.48122442e-01  2.28070378e+00 -1.26993442e+00
  -3.67890954e-01 -8.16320002e-01 -9.08941507e-01 -7.01003969e-01
   1.05856764e+00 -3.64899427e-01 -2.01056767e+00 -1.06769252e+00
   1.60698414e+00 -2.91990757e-01  2.26473403e+00 -4.49902713e-01
   4.62933123e-01  7.53116310e-01  1.05988944e+00  3.28791380e-01]
 [-1.19309628e+00 -4.99944448e-01  5.28136671e-01  1.85364544e-01
  -7.10495830e-01 -8.85336176e-02 -6.38042450e-01  8.81741822e-01
   1.25752389e+00 -8.73580158e-01 -9.55399573e-01 -1.35603696e-01
   4.83997911e-01 -9.96602833e-01  9.37519133e-01 -5.89864291e-02
  -1.13989949e+00 -1.25818241e+00  5.26024342e-01 -7.01516032e-01
   1.32973158e+00  2.44526839e+00 -7.72712529e-01  5.13766646e-01
   4.98695105e-01  1.14376044e+00 -6.54239535e-01 -6.17800094e-02
  -1.03205192e+00  2.77230233e-01 -9.69139159e-01  1.10734671e-01
  -5.05987525e-01  1.02873945e+00  1.02971303e+00 -2.58090401e+00
  -9.99437511e-01  2.12422752e+00 -3.89198899e-01 -9.32601035e-01
  -6.93674445e-01 -4.07995224e-01 -1.90250194e+00 -6.23405516e-01
  -1.66650927e+00 -2.14010692e+00 -3.13505024e-01  9.16595995e-01
  -1.29809892e+00  1.01324391e+00  1.43364155e+00 -1.01352572e+00
  -1.49118865e+00 -2.45811558e+00  1.11938548e+00  4.71531510e-01
   2.87433833e-01  6.17101133e-01  5.58946013e-01 -9.08716619e-01
   2.14687967e+00 -1.05833352e+00 -8.24340701e-01  1.51690736e-01
   1.60771608e+00  9.55081761e-01 -1.60897672e+00 -1.66303873e+00
   7.57982671e-01  3.17573786e-01  3.93135488e-01  1.26543090e-01
   1.48471398e-02 -1.58860159e+00 -5.91678858e-01  3.42316389e-01
  -2.10359603e-01 -1.42355669e+00 -2.23383650e-01 -4.08269119e+00
   9.26247478e-01  5.84456980e-01 -5.01928627e-01 -5.45637131e-01
   6.72929883e-01 -1.34969640e+00  1.73498929e+00 -2.95029342e-01
   7.98496783e-01  1.77032605e-01 -2.69206595e+00  1.26748353e-01
  -5.17131031e-01  9.58465040e-01 -5.24760962e-01  3.00141931e-01
   9.27737057e-02 -5.06614506e-01  1.23680639e+00  1.09711075e+00]] [3 2 0 1 2]
MLLITE_FIT_USING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 6 6
('OPERATION_END_ELAPSED', 0.041, 'TRAINING')
{ ,   }
{ ,   }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 100 },
	"classes" : [ 0, 1, 2, 3 ],
	"equations" : {
		"class_0" : {
			"intercept" : -0.248088,
			"coeffs" : [ -0.032680, 0.047098, 0.008775, -0.039150, 0.027354, -0.045914, 0.030449, 0.018330, -0.001463, 0.002041, 0.056794, -0.016927, -0.012972, -0.066580, 0.037496, -0.068480, -0.040931, -0.031019, -0.009872, 0.011540, 0.038169, -0.044626, 0.007128, 0.011336, 0.009664, -0.047945, -0.003127, -0.001970, -0.013092, 0.002833, 0.022015, -0.000430, -0.042193, -0.063419, -0.027033, 0.062947, 0.073595, -0.047719, -0.000500, -0.092515, -0.013749, -0.004376, 0.010925, 0.055817, 0.019261, -0.008979, 0.016775, -0.044592, -0.027336, -0.022976, -0.041635, 0.056437, -0.023379, -0.003178, -0.003042, 0.039473, -0.070351, -0.007537, 0.017535, -0.007972, -0.007764, -0.020748, 0.015078, -0.072287, 0.027618, 0.005808, 0.014576, 0.005992, 0.033478, 0.026221, 0.000910, 0.018879, -0.056805, 0.045192, 0.019464, -0.052116, -0.017970, 0.016474, -0.036417, 0.006659, 0.067884, -0.021900, 0.015306, 0.068999, -0.093202, 0.057534, -0.005484, -0.012761, 0.056252, 0.053134, 0.038574, 0.069022, 0.045125, 0.028197, 0.027323, 0.036377, 0.007265, -0.023765, 0.007132, 0.009091 ]
		},
		"class_1" : {
			"intercept" : -0.726468,
			"coeffs" : [ 0.029780, -0.007439, 0.002944, -0.043644, 0.022265, 0.036205, 0.045965, -0.032624, -0.004353, -0.049944, 0.008804, 0.018582, 0.032074, -0.000760, 0.027887, -0.010276, 0.022382, -0.003196, -0.033039, -0.084500, -0.012966, -0.000739, -0.050829, 0.036087, -0.009211, -0.023478, 0.008285, -0.011163, -0.005932, 0.008480, -0.059389, 0.003618, 0.002672, 0.007095, -0.016284, 0.024463, -0.052274, 0.011418, -0.001188, 0.017089, 0.010898, -0.024527, -0.006412, -0.007063, 0.033877, -0.001898, -0.019950, 0.014608, 0.002319, 0.034616, 0.005020, 0.018856, 0.040954, 0.031385, 0.003780, -0.024411, 0.023666, 0.001621, 0.019844, 0.012786, 0.018318, -0.004496, 0.011721, -0.006521, -0.005505, 0.014445, -0.010778, 0.030599, -0.002846, -0.002599, 0.007407, -0.026704, 0.044553, 0.019669, 0.000075, -0.020894, 0.019969, 0.012767, 0.070648, 0.014882, 0.014079, 0.035921, 0.036551, -0.020287, -0.014589, 0.013335, -0.004119, 0.011689, 0.015350, -0.018556, -0.030141, -0.037899, 0.019262, -0.033089, -0.008030, -0.049443, -0.002563, 0.071184, 0.002191, -0.022782 ]
		},
		"class_2" : {
			"intercept" : -0.371397,
			"coeffs" : [ 0.001164, -0.029073, -0.004993, 0.079717, -0.032158, -0.005101, -0.037418, 0.036151, -0.040281, 0.006952, -0.027934, -0.009879, 0.019454, -0.016021, 0.003275, 0.013407, -0.016276, 0.033404, -0.000032, 0.060587, 0.022965, 0.039201, 0.025386, -0.005233, 0.022649, 0.076036, 0.059376, 0.005892, 0.010672, 0.005814, 0.000817, -0.011096, 0.034774, 0.062446, 0.028293, -0.058396, -0.034327, 0.027104, 0.038820, 0.012854, 0.058279, -0.015475, -0.055809, 0.018917, -0.071167, -0.054206, -0.018750, -0.001574, -0.040976, 0.004543, 0.008757, -0.020184, -0.062116, -0.009010, 0.005718, 0.009954, 0.031436, 0.057260, -0.022290, -0.024435, 0.028180, -0.005656, -0.004748, 0.052143, 0.021564, -0.007676, -0.007395, -0.020691, -0.024185, -0.016792, -0.034476, 0.021543, 0.036277, -0.063920, 0.011157, 0.029081, 0.006367, -0.007521, -0.048626, -0.018974, -0.019855, -0.026866, -0.031913, 0.032230, 0.079897, 0.021507, 0.015787, -0.019308, -0.019469, 0.043219, 0.028917, 0.019853, -0.050454, -0.020022, -0.016094, -0.027867, 0.037788, 0.007452, -0.005697, 0.042221 ]
		},
		"class_3" : {
			"intercept" : -0.654044,
			"coeffs" : [ 0.001736, -0.010586, -0.006725, 0.003080, -0.017461, 0.014812, -0.039000, -0.021856, 0.046098, 0.040952, -0.037664, 0.008225, -0.038555, 0.083361, -0.068660, 0.065348, 0.034823, 0.000811, 0.042942, 0.012373, -0.048170, 0.006163, 0.018317, -0.042190, -0.023103, -0.004613, -0.064534, 0.007241, 0.008351, -0.017128, 0.036556, 0.007908, 0.004747, -0.006122, 0.015024, -0.029013, 0.013006, 0.009196, -0.037130, 0.062572, -0.055427, 0.044378, 0.051295, -0.067671, 0.018029, 0.065082, 0.021924, 0.031558, 0.065995, -0.016184, 0.027857, -0.055109, 0.044542, -0.019196, -0.006455, -0.025016, 0.015248, -0.051346, -0.015089, 0.019621, -0.038735, 0.030900, -0.022052, 0.026665, -0.043677, -0.012577, 0.003597, -0.015900, -0.006448, -0.006830, 0.026160, -0.013718, -0.024027, -0.000940, -0.030697, 0.043929, -0.008365, -0.021721, 0.014394, -0.002566, -0.062107, 0.012845, -0.019944, -0.080943, 0.027893, -0.092375, -0.006183, 0.020380, -0.052135, -0.077799, -0.037350, -0.050976, -0.013932, 0.024913, -0.003198, 0.040931, -0.042490, -0.054874, -0.003626, -0.028529 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_100_tiny.json'

RELOADING_MODEL_FROM_JSON_START ('FourClass_100_tiny', 'RidgeClassifier')
MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
MLLITE_RELOADING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 100 },
	"classes" : [ 0, 1, 2, 3 ],
	"equations" : {
		"class_0" : {
			"intercept" : -0.248088,
			"coeffs" : [ -0.032680, 0.047098, 0.008775, -0.039150, 0.027354, -0.045914, 0.030449, 0.018330, -0.001463, 0.002041, 0.056794, -0.016927, -0.012972, -0.066580, 0.037496, -0.068480, -0.040931, -0.031019, -0.009872, 0.011540, 0.038169, -0.044626, 0.007128, 0.011336, 0.009664, -0.047945, -0.003127, -0.001970, -0.013092, 0.002833, 0.022015, -0.000430, -0.042193, -0.063419, -0.027033, 0.062947, 0.073595, -0.047719, -0.000500, -0.092515, -0.013749, -0.004376, 0.010925, 0.055817, 0.019261, -0.008979, 0.016775, -0.044592, -0.027336, -0.022976, -0.041635, 0.056437, -0.023379, -0.003178, -0.003042, 0.039473, -0.070351, -0.007537, 0.017535, -0.007972, -0.007764, -0.020748, 0.015078, -0.072287, 0.027618, 0.005808, 0.014576, 0.005992, 0.033478, 0.026221, 0.000910, 0.018879, -0.056805, 0.045192, 0.019464, -0.052116, -0.017970, 0.016474, -0.036417, 0.006659, 0.067884, -0.021900, 0.015306, 0.068999, -0.093202, 0.057534, -0.005484, -0.012761, 0.056252, 0.053134, 0.038574, 0.069022, 0.045125, 0.028197, 0.027323, 0.036377, 0.007265, -0.023765, 0.007132, 0.009091 ]
		},
		"class_1" : {
			"intercept" : -0.726468,
			"coeffs" : [ 0.029780, -0.007439, 0.002944, -0.043644, 0.022265, 0.036205, 0.045965, -0.032624, -0.004353, -0.049944, 0.008804, 0.018582, 0.032074, -0.000760, 0.027887, -0.010276, 0.022382, -0.003196, -0.033039, -0.084500, -0.012966, -0.000739, -0.050829, 0.036087, -0.009211, -0.023478, 0.008285, -0.011163, -0.005932, 0.008480, -0.059389, 0.003618, 0.002672, 0.007095, -0.016284, 0.024463, -0.052274, 0.011418, -0.001188, 0.017089, 0.010898, -0.024527, -0.006412, -0.007063, 0.033877, -0.001898, -0.019950, 0.014608, 0.002319, 0.034616, 0.005020, 0.018856, 0.040954, 0.031385, 0.003780, -0.024411, 0.023666, 0.001621, 0.019844, 0.012786, 0.018318, -0.004496, 0.011721, -0.006521, -0.005505, 0.014445, -0.010778, 0.030599, -0.002846, -0.002599, 0.007407, -0.026704, 0.044553, 0.019669, 0.000075, -0.020894, 0.019969, 0.012767, 0.070648, 0.014882, 0.014079, 0.035921, 0.036551, -0.020287, -0.014589, 0.013335, -0.004119, 0.011689, 0.015350, -0.018556, -0.030141, -0.037899, 0.019262, -0.033089, -0.008030, -0.049443, -0.002563, 0.071184, 0.002191, -0.022782 ]
		},
		"class_2" : {
			"intercept" : -0.371397,
			"coeffs" : [ 0.001164, -0.029073, -0.004993, 0.079717, -0.032158, -0.005101, -0.037418, 0.036151, -0.040281, 0.006952, -0.027934, -0.009879, 0.019454, -0.016021, 0.003275, 0.013407, -0.016276, 0.033404, -0.000032, 0.060587, 0.022965, 0.039201, 0.025386, -0.005233, 0.022649, 0.076036, 0.059376, 0.005892, 0.010672, 0.005814, 0.000817, -0.011096, 0.034774, 0.062446, 0.028293, -0.058396, -0.034327, 0.027104, 0.038820, 0.012854, 0.058279, -0.015475, -0.055809, 0.018917, -0.071167, -0.054206, -0.018750, -0.001574, -0.040976, 0.004543, 0.008757, -0.020184, -0.062116, -0.009010, 0.005718, 0.009954, 0.031436, 0.057260, -0.022290, -0.024435, 0.028180, -0.005656, -0.004748, 0.052143, 0.021564, -0.007676, -0.007395, -0.020691, -0.024185, -0.016792, -0.034476, 0.021543, 0.036277, -0.063920, 0.011157, 0.029081, 0.006367, -0.007521, -0.048626, -0.018974, -0.019855, -0.026866, -0.031913, 0.032230, 0.079897, 0.021507, 0.015787, -0.019308, -0.019469, 0.043219, 0.028917, 0.019853, -0.050454, -0.020022, -0.016094, -0.027867, 0.037788, 0.007452, -0.005697, 0.042221 ]
		},
		"class_3" : {
			"intercept" : -0.654044,
			"coeffs" : [ 0.001736, -0.010586, -0.006725, 0.003080, -0.017461, 0.014812, -0.039000, -0.021856, 0.046098, 0.040952, -0.037664, 0.008225, -0.038555, 0.083361, -0.068660, 0.065348, 0.034823, 0.000811, 0.042942, 0.012373, -0.048170, 0.006163, 0.018317, -0.042190, -0.023103, -0.004613, -0.064534, 0.007241, 0.008351, -0.017128, 0.036556, 0.007908, 0.004747, -0.006122, 0.015024, -0.029013, 0.013006, 0.009196, -0.037130, 0.062572, -0.055427, 0.044378, 0.051295, -0.067671, 0.018029, 0.065082, 0.021924, 0.031558, 0.065995, -0.016184, 0.027857, -0.055109, 0.044542, -0.019196, -0.006455, -0.025016, 0.015248, -0.051346, -0.015089, 0.019621, -0.038735, 0.030900, -0.022052, 0.026665, -0.043677, -0.012577, 0.003597, -0.015900, -0.006448, -0.006830, 0.026160, -0.013718, -0.024027, -0.000940, -0.030697, 0.043929, -0.008365, -0.021721, 0.014394, -0.002566, -0.062107, 0.012845, -0.019944, -0.080943, 0.027893, -0.092375, -0.006183, 0.020380, -0.052135, -0.077799, -0.037350, -0.050976, -0.013932, 0.024913, -0.003198, 0.040931, -0.042490, -0.054874, -0.003626, -0.028529 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1, 2, 3 ],
	"dataset" : 	{
		"dataset_features" : 100,
		"dataset_rows" : 16
	},
	"equations" : 	{
		"class_0" : 	{
			"coeffs" : [ -0.03268, 0.047098, 0.008775, -0.03915, 0.027354, -0.045914, 0.030449, 0.01833, -0.001463, 0.002041, 0.056794, -0.016927, -0.012972, -0.06658, 0.037496, -0.06848, -0.040931, -0.031019, -0.009872, 0.01154, 0.038169, -0.044626, 0.007128, 0.011336, 0.009664, -0.047945, -0.003127, -0.00197, -0.013092, 0.002833, 0.022015, -0.00043, -0.042193, -0.063419, -0.027033, 0.062947, 0.073595, -0.047719, -0.0005, -0.092515, -0.013749, -0.004376, 0.010925, 0.055817, 0.019261, -0.008979, 0.016775, -0.044592, -0.027336, -0.022976, -0.041635, 0.056437, -0.023379, -0.003178, -0.003042, 0.039473, -0.070351, -0.007537, 0.017535, -0.007972, -0.007764, -0.020748, 0.015078, -0.072287, 0.027618, 0.005808, 0.014576, 0.005992, 0.033478, 0.026221, 0.00091, 0.018879, -0.056805, 0.045192, 0.019464, -0.052116, -0.01797, 0.016474, -0.036417, 0.006659, 0.067884, -0.0219, 0.015306, 0.068999, -0.093202, 0.057534, -0.005484, -0.012761, 0.056252, 0.053134, 0.038574, 0.069022, 0.045125, 0.028197, 0.027323, 0.036377, 0.007265, -0.023765, 0.007132, 0.009091 ],
			"intercept" : -0.248088
		},
		"class_1" : 	{
			"coeffs" : [ 0.02978, -0.007439, 0.002944, -0.043644, 0.022265, 0.036205, 0.045965, -0.032624, -0.004353, -0.049944, 0.008804, 0.018582, 0.032074, -0.00076, 0.027887, -0.010276, 0.022382, -0.003196, -0.033039, -0.0845, -0.012966, -0.000739, -0.050829, 0.036087, -0.009211, -0.023478, 0.008285, -0.011163, -0.005932, 0.00848, -0.059389, 0.003618, 0.002672, 0.007095, -0.016284, 0.024463, -0.052274, 0.011418, -0.001188, 0.017089, 0.010898, -0.024527, -0.006412, -0.007063, 0.033877, -0.001898, -0.01995, 0.014608, 0.002319, 0.034616, 0.00502, 0.018856, 0.040954, 0.031385, 0.00378, -0.024411, 0.023666, 0.001621, 0.019844, 0.012786, 0.018318, -0.004496, 0.011721, -0.006521, -0.005505, 0.014445, -0.010778, 0.030599, -0.002846, -0.002599, 0.007407, -0.026704, 0.044553, 0.019669, 7.5e-05, -0.020894, 0.019969, 0.012767, 0.070648, 0.014882, 0.014079, 0.035921, 0.036551, -0.020287, -0.014589, 0.013335, -0.004119, 0.011689, 0.01535, -0.018556, -0.030141, -0.037899, 0.019262, -0.033089, -0.00803, -0.049443, -0.002563, 0.071184, 0.002191, -0.022782 ],
			"intercept" : -0.726468
		},
		"class_2" : 	{
			"coeffs" : [ 0.001164, -0.029073, -0.004993, 0.079717, -0.032158, -0.005101, -0.037418, 0.036151, -0.040281, 0.006952, -0.027934, -0.009879, 0.019454, -0.016021, 0.003275, 0.013407, -0.016276, 0.033404, -3.2e-05, 0.060587, 0.022965, 0.039201, 0.025386, -0.005233, 0.022649, 0.076036, 0.059376, 0.005892, 0.010672, 0.005814, 0.000817, -0.011096, 0.034774, 0.062446, 0.028293, -0.058396, -0.034327, 0.027104, 0.03882, 0.012854, 0.058279, -0.015475, -0.055809, 0.018917, -0.071167, -0.054206, -0.01875, -0.001574, -0.040976, 0.004543, 0.008757, -0.020184, -0.062116, -0.00901, 0.005718, 0.009954, 0.031436, 0.05726, -0.02229, -0.024435, 0.02818, -0.005656, -0.004748, 0.052143, 0.021564, -0.007676, -0.007395, -0.020691, -0.024185, -0.016792, -0.034476, 0.021543, 0.036277, -0.06392, 0.011157, 0.029081, 0.006367, -0.007521, -0.048626, -0.018974, -0.019855, -0.026866, -0.031913, 0.03223, 0.079897, 0.021507, 0.015787, -0.019308, -0.019469, 0.043219, 0.028917, 0.019853, -0.050454, -0.020022, -0.016094, -0.027867, 0.037788, 0.007452, -0.005697, 0.042221 ],
			"intercept" : -0.371397
		},
		"class_3" : 	{
			"coeffs" : [ 0.001736, -0.010586, -0.006725, 0.00308, -0.017461, 0.014812, -0.039, -0.021856, 0.046098, 0.040952, -0.037664, 0.008225, -0.038555, 0.083361, -0.06866, 0.065348, 0.034823, 0.000811, 0.042942, 0.012373, -0.04817, 0.006163, 0.018317, -0.04219, -0.023103, -0.004613, -0.064534, 0.007241, 0.008351, -0.017128, 0.036556, 0.007908, 0.004747, -0.006122, 0.015024, -0.029013, 0.013006, 0.009196, -0.03713, 0.062572, -0.055427, 0.044378, 0.051295, -0.067671, 0.018029, 0.065082, 0.021924, 0.031558, 0.065995, -0.016184, 0.027857, -0.055109, 0.044542, -0.019196, -0.006455, -0.025016, 0.015248, -0.051346, -0.015089, 0.019621, -0.038735, 0.0309, -0.022052, 0.026665, -0.043677, -0.012577, 0.003597, -0.0159, -0.006448, -0.00683, 0.02616, -0.013718, -0.024027, -0.00094, -0.030697, 0.043929, -0.008365, -0.021721, 0.014394, -0.002566, -0.062107, 0.012845, -0.019944, -0.080943, 0.027893, -0.092375, -0.006183, 0.02038, -0.052135, -0.077799, -0.03735, -0.050976, -0.013932, 0.024913, -0.003198, 0.040931, -0.04249, -0.054874, -0.003626, -0.028529 ],
			"intercept" : -0.654044
		}
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_il8", "version" : "2024-W14" },
	"options" :  { "alpha" : 1.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
RELOADING_MODEL_FROM_JSON_END ('FourClass_100_tiny', 'RidgeClassifier')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0.0982 0.0972 0.0983 0.7063]
 [0.0967 0.0976 0.708  0.0977]
 [0.7068 0.097  0.0978 0.0984]
 [0.0976 0.7075 0.0978 0.0971]
 [0.0984 0.0972 0.707  0.0974]
 [0.0974 0.0974 0.7074 0.0978]
 [0.7082 0.0972 0.0974 0.0972]
 [0.0976 0.0977 0.0978 0.7069]
 [0.7075 0.0972 0.0977 0.0976]
 [0.7084 0.0973 0.0972 0.0971]
 [0.0981 0.0978 0.097  0.7072]
 [0.7067 0.0974 0.0977 0.0983]
 [0.0969 0.7078 0.0975 0.0977]
 [0.0983 0.0975 0.0976 0.7067]
 [0.0974 0.708  0.0971 0.0975]
 [0.0984 0.0976 0.7066 0.0973]]
(16, 4)
(16, 4) float32
MODEL_PERFS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'FourClass_100_tiny', 'size': 16, 'accuracy': 1.0, 'auc': 1.0}
WRITING_PERF_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_100_tiny.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'FourClass_100_tiny', 'training_time_in_sec': 0.041, 'prediction_time_in_sec': 0.0}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 0 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 1 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 2 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 3 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 4 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 5 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 6 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 7 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 8 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 9 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 10 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 11 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 12 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 13 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 14 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 15 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 16 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 17 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 18 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 19 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 20 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 21 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 22 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 23 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 24 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 25 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 26 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 27 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 28 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 29 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 30 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 31 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 32 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 33 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 34 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 35 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 36 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 37 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 38 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 39 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 40 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 41 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 42 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 43 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 44 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 45 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 46 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 47 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 48 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 49 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 50 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 51 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 52 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 53 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 54 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 55 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 56 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 57 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 58 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 59 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 60 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 61 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 62 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 63 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 64 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 65 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 66 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 67 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 68 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 69 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 70 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 71 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 72 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 73 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 74 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 75 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 76 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 77 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 78 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 79 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 80 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 81 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 82 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 83 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 84 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 85 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 86 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 87 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 88 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 89 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 90 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 91 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 92 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 93 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 94 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 95 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 96 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 97 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 98 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 99 100
{
   "Contributions" : {
      "X_0" : [ 0.001482, -0.001084, -0.000146, -0.000252 ],
      "X_1" : [ -0.000271, -0.000161, 0.000408, 0.000025 ],
      "X_2" : [ 0.000205, -0.000121, 0.000048, -0.000131 ],
      "X_3" : [ 0.000705, 0.000617, -0.001260, -0.000062 ],
      "X_4" : [ -0.000268, -0.000123, 0.000033, 0.000358 ],
      "X_5" : [ -0.000832, 0.000640, -0.000106, 0.000298 ],
      "X_6" : [ -0.001088, -0.002040, 0.001329, 0.001799 ],
      "X_7" : [ 0.000478, -0.000350, 0.000154, -0.000282 ],
      "X_8" : [ -0.000309, -0.000226, 0.002400, -0.001865 ],
      "X_9" : [ 0.000346, -0.002337, 0.000282, 0.001709 ],
      "X_10" : [ 0.002479, 0.000098, -0.000982, -0.001594 ],
      "X_11" : [ 0.001015, -0.001241, 0.000198, 0.000028 ],
      "X_12" : [ -0.000081, -0.000470, -0.000934, 0.001484 ],
      "X_13" : [ 0.003001, -0.000373, 0.000367, -0.002995 ],
      "X_14" : [ 0.001555, 0.000389, -0.000241, -0.001703 ],
      "X_15" : [ 0.002789, -0.000717, -0.000699, -0.001373 ],
      "X_16" : [ 0.001675, -0.001036, 0.000311, -0.000949 ],
      "X_17" : [ 0.000135, -0.000277, 0.000347, -0.000204 ],
      "X_18" : [ 0.000455, -0.000210, -0.000064, -0.000181 ],
      "X_19" : [ 0.000958, -0.006104, 0.004559, 0.000588 ],
      "X_20" : [ 0.001578, -0.000900, -0.000366, -0.000311 ],
      "X_21" : [ -0.000306, 0.000010, 0.000201, 0.000095 ],
      "X_22" : [ 0.000591, -0.002601, 0.001206, 0.000804 ],
      "X_23" : [ -0.000288, -0.001679, 0.000174, 0.001793 ],
      "X_24" : [ 0.000194, -0.000181, -0.000199, 0.000186 ],
      "X_25" : [ -0.001712, -0.001518, 0.003807, -0.000578 ],
      "X_26" : [ -0.000494, -0.001004, 0.000644, 0.000854 ],
      "X_27" : [ -0.000176, -0.000501, 0.000475, 0.000203 ],
      "X_28" : [ -0.000015, -0.000229, 0.000299, -0.000055 ],
      "X_29" : [ -0.000046, -0.000137, -0.000168, 0.000351 ],
      "X_30" : [ 0.001918, -0.003576, 0.000281, 0.001377 ],
      "X_31" : [ -0.000139, -0.000175, 0.000380, -0.000065 ],
      "X_32" : [ 0.001368, -0.000662, -0.000398, -0.000307 ],
      "X_33" : [ -0.000439, -0.000110, 0.000776, -0.000228 ],
      "X_34" : [ 0.000091, -0.000135, 0.000166, -0.000123 ],
      "X_35" : [ 0.002198, -0.000971, -0.000427, -0.000800 ],
      "X_36" : [ 0.002151, -0.001494, -0.000355, -0.000302 ],
      "X_37" : [ 0.000506, -0.000021, -0.000650, 0.000165 ],
      "X_38" : [ 0.000066, -0.000083, 0.000898, -0.000882 ],
      "X_39" : [ 0.007770, -0.002400, -0.001365, -0.004006 ],
      "X_40" : [ -0.000336, -0.000984, 0.001525, -0.000205 ],
      "X_41" : [ -0.000081, 0.000395, 0.000236, -0.000550 ],
      "X_42" : [ -0.000162, -0.000765, -0.000577, 0.001504 ],
      "X_43" : [ -0.001446, -0.000002, -0.000155, 0.001603 ],
      "X_44" : [ 0.000055, -0.000703, 0.000809, -0.000160 ],
      "X_45" : [ -0.000305, -0.000119, -0.002574, 0.002999 ],
      "X_46" : [ 0.000543, -0.001015, 0.000327, 0.000145 ],
      "X_47" : [ 0.000824, -0.000009, 0.000005, -0.000820 ],
      "X_48" : [ 0.000739, -0.000334, -0.001689, 0.001284 ],
      "X_49" : [ 0.005929, -0.008053, -0.001212, 0.003336 ],
      "X_50" : [ -0.000841, 0.000092, 0.000126, 0.000623 ],
      "X_51" : [ 0.002112, 0.000177, -0.001018, -0.001272 ],
      "X_52" : [ 0.001476, -0.002079, 0.001299, -0.000696 ],
      "X_53" : [ 0.000516, -0.001884, 0.000191, 0.001176 ],
      "X_54" : [ -0.000023, 0.000035, -0.000205, 0.000193 ],
      "X_55" : [ 0.002921, -0.001580, 0.000347, -0.001689 ],
      "X_56" : [ 0.000726, -0.000436, -0.000046, -0.000244 ],
      "X_57" : [ 0.000060, 0.000029, 0.000463, -0.000552 ],
      "X_58" : [ 0.000210, -0.000317, 0.000238, -0.000131 ],
      "X_59" : [ 0.000397, -0.000396, 0.000010, -0.000011 ],
      "X_60" : [ -0.000117, -0.000869, -0.001903, 0.002889 ],
      "X_61" : [ 0.000979, 0.000117, 0.000190, -0.001287 ],
      "X_62" : [ -0.000284, -0.000550, -0.000508, 0.001342 ],
      "X_63" : [ -0.000261, -0.000128, 0.000444, -0.000056 ],
      "X_64" : [ 0.000240, -0.000258, -0.000269, 0.000287 ],
      "X_65" : [ -0.000257, -0.000588, 0.000396, 0.000449 ],
      "X_66" : [ 0.004722, -0.003942, -0.001167, 0.000388 ],
      "X_67" : [ -0.000222, -0.003159, 0.001465, 0.001917 ],
      "X_68" : [ 0.002053, -0.000475, -0.001017, -0.000562 ],
      "X_69" : [ 0.000457, -0.000185, -0.000372, 0.000099 ],
      "X_70" : [ -0.000132, -0.000133, 0.001015, -0.000749 ],
      "X_71" : [ -0.000147, 0.000347, -0.000593, 0.000393 ],
      "X_72" : [ 0.001876, -0.001656, -0.001119, 0.000899 ],
      "X_73" : [ 0.000755, 0.000386, -0.001453, 0.000313 ],
      "X_74" : [ 0.000004, -0.000017, 0.000270, -0.000258 ],
      "X_75" : [ 0.003426, 0.000329, -0.001246, -0.002509 ],
      "X_76" : [ 0.000491, -0.000332, 0.000022, -0.000180 ],
      "X_77" : [ -0.000794, -0.000322, 0.000056, 0.001060 ],
      "X_78" : [ 0.002251, -0.003573, 0.002170, -0.000848 ],
      "X_79" : [ -0.000675, -0.002009, 0.002687, -0.000003 ],
      "X_80" : [ -0.001779, -0.001331, 0.000171, 0.002940 ],
      "X_81" : [ 0.000283, -0.001073, 0.001371, -0.000581 ],
      "X_82" : [ 0.000049, -0.000107, 0.000382, -0.000324 ],
      "X_83" : [ -0.001384, -0.000256, -0.000892, 0.002532 ],
      "X_84" : [ 0.002583, -0.000985, -0.000543, -0.001055 ],
      "X_85" : [ 0.000575, -0.000995, -0.000718, 0.001139 ],
      "X_86" : [ -0.000017, -0.000012, 0.000166, -0.000137 ],
      "X_87" : [ -0.000115, -0.000102, 0.000075, 0.000142 ],
      "X_88" : [ 0.000126, -0.000924, 0.000014, 0.000784 ],
      "X_89" : [ 0.002971, -0.002103, 0.000248, -0.001117 ],
      "X_90" : [ 0.002680, -0.001975, 0.001449, -0.002154 ],
      "X_91" : [ 0.002019, -0.000887, 0.000633, -0.001765 ],
      "X_92" : [ 0.000666, 0.000172, -0.000721, -0.000117 ],
      "X_93" : [ 0.000528, -0.000705, 0.000202, -0.000026 ],
      "X_94" : [ 0.000610, -0.000388, -0.000231, 0.000009 ],
      "X_95" : [ 0.001711, -0.002257, -0.000272, 0.000819 ],
      "X_96" : [ 0.000236, -0.000224, 0.001239, -0.001251 ],
      "X_97" : [ 0.001064, -0.002102, 0.000139, 0.000899 ],
      "X_98" : [ 0.000254, 0.000044, -0.000117, -0.000181 ],
      "X_99" : [ 0.000505, -0.001262, 0.001930, -0.001173 ]   
   },
   "Most_Contributive_Features_By_Class" : {
      "class_0" : [ 39, 49, 66, 75, 13, 89, 55, 15, 90, 84 ],
      "class_1" : [ 49, 19, 66, 30, 78, 67, 22, 39, 9, 95 ],
      "class_2" : [ 19, 25, 79, 45, 8, 78, 99, 60, 48, 40 ],
      "class_3" : [ 39, 49, 45, 13, 80, 60, 83, 75, 90, 67 ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_100_tiny_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_100_tiny_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('FourClass_100_tiny', 'RidgeClassifier', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('FourClass_100_tiny', 'RidgeClassifier', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('FourClass_100_tiny', 'RidgeClassifier', 'duckdb')
ore_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."Score_3" AS "Score_3",
  arg_max_cte."Proba_3" AS "Proba_3",
  CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN LN( arg_max_cte."Proba_3" ) ELSE -1.79769313486231e+308 END AS "LogProba_3",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('FourClass_100_tiny', 'RidgeClassifier', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 16 entries, 0 to 15
Data columns (total 100 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     16 non-null     float32
 1   X_1     16 non-null     float32
 2   X_2     16 non-null     float32
 3   X_3     16 non-null     float32
 4   X_4     16 non-null     float32
 5   X_5     16 non-null     float32
 6   X_6     16 non-null     float32
 7   X_7     16 non-null     float32
 8   X_8     16 non-null     float32
 9   X_9     16 non-null     float32
 10  X_10    16 non-null     float32
 11  X_11    16 non-null     float32
 12  X_12    16 non-null     float32
 13  X_13    16 non-null     float32
 14  X_14    16 non-null     float32
 15  X_15    16 non-null     float32
 16  X_16    16 non-null     float32
 17  X_17    16 non-null     float32
 18  X_18    16 non-null     float32
 19  X_19    16 non-null     float32
 20  X_20    16 non-null     float32
 21  X_21    16 non-null     float32
 22  X_22    16 non-null     float32
 23  X_23    16 non-null     float32
 24  X_24    16 non-null     float32
 25  X_25    16 non-null     float32
 26  X_26    16 non-null     float32
 27  X_27    16 non-null     float32
 28  X_28    16 non-null     float32
 29  X_29    16 non-null     float32
 30  X_30    16 non-null     float32
 31  X_31    16 non-null     float32
 32  X_32    16 non-null     float32
 33  X_33    16 non-null     float32
 34  X_34    16 non-null     float32
 35  X_35    16 non-null     float32
 36  X_36    16 non-null     float32
 37  X_37    16 non-null     float32
 38  X_38    16 non-null     float32
 39  X_39    16 non-null     float32
 40  X_40    16 non-null     float32
 41  X_41    16 non-null     float32
 42  X_42    16 non-null     float32
 43  X_43    16 non-null     float32
 44  X_44    16 non-null     float32
 45  X_45    16 non-null     float32
 46  X_46    16 non-null     float32
 47  X_47    16 non-null     float32
 48  X_48    16 non-null     float32
 49  X_49    16 non-null     float32
 50  X_50    16 non-null     float32
 51  X_51    16 non-null     float32
 52  X_52    16 non-null     float32
 53  X_53    16 non-null     float32
 54  X_54    16 non-null     float32
 55  X_55    16 non-null     float32
 56  X_56    16 non-null     float32
 57  X_57    16 non-null     float32
 58  X_58    16 non-null     float32
 59  X_59    16 non-null     float32
 60  X_60    16 non-null     float32
 61  X_61    16 non-null     float32
 62  X_62    16 non-null     float32
 63  X_63    16 non-null     float32
 64  X_64    16 non-null     float32
 65  X_65    16 non-null     float32
 66  X_66    16 non-null     float32
 67  X_67    16 non-null     float32
 68  X_68    16 non-null     float32
 69  X_69    16 non-null     float32
 70  X_70    16 non-null     float32
 71  X_71    16 non-null     float32
 72  X_72    16 non-null     float32
 73  X_73    16 non-null     float32
 74  X_74    16 non-null     float32
 75  X_75    16 non-null     float32
 76  X_76    16 non-null     float32
 77  X_77    16 non-null     float32
 78  X_78    16 non-null     float32
 79  X_79    16 non-null     float32
 80  X_80    16 non-null     float32
 81  X_81    16 non-null     float32
 82  X_82    16 non-null     float32
 83  X_83    16 non-null     float32
 84  X_84    16 non-null     float32
 85  X_85    16 non-null     float32
 86  X_86    16 non-null     float32
 87  X_87    16 non-null     float32
 88  X_88    16 non-null     float32
 89  X_89    16 non-null     float32
 90  X_90    16 non-null     float32
 91  X_91    16 non-null     float32
 92  X_92    16 non-null     float32
 93  X_93    16 non-null     float32
 94  X_94    16 non-null     float32
 95  X_95    16 non-null     float32
 96  X_96    16 non-null     float32
 97  X_97    16 non-null     float32
 98  X_98    16 non-null     float32
 99  X_99    16 non-null     float32
dtypes: float32(100)
memory usage: 6.4 KB
            X_0       X_1       X_2  ...      X_97      X_98      X_99
index                                ...                              
0      0.935563  2.247500 -1.070940  ...  0.677246 -0.177791 -0.249523
1      0.293314 -1.260450 -3.448018  ...  0.327620  0.164190  2.205145
2      0.596661  1.589408 -0.810968  ... -1.275388  0.026429 -0.565740
3      1.456436 -2.080544  0.694122  ...  0.753116  1.059889  0.328791
4     -1.193096 -0.499944  0.528137  ... -0.506615  1.236806  1.097111
5      0.004588  0.415182  1.122491  ...  0.469463 -1.470150 -1.415749
6     -0.566579  0.216205  0.537669  ... -0.327327  0.253076 -0.257734
7      0.094549 -0.840780 -0.040313  ... -1.588936 -2.097391 -1.175138
8     -1.035038  0.028587  2.388027  ...  0.137861 -0.100060  0.578063
9      0.104933  1.209696  0.297718  ... -0.028398  0.305889  1.176062
10     1.684619 -0.394139  0.273230  ... -0.067597  0.335744 -0.537372
11     0.833314  0.023464 -1.279124  ...  0.708903 -0.350409 -0.664509
12     0.236087  1.340066 -0.531894  ...  1.625548  0.078043 -0.185077
13    -1.152497 -1.187080 -1.877030  ... -0.309107  0.388650 -0.153948
14     1.760033 -1.403882 -1.183618  ...  0.997268 -2.253838 -1.221147
15     1.879904 -0.295988  0.027052  ...  0.519573 -0.809065  0.313258

[16 rows x 100 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 16 entries, 0 to 15
Data columns (total 15 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          16 non-null     int64  
 1   Score_0        16 non-null     float64
 2   Proba_0        16 non-null     float64
 3   LogProba_0     16 non-null     float64
 4   Score_1        16 non-null     float64
 5   Proba_1        16 non-null     float64
 6   LogProba_1     16 non-null     float64
 7   Score_2        16 non-null     float64
 8   Proba_2        16 non-null     float64
 9   LogProba_2     16 non-null     float64
 10  Score_3        16 non-null     float64
 11  Proba_3        16 non-null     float64
 12  LogProba_3     16 non-null     float64
 13  Decision       16 non-null     int64  
 14  DecisionProba  16 non-null     float64
dtypes: float64(13), int64(2)
memory usage: 2.0 KB
    index   Score_0   Proba_0  ...  LogProba_3  Decision  DecisionProba
0       0 -0.990930  0.098205  ...   -0.347727         3       0.706291
1       1 -1.002813  0.096679  ...   -2.326108         2       0.708001
2       2  0.983773  0.706768  ...   -2.318881         0       0.706768
3       3 -0.994819  0.097566  ...   -2.331827         1       0.707487
4       4 -0.987559  0.098387  ...   -2.328769         2       0.706977
5       5 -0.996484  0.097426  ...   -2.324927         2       0.707386
6       6  0.988799  0.708158  ...   -2.330845         0       0.708158
7       7 -0.995958  0.097584  ...   -0.346885         3       0.706887
8       8  0.986301  0.707468  ...   -2.327088         0       0.707468
9       9  0.989740  0.708416  ...   -2.332115         0       0.708416
10     10 -0.990163  0.098093  ...   -0.346513         3       0.707150
11     11  0.983346  0.706651  ...   -2.319717         0       0.706651
12     12 -1.000537  0.096947  ...   -2.325474         1       0.707780
13     13 -0.989458  0.098271  ...   -0.347216         3       0.706653
14     14 -0.995585  0.097381  ...   -2.327540         1       0.707999
15     15 -0.987662  0.098450  ...   -2.330128         2       0.706643

[16 rows x 15 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Score_3', 'Proba_3',
       'LogProba_3', 'Decision', 'DecisionProba'],
      dtype='object')
    index   Score_0  SQL_Proba_0  ...  Py_Proba_2  Py_Proba_3  Py_Decision
0       0 -0.990930     0.098205  ...    0.098267    0.706290            3
1       1 -1.002813     0.096679  ...    0.708002    0.097675            2
2       2  0.983773     0.706768  ...    0.097822    0.098383            0
3       3 -0.994819     0.097566  ...    0.097829    0.097118            1
4       4 -0.987559     0.098387  ...    0.706978    0.097415            2
5       5 -0.996484     0.097426  ...    0.707387    0.097791            2
6       6  0.988799     0.708158  ...    0.097385    0.097214            0
7       7 -0.995958     0.097584  ...    0.097784    0.706886            3
8       8  0.986301     0.707468  ...    0.097736    0.097580            0
9       9  0.989740     0.708416  ...    0.097189    0.097090            0
10     10 -0.990163     0.098093  ...    0.096956    0.707150            3
11     11  0.983346     0.706651  ...    0.097655    0.098301            0
12     12 -1.000537     0.096947  ...    0.097536    0.097737            1
13     13 -0.989458     0.098271  ...    0.097598    0.706653            3
14     14 -0.995585     0.097381  ...    0.097084    0.097536            1
15     15 -0.987662     0.098450  ...    0.706644    0.097283            2

[16 rows x 20 columns]
MLLITE_CLASS_SQL_ERROR ('FourClass_100_tiny', 'RidgeClassifier', 'duckdb') ('Py_Proba_0', 'SQL_Proba_0') 3.357254148711464e-07
    Py_Proba_0  SQL_Proba_0   SQL_Error_0
0     0.098205     0.098205  2.396490e-07
1     0.096679     0.096679  1.546346e-07
2     0.706768     0.706768  7.504378e-07
3     0.097566     0.097566  1.056001e-07
4     0.098387     0.098387  1.491884e-07
5     0.097425     0.097426 -4.099335e-07
6     0.708157     0.708158 -7.434345e-07
7     0.097584     0.097584 -1.275580e-08
8     0.707468     0.707468  1.472984e-07
9     0.708418     0.708416  1.670807e-06
10    0.098094     0.098093  2.908166e-07
11    0.706651     0.706651 -2.213600e-07
12    0.096947     0.096947  5.553377e-08
13    0.098271     0.098271 -3.540508e-08
14    0.097381     0.097381  2.261958e-07
15    0.098450     0.098450 -1.585566e-07
MLLITE_CLASS_SQL_ERROR ('FourClass_100_tiny', 'RidgeClassifier', 'duckdb') ('Py_Proba_1', 'SQL_Proba_1') 3.4737152219879025e-07
    Py_Proba_1  SQL_Proba_1   SQL_Error_1
0     0.097238     0.097238  6.757163e-07
1     0.097644     0.097645 -6.917413e-07
2     0.097027     0.097027  7.095772e-08
3     0.707487     0.707487 -3.858729e-08
4     0.097219     0.097220 -8.596773e-07
5     0.097397     0.097398 -5.116542e-07
6     0.097244     0.097244 -1.096323e-07
7     0.097746     0.097745  7.641197e-08
8     0.097216     0.097216  1.566452e-07
9     0.097303     0.097304 -5.876052e-07
10    0.097800     0.097800 -2.228752e-07
11    0.097393     0.097392  3.576488e-07
12    0.707780     0.707780 -1.269964e-07
13    0.097478     0.097479 -1.370462e-07
14    0.707999     0.707999 -7.499468e-07
15    0.097624     0.097624 -1.848022e-07
MLLITE_CLASS_SQL_ERROR ('FourClass_100_tiny', 'RidgeClassifier', 'duckdb') ('Py_Proba_2', 'SQL_Proba_2') 4.3547232823296783e-07
    Py_Proba_2  SQL_Proba_2   SQL_Error_2
0     0.098267     0.098267  5.338512e-07
1     0.708002     0.708001  9.343029e-07
2     0.097822     0.097822 -1.698288e-07
3     0.097829     0.097829 -2.900918e-07
4     0.706978     0.706977  8.192422e-07
5     0.707387     0.707386  5.769718e-07
6     0.097385     0.097384  4.084278e-07
7     0.097784     0.097784  2.866578e-07
8     0.097736     0.097737 -3.226240e-07
9     0.097189     0.097190 -6.475901e-07
10    0.096956     0.096957 -8.110303e-07
11    0.097655     0.097655 -3.748898e-08
12    0.097536     0.097536 -1.666839e-07
13    0.097598     0.097598  1.200581e-07
14    0.097084     0.097084 -3.281976e-07
15    0.706644     0.706643  5.145099e-07
MLLITE_CLASS_SQL_ERROR ('FourClass_100_tiny', 'RidgeClassifier', 'duckdb') ('Py_Proba_3', 'SQL_Proba_3') 4.1958192534795324e-07
    Py_Proba_3  SQL_Proba_3   SQL_Error_3
0     0.706290     0.706291 -1.441766e-06
1     0.097675     0.097675 -5.611090e-07
2     0.098383     0.098384 -6.068632e-07
3     0.097118     0.097118  1.262215e-07
4     0.097415     0.097416 -1.683579e-07
5     0.097791     0.097791  3.669676e-07
6     0.097214     0.097214  3.701332e-07
7     0.706886     0.706887 -2.981599e-07
8     0.097580     0.097579  1.229886e-07
9     0.097090     0.097090 -4.207101e-07
10    0.707150     0.707150  8.324958e-07
11    0.098301     0.098301 -9.879977e-08
12    0.097737     0.097737  1.412889e-07
13    0.706653     0.706653  1.119978e-07
14    0.097536     0.097535  8.444980e-07
15    0.097283     0.097283 -2.009534e-07
MLLITE_CLASS_SQL_EXECUTION_STATUS ('FourClass_100_tiny', 'RidgeClassifier', 'duckdb', 'Success')
    Py_Decision  SQL_Decision
0             3             3
1             2             2
2             0             0
3             1             1
4             2             2
5             2             2
6             0             0
7             3             3
8             0             0
9             0             0
10            3             3
11            0             0
12            1             1
13            3             3
14            1             1
15            2             2
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_100_tiny_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('FourClass_100_tiny', 'RidgeClassifier', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('FourClass_100_tiny', 'RidgeClassifier', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('FourClass_100_tiny', 'RidgeClassifier', 'sqlite')
ore_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."Score_3" AS "Score_3",
  arg_max_cte."Proba_3" AS "Proba_3",
  CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN LN( arg_max_cte."Proba_3" ) ELSE -1.79769313486231e+308 END AS "LogProba_3",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('FourClass_100_tiny', 'RidgeClassifier', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 16 entries, 0 to 15
Data columns (total 100 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     16 non-null     float32
 1   X_1     16 non-null     float32
 2   X_2     16 non-null     float32
 3   X_3     16 non-null     float32
 4   X_4     16 non-null     float32
 5   X_5     16 non-null     float32
 6   X_6     16 non-null     float32
 7   X_7     16 non-null     float32
 8   X_8     16 non-null     float32
 9   X_9     16 non-null     float32
 10  X_10    16 non-null     float32
 11  X_11    16 non-null     float32
 12  X_12    16 non-null     float32
 13  X_13    16 non-null     float32
 14  X_14    16 non-null     float32
 15  X_15    16 non-null     float32
 16  X_16    16 non-null     float32
 17  X_17    16 non-null     float32
 18  X_18    16 non-null     float32
 19  X_19    16 non-null     float32
 20  X_20    16 non-null     float32
 21  X_21    16 non-null     float32
 22  X_22    16 non-null     float32
 23  X_23    16 non-null     float32
 24  X_24    16 non-null     float32
 25  X_25    16 non-null     float32
 26  X_26    16 non-null     float32
 27  X_27    16 non-null     float32
 28  X_28    16 non-null     float32
 29  X_29    16 non-null     float32
 30  X_30    16 non-null     float32
 31  X_31    16 non-null     float32
 32  X_32    16 non-null     float32
 33  X_33    16 non-null     float32
 34  X_34    16 non-null     float32
 35  X_35    16 non-null     float32
 36  X_36    16 non-null     float32
 37  X_37    16 non-null     float32
 38  X_38    16 non-null     float32
 39  X_39    16 non-null     float32
 40  X_40    16 non-null     float32
 41  X_41    16 non-null     float32
 42  X_42    16 non-null     float32
 43  X_43    16 non-null     float32
 44  X_44    16 non-null     float32
 45  X_45    16 non-null     float32
 46  X_46    16 non-null     float32
 47  X_47    16 non-null     float32
 48  X_48    16 non-null     float32
 49  X_49    16 non-null     float32
 50  X_50    16 non-null     float32
 51  X_51    16 non-null     float32
 52  X_52    16 non-null     float32
 53  X_53    16 non-null     float32
 54  X_54    16 non-null     float32
 55  X_55    16 non-null     float32
 56  X_56    16 non-null     float32
 57  X_57    16 non-null     float32
 58  X_58    16 non-null     float32
 59  X_59    16 non-null     float32
 60  X_60    16 non-null     float32
 61  X_61    16 non-null     float32
 62  X_62    16 non-null     float32
 63  X_63    16 non-null     float32
 64  X_64    16 non-null     float32
 65  X_65    16 non-null     float32
 66  X_66    16 non-null     float32
 67  X_67    16 non-null     float32
 68  X_68    16 non-null     float32
 69  X_69    16 non-null     float32
 70  X_70    16 non-null     float32
 71  X_71    16 non-null     float32
 72  X_72    16 non-null     float32
 73  X_73    16 non-null     float32
 74  X_74    16 non-null     float32
 75  X_75    16 non-null     float32
 76  X_76    16 non-null     float32
 77  X_77    16 non-null     float32
 78  X_78    16 non-null     float32
 79  X_79    16 non-null     float32
 80  X_80    16 non-null     float32
 81  X_81    16 non-null     float32
 82  X_82    16 non-null     float32
 83  X_83    16 non-null     float32
 84  X_84    16 non-null     float32
 85  X_85    16 non-null     float32
 86  X_86    16 non-null     float32
 87  X_87    16 non-null     float32
 88  X_88    16 non-null     float32
 89  X_89    16 non-null     float32
 90  X_90    16 non-null     float32
 91  X_91    16 non-null     float32
 92  X_92    16 non-null     float32
 93  X_93    16 non-null     float32
 94  X_94    16 non-null     float32
 95  X_95    16 non-null     float32
 96  X_96    16 non-null     float32
 97  X_97    16 non-null     float32
 98  X_98    16 non-null     float32
 99  X_99    16 non-null     float32
dtypes: float32(100)
memory usage: 6.4 KB
            X_0       X_1       X_2  ...      X_97      X_98      X_99
index                                ...                              
0      0.935563  2.247500 -1.070940  ...  0.677246 -0.177791 -0.249523
1      0.293314 -1.260450 -3.448018  ...  0.327620  0.164190  2.205145
2      0.596661  1.589408 -0.810968  ... -1.275388  0.026429 -0.565740
3      1.456436 -2.080544  0.694122  ...  0.753116  1.059889  0.328791
4     -1.193096 -0.499944  0.528137  ... -0.506615  1.236806  1.097111
5      0.004588  0.415182  1.122491  ...  0.469463 -1.470150 -1.415749
6     -0.566579  0.216205  0.537669  ... -0.327327  0.253076 -0.257734
7      0.094549 -0.840780 -0.040313  ... -1.588936 -2.097391 -1.175138
8     -1.035038  0.028587  2.388027  ...  0.137861 -0.100060  0.578063
9      0.104933  1.209696  0.297718  ... -0.028398  0.305889  1.176062
10     1.684619 -0.394139  0.273230  ... -0.067597  0.335744 -0.537372
11     0.833314  0.023464 -1.279124  ...  0.708903 -0.350409 -0.664509
12     0.236087  1.340066 -0.531894  ...  1.625548  0.078043 -0.185077
13    -1.152497 -1.187080 -1.877030  ... -0.309107  0.388650 -0.153948
14     1.760033 -1.403882 -1.183618  ...  0.997268 -2.253838 -1.221147
15     1.879904 -0.295988  0.027052  ...  0.519573 -0.809065  0.313258

[16 rows x 100 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 16 entries, 0 to 15
Data columns (total 15 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          16 non-null     int64  
 1   Score_0        16 non-null     float64
 2   Proba_0        16 non-null     float64
 3   LogProba_0     16 non-null     float64
 4   Score_1        16 non-null     float64
 5   Proba_1        16 non-null     float64
 6   LogProba_1     16 non-null     float64
 7   Score_2        16 non-null     float64
 8   Proba_2        16 non-null     float64
 9   LogProba_2     16 non-null     float64
 10  Score_3        16 non-null     float64
 11  Proba_3        16 non-null     float64
 12  LogProba_3     16 non-null     float64
 13  Decision       16 non-null     int64  
 14  DecisionProba  16 non-null     float64
dtypes: float64(13), int64(2)
memory usage: 2.0 KB
    index   Score_0   Proba_0  ...  LogProba_3  Decision  DecisionProba
0       0 -0.990930  0.098205  ...   -0.347727         3       0.706291
1       1 -1.002813  0.096679  ...   -2.326108         2       0.708001
2       2  0.983773  0.706768  ...   -2.318881         0       0.706768
3       3 -0.994819  0.097566  ...   -2.331827         1       0.707487
4       4 -0.987559  0.098387  ...   -2.328769         2       0.706977
5       5 -0.996484  0.097426  ...   -2.324927         2       0.707386
6       6  0.988799  0.708158  ...   -2.330845         0       0.708158
7       7 -0.995958  0.097584  ...   -0.346885         3       0.706887
8       8  0.986301  0.707468  ...   -2.327089         0       0.707468
9       9  0.989740  0.708416  ...   -2.332115         0       0.708416
10     10 -0.990163  0.098093  ...   -0.346513         3       0.707150
11     11  0.983346  0.706651  ...   -2.319717         0       0.706651
12     12 -1.000537  0.096947  ...   -2.325474         1       0.707780
13     13 -0.989458  0.098271  ...   -0.347216         3       0.706653
14     14 -0.995584  0.097381  ...   -2.327540         1       0.707999
15     15 -0.987662  0.098450  ...   -2.330128         2       0.706643

[16 rows x 15 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Score_3', 'Proba_3',
       'LogProba_3', 'Decision', 'DecisionProba'],
      dtype='object')
    index   Score_0  SQL_Proba_0  ...  Py_Proba_2  Py_Proba_3  Py_Decision
0       0 -0.990930     0.098205  ...    0.098267    0.706290            3
1       1 -1.002813     0.096679  ...    0.708002    0.097675            2
2       2  0.983773     0.706768  ...    0.097822    0.098383            0
3       3 -0.994819     0.097566  ...    0.097829    0.097118            1
4       4 -0.987559     0.098387  ...    0.706978    0.097415            2
5       5 -0.996484     0.097426  ...    0.707387    0.097791            2
6       6  0.988799     0.708158  ...    0.097385    0.097214            0
7       7 -0.995958     0.097584  ...    0.097784    0.706886            3
8       8  0.986301     0.707468  ...    0.097736    0.097580            0
9       9  0.989740     0.708416  ...    0.097189    0.097090            0
10     10 -0.990163     0.098093  ...    0.096956    0.707150            3
11     11  0.983346     0.706651  ...    0.097655    0.098301            0
12     12 -1.000537     0.096947  ...    0.097536    0.097737            1
13     13 -0.989458     0.098271  ...    0.097598    0.706653            3
14     14 -0.995584     0.097381  ...    0.097084    0.097536            1
15     15 -0.987662     0.098450  ...    0.706644    0.097283            2

[16 rows x 20 columns]
MLLITE_CLASS_SQL_ERROR ('FourClass_100_tiny', 'RidgeClassifier', 'sqlite') ('Py_Proba_0', 'SQL_Proba_0') 3.2027555679249586e-07
    Py_Proba_0  SQL_Proba_0   SQL_Error_0
0     0.098205     0.098205  2.470460e-07
1     0.096679     0.096679  1.156232e-07
2     0.706768     0.706768  7.234349e-07
3     0.097566     0.097566  8.529369e-08
4     0.098387     0.098387  1.393873e-07
5     0.097425     0.097426 -3.937064e-07
6     0.708157     0.708158 -7.319183e-07
7     0.097584     0.097584 -2.078785e-08
8     0.707468     0.707468  9.940461e-08
9     0.708418     0.708416  1.676455e-06
10    0.098094     0.098093  2.701313e-07
11    0.706651     0.706651 -1.547302e-07
12    0.096947     0.096947  5.440235e-08
13    0.098271     0.098271 -4.858793e-08
14    0.097381     0.097381  2.226527e-07
15    0.098450     0.098450 -1.408475e-07
MLLITE_CLASS_SQL_ERROR ('FourClass_100_tiny', 'RidgeClassifier', 'sqlite') ('Py_Proba_1', 'SQL_Proba_1') 3.484534904325473e-07
    Py_Proba_1  SQL_Proba_1   SQL_Error_1
0     0.097238     0.097238  6.714225e-07
1     0.097644     0.097645 -6.961734e-07
2     0.097027     0.097027  1.066765e-07
3     0.707487     0.707487 -4.983748e-08
4     0.097219     0.097220 -8.395668e-07
5     0.097397     0.097398 -5.100839e-07
6     0.097244     0.097244 -1.187499e-07
7     0.097746     0.097745  4.904190e-08
8     0.097216     0.097216  1.777054e-07
9     0.097303     0.097304 -5.891268e-07
10    0.097800     0.097800 -2.491179e-07
11    0.097393     0.097392  3.427865e-07
12    0.707780     0.707780 -1.481250e-07
13    0.097478     0.097479 -1.175420e-07
14    0.707999     0.707999 -7.516844e-07
15    0.097624     0.097624 -1.576155e-07
MLLITE_CLASS_SQL_ERROR ('FourClass_100_tiny', 'RidgeClassifier', 'sqlite') ('Py_Proba_2', 'SQL_Proba_2') 4.326736393889252e-07
    Py_Proba_2  SQL_Proba_2   SQL_Error_2
0     0.098267     0.098267  5.273452e-07
1     0.708002     0.708001  9.793696e-07
2     0.097822     0.097822 -1.775711e-07
3     0.097829     0.097829 -2.812140e-07
4     0.706978     0.706977  7.896218e-07
5     0.707387     0.707386  5.412771e-07
6     0.097385     0.097384  3.889850e-07
7     0.097784     0.097784  2.948086e-07
8     0.097736     0.097737 -3.285190e-07
9     0.097189     0.097190 -6.400096e-07
10    0.096956     0.096957 -8.112941e-07
11    0.097655     0.097655 -6.144358e-08
12    0.097536     0.097536 -1.436295e-07
13    0.097598     0.097598  1.279065e-07
14    0.097084     0.097084 -3.510242e-07
15    0.706644     0.706643  4.787595e-07
MLLITE_CLASS_SQL_ERROR ('FourClass_100_tiny', 'RidgeClassifier', 'sqlite') ('Py_Proba_3', 'SQL_Proba_3') 4.290807243609307e-07
    Py_Proba_3  SQL_Proba_3   SQL_Error_3
0     0.706290     0.706291 -1.438363e-06
1     0.097675     0.097675 -5.627322e-07
2     0.098383     0.098384 -6.078369e-07
3     0.097118     0.097118  1.489002e-07
4     0.097415     0.097416 -1.490469e-07
5     0.097791     0.097791  3.848648e-07
6     0.097214     0.097214  3.871774e-07
7     0.706886     0.706887 -2.709086e-07
8     0.097580     0.097579  1.557171e-07
9     0.097090     0.097090 -4.324172e-07
10    0.707150     0.707150  8.796876e-07
11    0.098301     0.098301 -1.266128e-07
12    0.097737     0.097737  1.404946e-07
13    0.706653     0.706653  9.782809e-08
14    0.097536     0.097535  8.726053e-07
15    0.097283     0.097283 -2.100988e-07
MLLITE_CLASS_SQL_EXECUTION_STATUS ('FourClass_100_tiny', 'RidgeClassifier', 'sqlite', 'Success')
    Py_Decision  SQL_Decision
0             3             3
1             2             2
2             0             0
3             1             1
4             2             2
5             2             2
6             0             0
7             3             3
8             0             0
9             0             0
10            3             3
11            0             0
12            1             1
13            3             3
14            1             1
15            2             2
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
