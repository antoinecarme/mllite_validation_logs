READING_CSV FourClass_100_original ['data/original/FourClass_100.csv']
           X_0       X_1       X_2  ...      X_98      X_99  target
0     0.347323 -2.297366 -1.081557  ...  0.031633 -1.175074       0
1    -1.647107 -0.559376 -0.366788  ...  0.392754 -0.657531       3
2    -0.676853  0.831335  0.609240  ... -1.881113 -0.604552       2
3    -0.400441 -0.019876  0.319522  ...  0.876870 -1.741137       1
4     1.218101 -1.685854 -0.494455  ... -0.986428  0.346336       0
...        ...       ...       ...  ...       ...       ...     ...
1019 -1.221854 -1.392468 -0.452402  ... -0.108059  0.915534       1
1020 -0.628695  0.684944 -0.828802  ...  1.264883  0.069710       2
1021 -0.880984  0.311331  1.089563  ... -0.003295  0.886445       2
1022  0.164755 -1.177232 -0.820439  ... -0.844387  0.696498       0
1023  1.878680 -0.406975 -0.591808  ... -1.272928  0.631892       0

[1024 rows x 101 columns]
MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
('OPERATION_START', 'TRAINING')
[[ 3.47322851e-01 -2.29736614e+00 -1.08155704e+00  3.06962669e-01
   1.17223673e-01 -8.46890509e-01 -1.30827630e+00  3.56966645e-01
  -2.26500702e+00  1.98961234e+00 -3.64491016e-01 -7.81223834e-01
   1.12828290e+00  3.05001885e-02  1.57965565e+00 -4.79938537e-02
  -7.71460235e-01  2.34245420e+00 -2.00933918e-01  1.06918919e+00
   5.23902252e-02 -6.66218221e-01 -3.19027960e-01 -1.97683656e+00
  -1.34364021e+00  1.56124711e-01 -1.03716075e+00 -1.06576002e+00
   8.01060438e-01 -1.34693539e+00  7.82479703e-01  1.55243635e+00
  -1.47245720e-01 -2.54727340e+00  8.05771112e-01  1.99437127e-01
   1.20345557e+00  1.82078683e+00  6.30875885e-01 -5.35030723e-01
  -2.81642646e-01 -2.71547168e-01 -1.73750925e+00  1.25594699e+00
  -7.77856648e-01  1.10130405e+00  1.26066729e-01  3.77204061e-01
   1.35884070e+00 -2.81735063e-01  1.34374237e+00  4.35596377e-01
  -5.45593441e-01  1.75204539e+00  8.20154622e-02  5.43783545e-01
  -3.83647352e-01 -2.16804886e+00 -3.02134693e-01  1.59483075e+00
  -6.84051812e-01 -2.43183589e+00  1.94443178e+00  5.89336395e-01
  -1.39149642e+00  1.20014977e+00  1.17357194e+00  5.18620074e-01
  -3.10887218e-01  2.22402021e-01 -3.74236912e-01  6.74080968e-01
  -1.78206533e-01 -1.26708579e+00  2.96590030e-01  2.01676369e+00
   2.95390368e-01 -9.42186594e-01  8.08057964e-01  8.01191747e-01
  -4.61870432e-02  6.24929965e-01 -1.37570429e+00  2.53457665e-01
   1.06697547e+00  1.65379655e+00 -2.17532143e-01  1.95535019e-01
   1.17710185e+00  8.93618345e-01 -5.67537665e-01  6.84378684e-01
   7.98551321e-01  7.05120265e-01  1.51104951e+00 -6.19782388e-01
   7.67882943e-01 -1.72001648e+00  3.16334032e-02 -1.17507362e+00]
 [-1.64710665e+00 -5.59376478e-01 -3.66788208e-01 -4.84843940e-01
  -1.92904782e+00 -6.54485762e-01  2.93523222e-01  2.35673580e-02
  -5.36363304e-01 -9.09328938e-01 -2.02112243e-01  2.82230806e+00
  -2.50319034e-01  8.14891219e-01 -2.42998195e+00  6.13404334e-01
   8.81351292e-01 -1.94341803e+00 -1.09773338e+00 -4.86826569e-01
  -2.98090434e+00  2.58214712e+00  5.55466533e-01 -1.14088702e+00
   1.52509356e+00 -7.51894057e-01 -1.82697427e+00  2.02072692e+00
  -5.59185684e-01 -3.15121472e-01 -2.92145401e-01 -4.99537325e+00
  -4.20271397e-01  9.08659458e-01  1.39671397e+00  4.12232542e+00
  -1.46387076e+00 -1.30286634e+00  6.43772304e-01 -5.56667328e-01
  -1.74427176e+00 -1.10641830e-01  1.53107941e+00  2.26066992e-01
   1.50356865e+00  2.50417858e-01  2.25866055e+00  1.08732367e+00
   6.56378984e-01 -2.21400499e+00 -6.71550810e-01  5.32379031e-01
   1.50281322e+00  5.98462462e-01  8.08542669e-01  1.00185990e+00
  -7.26945460e-01  5.79589792e-03  1.01587546e+00  8.58362734e-01
  -1.15887272e+00 -7.03131258e-01  7.18528688e-01  1.52275538e+00
  -4.20707047e-01  1.06377028e-01 -8.13656807e-01  5.86826444e-01
   5.11575997e-01  3.57694328e-01  1.54340863e-01 -2.17063795e-03
   1.57960832e-01  8.99749339e-01  3.04069132e-01 -6.45013213e-01
   1.54316461e+00 -1.22146189e+00  1.93475515e-01  1.16132879e+00
  -3.75677019e-01 -4.94781524e-01 -5.32985210e-01  9.74455714e-01
   2.55910866e-02 -3.95585656e-01  2.26190120e-01 -1.84775621e-01
  -7.32691169e-01 -9.42172766e-01 -2.00377434e-01 -4.28262830e-01
   1.22579134e+00  9.21110511e-01 -5.67833148e-02  6.08430207e-01
   5.61827064e-01 -8.99677515e-01  3.92753810e-01 -6.57531381e-01]
 [-6.76853240e-01  8.31335187e-01  6.09239936e-01 -3.98119241e-01
  -1.03613138e+00  1.86545348e+00 -2.99921948e-02  1.23699188e+00
  -3.10400069e-01 -1.66578853e+00  2.82906651e-01 -1.58725366e-01
   2.20662093e+00 -4.93292689e-01 -1.76793829e-01 -1.38015771e+00
   6.54061317e-01  1.66178632e+00 -4.23623212e-02  7.33923540e-02
  -1.28974462e+00 -6.08807206e-01 -5.37915416e-02 -1.06266201e+00
  -6.12586856e-01  1.02035415e+00 -8.65059793e-01  2.31099033e+00
   7.26519465e-01 -5.17112792e-01 -4.91910011e-01 -5.71883917e-01
   8.89418960e-01  1.33230197e+00  2.22920492e-01 -1.50337029e+00
  -8.69769871e-01 -5.54722905e-01  3.37273270e-01  2.58407855e+00
   6.08922802e-02  4.44354296e-01 -1.30670202e+00  1.54146194e+00
  -9.92423296e-01  8.96399975e-01  5.98113596e-01 -2.72305942e+00
   1.12555838e+00  1.15843654e+00 -8.20712984e-01  4.21623468e-01
  -8.62778962e-01 -3.75429320e+00 -7.63869584e-01 -2.06098700e+00
   1.26129067e+00 -8.62655282e-01 -3.53125423e-01  1.87429354e-01
   2.40926409e+00  1.03870296e+00  2.94107723e+00 -6.68464899e-01
  -1.05689490e+00 -9.77571607e-01 -1.04054523e+00  9.69231367e-01
  -1.00295410e-01  6.52887344e-01  6.17550194e-01  4.99298990e-01
   1.26067770e+00  7.07293212e-01 -2.47717813e-01 -4.45781797e-01
  -1.04054236e+00 -1.99657369e+00  6.79951072e-01 -5.93423319e+00
   9.02048707e-01  5.37436426e-01  2.73002256e-02 -1.91943955e+00
  -8.76833081e-01 -4.31168526e-01  7.10626900e-01 -5.69873333e-01
   4.01930600e-01  1.42096341e+00  1.82980871e+00 -1.86199975e+00
  -3.90694022e-01  6.39520347e-01  5.25764823e-01  1.24543273e+00
  -1.53520733e-01  1.03520393e+00 -1.88111317e+00 -6.04552388e-01]
 [-4.00441319e-01 -1.98757872e-02  3.19521725e-01  1.14345104e-02
   4.44668829e-01 -5.44643104e-01 -5.67534864e-01 -1.11695506e-01
   9.17346597e-01  2.17633176e+00  5.77383995e-01 -5.60203028e+00
  -1.42889488e+00  1.97952077e-01  7.21799016e-01  3.61139551e-02
   1.14052773e-01 -6.52566433e-01 -2.09493661e+00 -9.77385521e-01
  -1.26332545e+00  1.01208007e+00  2.11924180e-01  4.55015242e-01
  -1.00735426e+00  6.66458547e-01 -5.66618264e-01 -1.88953769e+00
  -1.37321591e+00  9.06147480e-01 -4.09562230e-01 -6.32287979e-01
   1.49663556e+00  5.65571010e-01  5.07283330e-01 -1.23427284e+00
  -7.21220016e-01 -8.81612778e-01  4.21643108e-01 -1.44344091e+00
  -1.03373341e-01  3.90902668e-01  5.75945795e-01 -1.17322549e-01
   2.67432690e-01 -5.80830336e-01  3.01645517e+00 -1.71445802e-01
   9.16514099e-01 -1.83500373e+00  8.19151282e-01  4.82676893e-01
  -1.04324055e+00 -8.17846417e-01 -5.99715769e-01 -1.66075468e-01
   6.59403354e-02  6.82892680e-01 -9.62234616e-01 -1.99732578e+00
   2.53703523e+00 -1.37351826e-01  1.07769120e+00 -1.38365710e+00
   1.10983276e+00  4.23772955e+00  7.09234619e+00 -1.57042241e+00
   1.09542477e+00 -1.83895707e+00 -8.40235353e-01  1.01329279e+00
   3.54738742e-01 -1.09836936e+00  1.10655773e+00 -8.24851692e-01
  -7.89767146e-01 -3.98110330e-01  6.03429861e-02 -6.23909140e+00
   7.30880380e-01  1.18361145e-01 -1.11915288e-03 -4.08917695e-01
  -1.39013410e+00  3.42981100e-01 -9.26245093e-01  1.67330444e-01
   2.18653727e+00  8.47398266e-02 -7.97351718e-01  6.32606626e-01
  -1.49796498e+00 -1.13130498e+00  1.43576074e+00  6.52661562e-01
   1.63416207e-01 -9.04832542e-01  8.76869738e-01 -1.74113703e+00]
 [ 1.21810114e+00 -1.68585432e+00 -4.94454563e-01  2.87022322e-01
  -3.53320628e-01 -4.50579852e-01  9.93732661e-02  9.25006628e-01
  -7.56314933e-01 -5.39256871e-01 -1.20916855e+00  1.02539611e+00
  -1.09747291e+00 -1.45594823e+00  1.19270973e-01  1.86173356e+00
  -9.82656538e-01  6.64736927e-02 -2.05938607e-01  1.05654478e+00
   9.22646046e-01  1.12333155e+00  1.17571425e+00 -6.29412234e-01
   1.61132610e+00 -1.91391003e+00 -4.59565043e-01 -1.16102064e+00
  -1.39079845e+00 -8.81523669e-01 -9.03242469e-01  1.82114768e+00
   4.87996578e-01 -1.37382641e-01 -2.34781474e-01  7.26142824e-01
   3.07820827e-01  1.50837407e-01  1.53998506e+00 -2.02279663e+00
  -1.57325840e+00  2.62957501e+00  2.09398955e-01 -6.84048891e-01
  -3.10046107e-01  1.48395896e+00  3.09137630e+00 -5.55506527e-01
   3.85253340e-01 -1.30145824e+00  1.53714919e+00  2.41403729e-02
  -6.21745646e-01  1.45647573e+00 -7.22888231e-01  1.73712566e-01
   1.41454911e+00  4.77731675e-01  4.00165826e-01 -2.17149496e-01
  -1.04079318e+00 -1.31315351e+00 -9.61484730e-01 -1.62114716e+00
   2.46012235e+00  2.77045429e-01  2.74489689e+00 -3.11465472e-01
   3.73400897e-01  1.05177593e+00  8.95944595e-01 -8.24351490e-01
  -7.43535459e-01  4.91173297e-01 -2.78651386e-01  9.27095354e-01
   8.15894365e-01  4.56068516e-02  9.10023570e-01  4.47624683e+00
  -1.49312541e-01 -2.58909672e-01  2.28618336e+00 -5.51266074e-01
  -7.33416498e-01  6.06952071e-01  1.21200502e+00 -1.65898681e-01
  -2.18560517e-01  1.86267841e+00 -2.62171984e-01 -6.22047484e-01
  -7.95441329e-01 -6.91370070e-01 -1.14353561e+00  7.35229015e-01
   5.01660764e-01  5.73215961e-01 -9.86428082e-01  3.46335888e-01]] [0 3 2 1 0]
MLLITE_FIT_USING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 6 6
('OPERATION_END_ELAPSED', 0.663, 'TRAINING')
{ ,   }
{ ,   }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 1024, "dataset_features" : 100 },
	"classes" : [ 0, 1, 2, 3 ],
	"equations" : {
		"class_0" : {
			"intercept" : -0.597073,
			"coeffs" : [ -0.001595, -0.001982, -0.005353, 0.018841, 0.016128, -0.010243, 0.001177, 0.022296, 0.013508, 0.005939, -0.012131, -0.018531, -0.005154, 0.016414, -0.010139, 0.016580, -0.005364, -0.002308, 0.024118, -0.003147, -0.017514, 0.013282, -0.009752, 0.009979, 0.012738, 0.017545, -0.024696, 0.025686, 0.001195, -0.024827, -0.016954, 0.113042, -0.056323, -0.003822, 0.011510, -0.002731, -0.024433, 0.031320, -0.031148, -0.040167, 0.022540, 0.001711, -0.012373, 0.016615, -0.022797, -0.032952, 0.051097, -0.015117, -0.021671, -0.085263, 0.015921, 0.011724, 0.019412, 0.104623, 0.006244, 0.006459, -0.019475, -0.022904, -0.001219, 0.008469, -0.062347, -0.028638, 0.123848, 0.027151, 0.012818, -0.008029, 0.014650, 0.012211, -0.008030, 0.018901, 0.038617, -0.018218, 0.000341, 0.001789, -0.016657, 0.028437, -0.021740, 0.000076, 0.035340, 0.008632, -0.019243, -0.028199, 0.026106, -0.061000, 0.006934, -0.015512, -0.031868, -0.042295, -0.008557, -0.039384, 0.024597, 0.031739, 0.007257, -0.002098, 0.012924, -0.002874, 0.012473, -0.000907, -0.008004, 0.007288 ]
		},
		"class_1" : {
			"intercept" : -0.458797,
			"coeffs" : [ 0.003584, -0.025373, 0.024860, -0.008321, -0.000572, 0.022867, -0.015827, 0.000644, 0.020816, 0.043514, -0.006664, 0.003734, -0.028186, -0.040341, 0.028306, 0.012744, 0.013571, 0.015951, 0.016137, 0.000646, -0.006200, 0.028091, 0.021441, -0.017987, -0.029730, -0.036832, 0.042713, -0.017817, -0.003451, -0.002750, 0.013728, 0.040652, 0.010941, -0.001437, 0.010054, -0.028648, 0.007005, -0.031864, 0.005335, -0.016798, 0.037218, -0.005439, 0.003108, -0.000376, 0.039286, -0.004825, -0.049008, -0.013592, 0.004076, 0.011665, 0.018934, -0.004153, 0.014220, -0.017229, -0.026302, 0.019190, 0.070387, 0.026096, 0.019652, -0.009996, 0.030742, 0.014629, 0.094719, -0.024599, -0.037028, 0.004015, -0.002913, 0.047333, -0.012185, -0.054749, -0.041847, -0.001903, 0.019882, 0.008418, -0.005993, -0.025511, 0.037191, 0.009211, -0.023448, -0.012359, 0.002581, -0.030436, 0.012058, 0.058399, 0.021069, -0.004197, -0.010377, 0.005559, 0.006323, -0.009562, -0.007847, -0.031579, 0.017903, 0.014461, 0.002874, 0.021842, -0.024552, 0.002534, 0.040097, -0.025697 ]
		},
		"class_2" : {
			"intercept" : -0.405739,
			"coeffs" : [ -0.015115, -0.005525, -0.030317, -0.034445, 0.025235, -0.012599, 0.055476, -0.029351, -0.045008, -0.033835, 0.012622, -0.020703, 0.050164, 0.024849, -0.002699, 0.012048, 0.005708, -0.046591, -0.022108, 0.009342, -0.008019, -0.043124, -0.028182, 0.025747, 0.003406, 0.010602, -0.018898, 0.020375, -0.014662, -0.008090, -0.007072, -0.016875, 0.014170, 0.006681, 0.000848, 0.008674, -0.002968, 0.021145, -0.017685, 0.020124, -0.022499, 0.004135, 0.013935, -0.009256, -0.016096, 0.020219, -0.055518, -0.037458, -0.019014, 0.079177, 0.007633, -0.030345, -0.019892, -0.046710, 0.013476, -0.049152, -0.027198, 0.020951, 0.014801, -0.011155, 0.137016, -0.011788, -0.067081, -0.006925, 0.042827, 0.007424, -0.026180, -0.010818, 0.012832, 0.034471, -0.009577, 0.020824, 0.026820, -0.017525, 0.011236, 0.028338, -0.037383, -0.051623, -0.010745, -0.004590, 0.036134, 0.016399, -0.010784, -0.027745, -0.057784, 0.005486, 0.020585, 0.006282, 0.029512, 0.014958, -0.007285, -0.011996, 0.013468, -0.041626, 0.013227, -0.036200, 0.009156, -0.000139, -0.018051, 0.009088 ]
		},
		"class_3" : {
			"intercept" : -0.538383,
			"coeffs" : [ 0.013126, 0.032879, 0.010810, 0.023926, -0.040790, -0.000024, -0.040826, 0.006411, 0.010685, -0.015618, 0.006174, 0.035551, -0.016824, -0.000921, -0.015468, -0.041372, -0.013915, 0.032948, -0.018147, -0.006841, 0.031732, 0.001750, 0.016493, -0.017738, 0.013586, 0.008685, 0.000882, -0.028223, 0.016918, 0.035667, 0.010299, -0.136826, 0.031211, -0.001421, -0.022412, 0.022677, 0.020396, -0.020602, 0.043498, 0.036841, -0.037259, -0.000408, -0.004669, -0.006983, -0.000392, 0.017558, 0.053408, 0.066166, 0.036609, -0.005540, -0.042488, 0.022775, -0.013740, -0.040638, 0.006581, 0.023504, -0.023714, -0.024144, -0.033234, 0.012683, -0.105389, 0.025797, -0.151491, 0.004373, -0.018617, -0.003404, 0.014488, -0.048726, 0.007384, 0.001378, 0.012806, -0.000703, -0.047043, 0.007318, 0.011414, -0.031264, 0.021933, 0.042336, -0.001148, 0.008309, -0.019472, 0.042236, -0.027380, 0.030346, 0.029780, 0.014223, 0.021660, 0.030454, -0.027279, 0.033988, -0.009465, 0.011836, -0.038628, 0.029264, -0.029025, 0.017232, 0.002923, -0.001489, -0.014042, 0.009320 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_100_original.json'

RELOADING_MODEL_FROM_JSON_START ('FourClass_100_original', 'RidgeClassifier')
MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
MLLITE_RELOADING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 1024, "dataset_features" : 100 },
	"classes" : [ 0, 1, 2, 3 ],
	"equations" : {
		"class_0" : {
			"intercept" : -0.597073,
			"coeffs" : [ -0.001595, -0.001982, -0.005353, 0.018841, 0.016128, -0.010243, 0.001177, 0.022296, 0.013508, 0.005939, -0.012131, -0.018531, -0.005154, 0.016414, -0.010139, 0.016580, -0.005364, -0.002308, 0.024118, -0.003147, -0.017514, 0.013282, -0.009752, 0.009979, 0.012738, 0.017545, -0.024696, 0.025686, 0.001195, -0.024827, -0.016954, 0.113042, -0.056323, -0.003822, 0.011510, -0.002731, -0.024433, 0.031320, -0.031148, -0.040167, 0.022540, 0.001711, -0.012373, 0.016615, -0.022797, -0.032952, 0.051097, -0.015117, -0.021671, -0.085263, 0.015921, 0.011724, 0.019412, 0.104623, 0.006244, 0.006459, -0.019475, -0.022904, -0.001219, 0.008469, -0.062347, -0.028638, 0.123848, 0.027151, 0.012818, -0.008029, 0.014650, 0.012211, -0.008030, 0.018901, 0.038617, -0.018218, 0.000341, 0.001789, -0.016657, 0.028437, -0.021740, 0.000076, 0.035340, 0.008632, -0.019243, -0.028199, 0.026106, -0.061000, 0.006934, -0.015512, -0.031868, -0.042295, -0.008557, -0.039384, 0.024597, 0.031739, 0.007257, -0.002098, 0.012924, -0.002874, 0.012473, -0.000907, -0.008004, 0.007288 ]
		},
		"class_1" : {
			"intercept" : -0.458797,
			"coeffs" : [ 0.003584, -0.025373, 0.024860, -0.008321, -0.000572, 0.022867, -0.015827, 0.000644, 0.020816, 0.043514, -0.006664, 0.003734, -0.028186, -0.040341, 0.028306, 0.012744, 0.013571, 0.015951, 0.016137, 0.000646, -0.006200, 0.028091, 0.021441, -0.017987, -0.029730, -0.036832, 0.042713, -0.017817, -0.003451, -0.002750, 0.013728, 0.040652, 0.010941, -0.001437, 0.010054, -0.028648, 0.007005, -0.031864, 0.005335, -0.016798, 0.037218, -0.005439, 0.003108, -0.000376, 0.039286, -0.004825, -0.049008, -0.013592, 0.004076, 0.011665, 0.018934, -0.004153, 0.014220, -0.017229, -0.026302, 0.019190, 0.070387, 0.026096, 0.019652, -0.009996, 0.030742, 0.014629, 0.094719, -0.024599, -0.037028, 0.004015, -0.002913, 0.047333, -0.012185, -0.054749, -0.041847, -0.001903, 0.019882, 0.008418, -0.005993, -0.025511, 0.037191, 0.009211, -0.023448, -0.012359, 0.002581, -0.030436, 0.012058, 0.058399, 0.021069, -0.004197, -0.010377, 0.005559, 0.006323, -0.009562, -0.007847, -0.031579, 0.017903, 0.014461, 0.002874, 0.021842, -0.024552, 0.002534, 0.040097, -0.025697 ]
		},
		"class_2" : {
			"intercept" : -0.405739,
			"coeffs" : [ -0.015115, -0.005525, -0.030317, -0.034445, 0.025235, -0.012599, 0.055476, -0.029351, -0.045008, -0.033835, 0.012622, -0.020703, 0.050164, 0.024849, -0.002699, 0.012048, 0.005708, -0.046591, -0.022108, 0.009342, -0.008019, -0.043124, -0.028182, 0.025747, 0.003406, 0.010602, -0.018898, 0.020375, -0.014662, -0.008090, -0.007072, -0.016875, 0.014170, 0.006681, 0.000848, 0.008674, -0.002968, 0.021145, -0.017685, 0.020124, -0.022499, 0.004135, 0.013935, -0.009256, -0.016096, 0.020219, -0.055518, -0.037458, -0.019014, 0.079177, 0.007633, -0.030345, -0.019892, -0.046710, 0.013476, -0.049152, -0.027198, 0.020951, 0.014801, -0.011155, 0.137016, -0.011788, -0.067081, -0.006925, 0.042827, 0.007424, -0.026180, -0.010818, 0.012832, 0.034471, -0.009577, 0.020824, 0.026820, -0.017525, 0.011236, 0.028338, -0.037383, -0.051623, -0.010745, -0.004590, 0.036134, 0.016399, -0.010784, -0.027745, -0.057784, 0.005486, 0.020585, 0.006282, 0.029512, 0.014958, -0.007285, -0.011996, 0.013468, -0.041626, 0.013227, -0.036200, 0.009156, -0.000139, -0.018051, 0.009088 ]
		},
		"class_3" : {
			"intercept" : -0.538383,
			"coeffs" : [ 0.013126, 0.032879, 0.010810, 0.023926, -0.040790, -0.000024, -0.040826, 0.006411, 0.010685, -0.015618, 0.006174, 0.035551, -0.016824, -0.000921, -0.015468, -0.041372, -0.013915, 0.032948, -0.018147, -0.006841, 0.031732, 0.001750, 0.016493, -0.017738, 0.013586, 0.008685, 0.000882, -0.028223, 0.016918, 0.035667, 0.010299, -0.136826, 0.031211, -0.001421, -0.022412, 0.022677, 0.020396, -0.020602, 0.043498, 0.036841, -0.037259, -0.000408, -0.004669, -0.006983, -0.000392, 0.017558, 0.053408, 0.066166, 0.036609, -0.005540, -0.042488, 0.022775, -0.013740, -0.040638, 0.006581, 0.023504, -0.023714, -0.024144, -0.033234, 0.012683, -0.105389, 0.025797, -0.151491, 0.004373, -0.018617, -0.003404, 0.014488, -0.048726, 0.007384, 0.001378, 0.012806, -0.000703, -0.047043, 0.007318, 0.011414, -0.031264, 0.021933, 0.042336, -0.001148, 0.008309, -0.019472, 0.042236, -0.027380, 0.030346, 0.029780, 0.014223, 0.021660, 0.030454, -0.027279, 0.033988, -0.009465, 0.011836, -0.038628, 0.029264, -0.029025, 0.017232, 0.002923, -0.001489, -0.014042, 0.009320 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1, 2, 3 ],
	"dataset" : 	{
		"dataset_features" : 100,
		"dataset_rows" : 1024
	},
	"equations" : 	{
		"class_0" : 	{
			"coeffs" : [ -0.001595, -0.001982, -0.005353, 0.018841, 0.016128, -0.010243, 0.001177, 0.022296, 0.013508, 0.005939, -0.012131, -0.018531, -0.005154, 0.016414, -0.010139, 0.01658, -0.005364, -0.002308, 0.024118, -0.003147, -0.017514, 0.013282, -0.009752, 0.009979, 0.012738, 0.017545, -0.024696, 0.025686, 0.001195, -0.024827, -0.016954, 0.113042, -0.056323, -0.003822, 0.01151, -0.002731, -0.024433, 0.03132, -0.031148, -0.040167, 0.02254, 0.001711, -0.012373, 0.016615, -0.022797, -0.032952, 0.051097, -0.015117, -0.021671, -0.085263, 0.015921, 0.011724, 0.019412, 0.104623, 0.006244, 0.006459, -0.019475, -0.022904, -0.001219, 0.008469, -0.062347, -0.028638, 0.123848, 0.027151, 0.012818, -0.008029, 0.01465, 0.012211, -0.00803, 0.018901, 0.038617, -0.018218, 0.000341, 0.001789, -0.016657, 0.028437, -0.02174, 7.6e-05, 0.03534, 0.008632, -0.019243, -0.028199, 0.026106, -0.061, 0.006934, -0.015512, -0.031868, -0.042295, -0.008557, -0.039384, 0.024597, 0.031739, 0.007257, -0.002098, 0.012924, -0.002874, 0.012473, -0.000907, -0.008004, 0.007288 ],
			"intercept" : -0.597073
		},
		"class_1" : 	{
			"coeffs" : [ 0.003584, -0.025373, 0.02486, -0.008321, -0.000572, 0.022867, -0.015827, 0.000644, 0.020816, 0.043514, -0.006664, 0.003734, -0.028186, -0.040341, 0.028306, 0.012744, 0.013571, 0.015951, 0.016137, 0.000646, -0.0062, 0.028091, 0.021441, -0.017987, -0.02973, -0.036832, 0.042713, -0.017817, -0.003451, -0.00275, 0.013728, 0.040652, 0.010941, -0.001437, 0.010054, -0.028648, 0.007005, -0.031864, 0.005335, -0.016798, 0.037218, -0.005439, 0.003108, -0.000376, 0.039286, -0.004825, -0.049008, -0.013592, 0.004076, 0.011665, 0.018934, -0.004153, 0.01422, -0.017229, -0.026302, 0.01919, 0.070387, 0.026096, 0.019652, -0.009996, 0.030742, 0.014629, 0.094719, -0.024599, -0.037028, 0.004015, -0.002913, 0.047333, -0.012185, -0.054749, -0.041847, -0.001903, 0.019882, 0.008418, -0.005993, -0.025511, 0.037191, 0.009211, -0.023448, -0.012359, 0.002581, -0.030436, 0.012058, 0.058399, 0.021069, -0.004197, -0.010377, 0.005559, 0.006323, -0.009562, -0.007847, -0.031579, 0.017903, 0.014461, 0.002874, 0.021842, -0.024552, 0.002534, 0.040097, -0.025697 ],
			"intercept" : -0.458797
		},
		"class_2" : 	{
			"coeffs" : [ -0.015115, -0.005525, -0.030317, -0.034445, 0.025235, -0.012599, 0.055476, -0.029351, -0.045008, -0.033835, 0.012622, -0.020703, 0.050164, 0.024849, -0.002699, 0.012048, 0.005708, -0.046591, -0.022108, 0.009342, -0.008019, -0.043124, -0.028182, 0.025747, 0.003406, 0.010602, -0.018898, 0.020375, -0.014662, -0.00809, -0.007072, -0.016875, 0.01417, 0.006681, 0.000848, 0.008674, -0.002968, 0.021145, -0.017685, 0.020124, -0.022499, 0.004135, 0.013935, -0.009256, -0.016096, 0.020219, -0.055518, -0.037458, -0.019014, 0.079177, 0.007633, -0.030345, -0.019892, -0.04671, 0.013476, -0.049152, -0.027198, 0.020951, 0.014801, -0.011155, 0.137016, -0.011788, -0.067081, -0.006925, 0.042827, 0.007424, -0.02618, -0.010818, 0.012832, 0.034471, -0.009577, 0.020824, 0.02682, -0.017525, 0.011236, 0.028338, -0.037383, -0.051623, -0.010745, -0.00459, 0.036134, 0.016399, -0.010784, -0.027745, -0.057784, 0.005486, 0.020585, 0.006282, 0.029512, 0.014958, -0.007285, -0.011996, 0.013468, -0.041626, 0.013227, -0.0362, 0.009156, -0.000139, -0.018051, 0.009088 ],
			"intercept" : -0.405739
		},
		"class_3" : 	{
			"coeffs" : [ 0.013126, 0.032879, 0.01081, 0.023926, -0.04079, -2.4e-05, -0.040826, 0.006411, 0.010685, -0.015618, 0.006174, 0.035551, -0.016824, -0.000921, -0.015468, -0.041372, -0.013915, 0.032948, -0.018147, -0.006841, 0.031732, 0.00175, 0.016493, -0.017738, 0.013586, 0.008685, 0.000882, -0.028223, 0.016918, 0.035667, 0.010299, -0.136826, 0.031211, -0.001421, -0.022412, 0.022677, 0.020396, -0.020602, 0.043498, 0.036841, -0.037259, -0.000408, -0.004669, -0.006983, -0.000392, 0.017558, 0.053408, 0.066166, 0.036609, -0.00554, -0.042488, 0.022775, -0.01374, -0.040638, 0.006581, 0.023504, -0.023714, -0.024144, -0.033234, 0.012683, -0.105389, 0.025797, -0.151491, 0.004373, -0.018617, -0.003404, 0.014488, -0.048726, 0.007384, 0.001378, 0.012806, -0.000703, -0.047043, 0.007318, 0.011414, -0.031264, 0.021933, 0.042336, -0.001148, 0.008309, -0.019472, 0.042236, -0.02738, 0.030346, 0.02978, 0.014223, 0.02166, 0.030454, -0.027279, 0.033988, -0.009465, 0.011836, -0.038628, 0.029264, -0.029025, 0.017232, 0.002923, -0.001489, -0.014042, 0.00932 ],
			"intercept" : -0.538383
		}
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_il8", "version" : "2024-W14" },
	"options" :  { "alpha" : 1.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
RELOADING_MODEL_FROM_JSON_END ('FourClass_100_original', 'RidgeClassifier')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.003, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.003, 'PREDICT')
[[0.4579 0.255  0.1542 0.1329]
 [0.1969 0.1382 0.1305 0.5344]
 [0.1139 0.2479 0.5405 0.0977]
 ...
 [0.1283 0.2195 0.4747 0.1774]
 [0.4552 0.3127 0.1797 0.0523]
 [0.3321 0.2584 0.2147 0.1948]]
(1024, 4)
(1024, 4) float32
MODEL_PERFS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'FourClass_100_original', 'size': 1024, 'accuracy': 0.6748046875, 'auc': 0.8863031475363683}
WRITING_PERF_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_100_original.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'FourClass_100_original', 'training_time_in_sec': 0.663, 'prediction_time_in_sec': 0.003}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 0 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 1 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 2 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 3 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 4 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 5 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 6 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 7 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 8 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 9 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 10 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 11 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 12 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 13 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 14 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 15 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 16 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 17 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 18 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 19 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 20 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 21 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 22 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 23 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 24 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 25 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 26 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 27 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 28 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 29 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 30 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 31 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 32 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 33 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 34 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 35 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 36 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 37 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 38 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 39 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 40 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 41 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 42 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 43 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 44 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 45 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 46 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 47 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 48 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 49 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 50 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 51 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 52 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 53 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 54 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 55 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 56 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 57 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 58 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 59 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 60 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 61 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 62 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 63 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 64 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 65 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 66 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 67 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 68 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 69 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 70 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 71 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 72 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 73 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 74 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 75 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 76 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 77 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 78 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 79 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 80 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 81 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 82 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 83 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 84 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 85 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 86 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 87 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 88 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 89 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 90 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 91 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 92 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 93 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 94 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 95 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 96 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 97 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 98 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 99 100
{
   "Contributions" : {
      "X_0" : [ -0.000085, 0.000149, -0.000458, 0.000395 ],
      "X_1" : [ -0.000203, -0.000102, -0.000108, 0.000413 ],
      "X_2" : [ 0.000198, -0.000847, 0.001027, -0.000378 ],
      "X_3" : [ -0.000128, 0.000269, 0.000465, -0.000606 ],
      "X_4" : [ -0.000084, -0.000205, 0.000239, 0.000050 ],
      "X_5" : [ 0.000375, -0.000856, 0.000525, -0.000044 ],
      "X_6" : [ -0.000616, -0.000666, 0.000780, 0.000501 ],
      "X_7" : [ 0.000413, -0.000160, -0.000081, -0.000172 ],
      "X_8" : [ 0.000058, 0.000202, -0.000386, 0.000126 ],
      "X_9" : [ 0.000224, 0.002143, -0.001273, -0.001093 ],
      "X_10" : [ 0.000368, 0.000216, -0.000360, -0.000224 ],
      "X_11" : [ 0.001005, 0.000273, 0.001049, -0.002327 ],
      "X_12" : [ -0.000221, -0.000734, 0.001253, -0.000298 ],
      "X_13" : [ 0.002500, -0.005399, 0.002897, 0.000003 ],
      "X_14" : [ 0.000478, -0.000954, 0.000063, 0.000413 ],
      "X_15" : [ -0.000696, -0.000344, -0.000458, 0.001498 ],
      "X_16" : [ -0.000031, 0.000311, 0.000173, -0.000453 ],
      "X_17" : [ 0.000064, -0.000572, 0.001887, -0.001378 ],
      "X_18" : [ -0.000240, 0.000213, -0.000523, 0.000550 ],
      "X_19" : [ -0.000081, 0.000022, 0.000474, -0.000414 ],
      "X_20" : [ -0.000819, -0.000336, -0.000395, 0.001550 ],
      "X_21" : [ 0.000544, 0.001441, -0.002161, 0.000177 ],
      "X_22" : [ 0.000676, -0.000897, 0.000733, -0.000512 ],
      "X_23" : [ -0.000860, 0.001620, -0.001674, 0.000914 ],
      "X_24" : [ 0.000405, -0.000934, 0.000120, 0.000409 ],
      "X_25" : [ 0.000278, -0.000698, 0.000140, 0.000280 ],
      "X_26" : [ 0.000947, -0.001239, 0.000350, -0.000058 ],
      "X_27" : [ 0.001420, -0.001784, 0.002099, -0.001735 ],
      "X_28" : [ -0.000033, -0.000083, -0.000204, 0.000320 ],
      "X_29" : [ -0.000797, -0.000078, -0.000275, 0.001149 ],
      "X_30" : [ 0.000284, -0.000202, -0.000095, 0.000013 ],
      "X_31" : [ -0.009489, -0.003057, 0.002082, 0.010464 ],
      "X_32" : [ 0.005200, -0.001347, -0.001358, -0.002494 ],
      "X_33" : [ 0.000013, -0.000006, 0.000004, -0.000011 ],
      "X_34" : [ -0.000487, -0.000072, 0.000074, 0.000485 ],
      "X_35" : [ -0.000235, -0.002299, 0.000502, 0.002031 ],
      "X_36" : [ -0.000092, -0.000079, -0.000108, 0.000279 ],
      "X_37" : [ -0.000408, 0.000395, -0.000096, 0.000109 ],
      "X_38" : [ 0.001097, -0.000590, 0.000432, -0.000940 ],
      "X_39" : [ 0.002304, 0.000380, -0.000718, -0.001965 ],
      "X_40" : [ 0.001446, 0.002259, -0.001520, -0.002185 ],
      "X_41" : [ 0.000081, -0.000277, 0.000219, -0.000022 ],
      "X_42" : [ -0.000592, 0.000211, 0.000399, -0.000018 ],
      "X_43" : [ -0.000679, 0.000099, 0.000218, 0.000362 ],
      "X_44" : [ -0.002070, 0.002912, -0.000813, -0.000029 ],
      "X_45" : [ -0.000671, -0.000316, 0.000629, 0.000359 ],
      "X_46" : [ -0.004469, 0.003243, 0.001906, -0.000680 ],
      "X_47" : [ -0.000393, -0.000421, -0.001571, 0.002386 ],
      "X_48" : [ 0.000595, 0.000119, 0.000979, -0.001692 ],
      "X_49" : [ 0.009155, -0.002712, -0.006893, 0.000449 ],
      "X_50" : [ 0.000446, 0.000565, 0.000197, -0.001208 ],
      "X_51" : [ 0.000324, -0.000109, -0.000438, 0.000224 ],
      "X_52" : [ 0.000189, 0.000642, -0.000667, -0.000163 ],
      "X_53" : [ 0.002637, 0.000178, -0.000456, -0.002358 ],
      "X_54" : [ -0.000128, -0.000086, 0.000156, 0.000058 ],
      "X_55" : [ 0.000250, 0.000346, -0.001337, 0.000741 ],
      "X_56" : [ 0.000338, -0.002387, 0.001046, 0.001003 ],
      "X_57" : [ 0.000050, -0.000092, -0.000077, 0.000119 ],
      "X_58" : [ 0.000167, -0.000505, -0.000621, 0.000958 ],
      "X_59" : [ 0.000130, -0.000084, -0.000105, 0.000059 ],
      "X_60" : [ -0.000694, -0.001691, 0.005288, -0.002903 ],
      "X_61" : [ -0.000896, 0.000419, -0.000180, 0.000657 ],
      "X_62" : [ -0.010160, -0.007682, 0.003679, 0.014164 ],
      "X_63" : [ 0.000796, -0.000640, -0.000179, 0.000023 ],
      "X_64" : [ 0.001229, -0.003413, 0.003621, -0.001438 ],
      "X_65" : [ -0.001096, 0.000606, 0.000977, -0.000487 ],
      "X_66" : [ -0.001384, -0.000963, 0.002821, -0.000474 ],
      "X_67" : [ 0.000709, 0.001376, -0.000039, -0.002047 ],
      "X_68" : [ 0.000097, 0.000258, -0.000212, -0.000143 ],
      "X_69" : [ -0.000197, -0.000202, 0.000163, 0.000235 ],
      "X_70" : [ -0.000453, 0.000440, 0.000223, -0.000209 ],
      "X_71" : [ 0.000852, 0.000041, -0.000900, 0.000007 ],
      "X_72" : [ -0.000084, 0.001065, 0.001223, -0.002204 ],
      "X_73" : [ -0.000003, 0.000321, -0.000612, 0.000295 ],
      "X_74" : [ 0.000308, 0.000077, -0.000193, -0.000191 ],
      "X_75" : [ 0.002928, -0.002521, 0.002115, -0.002521 ],
      "X_76" : [ -0.001590, 0.002242, -0.002010, 0.001358 ],
      "X_77" : [ 0.000181, 0.000337, -0.001729, 0.001211 ],
      "X_78" : [ 0.002255, -0.001580, -0.000650, -0.000024 ],
      "X_79" : [ -0.001654, 0.001760, 0.000447, -0.000552 ],
      "X_80" : [ 0.001439, -0.000181, -0.002249, 0.000991 ],
      "X_81" : [ -0.000929, -0.001246, 0.000752, 0.001422 ],
      "X_82" : [ 0.001299, 0.000430, -0.000503, -0.001225 ],
      "X_83" : [ -0.002682, 0.002539, -0.001160, 0.001303 ],
      "X_84" : [ 0.000128, -0.000205, 0.000170, -0.000093 ],
      "X_85" : [ -0.001874, -0.000246, 0.000607, 0.001512 ],
      "X_86" : [ -0.000148, 0.000424, -0.000427, 0.000151 ],
      "X_87" : [ -0.000504, 0.000000, -0.000057, 0.000561 ],
      "X_88" : [ -0.000316, 0.000305, 0.000442, -0.000431 ],
      "X_89" : [ -0.001902, -0.000390, 0.000732, 0.001561 ],
      "X_90" : [ -0.001664, 0.000715, 0.000374, 0.000575 ],
      "X_91" : [ -0.001554, 0.001640, 0.000597, -0.000683 ],
      "X_92" : [ 0.000338, 0.000840, 0.000671, -0.001849 ],
      "X_93" : [ 0.000273, -0.001102, 0.002282, -0.001453 ],
      "X_94" : [ 0.000506, -0.000035, 0.000219, -0.000690 ],
      "X_95" : [ 0.000015, -0.001194, 0.001570, -0.000391 ],
      "X_96" : [ -0.000352, -0.000043, 0.000314, 0.000081 ],
      "X_97" : [ -0.000004, -0.000018, 0.000004, 0.000018 ],
      "X_98" : [ 0.000266, -0.000564, 0.000110, 0.000188 ],
      "X_99" : [ 0.000442, -0.001612, 0.000674, 0.000496 ]   
   },
   "Most_Contributive_Features_By_Class" : {
      "class_0" : [ 62, 31, 49, 32, 46, 75, 83, 53, 13, 39 ],
      "class_1" : [ 62, 13, 64, 46, 31, 44, 49, 83, 75, 56 ],
      "class_2" : [ 49, 60, 62, 64, 13, 66, 93, 80, 21, 75 ],
      "class_3" : [ 62, 31, 60, 75, 32, 47, 53, 11, 72, 40 ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_100_original_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_100_original_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('FourClass_100_original', 'RidgeClassifier', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('FourClass_100_original', 'RidgeClassifier', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('FourClass_100_original', 'RidgeClassifier', 'duckdb')
ore_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."Score_3" AS "Score_3",
  arg_max_cte."Proba_3" AS "Proba_3",
  CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN LN( arg_max_cte."Proba_3" ) ELSE -1.79769313486231e+308 END AS "LogProba_3",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('FourClass_100_original', 'RidgeClassifier', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 1024 entries, 0 to 1023
Data columns (total 100 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     1024 non-null   float32
 1   X_1     1024 non-null   float32
 2   X_2     1024 non-null   float32
 3   X_3     1024 non-null   float32
 4   X_4     1024 non-null   float32
 5   X_5     1024 non-null   float32
 6   X_6     1024 non-null   float32
 7   X_7     1024 non-null   float32
 8   X_8     1024 non-null   float32
 9   X_9     1024 non-null   float32
 10  X_10    1024 non-null   float32
 11  X_11    1024 non-null   float32
 12  X_12    1024 non-null   float32
 13  X_13    1024 non-null   float32
 14  X_14    1024 non-null   float32
 15  X_15    1024 non-null   float32
 16  X_16    1024 non-null   float32
 17  X_17    1024 non-null   float32
 18  X_18    1024 non-null   float32
 19  X_19    1024 non-null   float32
 20  X_20    1024 non-null   float32
 21  X_21    1024 non-null   float32
 22  X_22    1024 non-null   float32
 23  X_23    1024 non-null   float32
 24  X_24    1024 non-null   float32
 25  X_25    1024 non-null   float32
 26  X_26    1024 non-null   float32
 27  X_27    1024 non-null   float32
 28  X_28    1024 non-null   float32
 29  X_29    1024 non-null   float32
 30  X_30    1024 non-null   float32
 31  X_31    1024 non-null   float32
 32  X_32    1024 non-null   float32
 33  X_33    1024 non-null   float32
 34  X_34    1024 non-null   float32
 35  X_35    1024 non-null   float32
 36  X_36    1024 non-null   float32
 37  X_37    1024 non-null   float32
 38  X_38    1024 non-null   float32
 39  X_39    1024 non-null   float32
 40  X_40    1024 non-null   float32
 41  X_41    1024 non-null   float32
 42  X_42    1024 non-null   float32
 43  X_43    1024 non-null   float32
 44  X_44    1024 non-null   float32
 45  X_45    1024 non-null   float32
 46  X_46    1024 non-null   float32
 47  X_47    1024 non-null   float32
 48  X_48    1024 non-null   float32
 49  X_49    1024 non-null   float32
 50  X_50    1024 non-null   float32
 51  X_51    1024 non-null   float32
 52  X_52    1024 non-null   float32
 53  X_53    1024 non-null   float32
 54  X_54    1024 non-null   float32
 55  X_55    1024 non-null   float32
 56  X_56    1024 non-null   float32
 57  X_57    1024 non-null   float32
 58  X_58    1024 non-null   float32
 59  X_59    1024 non-null   float32
 60  X_60    1024 non-null   float32
 61  X_61    1024 non-null   float32
 62  X_62    1024 non-null   float32
 63  X_63    1024 non-null   float32
 64  X_64    1024 non-null   float32
 65  X_65    1024 non-null   float32
 66  X_66    1024 non-null   float32
 67  X_67    1024 non-null   float32
 68  X_68    1024 non-null   float32
 69  X_69    1024 non-null   float32
 70  X_70    1024 non-null   float32
 71  X_71    1024 non-null   float32
 72  X_72    1024 non-null   float32
 73  X_73    1024 non-null   float32
 74  X_74    1024 non-null   float32
 75  X_75    1024 non-null   float32
 76  X_76    1024 non-null   float32
 77  X_77    1024 non-null   float32
 78  X_78    1024 non-null   float32
 79  X_79    1024 non-null   float32
 80  X_80    1024 non-null   float32
 81  X_81    1024 non-null   float32
 82  X_82    1024 non-null   float32
 83  X_83    1024 non-null   float32
 84  X_84    1024 non-null   float32
 85  X_85    1024 non-null   float32
 86  X_86    1024 non-null   float32
 87  X_87    1024 non-null   float32
 88  X_88    1024 non-null   float32
 89  X_89    1024 non-null   float32
 90  X_90    1024 non-null   float32
 91  X_91    1024 non-null   float32
 92  X_92    1024 non-null   float32
 93  X_93    1024 non-null   float32
 94  X_94    1024 non-null   float32
 95  X_95    1024 non-null   float32
 96  X_96    1024 non-null   float32
 97  X_97    1024 non-null   float32
 98  X_98    1024 non-null   float32
 99  X_99    1024 non-null   float32
dtypes: float32(100)
memory usage: 408.0 KB
            X_0       X_1       X_2  ...      X_97      X_98      X_99
index                                ...                              
0      0.347323 -2.297366 -1.081557  ... -1.720016  0.031633 -1.175074
1     -1.647107 -0.559376 -0.366788  ... -0.899678  0.392754 -0.657531
2     -0.676853  0.831335  0.609240  ...  1.035204 -1.881113 -0.604552
3     -0.400441 -0.019876  0.319522  ... -0.904833  0.876870 -1.741137
4      1.218101 -1.685854 -0.494455  ...  0.573216 -0.986428  0.346336
...         ...       ...       ...  ...       ...       ...       ...
1019  -1.221854 -1.392468 -0.452402  ... -1.450299 -0.108059  0.915534
1020  -0.628695  0.684944 -0.828802  ... -0.367799  1.264883  0.069710
1021  -0.880984  0.311331  1.089563  ... -0.961642 -0.003295  0.886445
1022   0.164755 -1.177232 -0.820439  ...  0.781376 -0.844387  0.696498
1023   1.878680 -0.406975 -0.591808  ... -1.829975 -1.272928  0.631892

[1024 rows x 100 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 1024 entries, 0 to 1023
Data columns (total 15 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          1024 non-null   int64  
 1   Score_0        1024 non-null   float64
 2   Proba_0        1024 non-null   float64
 3   LogProba_0     1024 non-null   float64
 4   Score_1        1024 non-null   float64
 5   Proba_1        1024 non-null   float64
 6   LogProba_1     1024 non-null   float64
 7   Score_2        1024 non-null   float64
 8   Proba_2        1024 non-null   float64
 9   LogProba_2     1024 non-null   float64
 10  Score_3        1024 non-null   float64
 11  Proba_3        1024 non-null   float64
 12  LogProba_3     1024 non-null   float64
 13  Decision       1024 non-null   int64  
 14  DecisionProba  1024 non-null   float64
dtypes: float64(13), int64(2)
memory usage: 120.1 KB
      index   Score_0   Proba_0  ...  LogProba_3  Decision  DecisionProba
0         0  0.227802  0.457931  ...   -2.018384         0       0.457931
1         1 -0.558555  0.196855  ...   -0.626613         3       0.534399
2         2 -1.045627  0.113869  ...   -2.325689         2       0.540497
3         3 -0.647956  0.203300  ...   -1.931803         1       0.363387
4         4  0.026295  0.394690  ...   -1.294283         0       0.394690
...     ...       ...       ...  ...         ...       ...            ...
1019   1019 -0.882966  0.166069  ...   -1.181285         3       0.306884
1020   1020 -1.177702  0.115112  ...   -1.363533         2       0.410731
1021   1021 -1.042257  0.128324  ...   -1.729159         2       0.474749
1022   1022  0.367124  0.455228  ...   -2.950649         0       0.455228
1023   1023 -0.194906  0.332085  ...   -1.635910         0       0.332085

[1024 rows x 15 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Score_3', 'Proba_3',
       'LogProba_3', 'Decision', 'DecisionProba'],
      dtype='object')
      index   Score_0  SQL_Proba_0  ...  Py_Proba_2  Py_Proba_3  Py_Decision
1008   1008 -0.645011     0.205611  ...    0.315131    0.149351            1
1009   1009 -1.147861     0.120447  ...    0.329878    0.205389            1
1010   1010 -0.811907     0.166880  ...    0.138346    0.408230            3
1011   1011 -0.871248     0.164167  ...    0.368800    0.193978            2
1012   1012 -0.521644     0.241070  ...    0.304425    0.189023            2
1013   1013 -0.383441     0.269224  ...    0.324988    0.143779            2
1014   1014  0.010180     0.389294  ...    0.136728    0.246911            0
1015   1015 -0.083054     0.361336  ...    0.168760    0.284551            0
1016   1016 -1.040830     0.100826  ...    0.652212    0.083792            2
1017   1017 -0.761087     0.183837  ...    0.182028    0.257546            1
1018   1018 -1.164620     0.082432  ...    0.144695    0.693156            3
1019   1019 -0.882966     0.166069  ...    0.243738    0.306885            3
1020   1020 -1.177702     0.115112  ...    0.410730    0.255756            2
1021   1021 -1.042257     0.128324  ...    0.474749    0.177433            2
1022   1022  0.367124     0.455228  ...    0.179732    0.052306            0
1023   1023 -0.194906     0.332085  ...    0.214743    0.194775            0

[16 rows x 20 columns]
MLLITE_CLASS_SQL_ERROR ('FourClass_100_original', 'RidgeClassifier', 'duckdb') ('Py_Proba_0', 'SQL_Proba_0') 4.551505881987997e-07
      Py_Proba_0  SQL_Proba_0   SQL_Error_0
1008    0.205611     0.205611  3.505699e-07
1009    0.120447     0.120447  1.691588e-07
1010    0.166880     0.166880 -4.696514e-07
1011    0.164167     0.164167  2.889182e-07
1012    0.241068     0.241070 -1.484313e-06
1013    0.269224     0.269224 -6.158170e-07
1014    0.389295     0.389294  6.768844e-08
1015    0.361336     0.361336  1.632152e-08
1016    0.100826     0.100826  3.602279e-08
1017    0.183836     0.183837 -3.472558e-07
1018    0.082432     0.082432  4.776293e-08
1019    0.166070     0.166069  3.929299e-07
1020    0.115112     0.115112 -2.308573e-07
1021    0.128324     0.128324  8.782311e-08
1022    0.455229     0.455228  4.595594e-07
1023    0.332086     0.332085  6.954969e-07
MLLITE_CLASS_SQL_ERROR ('FourClass_100_original', 'RidgeClassifier', 'duckdb') ('Py_Proba_1', 'SQL_Proba_1') 6.039489339579898e-07
      Py_Proba_1  SQL_Proba_1   SQL_Error_1
1008    0.329907     0.329908 -1.264865e-06
1009    0.344286     0.344286  3.050837e-07
1010    0.286544     0.286547 -2.898313e-06
1011    0.273054     0.273053  1.366869e-06
1012    0.265483     0.265483 -5.218191e-09
1013    0.262010     0.262010 -5.106429e-07
1014    0.227067     0.227066  7.726590e-07
1015    0.185354     0.185353  7.672971e-07
1016    0.163170     0.163170 -8.715951e-08
1017    0.376590     0.376589  6.892369e-07
1018    0.079717     0.079716  2.851064e-07
1019    0.283308     0.283308  5.283911e-07
1020    0.218402     0.218402  4.915848e-07
1021    0.219494     0.219494  1.420230e-07
1022    0.312733     0.312734 -6.750336e-07
1023    0.258396     0.258397 -8.756930e-07
MLLITE_CLASS_SQL_ERROR ('FourClass_100_original', 'RidgeClassifier', 'duckdb') ('Py_Proba_2', 'SQL_Proba_2') 6.09778922661587e-07
      Py_Proba_2  SQL_Proba_2   SQL_Error_2
1008    0.315131     0.315130  8.232746e-07
1009    0.329878     0.329879 -4.099028e-07
1010    0.138346     0.138346  1.776015e-07
1011    0.368800     0.368802 -1.603757e-06
1012    0.304425     0.304424  1.498312e-06
1013    0.324988     0.324986  2.168131e-06
1014    0.136728     0.136728  1.493301e-07
1015    0.168760     0.168761 -1.130860e-06
1016    0.652212     0.652211  6.539813e-07
1017    0.182028     0.182029 -3.613794e-07
1018    0.144695     0.144695  3.713385e-07
1019    0.243738     0.243739 -1.338951e-06
1020    0.410730     0.410731 -8.526289e-07
1021    0.474749     0.474749  5.892214e-07
1022    0.179732     0.179732  1.220088e-07
1023    0.214743     0.214743 -8.420732e-09
MLLITE_CLASS_SQL_ERROR ('FourClass_100_original', 'RidgeClassifier', 'duckdb') ('Py_Proba_3', 'SQL_Proba_3') 5.854391698408967e-07
      Py_Proba_3  SQL_Proba_3   SQL_Error_3
1008    0.149351     0.149351 -5.799157e-08
1009    0.205389     0.205389 -9.414205e-08
1010    0.408230     0.408227  3.205264e-06
1011    0.193978     0.193978 -1.116346e-07
1012    0.189023     0.189023 -5.348413e-08
1013    0.143779     0.143780 -9.522638e-07
1014    0.246911     0.246912 -1.004579e-06
1015    0.284551     0.284550  5.111538e-07
1016    0.083792     0.083793 -6.475481e-07
1017    0.257546     0.257545  7.900291e-08
1018    0.693156     0.693156 -5.998997e-07
1019    0.306885     0.306884  4.921360e-07
1020    0.255756     0.255756  5.322967e-07
1021    0.177433     0.177434 -7.147594e-07
1022    0.052306     0.052306  1.150902e-08
1023    0.194775     0.194775  2.929250e-07
MLLITE_CLASS_SQL_EXECUTION_STATUS ('FourClass_100_original', 'RidgeClassifier', 'duckdb', 'Success')
      Py_Decision  SQL_Decision
1008            1             1
1009            1             1
1010            3             3
1011            2             2
1012            2             2
1013            2             2
1014            0             0
1015            0             0
1016            2             2
1017            1             1
1018            3             3
1019            3             3
1020            2             2
1021            2             2
1022            0             0
1023            0             0
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_100_original_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('FourClass_100_original', 'RidgeClassifier', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('FourClass_100_original', 'RidgeClassifier', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('FourClass_100_original', 'RidgeClassifier', 'sqlite')
ore_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."Score_3" AS "Score_3",
  arg_max_cte."Proba_3" AS "Proba_3",
  CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN LN( arg_max_cte."Proba_3" ) ELSE -1.79769313486231e+308 END AS "LogProba_3",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('FourClass_100_original', 'RidgeClassifier', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 1024 entries, 0 to 1023
Data columns (total 100 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     1024 non-null   float32
 1   X_1     1024 non-null   float32
 2   X_2     1024 non-null   float32
 3   X_3     1024 non-null   float32
 4   X_4     1024 non-null   float32
 5   X_5     1024 non-null   float32
 6   X_6     1024 non-null   float32
 7   X_7     1024 non-null   float32
 8   X_8     1024 non-null   float32
 9   X_9     1024 non-null   float32
 10  X_10    1024 non-null   float32
 11  X_11    1024 non-null   float32
 12  X_12    1024 non-null   float32
 13  X_13    1024 non-null   float32
 14  X_14    1024 non-null   float32
 15  X_15    1024 non-null   float32
 16  X_16    1024 non-null   float32
 17  X_17    1024 non-null   float32
 18  X_18    1024 non-null   float32
 19  X_19    1024 non-null   float32
 20  X_20    1024 non-null   float32
 21  X_21    1024 non-null   float32
 22  X_22    1024 non-null   float32
 23  X_23    1024 non-null   float32
 24  X_24    1024 non-null   float32
 25  X_25    1024 non-null   float32
 26  X_26    1024 non-null   float32
 27  X_27    1024 non-null   float32
 28  X_28    1024 non-null   float32
 29  X_29    1024 non-null   float32
 30  X_30    1024 non-null   float32
 31  X_31    1024 non-null   float32
 32  X_32    1024 non-null   float32
 33  X_33    1024 non-null   float32
 34  X_34    1024 non-null   float32
 35  X_35    1024 non-null   float32
 36  X_36    1024 non-null   float32
 37  X_37    1024 non-null   float32
 38  X_38    1024 non-null   float32
 39  X_39    1024 non-null   float32
 40  X_40    1024 non-null   float32
 41  X_41    1024 non-null   float32
 42  X_42    1024 non-null   float32
 43  X_43    1024 non-null   float32
 44  X_44    1024 non-null   float32
 45  X_45    1024 non-null   float32
 46  X_46    1024 non-null   float32
 47  X_47    1024 non-null   float32
 48  X_48    1024 non-null   float32
 49  X_49    1024 non-null   float32
 50  X_50    1024 non-null   float32
 51  X_51    1024 non-null   float32
 52  X_52    1024 non-null   float32
 53  X_53    1024 non-null   float32
 54  X_54    1024 non-null   float32
 55  X_55    1024 non-null   float32
 56  X_56    1024 non-null   float32
 57  X_57    1024 non-null   float32
 58  X_58    1024 non-null   float32
 59  X_59    1024 non-null   float32
 60  X_60    1024 non-null   float32
 61  X_61    1024 non-null   float32
 62  X_62    1024 non-null   float32
 63  X_63    1024 non-null   float32
 64  X_64    1024 non-null   float32
 65  X_65    1024 non-null   float32
 66  X_66    1024 non-null   float32
 67  X_67    1024 non-null   float32
 68  X_68    1024 non-null   float32
 69  X_69    1024 non-null   float32
 70  X_70    1024 non-null   float32
 71  X_71    1024 non-null   float32
 72  X_72    1024 non-null   float32
 73  X_73    1024 non-null   float32
 74  X_74    1024 non-null   float32
 75  X_75    1024 non-null   float32
 76  X_76    1024 non-null   float32
 77  X_77    1024 non-null   float32
 78  X_78    1024 non-null   float32
 79  X_79    1024 non-null   float32
 80  X_80    1024 non-null   float32
 81  X_81    1024 non-null   float32
 82  X_82    1024 non-null   float32
 83  X_83    1024 non-null   float32
 84  X_84    1024 non-null   float32
 85  X_85    1024 non-null   float32
 86  X_86    1024 non-null   float32
 87  X_87    1024 non-null   float32
 88  X_88    1024 non-null   float32
 89  X_89    1024 non-null   float32
 90  X_90    1024 non-null   float32
 91  X_91    1024 non-null   float32
 92  X_92    1024 non-null   float32
 93  X_93    1024 non-null   float32
 94  X_94    1024 non-null   float32
 95  X_95    1024 non-null   float32
 96  X_96    1024 non-null   float32
 97  X_97    1024 non-null   float32
 98  X_98    1024 non-null   float32
 99  X_99    1024 non-null   float32
dtypes: float32(100)
memory usage: 408.0 KB
            X_0       X_1       X_2  ...      X_97      X_98      X_99
index                                ...                              
0      0.347323 -2.297366 -1.081557  ... -1.720016  0.031633 -1.175074
1     -1.647107 -0.559376 -0.366788  ... -0.899678  0.392754 -0.657531
2     -0.676853  0.831335  0.609240  ...  1.035204 -1.881113 -0.604552
3     -0.400441 -0.019876  0.319522  ... -0.904833  0.876870 -1.741137
4      1.218101 -1.685854 -0.494455  ...  0.573216 -0.986428  0.346336
...         ...       ...       ...  ...       ...       ...       ...
1019  -1.221854 -1.392468 -0.452402  ... -1.450299 -0.108059  0.915534
1020  -0.628695  0.684944 -0.828802  ... -0.367799  1.264883  0.069710
1021  -0.880984  0.311331  1.089563  ... -0.961642 -0.003295  0.886445
1022   0.164755 -1.177232 -0.820439  ...  0.781376 -0.844387  0.696498
1023   1.878680 -0.406975 -0.591808  ... -1.829975 -1.272928  0.631892

[1024 rows x 100 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 1024 entries, 0 to 1023
Data columns (total 15 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          1024 non-null   int64  
 1   Score_0        1024 non-null   float64
 2   Proba_0        1024 non-null   float64
 3   LogProba_0     1024 non-null   float64
 4   Score_1        1024 non-null   float64
 5   Proba_1        1024 non-null   float64
 6   LogProba_1     1024 non-null   float64
 7   Score_2        1024 non-null   float64
 8   Proba_2        1024 non-null   float64
 9   LogProba_2     1024 non-null   float64
 10  Score_3        1024 non-null   float64
 11  Proba_3        1024 non-null   float64
 12  LogProba_3     1024 non-null   float64
 13  Decision       1024 non-null   int64  
 14  DecisionProba  1024 non-null   float64
dtypes: float64(13), int64(2)
memory usage: 120.1 KB
      index   Score_0   Proba_0  ...  LogProba_3  Decision  DecisionProba
0         0  0.227802  0.457931  ...   -2.018385         0       0.457931
1         1 -0.558555  0.196855  ...   -0.626613         3       0.534399
2         2 -1.045627  0.113869  ...   -2.325689         2       0.540497
3         3 -0.647956  0.203300  ...   -1.931803         1       0.363387
4         4  0.026296  0.394690  ...   -1.294283         0       0.394690
...     ...       ...       ...  ...         ...       ...            ...
1019   1019 -0.882966  0.166069  ...   -1.181285         3       0.306884
1020   1020 -1.177702  0.115112  ...   -1.363533         2       0.410731
1021   1021 -1.042257  0.128324  ...   -1.729159         2       0.474749
1022   1022  0.367124  0.455229  ...   -2.950649         0       0.455229
1023   1023 -0.194906  0.332085  ...   -1.635910         0       0.332085

[1024 rows x 15 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Score_3', 'Proba_3',
       'LogProba_3', 'Decision', 'DecisionProba'],
      dtype='object')
      index   Score_0  SQL_Proba_0  ...  Py_Proba_2  Py_Proba_3  Py_Decision
1008   1008 -0.645011     0.205611  ...    0.315131    0.149351            1
1009   1009 -1.147861     0.120447  ...    0.329878    0.205389            1
1010   1010 -0.811907     0.166880  ...    0.138346    0.408230            3
1011   1011 -0.871248     0.164167  ...    0.368800    0.193978            2
1012   1012 -0.521644     0.241070  ...    0.304425    0.189023            2
1013   1013 -0.383441     0.269224  ...    0.324988    0.143779            2
1014   1014  0.010180     0.389294  ...    0.136728    0.246911            0
1015   1015 -0.083054     0.361336  ...    0.168760    0.284551            0
1016   1016 -1.040831     0.100826  ...    0.652212    0.083792            2
1017   1017 -0.761087     0.183837  ...    0.182028    0.257546            1
1018   1018 -1.164620     0.082432  ...    0.144695    0.693156            3
1019   1019 -0.882966     0.166069  ...    0.243738    0.306885            3
1020   1020 -1.177702     0.115112  ...    0.410730    0.255756            2
1021   1021 -1.042257     0.128324  ...    0.474749    0.177433            2
1022   1022  0.367124     0.455229  ...    0.179732    0.052306            0
1023   1023 -0.194906     0.332085  ...    0.214743    0.194775            0

[16 rows x 20 columns]
MLLITE_CLASS_SQL_ERROR ('FourClass_100_original', 'RidgeClassifier', 'sqlite') ('Py_Proba_0', 'SQL_Proba_0') 4.550277485310407e-07
      Py_Proba_0  SQL_Proba_0   SQL_Error_0
1008    0.205611     0.205611  3.528689e-07
1009    0.120447     0.120447  1.631556e-07
1010    0.166880     0.166880 -4.566438e-07
1011    0.164167     0.164167  2.733280e-07
1012    0.241068     0.241070 -1.500067e-06
1013    0.269224     0.269224 -6.141315e-07
1014    0.389295     0.389294  1.030394e-07
1015    0.361336     0.361336  3.765746e-09
1016    0.100826     0.100826  6.454529e-08
1017    0.183836     0.183837 -3.176278e-07
1018    0.082432     0.082432  5.688174e-08
1019    0.166070     0.166069  3.949641e-07
1020    0.115112     0.115112 -2.422050e-07
1021    0.128324     0.128324  8.806593e-08
1022    0.455229     0.455229  4.135628e-07
1023    0.332086     0.332085  6.614327e-07
MLLITE_CLASS_SQL_ERROR ('FourClass_100_original', 'RidgeClassifier', 'sqlite') ('Py_Proba_1', 'SQL_Proba_1') 6.031534395467883e-07
      Py_Proba_1  SQL_Proba_1   SQL_Error_1
1008    0.329907     0.329908 -1.281529e-06
1009    0.344286     0.344286  3.156078e-07
1010    0.286544     0.286547 -2.924807e-06
1011    0.273054     0.273053  1.399925e-06
1012    0.265483     0.265483 -2.100527e-08
1013    0.262010     0.262010 -5.060923e-07
1014    0.227067     0.227066  8.091302e-07
1015    0.185354     0.185353  7.373333e-07
1016    0.163170     0.163170 -1.100248e-07
1017    0.376590     0.376589  6.823647e-07
1018    0.079717     0.079716  3.017399e-07
1019    0.283308     0.283308  5.107601e-07
1020    0.218402     0.218402  5.521844e-07
1021    0.219494     0.219494  1.758997e-07
1022    0.312733     0.312734 -6.109504e-07
1023    0.258396     0.258397 -8.706016e-07
MLLITE_CLASS_SQL_ERROR ('FourClass_100_original', 'RidgeClassifier', 'sqlite') ('Py_Proba_2', 'SQL_Proba_2') 6.093363149834108e-07
      Py_Proba_2  SQL_Proba_2   SQL_Error_2
1008    0.315131     0.315130  8.220550e-07
1009    0.329878     0.329879 -4.212384e-07
1010    0.138346     0.138346  1.997853e-07
1011    0.368800     0.368802 -1.617107e-06
1012    0.304425     0.304424  1.512935e-06
1013    0.324988     0.324986  2.126105e-06
1014    0.136728     0.136728  7.201718e-08
1015    0.168760     0.168761 -1.097547e-06
1016    0.652212     0.652211  6.343291e-07
1017    0.182028     0.182029 -3.784332e-07
1018    0.144695     0.144695  3.710183e-07
1019    0.243738     0.243739 -1.342663e-06
1020    0.410730     0.410731 -8.969840e-07
1021    0.474749     0.474749  5.665280e-07
1022    0.179732     0.179732  1.262015e-07
1023    0.214743     0.214743 -2.373473e-08
MLLITE_CLASS_SQL_ERROR ('FourClass_100_original', 'RidgeClassifier', 'sqlite') ('Py_Proba_3', 'SQL_Proba_3') 5.847809121439093e-07
      Py_Proba_3  SQL_Proba_3   SQL_Error_3
1008    0.149351     0.149351 -4.240684e-08
1009    0.205389     0.205389 -8.732723e-08
1010    0.408230     0.408227  3.196567e-06
1011    0.193978     0.193978 -1.157512e-07
1012    0.189023     0.189023 -3.656572e-08
1013    0.143779     0.143780 -9.164740e-07
1014    0.246911     0.246912 -9.990880e-07
1015    0.284551     0.284550  5.203612e-07
1016    0.083792     0.083793 -6.335530e-07
1017    0.257546     0.257545  7.330103e-08
1018    0.693156     0.693157 -6.253317e-07
1019    0.306885     0.306884  5.114450e-07
1020    0.255756     0.255756  5.273999e-07
1021    0.177433     0.177434 -7.261854e-07
1022    0.052306     0.052306 -1.077029e-08
1023    0.194775     0.194775  3.372117e-07
MLLITE_CLASS_SQL_EXECUTION_STATUS ('FourClass_100_original', 'RidgeClassifier', 'sqlite', 'Success')
      Py_Decision  SQL_Decision
1008            1             1
1009            1             1
1010            3             3
1011            2             2
1012            2             2
1013            2             2
1014            0             0
1015            0             0
1016            2             2
1017            1             1
1018            3             3
1019            3             3
1020            2             2
1021            2             2
1022            0             0
1023            0             0
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
