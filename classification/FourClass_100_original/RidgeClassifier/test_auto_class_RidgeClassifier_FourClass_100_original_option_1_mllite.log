READING_CSV FourClass_100_original ['data/original/FourClass_100.csv']
           X_0       X_1       X_2  ...      X_98      X_99  target
0     0.347323 -2.297366 -1.081557  ...  0.031633 -1.175074       0
1    -1.647107 -0.559376 -0.366788  ...  0.392754 -0.657531       3
2    -0.676853  0.831335  0.609240  ... -1.881113 -0.604552       2
3    -0.400441 -0.019876  0.319522  ...  0.876870 -1.741137       1
4     1.218101 -1.685854 -0.494455  ... -0.986428  0.346336       0
...        ...       ...       ...  ...       ...       ...     ...
1019 -1.221854 -1.392468 -0.452402  ... -0.108059  0.915534       1
1020 -0.628695  0.684944 -0.828802  ...  1.264883  0.069710       2
1021 -0.880984  0.311331  1.089563  ... -0.003295  0.886445       2
1022  0.164755 -1.177232 -0.820439  ... -0.844387  0.696498       0
1023  1.878680 -0.406975 -0.591808  ... -1.272928  0.631892       0

[1024 rows x 101 columns]
MLLITE_MODEL_SET_OPTIONS RidgeClassifier {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { "alpha" : 0.0000001,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
('OPERATION_START', 'TRAINING')
[[ 3.47322851e-01 -2.29736614e+00 -1.08155704e+00  3.06962669e-01
   1.17223673e-01 -8.46890509e-01 -1.30827630e+00  3.56966645e-01
  -2.26500702e+00  1.98961234e+00 -3.64491016e-01 -7.81223834e-01
   1.12828290e+00  3.05001885e-02  1.57965565e+00 -4.79938537e-02
  -7.71460235e-01  2.34245420e+00 -2.00933918e-01  1.06918919e+00
   5.23902252e-02 -6.66218221e-01 -3.19027960e-01 -1.97683656e+00
  -1.34364021e+00  1.56124711e-01 -1.03716075e+00 -1.06576002e+00
   8.01060438e-01 -1.34693539e+00  7.82479703e-01  1.55243635e+00
  -1.47245720e-01 -2.54727340e+00  8.05771112e-01  1.99437127e-01
   1.20345557e+00  1.82078683e+00  6.30875885e-01 -5.35030723e-01
  -2.81642646e-01 -2.71547168e-01 -1.73750925e+00  1.25594699e+00
  -7.77856648e-01  1.10130405e+00  1.26066729e-01  3.77204061e-01
   1.35884070e+00 -2.81735063e-01  1.34374237e+00  4.35596377e-01
  -5.45593441e-01  1.75204539e+00  8.20154622e-02  5.43783545e-01
  -3.83647352e-01 -2.16804886e+00 -3.02134693e-01  1.59483075e+00
  -6.84051812e-01 -2.43183589e+00  1.94443178e+00  5.89336395e-01
  -1.39149642e+00  1.20014977e+00  1.17357194e+00  5.18620074e-01
  -3.10887218e-01  2.22402021e-01 -3.74236912e-01  6.74080968e-01
  -1.78206533e-01 -1.26708579e+00  2.96590030e-01  2.01676369e+00
   2.95390368e-01 -9.42186594e-01  8.08057964e-01  8.01191747e-01
  -4.61870432e-02  6.24929965e-01 -1.37570429e+00  2.53457665e-01
   1.06697547e+00  1.65379655e+00 -2.17532143e-01  1.95535019e-01
   1.17710185e+00  8.93618345e-01 -5.67537665e-01  6.84378684e-01
   7.98551321e-01  7.05120265e-01  1.51104951e+00 -6.19782388e-01
   7.67882943e-01 -1.72001648e+00  3.16334032e-02 -1.17507362e+00]
 [-1.64710665e+00 -5.59376478e-01 -3.66788208e-01 -4.84843940e-01
  -1.92904782e+00 -6.54485762e-01  2.93523222e-01  2.35673580e-02
  -5.36363304e-01 -9.09328938e-01 -2.02112243e-01  2.82230806e+00
  -2.50319034e-01  8.14891219e-01 -2.42998195e+00  6.13404334e-01
   8.81351292e-01 -1.94341803e+00 -1.09773338e+00 -4.86826569e-01
  -2.98090434e+00  2.58214712e+00  5.55466533e-01 -1.14088702e+00
   1.52509356e+00 -7.51894057e-01 -1.82697427e+00  2.02072692e+00
  -5.59185684e-01 -3.15121472e-01 -2.92145401e-01 -4.99537325e+00
  -4.20271397e-01  9.08659458e-01  1.39671397e+00  4.12232542e+00
  -1.46387076e+00 -1.30286634e+00  6.43772304e-01 -5.56667328e-01
  -1.74427176e+00 -1.10641830e-01  1.53107941e+00  2.26066992e-01
   1.50356865e+00  2.50417858e-01  2.25866055e+00  1.08732367e+00
   6.56378984e-01 -2.21400499e+00 -6.71550810e-01  5.32379031e-01
   1.50281322e+00  5.98462462e-01  8.08542669e-01  1.00185990e+00
  -7.26945460e-01  5.79589792e-03  1.01587546e+00  8.58362734e-01
  -1.15887272e+00 -7.03131258e-01  7.18528688e-01  1.52275538e+00
  -4.20707047e-01  1.06377028e-01 -8.13656807e-01  5.86826444e-01
   5.11575997e-01  3.57694328e-01  1.54340863e-01 -2.17063795e-03
   1.57960832e-01  8.99749339e-01  3.04069132e-01 -6.45013213e-01
   1.54316461e+00 -1.22146189e+00  1.93475515e-01  1.16132879e+00
  -3.75677019e-01 -4.94781524e-01 -5.32985210e-01  9.74455714e-01
   2.55910866e-02 -3.95585656e-01  2.26190120e-01 -1.84775621e-01
  -7.32691169e-01 -9.42172766e-01 -2.00377434e-01 -4.28262830e-01
   1.22579134e+00  9.21110511e-01 -5.67833148e-02  6.08430207e-01
   5.61827064e-01 -8.99677515e-01  3.92753810e-01 -6.57531381e-01]
 [-6.76853240e-01  8.31335187e-01  6.09239936e-01 -3.98119241e-01
  -1.03613138e+00  1.86545348e+00 -2.99921948e-02  1.23699188e+00
  -3.10400069e-01 -1.66578853e+00  2.82906651e-01 -1.58725366e-01
   2.20662093e+00 -4.93292689e-01 -1.76793829e-01 -1.38015771e+00
   6.54061317e-01  1.66178632e+00 -4.23623212e-02  7.33923540e-02
  -1.28974462e+00 -6.08807206e-01 -5.37915416e-02 -1.06266201e+00
  -6.12586856e-01  1.02035415e+00 -8.65059793e-01  2.31099033e+00
   7.26519465e-01 -5.17112792e-01 -4.91910011e-01 -5.71883917e-01
   8.89418960e-01  1.33230197e+00  2.22920492e-01 -1.50337029e+00
  -8.69769871e-01 -5.54722905e-01  3.37273270e-01  2.58407855e+00
   6.08922802e-02  4.44354296e-01 -1.30670202e+00  1.54146194e+00
  -9.92423296e-01  8.96399975e-01  5.98113596e-01 -2.72305942e+00
   1.12555838e+00  1.15843654e+00 -8.20712984e-01  4.21623468e-01
  -8.62778962e-01 -3.75429320e+00 -7.63869584e-01 -2.06098700e+00
   1.26129067e+00 -8.62655282e-01 -3.53125423e-01  1.87429354e-01
   2.40926409e+00  1.03870296e+00  2.94107723e+00 -6.68464899e-01
  -1.05689490e+00 -9.77571607e-01 -1.04054523e+00  9.69231367e-01
  -1.00295410e-01  6.52887344e-01  6.17550194e-01  4.99298990e-01
   1.26067770e+00  7.07293212e-01 -2.47717813e-01 -4.45781797e-01
  -1.04054236e+00 -1.99657369e+00  6.79951072e-01 -5.93423319e+00
   9.02048707e-01  5.37436426e-01  2.73002256e-02 -1.91943955e+00
  -8.76833081e-01 -4.31168526e-01  7.10626900e-01 -5.69873333e-01
   4.01930600e-01  1.42096341e+00  1.82980871e+00 -1.86199975e+00
  -3.90694022e-01  6.39520347e-01  5.25764823e-01  1.24543273e+00
  -1.53520733e-01  1.03520393e+00 -1.88111317e+00 -6.04552388e-01]
 [-4.00441319e-01 -1.98757872e-02  3.19521725e-01  1.14345104e-02
   4.44668829e-01 -5.44643104e-01 -5.67534864e-01 -1.11695506e-01
   9.17346597e-01  2.17633176e+00  5.77383995e-01 -5.60203028e+00
  -1.42889488e+00  1.97952077e-01  7.21799016e-01  3.61139551e-02
   1.14052773e-01 -6.52566433e-01 -2.09493661e+00 -9.77385521e-01
  -1.26332545e+00  1.01208007e+00  2.11924180e-01  4.55015242e-01
  -1.00735426e+00  6.66458547e-01 -5.66618264e-01 -1.88953769e+00
  -1.37321591e+00  9.06147480e-01 -4.09562230e-01 -6.32287979e-01
   1.49663556e+00  5.65571010e-01  5.07283330e-01 -1.23427284e+00
  -7.21220016e-01 -8.81612778e-01  4.21643108e-01 -1.44344091e+00
  -1.03373341e-01  3.90902668e-01  5.75945795e-01 -1.17322549e-01
   2.67432690e-01 -5.80830336e-01  3.01645517e+00 -1.71445802e-01
   9.16514099e-01 -1.83500373e+00  8.19151282e-01  4.82676893e-01
  -1.04324055e+00 -8.17846417e-01 -5.99715769e-01 -1.66075468e-01
   6.59403354e-02  6.82892680e-01 -9.62234616e-01 -1.99732578e+00
   2.53703523e+00 -1.37351826e-01  1.07769120e+00 -1.38365710e+00
   1.10983276e+00  4.23772955e+00  7.09234619e+00 -1.57042241e+00
   1.09542477e+00 -1.83895707e+00 -8.40235353e-01  1.01329279e+00
   3.54738742e-01 -1.09836936e+00  1.10655773e+00 -8.24851692e-01
  -7.89767146e-01 -3.98110330e-01  6.03429861e-02 -6.23909140e+00
   7.30880380e-01  1.18361145e-01 -1.11915288e-03 -4.08917695e-01
  -1.39013410e+00  3.42981100e-01 -9.26245093e-01  1.67330444e-01
   2.18653727e+00  8.47398266e-02 -7.97351718e-01  6.32606626e-01
  -1.49796498e+00 -1.13130498e+00  1.43576074e+00  6.52661562e-01
   1.63416207e-01 -9.04832542e-01  8.76869738e-01 -1.74113703e+00]
 [ 1.21810114e+00 -1.68585432e+00 -4.94454563e-01  2.87022322e-01
  -3.53320628e-01 -4.50579852e-01  9.93732661e-02  9.25006628e-01
  -7.56314933e-01 -5.39256871e-01 -1.20916855e+00  1.02539611e+00
  -1.09747291e+00 -1.45594823e+00  1.19270973e-01  1.86173356e+00
  -9.82656538e-01  6.64736927e-02 -2.05938607e-01  1.05654478e+00
   9.22646046e-01  1.12333155e+00  1.17571425e+00 -6.29412234e-01
   1.61132610e+00 -1.91391003e+00 -4.59565043e-01 -1.16102064e+00
  -1.39079845e+00 -8.81523669e-01 -9.03242469e-01  1.82114768e+00
   4.87996578e-01 -1.37382641e-01 -2.34781474e-01  7.26142824e-01
   3.07820827e-01  1.50837407e-01  1.53998506e+00 -2.02279663e+00
  -1.57325840e+00  2.62957501e+00  2.09398955e-01 -6.84048891e-01
  -3.10046107e-01  1.48395896e+00  3.09137630e+00 -5.55506527e-01
   3.85253340e-01 -1.30145824e+00  1.53714919e+00  2.41403729e-02
  -6.21745646e-01  1.45647573e+00 -7.22888231e-01  1.73712566e-01
   1.41454911e+00  4.77731675e-01  4.00165826e-01 -2.17149496e-01
  -1.04079318e+00 -1.31315351e+00 -9.61484730e-01 -1.62114716e+00
   2.46012235e+00  2.77045429e-01  2.74489689e+00 -3.11465472e-01
   3.73400897e-01  1.05177593e+00  8.95944595e-01 -8.24351490e-01
  -7.43535459e-01  4.91173297e-01 -2.78651386e-01  9.27095354e-01
   8.15894365e-01  4.56068516e-02  9.10023570e-01  4.47624683e+00
  -1.49312541e-01 -2.58909672e-01  2.28618336e+00 -5.51266074e-01
  -7.33416498e-01  6.06952071e-01  1.21200502e+00 -1.65898681e-01
  -2.18560517e-01  1.86267841e+00 -2.62171984e-01 -6.22047484e-01
  -7.95441329e-01 -6.91370070e-01 -1.14353561e+00  7.35229015e-01
   5.01660764e-01  5.73215961e-01 -9.86428082e-01  3.46335888e-01]] [0 3 2 1 0]
MLLITE_FIT_USING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 6 6
('OPERATION_END_ELAPSED', 0.681, 'TRAINING')
{ "alpha" : 0.0000001,   }
{ "alpha" : 0.0000001,   }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 1024, "dataset_features" : 100 },
	"classes" : [ 0, 1, 2, 3 ],
	"equations" : {
		"class_0" : {
			"intercept" : -0.597588,
			"coeffs" : [ -0.002145, -0.002153, -0.005388, 0.018287, 0.016656, -0.011725, 0.001966, 0.021902, 0.013302, 0.007124, -0.009914, 0.000408, -0.005741, 0.017037, -0.010220, 0.017384, -0.004674, -0.002013, 0.022986, -0.003466, -0.016025, 0.013079, -0.009660, 0.010474, 0.013384, 0.017459, -0.024991, 0.043656, 0.001474, -0.024707, -0.017192, 0.115982, -0.056117, -0.003565, 0.011445, -0.000714, -0.024633, 0.031215, -0.031717, -0.040354, 0.022118, 0.001382, -0.012731, 0.016556, -0.022920, -0.033083, 0.041929, -0.014873, -0.022097, -0.066449, 0.015758, 0.011848, 0.019782, 0.129103, 0.006072, 0.006394, -0.019282, -0.023103, -0.001098, 0.008536, -0.052983, -0.028646, 0.118287, 0.026403, 0.012822, -0.012695, 0.032283, 0.012221, -0.008018, 0.018908, 0.038659, -0.018231, 0.000374, 0.001761, -0.016673, 0.028490, -0.021791, 0.000056, 0.035325, -0.008893, -0.019286, -0.028254, 0.026156, -0.061067, 0.006924, -0.015547, -0.031869, -0.042367, -0.008576, -0.039440, 0.024659, 0.031767, 0.007231, -0.002110, 0.012930, -0.002858, 0.012477, -0.000885, -0.008048, 0.007289 ]
		},
		"class_1" : {
			"intercept" : -0.460131,
			"coeffs" : [ 0.003678, -0.025445, 0.025294, -0.007558, -0.000577, 0.022938, -0.016282, 0.001018, 0.020381, 0.043895, -0.008005, 0.005111, -0.027467, -0.040572, 0.028516, 0.012800, 0.014039, 0.015917, 0.016516, 0.001409, -0.006350, 0.028059, 0.021442, -0.017763, -0.030020, -0.035927, 0.042551, -0.004972, -0.002964, -0.002703, 0.013024, 0.033901, 0.010418, -0.001080, 0.010055, -0.039808, 0.007043, -0.032109, 0.005472, -0.017082, 0.037235, -0.005508, 0.003519, -0.000548, 0.039399, -0.004835, -0.052340, -0.013649, 0.004121, 0.012837, 0.018882, -0.003952, 0.014227, -0.017021, -0.026450, 0.019164, 0.070565, 0.026126, 0.019744, -0.009982, 0.030885, 0.014672, 0.096261, -0.024604, -0.037121, 0.012415, 0.001024, 0.047405, -0.012186, -0.054810, -0.041882, -0.001909, 0.019897, 0.008421, -0.006019, -0.025534, 0.037231, 0.009206, -0.023484, -0.003897, 0.002556, -0.030474, 0.012078, 0.058496, 0.021093, -0.004203, -0.010373, 0.005546, 0.006330, -0.009587, -0.007859, -0.031617, 0.017907, 0.014483, 0.002904, 0.021878, -0.024566, 0.002546, 0.040139, -0.025716 ]
		},
		"class_2" : {
			"intercept" : -0.407174,
			"coeffs" : [ -0.014571, -0.004989, -0.030727, -0.034106, 0.024561, -0.010424, 0.055628, -0.029197, -0.044856, -0.036403, 0.010752, -0.019716, 0.050850, 0.024200, -0.002144, 0.011268, 0.004912, -0.046729, -0.020894, 0.008880, -0.009511, -0.043544, -0.028382, 0.025013, 0.002754, 0.010554, -0.018748, -0.001827, -0.015216, -0.008479, -0.006766, -0.010349, 0.013854, 0.006749, 0.001014, 0.028191, -0.002853, 0.021521, -0.017480, 0.020346, -0.022130, 0.004633, 0.014165, -0.009217, -0.016405, 0.019705, -0.051036, -0.037699, -0.018205, 0.072708, 0.007976, -0.030457, -0.020069, -0.042164, 0.013644, -0.049070, -0.027408, 0.021131, 0.014726, -0.011238, 0.135441, -0.011809, -0.071602, -0.006089, 0.042857, -0.003069, -0.033838, -0.010863, 0.012822, 0.034502, -0.009596, 0.020835, 0.026857, -0.017512, 0.011274, 0.028368, -0.037443, -0.051678, -0.010738, -0.012498, 0.036190, 0.016386, -0.010799, -0.027783, -0.057850, 0.005506, 0.020610, 0.006304, 0.029561, 0.014975, -0.007331, -0.012027, 0.013500, -0.041664, 0.013231, -0.036232, 0.009177, -0.000162, -0.018065, 0.009101 ]
		},
		"class_3" : {
			"intercept" : -0.535844,
			"coeffs" : [ 0.013038, 0.032588, 0.010821, 0.023378, -0.040640, -0.000789, -0.041312, 0.006277, 0.011172, -0.014616, 0.007168, 0.051746, -0.017643, -0.000665, -0.016151, -0.041452, -0.014277, 0.032825, -0.018608, -0.006823, 0.031886, 0.002406, 0.016599, -0.017723, 0.013882, 0.007914, 0.001188, -0.009908, 0.016706, 0.035889, 0.010934, -0.141397, 0.031845, -0.002104, -0.022514, 0.007622, 0.020443, -0.020627, 0.043725, 0.037090, -0.037223, -0.000507, -0.004954, -0.006791, -0.000074, 0.018214, 0.044878, 0.066220, 0.036181, 0.011397, -0.042617, 0.022560, -0.013940, -0.026291, 0.006733, 0.023513, -0.023875, -0.024154, -0.033373, 0.012683, -0.098009, 0.025784, -0.151824, 0.004291, -0.018558, 0.000326, 0.032079, -0.048764, 0.007381, 0.001400, 0.012819, -0.000695, -0.047128, 0.007330, 0.011417, -0.031324, 0.022002, 0.042416, -0.001103, 0.005342, -0.019460, 0.042342, -0.027435, 0.030355, 0.029833, 0.014243, 0.021631, 0.030516, -0.027314, 0.034053, -0.009470, 0.011877, -0.038638, 0.029291, -0.029065, 0.017213, 0.002911, -0.001499, -0.014026, 0.009325 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_100_original_option_1.json'

RELOADING_MODEL_FROM_JSON_START ('FourClass_100_original', 'RidgeClassifier')
MLLITE_MODEL_SET_OPTIONS RidgeClassifier {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { "alpha" : 0.0000001,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
MLLITE_RELOADING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 1024, "dataset_features" : 100 },
	"classes" : [ 0, 1, 2, 3 ],
	"equations" : {
		"class_0" : {
			"intercept" : -0.597588,
			"coeffs" : [ -0.002145, -0.002153, -0.005388, 0.018287, 0.016656, -0.011725, 0.001966, 0.021902, 0.013302, 0.007124, -0.009914, 0.000408, -0.005741, 0.017037, -0.010220, 0.017384, -0.004674, -0.002013, 0.022986, -0.003466, -0.016025, 0.013079, -0.009660, 0.010474, 0.013384, 0.017459, -0.024991, 0.043656, 0.001474, -0.024707, -0.017192, 0.115982, -0.056117, -0.003565, 0.011445, -0.000714, -0.024633, 0.031215, -0.031717, -0.040354, 0.022118, 0.001382, -0.012731, 0.016556, -0.022920, -0.033083, 0.041929, -0.014873, -0.022097, -0.066449, 0.015758, 0.011848, 0.019782, 0.129103, 0.006072, 0.006394, -0.019282, -0.023103, -0.001098, 0.008536, -0.052983, -0.028646, 0.118287, 0.026403, 0.012822, -0.012695, 0.032283, 0.012221, -0.008018, 0.018908, 0.038659, -0.018231, 0.000374, 0.001761, -0.016673, 0.028490, -0.021791, 0.000056, 0.035325, -0.008893, -0.019286, -0.028254, 0.026156, -0.061067, 0.006924, -0.015547, -0.031869, -0.042367, -0.008576, -0.039440, 0.024659, 0.031767, 0.007231, -0.002110, 0.012930, -0.002858, 0.012477, -0.000885, -0.008048, 0.007289 ]
		},
		"class_1" : {
			"intercept" : -0.460131,
			"coeffs" : [ 0.003678, -0.025445, 0.025294, -0.007558, -0.000577, 0.022938, -0.016282, 0.001018, 0.020381, 0.043895, -0.008005, 0.005111, -0.027467, -0.040572, 0.028516, 0.012800, 0.014039, 0.015917, 0.016516, 0.001409, -0.006350, 0.028059, 0.021442, -0.017763, -0.030020, -0.035927, 0.042551, -0.004972, -0.002964, -0.002703, 0.013024, 0.033901, 0.010418, -0.001080, 0.010055, -0.039808, 0.007043, -0.032109, 0.005472, -0.017082, 0.037235, -0.005508, 0.003519, -0.000548, 0.039399, -0.004835, -0.052340, -0.013649, 0.004121, 0.012837, 0.018882, -0.003952, 0.014227, -0.017021, -0.026450, 0.019164, 0.070565, 0.026126, 0.019744, -0.009982, 0.030885, 0.014672, 0.096261, -0.024604, -0.037121, 0.012415, 0.001024, 0.047405, -0.012186, -0.054810, -0.041882, -0.001909, 0.019897, 0.008421, -0.006019, -0.025534, 0.037231, 0.009206, -0.023484, -0.003897, 0.002556, -0.030474, 0.012078, 0.058496, 0.021093, -0.004203, -0.010373, 0.005546, 0.006330, -0.009587, -0.007859, -0.031617, 0.017907, 0.014483, 0.002904, 0.021878, -0.024566, 0.002546, 0.040139, -0.025716 ]
		},
		"class_2" : {
			"intercept" : -0.407174,
			"coeffs" : [ -0.014571, -0.004989, -0.030727, -0.034106, 0.024561, -0.010424, 0.055628, -0.029197, -0.044856, -0.036403, 0.010752, -0.019716, 0.050850, 0.024200, -0.002144, 0.011268, 0.004912, -0.046729, -0.020894, 0.008880, -0.009511, -0.043544, -0.028382, 0.025013, 0.002754, 0.010554, -0.018748, -0.001827, -0.015216, -0.008479, -0.006766, -0.010349, 0.013854, 0.006749, 0.001014, 0.028191, -0.002853, 0.021521, -0.017480, 0.020346, -0.022130, 0.004633, 0.014165, -0.009217, -0.016405, 0.019705, -0.051036, -0.037699, -0.018205, 0.072708, 0.007976, -0.030457, -0.020069, -0.042164, 0.013644, -0.049070, -0.027408, 0.021131, 0.014726, -0.011238, 0.135441, -0.011809, -0.071602, -0.006089, 0.042857, -0.003069, -0.033838, -0.010863, 0.012822, 0.034502, -0.009596, 0.020835, 0.026857, -0.017512, 0.011274, 0.028368, -0.037443, -0.051678, -0.010738, -0.012498, 0.036190, 0.016386, -0.010799, -0.027783, -0.057850, 0.005506, 0.020610, 0.006304, 0.029561, 0.014975, -0.007331, -0.012027, 0.013500, -0.041664, 0.013231, -0.036232, 0.009177, -0.000162, -0.018065, 0.009101 ]
		},
		"class_3" : {
			"intercept" : -0.535844,
			"coeffs" : [ 0.013038, 0.032588, 0.010821, 0.023378, -0.040640, -0.000789, -0.041312, 0.006277, 0.011172, -0.014616, 0.007168, 0.051746, -0.017643, -0.000665, -0.016151, -0.041452, -0.014277, 0.032825, -0.018608, -0.006823, 0.031886, 0.002406, 0.016599, -0.017723, 0.013882, 0.007914, 0.001188, -0.009908, 0.016706, 0.035889, 0.010934, -0.141397, 0.031845, -0.002104, -0.022514, 0.007622, 0.020443, -0.020627, 0.043725, 0.037090, -0.037223, -0.000507, -0.004954, -0.006791, -0.000074, 0.018214, 0.044878, 0.066220, 0.036181, 0.011397, -0.042617, 0.022560, -0.013940, -0.026291, 0.006733, 0.023513, -0.023875, -0.024154, -0.033373, 0.012683, -0.098009, 0.025784, -0.151824, 0.004291, -0.018558, 0.000326, 0.032079, -0.048764, 0.007381, 0.001400, 0.012819, -0.000695, -0.047128, 0.007330, 0.011417, -0.031324, 0.022002, 0.042416, -0.001103, 0.005342, -0.019460, 0.042342, -0.027435, 0.030355, 0.029833, 0.014243, 0.021631, 0.030516, -0.027314, 0.034053, -0.009470, 0.011877, -0.038638, 0.029291, -0.029065, 0.017213, 0.002911, -0.001499, -0.014026, 0.009325 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1, 2, 3 ],
	"dataset" : 	{
		"dataset_features" : 100,
		"dataset_rows" : 1024
	},
	"equations" : 	{
		"class_0" : 	{
			"coeffs" : [ -0.002145, -0.002153, -0.005388, 0.018287, 0.016656, -0.011725, 0.001966, 0.021902, 0.013302, 0.007124, -0.009914, 0.000408, -0.005741, 0.017037, -0.01022, 0.017384, -0.004674, -0.002013, 0.022986, -0.003466, -0.016025, 0.013079, -0.00966, 0.010474, 0.013384, 0.017459, -0.024991, 0.043656, 0.001474, -0.024707, -0.017192, 0.115982, -0.056117, -0.003565, 0.011445, -0.000714, -0.024633, 0.031215, -0.031717, -0.040354, 0.022118, 0.001382, -0.012731, 0.016556, -0.02292, -0.033083, 0.041929, -0.014873, -0.022097, -0.066449, 0.015758, 0.011848, 0.019782, 0.129103, 0.006072, 0.006394, -0.019282, -0.023103, -0.001098, 0.008536, -0.052983, -0.028646, 0.118287, 0.026403, 0.012822, -0.012695, 0.032283, 0.012221, -0.008018, 0.018908, 0.038659, -0.018231, 0.000374, 0.001761, -0.016673, 0.02849, -0.021791, 5.6e-05, 0.035325, -0.008893, -0.019286, -0.028254, 0.026156, -0.061067, 0.006924, -0.015547, -0.031869, -0.042367, -0.008576, -0.03944, 0.024659, 0.031767, 0.007231, -0.00211, 0.01293, -0.002858, 0.012477, -0.000885, -0.008048, 0.007289 ],
			"intercept" : -0.597588
		},
		"class_1" : 	{
			"coeffs" : [ 0.003678, -0.025445, 0.025294, -0.007558, -0.000577, 0.022938, -0.016282, 0.001018, 0.020381, 0.043895, -0.008005, 0.005111, -0.027467, -0.040572, 0.028516, 0.0128, 0.014039, 0.015917, 0.016516, 0.001409, -0.00635, 0.028059, 0.021442, -0.017763, -0.03002, -0.035927, 0.042551, -0.004972, -0.002964, -0.002703, 0.013024, 0.033901, 0.010418, -0.00108, 0.010055, -0.039808, 0.007043, -0.032109, 0.005472, -0.017082, 0.037235, -0.005508, 0.003519, -0.000548, 0.039399, -0.004835, -0.05234, -0.013649, 0.004121, 0.012837, 0.018882, -0.003952, 0.014227, -0.017021, -0.02645, 0.019164, 0.070565, 0.026126, 0.019744, -0.009982, 0.030885, 0.014672, 0.096261, -0.024604, -0.037121, 0.012415, 0.001024, 0.047405, -0.012186, -0.05481, -0.041882, -0.001909, 0.019897, 0.008421, -0.006019, -0.025534, 0.037231, 0.009206, -0.023484, -0.003897, 0.002556, -0.030474, 0.012078, 0.058496, 0.021093, -0.004203, -0.010373, 0.005546, 0.00633, -0.009587, -0.007859, -0.031617, 0.017907, 0.014483, 0.002904, 0.021878, -0.024566, 0.002546, 0.040139, -0.025716 ],
			"intercept" : -0.460131
		},
		"class_2" : 	{
			"coeffs" : [ -0.014571, -0.004989, -0.030727, -0.034106, 0.024561, -0.010424, 0.055628, -0.029197, -0.044856, -0.036403, 0.010752, -0.019716, 0.05085, 0.0242, -0.002144, 0.011268, 0.004912, -0.046729, -0.020894, 0.00888, -0.009511, -0.043544, -0.028382, 0.025013, 0.002754, 0.010554, -0.018748, -0.001827, -0.015216, -0.008479, -0.006766, -0.010349, 0.013854, 0.006749, 0.001014, 0.028191, -0.002853, 0.021521, -0.01748, 0.020346, -0.02213, 0.004633, 0.014165, -0.009217, -0.016405, 0.019705, -0.051036, -0.037699, -0.018205, 0.072708, 0.007976, -0.030457, -0.020069, -0.042164, 0.013644, -0.04907, -0.027408, 0.021131, 0.014726, -0.011238, 0.135441, -0.011809, -0.071602, -0.006089, 0.042857, -0.003069, -0.033838, -0.010863, 0.012822, 0.034502, -0.009596, 0.020835, 0.026857, -0.017512, 0.011274, 0.028368, -0.037443, -0.051678, -0.010738, -0.012498, 0.03619, 0.016386, -0.010799, -0.027783, -0.05785, 0.005506, 0.02061, 0.006304, 0.029561, 0.014975, -0.007331, -0.012027, 0.0135, -0.041664, 0.013231, -0.036232, 0.009177, -0.000162, -0.018065, 0.009101 ],
			"intercept" : -0.407174
		},
		"class_3" : 	{
			"coeffs" : [ 0.013038, 0.032588, 0.010821, 0.023378, -0.04064, -0.000789, -0.041312, 0.006277, 0.011172, -0.014616, 0.007168, 0.051746, -0.017643, -0.000665, -0.016151, -0.041452, -0.014277, 0.032825, -0.018608, -0.006823, 0.031886, 0.002406, 0.016599, -0.017723, 0.013882, 0.007914, 0.001188, -0.009908, 0.016706, 0.035889, 0.010934, -0.141397, 0.031845, -0.002104, -0.022514, 0.007622, 0.020443, -0.020627, 0.043725, 0.03709, -0.037223, -0.000507, -0.004954, -0.006791, -7.4e-05, 0.018214, 0.044878, 0.06622, 0.036181, 0.011397, -0.042617, 0.02256, -0.01394, -0.026291, 0.006733, 0.023513, -0.023875, -0.024154, -0.033373, 0.012683, -0.098009, 0.025784, -0.151824, 0.004291, -0.018558, 0.000326, 0.032079, -0.048764, 0.007381, 0.0014, 0.012819, -0.000695, -0.047128, 0.00733, 0.011417, -0.031324, 0.022002, 0.042416, -0.001103, 0.005342, -0.01946, 0.042342, -0.027435, 0.030355, 0.029833, 0.014243, 0.021631, 0.030516, -0.027314, 0.034053, -0.00947, 0.011877, -0.038638, 0.029291, -0.029065, 0.017213, 0.002911, -0.001499, -0.014026, 0.009325 ],
			"intercept" : -0.535844
		}
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_il8", "version" : "2024-W14" },
	"options" :  { "alpha" : 0.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
RELOADING_MODEL_FROM_JSON_END ('FourClass_100_original', 'RidgeClassifier')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.002, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.002, 'PREDICT')
[[0.455  0.2555 0.1563 0.1332]
 [0.1959 0.1419 0.1356 0.5266]
 [0.1214 0.2504 0.5254 0.1028]
 ...
 [0.1287 0.2201 0.4729 0.1783]
 [0.4687 0.3043 0.174  0.053 ]
 [0.3339 0.2582 0.2153 0.1927]]
(1024, 4)
(1024, 4) float32
MODEL_PERFS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': '{"alpha" : 0.0000001}', 'dataset': 'FourClass_100_original', 'size': 1024, 'accuracy': 0.6708984375, 'auc': 0.8853758360178869}
WRITING_PERF_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_100_original_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': '{"alpha" : 0.0000001}', 'dataset': 'FourClass_100_original', 'training_time_in_sec': 0.681, 'prediction_time_in_sec': 0.002}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 0 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 1 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 2 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 3 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 4 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 5 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 6 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 7 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 8 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 9 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 10 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 11 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 12 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 13 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 14 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 15 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 16 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 17 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 18 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 19 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 20 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 21 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 22 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 23 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 24 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 25 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 26 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 27 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 28 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 29 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 30 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 31 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 32 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 33 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 34 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 35 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 36 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 37 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 38 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 39 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 40 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 41 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 42 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 43 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 44 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 45 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 46 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 47 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 48 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 49 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 50 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 51 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 52 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 53 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 54 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 55 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 56 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 57 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 58 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 59 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 60 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 61 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 62 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 63 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 64 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 65 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 66 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 67 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 68 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 69 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 70 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 71 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 72 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 73 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 74 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 75 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 76 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 77 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 78 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 79 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 80 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 81 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 82 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 83 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 84 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 85 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 86 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 87 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 88 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 89 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 90 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 91 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 92 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 93 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 94 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 95 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 96 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 97 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 98 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 99 100
{
   "Contributions" : {
      "X_0" : [ -0.000118, 0.000121, -0.000404, 0.000402 ],
      "X_1" : [ -0.000192, -0.000163, -0.000098, 0.000452 ],
      "X_2" : [ 0.000249, -0.000825, 0.000938, -0.000362 ],
      "X_3" : [ -0.000076, 0.000292, 0.000388, -0.000603 ],
      "X_4" : [ -0.000056, -0.000206, 0.000225, 0.000038 ],
      "X_5" : [ 0.000432, -0.000867, 0.000441, -0.000005 ],
      "X_6" : [ -0.000667, -0.000623, 0.000792, 0.000497 ],
      "X_7" : [ 0.000411, -0.000153, -0.000088, -0.000170 ],
      "X_8" : [ 0.000061, 0.000201, -0.000404, 0.000141 ],
      "X_9" : [ 0.000259, 0.002159, -0.001318, -0.001099 ],
      "X_10" : [ 0.000323, 0.000235, -0.000296, -0.000262 ],
      "X_11" : [ 0.000707, 0.000441, 0.001533, -0.002681 ],
      "X_12" : [ -0.000211, -0.000691, 0.001207, -0.000305 ],
      "X_13" : [ 0.002568, -0.005371, 0.002786, 0.000017 ],
      "X_14" : [ 0.000482, -0.000979, 0.000050, 0.000447 ],
      "X_15" : [ -0.000721, -0.000352, -0.000432, 0.001505 ],
      "X_16" : [ -0.000023, 0.000344, 0.000156, -0.000476 ],
      "X_17" : [ 0.000078, -0.000606, 0.001893, -0.001365 ],
      "X_18" : [ -0.000237, 0.000200, -0.000528, 0.000565 ],
      "X_19" : [ -0.000095, 0.000072, 0.000439, -0.000415 ],
      "X_20" : [ -0.000741, -0.000325, -0.000472, 0.001538 ],
      "X_21" : [ 0.000591, 0.001379, -0.002181, 0.000212 ],
      "X_22" : [ 0.000684, -0.000857, 0.000702, -0.000529 ],
      "X_23" : [ -0.000902, 0.001614, -0.001614, 0.000901 ],
      "X_24" : [ 0.000429, -0.000916, 0.000085, 0.000403 ],
      "X_25" : [ 0.000302, -0.000691, 0.000113, 0.000276 ],
      "X_26" : [ 0.000935, -0.001313, 0.000409, -0.000032 ],
      "X_27" : [ 0.002267, -0.000890, -0.000545, -0.000831 ],
      "X_28" : [ -0.000035, -0.000086, -0.000198, 0.000319 ],
      "X_29" : [ -0.000768, -0.000089, -0.000289, 0.001145 ],
      "X_30" : [ 0.000284, -0.000194, -0.000104, 0.000013 ],
      "X_31" : [ -0.009398, -0.002392, 0.001494, 0.010297 ],
      "X_32" : [ 0.005105, -0.001298, -0.001317, -0.002490 ],
      "X_33" : [ 0.000015, -0.000009, -0.000001, -0.000005 ],
      "X_34" : [ -0.000481, -0.000056, 0.000074, 0.000462 ],
      "X_35" : [ 0.000047, -0.003085, 0.002304, 0.000734 ],
      "X_36" : [ -0.000069, -0.000086, -0.000108, 0.000263 ],
      "X_37" : [ -0.000431, 0.000330, -0.000044, 0.000146 ],
      "X_38" : [ 0.001062, -0.000590, 0.000449, -0.000920 ],
      "X_39" : [ 0.002286, 0.000421, -0.000686, -0.002021 ],
      "X_40" : [ 0.001415, 0.002230, -0.001462, -0.002184 ],
      "X_41" : [ 0.000067, -0.000278, 0.000239, -0.000028 ],
      "X_42" : [ -0.000590, 0.000210, 0.000405, -0.000026 ],
      "X_43" : [ -0.000666, 0.000106, 0.000191, 0.000369 ],
      "X_44" : [ -0.002069, 0.002907, -0.000823, -0.000015 ],
      "X_45" : [ -0.000713, -0.000289, 0.000578, 0.000424 ],
      "X_46" : [ -0.003961, 0.003230, 0.001478, -0.000747 ],
      "X_47" : [ -0.000352, -0.000459, -0.001583, 0.002394 ],
      "X_48" : [ 0.000678, 0.000170, 0.000906, -0.001754 ],
      "X_49" : [ 0.007977, -0.001818, -0.005525, -0.000633 ],
      "X_50" : [ 0.000472, 0.000579, 0.000211, -0.001262 ],
      "X_51" : [ 0.000330, -0.000100, -0.000445, 0.000214 ],
      "X_52" : [ 0.000275, 0.000570, -0.000657, -0.000188 ],
      "X_53" : [ 0.002797, -0.000440, -0.000425, -0.001932 ],
      "X_54" : [ -0.000112, -0.000070, 0.000110, 0.000072 ],
      "X_55" : [ 0.000256, 0.000339, -0.001323, 0.000728 ],
      "X_56" : [ 0.000373, -0.002448, 0.000983, 0.001092 ],
      "X_57" : [ 0.000059, -0.000085, -0.000100, 0.000126 ],
      "X_58" : [ 0.000139, -0.000557, -0.000574, 0.000992 ],
      "X_59" : [ 0.000138, -0.000086, -0.000109, 0.000057 ],
      "X_60" : [ -0.000647, -0.001414, 0.004757, -0.002695 ],
      "X_61" : [ -0.000919, 0.000407, -0.000162, 0.000675 ],
      "X_62" : [ -0.009840, -0.008029, 0.003726, 0.014143 ],
      "X_63" : [ 0.000782, -0.000596, -0.000197, 0.000010 ],
      "X_64" : [ 0.001240, -0.003343, 0.003548, -0.001445 ],
      "X_65" : [ -0.001732, 0.001970, -0.000395, 0.000157 ],
      "X_66" : [ -0.002066, -0.000927, 0.003789, -0.000796 ],
      "X_67" : [ 0.000691, 0.001407, -0.000039, -0.002058 ],
      "X_68" : [ 0.000117, 0.000229, -0.000222, -0.000125 ],
      "X_69" : [ -0.000195, -0.000035, 0.000058, 0.000173 ],
      "X_70" : [ -0.000468, 0.000408, 0.000240, -0.000180 ],
      "X_71" : [ 0.000831, 0.000057, -0.000904, 0.000016 ],
      "X_72" : [ -0.000073, 0.001069, 0.001221, -0.002218 ],
      "X_73" : [ -0.000008, 0.000320, -0.000604, 0.000293 ],
      "X_74" : [ 0.000318, 0.000069, -0.000210, -0.000176 ],
      "X_75" : [ 0.002962, -0.002495, 0.002072, -0.002539 ],
      "X_76" : [ -0.001604, 0.002168, -0.001940, 0.001375 ],
      "X_77" : [ 0.000225, 0.000396, -0.001817, 0.001196 ],
      "X_78" : [ 0.002283, -0.001603, -0.000652, -0.000028 ],
      "X_79" : [ 0.000503, -0.000424, 0.000742, -0.000821 ],
      "X_80" : [ 0.001418, -0.000170, -0.002241, 0.000993 ],
      "X_81" : [ -0.000993, -0.001198, 0.000706, 0.001485 ],
      "X_82" : [ 0.001295, 0.000435, -0.000493, -0.001237 ],
      "X_83" : [ -0.002563, 0.002567, -0.001259, 0.001255 ],
      "X_84" : [ 0.000118, -0.000155, 0.000154, -0.000117 ],
      "X_85" : [ -0.001886, -0.000245, 0.000594, 0.001537 ],
      "X_86" : [ -0.000126, 0.000415, -0.000420, 0.000131 ],
      "X_87" : [ -0.000510, -0.000009, -0.000040, 0.000558 ],
      "X_88" : [ -0.000331, 0.000288, 0.000476, -0.000432 ],
      "X_89" : [ -0.001890, -0.000403, 0.000756, 0.001537 ],
      "X_90" : [ -0.001715, 0.000726, 0.000380, 0.000609 ],
      "X_91" : [ -0.001530, 0.001692, 0.000558, -0.000720 ],
      "X_92" : [ 0.000353, 0.000862, 0.000660, -0.001875 ],
      "X_93" : [ 0.000311, -0.001086, 0.002230, -0.001455 ],
      "X_94" : [ 0.000481, -0.000036, 0.000229, -0.000674 ],
      "X_95" : [ 0.000005, -0.001215, 0.001603, -0.000393 ],
      "X_96" : [ -0.000335, -0.000050, 0.000304, 0.000081 ],
      "X_97" : [ -0.000005, -0.000016, 0.000002, 0.000018 ],
      "X_98" : [ 0.000272, -0.000594, 0.000122, 0.000200 ],
      "X_99" : [ 0.000446, -0.001597, 0.000651, 0.000500 ]   
   },
   "Most_Contributive_Features_By_Class" : {
      "class_0" : [ 62, 31, 49, 32, 46, 75, 53, 13, 83, 39 ],
      "class_1" : [ 62, 13, 64, 46, 35, 44, 83, 75, 56, 31 ],
      "class_2" : [ 49, 60, 66, 62, 64, 13, 35, 80, 93, 21 ],
      "class_3" : [ 62, 31, 60, 11, 75, 32, 47, 72, 40, 67 ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_100_original_option_1_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_100_original_option_1_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('FourClass_100_original', 'RidgeClassifier', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('FourClass_100_original', 'RidgeClassifier', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('FourClass_100_original', 'RidgeClassifier', 'duckdb')
ore_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."Score_3" AS "Score_3",
  arg_max_cte."Proba_3" AS "Proba_3",
  CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN LN( arg_max_cte."Proba_3" ) ELSE -1.79769313486231e+308 END AS "LogProba_3",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('FourClass_100_original', 'RidgeClassifier', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 1024 entries, 0 to 1023
Data columns (total 100 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     1024 non-null   float32
 1   X_1     1024 non-null   float32
 2   X_2     1024 non-null   float32
 3   X_3     1024 non-null   float32
 4   X_4     1024 non-null   float32
 5   X_5     1024 non-null   float32
 6   X_6     1024 non-null   float32
 7   X_7     1024 non-null   float32
 8   X_8     1024 non-null   float32
 9   X_9     1024 non-null   float32
 10  X_10    1024 non-null   float32
 11  X_11    1024 non-null   float32
 12  X_12    1024 non-null   float32
 13  X_13    1024 non-null   float32
 14  X_14    1024 non-null   float32
 15  X_15    1024 non-null   float32
 16  X_16    1024 non-null   float32
 17  X_17    1024 non-null   float32
 18  X_18    1024 non-null   float32
 19  X_19    1024 non-null   float32
 20  X_20    1024 non-null   float32
 21  X_21    1024 non-null   float32
 22  X_22    1024 non-null   float32
 23  X_23    1024 non-null   float32
 24  X_24    1024 non-null   float32
 25  X_25    1024 non-null   float32
 26  X_26    1024 non-null   float32
 27  X_27    1024 non-null   float32
 28  X_28    1024 non-null   float32
 29  X_29    1024 non-null   float32
 30  X_30    1024 non-null   float32
 31  X_31    1024 non-null   float32
 32  X_32    1024 non-null   float32
 33  X_33    1024 non-null   float32
 34  X_34    1024 non-null   float32
 35  X_35    1024 non-null   float32
 36  X_36    1024 non-null   float32
 37  X_37    1024 non-null   float32
 38  X_38    1024 non-null   float32
 39  X_39    1024 non-null   float32
 40  X_40    1024 non-null   float32
 41  X_41    1024 non-null   float32
 42  X_42    1024 non-null   float32
 43  X_43    1024 non-null   float32
 44  X_44    1024 non-null   float32
 45  X_45    1024 non-null   float32
 46  X_46    1024 non-null   float32
 47  X_47    1024 non-null   float32
 48  X_48    1024 non-null   float32
 49  X_49    1024 non-null   float32
 50  X_50    1024 non-null   float32
 51  X_51    1024 non-null   float32
 52  X_52    1024 non-null   float32
 53  X_53    1024 non-null   float32
 54  X_54    1024 non-null   float32
 55  X_55    1024 non-null   float32
 56  X_56    1024 non-null   float32
 57  X_57    1024 non-null   float32
 58  X_58    1024 non-null   float32
 59  X_59    1024 non-null   float32
 60  X_60    1024 non-null   float32
 61  X_61    1024 non-null   float32
 62  X_62    1024 non-null   float32
 63  X_63    1024 non-null   float32
 64  X_64    1024 non-null   float32
 65  X_65    1024 non-null   float32
 66  X_66    1024 non-null   float32
 67  X_67    1024 non-null   float32
 68  X_68    1024 non-null   float32
 69  X_69    1024 non-null   float32
 70  X_70    1024 non-null   float32
 71  X_71    1024 non-null   float32
 72  X_72    1024 non-null   float32
 73  X_73    1024 non-null   float32
 74  X_74    1024 non-null   float32
 75  X_75    1024 non-null   float32
 76  X_76    1024 non-null   float32
 77  X_77    1024 non-null   float32
 78  X_78    1024 non-null   float32
 79  X_79    1024 non-null   float32
 80  X_80    1024 non-null   float32
 81  X_81    1024 non-null   float32
 82  X_82    1024 non-null   float32
 83  X_83    1024 non-null   float32
 84  X_84    1024 non-null   float32
 85  X_85    1024 non-null   float32
 86  X_86    1024 non-null   float32
 87  X_87    1024 non-null   float32
 88  X_88    1024 non-null   float32
 89  X_89    1024 non-null   float32
 90  X_90    1024 non-null   float32
 91  X_91    1024 non-null   float32
 92  X_92    1024 non-null   float32
 93  X_93    1024 non-null   float32
 94  X_94    1024 non-null   float32
 95  X_95    1024 non-null   float32
 96  X_96    1024 non-null   float32
 97  X_97    1024 non-null   float32
 98  X_98    1024 non-null   float32
 99  X_99    1024 non-null   float32
dtypes: float32(100)
memory usage: 408.0 KB
            X_0       X_1       X_2  ...      X_97      X_98      X_99
index                                ...                              
0      0.347323 -2.297366 -1.081557  ... -1.720016  0.031633 -1.175074
1     -1.647107 -0.559376 -0.366788  ... -0.899678  0.392754 -0.657531
2     -0.676853  0.831335  0.609240  ...  1.035204 -1.881113 -0.604552
3     -0.400441 -0.019876  0.319522  ... -0.904833  0.876870 -1.741137
4      1.218101 -1.685854 -0.494455  ...  0.573216 -0.986428  0.346336
...         ...       ...       ...  ...       ...       ...       ...
1019  -1.221854 -1.392468 -0.452402  ... -1.450299 -0.108059  0.915534
1020  -0.628695  0.684944 -0.828802  ... -0.367799  1.264883  0.069710
1021  -0.880984  0.311331  1.089563  ... -0.961642 -0.003295  0.886445
1022   0.164755 -1.177232 -0.820439  ...  0.781376 -0.844387  0.696498
1023   1.878680 -0.406975 -0.591808  ... -1.829975 -1.272928  0.631892

[1024 rows x 100 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 1024 entries, 0 to 1023
Data columns (total 15 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          1024 non-null   int64  
 1   Score_0        1024 non-null   float64
 2   Proba_0        1024 non-null   float64
 3   LogProba_0     1024 non-null   float64
 4   Score_1        1024 non-null   float64
 5   Proba_1        1024 non-null   float64
 6   LogProba_1     1024 non-null   float64
 7   Score_2        1024 non-null   float64
 8   Proba_2        1024 non-null   float64
 9   LogProba_2     1024 non-null   float64
 10  Score_3        1024 non-null   float64
 11  Proba_3        1024 non-null   float64
 12  LogProba_3     1024 non-null   float64
 13  Decision       1024 non-null   int64  
 14  DecisionProba  1024 non-null   float64
dtypes: float64(13), int64(2)
memory usage: 120.1 KB
      index   Score_0   Proba_0  ...  LogProba_3  Decision  DecisionProba
0         0  0.216668  0.454990  ...   -2.015785         0       0.454990
1         1 -0.575136  0.195918  ...   -0.641285         3       0.526615
2         2 -0.999732  0.121372  ...   -2.274843         2       0.525397
3         3 -0.637010  0.208208  ...   -1.906514         1       0.362224
4         4 -0.022743  0.383206  ...   -1.293371         0       0.383206
...     ...       ...       ...  ...         ...       ...            ...
1019   1019 -0.915253  0.161053  ...   -1.180478         3       0.307132
1020   1020 -1.139456  0.119496  ...   -1.349829         2       0.400360
1021   1021 -1.039709  0.128701  ...   -1.724318         2       0.472859
1022   1022  0.399722  0.468729  ...   -2.937516         0       0.468729
1023   1023 -0.181857  0.333857  ...   -1.646718         0       0.333857

[1024 rows x 15 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Score_3', 'Proba_3',
       'LogProba_3', 'Decision', 'DecisionProba'],
      dtype='object')
      index   Score_0  SQL_Proba_0  ...  Py_Proba_2  Py_Proba_3  Py_Decision
1008   1008 -0.715980     0.194014  ...    0.329501    0.149231            2
1009   1009 -1.162358     0.118208  ...    0.335950    0.202867            1
1010   1010 -0.852782     0.162242  ...    0.141835    0.408784            3
1011   1011 -0.918273     0.156294  ...    0.378334    0.190527            2
1012   1012 -0.506813     0.245249  ...    0.298625    0.192014            2
1013   1013 -0.406963     0.265806  ...    0.324680    0.147436            2
1014   1014 -0.006417     0.385395  ...    0.139704    0.245132            0
1015   1015 -0.117962     0.352798  ...    0.179320    0.279083            0
1016   1016 -0.979393     0.108736  ...    0.635924    0.087493            2
1017   1017 -0.789239     0.180116  ...    0.186668    0.256336            1
1018   1018 -1.161654     0.083205  ...    0.146560    0.688839            3
1019   1019 -0.915253     0.161053  ...    0.247375    0.307133            3
1020   1020 -1.139456     0.119496  ...    0.400360    0.259284            2
1021   1021 -1.039709     0.128701  ...    0.472857    0.178295            2
1022   1022  0.399722     0.468729  ...    0.173961    0.052997            0
1023   1023 -0.181857     0.333857  ...    0.215267    0.192682            0

[16 rows x 20 columns]
MLLITE_CLASS_SQL_ERROR ('FourClass_100_original', 'RidgeClassifier', 'duckdb') ('Py_Proba_0', 'SQL_Proba_0') 5.750260407701808e-07
      Py_Proba_0  SQL_Proba_0   SQL_Error_0
1008    0.194014     0.194014 -3.472076e-07
1009    0.118209     0.118208  2.803426e-07
1010    0.162242     0.162242  2.333935e-07
1011    0.156293     0.156294 -6.268315e-07
1012    0.245248     0.245249 -7.324652e-07
1013    0.265807     0.265806  7.659346e-07
1014    0.385395     0.385395 -3.144204e-07
1015    0.352798     0.352798  2.680646e-07
1016    0.108735     0.108736 -9.175065e-07
1017    0.180116     0.180116  3.807319e-07
1018    0.083205     0.083205 -1.361670e-07
1019    0.161052     0.161053 -4.376287e-07
1020    0.119496     0.119496 -2.294236e-07
1021    0.128701     0.128701  2.528626e-07
1022    0.468730     0.468729  1.012125e-06
1023    0.333856     0.333857 -1.104269e-06
MLLITE_CLASS_SQL_ERROR ('FourClass_100_original', 'RidgeClassifier', 'duckdb') ('Py_Proba_1', 'SQL_Proba_1') 8.346771782329212e-07
      Py_Proba_1  SQL_Proba_1   SQL_Error_1
1008    0.327254     0.327255 -9.656533e-07
1009    0.342973     0.342973  4.615402e-07
1010    0.287138     0.287139 -2.865205e-07
1011    0.274846     0.274846  2.555825e-07
1012    0.264113     0.264114 -1.252424e-06
1013    0.262077     0.262076  4.978224e-07
1014    0.229770     0.229770 -7.915794e-07
1015    0.188799     0.188799 -4.813344e-08
1016    0.167848     0.167847  1.709687e-06
1017    0.376880     0.376879  4.804477e-07
1018    0.081397     0.081397 -8.416259e-09
1019    0.284440     0.284441 -6.714151e-07
1020    0.220860     0.220859  9.401221e-07
1021    0.220147     0.220145  1.877196e-06
1022    0.304312     0.304315 -2.323432e-06
1023    0.258195     0.258194  9.915746e-07
MLLITE_CLASS_SQL_ERROR ('FourClass_100_original', 'RidgeClassifier', 'duckdb') ('Py_Proba_2', 'SQL_Proba_2') 6.450661870298675e-07
      Py_Proba_2  SQL_Proba_2   SQL_Error_2
1008    0.329501     0.329500  1.132622e-06
1009    0.335950     0.335951 -8.696988e-07
1010    0.141835     0.141835  3.988625e-07
1011    0.378334     0.378335 -6.673019e-07
1012    0.298625     0.298624  9.238350e-07
1013    0.324680     0.324681 -1.113365e-06
1014    0.139704     0.139703  3.541988e-07
1015    0.179320     0.179320 -7.313905e-07
1016    0.635924     0.635924 -6.725911e-07
1017    0.186668     0.186668  2.250275e-07
1018    0.146560     0.146561 -1.024696e-06
1019    0.247375     0.247375  4.990869e-08
1020    0.400360     0.400360 -4.320231e-07
1021    0.472857     0.472859 -2.252523e-06
1022    0.173961     0.173959  1.443540e-06
1023    0.215267     0.215268 -2.152895e-07
MLLITE_CLASS_SQL_ERROR ('FourClass_100_original', 'RidgeClassifier', 'duckdb') ('Py_Proba_3', 'SQL_Proba_3') 5.497003332014764e-07
      Py_Proba_3  SQL_Proba_3   SQL_Error_3
1008    0.149231     0.149231  1.057333e-07
1009    0.202867     0.202867  7.566196e-08
1010    0.408784     0.408784 -3.606367e-07
1011    0.190527     0.190526  1.038551e-06
1012    0.192014     0.192013  1.120659e-06
1013    0.147436     0.147436 -1.205901e-07
1014    0.245132     0.245132  6.772951e-07
1015    0.279083     0.279083  4.965582e-07
1016    0.087493     0.087493 -3.763270e-08
1017    0.256336     0.256337 -1.071306e-06
1018    0.688839     0.688837  1.191631e-06
1019    0.307133     0.307132  1.029333e-06
1020    0.259284     0.259285 -2.414224e-07
1021    0.178295     0.178295  1.671686e-07
1022    0.052997     0.052997 -6.145203e-08
1023    0.192682     0.192681  3.577860e-07
MLLITE_CLASS_SQL_EXECUTION_STATUS ('FourClass_100_original', 'RidgeClassifier', 'duckdb', 'Success')
      Py_Decision  SQL_Decision
1008            2             2
1009            1             1
1010            3             3
1011            2             2
1012            2             2
1013            2             2
1014            0             0
1015            0             0
1016            2             2
1017            1             1
1018            3             3
1019            3             3
1020            2             2
1021            2             2
1022            0             0
1023            0             0
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_100_original_option_1_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('FourClass_100_original', 'RidgeClassifier', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('FourClass_100_original', 'RidgeClassifier', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('FourClass_100_original', 'RidgeClassifier', 'sqlite')
ore_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."Score_3" AS "Score_3",
  arg_max_cte."Proba_3" AS "Proba_3",
  CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN LN( arg_max_cte."Proba_3" ) ELSE -1.79769313486231e+308 END AS "LogProba_3",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('FourClass_100_original', 'RidgeClassifier', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 1024 entries, 0 to 1023
Data columns (total 100 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     1024 non-null   float32
 1   X_1     1024 non-null   float32
 2   X_2     1024 non-null   float32
 3   X_3     1024 non-null   float32
 4   X_4     1024 non-null   float32
 5   X_5     1024 non-null   float32
 6   X_6     1024 non-null   float32
 7   X_7     1024 non-null   float32
 8   X_8     1024 non-null   float32
 9   X_9     1024 non-null   float32
 10  X_10    1024 non-null   float32
 11  X_11    1024 non-null   float32
 12  X_12    1024 non-null   float32
 13  X_13    1024 non-null   float32
 14  X_14    1024 non-null   float32
 15  X_15    1024 non-null   float32
 16  X_16    1024 non-null   float32
 17  X_17    1024 non-null   float32
 18  X_18    1024 non-null   float32
 19  X_19    1024 non-null   float32
 20  X_20    1024 non-null   float32
 21  X_21    1024 non-null   float32
 22  X_22    1024 non-null   float32
 23  X_23    1024 non-null   float32
 24  X_24    1024 non-null   float32
 25  X_25    1024 non-null   float32
 26  X_26    1024 non-null   float32
 27  X_27    1024 non-null   float32
 28  X_28    1024 non-null   float32
 29  X_29    1024 non-null   float32
 30  X_30    1024 non-null   float32
 31  X_31    1024 non-null   float32
 32  X_32    1024 non-null   float32
 33  X_33    1024 non-null   float32
 34  X_34    1024 non-null   float32
 35  X_35    1024 non-null   float32
 36  X_36    1024 non-null   float32
 37  X_37    1024 non-null   float32
 38  X_38    1024 non-null   float32
 39  X_39    1024 non-null   float32
 40  X_40    1024 non-null   float32
 41  X_41    1024 non-null   float32
 42  X_42    1024 non-null   float32
 43  X_43    1024 non-null   float32
 44  X_44    1024 non-null   float32
 45  X_45    1024 non-null   float32
 46  X_46    1024 non-null   float32
 47  X_47    1024 non-null   float32
 48  X_48    1024 non-null   float32
 49  X_49    1024 non-null   float32
 50  X_50    1024 non-null   float32
 51  X_51    1024 non-null   float32
 52  X_52    1024 non-null   float32
 53  X_53    1024 non-null   float32
 54  X_54    1024 non-null   float32
 55  X_55    1024 non-null   float32
 56  X_56    1024 non-null   float32
 57  X_57    1024 non-null   float32
 58  X_58    1024 non-null   float32
 59  X_59    1024 non-null   float32
 60  X_60    1024 non-null   float32
 61  X_61    1024 non-null   float32
 62  X_62    1024 non-null   float32
 63  X_63    1024 non-null   float32
 64  X_64    1024 non-null   float32
 65  X_65    1024 non-null   float32
 66  X_66    1024 non-null   float32
 67  X_67    1024 non-null   float32
 68  X_68    1024 non-null   float32
 69  X_69    1024 non-null   float32
 70  X_70    1024 non-null   float32
 71  X_71    1024 non-null   float32
 72  X_72    1024 non-null   float32
 73  X_73    1024 non-null   float32
 74  X_74    1024 non-null   float32
 75  X_75    1024 non-null   float32
 76  X_76    1024 non-null   float32
 77  X_77    1024 non-null   float32
 78  X_78    1024 non-null   float32
 79  X_79    1024 non-null   float32
 80  X_80    1024 non-null   float32
 81  X_81    1024 non-null   float32
 82  X_82    1024 non-null   float32
 83  X_83    1024 non-null   float32
 84  X_84    1024 non-null   float32
 85  X_85    1024 non-null   float32
 86  X_86    1024 non-null   float32
 87  X_87    1024 non-null   float32
 88  X_88    1024 non-null   float32
 89  X_89    1024 non-null   float32
 90  X_90    1024 non-null   float32
 91  X_91    1024 non-null   float32
 92  X_92    1024 non-null   float32
 93  X_93    1024 non-null   float32
 94  X_94    1024 non-null   float32
 95  X_95    1024 non-null   float32
 96  X_96    1024 non-null   float32
 97  X_97    1024 non-null   float32
 98  X_98    1024 non-null   float32
 99  X_99    1024 non-null   float32
dtypes: float32(100)
memory usage: 408.0 KB
            X_0       X_1       X_2  ...      X_97      X_98      X_99
index                                ...                              
0      0.347323 -2.297366 -1.081557  ... -1.720016  0.031633 -1.175074
1     -1.647107 -0.559376 -0.366788  ... -0.899678  0.392754 -0.657531
2     -0.676853  0.831335  0.609240  ...  1.035204 -1.881113 -0.604552
3     -0.400441 -0.019876  0.319522  ... -0.904833  0.876870 -1.741137
4      1.218101 -1.685854 -0.494455  ...  0.573216 -0.986428  0.346336
...         ...       ...       ...  ...       ...       ...       ...
1019  -1.221854 -1.392468 -0.452402  ... -1.450299 -0.108059  0.915534
1020  -0.628695  0.684944 -0.828802  ... -0.367799  1.264883  0.069710
1021  -0.880984  0.311331  1.089563  ... -0.961642 -0.003295  0.886445
1022   0.164755 -1.177232 -0.820439  ...  0.781376 -0.844387  0.696498
1023   1.878680 -0.406975 -0.591808  ... -1.829975 -1.272928  0.631892

[1024 rows x 100 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 1024 entries, 0 to 1023
Data columns (total 15 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          1024 non-null   int64  
 1   Score_0        1024 non-null   float64
 2   Proba_0        1024 non-null   float64
 3   LogProba_0     1024 non-null   float64
 4   Score_1        1024 non-null   float64
 5   Proba_1        1024 non-null   float64
 6   LogProba_1     1024 non-null   float64
 7   Score_2        1024 non-null   float64
 8   Proba_2        1024 non-null   float64
 9   LogProba_2     1024 non-null   float64
 10  Score_3        1024 non-null   float64
 11  Proba_3        1024 non-null   float64
 12  LogProba_3     1024 non-null   float64
 13  Decision       1024 non-null   int64  
 14  DecisionProba  1024 non-null   float64
dtypes: float64(13), int64(2)
memory usage: 120.1 KB
      index   Score_0   Proba_0  ...  LogProba_3  Decision  DecisionProba
0         0  0.216668  0.454990  ...   -2.015785         0       0.454990
1         1 -0.575135  0.195918  ...   -0.641285         3       0.526615
2         2 -0.999732  0.121372  ...   -2.274842         2       0.525397
3         3 -0.637010  0.208209  ...   -1.906514         1       0.362224
4         4 -0.022743  0.383206  ...   -1.293371         0       0.383206
...     ...       ...       ...  ...         ...       ...            ...
1019   1019 -0.915253  0.161053  ...   -1.180478         3       0.307132
1020   1020 -1.139456  0.119496  ...   -1.349829         2       0.400360
1021   1021 -1.039709  0.128701  ...   -1.724318         2       0.472859
1022   1022  0.399722  0.468729  ...   -2.937517         0       0.468729
1023   1023 -0.181857  0.333857  ...   -1.646718         0       0.333857

[1024 rows x 15 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Score_3', 'Proba_3',
       'LogProba_3', 'Decision', 'DecisionProba'],
      dtype='object')
      index   Score_0  SQL_Proba_0  ...  Py_Proba_2  Py_Proba_3  Py_Decision
1008   1008 -0.715980     0.194014  ...    0.329501    0.149231            2
1009   1009 -1.162358     0.118208  ...    0.335950    0.202867            1
1010   1010 -0.852783     0.162242  ...    0.141835    0.408784            3
1011   1011 -0.918273     0.156294  ...    0.378334    0.190527            2
1012   1012 -0.506813     0.245249  ...    0.298625    0.192014            2
1013   1013 -0.406963     0.265806  ...    0.324680    0.147436            2
1014   1014 -0.006417     0.385395  ...    0.139704    0.245132            0
1015   1015 -0.117962     0.352798  ...    0.179320    0.279083            0
1016   1016 -0.979392     0.108736  ...    0.635924    0.087493            2
1017   1017 -0.789239     0.180116  ...    0.186668    0.256336            1
1018   1018 -1.161654     0.083205  ...    0.146560    0.688839            3
1019   1019 -0.915253     0.161053  ...    0.247375    0.307133            3
1020   1020 -1.139456     0.119496  ...    0.400360    0.259284            2
1021   1021 -1.039709     0.128701  ...    0.472857    0.178295            2
1022   1022  0.399722     0.468729  ...    0.173961    0.052997            0
1023   1023 -0.181857     0.333857  ...    0.215267    0.192682            0

[16 rows x 20 columns]
MLLITE_CLASS_SQL_ERROR ('FourClass_100_original', 'RidgeClassifier', 'sqlite') ('Py_Proba_0', 'SQL_Proba_0') 5.733460647471808e-07
      Py_Proba_0  SQL_Proba_0   SQL_Error_0
1008    0.194014     0.194014 -3.631711e-07
1009    0.118209     0.118208  3.133699e-07
1010    0.162242     0.162242  2.726942e-07
1011    0.156293     0.156294 -6.155946e-07
1012    0.245248     0.245249 -7.108478e-07
1013    0.265807     0.265806  7.908529e-07
1014    0.385395     0.385395 -2.999068e-07
1015    0.352798     0.352798  3.322626e-07
1016    0.108735     0.108736 -9.233713e-07
1017    0.180116     0.180116  4.110618e-07
1018    0.083205     0.083205 -1.274999e-07
1019    0.161052     0.161053 -4.304873e-07
1020    0.119496     0.119496 -2.200898e-07
1021    0.128701     0.128701  2.350393e-07
1022    0.468730     0.468729  9.710668e-07
1023    0.333856     0.333857 -1.124935e-06
MLLITE_CLASS_SQL_ERROR ('FourClass_100_original', 'RidgeClassifier', 'sqlite') ('Py_Proba_1', 'SQL_Proba_1') 8.319573479221887e-07
      Py_Proba_1  SQL_Proba_1   SQL_Error_1
1008    0.327254     0.327255 -9.579339e-07
1009    0.342973     0.342973  4.730835e-07
1010    0.287138     0.287139 -3.225679e-07
1011    0.274846     0.274846  2.587559e-07
1012    0.264113     0.264114 -1.301993e-06
1013    0.262077     0.262076  4.814189e-07
1014    0.229770     0.229770 -8.455715e-07
1015    0.188799     0.188799 -5.473003e-08
1016    0.167848     0.167847  1.714096e-06
1017    0.376880     0.376879  5.018280e-07
1018    0.081397     0.081397 -1.691233e-08
1019    0.284440     0.284441 -6.646203e-07
1020    0.220860     0.220859  9.347577e-07
1021    0.220147     0.220145  1.857870e-06
1022    0.304312     0.304315 -2.288977e-06
1023    0.258195     0.258194  9.722911e-07
MLLITE_CLASS_SQL_ERROR ('FourClass_100_original', 'RidgeClassifier', 'sqlite') ('Py_Proba_2', 'SQL_Proba_2') 6.442161008596962e-07
      Py_Proba_2  SQL_Proba_2   SQL_Error_2
1008    0.329501     0.329500  1.131752e-06
1009    0.335950     0.335951 -8.372161e-07
1010    0.141835     0.141835  3.864757e-07
1011    0.378334     0.378334 -6.576726e-07
1012    0.298625     0.298624  9.670386e-07
1013    0.324680     0.324681 -1.118108e-06
1014    0.139704     0.139703  3.279396e-07
1015    0.179320     0.179320 -7.442266e-07
1016    0.635924     0.635924 -6.551419e-07
1017    0.186668     0.186668  2.127534e-07
1018    0.146560     0.146561 -1.019763e-06
1019    0.247375     0.247375  4.092236e-08
1020    0.400360     0.400360 -4.310882e-07
1021    0.472857     0.472859 -2.209799e-06
1022    0.173961     0.173959  1.438589e-06
1023    0.215267     0.215268 -2.004009e-07
MLLITE_CLASS_SQL_ERROR ('FourClass_100_original', 'RidgeClassifier', 'sqlite') ('Py_Proba_3', 'SQL_Proba_3') 5.489249906530177e-07
      Py_Proba_3  SQL_Proba_3   SQL_Error_3
1008    0.149231     0.149231  1.148477e-07
1009    0.202867     0.202867 -1.391399e-09
1010    0.408784     0.408784 -3.515031e-07
1011    0.190527     0.190526  1.014511e-06
1012    0.192014     0.192013  1.105407e-06
1013    0.147436     0.147436 -1.243614e-07
1014    0.245132     0.245131  7.430328e-07
1015    0.279083     0.279083  4.517929e-07
1016    0.087493     0.087493 -5.362641e-08
1017    0.256336     0.256337 -1.110742e-06
1018    0.688839     0.688837  1.186527e-06
1019    0.307133     0.307132  1.024383e-06
1020    0.259284     0.259285 -2.463267e-07
1021    0.178295     0.178295  1.615937e-07
1022    0.052997     0.052997 -4.989848e-08
1023    0.192682     0.192681  3.828472e-07
MLLITE_CLASS_SQL_EXECUTION_STATUS ('FourClass_100_original', 'RidgeClassifier', 'sqlite', 'Success')
      Py_Decision  SQL_Decision
1008            2             2
1009            1             1
1010            3             3
1011            2             2
1012            2             2
1013            2             2
1014            0             0
1015            0             0
1016            2             2
1017            1             1
1018            3             3
1019            3             3
1020            2             2
1021            2             2
1022            0             0
1023            0             0
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
