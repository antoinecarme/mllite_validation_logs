    age  workclass_Local-gov  ...  native-country_infrequent_sklearn  target
0     2                  0.0  ...                                0.0    >50K
1     1                  0.0  ...                                0.0   <=50K
2     1                  0.0  ...                                0.0    >50K
3     1                  0.0  ...                                1.0    >50K
4     1                  0.0  ...                                0.0   <=50K
..  ...                  ...  ...                                ...     ...
59    1                  0.0  ...                                0.0   <=50K
60    0                  0.0  ...                                0.0   <=50K
61    4                  0.0  ...                                0.0    >50K
62    4                  0.0  ...                                0.0   <=50K
63    3                  0.0  ...                                0.0   <=50K

[64 rows x 54 columns]
MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
('OPERATION_START', 'TRAINING')
[[2.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 1.889500e+05 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 1.400000e+01 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  3.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00]
 [1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00 1.033222e+06 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 1.000000e+00
  0.000000e+00 1.000000e+01 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  2.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00]
 [1.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 1.297070e+05 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.300000e+01 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 1.000000e+00 4.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00]
 [1.000000e+00 0.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 7.853000e+04 0.000000e+00
  0.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 9.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  4.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 1.000000e+00]
 [1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00 1.595370e+05 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 1.200000e+01 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  2.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00]] ['>50K' '<=50K' '>50K' '>50K' '<=50K']
MLLITE_FIT_USING_MODEL mllite_ridge_class.RidgeClassifier_ff4_OO8
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 3 4
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 4 4
('OPERATION_END_ELAPSED', 0.02, 'TRAINING')
{ ,   }
{ ,   }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_OO8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 53 },
	"classes" : [ "<=50K", ">50K" ],
	"equations" : {
		"class_1" : {
			"intercept" : -18.536953,
			"coeffs" : [ -0.389896, 1.436057, 0.014928, -0.511843, -1.036811, -0.306719, 0.609890, 1.783399, -0.000001, 0.640935, -0.336014, -0.006074, 0.518129, -0.536055, -0.195877, -0.248807, 0.052483, 5.253624, -2.882544, 2.696191, 2.119449, 0.000000, 5.760149, 0.000000, 3.695498, 2.528209, 3.323309, 2.033349, 2.685369, 2.422610, 2.138203, 11.518270, 4.667580, 4.603795, 5.251261, 1.308711, 9.684451, 4.447962, 6.495255, 8.466047, 0.000000, 6.653052, 0.175778, -0.034008, 0.658594, 0.367425, 0.000000, 2.317548, 5.513644, 0.000000, 0.249897, 0.000000, -1.147889 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_census_one_hot_small.json'

MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
MLLITE_RELOADING_MODEL mllite_ridge_class.RidgeClassifier_ff4_OO8
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_OO8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 53 },
	"classes" : [ "<=50K", ">50K" ],
	"equations" : {
		"class_1" : {
			"intercept" : -18.536953,
			"coeffs" : [ -0.389896, 1.436057, 0.014928, -0.511843, -1.036811, -0.306719, 0.609890, 1.783399, -0.000001, 0.640935, -0.336014, -0.006074, 0.518129, -0.536055, -0.195877, -0.248807, 0.052483, 5.253624, -2.882544, 2.696191, 2.119449, 0.000000, 5.760149, 0.000000, 3.695498, 2.528209, 3.323309, 2.033349, 2.685369, 2.422610, 2.138203, 11.518270, 4.667580, 4.603795, 5.251261, 1.308711, 9.684451, 4.447962, 6.495255, 8.466047, 0.000000, 6.653052, 0.175778, -0.034008, 0.658594, 0.367425, 0.000000, 2.317548, 5.513644, 0.000000, 0.249897, 0.000000, -1.147889 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ "<=50K", ">50K" ],
	"dataset" : 	{
		"dataset_features" : 53,
		"dataset_rows" : 64
	},
	"equations" : 	{
		"class_1" : 	{
			"coeffs" : [ -0.389896, 1.436057, 0.014928, -0.511843, -1.036811, -0.306719, 0.60989, 1.783399, -1e-06, 0.640935, -0.336014, -0.006074, 0.518129, -0.536055, -0.195877, -0.248807, 0.052483, 5.253624, -2.882544, 2.696191, 2.119449, 0.0, 5.760149, 0.0, 3.695498, 2.528209, 3.323309, 2.033349, 2.685369, 2.42261, 2.138203, 11.51827, 4.66758, 4.603795, 5.251261, 1.308711, 9.684451, 4.447962, 6.495255, 8.466047, 0.0, 6.653052, 0.175778, -0.034008, 0.658594, 0.367425, 0.0, 2.317548, 5.513644, 0.0, 0.249897, 0.0, -1.147889 ],
			"intercept" : -18.536953
		}
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_OO8", "version" : "2024-W12" },
	"options" :  { "alpha" : 1.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0.1335 0.8665]
 [0.8514 0.1486]
 [0.3427 0.6573]
 [0.2247 0.7753]
 [0.4804 0.5196]
 [0.8395 0.1605]
 [0.833  0.167 ]
 [0.7944 0.2056]
 [0.9317 0.0683]
 [0.118  0.882 ]
 [0.9495 0.0505]
 [0.6369 0.3631]
 [0.9284 0.0716]
 [0.8443 0.1557]
 [0.772  0.228 ]
 [0.8319 0.1681]
 [0.8892 0.1108]
 [0.0598 0.9402]
 [0.1383 0.8617]
 [0.3692 0.6308]
 [0.5515 0.4485]
 [0.9065 0.0935]
 [0.8623 0.1377]
 [0.4544 0.5456]
 [0.8799 0.1201]
 [0.5953 0.4047]
 [0.8907 0.1093]
 [0.8039 0.1961]
 [0.9632 0.0368]
 [0.7612 0.2388]
 [0.8968 0.1032]
 [0.9852 0.0148]
 [0.9754 0.0246]
 [0.1302 0.8698]
 [0.4906 0.5094]
 [0.9282 0.0718]
 [0.5813 0.4187]
 [0.9952 0.0048]
 [0.6781 0.3219]
 [0.3434 0.6566]
 [0.7614 0.2386]
 [0.1437 0.8563]
 [0.3151 0.6849]
 [0.27   0.73  ]
 [0.3916 0.6084]
 [0.999  0.001 ]
 [0.9678 0.0322]
 [0.8881 0.1119]
 [0.9731 0.0269]
 [0.0079 0.9921]
 [0.8864 0.1136]
 [0.3907 0.6093]
 [0.9513 0.0487]
 [0.4859 0.5141]
 [0.8857 0.1143]
 [0.7576 0.2424]
 [0.927  0.073 ]
 [0.8152 0.1848]
 [0.9159 0.0841]
 [0.9499 0.0501]
 [0.8526 0.1474]
 [0.8347 0.1653]
 [0.7977 0.2023]
 [0.5933 0.4067]]
(64, 2)
(64,) float32
MODEL_PERFS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'census_one_hot_small', 'size': 64, 'accuracy': 0.828125, 'auc': 0.8585714285714285}
WRITING_PERF_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_census_one_hot_small.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'census_one_hot_small', 'training_time_in_sec': 0.02, 'prediction_time_in_sec': 0.0}
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_census_one_hot_small.sql'



SQL_OUT_PUT_FIRST_LINES_START
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END
SQL_OUT_PUT_LAST_LINES_START
ax."index" AS "index_Score",
     max(union_with_max.class) AS "arg_max_Score"
    FROM union_with_max
    WHERE union_with_max."max_Score" <= union_with_max."Score"
    GROUP BY union_with_max."index"
   ) AS "arg_max_t_Score"
   ON score_max."index" = "arg_max_t_Score"."index_Score"
 )
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."arg_max_Score" AS "Decision",
  CASE
   WHEN (arg_max_cte."arg_max_Score" = 0) THEN arg_max_cte."Proba_0"
   WHEN (arg_max_cte."arg_max_Score" = 1) THEN arg_max_cte."Proba_1"
 END AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END




COPY_TRAINING_DATA_TO_SQLITE_START
    X_0  X_1  X_2  X_3  X_4  X_5  X_6  ...  X_47  X_48  X_49  X_50  X_51  X_52  KEY
0   2.0  0.0  1.0  0.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0    0
1   1.0  0.0  0.0  0.0  0.0  1.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0    1
2   1.0  0.0  1.0  0.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0    2
3   1.0  0.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   0.0   0.0   1.0    3
4   1.0  0.0  0.0  0.0  0.0  1.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0    4
..  ...  ...  ...  ...  ...  ...  ...  ...   ...   ...   ...   ...   ...   ...  ...
59  1.0  0.0  0.0  0.0  0.0  0.0  1.0  ...   0.0   0.0   0.0   1.0   0.0   0.0   59
60  0.0  0.0  0.0  0.0  0.0  0.0  1.0  ...   0.0   0.0   0.0   1.0   0.0   0.0   60
61  4.0  0.0  0.0  0.0  0.0  1.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0   61
62  4.0  0.0  0.0  0.0  1.0  0.0  0.0  ...   1.0   0.0   0.0   0.0   0.0   0.0   62
63  3.0  0.0  1.0  0.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0   63

[64 rows x 54 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
    index   Score_0   Proba_0  ...  LogProba_1  Decision  DecisionProba
0       0 -0.847977  0.154994  ...   -0.168412         1       0.845006
1       1  1.350331  0.937066  ...   -2.765664         0       0.937066
2       2 -0.265792  0.370148  ...   -0.462270         1       0.629852
3       3 -0.582930  0.237604  ...   -0.271289         1       0.762396
4       4  0.034604  0.517295  ...   -0.728350         0       0.517295
..    ...       ...       ...  ...         ...       ...            ...
59     59  1.523060  0.954615  ...   -3.092567         0       0.954615
60     60  0.893608  0.856586  ...   -1.942017         0       0.856586
61     61  0.861334  0.848472  ...   -1.886986         0       0.848472
62     62  0.876187  0.852252  ...   -1.912247         0       0.852252
63     63  0.244863  0.620042  ...   -0.967694         0       0.620042

[64 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
    index   Score_0  SQL_Proba_0  ...  Py_Proba_0  Py_Proba_1  Py_Decision
48     48  1.915676     0.978780  ...    0.973147    0.026853        <=50K
49     49 -2.369231     0.008676  ...    0.007876    0.992124         >50K
50     50  1.102383     0.900677  ...    0.886443    0.113557        <=50K
51     51 -0.196126     0.403175  ...    0.390698    0.609302         >50K
52     52  1.589144     0.960009  ...    0.951323    0.048677        <=50K
53     53  0.051131     0.525543  ...    0.485867    0.514133         >50K
54     54  1.107781     0.901638  ...    0.885708    0.114292        <=50K
55     55  0.689832     0.798937  ...    0.757644    0.242356        <=50K
56     56  1.336332     0.935394  ...    0.926977    0.073023        <=50K
57     57  0.782196     0.826983  ...    0.815210    0.184790        <=50K
58     58  1.218988     0.919678  ...    0.915906    0.084094        <=50K
59     59  1.523060     0.954615  ...    0.949871    0.050129        <=50K
60     60  0.893608     0.856586  ...    0.852646    0.147354        <=50K
61     61  0.861334     0.848472  ...    0.834704    0.165296        <=50K
62     62  0.876187     0.852252  ...    0.797698    0.202301        <=50K
63     63  0.244863     0.620042  ...    0.593269    0.406731        <=50K

[16 rows x 12 columns]
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
