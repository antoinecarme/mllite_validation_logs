READING_CSV census_one_hot_small ['data/small/census_one_hot_small.csv']
    age  workclass_Local-gov  ...  native-country_infrequent_sklearn  target
0     2                  0.0  ...                                0.0    >50K
1     1                  0.0  ...                                0.0   <=50K
2     1                  0.0  ...                                0.0    >50K
3     1                  0.0  ...                                1.0    >50K
4     1                  0.0  ...                                0.0   <=50K
..  ...                  ...  ...                                ...     ...
59    1                  0.0  ...                                0.0   <=50K
60    0                  0.0  ...                                0.0   <=50K
61    4                  0.0  ...                                0.0    >50K
62    4                  0.0  ...                                0.0   <=50K
63    3                  0.0  ...                                0.0   <=50K

[64 rows x 54 columns]
MLLITE_MODEL_SET_OPTIONS RidgeClassifier {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { "alpha" : 0.0000001,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
('OPERATION_START', 'TRAINING')
[[2.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 1.889500e+05 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 1.400000e+01 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  3.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00]
 [1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00 1.033222e+06 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 1.000000e+00
  0.000000e+00 1.000000e+01 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  2.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00]
 [1.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 1.297070e+05 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.300000e+01 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 1.000000e+00 4.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00]
 [1.000000e+00 0.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 7.853000e+04 0.000000e+00
  0.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 9.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  4.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 1.000000e+00]
 [1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00 1.595370e+05 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 1.200000e+01 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  2.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00]] ['>50K' '<=50K' '>50K' '>50K' '<=50K']
MLLITE_FIT_USING_MODEL mllite_ridge_class.RidgeClassifier_ff4_OO8
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 3 4
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 4 4
('OPERATION_END_ELAPSED', 0.012, 'TRAINING')
{ "alpha" : 0.0000001,   }
{ "alpha" : 0.0000001,   }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_OO8"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 53 },
	"classes" : [ "<=50K", ">50K" ],
	"equations" : {
		"class_1" : {
			"intercept" : -17590.458984,
			"coeffs" : [ -0.698126, 27.640707, 26.032751, 25.737873, 25.034845, 25.779018, 26.594614, 28.557695, -0.000001, -26.002153, -27.516804, -27.031477, -26.084545, -27.477234, -27.258017, -27.555691, 0.015366, 705.520264, 691.545959, 701.804871, 701.080444, 0.000000, 706.945374, 0.000000, 2662.783203, 2660.555908, 2661.358643, 2659.430176, 2660.928711, 2660.904053, 2660.025146, 7357.585938, 7345.736328, 3155.456055, 7346.295898, 7340.662598, 7355.414062, 6976.563965, 6980.424805, 6982.371094, 0.000000, 6979.221191, 0.043841, -0.064719, 0.745487, 0.600779, 0.000000, -94.177551, 4101.059570, 0.000000, -97.177223, 0.000000, -100.077545 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_census_one_hot_small_option_1.json'

RELOADING_MODEL_FROM_JSON_START ('census_one_hot_small', 'RidgeClassifier')
MLLITE_MODEL_SET_OPTIONS RidgeClassifier {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { "alpha" : 0.0000001,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
MLLITE_RELOADING_MODEL mllite_ridge_class.RidgeClassifier_ff4_OO8
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_OO8"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 53 },
	"classes" : [ "<=50K", ">50K" ],
	"equations" : {
		"class_1" : {
			"intercept" : -17590.458984,
			"coeffs" : [ -0.698126, 27.640707, 26.032751, 25.737873, 25.034845, 25.779018, 26.594614, 28.557695, -0.000001, -26.002153, -27.516804, -27.031477, -26.084545, -27.477234, -27.258017, -27.555691, 0.015366, 705.520264, 691.545959, 701.804871, 701.080444, 0.000000, 706.945374, 0.000000, 2662.783203, 2660.555908, 2661.358643, 2659.430176, 2660.928711, 2660.904053, 2660.025146, 7357.585938, 7345.736328, 3155.456055, 7346.295898, 7340.662598, 7355.414062, 6976.563965, 6980.424805, 6982.371094, 0.000000, 6979.221191, 0.043841, -0.064719, 0.745487, 0.600779, 0.000000, -94.177551, 4101.059570, 0.000000, -97.177223, 0.000000, -100.077545 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ "<=50K", ">50K" ],
	"dataset" : 	{
		"dataset_features" : 53,
		"dataset_rows" : 64
	},
	"equations" : 	{
		"class_1" : 	{
			"coeffs" : [ -0.698126, 27.640707, 26.032751, 25.737873, 25.034845, 25.779018, 26.594614, 28.557695, -1e-06, -26.002153, -27.516804, -27.031477, -26.084545, -27.477234, -27.258017, -27.555691, 0.015366, 705.520264, 691.545959, 701.804871, 701.080444, 0.0, 706.945374, 0.0, 2662.783203, 2660.555908, 2661.358643, 2659.430176, 2660.928711, 2660.904053, 2660.025146, 7357.585938, 7345.736328, 3155.456055, 7346.295898, 7340.662598, 7355.414062, 6976.563965, 6980.424805, 6982.371094, 0.0, 6979.221191, 0.043841, -0.064719, 0.745487, 0.600779, 0.0, -94.177551, 4101.05957, 0.0, -97.177223, 0.0, -100.077545 ],
			"intercept" : -17590.458984
		}
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_OO8", "version" : "2024-W14" },
	"options" :  { "alpha" : 0.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
RELOADING_MODEL_FROM_JSON_END ('census_one_hot_small', 'RidgeClassifier')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0.2472 0.7528]
 [0.7386 0.2614]
 [0.3991 0.6009]
 [0.3447 0.6553]
 [0.4816 0.5184]
 [0.7806 0.2194]
 [0.7499 0.2501]
 [0.6263 0.3737]
 [0.8265 0.1735]
 [0.2124 0.7876]
 [0.8529 0.1471]
 [0.5423 0.4577]
 [0.8322 0.1678]
 [0.5965 0.4035]
 [0.5433 0.4567]
 [0.7113 0.2887]
 [0.7338 0.2662]
 [0.1097 0.8903]
 [0.2233 0.7767]
 [0.2301 0.7699]
 [0.4936 0.5064]
 [0.7265 0.2735]
 [0.8089 0.1911]
 [0.4046 0.5954]
 [0.7298 0.2702]
 [0.5613 0.4387]
 [0.7503 0.2497]
 [0.6516 0.3484]
 [0.8764 0.1236]
 [0.6356 0.3644]
 [0.6968 0.3032]
 [0.9483 0.0517]
 [0.9127 0.0873]
 [0.1401 0.8599]
 [0.3772 0.6228]
 [0.7999 0.2001]
 [0.5423 0.4577]
 [0.9341 0.0659]
 [0.4965 0.5035]
 [0.4904 0.5096]
 [0.6688 0.3312]
 [0.2768 0.7232]
 [0.407  0.593 ]
 [0.1997 0.8003]
 [0.4821 0.5179]
 [0.9953 0.0047]
 [0.9017 0.0983]
 [0.741  0.259 ]
 [0.8568 0.1432]
 [0.09   0.91  ]
 [0.7323 0.2677]
 [0.2865 0.7135]
 [0.8625 0.1375]
 [0.4778 0.5222]
 [0.7324 0.2676]
 [0.7161 0.2839]
 [0.8064 0.1936]
 [0.6735 0.3265]
 [0.7334 0.2666]
 [0.824  0.176 ]
 [0.7049 0.2951]
 [0.8079 0.1921]
 [0.6571 0.3429]
 [0.4534 0.5466]]
(64, 2)
(64,) float32
MODEL_PERFS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': '{"alpha" : 0.0000001}', 'dataset': 'census_one_hot_small', 'size': 64, 'accuracy': 0.78125, 'auc': 0.79}
WRITING_PERF_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_census_one_hot_small_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': '{"alpha" : 0.0000001}', 'dataset': 'census_one_hot_small', 'training_time_in_sec': 0.012, 'prediction_time_in_sec': 0.0}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 0 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 1 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 2 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 3 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 4 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 5 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 6 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 7 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 8 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 9 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 10 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 11 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 12 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 13 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 14 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 15 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 16 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 17 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 18 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 19 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 20 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 21 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 22 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 23 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 24 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 25 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 26 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 27 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 28 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 29 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 30 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 31 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 32 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 33 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 34 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 35 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 36 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 37 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 38 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 39 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 40 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 41 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 42 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 43 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 44 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 45 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 46 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 47 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 48 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 49 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 50 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 51 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 52 53
{
   "Contributions" : {
      "X_0" : [ -0.004035, 0.004035 ],
      "X_1" : [ 0.000743, -0.000743 ],
      "X_2" : [ -0.010851, 0.010851 ],
      "X_3" : [ -0.004034, 0.004034 ],
      "X_4" : [ 0.005144, -0.005144 ],
      "X_5" : [ -0.004220, 0.004220 ],
      "X_6" : [ 0.005311, -0.005311 ],
      "X_7" : [ 0.011515, -0.011515 ],
      "X_8" : [ 0.000795, -0.000795 ],
      "X_9" : [ -0.006633, 0.006633 ],
      "X_10" : [ 0.000989, -0.000989 ],
      "X_11" : [ 0.004149, -0.004149 ],
      "X_12" : [ 0.004016, -0.004016 ],
      "X_13" : [ 0.003682, -0.003682 ],
      "X_14" : [ -0.011497, 0.011497 ],
      "X_15" : [ 0.010650, -0.010650 ],
      "X_16" : [ -0.000177, 0.000177 ],
      "X_17" : [ 0.012048, -0.012048 ],
      "X_18" : [ -0.004932, 0.004932 ],
      "X_19" : [ -0.003645, 0.003645 ],
      "X_20" : [ 0.005327, -0.005327 ],
      "X_21" : [ 0.000000, 0.000000 ],
      "X_22" : [ 0.011019, -0.011019 ],
      "X_23" : [ 0.000000, 0.000000 ],
      "X_24" : [ 0.043083, -0.043083 ],
      "X_25" : [ -0.020888, 0.020888 ],
      "X_26" : [ -0.008295, 0.008295 ],
      "X_27" : [ -0.009381, 0.009381 ],
      "X_28" : [ -0.017963, 0.017963 ],
      "X_29" : [ -0.023468, 0.023468 ],
      "X_30" : [ 0.023436, -0.023436 ],
      "X_31" : [ -0.050225, 0.050225 ],
      "X_32" : [ -0.038021, 0.038021 ],
      "X_33" : [ -0.002441, 0.002441 ],
      "X_34" : [ -0.015112, 0.015112 ],
      "X_35" : [ 0.051544, -0.051544 ],
      "X_36" : [ 0.035372, -0.035372 ],
      "X_37" : [ 0.000453, -0.000453 ],
      "X_38" : [ -0.021392, 0.021392 ],
      "X_39" : [ -0.027215, 0.027215 ],
      "X_40" : [ 0.000000, 0.000000 ],
      "X_41" : [ 0.037503, -0.037503 ],
      "X_42" : [ -0.000051, 0.000051 ],
      "X_43" : [ 0.000048, -0.000048 ],
      "X_44" : [ 0.002685, -0.002685 ],
      "X_45" : [ -0.001722, 0.001722 ],
      "X_46" : [ 0.000000, 0.000000 ],
      "X_47" : [ 0.003637, -0.003637 ],
      "X_48" : [ -0.003184, 0.003184 ],
      "X_49" : [ 0.000000, 0.000000 ],
      "X_50" : [ -0.006203, 0.006203 ],
      "X_51" : [ 0.000000, 0.000000 ],
      "X_52" : [ 0.007035, -0.007035 ]   
   },
   "Most_Contributive_Features_By_Class" : {
      "class_0" : [ 35, 31, 24, 32, 41, 36, 39, 29, 30, 38 ],
      "class_1" : [ 35, 31, 24, 32, 41, 36, 39, 29, 30, 38 ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_census_one_hot_small_option_1_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_census_one_hot_small_option_1_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('census_one_hot_small', 'RidgeClassifier', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('census_one_hot_small', 'RidgeClassifier', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('census_one_hot_small', 'RidgeClassifier', 'duckdb')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('census_one_hot_small', 'RidgeClassifier', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 64 entries, 0 to 63
Data columns (total 53 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     64 non-null     float32
 1   X_1     64 non-null     float32
 2   X_2     64 non-null     float32
 3   X_3     64 non-null     float32
 4   X_4     64 non-null     float32
 5   X_5     64 non-null     float32
 6   X_6     64 non-null     float32
 7   X_7     64 non-null     float32
 8   X_8     64 non-null     float32
 9   X_9     64 non-null     float32
 10  X_10    64 non-null     float32
 11  X_11    64 non-null     float32
 12  X_12    64 non-null     float32
 13  X_13    64 non-null     float32
 14  X_14    64 non-null     float32
 15  X_15    64 non-null     float32
 16  X_16    64 non-null     float32
 17  X_17    64 non-null     float32
 18  X_18    64 non-null     float32
 19  X_19    64 non-null     float32
 20  X_20    64 non-null     float32
 21  X_21    64 non-null     float32
 22  X_22    64 non-null     float32
 23  X_23    64 non-null     float32
 24  X_24    64 non-null     float32
 25  X_25    64 non-null     float32
 26  X_26    64 non-null     float32
 27  X_27    64 non-null     float32
 28  X_28    64 non-null     float32
 29  X_29    64 non-null     float32
 30  X_30    64 non-null     float32
 31  X_31    64 non-null     float32
 32  X_32    64 non-null     float32
 33  X_33    64 non-null     float32
 34  X_34    64 non-null     float32
 35  X_35    64 non-null     float32
 36  X_36    64 non-null     float32
 37  X_37    64 non-null     float32
 38  X_38    64 non-null     float32
 39  X_39    64 non-null     float32
 40  X_40    64 non-null     float32
 41  X_41    64 non-null     float32
 42  X_42    64 non-null     float32
 43  X_43    64 non-null     float32
 44  X_44    64 non-null     float32
 45  X_45    64 non-null     float32
 46  X_46    64 non-null     float32
 47  X_47    64 non-null     float32
 48  X_48    64 non-null     float32
 49  X_49    64 non-null     float32
 50  X_50    64 non-null     float32
 51  X_51    64 non-null     float32
 52  X_52    64 non-null     float32
dtypes: float32(53)
memory usage: 13.8 KB
       X_0  X_1  X_2  X_3  X_4  X_5  ...  X_47  X_48  X_49  X_50  X_51  X_52
index                                ...                                    
0      2.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
1      1.0  0.0  0.0  0.0  0.0  1.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
2      1.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
3      1.0  0.0  0.0  1.0  0.0  0.0  ...   0.0   0.0   0.0   0.0   0.0   1.0
4      1.0  0.0  0.0  0.0  0.0  1.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
...    ...  ...  ...  ...  ...  ...  ...   ...   ...   ...   ...   ...   ...
59     1.0  0.0  0.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
60     0.0  0.0  0.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
61     4.0  0.0  0.0  0.0  0.0  1.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
62     4.0  0.0  0.0  0.0  1.0  0.0  ...   1.0   0.0   0.0   0.0   0.0   0.0
63     3.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0

[64 rows x 53 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 64 entries, 0 to 63
Data columns (total 9 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          64 non-null     int64  
 1   Score_0        64 non-null     float64
 2   Proba_0        64 non-null     float64
 3   LogProba_0     64 non-null     float64
 4   Score_1        64 non-null     float64
 5   Proba_1        64 non-null     float64
 6   LogProba_1     64 non-null     float64
 7   Decision       64 non-null     int64  
 8   DecisionProba  64 non-null     float64
dtypes: float64(7), int64(2)
memory usage: 4.6 KB
    index   Score_0   Proba_0  ...  LogProba_1  Decision  DecisionProba
0       0 -0.553959  0.248259  ...   -0.285364         1       0.751741
1       1  0.533051  0.743855  ...   -1.362011         0       0.743855
2       2 -0.203625  0.399572  ...   -0.510112         1       0.600428
3       3 -0.320202  0.345155  ...   -0.423357         1       0.654845
4       4 -0.034332  0.482841  ...   -0.659404         1       0.517159
..    ...       ...       ...  ...         ...       ...            ...
59     59  0.773720  0.824544  ...   -1.740365         0       0.824544
60     60  0.436371  0.705316  ...   -1.221851         0       0.705316
61     61  0.718597  0.808020  ...   -1.650363         0       0.808020
62     62  0.331066  0.659739  ...   -1.078043         0       0.659739
63     63 -0.091557  0.454349  ...   -0.605776         1       0.545651

[64 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
    index   Score_0  SQL_Proba_0  ...  Py_Proba_0  Py_Proba_1  Py_Decision
48     48  0.898426     0.857765  ...    0.856809    0.143191        <=50K
49     49 -1.155678     0.090187  ...    0.090027    0.909973         >50K
50     50  0.505463     0.733201  ...    0.732341    0.267659        <=50K
51     51 -0.455132     0.286946  ...    0.286547    0.713453         >50K
52     52  0.921181     0.863228  ...    0.862535    0.137466        <=50K
53     53 -0.042500     0.478763  ...    0.477788    0.522212         >50K
54     54  0.506390     0.733564  ...    0.732417    0.267583        <=50K
55     55  0.466454     0.717665  ...    0.716079    0.283921        <=50K
56     56  0.715321     0.807001  ...    0.806392    0.193608        <=50K
57     57  0.363037     0.673943  ...    0.673514    0.326486        <=50K
58     58  0.506874     0.733753  ...    0.733371    0.266629        <=50K
59     59  0.773720     0.824544  ...    0.823978    0.176022        <=50K
60     60  0.436371     0.705316  ...    0.704910    0.295090        <=50K
61     61  0.718597     0.808020  ...    0.807868    0.192132        <=50K
62     62  0.331066     0.659739  ...    0.657104    0.342896        <=50K
63     63 -0.091557     0.454349  ...    0.453381    0.546619         >50K

[16 rows x 12 columns]
MLLITE_CLASS_SQL_ERROR ('census_one_hot_small', 'RidgeClassifier', 'duckdb') ('Py_Proba_0', 'SQL_Proba_0') 0.0009695987378036692
    Py_Proba_0  SQL_Proba_0  SQL_Error_0
48    0.856809     0.857765    -0.000956
49    0.090027     0.090187    -0.000160
50    0.732341     0.733201    -0.000861
51    0.286547     0.286946    -0.000399
52    0.862535     0.863228    -0.000693
53    0.477788     0.478763    -0.000975
54    0.732417     0.733564    -0.001147
55    0.716079     0.717665    -0.001586
56    0.806392     0.807001    -0.000609
57    0.673514     0.673943    -0.000429
58    0.733371     0.733753    -0.000382
59    0.823978     0.824544    -0.000566
60    0.704910     0.705316    -0.000406
61    0.807868     0.808020    -0.000152
62    0.657104     0.659739    -0.002636
63    0.453381     0.454349    -0.000968
MLLITE_CLASS_SQL_ERROR ('census_one_hot_small', 'RidgeClassifier', 'duckdb') ('Py_Proba_1', 'SQL_Proba_1') 0.000969598252555327
    Py_Proba_1  SQL_Proba_1  SQL_Error_1
48    0.143191     0.142235     0.000956
49    0.909973     0.909813     0.000160
50    0.267659     0.266799     0.000861
51    0.713453     0.713054     0.000399
52    0.137466     0.136772     0.000693
53    0.522212     0.521237     0.000975
54    0.267583     0.266436     0.001147
55    0.283921     0.282335     0.001586
56    0.193608     0.192999     0.000609
57    0.326486     0.326057     0.000429
58    0.266629     0.266247     0.000382
59    0.176022     0.175456     0.000566
60    0.295090     0.294684     0.000406
61    0.192132     0.191980     0.000152
62    0.342896     0.340261     0.002636
63    0.546619     0.545651     0.000968
MLLITE_CLASS_SQL_EXECUTION_STATUS ('census_one_hot_small', 'RidgeClassifier', 'duckdb', 'Success')
   Py_Decision  SQL_Decision
48       <=50K             0
49        >50K             1
50       <=50K             0
51        >50K             1
52       <=50K             0
53        >50K             1
54       <=50K             0
55       <=50K             0
56       <=50K             0
57       <=50K             0
58       <=50K             0
59       <=50K             0
60       <=50K             0
61       <=50K             0
62       <=50K             0
63        >50K             1
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_census_one_hot_small_option_1_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('census_one_hot_small', 'RidgeClassifier', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('census_one_hot_small', 'RidgeClassifier', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('census_one_hot_small', 'RidgeClassifier', 'sqlite')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('census_one_hot_small', 'RidgeClassifier', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 64 entries, 0 to 63
Data columns (total 53 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     64 non-null     float32
 1   X_1     64 non-null     float32
 2   X_2     64 non-null     float32
 3   X_3     64 non-null     float32
 4   X_4     64 non-null     float32
 5   X_5     64 non-null     float32
 6   X_6     64 non-null     float32
 7   X_7     64 non-null     float32
 8   X_8     64 non-null     float32
 9   X_9     64 non-null     float32
 10  X_10    64 non-null     float32
 11  X_11    64 non-null     float32
 12  X_12    64 non-null     float32
 13  X_13    64 non-null     float32
 14  X_14    64 non-null     float32
 15  X_15    64 non-null     float32
 16  X_16    64 non-null     float32
 17  X_17    64 non-null     float32
 18  X_18    64 non-null     float32
 19  X_19    64 non-null     float32
 20  X_20    64 non-null     float32
 21  X_21    64 non-null     float32
 22  X_22    64 non-null     float32
 23  X_23    64 non-null     float32
 24  X_24    64 non-null     float32
 25  X_25    64 non-null     float32
 26  X_26    64 non-null     float32
 27  X_27    64 non-null     float32
 28  X_28    64 non-null     float32
 29  X_29    64 non-null     float32
 30  X_30    64 non-null     float32
 31  X_31    64 non-null     float32
 32  X_32    64 non-null     float32
 33  X_33    64 non-null     float32
 34  X_34    64 non-null     float32
 35  X_35    64 non-null     float32
 36  X_36    64 non-null     float32
 37  X_37    64 non-null     float32
 38  X_38    64 non-null     float32
 39  X_39    64 non-null     float32
 40  X_40    64 non-null     float32
 41  X_41    64 non-null     float32
 42  X_42    64 non-null     float32
 43  X_43    64 non-null     float32
 44  X_44    64 non-null     float32
 45  X_45    64 non-null     float32
 46  X_46    64 non-null     float32
 47  X_47    64 non-null     float32
 48  X_48    64 non-null     float32
 49  X_49    64 non-null     float32
 50  X_50    64 non-null     float32
 51  X_51    64 non-null     float32
 52  X_52    64 non-null     float32
dtypes: float32(53)
memory usage: 13.8 KB
       X_0  X_1  X_2  X_3  X_4  X_5  ...  X_47  X_48  X_49  X_50  X_51  X_52
index                                ...                                    
0      2.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
1      1.0  0.0  0.0  0.0  0.0  1.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
2      1.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
3      1.0  0.0  0.0  1.0  0.0  0.0  ...   0.0   0.0   0.0   0.0   0.0   1.0
4      1.0  0.0  0.0  0.0  0.0  1.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
...    ...  ...  ...  ...  ...  ...  ...   ...   ...   ...   ...   ...   ...
59     1.0  0.0  0.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
60     0.0  0.0  0.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
61     4.0  0.0  0.0  0.0  0.0  1.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
62     4.0  0.0  0.0  0.0  1.0  0.0  ...   1.0   0.0   0.0   0.0   0.0   0.0
63     3.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0

[64 rows x 53 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 64 entries, 0 to 63
Data columns (total 9 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          64 non-null     int64  
 1   Score_0        64 non-null     float64
 2   Proba_0        64 non-null     float64
 3   LogProba_0     64 non-null     float64
 4   Score_1        64 non-null     float64
 5   Proba_1        64 non-null     float64
 6   LogProba_1     64 non-null     float64
 7   Decision       64 non-null     int64  
 8   DecisionProba  64 non-null     float64
dtypes: float64(7), int64(2)
memory usage: 4.6 KB
    index   Score_0   Proba_0  ...  LogProba_1  Decision  DecisionProba
0       0 -0.553570  0.248404  ...   -0.285557         1       0.751596
1       1  0.534630  0.744456  ...   -1.364362         0       0.744456
2       2 -0.202267  0.400223  ...   -0.511198         1       0.599777
3       3 -0.318562  0.345897  ...   -0.424490         1       0.654103
4       4 -0.034122  0.482946  ...   -0.659607         1       0.517054
..    ...       ...       ...  ...         ...       ...            ...
59     59  0.774561  0.824787  ...   -1.741753         0       0.824787
60     60  0.435875  0.705109  ...   -1.221151         0       0.705109
61     61  0.719406  0.808271  ...   -1.651670         0       0.808271
62     62  0.330513  0.659491  ...   -1.077313         0       0.659491
63     63 -0.089843  0.455199  ...   -0.607334         1       0.544801

[64 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
    index   Score_0  SQL_Proba_0  ...  Py_Proba_0  Py_Proba_1  Py_Decision
48     48  0.897805     0.857614  ...    0.856809    0.143191        <=50K
49     49 -1.155469     0.090221  ...    0.090027    0.909973         >50K
50     50  0.506499     0.733606  ...    0.732341    0.267659        <=50K
51     51 -0.454236     0.287313  ...    0.286547    0.713453         >50K
52     52  0.921094     0.863207  ...    0.862535    0.137466        <=50K
53     53 -0.041745     0.479139  ...    0.477788    0.522212         >50K
54     54  0.506620     0.733654  ...    0.732417    0.267583        <=50K
55     55  0.467329     0.718019  ...    0.716079    0.283921        <=50K
56     56  0.714691     0.806805  ...    0.806392    0.193608        <=50K
57     57  0.364020     0.674375  ...    0.673514    0.326486        <=50K
58     58  0.506387     0.733563  ...    0.733371    0.266629        <=50K
59     59  0.774561     0.824787  ...    0.823978    0.176022        <=50K
60     60  0.435875     0.705109  ...    0.704910    0.295090        <=50K
61     61  0.719406     0.808271  ...    0.807868    0.192132        <=50K
62     62  0.330513     0.659491  ...    0.657104    0.342896        <=50K
63     63 -0.089843     0.455199  ...    0.453381    0.546619         >50K

[16 rows x 12 columns]
MLLITE_CLASS_SQL_ERROR ('census_one_hot_small', 'RidgeClassifier', 'sqlite') ('Py_Proba_0', 'SQL_Proba_0') 0.0011724771667575562
    Py_Proba_0  SQL_Proba_0  SQL_Error_0
48    0.856809     0.857614    -0.000804
49    0.090027     0.090221    -0.000194
50    0.732341     0.733606    -0.001266
51    0.286547     0.287313    -0.000766
52    0.862535     0.863207    -0.000673
53    0.477788     0.479139    -0.001351
54    0.732417     0.733654    -0.001237
55    0.716079     0.718019    -0.001940
56    0.806392     0.806805    -0.000413
57    0.673514     0.674375    -0.000861
58    0.733371     0.733563    -0.000191
59    0.823978     0.824787    -0.000809
60    0.704910     0.705109    -0.000200
61    0.807868     0.808271    -0.000402
62    0.657104     0.659491    -0.002387
63    0.453381     0.455199    -0.001818
MLLITE_CLASS_SQL_ERROR ('census_one_hot_small', 'RidgeClassifier', 'sqlite') ('Py_Proba_1', 'SQL_Proba_1') 0.0011724774214160803
    Py_Proba_1  SQL_Proba_1  SQL_Error_1
48    0.143191     0.142386     0.000804
49    0.909973     0.909779     0.000194
50    0.267659     0.266394     0.001266
51    0.713453     0.712687     0.000766
52    0.137466     0.136793     0.000673
53    0.522212     0.520861     0.001351
54    0.267583     0.266346     0.001237
55    0.283921     0.281981     0.001940
56    0.193608     0.193195     0.000413
57    0.326486     0.325625     0.000861
58    0.266629     0.266437     0.000191
59    0.176022     0.175213     0.000809
60    0.295090     0.294891     0.000200
61    0.192132     0.191729     0.000402
62    0.342896     0.340509     0.002387
63    0.546619     0.544801     0.001818
MLLITE_CLASS_SQL_EXECUTION_STATUS ('census_one_hot_small', 'RidgeClassifier', 'sqlite', 'Failure')
   Py_Decision  SQL_Decision
48       <=50K             0
49        >50K             1
50       <=50K             0
51        >50K             1
52       <=50K             0
53        >50K             1
54       <=50K             0
55       <=50K             0
56       <=50K             0
57       <=50K             0
58       <=50K             0
59       <=50K             0
60       <=50K             0
61       <=50K             0
62       <=50K             0
63        >50K             1
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
