READING_CSV census_one_hot_small ['data/small/census_one_hot_small.csv']
    age  workclass_Local-gov  ...  native-country_infrequent_sklearn  target
0     2                  0.0  ...                                0.0    >50K
1     1                  0.0  ...                                0.0   <=50K
2     1                  0.0  ...                                0.0    >50K
3     1                  0.0  ...                                1.0    >50K
4     1                  0.0  ...                                0.0   <=50K
..  ...                  ...  ...                                ...     ...
59    1                  0.0  ...                                0.0   <=50K
60    0                  0.0  ...                                0.0   <=50K
61    4                  0.0  ...                                0.0    >50K
62    4                  0.0  ...                                0.0   <=50K
63    3                  0.0  ...                                0.0   <=50K

[64 rows x 54 columns]
MLLITE_MODEL_SET_OPTIONS DecisionTreeClassifier {"max_depth" : 6, "max_leaf_nodes" : 32}
MLLITE_MODEL_OPTIONS_DEFAULT DecisionTreeClassifier { "max_leaf_nodes" : 64}
MLLITE_MODEL_OPTIONS_AFTER_SETTING DecisionTreeClassifier { "max_depth" : 6, "max_leaf_nodes" : 32,  "max_leaf_nodes" : 64 }
MLLITE_MODEL_JSON_AFTER_SETTING DecisionTreeClassifier None
('OPERATION_START', 'TRAINING')
[[2.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 1.889500e+05 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 1.400000e+01 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  3.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00]
 [1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00 1.033222e+06 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 1.000000e+00
  0.000000e+00 1.000000e+01 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  2.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00]
 [1.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 1.297070e+05 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.300000e+01 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 1.000000e+00 4.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00]
 [1.000000e+00 0.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 7.853000e+04 0.000000e+00
  0.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 9.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  4.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 1.000000e+00]
 [1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00 1.595370e+05 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 1.200000e+01 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  2.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00]] ['>50K' '<=50K' '>50K' '>50K' '<=50K']
MLLITE_FIT_USING_MODEL mllite_decision_tree_class.DecisionTreeClassifier_ff4_OO8
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_CLASSIFIER_FIT' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 0 6
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_CLASSIFIER_FIT' 2 4
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_CLASSIFIER_FIT' 3 4
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_CLASSIFIER_FIT' 4 4
('OPERATION_END_ELAPSED', 0.012, 'TRAINING')
{ "max_depth" : 6, "max_leaf_nodes" : 32,  "max_leaf_nodes" : 64 }
{ "max_depth" : 6, "max_leaf_nodes" : 32,  "max_leaf_nodes" : 64 }
{
	"metadata" : { "model" : "Breiman_CART", "version" : "2024-W14", "signature" : "ff4_OO8"},
	"options" : { "ccp_alpha" : 0.000000, "criterion" : "", "max_depth" : 6, "max_features" : null, "max_leaf_nodes" : 32, "min_impurity_decrease" : 0.000000, "min_samples_leaf" : 1, "min_samples_split" : 2, "min_weight_fraction_leaf" : 0.000000, "random_state" : 1789, "splitter" : "best" },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 53 },
	"classes" : [ "<=50K", ">50K" ],
	"tree" : {
	"features" : 53,
	"outputs" : 2,
	"max_depth" : 5,
	"node_count" : 27,
	"nodes" : {
		"node_00" : {"left" : 1, "right" : 2, "feature" : 16, "threshold" : 11.500000, "impurity" : 0.341797, "n_samples" : 64, "w_samples" : 64.000000, "value" : [0.781250, 0.218750]},
		"node_01" : {"left" : 17, "right" : 18, "feature" : 3, "threshold" : 0.500000, "impurity" : 0.161975, "n_samples" : 45, "w_samples" : 45.000000, "value" : [0.911111, 0.088889]},
		"node_02" : {"left" : 3, "right" : 4, "feature" : 20, "threshold" : 0.500000, "impurity" : 0.498615, "n_samples" : 19, "w_samples" : 19.000000, "value" : [0.473684, 0.526316]},
		"node_03" : {"left" : 5, "right" : 6, "feature" : 38, "threshold" : 0.500000, "impurity" : 0.444444, "n_samples" : 15, "w_samples" : 15.000000, "value" : [0.333333, 0.666667]},
		"node_04" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 4, "w_samples" : 4.000000, "value" : [1.000000, 0.000000]},
		"node_05" : {"left" : 7, "right" : 8, "feature" : 25, "threshold" : 0.500000, "impurity" : 0.355030, "n_samples" : 13, "w_samples" : 13.000000, "value" : [0.230769, 0.769231]},
		"node_06" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [1.000000, 0.000000]},
		"node_07" : {"left" : 13, "right" : 14, "feature" : 0, "threshold" : 3.500000, "impurity" : 0.197531, "n_samples" : 9, "w_samples" : 9.000000, "value" : [0.111111, 0.888889]},
		"node_08" : {"left" : 9, "right" : 10, "feature" : 11, "threshold" : 0.500000, "impurity" : 0.500000, "n_samples" : 4, "w_samples" : 4.000000, "value" : [0.500000, 0.500000]},
		"node_09" : {"left" : 11, "right" : 12, "feature" : 8, "threshold" : 290143.000000, "impurity" : 0.444444, "n_samples" : 3, "w_samples" : 3.000000, "value" : [0.666667, 0.333333]},
		"node_10" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 1.000000]},
		"node_11" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [1.000000, 0.000000]},
		"node_12" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 1.000000]},
		"node_13" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 7, "w_samples" : 7.000000, "value" : [0.000000, 1.000000]},
		"node_14" : {"left" : 15, "right" : 16, "feature" : 11, "threshold" : 0.500000, "impurity" : 0.500000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [0.500000, 0.500000]},
		"node_15" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.000000, 0.000000]},
		"node_16" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 1.000000]},
		"node_17" : {"left" : 21, "right" : 22, "feature" : 44, "threshold" : 1.500000, "impurity" : 0.090703, "n_samples" : 42, "w_samples" : 42.000000, "value" : [0.952381, 0.047619]},
		"node_18" : {"left" : 19, "right" : 20, "feature" : 45, "threshold" : 2.500000, "impurity" : 0.444444, "n_samples" : 3, "w_samples" : 3.000000, "value" : [0.333333, 0.666667]},
		"node_19" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.000000, 0.000000]},
		"node_20" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [0.000000, 1.000000]},
		"node_21" : {"left" : 23, "right" : 24, "feature" : 8, "threshold" : 98443.500000, "impurity" : 0.047591, "n_samples" : 41, "w_samples" : 41.000000, "value" : [0.975610, 0.024390]},
		"node_22" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 1.000000]},
		"node_23" : {"left" : 25, "right" : 26, "feature" : 8, "threshold" : 87811.000000, "impurity" : 0.197531, "n_samples" : 9, "w_samples" : 9.000000, "value" : [0.888889, 0.111111]},
		"node_24" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 32, "w_samples" : 32.000000, "value" : [1.000000, 0.000000]},
		"node_25" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 8, "w_samples" : 8.000000, "value" : [1.000000, 0.000000]},
		"node_26" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 1.000000]}
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/DecisionTreeClassifier/mllite.DecisionTreeClassifier_census_one_hot_small_option_1.json'

RELOADING_MODEL_FROM_JSON_START ('census_one_hot_small', 'DecisionTreeClassifier')
MLLITE_MODEL_SET_OPTIONS DecisionTreeClassifier {"max_depth" : 6, "max_leaf_nodes" : 32}
MLLITE_MODEL_OPTIONS_DEFAULT DecisionTreeClassifier { "max_leaf_nodes" : 64}
MLLITE_MODEL_OPTIONS_AFTER_SETTING DecisionTreeClassifier { "max_depth" : 6, "max_leaf_nodes" : 32,  "max_leaf_nodes" : 64 }
MLLITE_MODEL_JSON_AFTER_SETTING DecisionTreeClassifier None
MLLITE_RELOADING_MODEL mllite_decision_tree_class.DecisionTreeClassifier_ff4_OO8
{
	"metadata" : { "model" : "Breiman_CART", "version" : "2024-W14", "signature" : "ff4_OO8"},
	"options" : { "ccp_alpha" : 0.000000, "criterion" : "", "max_depth" : 6, "max_features" : null, "max_leaf_nodes" : 32, "min_impurity_decrease" : 0.000000, "min_samples_leaf" : 1, "min_samples_split" : 2, "min_weight_fraction_leaf" : 0.000000, "random_state" : 1789, "splitter" : "best" },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 53 },
	"classes" : [ "<=50K", ">50K" ],
	"tree" : {
	"features" : 53,
	"outputs" : 2,
	"max_depth" : 5,
	"node_count" : 27,
	"nodes" : {
		"node_00" : {"left" : 1, "right" : 2, "feature" : 16, "threshold" : 11.500000, "impurity" : 0.341797, "n_samples" : 64, "w_samples" : 64.000000, "value" : [0.781250, 0.218750]},
		"node_01" : {"left" : 17, "right" : 18, "feature" : 3, "threshold" : 0.500000, "impurity" : 0.161975, "n_samples" : 45, "w_samples" : 45.000000, "value" : [0.911111, 0.088889]},
		"node_02" : {"left" : 3, "right" : 4, "feature" : 20, "threshold" : 0.500000, "impurity" : 0.498615, "n_samples" : 19, "w_samples" : 19.000000, "value" : [0.473684, 0.526316]},
		"node_03" : {"left" : 5, "right" : 6, "feature" : 38, "threshold" : 0.500000, "impurity" : 0.444444, "n_samples" : 15, "w_samples" : 15.000000, "value" : [0.333333, 0.666667]},
		"node_04" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 4, "w_samples" : 4.000000, "value" : [1.000000, 0.000000]},
		"node_05" : {"left" : 7, "right" : 8, "feature" : 25, "threshold" : 0.500000, "impurity" : 0.355030, "n_samples" : 13, "w_samples" : 13.000000, "value" : [0.230769, 0.769231]},
		"node_06" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [1.000000, 0.000000]},
		"node_07" : {"left" : 13, "right" : 14, "feature" : 0, "threshold" : 3.500000, "impurity" : 0.197531, "n_samples" : 9, "w_samples" : 9.000000, "value" : [0.111111, 0.888889]},
		"node_08" : {"left" : 9, "right" : 10, "feature" : 11, "threshold" : 0.500000, "impurity" : 0.500000, "n_samples" : 4, "w_samples" : 4.000000, "value" : [0.500000, 0.500000]},
		"node_09" : {"left" : 11, "right" : 12, "feature" : 8, "threshold" : 290143.000000, "impurity" : 0.444444, "n_samples" : 3, "w_samples" : 3.000000, "value" : [0.666667, 0.333333]},
		"node_10" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 1.000000]},
		"node_11" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [1.000000, 0.000000]},
		"node_12" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 1.000000]},
		"node_13" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 7, "w_samples" : 7.000000, "value" : [0.000000, 1.000000]},
		"node_14" : {"left" : 15, "right" : 16, "feature" : 11, "threshold" : 0.500000, "impurity" : 0.500000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [0.500000, 0.500000]},
		"node_15" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.000000, 0.000000]},
		"node_16" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 1.000000]},
		"node_17" : {"left" : 21, "right" : 22, "feature" : 44, "threshold" : 1.500000, "impurity" : 0.090703, "n_samples" : 42, "w_samples" : 42.000000, "value" : [0.952381, 0.047619]},
		"node_18" : {"left" : 19, "right" : 20, "feature" : 45, "threshold" : 2.500000, "impurity" : 0.444444, "n_samples" : 3, "w_samples" : 3.000000, "value" : [0.333333, 0.666667]},
		"node_19" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.000000, 0.000000]},
		"node_20" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [0.000000, 1.000000]},
		"node_21" : {"left" : 23, "right" : 24, "feature" : 8, "threshold" : 98443.500000, "impurity" : 0.047591, "n_samples" : 41, "w_samples" : 41.000000, "value" : [0.975610, 0.024390]},
		"node_22" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 1.000000]},
		"node_23" : {"left" : 25, "right" : 26, "feature" : 8, "threshold" : 87811.000000, "impurity" : 0.197531, "n_samples" : 9, "w_samples" : 9.000000, "value" : [0.888889, 0.111111]},
		"node_24" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 32, "w_samples" : 32.000000, "value" : [1.000000, 0.000000]},
		"node_25" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 8, "w_samples" : 8.000000, "value" : [1.000000, 0.000000]},
		"node_26" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 1.000000]}
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ "<=50K", ">50K" ],
	"dataset" : 	{
		"dataset_features" : 53,
		"dataset_rows" : 64
	},
	"metadata" :  { "model" : "Breiman_CART", "signature" : "ff4_OO8", "version" : "2024-W14" },
	"options" :  { "ccp_alpha" : 0.0, "criterion" : "", "max_depth" : 6, "max_features" : null, "max_leaf_nodes" : 32, "min_impurity_decrease" : 0.0, "min_samples_leaf" : 1, "min_samples_split" : 2, "min_weight_fraction_leaf" : 0.0, "random_state" : 1789, "splitter" : "best" },
	"tree" : 	{
		"features" : 53,
		"max_depth" : 5,
		"node_count" : 27,
		"nodes" : 	{
			"node_00" :  { "feature" : 16, "impurity" : 0.341797, "left" : 1, "n_samples" : 64, "right" : 2, "threshold" : 11.5, "value" : [ 0.78125, 0.21875 ], "w_samples" : 64.0 },
			"node_01" :  { "feature" : 3, "impurity" : 0.161975, "left" : 17, "n_samples" : 45, "right" : 18, "threshold" : 0.5, "value" : [ 0.911111, 0.088889 ], "w_samples" : 45.0 },
			"node_02" :  { "feature" : 20, "impurity" : 0.498615, "left" : 3, "n_samples" : 19, "right" : 4, "threshold" : 0.5, "value" : [ 0.473684, 0.526316 ], "w_samples" : 19.0 },
			"node_03" :  { "feature" : 38, "impurity" : 0.444444, "left" : 5, "n_samples" : 15, "right" : 6, "threshold" : 0.5, "value" : [ 0.333333, 0.666667 ], "w_samples" : 15.0 },
			"node_04" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 4, "right" : null, "threshold" : null, "value" : [ 1.0, 0.0 ], "w_samples" : 4.0 },
			"node_05" :  { "feature" : 25, "impurity" : 0.35503, "left" : 7, "n_samples" : 13, "right" : 8, "threshold" : 0.5, "value" : [ 0.230769, 0.769231 ], "w_samples" : 13.0 },
			"node_06" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 2, "right" : null, "threshold" : null, "value" : [ 1.0, 0.0 ], "w_samples" : 2.0 },
			"node_07" :  { "feature" : 0, "impurity" : 0.197531, "left" : 13, "n_samples" : 9, "right" : 14, "threshold" : 3.5, "value" : [ 0.111111, 0.888889 ], "w_samples" : 9.0 },
			"node_08" :  { "feature" : 11, "impurity" : 0.5, "left" : 9, "n_samples" : 4, "right" : 10, "threshold" : 0.5, "value" : [ 0.5, 0.5 ], "w_samples" : 4.0 },
			"node_09" :  { "feature" : 8, "impurity" : 0.444444, "left" : 11, "n_samples" : 3, "right" : 12, "threshold" : 290143.0, "value" : [ 0.666667, 0.333333 ], "w_samples" : 3.0 },
			"node_10" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 0.0, 1.0 ], "w_samples" : 1.0 },
			"node_11" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 2, "right" : null, "threshold" : null, "value" : [ 1.0, 0.0 ], "w_samples" : 2.0 },
			"node_12" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 0.0, 1.0 ], "w_samples" : 1.0 },
			"node_13" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 7, "right" : null, "threshold" : null, "value" : [ 0.0, 1.0 ], "w_samples" : 7.0 },
			"node_14" :  { "feature" : 11, "impurity" : 0.5, "left" : 15, "n_samples" : 2, "right" : 16, "threshold" : 0.5, "value" : [ 0.5, 0.5 ], "w_samples" : 2.0 },
			"node_15" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 1.0, 0.0 ], "w_samples" : 1.0 },
			"node_16" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 0.0, 1.0 ], "w_samples" : 1.0 },
			"node_17" :  { "feature" : 44, "impurity" : 0.090703, "left" : 21, "n_samples" : 42, "right" : 22, "threshold" : 1.5, "value" : [ 0.952381, 0.047619 ], "w_samples" : 42.0 },
			"node_18" :  { "feature" : 45, "impurity" : 0.444444, "left" : 19, "n_samples" : 3, "right" : 20, "threshold" : 2.5, "value" : [ 0.333333, 0.666667 ], "w_samples" : 3.0 },
			"node_19" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 1.0, 0.0 ], "w_samples" : 1.0 },
			"node_20" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 2, "right" : null, "threshold" : null, "value" : [ 0.0, 1.0 ], "w_samples" : 2.0 },
			"node_21" :  { "feature" : 8, "impurity" : 0.047591, "left" : 23, "n_samples" : 41, "right" : 24, "threshold" : 98443.5, "value" : [ 0.97561, 0.02439 ], "w_samples" : 41.0 },
			"node_22" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 0.0, 1.0 ], "w_samples" : 1.0 },
			"node_23" :  { "feature" : 8, "impurity" : 0.197531, "left" : 25, "n_samples" : 9, "right" : 26, "threshold" : 87811.0, "value" : [ 0.888889, 0.111111 ], "w_samples" : 9.0 },
			"node_24" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 32, "right" : null, "threshold" : null, "value" : [ 1.0, 0.0 ], "w_samples" : 32.0 },
			"node_25" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 8, "right" : null, "threshold" : null, "value" : [ 1.0, 0.0 ], "w_samples" : 8.0 },
			"node_26" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 0.0, 1.0 ], "w_samples" : 1.0 }
		},
		"outputs" : 2
	}
}
BEAUTIFIED_JSON_END
RELOADING_MODEL_FROM_JSON_END ('census_one_hot_small', 'DecisionTreeClassifier')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0. 1.]
 [1. 0.]
 [0. 1.]
 [0. 1.]
 [1. 0.]
 [0. 1.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [0. 1.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [0. 1.]
 [0. 1.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [0. 1.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [0. 1.]
 [1. 0.]
 [0. 1.]
 [1. 0.]
 [1. 0.]
 [0. 1.]
 [1. 0.]
 [1. 0.]
 [0. 1.]
 [1. 0.]
 [0. 1.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [0. 1.]
 [1. 0.]
 [1. 0.]]
(64, 2)
(64,) float32
MODEL_PERFS {'class_name': 'mllite.DecisionTreeClassifier', 'model_name': 'DecisionTreeClassifier', 'options': '{"max_depth" : 6, "max_leaf_nodes" : 32}', 'dataset': 'census_one_hot_small', 'size': 64, 'accuracy': 1.0, 'auc': 1.0}
WRITING_PERF_CODE 'logs/auto_tests/classification/DecisionTreeClassifier/mllite.DecisionTreeClassifier_census_one_hot_small_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.DecisionTreeClassifier', 'model_name': 'DecisionTreeClassifier', 'options': '{"max_depth" : 6, "max_leaf_nodes" : 32}', 'dataset': 'census_one_hot_small', 'training_time_in_sec': 0.012, 'prediction_time_in_sec': 0.0}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 0 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 1 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 2 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 3 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 4 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 5 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 6 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 7 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 8 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 9 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 10 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 11 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 12 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 13 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 14 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 15 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 16 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 17 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 18 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 19 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 20 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 21 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 22 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 23 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 24 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 25 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 26 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 27 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 28 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 29 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 30 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 31 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 32 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 33 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 34 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 35 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 36 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 37 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 38 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 39 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 40 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 41 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 42 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 43 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 44 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 45 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 46 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 47 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 48 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 49 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 50 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 51 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 52 53
{
   "Contributions" : {
      "X_0" : [ -0.028809, 0.028809 ],
      "X_1" : [ 0.000000, 0.000000 ],
      "X_2" : [ 0.000000, 0.000000 ],
      "X_3" : [ -0.016113, 0.016113 ],
      "X_4" : [ 0.000000, 0.000000 ],
      "X_5" : [ 0.000000, 0.000000 ],
      "X_6" : [ 0.000000, 0.000000 ],
      "X_7" : [ 0.000000, 0.000000 ],
      "X_8" : [ -0.017090, 0.017090 ],
      "X_9" : [ 0.000000, 0.000000 ],
      "X_10" : [ 0.000000, 0.000000 ],
      "X_11" : [ -0.000977, 0.000977 ],
      "X_12" : [ 0.000000, 0.000000 ],
      "X_13" : [ 0.000000, 0.000000 ],
      "X_14" : [ 0.000000, 0.000000 ],
      "X_15" : [ 0.000000, 0.000000 ],
      "X_16" : [ -0.032227, 0.032227 ],
      "X_17" : [ 0.000000, 0.000000 ],
      "X_18" : [ 0.000000, 0.000000 ],
      "X_19" : [ 0.000000, 0.000000 ],
      "X_20" : [ -0.000977, 0.000977 ],
      "X_21" : [ 0.000000, 0.000000 ],
      "X_22" : [ 0.000000, 0.000000 ],
      "X_23" : [ 0.000000, 0.000000 ],
      "X_24" : [ 0.000000, 0.000000 ],
      "X_25" : [ 0.015625, -0.015625 ],
      "X_26" : [ 0.000000, 0.000000 ],
      "X_27" : [ 0.000000, 0.000000 ],
      "X_28" : [ 0.000000, 0.000000 ],
      "X_29" : [ 0.000000, 0.000000 ],
      "X_30" : [ 0.000000, 0.000000 ],
      "X_31" : [ 0.000000, 0.000000 ],
      "X_32" : [ 0.000000, 0.000000 ],
      "X_33" : [ 0.000000, 0.000000 ],
      "X_34" : [ 0.000000, 0.000000 ],
      "X_35" : [ 0.000000, 0.000000 ],
      "X_36" : [ 0.000000, 0.000000 ],
      "X_37" : [ 0.000000, 0.000000 ],
      "X_38" : [ 0.015137, -0.015137 ],
      "X_39" : [ 0.000000, 0.000000 ],
      "X_40" : [ 0.000000, 0.000000 ],
      "X_41" : [ 0.000000, 0.000000 ],
      "X_42" : [ 0.000000, 0.000000 ],
      "X_43" : [ 0.000000, 0.000000 ],
      "X_44" : [ 0.032715, -0.032715 ],
      "X_45" : [ -0.021484, 0.021484 ],
      "X_46" : [ 0.000000, 0.000000 ],
      "X_47" : [ 0.000000, 0.000000 ],
      "X_48" : [ 0.000000, 0.000000 ],
      "X_49" : [ 0.000000, 0.000000 ],
      "X_50" : [ 0.000000, 0.000000 ],
      "X_51" : [ 0.000000, 0.000000 ],
      "X_52" : [ 0.000000, 0.000000 ]   
   },
   "Most_Contributive_Features_By_Class" : {
      "class_0" : [ 44, 16, 0, 45, 8, 3, 25, 38, 11, 20 ],
      "class_1" : [ 44, 16, 0, 45, 8, 3, 25, 38, 11, 20 ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/classification/DecisionTreeClassifier/mllite.DecisionTreeClassifier_census_one_hot_small_option_1_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/classification/DecisionTreeClassifier/mllite.DecisionTreeClassifier_census_one_hot_small_option_1_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('census_one_hot_small', 'DecisionTreeClassifier', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('census_one_hot_small', 'DecisionTreeClassifier', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('census_one_hot_small', 'DecisionTreeClassifier', 'duckdb')
S "P_0", 0.000000 AS "P_1", 0 AS "D", 1.000000 AS "DP"
    UNION ALL
    SELECT 26 AS nid,  0.000000 AS "P_0", 1.000000 AS "P_1", 1 AS "D", 1.000000 AS "DP"
  ) AS "Values"),
"DT_Output" AS 
 (SELECT
   t1."index" AS "index",
   t1.node_id AS node_id,
   t2.nid AS nid,
   t2."P_0" AS "P_0", t2."P_1" AS "P_1", 
   t2."D" AS "D", 
   t2."DP" AS "DP"
  FROM
   "DT_node_lookup" AS t1
   LEFT OUTER JOIN
   "DT_node_data" AS t2
   ON t1.node_id = t2.nid
 )
SELECT
   "DT_Output"."index" AS "index",
   CAST(NULL AS FLOAT)  AS "Score_0",
   "DT_Output"."P_0" AS "Proba_0",
   CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN LN( "DT_Output"."P_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
   CAST(NULL AS FLOAT)  AS "Score_1",
   "DT_Output"."P_1" AS "Proba_1",
   CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN LN( "DT_Output"."P_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
   "DT_Output"."D" AS "Decision",
   "DT_Output"."DP" AS "DecisionProba"
FROM "DT_Output"
SQL_OUT_PUT_LAST_LINES_END ('census_one_hot_small', 'DecisionTreeClassifier', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 64 entries, 0 to 63
Data columns (total 53 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     64 non-null     float32
 1   X_1     64 non-null     float32
 2   X_2     64 non-null     float32
 3   X_3     64 non-null     float32
 4   X_4     64 non-null     float32
 5   X_5     64 non-null     float32
 6   X_6     64 non-null     float32
 7   X_7     64 non-null     float32
 8   X_8     64 non-null     float32
 9   X_9     64 non-null     float32
 10  X_10    64 non-null     float32
 11  X_11    64 non-null     float32
 12  X_12    64 non-null     float32
 13  X_13    64 non-null     float32
 14  X_14    64 non-null     float32
 15  X_15    64 non-null     float32
 16  X_16    64 non-null     float32
 17  X_17    64 non-null     float32
 18  X_18    64 non-null     float32
 19  X_19    64 non-null     float32
 20  X_20    64 non-null     float32
 21  X_21    64 non-null     float32
 22  X_22    64 non-null     float32
 23  X_23    64 non-null     float32
 24  X_24    64 non-null     float32
 25  X_25    64 non-null     float32
 26  X_26    64 non-null     float32
 27  X_27    64 non-null     float32
 28  X_28    64 non-null     float32
 29  X_29    64 non-null     float32
 30  X_30    64 non-null     float32
 31  X_31    64 non-null     float32
 32  X_32    64 non-null     float32
 33  X_33    64 non-null     float32
 34  X_34    64 non-null     float32
 35  X_35    64 non-null     float32
 36  X_36    64 non-null     float32
 37  X_37    64 non-null     float32
 38  X_38    64 non-null     float32
 39  X_39    64 non-null     float32
 40  X_40    64 non-null     float32
 41  X_41    64 non-null     float32
 42  X_42    64 non-null     float32
 43  X_43    64 non-null     float32
 44  X_44    64 non-null     float32
 45  X_45    64 non-null     float32
 46  X_46    64 non-null     float32
 47  X_47    64 non-null     float32
 48  X_48    64 non-null     float32
 49  X_49    64 non-null     float32
 50  X_50    64 non-null     float32
 51  X_51    64 non-null     float32
 52  X_52    64 non-null     float32
dtypes: float32(53)
memory usage: 13.8 KB
       X_0  X_1  X_2  X_3  X_4  X_5  ...  X_47  X_48  X_49  X_50  X_51  X_52
index                                ...                                    
0      2.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
1      1.0  0.0  0.0  0.0  0.0  1.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
2      1.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
3      1.0  0.0  0.0  1.0  0.0  0.0  ...   0.0   0.0   0.0   0.0   0.0   1.0
4      1.0  0.0  0.0  0.0  0.0  1.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
...    ...  ...  ...  ...  ...  ...  ...   ...   ...   ...   ...   ...   ...
59     1.0  0.0  0.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
60     0.0  0.0  0.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
61     4.0  0.0  0.0  0.0  0.0  1.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
62     4.0  0.0  0.0  0.0  1.0  0.0  ...   1.0   0.0   0.0   0.0   0.0   0.0
63     3.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0

[64 rows x 53 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 64 entries, 0 to 63
Data columns (total 9 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          64 non-null     int64  
 1   Score_0        0 non-null      object 
 2   Proba_0        64 non-null     float64
 3   LogProba_0     64 non-null     float64
 4   Score_1        0 non-null      object 
 5   Proba_1        64 non-null     float64
 6   LogProba_1     64 non-null     float64
 7   Decision       64 non-null     int64  
 8   DecisionProba  64 non-null     float64
dtypes: float64(5), int64(2), object(2)
memory usage: 4.6+ KB
    index Score_0  Proba_0  ...     LogProba_1 Decision  DecisionProba
0       0    None      0.0  ...   0.000000e+00        1            1.0
1       1    None      1.0  ... -1.797693e+308        0            1.0
2       2    None      0.0  ...   0.000000e+00        1            1.0
3       3    None      0.0  ...   0.000000e+00        1            1.0
4       4    None      1.0  ... -1.797693e+308        0            1.0
..    ...     ...      ...  ...            ...      ...            ...
59     59    None      1.0  ... -1.797693e+308        0            1.0
60     60    None      1.0  ... -1.797693e+308        0            1.0
61     61    None      0.0  ...   0.000000e+00        1            1.0
62     62    None      1.0  ... -1.797693e+308        0            1.0
63     63    None      1.0  ... -1.797693e+308        0            1.0

[64 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
    index Score_0  SQL_Proba_0  ...  Py_Proba_0 Py_Proba_1  Py_Decision
48     48    None          1.0  ...         1.0        0.0        <=50K
49     49    None          0.0  ...         0.0        1.0         >50K
50     50    None          1.0  ...         1.0        0.0        <=50K
51     51    None          1.0  ...         1.0        0.0        <=50K
52     52    None          1.0  ...         1.0        0.0        <=50K
53     53    None          1.0  ...         1.0        0.0        <=50K
54     54    None          1.0  ...         1.0        0.0        <=50K
55     55    None          1.0  ...         1.0        0.0        <=50K
56     56    None          1.0  ...         1.0        0.0        <=50K
57     57    None          1.0  ...         1.0        0.0        <=50K
58     58    None          1.0  ...         1.0        0.0        <=50K
59     59    None          1.0  ...         1.0        0.0        <=50K
60     60    None          1.0  ...         1.0        0.0        <=50K
61     61    None          0.0  ...         0.0        1.0         >50K
62     62    None          1.0  ...         1.0        0.0        <=50K
63     63    None          1.0  ...         1.0        0.0        <=50K

[16 rows x 12 columns]
MLLITE_CLASS_SQL_ERROR ('census_one_hot_small', 'DecisionTreeClassifier', 'duckdb') ('Py_Proba_0', 'SQL_Proba_0') 0.0
    Py_Proba_0  SQL_Proba_0  SQL_Error_0
48         1.0          1.0          0.0
49         0.0          0.0          0.0
50         1.0          1.0          0.0
51         1.0          1.0          0.0
52         1.0          1.0          0.0
53         1.0          1.0          0.0
54         1.0          1.0          0.0
55         1.0          1.0          0.0
56         1.0          1.0          0.0
57         1.0          1.0          0.0
58         1.0          1.0          0.0
59         1.0          1.0          0.0
60         1.0          1.0          0.0
61         0.0          0.0          0.0
62         1.0          1.0          0.0
63         1.0          1.0          0.0
MLLITE_CLASS_SQL_ERROR ('census_one_hot_small', 'DecisionTreeClassifier', 'duckdb') ('Py_Proba_1', 'SQL_Proba_1') 0.0
    Py_Proba_1  SQL_Proba_1  SQL_Error_1
48         0.0          0.0          0.0
49         1.0          1.0          0.0
50         0.0          0.0          0.0
51         0.0          0.0          0.0
52         0.0          0.0          0.0
53         0.0          0.0          0.0
54         0.0          0.0          0.0
55         0.0          0.0          0.0
56         0.0          0.0          0.0
57         0.0          0.0          0.0
58         0.0          0.0          0.0
59         0.0          0.0          0.0
60         0.0          0.0          0.0
61         1.0          1.0          0.0
62         0.0          0.0          0.0
63         0.0          0.0          0.0
MLLITE_CLASS_SQL_EXECUTION_STATUS ('census_one_hot_small', 'DecisionTreeClassifier', 'duckdb', 'Success')
   Py_Decision  SQL_Decision
48       <=50K             0
49        >50K             1
50       <=50K             0
51       <=50K             0
52       <=50K             0
53       <=50K             0
54       <=50K             0
55       <=50K             0
56       <=50K             0
57       <=50K             0
58       <=50K             0
59       <=50K             0
60       <=50K             0
61        >50K             1
62       <=50K             0
63       <=50K             0
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/DecisionTreeClassifier/mllite.DecisionTreeClassifier_census_one_hot_small_option_1_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('census_one_hot_small', 'DecisionTreeClassifier', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('census_one_hot_small', 'DecisionTreeClassifier', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('census_one_hot_small', 'DecisionTreeClassifier', 'sqlite')
S "P_0", 0.000000 AS "P_1", 0 AS "D", 1.000000 AS "DP"
    UNION ALL
    SELECT 26 AS nid,  0.000000 AS "P_0", 1.000000 AS "P_1", 1 AS "D", 1.000000 AS "DP"
  ) AS "Values"),
"DT_Output" AS 
 (SELECT
   t1."index" AS "index",
   t1.node_id AS node_id,
   t2.nid AS nid,
   t2."P_0" AS "P_0", t2."P_1" AS "P_1", 
   t2."D" AS "D", 
   t2."DP" AS "DP"
  FROM
   "DT_node_lookup" AS t1
   LEFT OUTER JOIN
   "DT_node_data" AS t2
   ON t1.node_id = t2.nid
 )
SELECT
   "DT_Output"."index" AS "index",
   CAST(NULL AS FLOAT)  AS "Score_0",
   "DT_Output"."P_0" AS "Proba_0",
   CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN LN( "DT_Output"."P_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
   CAST(NULL AS FLOAT)  AS "Score_1",
   "DT_Output"."P_1" AS "Proba_1",
   CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN LN( "DT_Output"."P_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
   "DT_Output"."D" AS "Decision",
   "DT_Output"."DP" AS "DecisionProba"
FROM "DT_Output"
SQL_OUT_PUT_LAST_LINES_END ('census_one_hot_small', 'DecisionTreeClassifier', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 64 entries, 0 to 63
Data columns (total 53 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     64 non-null     float32
 1   X_1     64 non-null     float32
 2   X_2     64 non-null     float32
 3   X_3     64 non-null     float32
 4   X_4     64 non-null     float32
 5   X_5     64 non-null     float32
 6   X_6     64 non-null     float32
 7   X_7     64 non-null     float32
 8   X_8     64 non-null     float32
 9   X_9     64 non-null     float32
 10  X_10    64 non-null     float32
 11  X_11    64 non-null     float32
 12  X_12    64 non-null     float32
 13  X_13    64 non-null     float32
 14  X_14    64 non-null     float32
 15  X_15    64 non-null     float32
 16  X_16    64 non-null     float32
 17  X_17    64 non-null     float32
 18  X_18    64 non-null     float32
 19  X_19    64 non-null     float32
 20  X_20    64 non-null     float32
 21  X_21    64 non-null     float32
 22  X_22    64 non-null     float32
 23  X_23    64 non-null     float32
 24  X_24    64 non-null     float32
 25  X_25    64 non-null     float32
 26  X_26    64 non-null     float32
 27  X_27    64 non-null     float32
 28  X_28    64 non-null     float32
 29  X_29    64 non-null     float32
 30  X_30    64 non-null     float32
 31  X_31    64 non-null     float32
 32  X_32    64 non-null     float32
 33  X_33    64 non-null     float32
 34  X_34    64 non-null     float32
 35  X_35    64 non-null     float32
 36  X_36    64 non-null     float32
 37  X_37    64 non-null     float32
 38  X_38    64 non-null     float32
 39  X_39    64 non-null     float32
 40  X_40    64 non-null     float32
 41  X_41    64 non-null     float32
 42  X_42    64 non-null     float32
 43  X_43    64 non-null     float32
 44  X_44    64 non-null     float32
 45  X_45    64 non-null     float32
 46  X_46    64 non-null     float32
 47  X_47    64 non-null     float32
 48  X_48    64 non-null     float32
 49  X_49    64 non-null     float32
 50  X_50    64 non-null     float32
 51  X_51    64 non-null     float32
 52  X_52    64 non-null     float32
dtypes: float32(53)
memory usage: 13.8 KB
       X_0  X_1  X_2  X_3  X_4  X_5  ...  X_47  X_48  X_49  X_50  X_51  X_52
index                                ...                                    
0      2.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
1      1.0  0.0  0.0  0.0  0.0  1.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
2      1.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
3      1.0  0.0  0.0  1.0  0.0  0.0  ...   0.0   0.0   0.0   0.0   0.0   1.0
4      1.0  0.0  0.0  0.0  0.0  1.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
...    ...  ...  ...  ...  ...  ...  ...   ...   ...   ...   ...   ...   ...
59     1.0  0.0  0.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
60     0.0  0.0  0.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
61     4.0  0.0  0.0  0.0  0.0  1.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
62     4.0  0.0  0.0  0.0  1.0  0.0  ...   1.0   0.0   0.0   0.0   0.0   0.0
63     3.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0

[64 rows x 53 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 64 entries, 0 to 63
Data columns (total 9 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          64 non-null     int64  
 1   Score_0        0 non-null      object 
 2   Proba_0        64 non-null     float64
 3   LogProba_0     64 non-null     float64
 4   Score_1        0 non-null      object 
 5   Proba_1        64 non-null     float64
 6   LogProba_1     64 non-null     float64
 7   Decision       64 non-null     int64  
 8   DecisionProba  64 non-null     float64
dtypes: float64(5), int64(2), object(2)
memory usage: 4.6+ KB
    index Score_0  Proba_0  ...     LogProba_1 Decision  DecisionProba
0       0    None      0.0  ...   0.000000e+00        1            1.0
1       1    None      1.0  ... -1.797693e+308        0            1.0
2       2    None      0.0  ...   0.000000e+00        1            1.0
3       3    None      0.0  ...   0.000000e+00        1            1.0
4       4    None      1.0  ... -1.797693e+308        0            1.0
..    ...     ...      ...  ...            ...      ...            ...
59     59    None      1.0  ... -1.797693e+308        0            1.0
60     60    None      1.0  ... -1.797693e+308        0            1.0
61     61    None      0.0  ...   0.000000e+00        1            1.0
62     62    None      1.0  ... -1.797693e+308        0            1.0
63     63    None      1.0  ... -1.797693e+308        0            1.0

[64 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
    index Score_0  SQL_Proba_0  ...  Py_Proba_0 Py_Proba_1  Py_Decision
48     48    None          1.0  ...         1.0        0.0        <=50K
49     49    None          0.0  ...         0.0        1.0         >50K
50     50    None          1.0  ...         1.0        0.0        <=50K
51     51    None          1.0  ...         1.0        0.0        <=50K
52     52    None          1.0  ...         1.0        0.0        <=50K
53     53    None          1.0  ...         1.0        0.0        <=50K
54     54    None          1.0  ...         1.0        0.0        <=50K
55     55    None          1.0  ...         1.0        0.0        <=50K
56     56    None          1.0  ...         1.0        0.0        <=50K
57     57    None          1.0  ...         1.0        0.0        <=50K
58     58    None          1.0  ...         1.0        0.0        <=50K
59     59    None          1.0  ...         1.0        0.0        <=50K
60     60    None          1.0  ...         1.0        0.0        <=50K
61     61    None          0.0  ...         0.0        1.0         >50K
62     62    None          1.0  ...         1.0        0.0        <=50K
63     63    None          1.0  ...         1.0        0.0        <=50K

[16 rows x 12 columns]
MLLITE_CLASS_SQL_ERROR ('census_one_hot_small', 'DecisionTreeClassifier', 'sqlite') ('Py_Proba_0', 'SQL_Proba_0') 0.0
    Py_Proba_0  SQL_Proba_0  SQL_Error_0
48         1.0          1.0          0.0
49         0.0          0.0          0.0
50         1.0          1.0          0.0
51         1.0          1.0          0.0
52         1.0          1.0          0.0
53         1.0          1.0          0.0
54         1.0          1.0          0.0
55         1.0          1.0          0.0
56         1.0          1.0          0.0
57         1.0          1.0          0.0
58         1.0          1.0          0.0
59         1.0          1.0          0.0
60         1.0          1.0          0.0
61         0.0          0.0          0.0
62         1.0          1.0          0.0
63         1.0          1.0          0.0
MLLITE_CLASS_SQL_ERROR ('census_one_hot_small', 'DecisionTreeClassifier', 'sqlite') ('Py_Proba_1', 'SQL_Proba_1') 0.0
    Py_Proba_1  SQL_Proba_1  SQL_Error_1
48         0.0          0.0          0.0
49         1.0          1.0          0.0
50         0.0          0.0          0.0
51         0.0          0.0          0.0
52         0.0          0.0          0.0
53         0.0          0.0          0.0
54         0.0          0.0          0.0
55         0.0          0.0          0.0
56         0.0          0.0          0.0
57         0.0          0.0          0.0
58         0.0          0.0          0.0
59         0.0          0.0          0.0
60         0.0          0.0          0.0
61         1.0          1.0          0.0
62         0.0          0.0          0.0
63         0.0          0.0          0.0
MLLITE_CLASS_SQL_EXECUTION_STATUS ('census_one_hot_small', 'DecisionTreeClassifier', 'sqlite', 'Success')
   Py_Decision  SQL_Decision
48       <=50K             0
49        >50K             1
50       <=50K             0
51       <=50K             0
52       <=50K             0
53       <=50K             0
54       <=50K             0
55       <=50K             0
56       <=50K             0
57       <=50K             0
58       <=50K             0
59       <=50K             0
60       <=50K             0
61        >50K             1
62       <=50K             0
63       <=50K             0
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
