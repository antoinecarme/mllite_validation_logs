    age  workclass_Local-gov  ...  native-country_infrequent_sklearn  target
0     2                  0.0  ...                                0.0    >50K
1     1                  0.0  ...                                0.0   <=50K
2     1                  0.0  ...                                0.0    >50K
3     1                  0.0  ...                                1.0    >50K
4     1                  0.0  ...                                0.0   <=50K
..  ...                  ...  ...                                ...     ...
59    1                  0.0  ...                                0.0   <=50K
60    0                  0.0  ...                                0.0   <=50K
61    4                  0.0  ...                                0.0    >50K
62    4                  0.0  ...                                0.0   <=50K
63    3                  0.0  ...                                0.0   <=50K

[64 rows x 54 columns]
MLLITE_MODEL_SET_OPTIONS XGBClassifier {"max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 }
MLLITE_MODEL_OPTIONS_DEFAULT XGBClassifier { "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING XGBClassifier { "max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 ,  "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32  }
MLLITE_MODEL_JSON_AFTER_SETTING XGBClassifier None
('OPERATION_START', 'TRAINING')
[[2.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 1.889500e+05 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 1.400000e+01 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  3.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00]
 [1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00 1.033222e+06 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 1.000000e+00
  0.000000e+00 1.000000e+01 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  2.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00]
 [1.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 1.297070e+05 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.300000e+01 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 1.000000e+00 4.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00]
 [1.000000e+00 0.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 7.853000e+04 0.000000e+00
  0.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 9.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  4.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 1.000000e+00]
 [1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00 1.595370e+05 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 1.200000e+01 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  2.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00]] ['>50K' '<=50K' '>50K' '>50K' '<=50K']
MLLITE_FIT_USING_MODEL mllite_xgb_class.XGBClassifier_ff4_OO8
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_CLASSIFIER_FIT' 1 3
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_CLASSIFIER_FIT' 2 3
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 1 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 2 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 3 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 4 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 5 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 6 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 7 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_CLASSIFIER_FIT' 3 3
('OPERATION_END_ELAPSED', 0.026, 'TRAINING')
{ "max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 ,  "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32  }
{ "max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 ,  "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32  }
{
	"metadata" : { "model" : "Friedman_XGB", "version" : "2024-W13", "signature" : "ff4_OO8"},
	"options" : { "base_score" : [ ], "early_stopping_rounds" : 0, "eval_metric" : "", "gamma" : 0.000000, "grow_policy" : 0, "learning_rate" : 0.300000, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 32, "min_child_weight" : 5.000000, "n_estimators" : 5, "objective" : "reg:squarederror", "reg_alpha" : 0.000000, "reg_lambda" : 1.000000, "tree_method" : "auto" },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 53 },
	"classes" : [ "<=50K", ">50K" ],
	"booster" : {
		"BaseScore" : [ 0.781250, 0.218750 ],
		"Trees" : 5,
		"Tree_0" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : 13.000000, "sindex" : 16 },
			"Node_1" : { "leaf_value" : [ ], "parent" : 0, "left" : 3, "right" : 4, "svalue" : 1.000000, "sindex" : 31 },
			"Node_2" : { "leaf_value" : [ -0.096594, 0.096594 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_3" : { "leaf_value" : [ 0.218007, -0.218007 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_4" : { "leaf_value" : [ ], "parent" : 1, "left" : 5, "right" : 6, "svalue" : 1.000000, "sindex" : 2 },
			"Node_5" : { "leaf_value" : [ -0.000362, 0.000362 ], "parent" : 4, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_6" : { "leaf_value" : [ 0.098211, -0.098211 ], "parent" : 4, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_1" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : 1.000000, "sindex" : 31 },
			"Node_1" : { "leaf_value" : [ ], "parent" : 0, "left" : 3, "right" : 4, "svalue" : 1.000000, "sindex" : 20 },
			"Node_2" : { "leaf_value" : [ ], "parent" : 0, "left" : 5, "right" : 6, "svalue" : 11.000000, "sindex" : 16 },
			"Node_3" : { "leaf_value" : [ 0.096823, -0.096823 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_4" : { "leaf_value" : [ 0.193166, -0.193166 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_5" : { "leaf_value" : [ 0.063184, -0.063184 ], "parent" : 2, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_6" : { "leaf_value" : [ -0.128857, 0.128857 ], "parent" : 2, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_2" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : 13.000000, "sindex" : 16 },
			"Node_1" : { "leaf_value" : [ ], "parent" : 0, "left" : 3, "right" : 4, "svalue" : 1.000000, "sindex" : 31 },
			"Node_2" : { "leaf_value" : [ -0.068619, 0.068619 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_3" : { "leaf_value" : [ 0.172020, -0.172020 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_4" : { "leaf_value" : [ 0.037215, -0.037215 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_3" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : 1.000000, "sindex" : 18 },
			"Node_1" : { "leaf_value" : [ 0.142626, -0.142627 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_2" : { "leaf_value" : [ ], "parent" : 0, "left" : 3, "right" : 4, "svalue" : 11.000000, "sindex" : 16 },
			"Node_3" : { "leaf_value" : [ 0.053755, -0.053755 ], "parent" : 2, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_4" : { "leaf_value" : [ -0.081864, 0.081864 ], "parent" : 2, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_4" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : 1.000000, "sindex" : 31 },
			"Node_1" : { "leaf_value" : [ 0.113687, -0.113687 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_2" : { "leaf_value" : [ ], "parent" : 0, "left" : 3, "right" : 4, "svalue" : 150324.000000, "sindex" : 8 },
			"Node_3" : { "leaf_value" : [ -0.089494, 0.089494 ], "parent" : 2, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_4" : { "leaf_value" : [ 0.042329, -0.042329 ], "parent" : 2, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/XGBClassifier/mllite.XGBClassifier_census_one_hot_small_option_1.json'

MLLITE_MODEL_SET_OPTIONS XGBClassifier {"max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 }
MLLITE_MODEL_OPTIONS_DEFAULT XGBClassifier { "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING XGBClassifier { "max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 ,  "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32  }
MLLITE_MODEL_JSON_AFTER_SETTING XGBClassifier None
MLLITE_RELOADING_MODEL mllite_xgb_class.XGBClassifier_ff4_OO8
{
	"metadata" : { "model" : "Friedman_XGB", "version" : "2024-W13", "signature" : "ff4_OO8"},
	"options" : { "base_score" : [ ], "early_stopping_rounds" : 0, "eval_metric" : "", "gamma" : 0.000000, "grow_policy" : 0, "learning_rate" : 0.300000, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 32, "min_child_weight" : 5.000000, "n_estimators" : 5, "objective" : "reg:squarederror", "reg_alpha" : 0.000000, "reg_lambda" : 1.000000, "tree_method" : "auto" },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 53 },
	"classes" : [ "<=50K", ">50K" ],
	"booster" : {
		"BaseScore" : [ 0.781250, 0.218750 ],
		"Trees" : 5,
		"Tree_0" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : 13.000000, "sindex" : 16 },
			"Node_1" : { "leaf_value" : [ ], "parent" : 0, "left" : 3, "right" : 4, "svalue" : 1.000000, "sindex" : 31 },
			"Node_2" : { "leaf_value" : [ -0.096594, 0.096594 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_3" : { "leaf_value" : [ 0.218007, -0.218007 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_4" : { "leaf_value" : [ ], "parent" : 1, "left" : 5, "right" : 6, "svalue" : 1.000000, "sindex" : 2 },
			"Node_5" : { "leaf_value" : [ -0.000362, 0.000362 ], "parent" : 4, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_6" : { "leaf_value" : [ 0.098211, -0.098211 ], "parent" : 4, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_1" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : 1.000000, "sindex" : 31 },
			"Node_1" : { "leaf_value" : [ ], "parent" : 0, "left" : 3, "right" : 4, "svalue" : 1.000000, "sindex" : 20 },
			"Node_2" : { "leaf_value" : [ ], "parent" : 0, "left" : 5, "right" : 6, "svalue" : 11.000000, "sindex" : 16 },
			"Node_3" : { "leaf_value" : [ 0.096823, -0.096823 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_4" : { "leaf_value" : [ 0.193166, -0.193166 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_5" : { "leaf_value" : [ 0.063184, -0.063184 ], "parent" : 2, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_6" : { "leaf_value" : [ -0.128857, 0.128857 ], "parent" : 2, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_2" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : 13.000000, "sindex" : 16 },
			"Node_1" : { "leaf_value" : [ ], "parent" : 0, "left" : 3, "right" : 4, "svalue" : 1.000000, "sindex" : 31 },
			"Node_2" : { "leaf_value" : [ -0.068619, 0.068619 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_3" : { "leaf_value" : [ 0.172020, -0.172020 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_4" : { "leaf_value" : [ 0.037215, -0.037215 ], "parent" : 1, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_3" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : 1.000000, "sindex" : 18 },
			"Node_1" : { "leaf_value" : [ 0.142626, -0.142627 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_2" : { "leaf_value" : [ ], "parent" : 0, "left" : 3, "right" : 4, "svalue" : 11.000000, "sindex" : 16 },
			"Node_3" : { "leaf_value" : [ 0.053755, -0.053755 ], "parent" : 2, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_4" : { "leaf_value" : [ -0.081864, 0.081864 ], "parent" : 2, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_4" : {
			"Node_0" : { "leaf_value" : [ ], "parent" : null, "left" : 1, "right" : 2, "svalue" : 1.000000, "sindex" : 31 },
			"Node_1" : { "leaf_value" : [ 0.113687, -0.113687 ], "parent" : 0, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_2" : { "leaf_value" : [ ], "parent" : 0, "left" : 3, "right" : 4, "svalue" : 150324.000000, "sindex" : 8 },
			"Node_3" : { "leaf_value" : [ -0.089494, 0.089494 ], "parent" : 2, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 },
			"Node_4" : { "leaf_value" : [ 0.042329, -0.042329 ], "parent" : 2, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		}
	}
}
BEAUTIFIED_JSON_START
{
	"booster" : 	{
		"BaseScore" : [ 0.78125, 0.21875 ],
		"Tree_0" : 	{
			"Node_0" : 	{
				"leaf_value" : [  ],
				"left" : 1,
				"parent" : null,
				"right" : 2,
				"sindex" : 16,
				"svalue" : 13.0
			},
			"Node_1" : 	{
				"leaf_value" : [  ],
				"left" : 3,
				"parent" : 0,
				"right" : 4,
				"sindex" : 31,
				"svalue" : 1.0
			},
			"Node_2" : 	{
				"leaf_value" : [ -0.096594, 0.096594 ],
				"left" : null,
				"parent" : 0,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_3" : 	{
				"leaf_value" : [ 0.218007, -0.218007 ],
				"left" : null,
				"parent" : 1,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_4" : 	{
				"leaf_value" : [  ],
				"left" : 5,
				"parent" : 1,
				"right" : 6,
				"sindex" : 2,
				"svalue" : 1.0
			},
			"Node_5" : 	{
				"leaf_value" : [ -0.000362, 0.000362 ],
				"left" : null,
				"parent" : 4,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_6" : 	{
				"leaf_value" : [ 0.098211, -0.098211 ],
				"left" : null,
				"parent" : 4,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			}
		},
		"Tree_1" : 	{
			"Node_0" : 	{
				"leaf_value" : [  ],
				"left" : 1,
				"parent" : null,
				"right" : 2,
				"sindex" : 31,
				"svalue" : 1.0
			},
			"Node_1" : 	{
				"leaf_value" : [  ],
				"left" : 3,
				"parent" : 0,
				"right" : 4,
				"sindex" : 20,
				"svalue" : 1.0
			},
			"Node_2" : 	{
				"leaf_value" : [  ],
				"left" : 5,
				"parent" : 0,
				"right" : 6,
				"sindex" : 16,
				"svalue" : 11.0
			},
			"Node_3" : 	{
				"leaf_value" : [ 0.096823, -0.096823 ],
				"left" : null,
				"parent" : 1,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_4" : 	{
				"leaf_value" : [ 0.193166, -0.193166 ],
				"left" : null,
				"parent" : 1,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_5" : 	{
				"leaf_value" : [ 0.063184, -0.063184 ],
				"left" : null,
				"parent" : 2,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_6" : 	{
				"leaf_value" : [ -0.128857, 0.128857 ],
				"left" : null,
				"parent" : 2,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			}
		},
		"Tree_2" : 	{
			"Node_0" : 	{
				"leaf_value" : [  ],
				"left" : 1,
				"parent" : null,
				"right" : 2,
				"sindex" : 16,
				"svalue" : 13.0
			},
			"Node_1" : 	{
				"leaf_value" : [  ],
				"left" : 3,
				"parent" : 0,
				"right" : 4,
				"sindex" : 31,
				"svalue" : 1.0
			},
			"Node_2" : 	{
				"leaf_value" : [ -0.068619, 0.068619 ],
				"left" : null,
				"parent" : 0,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_3" : 	{
				"leaf_value" : [ 0.17202, -0.17202 ],
				"left" : null,
				"parent" : 1,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_4" : 	{
				"leaf_value" : [ 0.037215, -0.037215 ],
				"left" : null,
				"parent" : 1,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			}
		},
		"Tree_3" : 	{
			"Node_0" : 	{
				"leaf_value" : [  ],
				"left" : 1,
				"parent" : null,
				"right" : 2,
				"sindex" : 18,
				"svalue" : 1.0
			},
			"Node_1" : 	{
				"leaf_value" : [ 0.142626, -0.142627 ],
				"left" : null,
				"parent" : 0,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_2" : 	{
				"leaf_value" : [  ],
				"left" : 3,
				"parent" : 0,
				"right" : 4,
				"sindex" : 16,
				"svalue" : 11.0
			},
			"Node_3" : 	{
				"leaf_value" : [ 0.053755, -0.053755 ],
				"left" : null,
				"parent" : 2,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_4" : 	{
				"leaf_value" : [ -0.081864, 0.081864 ],
				"left" : null,
				"parent" : 2,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			}
		},
		"Tree_4" : 	{
			"Node_0" : 	{
				"leaf_value" : [  ],
				"left" : 1,
				"parent" : null,
				"right" : 2,
				"sindex" : 31,
				"svalue" : 1.0
			},
			"Node_1" : 	{
				"leaf_value" : [ 0.113687, -0.113687 ],
				"left" : null,
				"parent" : 0,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_2" : 	{
				"leaf_value" : [  ],
				"left" : 3,
				"parent" : 0,
				"right" : 4,
				"sindex" : 8,
				"svalue" : 150324.0
			},
			"Node_3" : 	{
				"leaf_value" : [ -0.089494, 0.089494 ],
				"left" : null,
				"parent" : 2,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			},
			"Node_4" : 	{
				"leaf_value" : [ 0.042329, -0.042329 ],
				"left" : null,
				"parent" : 2,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			}
		},
		"Trees" : 5
	},
	"classes" : [ "<=50K", ">50K" ],
	"dataset" : 	{
		"dataset_features" : 53,
		"dataset_rows" : 64
	},
	"metadata" :  { "model" : "Friedman_XGB", "signature" : "ff4_OO8", "version" : "2024-W13" },
	"options" :  { "base_score" : [ ], "early_stopping_rounds" : 0, "eval_metric" : "", "gamma" : 0.0, "grow_policy" : 0, "learning_rate" : 0.3, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 32, "min_child_weight" : 5.0, "n_estimators" : 5, "objective" : "reg:squarederror", "reg_alpha" : 0.0, "reg_lambda" : 1.0, "tree_method" : "auto" }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0.4738 0.5262]
 [0.7221 0.2779]
 [0.4089 0.5911]
 [0.6662 0.3338]
 [0.5743 0.4257]
 [0.7085 0.2915]
 [0.8858 0.1142]
 [0.9039 0.0961]
 [0.8858 0.1142]
 [0.62   0.38  ]
 [0.4089 0.5911]
 [0.756  0.244 ]
 [0.6662 0.3338]
 [0.9039 0.0961]
 [0.8858 0.1142]
 [0.9039 0.0961]
 [0.8858 0.1142]
 [0.7188 0.2812]
 [0.6662 0.3338]
 [0.9039 0.0961]
 [0.7599 0.2401]
 [0.8858 0.1142]
 [0.4738 0.5262]
 [0.4738 0.5262]
 [0.9039 0.0961]
 [0.7599 0.2401]
 [0.756  0.244 ]
 [0.8858 0.1142]
 [0.9039 0.0961]
 [0.9039 0.0961]
 [0.7599 0.2401]
 [0.9039 0.0961]
 [0.8858 0.1142]
 [0.7599 0.2401]
 [0.9039 0.0961]
 [0.9039 0.0961]
 [0.6217 0.3783]
 [0.9039 0.0961]
 [0.756  0.244 ]
 [0.4738 0.5262]
 [0.756  0.244 ]
 [0.5089 0.4911]
 [0.558  0.442 ]
 [0.7085 0.2915]
 [0.6217 0.3783]
 [0.8666 0.1334]
 [0.9039 0.0961]
 [0.7221 0.2779]
 [0.9039 0.0961]
 [0.4089 0.5911]
 [0.7221 0.2779]
 [0.6662 0.3338]
 [0.9039 0.0961]
 [0.7221 0.2779]
 [0.9039 0.0961]
 [0.7599 0.2401]
 [0.8666 0.1334]
 [0.62   0.38  ]
 [0.8858 0.1142]
 [0.8666 0.1334]
 [0.9039 0.0961]
 [0.4089 0.5911]
 [0.7221 0.2779]
 [0.7085 0.2915]]
(64, 2)
(64,) float32
MODEL_PERFS {'class_name': 'mllite.XGBClassifier', 'model_name': 'XGBClassifier', 'options': '{"max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 }', 'dataset': 'census_one_hot_small', 'size': 64, 'accuracy': 0.84375, 'auc': 0.91}
WRITING_PERF_CODE 'logs/auto_tests/classification/XGBClassifier/mllite.XGBClassifier_census_one_hot_small_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.XGBClassifier', 'model_name': 'XGBClassifier', 'options': '{"max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 }', 'dataset': 'census_one_hot_small', 'training_time_in_sec': 0.026, 'prediction_time_in_sec': 0.0}
WRITING_SQL_CODE 'logs/auto_tests/classification/XGBClassifier/mllite.XGBClassifier_census_one_hot_small_option_1_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('census_one_hot_small', 'XGBClassifier', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('census_one_hot_small', 'XGBClassifier', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('census_one_hot_small', 'XGBClassifier', 'duckdb')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('census_one_hot_small', 'XGBClassifier', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 64 entries, 0 to 63
Data columns (total 53 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     64 non-null     float32
 1   X_1     64 non-null     float32
 2   X_2     64 non-null     float32
 3   X_3     64 non-null     float32
 4   X_4     64 non-null     float32
 5   X_5     64 non-null     float32
 6   X_6     64 non-null     float32
 7   X_7     64 non-null     float32
 8   X_8     64 non-null     float32
 9   X_9     64 non-null     float32
 10  X_10    64 non-null     float32
 11  X_11    64 non-null     float32
 12  X_12    64 non-null     float32
 13  X_13    64 non-null     float32
 14  X_14    64 non-null     float32
 15  X_15    64 non-null     float32
 16  X_16    64 non-null     float32
 17  X_17    64 non-null     float32
 18  X_18    64 non-null     float32
 19  X_19    64 non-null     float32
 20  X_20    64 non-null     float32
 21  X_21    64 non-null     float32
 22  X_22    64 non-null     float32
 23  X_23    64 non-null     float32
 24  X_24    64 non-null     float32
 25  X_25    64 non-null     float32
 26  X_26    64 non-null     float32
 27  X_27    64 non-null     float32
 28  X_28    64 non-null     float32
 29  X_29    64 non-null     float32
 30  X_30    64 non-null     float32
 31  X_31    64 non-null     float32
 32  X_32    64 non-null     float32
 33  X_33    64 non-null     float32
 34  X_34    64 non-null     float32
 35  X_35    64 non-null     float32
 36  X_36    64 non-null     float32
 37  X_37    64 non-null     float32
 38  X_38    64 non-null     float32
 39  X_39    64 non-null     float32
 40  X_40    64 non-null     float32
 41  X_41    64 non-null     float32
 42  X_42    64 non-null     float32
 43  X_43    64 non-null     float32
 44  X_44    64 non-null     float32
 45  X_45    64 non-null     float32
 46  X_46    64 non-null     float32
 47  X_47    64 non-null     float32
 48  X_48    64 non-null     float32
 49  X_49    64 non-null     float32
 50  X_50    64 non-null     float32
 51  X_51    64 non-null     float32
 52  X_52    64 non-null     float32
dtypes: float32(53)
memory usage: 13.8 KB
       X_0  X_1  X_2  X_3  X_4  X_5  ...  X_47  X_48  X_49  X_50  X_51  X_52
index                                ...                                    
0      2.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
1      1.0  0.0  0.0  0.0  0.0  1.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
2      1.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
3      1.0  0.0  0.0  1.0  0.0  0.0  ...   0.0   0.0   0.0   0.0   0.0   1.0
4      1.0  0.0  0.0  0.0  0.0  1.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
...    ...  ...  ...  ...  ...  ...  ...   ...   ...   ...   ...   ...   ...
59     1.0  0.0  0.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
60     0.0  0.0  0.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
61     4.0  0.0  0.0  0.0  0.0  1.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
62     4.0  0.0  0.0  0.0  1.0  0.0  ...   1.0   0.0   0.0   0.0   0.0   0.0
63     3.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0

[64 rows x 53 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 64 entries, 0 to 63
Data columns (total 9 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          64 non-null     int64  
 1   Score_0        64 non-null     float64
 2   Proba_0        64 non-null     float64
 3   LogProba_0     64 non-null     float64
 4   Score_1        64 non-null     float64
 5   Proba_1        64 non-null     float64
 6   LogProba_1     64 non-null     float64
 7   Decision       64 non-null     int64  
 8   DecisionProba  64 non-null     float64
dtypes: float64(7), int64(2)
memory usage: 4.6 KB
    index   Score_0   Proba_0  ...  LogProba_1  Decision  DecisionProba
0       0  0.447645  0.473846  ...   -0.642162         1       0.526154
1       1  0.977371  0.722068  ...   -1.280378         0       0.722068
2       2  0.315822  0.408938  ...   -0.525835         1       0.591062
3       3  0.845548  0.666211  ...   -1.097245         0       0.666211
4       4  0.649711  0.574301  ...   -0.854023         0       0.574301
..    ...       ...       ...  ...         ...       ...            ...
59     59  1.435542  0.866584  ...   -2.014281         0       0.866584
60     60  1.620756  0.903916  ...   -2.342532         0       0.903916
61     61  0.315822  0.408938  ...   -0.525835         1       0.591062
62     62  0.977371  0.722068  ...   -1.280378         0       0.722068
63     63  0.944121  0.708527  ...   -1.232809         0       0.708527

[64 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
    index   Score_0  SQL_Proba_0  ...  Py_Proba_0  Py_Proba_1  Py_Decision
48     48  1.620756     0.903916  ...    0.903916    0.096084        <=50K
49     49  0.315822     0.408938  ...    0.408938    0.591062         >50K
50     50  0.977371     0.722068  ...    0.722068    0.277932        <=50K
51     51  0.845548     0.666211  ...    0.666211    0.333789        <=50K
52     52  1.620756     0.903916  ...    0.903916    0.096084        <=50K
53     53  0.977371     0.722068  ...    0.722068    0.277932        <=50K
54     54  1.620756     0.903916  ...    0.903916    0.096084        <=50K
55     55  1.075944     0.759856  ...    0.759856    0.240144        <=50K
56     56  1.435542     0.866584  ...    0.866584    0.133416        <=50K
57     57  0.744683     0.619957  ...    0.619957    0.380043        <=50K
58     58  1.524413     0.885829  ...    0.885829    0.114171        <=50K
59     59  1.435542     0.866584  ...    0.866584    0.133416        <=50K
60     60  1.620756     0.903916  ...    0.903916    0.096084        <=50K
61     61  0.315822     0.408938  ...    0.408938    0.591062         >50K
62     62  0.977371     0.722068  ...    0.722068    0.277932        <=50K
63     63  0.944121     0.708527  ...    0.708527    0.291473        <=50K

[16 rows x 12 columns]
MLLITE_CLASS_SQL_ERROR ('census_one_hot_small', 'XGBClassifier', 'duckdb') ('Py_Proba_0', 'SQL_Proba_0') 1.4959093428378034e-07
    Py_Proba_0  SQL_Proba_0   SQL_Error_0
48    0.903916     0.903916  1.153670e-07
49    0.408938     0.408938 -2.495036e-07
50    0.722068     0.722068  1.799013e-07
51    0.666211     0.666211  2.563773e-07
52    0.903916     0.903916  1.153670e-07
53    0.722068     0.722068  1.799013e-07
54    0.903916     0.903916  1.153670e-07
55    0.759856     0.759856  2.913551e-08
56    0.866584     0.866584  2.282824e-07
57    0.619957     0.619957  8.225257e-08
58    0.885829     0.885829  1.703531e-07
59    0.866584     0.866584  2.282824e-07
60    0.903916     0.903916  1.153670e-07
61    0.408938     0.408938 -2.495036e-07
62    0.722068     0.722068  1.799013e-07
63    0.708527     0.708527 -4.252249e-08
MLLITE_CLASS_SQL_ERROR ('census_one_hot_small', 'XGBClassifier', 'duckdb') ('Py_Proba_1', 'SQL_Proba_1') 1.530168228093369e-07
    Py_Proba_1  SQL_Proba_1   SQL_Error_1
48    0.096084     0.096084 -1.153670e-07
49    0.591062     0.591062  2.197013e-07
50    0.277932     0.277932 -2.395059e-07
51    0.333789     0.333789 -2.861796e-07
52    0.096084     0.096084 -1.153670e-07
53    0.277932     0.277932 -2.395059e-07
54    0.096084     0.096084 -1.153670e-07
55    0.240144     0.240144  3.046913e-08
56    0.133416     0.133416 -1.835790e-07
57    0.380043     0.380043 -2.264792e-08
58    0.114171     0.114171 -1.852543e-07
59    0.133416     0.133416 -1.835790e-07
60    0.096084     0.096084 -1.153670e-07
61    0.591062     0.591062  2.197013e-07
62    0.277932     0.277932 -2.395059e-07
63    0.291473     0.291473 -1.708215e-08
MLLITE_CLASS_SQL_EXECUTION_STATUS ('census_one_hot_small', 'XGBClassifier', 'duckdb', 'Success')
   Py_Decision  SQL_Decision
48       <=50K             0
49        >50K             1
50       <=50K             0
51       <=50K             0
52       <=50K             0
53       <=50K             0
54       <=50K             0
55       <=50K             0
56       <=50K             0
57       <=50K             0
58       <=50K             0
59       <=50K             0
60       <=50K             0
61        >50K             1
62       <=50K             0
63       <=50K             0
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/XGBClassifier/mllite.XGBClassifier_census_one_hot_small_option_1_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('census_one_hot_small', 'XGBClassifier', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('census_one_hot_small', 'XGBClassifier', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('census_one_hot_small', 'XGBClassifier', 'sqlite')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('census_one_hot_small', 'XGBClassifier', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 64 entries, 0 to 63
Data columns (total 53 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     64 non-null     float32
 1   X_1     64 non-null     float32
 2   X_2     64 non-null     float32
 3   X_3     64 non-null     float32
 4   X_4     64 non-null     float32
 5   X_5     64 non-null     float32
 6   X_6     64 non-null     float32
 7   X_7     64 non-null     float32
 8   X_8     64 non-null     float32
 9   X_9     64 non-null     float32
 10  X_10    64 non-null     float32
 11  X_11    64 non-null     float32
 12  X_12    64 non-null     float32
 13  X_13    64 non-null     float32
 14  X_14    64 non-null     float32
 15  X_15    64 non-null     float32
 16  X_16    64 non-null     float32
 17  X_17    64 non-null     float32
 18  X_18    64 non-null     float32
 19  X_19    64 non-null     float32
 20  X_20    64 non-null     float32
 21  X_21    64 non-null     float32
 22  X_22    64 non-null     float32
 23  X_23    64 non-null     float32
 24  X_24    64 non-null     float32
 25  X_25    64 non-null     float32
 26  X_26    64 non-null     float32
 27  X_27    64 non-null     float32
 28  X_28    64 non-null     float32
 29  X_29    64 non-null     float32
 30  X_30    64 non-null     float32
 31  X_31    64 non-null     float32
 32  X_32    64 non-null     float32
 33  X_33    64 non-null     float32
 34  X_34    64 non-null     float32
 35  X_35    64 non-null     float32
 36  X_36    64 non-null     float32
 37  X_37    64 non-null     float32
 38  X_38    64 non-null     float32
 39  X_39    64 non-null     float32
 40  X_40    64 non-null     float32
 41  X_41    64 non-null     float32
 42  X_42    64 non-null     float32
 43  X_43    64 non-null     float32
 44  X_44    64 non-null     float32
 45  X_45    64 non-null     float32
 46  X_46    64 non-null     float32
 47  X_47    64 non-null     float32
 48  X_48    64 non-null     float32
 49  X_49    64 non-null     float32
 50  X_50    64 non-null     float32
 51  X_51    64 non-null     float32
 52  X_52    64 non-null     float32
dtypes: float32(53)
memory usage: 13.8 KB
       X_0  X_1  X_2  X_3  X_4  X_5  ...  X_47  X_48  X_49  X_50  X_51  X_52
index                                ...                                    
0      2.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
1      1.0  0.0  0.0  0.0  0.0  1.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
2      1.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
3      1.0  0.0  0.0  1.0  0.0  0.0  ...   0.0   0.0   0.0   0.0   0.0   1.0
4      1.0  0.0  0.0  0.0  0.0  1.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
...    ...  ...  ...  ...  ...  ...  ...   ...   ...   ...   ...   ...   ...
59     1.0  0.0  0.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
60     0.0  0.0  0.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
61     4.0  0.0  0.0  0.0  0.0  1.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
62     4.0  0.0  0.0  0.0  1.0  0.0  ...   1.0   0.0   0.0   0.0   0.0   0.0
63     3.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0

[64 rows x 53 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 64 entries, 0 to 63
Data columns (total 9 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          64 non-null     int64  
 1   Score_0        64 non-null     float64
 2   Proba_0        64 non-null     float64
 3   LogProba_0     64 non-null     float64
 4   Score_1        64 non-null     float64
 5   Proba_1        64 non-null     float64
 6   LogProba_1     64 non-null     float64
 7   Decision       64 non-null     int64  
 8   DecisionProba  64 non-null     float64
dtypes: float64(7), int64(2)
memory usage: 4.6 KB
    index   Score_0   Proba_0  ...  LogProba_1  Decision  DecisionProba
0       0  0.447645  0.473846  ...   -0.642162         1       0.526154
1       1  0.977371  0.722068  ...   -1.280378         0       0.722068
2       2  0.315822  0.408938  ...   -0.525835         1       0.591062
3       3  0.845548  0.666211  ...   -1.097245         0       0.666211
4       4  0.649711  0.574301  ...   -0.854023         0       0.574301
..    ...       ...       ...  ...         ...       ...            ...
59     59  1.435542  0.866584  ...   -2.014281         0       0.866584
60     60  1.620756  0.903916  ...   -2.342532         0       0.903916
61     61  0.315822  0.408938  ...   -0.525835         1       0.591062
62     62  0.977371  0.722068  ...   -1.280378         0       0.722068
63     63  0.944121  0.708527  ...   -1.232809         0       0.708527

[64 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
    index   Score_0  SQL_Proba_0  ...  Py_Proba_0  Py_Proba_1  Py_Decision
48     48  1.620756     0.903916  ...    0.903916    0.096084        <=50K
49     49  0.315822     0.408938  ...    0.408938    0.591062         >50K
50     50  0.977371     0.722068  ...    0.722068    0.277932        <=50K
51     51  0.845548     0.666211  ...    0.666211    0.333789        <=50K
52     52  1.620756     0.903916  ...    0.903916    0.096084        <=50K
53     53  0.977371     0.722068  ...    0.722068    0.277932        <=50K
54     54  1.620756     0.903916  ...    0.903916    0.096084        <=50K
55     55  1.075944     0.759856  ...    0.759856    0.240144        <=50K
56     56  1.435542     0.866584  ...    0.866584    0.133416        <=50K
57     57  0.744683     0.619957  ...    0.619957    0.380043        <=50K
58     58  1.524413     0.885829  ...    0.885829    0.114171        <=50K
59     59  1.435542     0.866584  ...    0.866584    0.133416        <=50K
60     60  1.620756     0.903916  ...    0.903916    0.096084        <=50K
61     61  0.315822     0.408938  ...    0.408938    0.591062         >50K
62     62  0.977371     0.722068  ...    0.722068    0.277932        <=50K
63     63  0.944121     0.708527  ...    0.708527    0.291473        <=50K

[16 rows x 12 columns]
MLLITE_CLASS_SQL_ERROR ('census_one_hot_small', 'XGBClassifier', 'sqlite') ('Py_Proba_0', 'SQL_Proba_0') 1.4959093429071924e-07
    Py_Proba_0  SQL_Proba_0   SQL_Error_0
48    0.903916     0.903916  1.153670e-07
49    0.408938     0.408938 -2.495036e-07
50    0.722068     0.722068  1.799013e-07
51    0.666211     0.666211  2.563773e-07
52    0.903916     0.903916  1.153670e-07
53    0.722068     0.722068  1.799013e-07
54    0.903916     0.903916  1.153670e-07
55    0.759856     0.759856  2.913551e-08
56    0.866584     0.866584  2.282824e-07
57    0.619957     0.619957  8.225257e-08
58    0.885829     0.885829  1.703531e-07
59    0.866584     0.866584  2.282824e-07
60    0.903916     0.903916  1.153670e-07
61    0.408938     0.408938 -2.495036e-07
62    0.722068     0.722068  1.799013e-07
63    0.708527     0.708527 -4.252249e-08
MLLITE_CLASS_SQL_ERROR ('census_one_hot_small', 'XGBClassifier', 'sqlite') ('Py_Proba_1', 'SQL_Proba_1') 1.530168228232147e-07
    Py_Proba_1  SQL_Proba_1   SQL_Error_1
48    0.096084     0.096084 -1.153670e-07
49    0.591062     0.591062  2.197013e-07
50    0.277932     0.277932 -2.395059e-07
51    0.333789     0.333789 -2.861796e-07
52    0.096084     0.096084 -1.153670e-07
53    0.277932     0.277932 -2.395059e-07
54    0.096084     0.096084 -1.153670e-07
55    0.240144     0.240144  3.046913e-08
56    0.133416     0.133416 -1.835790e-07
57    0.380043     0.380043 -2.264792e-08
58    0.114171     0.114171 -1.852543e-07
59    0.133416     0.133416 -1.835790e-07
60    0.096084     0.096084 -1.153670e-07
61    0.591062     0.591062  2.197013e-07
62    0.277932     0.277932 -2.395059e-07
63    0.291473     0.291473 -1.708215e-08
MLLITE_CLASS_SQL_EXECUTION_STATUS ('census_one_hot_small', 'XGBClassifier', 'sqlite', 'Success')
   Py_Decision  SQL_Decision
48       <=50K             0
49        >50K             1
50       <=50K             0
51       <=50K             0
52       <=50K             0
53       <=50K             0
54       <=50K             0
55       <=50K             0
56       <=50K             0
57       <=50K             0
58       <=50K             0
59       <=50K             0
60       <=50K             0
61        >50K             1
62       <=50K             0
63       <=50K             0
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/XGBClassifier/mllite.XGBClassifier_census_one_hot_small_option_1_pgsql.sql'



SQL_OUT_PUT_FIRST_LINES_START ('census_one_hot_small', 'XGBClassifier', 'pgsql')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('census_one_hot_small', 'XGBClassifier', 'pgsql')
SQL_OUT_PUT_LAST_LINES_START ('census_one_hot_small', 'XGBClassifier', 'pgsql')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('census_one_hot_small', 'XGBClassifier', 'pgsql') 




COPY_TRAINING_DATA_TO_SQLITE_START
