      X_0  X_1  X_2  X_3  X_4  X_5  X_6  X_7  X_8  X_9  target
0       2    6    6    5    2    7    8    7    1    0       0
1       8    2    7    2    8    2    0    0    5    2       3
2       0    8    6    8    8    4    6    6    7    9       1
3       3    5    2    6    8    5    5    3    4    3       3
4       9    1    4    4    3    8    2    1    3    2       0
...   ...  ...  ...  ...  ...  ...  ...  ...  ...  ...     ...
1019    0    7    0    5    7    9    9    8    0    1       2
1020    1    6    9    7    4    8    8    6    4    4       3
1021    1    8    6    2    1    0    0    1    9    2       3
1022    2    8    9    1    4    7    0    5    9    7       3
1023    3    7    9    1    3    8    3    3    2    6       2

[1024 rows x 11 columns]
MLLITE_MODEL_SET_OPTIONS MLPClassifier {"hidden_layer_sizes" : [4, 8, 6]}
MLLITE_MODEL_OPTIONS_DEFAULT MLPClassifier { "max_iter" : 32}
MLLITE_MODEL_OPTIONS_AFTER_SETTING MLPClassifier { "hidden_layer_sizes" : [4, 8, 6],  "max_iter" : 32 }
MLLITE_MODEL_JSON_AFTER_SETTING MLPClassifier None
('OPERATION_START', 'TRAINING')
[[2. 6. 6. 5. 2. 7. 8. 7. 1. 0.]
 [8. 2. 7. 2. 8. 2. 0. 0. 5. 2.]
 [0. 8. 6. 8. 8. 4. 6. 6. 7. 9.]
 [3. 5. 2. 6. 8. 5. 5. 3. 4. 3.]
 [9. 1. 4. 4. 3. 8. 2. 1. 3. 2.]] [0 3 1 3 0]
MLLITE_FIT_USING_MODEL mllite_mlp_class.MLPClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT' 1 3
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT' 2 3
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 3 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 6 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 9 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 12 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 15 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 18 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 21 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 24 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 27 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 30 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 32 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT' 3 3
('OPERATION_END_ELAPSED', 0.096, 'TRAINING')
{ "hidden_layer_sizes" : [4, 8, 6],  "max_iter" : 32 }
{ "hidden_layer_sizes" : [4, 8, 6],  "max_iter" : 32 }
{
	"metadata" : { "model" : "Rosenblatt_MLP", "version" : "2024-W12", "signature" : "ff4_il8"},
	"options" : {  "hidden_layer_sizes" : [ 4, 8, 6 ], "activation" : "relu", "solver" : "adam", "alpha" : 0.000100, "batch_size" : null, "learning_rate" : "constant", "learning_rate_init" : 0.001000, "power_t" : 0.500000, "max_iter" : 32, "shuffle" : 1, "random_state" : 1789, "tol" : 0.000100, "verbose" : 0, "warm_start" : 0, "momentum" : 0.900000, "nesterovs_momentum" : 1, "early_stopping" : 0, "validation_fraction" : 0.100000, "beta_1" : 0.900000, "beta_2" : 0.999000, "epsilon" : 0.000000, "n_iter_no_change" : 10, "max_fun" : 15000 },
	"dataset" : { "dataset_rows" : 1024, "dataset_features" : 10 },
	"classes" : [ 0, 1, 2, 3 ],
	"layers" : {
		"sizes" : [ 10, 4, 8, 6, 4 ],
		"Layer_0" : {
			"name" : "Input_Layer",
			"NbInputs" : 0,
			"NbOutputs" : 10 
		},
		"Layer_1" : {
			"name" : "Hidden_Layer_1",
			"NbInputs" : 10,
			"NbOutputs" : 4 ,
			"coeffs_0" : [ -0.097358, 0.295600, -0.325120, -0.139369 ],
			"coeffs_1" : [ 0.058011, -0.505765, 0.146566, -0.054926 ],
			"coeffs_2" : [ 0.497594, 0.080845, 0.498948, -0.185182 ],
			"coeffs_3" : [ 0.639241, -0.640883, -0.317777, 0.146061 ],
			"coeffs_4" : [ 0.279441, -0.332204, -0.364179, -0.576714 ],
			"coeffs_5" : [ 0.240228, -0.684221, -0.139684, -0.057870 ],
			"coeffs_6" : [ -0.154899, -0.630298, -0.370102, 0.438540 ],
			"coeffs_7" : [ -0.140612, -0.000060, -0.621419, -0.036469 ],
			"coeffs_8" : [ -0.272165, 0.195729, -0.174232, 0.205395 ],
			"coeffs_9" : [ -0.436710, 0.517304, -0.510818, 0.257390 ],
			"intercepts" : [ -0.511753, 0.308164, 0.109626, 0.506174 ]
		},
		"Layer_2" : {
			"name" : "Hidden_Layer_2",
			"NbInputs" : 4,
			"NbOutputs" : 8 ,
			"coeffs_0" : [ -0.516250, -0.620306, 0.320729, 0.277743, 0.553557, 0.540631, 0.478666, -0.333102 ],
			"coeffs_1" : [ 0.360613, 0.512185, -0.362031, 0.289272, 0.179306, -0.008624, 0.051287, 0.486873 ],
			"coeffs_2" : [ -0.618411, 0.064390, 0.332458, 0.371342, -0.573609, 0.449687, -0.430824, -0.550544 ],
			"coeffs_3" : [ 0.607892, 0.585949, 0.008132, -0.460084, 0.113889, 0.593197, -0.561000, 0.410103 ],
			"intercepts" : [ 0.219710, 0.318702, 0.728827, -0.344143, 0.375554, 0.418422, 0.448219, 0.081741 ]
		},
		"Layer_3" : {
			"name" : "Hidden_Layer_3",
			"NbInputs" : 8,
			"NbOutputs" : 6 ,
			"coeffs_0" : [ -0.638949, 0.236239, -0.058374, 0.036906, -0.370162, -0.506065 ],
			"coeffs_1" : [ -0.295809, 0.497701, -0.039975, -0.014960, -0.151607, -0.473633 ],
			"coeffs_2" : [ 0.135045, -0.285549, -0.310723, -0.066855, 0.250079, -0.352417 ],
			"coeffs_3" : [ -0.258942, 0.319708, 0.418584, 0.558645, 0.445904, 0.264556 ],
			"coeffs_4" : [ -0.354871, -0.019101, 0.131991, 0.514972, 0.291695, -0.001604 ],
			"coeffs_5" : [ 0.307903, 0.376868, 0.052597, -0.143291, -0.198064, -0.218781 ],
			"coeffs_6" : [ 0.280820, 0.310556, -0.474111, 0.247243, -0.426408, -0.001729 ],
			"coeffs_7" : [ -0.002805, -0.393070, 0.212543, -0.417935, -0.475751, 0.377295 ],
			"intercepts" : [ 0.509707, -0.519870, -0.307935, -0.437381, -0.520102, -0.502640 ]
		},
		"Layer_4" : {
			"name" : "Output_Layer",
			"NbInputs" : 6,
			"NbOutputs" : 4 ,
			"coeffs_0" : [ -0.263428, -0.241773, -0.378743, -0.528651 ],
			"coeffs_1" : [ -0.626231, 0.073278, -0.407897, -0.569830 ],
			"coeffs_2" : [ 0.195620, 0.225098, -0.078093, 0.248051 ],
			"coeffs_3" : [ 0.113115, -0.630442, 0.062843, 0.561862 ],
			"coeffs_4" : [ 0.716724, -0.137916, -0.627799, -0.359438 ],
			"coeffs_5" : [ 0.217087, -0.527762, 0.267267, -0.302027 ],
			"intercepts" : [ 0.702363, 0.645952, -0.190773, 0.431000 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/MLPClassifier/mllite.MLPClassifier_FourClass_10_quantized_option_1.json'

MLLITE_MODEL_SET_OPTIONS MLPClassifier {"hidden_layer_sizes" : [4, 8, 6]}
MLLITE_MODEL_OPTIONS_DEFAULT MLPClassifier { "max_iter" : 32}
MLLITE_MODEL_OPTIONS_AFTER_SETTING MLPClassifier { "hidden_layer_sizes" : [4, 8, 6],  "max_iter" : 32 }
MLLITE_MODEL_JSON_AFTER_SETTING MLPClassifier None
MLLITE_RELOADING_MODEL mllite_mlp_class.MLPClassifier_ff4_il8
{
	"metadata" : { "model" : "Rosenblatt_MLP", "version" : "2024-W12", "signature" : "ff4_il8"},
	"options" : {  "hidden_layer_sizes" : [ 4, 8, 6 ], "activation" : "relu", "solver" : "adam", "alpha" : 0.000100, "batch_size" : null, "learning_rate" : "constant", "learning_rate_init" : 0.001000, "power_t" : 0.500000, "max_iter" : 32, "shuffle" : 1, "random_state" : 1789, "tol" : 0.000100, "verbose" : 0, "warm_start" : 0, "momentum" : 0.900000, "nesterovs_momentum" : 1, "early_stopping" : 0, "validation_fraction" : 0.100000, "beta_1" : 0.900000, "beta_2" : 0.999000, "epsilon" : 0.000000, "n_iter_no_change" : 10, "max_fun" : 15000 },
	"dataset" : { "dataset_rows" : 1024, "dataset_features" : 10 },
	"classes" : [ 0, 1, 2, 3 ],
	"layers" : {
		"sizes" : [ 10, 4, 8, 6, 4 ],
		"Layer_0" : {
			"name" : "Input_Layer",
			"NbInputs" : 0,
			"NbOutputs" : 10 
		},
		"Layer_1" : {
			"name" : "Hidden_Layer_1",
			"NbInputs" : 10,
			"NbOutputs" : 4 ,
			"coeffs_0" : [ -0.097358, 0.295600, -0.325120, -0.139369 ],
			"coeffs_1" : [ 0.058011, -0.505765, 0.146566, -0.054926 ],
			"coeffs_2" : [ 0.497594, 0.080845, 0.498948, -0.185182 ],
			"coeffs_3" : [ 0.639241, -0.640883, -0.317777, 0.146061 ],
			"coeffs_4" : [ 0.279441, -0.332204, -0.364179, -0.576714 ],
			"coeffs_5" : [ 0.240228, -0.684221, -0.139684, -0.057870 ],
			"coeffs_6" : [ -0.154899, -0.630298, -0.370102, 0.438540 ],
			"coeffs_7" : [ -0.140612, -0.000060, -0.621419, -0.036469 ],
			"coeffs_8" : [ -0.272165, 0.195729, -0.174232, 0.205395 ],
			"coeffs_9" : [ -0.436710, 0.517304, -0.510818, 0.257390 ],
			"intercepts" : [ -0.511753, 0.308164, 0.109626, 0.506174 ]
		},
		"Layer_2" : {
			"name" : "Hidden_Layer_2",
			"NbInputs" : 4,
			"NbOutputs" : 8 ,
			"coeffs_0" : [ -0.516250, -0.620306, 0.320729, 0.277743, 0.553557, 0.540631, 0.478666, -0.333102 ],
			"coeffs_1" : [ 0.360613, 0.512185, -0.362031, 0.289272, 0.179306, -0.008624, 0.051287, 0.486873 ],
			"coeffs_2" : [ -0.618411, 0.064390, 0.332458, 0.371342, -0.573609, 0.449687, -0.430824, -0.550544 ],
			"coeffs_3" : [ 0.607892, 0.585949, 0.008132, -0.460084, 0.113889, 0.593197, -0.561000, 0.410103 ],
			"intercepts" : [ 0.219710, 0.318702, 0.728827, -0.344143, 0.375554, 0.418422, 0.448219, 0.081741 ]
		},
		"Layer_3" : {
			"name" : "Hidden_Layer_3",
			"NbInputs" : 8,
			"NbOutputs" : 6 ,
			"coeffs_0" : [ -0.638949, 0.236239, -0.058374, 0.036906, -0.370162, -0.506065 ],
			"coeffs_1" : [ -0.295809, 0.497701, -0.039975, -0.014960, -0.151607, -0.473633 ],
			"coeffs_2" : [ 0.135045, -0.285549, -0.310723, -0.066855, 0.250079, -0.352417 ],
			"coeffs_3" : [ -0.258942, 0.319708, 0.418584, 0.558645, 0.445904, 0.264556 ],
			"coeffs_4" : [ -0.354871, -0.019101, 0.131991, 0.514972, 0.291695, -0.001604 ],
			"coeffs_5" : [ 0.307903, 0.376868, 0.052597, -0.143291, -0.198064, -0.218781 ],
			"coeffs_6" : [ 0.280820, 0.310556, -0.474111, 0.247243, -0.426408, -0.001729 ],
			"coeffs_7" : [ -0.002805, -0.393070, 0.212543, -0.417935, -0.475751, 0.377295 ],
			"intercepts" : [ 0.509707, -0.519870, -0.307935, -0.437381, -0.520102, -0.502640 ]
		},
		"Layer_4" : {
			"name" : "Output_Layer",
			"NbInputs" : 6,
			"NbOutputs" : 4 ,
			"coeffs_0" : [ -0.263428, -0.241773, -0.378743, -0.528651 ],
			"coeffs_1" : [ -0.626231, 0.073278, -0.407897, -0.569830 ],
			"coeffs_2" : [ 0.195620, 0.225098, -0.078093, 0.248051 ],
			"coeffs_3" : [ 0.113115, -0.630442, 0.062843, 0.561862 ],
			"coeffs_4" : [ 0.716724, -0.137916, -0.627799, -0.359438 ],
			"coeffs_5" : [ 0.217087, -0.527762, 0.267267, -0.302027 ],
			"intercepts" : [ 0.702363, 0.645952, -0.190773, 0.431000 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1, 2, 3 ],
	"dataset" : 	{
		"dataset_features" : 10,
		"dataset_rows" : 1024
	},
	"layers" : 	{
		"Layer_0" : 	{
			"NbInputs" : 0,
			"NbOutputs" : 10,
			"name" : "Input_Layer"
		},
		"Layer_1" : 	{
			"NbInputs" : 10,
			"NbOutputs" : 4,
			"coeffs_0" : [ -0.097358, 0.2956, -0.32512, -0.139369 ],
			"coeffs_1" : [ 0.058011, -0.505765, 0.146566, -0.054926 ],
			"coeffs_2" : [ 0.497594, 0.080845, 0.498948, -0.185182 ],
			"coeffs_3" : [ 0.639241, -0.640883, -0.317777, 0.146061 ],
			"coeffs_4" : [ 0.279441, -0.332204, -0.364179, -0.576714 ],
			"coeffs_5" : [ 0.240228, -0.684221, -0.139684, -0.05787 ],
			"coeffs_6" : [ -0.154899, -0.630298, -0.370102, 0.43854 ],
			"coeffs_7" : [ -0.140612, -6e-05, -0.621419, -0.036469 ],
			"coeffs_8" : [ -0.272165, 0.195729, -0.174232, 0.205395 ],
			"coeffs_9" : [ -0.43671, 0.517304, -0.510818, 0.25739 ],
			"intercepts" : [ -0.511753, 0.308164, 0.109626, 0.506174 ],
			"name" : "Hidden_Layer_1"
		},
		"Layer_2" : 	{
			"NbInputs" : 4,
			"NbOutputs" : 8,
			"coeffs_0" : [ -0.51625, -0.620306, 0.320729, 0.277743, 0.553557, 0.540631, 0.478666, -0.333102 ],
			"coeffs_1" : [ 0.360613, 0.512185, -0.362031, 0.289272, 0.179306, -0.008624, 0.051287, 0.486873 ],
			"coeffs_2" : [ -0.618411, 0.06439, 0.332458, 0.371342, -0.573609, 0.449687, -0.430824, -0.550544 ],
			"coeffs_3" : [ 0.607892, 0.585949, 0.008132, -0.460084, 0.113889, 0.593197, -0.561, 0.410103 ],
			"intercepts" : [ 0.21971, 0.318702, 0.728827, -0.344143, 0.375554, 0.418422, 0.448219, 0.081741 ],
			"name" : "Hidden_Layer_2"
		},
		"Layer_3" : 	{
			"NbInputs" : 8,
			"NbOutputs" : 6,
			"coeffs_0" : [ -0.638949, 0.236239, -0.058374, 0.036906, -0.370162, -0.506065 ],
			"coeffs_1" : [ -0.295809, 0.497701, -0.039975, -0.01496, -0.151607, -0.473633 ],
			"coeffs_2" : [ 0.135045, -0.285549, -0.310723, -0.066855, 0.250079, -0.352417 ],
			"coeffs_3" : [ -0.258942, 0.319708, 0.418584, 0.558645, 0.445904, 0.264556 ],
			"coeffs_4" : [ -0.354871, -0.019101, 0.131991, 0.514972, 0.291695, -0.001604 ],
			"coeffs_5" : [ 0.307903, 0.376868, 0.052597, -0.143291, -0.198064, -0.218781 ],
			"coeffs_6" : [ 0.28082, 0.310556, -0.474111, 0.247243, -0.426408, -0.001729 ],
			"coeffs_7" : [ -0.002805, -0.39307, 0.212543, -0.417935, -0.475751, 0.377295 ],
			"intercepts" : [ 0.509707, -0.51987, -0.307935, -0.437381, -0.520102, -0.50264 ],
			"name" : "Hidden_Layer_3"
		},
		"Layer_4" : 	{
			"NbInputs" : 6,
			"NbOutputs" : 4,
			"coeffs_0" : [ -0.263428, -0.241773, -0.378743, -0.528651 ],
			"coeffs_1" : [ -0.626231, 0.073278, -0.407897, -0.56983 ],
			"coeffs_2" : [ 0.19562, 0.225098, -0.078093, 0.248051 ],
			"coeffs_3" : [ 0.113115, -0.630442, 0.062843, 0.561862 ],
			"coeffs_4" : [ 0.716724, -0.137916, -0.627799, -0.359438 ],
			"coeffs_5" : [ 0.217087, -0.527762, 0.267267, -0.302027 ],
			"intercepts" : [ 0.702363, 0.645952, -0.190773, 0.431 ],
			"name" : "Output_Layer"
		},
		"sizes" : [ 10, 4, 8, 6, 4 ]
	},
	"metadata" :  { "model" : "Rosenblatt_MLP", "signature" : "ff4_il8", "version" : "2024-W12" },
	"options" :  { "activation" : "relu", "alpha" : 0.0001, "batch_size" : null, "beta_1" : 0.9, "beta_2" : 0.999, "early_stopping" : 0, "epsilon" : 0.0, "hidden_layer_sizes" : [ 4, 8, 6 ], "learning_rate" : "constant", "learning_rate_init" : 0.001, "max_fun" : 15000, "max_iter" : 32, "momentum" : 0.9, "n_iter_no_change" : 10, "nesterovs_momentum" : 1, "power_t" : 0.5, "random_state" : 1789, "shuffle" : 1, "solver" : "adam", "tol" : 0.0001, "validation_fraction" : 0.1, "verbose" : 0, "warm_start" : 0 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
[[0.3067 0.2215 0.1286 0.3432]
 [0.32   0.1905 0.1283 0.3612]
 [0.331  0.2935 0.1279 0.2477]
 ...
 [0.3349 0.3208 0.1277 0.2167]
 [0.3529 0.2848 0.1282 0.2341]
 [0.3316 0.2109 0.1294 0.3282]]
(1024, 4)
(1024, 4) float32
MODEL_PERFS {'class_name': 'mllite.MLPClassifier', 'model_name': 'MLPClassifier', 'options': '{"hidden_layer_sizes" : [4, 8, 6]}', 'dataset': 'FourClass_10_quantized', 'size': 1024, 'accuracy': 0.255859375, 'auc': 0.5379578421506969}
WRITING_PERF_CODE 'logs/auto_tests/classification/MLPClassifier/mllite.MLPClassifier_FourClass_10_quantized_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.MLPClassifier', 'model_name': 'MLPClassifier', 'options': '{"hidden_layer_sizes" : [4, 8, 6]}', 'dataset': 'FourClass_10_quantized', 'training_time_in_sec': 0.096, 'prediction_time_in_sec': 0.001}
WRITING_SQL_CODE 'logs/auto_tests/classification/MLPClassifier/mllite.MLPClassifier_FourClass_10_quantized_option_1.sql'



SQL_OUT_PUT_FIRST_LINES_START
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 )
,
"Input_Layer_BA" AS
 ( SELECT t."index" as "index",
    X_0 AS OUT_0,
    X_1 AS OUT_1,
    X_2 AS OUT_2,
    X_3 AS OUT_3,
    X_4 AS OUT_4,
    X_5 AS OUT_5,
    X_6 AS OUT_6,
    X_7 AS OUT_7,
    X_8 AS OUT_8,
    X_9 AS OUT_9
 FROM model_input AS t
)
,
"Hidden_Layer_1_BA" AS
 ( SELECT t."index" as "index",
    -0.511753 + -0.097358 * t.OUT_0  + 0.058011 * t.OUT_1  + 0.497594 * t.OUT_2  + 0.639241 * t.OUT_3  + 0.279441 * t.OUT_4  + 0.240228 * t.OUT_5  + -0.154899 * t.OUT_6  + -0.140612 * t.OUT_7  + -0.272165 * t.OUT_8  + -0.436710 * t.OUT_9 A
SQL_OUT_PUT_FIRST_LINES_END
SQL_OUT_PUT_LAST_LINES_START
ore_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."Score_3" AS "Score_3",
  arg_max_cte."Proba_3" AS "Proba_3",
  CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN LN( arg_max_cte."Proba_3" ) ELSE -1.79769313486231e+308 END AS "LogProba_3",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 1024 entries, 0 to 1023
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     1024 non-null   float32
 1   X_1     1024 non-null   float32
 2   X_2     1024 non-null   float32
 3   X_3     1024 non-null   float32
 4   X_4     1024 non-null   float32
 5   X_5     1024 non-null   float32
 6   X_6     1024 non-null   float32
 7   X_7     1024 non-null   float32
 8   X_8     1024 non-null   float32
 9   X_9     1024 non-null   float32
dtypes: float32(10)
memory usage: 48.0 KB
       X_0  X_1  X_2  X_3  X_4  X_5  X_6  X_7  X_8  X_9
index                                                  
0      2.0  6.0  6.0  5.0  2.0  7.0  8.0  7.0  1.0  0.0
1      8.0  2.0  7.0  2.0  8.0  2.0  0.0  0.0  5.0  2.0
2      0.0  8.0  6.0  8.0  8.0  4.0  6.0  6.0  7.0  9.0
3      3.0  5.0  2.0  6.0  8.0  5.0  5.0  3.0  4.0  3.0
4      9.0  1.0  4.0  4.0  3.0  8.0  2.0  1.0  3.0  2.0
...    ...  ...  ...  ...  ...  ...  ...  ...  ...  ...
1019   0.0  7.0  0.0  5.0  7.0  9.0  9.0  8.0  0.0  1.0
1020   1.0  6.0  9.0  7.0  4.0  8.0  8.0  6.0  4.0  4.0
1021   1.0  8.0  6.0  2.0  1.0  0.0  0.0  1.0  9.0  2.0
1022   2.0  8.0  9.0  1.0  4.0  7.0  0.0  5.0  9.0  7.0
1023   3.0  7.0  9.0  1.0  3.0  8.0  3.0  3.0  2.0  6.0

[1024 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
