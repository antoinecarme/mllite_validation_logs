      X_0  X_1  X_2  X_3  X_4  X_5  X_6  X_7  X_8  X_9  target
0       2    6    6    5    2    7    8    7    1    0       0
1       8    2    7    2    8    2    0    0    5    2       3
2       0    8    6    8    8    4    6    6    7    9       1
3       3    5    2    6    8    5    5    3    4    3       3
4       9    1    4    4    3    8    2    1    3    2       0
...   ...  ...  ...  ...  ...  ...  ...  ...  ...  ...     ...
1019    0    7    0    5    7    9    9    8    0    1       2
1020    1    6    9    7    4    8    8    6    4    4       3
1021    1    8    6    2    1    0    0    1    9    2       3
1022    2    8    9    1    4    7    0    5    9    7       3
1023    3    7    9    1    3    8    3    3    2    6       2

[1024 rows x 11 columns]
MLLITE_MODEL_SET_OPTIONS RidgeClassifier {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { "alpha" : 0.0000001,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
('OPERATION_START', 'TRAINING')
[[2. 6. 6. 5. 2. 7. 8. 7. 1. 0.]
 [8. 2. 7. 2. 8. 2. 0. 0. 5. 2.]
 [0. 8. 6. 8. 8. 4. 6. 6. 7. 9.]
 [3. 5. 2. 6. 8. 5. 5. 3. 4. 3.]
 [9. 1. 4. 4. 3. 8. 2. 1. 3. 2.]] [0 3 1 3 0]
MLLITE_FIT_USING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 6 6
('OPERATION_END_ELAPSED', 0.019, 'TRAINING')
{ "alpha" : 0.0000001,   }
{ "alpha" : 0.0000001,   }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_il8"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 1024, "dataset_features" : 10 },
	"classes" : [ 0, 1, 2, 3 ],
	"equations" : {
		"class_0" : {
			"intercept" : 1.869226,
			"coeffs" : [ -0.220959, -0.302108, 0.006471, -0.140681, -0.005167, -0.010807, 0.119880, -0.094303, 0.127194, -0.007568 ]
		},
		"class_1" : {
			"intercept" : -1.802806,
			"coeffs" : [ 0.044895, 0.034326, 0.001449, 0.011818, 0.007179, -0.001097, -0.056630, 0.161744, 0.074433, 0.010759 ]
		},
		"class_2" : {
			"intercept" : -0.502567,
			"coeffs" : [ 0.095199, 0.102650, -0.002817, -0.019719, -0.015239, -0.003267, -0.022480, 0.026365, -0.156559, -0.001079 ]
		},
		"class_3" : {
			"intercept" : -1.563851,
			"coeffs" : [ 0.080865, 0.165133, -0.005103, 0.148583, 0.013227, 0.015170, -0.040772, -0.093806, -0.045070, -0.002112 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_10_quantized_option_1.json'

MLLITE_MODEL_SET_OPTIONS RidgeClassifier {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { "alpha" : 0.0000001,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
MLLITE_RELOADING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_il8"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 1024, "dataset_features" : 10 },
	"classes" : [ 0, 1, 2, 3 ],
	"equations" : {
		"class_0" : {
			"intercept" : 1.869226,
			"coeffs" : [ -0.220959, -0.302108, 0.006471, -0.140681, -0.005167, -0.010807, 0.119880, -0.094303, 0.127194, -0.007568 ]
		},
		"class_1" : {
			"intercept" : -1.802806,
			"coeffs" : [ 0.044895, 0.034326, 0.001449, 0.011818, 0.007179, -0.001097, -0.056630, 0.161744, 0.074433, 0.010759 ]
		},
		"class_2" : {
			"intercept" : -0.502567,
			"coeffs" : [ 0.095199, 0.102650, -0.002817, -0.019719, -0.015239, -0.003267, -0.022480, 0.026365, -0.156559, -0.001079 ]
		},
		"class_3" : {
			"intercept" : -1.563851,
			"coeffs" : [ 0.080865, 0.165133, -0.005103, 0.148583, 0.013227, 0.015170, -0.040772, -0.093806, -0.045070, -0.002112 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1, 2, 3 ],
	"dataset" : 	{
		"dataset_features" : 10,
		"dataset_rows" : 1024
	},
	"equations" : 	{
		"class_0" : 	{
			"coeffs" : [ -0.220959, -0.302108, 0.006471, -0.140681, -0.005167, -0.010807, 0.11988, -0.094303, 0.127194, -0.007568 ],
			"intercept" : 1.869226
		},
		"class_1" : 	{
			"coeffs" : [ 0.044895, 0.034326, 0.001449, 0.011818, 0.007179, -0.001097, -0.05663, 0.161744, 0.074433, 0.010759 ],
			"intercept" : -1.802806
		},
		"class_2" : 	{
			"coeffs" : [ 0.095199, 0.10265, -0.002817, -0.019719, -0.015239, -0.003267, -0.02248, 0.026365, -0.156559, -0.001079 ],
			"intercept" : -0.502567
		},
		"class_3" : 	{
			"coeffs" : [ 0.080865, 0.165133, -0.005103, 0.148583, 0.013227, 0.01517, -0.040772, -0.093806, -0.04507, -0.002112 ],
			"intercept" : -1.563851
		}
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_il8", "version" : "2024-W12" },
	"options" :  { "alpha" : 0.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
[[0.1941 0.2001 0.388  0.2178]
 [0.3333 0.1636 0.2403 0.2628]
 [0.18   0.3344 0.1293 0.3562]
 ...
 [0.3911 0.2126 0.1353 0.2609]
 [0.2181 0.4434 0.1527 0.1857]
 [0.1707 0.1617 0.4132 0.2544]]
(1024, 4)
(1024, 4) float32
MODEL_PERFS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': '{"alpha" : 0.0000001}', 'dataset': 'FourClass_10_quantized', 'size': 1024, 'accuracy': 0.59765625, 'auc': 0.8262906691585549}
WRITING_PERF_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_10_quantized_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': '{"alpha" : 0.0000001}', 'dataset': 'FourClass_10_quantized', 'training_time_in_sec': 0.019, 'prediction_time_in_sec': 0.001}
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_10_quantized_option_1.sql'



SQL_OUT_PUT_FIRST_LINES_START
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT model_input."index" AS "index",
   1.869226 + -0.220959 * X_0 + -0.302108 * X_1 + 0.006471 * X_2 + -0.140681 * X_3 + -0.005167 * X_4 + -0.010807 * X_5 + 0.119880 * X_6 + -0.094303 * X_7 + 0.127194 * X_8 + -0.007568 * X_9 AS "Score_0", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "LogProba_0",
   -1.802806 + 0.044895 * X_0 + 0.034326 * X_1 + 0.001449 * X_2 + 0.011818 * X_3 + 0.007179 * X_4 + -0.001097 * X_5 + -0.056630 * X_6 + 0.161744 * X_7 + 0.074433 * X_8 + 0.010759 * X_9 AS "Score_1", CAST(NULL AS FLOAT
SQL_OUT_PUT_FIRST_LINES_END
SQL_OUT_PUT_LAST_LINES_START
ore_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."Score_3" AS "Score_3",
  arg_max_cte."Proba_3" AS "Proba_3",
  CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN LN( arg_max_cte."Proba_3" ) ELSE -1.79769313486231e+308 END AS "LogProba_3",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 1024 entries, 0 to 1023
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     1024 non-null   float32
 1   X_1     1024 non-null   float32
 2   X_2     1024 non-null   float32
 3   X_3     1024 non-null   float32
 4   X_4     1024 non-null   float32
 5   X_5     1024 non-null   float32
 6   X_6     1024 non-null   float32
 7   X_7     1024 non-null   float32
 8   X_8     1024 non-null   float32
 9   X_9     1024 non-null   float32
dtypes: float32(10)
memory usage: 48.0 KB
       X_0  X_1  X_2  X_3  X_4  X_5  X_6  X_7  X_8  X_9
index                                                  
0      2.0  6.0  6.0  5.0  2.0  7.0  8.0  7.0  1.0  0.0
1      8.0  2.0  7.0  2.0  8.0  2.0  0.0  0.0  5.0  2.0
2      0.0  8.0  6.0  8.0  8.0  4.0  6.0  6.0  7.0  9.0
3      3.0  5.0  2.0  6.0  8.0  5.0  5.0  3.0  4.0  3.0
4      9.0  1.0  4.0  4.0  3.0  8.0  2.0  1.0  3.0  2.0
...    ...  ...  ...  ...  ...  ...  ...  ...  ...  ...
1019   0.0  7.0  0.0  5.0  7.0  9.0  9.0  8.0  0.0  1.0
1020   1.0  6.0  9.0  7.0  4.0  8.0  8.0  6.0  4.0  4.0
1021   1.0  8.0  6.0  2.0  1.0  0.0  0.0  1.0  9.0  2.0
1022   2.0  8.0  9.0  1.0  4.0  7.0  0.0  5.0  9.0  7.0
1023   3.0  7.0  9.0  1.0  3.0  8.0  3.0  3.0  2.0  6.0

[1024 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 1024 entries, 0 to 1023
Data columns (total 15 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          1024 non-null   int64  
 1   Score_0        1024 non-null   float64
 2   Proba_0        1024 non-null   float64
 3   LogProba_0     1024 non-null   float64
 4   Score_1        1024 non-null   float64
 5   Proba_1        1024 non-null   float64
 6   LogProba_1     1024 non-null   float64
 7   Score_2        1024 non-null   float64
 8   Proba_2        1024 non-null   float64
 9   LogProba_2     1024 non-null   float64
 10  Score_3        1024 non-null   float64
 11  Proba_3        1024 non-null   float64
 12  LogProba_3     1024 non-null   float64
 13  Decision       1024 non-null   int64  
 14  DecisionProba  1024 non-null   float64
dtypes: float64(13), int64(2)
memory usage: 120.1 KB
      index   Score_0   Proba_0  ...  LogProba_3  Decision  DecisionProba
0         0 -0.709789  0.194058  ...   -1.524079         2       0.387994
1         1 -0.180843  0.333322  ...   -1.336441         0       0.333322
2         2 -0.743116  0.179958  ...   -1.032128         3       0.356248
3         3 -0.428143  0.258818  ...   -1.028013         3       0.357717
4         4 -0.548407  0.227114  ...   -1.184650         2       0.323212
...     ...       ...       ...  ...         ...       ...            ...
1019   1019 -0.765439  0.183079  ...   -1.487793         2       0.389237
1020   1020 -0.326307  0.294358  ...   -1.298158         0       0.294358
1021   1021  0.019007  0.391151  ...   -1.343475         0       0.391151
1022   1022 -0.548060  0.218123  ...   -1.683382         1       0.443429
1023   1023 -0.807095  0.170724  ...   -1.368787         2       0.413170

[1024 rows x 15 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Score_3', 'Proba_3',
       'LogProba_3', 'Decision', 'DecisionProba'],
      dtype='object')
      index   Score_0  SQL_Proba_0  ...  Py_Proba_2  Py_Proba_3  Py_Decision
1008   1008 -0.463929     0.246336  ...    0.247127    0.361826            3
1009   1009 -0.915729     0.150513  ...    0.255313    0.163608            1
1010   1010  0.002332     0.384319  ...    0.135235    0.278019            0
1011   1011 -1.011108     0.127515  ...    0.427051    0.112727            2
1012   1012 -0.683948     0.194959  ...    0.215552    0.171765            1
1013   1013 -1.205590     0.098660  ...    0.528629    0.121706            2
1014   1014 -0.487697     0.230575  ...    0.106203    0.322415            1
1015   1015 -0.734421     0.181121  ...    0.452152    0.191084            2
1016   1016 -0.580251     0.207131  ...    0.359609    0.330047            2
1017   1017 -0.593221     0.203832  ...    0.413575    0.274146            2
1018   1018 -0.721666     0.194963  ...    0.354150    0.231698            2
1019   1019 -0.765439     0.183079  ...    0.389237    0.225871            2
1020   1020 -0.326307     0.294358  ...    0.203762    0.273034            0
1021   1021  0.019007     0.391151  ...    0.135303    0.260938            0
1022   1022 -0.548060     0.218123  ...    0.152703    0.185745            1
1023   1023 -0.807095     0.170724  ...    0.413170    0.254415            2

[16 rows x 20 columns]
MLLITE_SQL_ERROR ('Py_Proba_0', 'SQL_Proba_0') 4.1248490851974205e-06
      Py_Proba_0  SQL_Proba_0
1008    0.246336     0.246336
1009    0.150512     0.150513
1010    0.384318     0.384319
1011    0.127514     0.127515
1012    0.194958     0.194959
1013    0.098659     0.098660
1014    0.230574     0.230575
1015    0.181121     0.181121
1016    0.207130     0.207131
1017    0.203831     0.203832
1018    0.194963     0.194963
1019    0.183079     0.183079
1020    0.294357     0.294358
1021    0.391149     0.391151
1022    0.218121     0.218123
1023    0.170723     0.170724
MLLITE_SQL_ERROR ('Py_Proba_1', 'SQL_Proba_1') 2.9220037210765497e-06
      Py_Proba_1  SQL_Proba_1
1008    0.144712     0.144711
1009    0.430566     0.430566
1010    0.202428     0.202428
1011    0.332708     0.332706
1012    0.417725     0.417723
1013    0.251006     0.251005
1014    0.340808     0.340807
1015    0.175643     0.175642
1016    0.103214     0.103214
1017    0.108447     0.108447
1018    0.219189     0.219189
1019    0.201814     0.201813
1020    0.228847     0.228845
1021    0.212609     0.212608
1022    0.443431     0.443429
1023    0.161692     0.161691
MLLITE_SQL_ERROR ('Py_Proba_2', 'SQL_Proba_2') 2.1579656563952987e-06
      Py_Proba_2  SQL_Proba_2
1008    0.247127     0.247127
1009    0.255313     0.255313
1010    0.135235     0.135235
1011    0.427051     0.427051
1012    0.215552     0.215553
1013    0.528629     0.528629
1014    0.106203     0.106203
1015    0.452152     0.452152
1016    0.359609     0.359609
1017    0.413575     0.413575
1018    0.354150     0.354150
1019    0.389237     0.389237
1020    0.203762     0.203762
1021    0.135303     0.135303
1022    0.152703     0.152703
1023    0.413170     0.413170
MLLITE_SQL_ERROR ('Py_Proba_3', 'SQL_Proba_3') 2.4618390416767212e-06
      Py_Proba_3  SQL_Proba_3
1008    0.361826     0.361826
1009    0.163608     0.163608
1010    0.278019     0.278017
1011    0.112727     0.112727
1012    0.171765     0.171765
1013    0.121706     0.121706
1014    0.322415     0.322414
1015    0.191084     0.191084
1016    0.330047     0.330046
1017    0.274146     0.274147
1018    0.231698     0.231697
1019    0.225871     0.225871
1020    0.273034     0.273034
1021    0.260938     0.260937
1022    0.185745     0.185745
1023    0.254415     0.254415
      Py_Decision  SQL_Decision
1008            3             3
1009            1             1
1010            0             0
1011            2             2
1012            1             1
1013            2             2
1014            1             1
1015            2             2
1016            2             2
1017            2             2
1018            2             2
1019            2             2
1020            0             0
1021            0             0
1022            1             1
1023            2             2
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
