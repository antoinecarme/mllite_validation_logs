      X_0  X_1  X_2  X_3  X_4  X_5  X_6  X_7  X_8  X_9  target
0       2    6    6    5    2    7    8    7    1    0       0
1       8    2    7    2    8    2    0    0    5    2       3
2       0    8    6    8    8    4    6    6    7    9       1
3       3    5    2    6    8    5    5    3    4    3       3
4       9    1    4    4    3    8    2    1    3    2       0
...   ...  ...  ...  ...  ...  ...  ...  ...  ...  ...     ...
1019    0    7    0    5    7    9    9    8    0    1       2
1020    1    6    9    7    4    8    8    6    4    4       3
1021    1    8    6    2    1    0    0    1    9    2       3
1022    2    8    9    1    4    7    0    5    9    7       3
1023    3    7    9    1    3    8    3    3    2    6       2

[1024 rows x 11 columns]
MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
('OPERATION_START', 'TRAINING')
[[2. 6. 6. 5. 2. 7. 8. 7. 1. 0.]
 [8. 2. 7. 2. 8. 2. 0. 0. 5. 2.]
 [0. 8. 6. 8. 8. 4. 6. 6. 7. 9.]
 [3. 5. 2. 6. 8. 5. 5. 3. 4. 3.]
 [9. 1. 4. 4. 3. 8. 2. 1. 3. 2.]] [0 3 1 3 0]
MLLITE_FIT_USING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 6 6
('OPERATION_END_ELAPSED', 0.021, 'TRAINING')
{ ,   }
{ ,   }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_il8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 1024, "dataset_features" : 10 },
	"classes" : [ 0, 1, 2, 3 ],
	"equations" : {
		"class_0" : {
			"intercept" : 1.776885,
			"coeffs" : [ -0.212984, -0.290369, 0.006499, -0.134123, -0.005161, -0.010907, 0.117293, -0.094401, 0.124259, -0.007594 ]
		},
		"class_1" : {
			"intercept" : -1.796600,
			"coeffs" : [ 0.044314, 0.033444, 0.001439, 0.010946, 0.007176, -0.001089, -0.055737, 0.161206, 0.075049, 0.010744 ]
		},
		"class_2" : {
			"intercept" : -0.473390,
			"coeffs" : [ 0.092531, 0.098774, -0.002830, -0.021888, -0.015227, -0.003229, -0.021448, 0.026299, -0.155355, -0.001073 ]
		},
		"class_3" : {
			"intercept" : -1.506894,
			"coeffs" : [ 0.076140, 0.158153, -0.005109, 0.145066, 0.013212, 0.015225, -0.040110, -0.093103, -0.043955, -0.002077 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_10_quantized.json'

MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
MLLITE_RELOADING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_il8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 1024, "dataset_features" : 10 },
	"classes" : [ 0, 1, 2, 3 ],
	"equations" : {
		"class_0" : {
			"intercept" : 1.776885,
			"coeffs" : [ -0.212984, -0.290369, 0.006499, -0.134123, -0.005161, -0.010907, 0.117293, -0.094401, 0.124259, -0.007594 ]
		},
		"class_1" : {
			"intercept" : -1.796600,
			"coeffs" : [ 0.044314, 0.033444, 0.001439, 0.010946, 0.007176, -0.001089, -0.055737, 0.161206, 0.075049, 0.010744 ]
		},
		"class_2" : {
			"intercept" : -0.473390,
			"coeffs" : [ 0.092531, 0.098774, -0.002830, -0.021888, -0.015227, -0.003229, -0.021448, 0.026299, -0.155355, -0.001073 ]
		},
		"class_3" : {
			"intercept" : -1.506894,
			"coeffs" : [ 0.076140, 0.158153, -0.005109, 0.145066, 0.013212, 0.015225, -0.040110, -0.093103, -0.043955, -0.002077 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1, 2, 3 ],
	"dataset" : 	{
		"dataset_features" : 10,
		"dataset_rows" : 1024
	},
	"equations" : 	{
		"class_0" : 	{
			"coeffs" : [ -0.212984, -0.290369, 0.006499, -0.134123, -0.005161, -0.010907, 0.117293, -0.094401, 0.124259, -0.007594 ],
			"intercept" : 1.776885
		},
		"class_1" : 	{
			"coeffs" : [ 0.044314, 0.033444, 0.001439, 0.010946, 0.007176, -0.001089, -0.055737, 0.161206, 0.075049, 0.010744 ],
			"intercept" : -1.7966
		},
		"class_2" : 	{
			"coeffs" : [ 0.092531, 0.098774, -0.00283, -0.021888, -0.015227, -0.003229, -0.021448, 0.026299, -0.155355, -0.001073 ],
			"intercept" : -0.47339
		},
		"class_3" : 	{
			"coeffs" : [ 0.07614, 0.158153, -0.005109, 0.145066, 0.013212, 0.015225, -0.04011, -0.093103, -0.043955, -0.002077 ],
			"intercept" : -1.506894
		}
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_il8", "version" : "2024-W12" },
	"options" :  { "alpha" : 1.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
[[0.1945 0.2    0.3877 0.2178]
 [0.3313 0.1639 0.2409 0.2639]
 [0.1834 0.3345 0.129  0.3531]
 ...
 [0.39   0.2131 0.1357 0.2612]
 [0.2174 0.4434 0.153  0.1862]
 [0.1718 0.1618 0.4125 0.2539]]
(1024, 4)
(1024, 4) float32
MODEL_PERFS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'FourClass_10_quantized', 'size': 1024, 'accuracy': 0.59765625, 'auc': 0.8262770514378626}
WRITING_PERF_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_10_quantized.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'FourClass_10_quantized', 'training_time_in_sec': 0.021, 'prediction_time_in_sec': 0.001}
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_10_quantized.sql'



SQL_OUT_PUT_FIRST_LINES_START
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT model_input."index" AS "index",
   1.776885 + -0.212984 * X_0 + -0.290369 * X_1 + 0.006499 * X_2 + -0.134123 * X_3 + -0.005161 * X_4 + -0.010907 * X_5 + 0.117293 * X_6 + -0.094401 * X_7 + 0.124259 * X_8 + -0.007594 * X_9 AS "Score_0", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "LogProba_0",
   -1.796600 + 0.044314 * X_0 + 0.033444 * X_1 + 0.001439 * X_2 + 0.010946 * X_3 + 0.007176 * X_4 + -0.001089 * X_5 + -0.055737 * X_6 + 0.161206 * X_7 + 0.075049 * X_8 + 0.010744 * X_9 AS "Score_1", CAST(NULL AS FLOAT
SQL_OUT_PUT_FIRST_LINES_END
SQL_OUT_PUT_LAST_LINES_START
ore_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."Score_3" AS "Score_3",
  arg_max_cte."Proba_3" AS "Proba_3",
  CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN LN( arg_max_cte."Proba_3" ) ELSE -1.79769313486231e+308 END AS "LogProba_3",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 1024 entries, 0 to 1023
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     1024 non-null   float32
 1   X_1     1024 non-null   float32
 2   X_2     1024 non-null   float32
 3   X_3     1024 non-null   float32
 4   X_4     1024 non-null   float32
 5   X_5     1024 non-null   float32
 6   X_6     1024 non-null   float32
 7   X_7     1024 non-null   float32
 8   X_8     1024 non-null   float32
 9   X_9     1024 non-null   float32
dtypes: float32(10)
memory usage: 48.0 KB
       X_0  X_1  X_2  X_3  X_4  X_5  X_6  X_7  X_8  X_9
index                                                  
0      2.0  6.0  6.0  5.0  2.0  7.0  8.0  7.0  1.0  0.0
1      8.0  2.0  7.0  2.0  8.0  2.0  0.0  0.0  5.0  2.0
2      0.0  8.0  6.0  8.0  8.0  4.0  6.0  6.0  7.0  9.0
3      3.0  5.0  2.0  6.0  8.0  5.0  5.0  3.0  4.0  3.0
4      9.0  1.0  4.0  4.0  3.0  8.0  2.0  1.0  3.0  2.0
...    ...  ...  ...  ...  ...  ...  ...  ...  ...  ...
1019   0.0  7.0  0.0  5.0  7.0  9.0  9.0  8.0  0.0  1.0
1020   1.0  6.0  9.0  7.0  4.0  8.0  8.0  6.0  4.0  4.0
1021   1.0  8.0  6.0  2.0  1.0  0.0  0.0  1.0  9.0  2.0
1022   2.0  8.0  9.0  1.0  4.0  7.0  0.0  5.0  9.0  7.0
1023   3.0  7.0  9.0  1.0  3.0  8.0  3.0  3.0  2.0  6.0

[1024 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 1024 entries, 0 to 1023
Data columns (total 15 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          1024 non-null   int64  
 1   Score_0        1024 non-null   float64
 2   Proba_0        1024 non-null   float64
 3   LogProba_0     1024 non-null   float64
 4   Score_1        1024 non-null   float64
 5   Proba_1        1024 non-null   float64
 6   LogProba_1     1024 non-null   float64
 7   Score_2        1024 non-null   float64
 8   Proba_2        1024 non-null   float64
 9   LogProba_2     1024 non-null   float64
 10  Score_3        1024 non-null   float64
 11  Proba_3        1024 non-null   float64
 12  LogProba_3     1024 non-null   float64
 13  Decision       1024 non-null   int64  
 14  DecisionProba  1024 non-null   float64
dtypes: float64(13), int64(2)
memory usage: 120.1 KB
      index   Score_0   Proba_0  ...  LogProba_3  Decision  DecisionProba
0         0 -0.707793  0.194487  ...   -1.524175         2       0.387668
1         1 -0.187473  0.331318  ...   -1.332084         0       0.331318
2         2 -0.726154  0.183372  ...   -1.040941         3       0.353122
3         3 -0.423959  0.259969  ...   -1.030854         3       0.356702
4         4 -0.545801  0.227747  ...   -1.185278         2       0.322791
...     ...       ...       ...  ...         ...       ...            ...
1019   1019 -0.767768  0.182619  ...   -1.485458         2       0.389318
1020   1020 -0.327985  0.293901  ...   -1.297861         0       0.293901
1021   1021  0.015278  0.390008  ...   -1.342558         0       0.390008
1022   1022 -0.551492  0.217419  ...   -1.680966         1       0.443438
1023   1023 -0.801391  0.171844  ...   -1.370668         2       0.412458

[1024 rows x 15 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Score_3', 'Proba_3',
       'LogProba_3', 'Decision', 'DecisionProba'],
      dtype='object')
      index   Score_0  SQL_Proba_0  ...  Py_Proba_2  Py_Proba_3  Py_Decision
1008   1008 -0.456245     0.248362  ...    0.246616    0.360288            3
1009   1009 -0.913924     0.150823  ...    0.255205    0.163567            1
1010   1010 -0.000175     0.383554  ...    0.135476    0.278253            0
1011   1011 -1.008246     0.127962  ...    0.426640    0.112747            2
1012   1012 -0.682424     0.195266  ...    0.215529    0.171599            1
1013   1013 -1.202940     0.098996  ...    0.528219    0.121731            2
1014   1014 -0.485509     0.231123  ...    0.106202    0.322408            1
1015   1015 -0.732007     0.181640  ...    0.451608    0.191132            2
1016   1016 -0.576493     0.207957  ...    0.358857    0.330087            2
1017   1017 -0.586990     0.205280  ...    0.412959    0.273163            2
1018   1018 -0.715514     0.196264  ...    0.353508    0.231015            2
1019   1019 -0.767768     0.182619  ...    0.389322    0.226397            2
1020   1020 -0.327985     0.293901  ...    0.203995    0.273115            0
1021   1021  0.015278     0.390008  ...    0.135667    0.261178            0
1022   1022 -0.551492     0.217419  ...    0.152950    0.186194            1
1023   1023 -0.801391     0.171844  ...    0.412461    0.253935            2

[16 rows x 20 columns]
MLLITE_SQL_ERROR ('Py_Proba_0', 'SQL_Proba_0') 4.652960279693094e-06
      Py_Proba_0  SQL_Proba_0
1008    0.248360     0.248362
1009    0.150822     0.150823
1010    0.383553     0.383554
1011    0.127960     0.127962
1012    0.195265     0.195266
1013    0.098995     0.098996
1014    0.231122     0.231123
1015    0.181638     0.181640
1016    0.207957     0.207957
1017    0.205279     0.205280
1018    0.196263     0.196264
1019    0.182619     0.182619
1020    0.293899     0.293901
1021    0.390006     0.390008
1022    0.217418     0.217419
1023    0.171843     0.171844
MLLITE_SQL_ERROR ('Py_Proba_1', 'SQL_Proba_1') 2.342903058490576e-06
      Py_Proba_1  SQL_Proba_1
1008    0.144735     0.144735
1009    0.430406     0.430407
1010    0.202718     0.202718
1011    0.332653     0.332653
1012    0.417608     0.417608
1013    0.251056     0.251058
1014    0.340268     0.340268
1015    0.175621     0.175621
1016    0.103099     0.103099
1017    0.108600     0.108600
1018    0.219215     0.219215
1019    0.201663     0.201664
1020    0.228991     0.228991
1021    0.213150     0.213149
1022    0.443438     0.443438
1023    0.161760     0.161760
MLLITE_SQL_ERROR ('Py_Proba_2', 'SQL_Proba_2') 7.014050373134416e-06
      Py_Proba_2  SQL_Proba_2
1008    0.246616     0.246615
1009    0.255205     0.255203
1010    0.135476     0.135476
1011    0.426640     0.426637
1012    0.215529     0.215526
1013    0.528219     0.528214
1014    0.106202     0.106201
1015    0.451608     0.451607
1016    0.358857     0.358856
1017    0.412959     0.412955
1018    0.353508     0.353506
1019    0.389322     0.389318
1020    0.203995     0.203993
1021    0.135667     0.135666
1022    0.152950     0.152949
1023    0.412461     0.412458
MLLITE_SQL_ERROR ('Py_Proba_3', 'SQL_Proba_3') 3.983169803409219e-06
      Py_Proba_3  SQL_Proba_3
1008    0.360288     0.360288
1009    0.163567     0.163568
1010    0.278253     0.278252
1011    0.112747     0.112747
1012    0.171599     0.171599
1013    0.121731     0.121732
1014    0.322408     0.322409
1015    0.191132     0.191132
1016    0.330087     0.330088
1017    0.273163     0.273164
1018    0.231015     0.231015
1019    0.226397     0.226399
1020    0.273115     0.273115
1021    0.261178     0.261177
1022    0.186194     0.186194
1023    0.253935     0.253937
      Py_Decision  SQL_Decision
1008            3             3
1009            1             1
1010            0             0
1011            2             2
1012            1             1
1013            2             2
1014            1             1
1015            2             2
1016            2             2
1017            2             2
1018            2             2
1019            2             2
1020            0             0
1021            0             0
1022            1             1
1023            2             2
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
