          X_0       X_1       X_2  ...       X_8       X_9  target
0   -1.064559 -0.820872 -0.723270  ... -0.319080 -0.383915       0
1   -0.960957 -1.294560 -0.778172  ...  0.207019 -0.945521       0
2   -1.406136 -0.242116  1.301289  ... -1.426875  1.876952       1
3   -1.954561 -1.845000  0.508844  ... -1.374292  2.746056       0
4   -0.098659 -1.731538  2.272469  ...  1.740497  0.199837       1
..        ...       ...       ...  ...       ...       ...     ...
123  0.637167  0.266685 -2.101867  ...  0.443480  0.295088       0
124  1.237566  0.635414  1.362477  ... -1.462748 -0.264504       1
125 -2.188798  1.247515 -0.196171  ... -0.605569 -1.014692       1
126  1.684683  1.206950  0.344897  ... -0.717647  0.491219       0
127 -0.873119 -0.340358 -0.067087  ... -0.526077  1.201329       1

[128 rows x 11 columns]
MLLITE_MODEL_SET_OPTIONS DecisionTreeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT DecisionTreeClassifier { "max_leaf_nodes" : 64}
MLLITE_MODEL_OPTIONS_AFTER_SETTING DecisionTreeClassifier { ,  "max_leaf_nodes" : 64 }
MLLITE_MODEL_JSON_AFTER_SETTING DecisionTreeClassifier None
('OPERATION_START', 'TRAINING')
[[-1.0645586  -0.8208718  -0.72327    -0.09642018 -0.40463343 -0.81522477
  -0.8386918   0.65200984 -0.31908    -0.3839149 ]
 [-0.9609572  -1.2945602  -0.77817184  0.8359748  -1.0189681  -0.12086504
  -0.68072116 -0.5189585   0.20701888 -0.9455213 ]
 [-1.4061359  -0.24211647  1.301289   -0.49436462  1.0264262   1.0800456
   1.3956257  -1.0432675  -1.426875    1.8769516 ]
 [-1.9545612  -1.8449999   0.5088439  -0.224022    0.66320896  0.0830382
   0.446295    0.53221494 -1.3742915   2.7460556 ]
 [-0.09865901 -1.7315376   2.2724695   0.11809641  1.0834117   2.8048902
   2.7064822   0.84583855  1.7404972   0.19983661]] [0 0 1 0 1]
MLLITE_FIT_USING_MODEL mllite_decision_tree_class.DecisionTreeClassifier_ff4_il8
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ib1_ib1'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ib1_ih2'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ib1_ii4'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ib1_il8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ib1_ff4'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ib1_fd8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ib1_OO8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ih2_ib1'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ih2_ih2'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ih2_ii4'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ih2_il8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ih2_ff4'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ih2_fd8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ih2_OO8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ii4_ib1'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ii4_ih2'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ii4_ii4'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ii4_il8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ii4_ff4'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ii4_fd8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ii4_OO8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_il8_ib1'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_il8_ih2'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_il8_ii4'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_il8_il8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_il8_ff4'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_il8_fd8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_il8_OO8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ff4_ib1'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ff4_ih2'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ff4_ii4'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ff4_il8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ff4_ff4'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ff4_fd8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ff4_OO8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_fd8_ib1'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_fd8_ih2'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_fd8_ii4'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_fd8_il8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_fd8_ff4'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_fd8_fd8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_fd8_OO8'
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_CLASSIFIER_FIT' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 0 128
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 128 128
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_CLASSIFIER_FIT' 2 4
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_CLASSIFIER_FIT' 3 4
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_CLASSIFIER_FIT' 4 4
('OPERATION_END_ELAPSED', 0.014, 'TRAINING')
{ ,  "max_leaf_nodes" : 64 }
{ ,  "max_leaf_nodes" : 64 }
{
	"metadata" : { "model" : "Breiman_CART", "version" : "2024-W13", "signature" : "ff4_il8"},
	"options" : { "ccp_alpha" : 0.000000, "criterion" : "", "max_depth" : null, "max_features" : null, "max_leaf_nodes" : 64, "min_impurity_decrease" : 0.000000, "min_samples_leaf" : 1, "min_samples_split" : 2, "min_weight_fraction_leaf" : 0.000000, "random_state" : 1789, "splitter" : "best" },
	"dataset" : { "dataset_rows" : 128, "dataset_features" : 10 },
	"classes" : [ 0, 1 ],
	"tree" : {
	"features" : 10,
	"outputs" : 2,
	"max_depth" : 6,
	"node_count" : 39,
	"nodes" : {
		"node_00" : {"left" : 1, "right" : 2, "feature" : 5, "threshold" : 0.088803, "impurity" : 0.498901, "n_samples" : 128, "w_samples" : 128.000000, "value" : [0.476562, 0.523438]},
		"node_01" : {"left" : 5, "right" : 6, "feature" : 3, "threshold" : -0.967228, "impurity" : 0.316345, "n_samples" : 66, "w_samples" : 66.000000, "value" : [0.803030, 0.196970]},
		"node_02" : {"left" : 3, "right" : 4, "feature" : 6, "threshold" : -0.178653, "impurity" : 0.224766, "n_samples" : 62, "w_samples" : 62.000000, "value" : [0.129032, 0.870968]},
		"node_03" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [1.000000, 0.000000]},
		"node_04" : {"left" : 13, "right" : 14, "feature" : 5, "threshold" : 0.860748, "impurity" : 0.180000, "n_samples" : 60, "w_samples" : 60.000000, "value" : [0.100000, 0.900000]},
		"node_05" : {"left" : 7, "right" : 8, "feature" : 2, "threshold" : 0.246573, "impurity" : 0.493827, "n_samples" : 9, "w_samples" : 9.000000, "value" : [0.444444, 0.555556]},
		"node_06" : {"left" : 23, "right" : 24, "feature" : 5, "threshold" : -0.482162, "impurity" : 0.241305, "n_samples" : 57, "w_samples" : 57.000000, "value" : [0.859649, 0.140351]},
		"node_07" : {"left" : 9, "right" : 10, "feature" : 8, "threshold" : 0.535347, "impurity" : 0.444444, "n_samples" : 6, "w_samples" : 6.000000, "value" : [0.666667, 0.333333]},
		"node_08" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 3, "w_samples" : 3.000000, "value" : [0.000000, 1.000000]},
		"node_09" : {"left" : 11, "right" : 12, "feature" : 6, "threshold" : -0.049993, "impurity" : 0.444444, "n_samples" : 3, "w_samples" : 3.000000, "value" : [0.333333, 0.666667]},
		"node_10" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 3, "w_samples" : 3.000000, "value" : [1.000000, 0.000000]},
		"node_11" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [0.000000, 1.000000]},
		"node_12" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.000000, 0.000000]},
		"node_13" : {"left" : 15, "right" : 16, "feature" : 6, "threshold" : 1.051927, "impurity" : 0.364800, "n_samples" : 25, "w_samples" : 25.000000, "value" : [0.240000, 0.760000]},
		"node_14" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 35, "w_samples" : 35.000000, "value" : [0.000000, 1.000000]},
		"node_15" : {"left" : 17, "right" : 18, "feature" : 0, "threshold" : 1.277125, "impurity" : 0.287335, "n_samples" : 23, "w_samples" : 23.000000, "value" : [0.173913, 0.826087]},
		"node_16" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [1.000000, 0.000000]},
		"node_17" : {"left" : 19, "right" : 20, "feature" : 2, "threshold" : 1.054227, "impurity" : 0.172336, "n_samples" : 21, "w_samples" : 21.000000, "value" : [0.095238, 0.904762]},
		"node_18" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [1.000000, 0.000000]},
		"node_19" : {"left" : 21, "right" : 22, "feature" : 3, "threshold" : 1.437544, "impurity" : 0.095000, "n_samples" : 20, "w_samples" : 20.000000, "value" : [0.050000, 0.950000]},
		"node_20" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.000000, 0.000000]},
		"node_21" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 19, "w_samples" : 19.000000, "value" : [0.000000, 1.000000]},
		"node_22" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.000000, 0.000000]},
		"node_23" : {"left" : 33, "right" : 34, "feature" : 4, "threshold" : 0.403673, "impurity" : 0.132653, "n_samples" : 42, "w_samples" : 42.000000, "value" : [0.928571, 0.071429]},
		"node_24" : {"left" : 25, "right" : 26, "feature" : 5, "threshold" : -0.372423, "impurity" : 0.444444, "n_samples" : 15, "w_samples" : 15.000000, "value" : [0.666667, 0.333333]},
		"node_25" : {"left" : 27, "right" : 28, "feature" : 6, "threshold" : -0.598637, "impurity" : 0.444444, "n_samples" : 6, "w_samples" : 6.000000, "value" : [0.333333, 0.666667]},
		"node_26" : {"left" : 29, "right" : 30, "feature" : 4, "threshold" : 0.904896, "impurity" : 0.197531, "n_samples" : 9, "w_samples" : 9.000000, "value" : [0.888889, 0.111111]},
		"node_27" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [1.000000, 0.000000]},
		"node_28" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 4, "w_samples" : 4.000000, "value" : [0.000000, 1.000000]},
		"node_29" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 7, "w_samples" : 7.000000, "value" : [1.000000, 0.000000]},
		"node_30" : {"left" : 31, "right" : 32, "feature" : 0, "threshold" : -0.292278, "impurity" : 0.500000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [0.500000, 0.500000]},
		"node_31" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 1.000000]},
		"node_32" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.000000, 0.000000]},
		"node_33" : {"left" : 35, "right" : 36, "feature" : 4, "threshold" : -0.127147, "impurity" : 0.290657, "n_samples" : 17, "w_samples" : 17.000000, "value" : [0.823529, 0.176471]},
		"node_34" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 25, "w_samples" : 25.000000, "value" : [1.000000, 0.000000]},
		"node_35" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 13, "w_samples" : 13.000000, "value" : [1.000000, 0.000000]},
		"node_36" : {"left" : 37, "right" : 38, "feature" : 6, "threshold" : -1.357827, "impurity" : 0.375000, "n_samples" : 4, "w_samples" : 4.000000, "value" : [0.250000, 0.750000]},
		"node_37" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.000000, 0.000000]},
		"node_38" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 3, "w_samples" : 3.000000, "value" : [0.000000, 1.000000]}
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/DecisionTreeClassifier/mllite.DecisionTreeClassifier_BinaryClass_10_sampled.json'

MLLITE_MODEL_SET_OPTIONS DecisionTreeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT DecisionTreeClassifier { "max_leaf_nodes" : 64}
MLLITE_MODEL_OPTIONS_AFTER_SETTING DecisionTreeClassifier { ,  "max_leaf_nodes" : 64 }
MLLITE_MODEL_JSON_AFTER_SETTING DecisionTreeClassifier None
MLLITE_RELOADING_MODEL mllite_decision_tree_class.DecisionTreeClassifier_ff4_il8
{
	"metadata" : { "model" : "Breiman_CART", "version" : "2024-W13", "signature" : "ff4_il8"},
	"options" : { "ccp_alpha" : 0.000000, "criterion" : "", "max_depth" : null, "max_features" : null, "max_leaf_nodes" : 64, "min_impurity_decrease" : 0.000000, "min_samples_leaf" : 1, "min_samples_split" : 2, "min_weight_fraction_leaf" : 0.000000, "random_state" : 1789, "splitter" : "best" },
	"dataset" : { "dataset_rows" : 128, "dataset_features" : 10 },
	"classes" : [ 0, 1 ],
	"tree" : {
	"features" : 10,
	"outputs" : 2,
	"max_depth" : 6,
	"node_count" : 39,
	"nodes" : {
		"node_00" : {"left" : 1, "right" : 2, "feature" : 5, "threshold" : 0.088803, "impurity" : 0.498901, "n_samples" : 128, "w_samples" : 128.000000, "value" : [0.476562, 0.523438]},
		"node_01" : {"left" : 5, "right" : 6, "feature" : 3, "threshold" : -0.967228, "impurity" : 0.316345, "n_samples" : 66, "w_samples" : 66.000000, "value" : [0.803030, 0.196970]},
		"node_02" : {"left" : 3, "right" : 4, "feature" : 6, "threshold" : -0.178653, "impurity" : 0.224766, "n_samples" : 62, "w_samples" : 62.000000, "value" : [0.129032, 0.870968]},
		"node_03" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [1.000000, 0.000000]},
		"node_04" : {"left" : 13, "right" : 14, "feature" : 5, "threshold" : 0.860748, "impurity" : 0.180000, "n_samples" : 60, "w_samples" : 60.000000, "value" : [0.100000, 0.900000]},
		"node_05" : {"left" : 7, "right" : 8, "feature" : 2, "threshold" : 0.246573, "impurity" : 0.493827, "n_samples" : 9, "w_samples" : 9.000000, "value" : [0.444444, 0.555556]},
		"node_06" : {"left" : 23, "right" : 24, "feature" : 5, "threshold" : -0.482162, "impurity" : 0.241305, "n_samples" : 57, "w_samples" : 57.000000, "value" : [0.859649, 0.140351]},
		"node_07" : {"left" : 9, "right" : 10, "feature" : 8, "threshold" : 0.535347, "impurity" : 0.444444, "n_samples" : 6, "w_samples" : 6.000000, "value" : [0.666667, 0.333333]},
		"node_08" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 3, "w_samples" : 3.000000, "value" : [0.000000, 1.000000]},
		"node_09" : {"left" : 11, "right" : 12, "feature" : 6, "threshold" : -0.049993, "impurity" : 0.444444, "n_samples" : 3, "w_samples" : 3.000000, "value" : [0.333333, 0.666667]},
		"node_10" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 3, "w_samples" : 3.000000, "value" : [1.000000, 0.000000]},
		"node_11" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [0.000000, 1.000000]},
		"node_12" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.000000, 0.000000]},
		"node_13" : {"left" : 15, "right" : 16, "feature" : 6, "threshold" : 1.051927, "impurity" : 0.364800, "n_samples" : 25, "w_samples" : 25.000000, "value" : [0.240000, 0.760000]},
		"node_14" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 35, "w_samples" : 35.000000, "value" : [0.000000, 1.000000]},
		"node_15" : {"left" : 17, "right" : 18, "feature" : 0, "threshold" : 1.277125, "impurity" : 0.287335, "n_samples" : 23, "w_samples" : 23.000000, "value" : [0.173913, 0.826087]},
		"node_16" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [1.000000, 0.000000]},
		"node_17" : {"left" : 19, "right" : 20, "feature" : 2, "threshold" : 1.054227, "impurity" : 0.172336, "n_samples" : 21, "w_samples" : 21.000000, "value" : [0.095238, 0.904762]},
		"node_18" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [1.000000, 0.000000]},
		"node_19" : {"left" : 21, "right" : 22, "feature" : 3, "threshold" : 1.437544, "impurity" : 0.095000, "n_samples" : 20, "w_samples" : 20.000000, "value" : [0.050000, 0.950000]},
		"node_20" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.000000, 0.000000]},
		"node_21" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 19, "w_samples" : 19.000000, "value" : [0.000000, 1.000000]},
		"node_22" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.000000, 0.000000]},
		"node_23" : {"left" : 33, "right" : 34, "feature" : 4, "threshold" : 0.403673, "impurity" : 0.132653, "n_samples" : 42, "w_samples" : 42.000000, "value" : [0.928571, 0.071429]},
		"node_24" : {"left" : 25, "right" : 26, "feature" : 5, "threshold" : -0.372423, "impurity" : 0.444444, "n_samples" : 15, "w_samples" : 15.000000, "value" : [0.666667, 0.333333]},
		"node_25" : {"left" : 27, "right" : 28, "feature" : 6, "threshold" : -0.598637, "impurity" : 0.444444, "n_samples" : 6, "w_samples" : 6.000000, "value" : [0.333333, 0.666667]},
		"node_26" : {"left" : 29, "right" : 30, "feature" : 4, "threshold" : 0.904896, "impurity" : 0.197531, "n_samples" : 9, "w_samples" : 9.000000, "value" : [0.888889, 0.111111]},
		"node_27" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [1.000000, 0.000000]},
		"node_28" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 4, "w_samples" : 4.000000, "value" : [0.000000, 1.000000]},
		"node_29" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 7, "w_samples" : 7.000000, "value" : [1.000000, 0.000000]},
		"node_30" : {"left" : 31, "right" : 32, "feature" : 0, "threshold" : -0.292278, "impurity" : 0.500000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [0.500000, 0.500000]},
		"node_31" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 1.000000]},
		"node_32" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.000000, 0.000000]},
		"node_33" : {"left" : 35, "right" : 36, "feature" : 4, "threshold" : -0.127147, "impurity" : 0.290657, "n_samples" : 17, "w_samples" : 17.000000, "value" : [0.823529, 0.176471]},
		"node_34" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 25, "w_samples" : 25.000000, "value" : [1.000000, 0.000000]},
		"node_35" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 13, "w_samples" : 13.000000, "value" : [1.000000, 0.000000]},
		"node_36" : {"left" : 37, "right" : 38, "feature" : 6, "threshold" : -1.357827, "impurity" : 0.375000, "n_samples" : 4, "w_samples" : 4.000000, "value" : [0.250000, 0.750000]},
		"node_37" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.000000, 0.000000]},
		"node_38" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 3, "w_samples" : 3.000000, "value" : [0.000000, 1.000000]}
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1 ],
	"dataset" : 	{
		"dataset_features" : 10,
		"dataset_rows" : 128
	},
	"metadata" :  { "model" : "Breiman_CART", "signature" : "ff4_il8", "version" : "2024-W13" },
	"options" :  { "ccp_alpha" : 0.0, "criterion" : "", "max_depth" : null, "max_features" : null, "max_leaf_nodes" : 64, "min_impurity_decrease" : 0.0, "min_samples_leaf" : 1, "min_samples_split" : 2, "min_weight_fraction_leaf" : 0.0, "random_state" : 1789, "splitter" : "best" },
	"tree" : 	{
		"features" : 10,
		"max_depth" : 6,
		"node_count" : 39,
		"nodes" : 	{
			"node_00" :  { "feature" : 5, "impurity" : 0.498901, "left" : 1, "n_samples" : 128, "right" : 2, "threshold" : 0.088803, "value" : [ 0.476562, 0.523438 ], "w_samples" : 128.0 },
			"node_01" :  { "feature" : 3, "impurity" : 0.316345, "left" : 5, "n_samples" : 66, "right" : 6, "threshold" : -0.967228, "value" : [ 0.80303, 0.19697 ], "w_samples" : 66.0 },
			"node_02" :  { "feature" : 6, "impurity" : 0.224766, "left" : 3, "n_samples" : 62, "right" : 4, "threshold" : -0.178653, "value" : [ 0.129032, 0.870968 ], "w_samples" : 62.0 },
			"node_03" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 2, "right" : null, "threshold" : null, "value" : [ 1.0, 0.0 ], "w_samples" : 2.0 },
			"node_04" :  { "feature" : 5, "impurity" : 0.18, "left" : 13, "n_samples" : 60, "right" : 14, "threshold" : 0.860748, "value" : [ 0.1, 0.9 ], "w_samples" : 60.0 },
			"node_05" :  { "feature" : 2, "impurity" : 0.493827, "left" : 7, "n_samples" : 9, "right" : 8, "threshold" : 0.246573, "value" : [ 0.444444, 0.555556 ], "w_samples" : 9.0 },
			"node_06" :  { "feature" : 5, "impurity" : 0.241305, "left" : 23, "n_samples" : 57, "right" : 24, "threshold" : -0.482162, "value" : [ 0.859649, 0.140351 ], "w_samples" : 57.0 },
			"node_07" :  { "feature" : 8, "impurity" : 0.444444, "left" : 9, "n_samples" : 6, "right" : 10, "threshold" : 0.535347, "value" : [ 0.666667, 0.333333 ], "w_samples" : 6.0 },
			"node_08" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 3, "right" : null, "threshold" : null, "value" : [ 0.0, 1.0 ], "w_samples" : 3.0 },
			"node_09" :  { "feature" : 6, "impurity" : 0.444444, "left" : 11, "n_samples" : 3, "right" : 12, "threshold" : -0.049993, "value" : [ 0.333333, 0.666667 ], "w_samples" : 3.0 },
			"node_10" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 3, "right" : null, "threshold" : null, "value" : [ 1.0, 0.0 ], "w_samples" : 3.0 },
			"node_11" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 2, "right" : null, "threshold" : null, "value" : [ 0.0, 1.0 ], "w_samples" : 2.0 },
			"node_12" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 1.0, 0.0 ], "w_samples" : 1.0 },
			"node_13" :  { "feature" : 6, "impurity" : 0.3648, "left" : 15, "n_samples" : 25, "right" : 16, "threshold" : 1.051927, "value" : [ 0.24, 0.76 ], "w_samples" : 25.0 },
			"node_14" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 35, "right" : null, "threshold" : null, "value" : [ 0.0, 1.0 ], "w_samples" : 35.0 },
			"node_15" :  { "feature" : 0, "impurity" : 0.287335, "left" : 17, "n_samples" : 23, "right" : 18, "threshold" : 1.277125, "value" : [ 0.173913, 0.826087 ], "w_samples" : 23.0 },
			"node_16" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 2, "right" : null, "threshold" : null, "value" : [ 1.0, 0.0 ], "w_samples" : 2.0 },
			"node_17" :  { "feature" : 2, "impurity" : 0.172336, "left" : 19, "n_samples" : 21, "right" : 20, "threshold" : 1.054227, "value" : [ 0.095238, 0.904762 ], "w_samples" : 21.0 },
			"node_18" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 2, "right" : null, "threshold" : null, "value" : [ 1.0, 0.0 ], "w_samples" : 2.0 },
			"node_19" :  { "feature" : 3, "impurity" : 0.095, "left" : 21, "n_samples" : 20, "right" : 22, "threshold" : 1.437544, "value" : [ 0.05, 0.95 ], "w_samples" : 20.0 },
			"node_20" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 1.0, 0.0 ], "w_samples" : 1.0 },
			"node_21" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 19, "right" : null, "threshold" : null, "value" : [ 0.0, 1.0 ], "w_samples" : 19.0 },
			"node_22" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 1.0, 0.0 ], "w_samples" : 1.0 },
			"node_23" :  { "feature" : 4, "impurity" : 0.132653, "left" : 33, "n_samples" : 42, "right" : 34, "threshold" : 0.403673, "value" : [ 0.928571, 0.071429 ], "w_samples" : 42.0 },
			"node_24" :  { "feature" : 5, "impurity" : 0.444444, "left" : 25, "n_samples" : 15, "right" : 26, "threshold" : -0.372423, "value" : [ 0.666667, 0.333333 ], "w_samples" : 15.0 },
			"node_25" :  { "feature" : 6, "impurity" : 0.444444, "left" : 27, "n_samples" : 6, "right" : 28, "threshold" : -0.598637, "value" : [ 0.333333, 0.666667 ], "w_samples" : 6.0 },
			"node_26" :  { "feature" : 4, "impurity" : 0.197531, "left" : 29, "n_samples" : 9, "right" : 30, "threshold" : 0.904896, "value" : [ 0.888889, 0.111111 ], "w_samples" : 9.0 },
			"node_27" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 2, "right" : null, "threshold" : null, "value" : [ 1.0, 0.0 ], "w_samples" : 2.0 },
			"node_28" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 4, "right" : null, "threshold" : null, "value" : [ 0.0, 1.0 ], "w_samples" : 4.0 },
			"node_29" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 7, "right" : null, "threshold" : null, "value" : [ 1.0, 0.0 ], "w_samples" : 7.0 },
			"node_30" :  { "feature" : 0, "impurity" : 0.5, "left" : 31, "n_samples" : 2, "right" : 32, "threshold" : -0.292278, "value" : [ 0.5, 0.5 ], "w_samples" : 2.0 },
			"node_31" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 0.0, 1.0 ], "w_samples" : 1.0 },
			"node_32" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 1.0, 0.0 ], "w_samples" : 1.0 },
			"node_33" :  { "feature" : 4, "impurity" : 0.290657, "left" : 35, "n_samples" : 17, "right" : 36, "threshold" : -0.127147, "value" : [ 0.823529, 0.176471 ], "w_samples" : 17.0 },
			"node_34" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 25, "right" : null, "threshold" : null, "value" : [ 1.0, 0.0 ], "w_samples" : 25.0 },
			"node_35" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 13, "right" : null, "threshold" : null, "value" : [ 1.0, 0.0 ], "w_samples" : 13.0 },
			"node_36" :  { "feature" : 6, "impurity" : 0.375, "left" : 37, "n_samples" : 4, "right" : 38, "threshold" : -1.357827, "value" : [ 0.25, 0.75 ], "w_samples" : 4.0 },
			"node_37" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 1.0, 0.0 ], "w_samples" : 1.0 },
			"node_38" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 3, "right" : null, "threshold" : null, "value" : [ 0.0, 1.0 ], "w_samples" : 3.0 }
		},
		"outputs" : 2
	}
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[1. 0.]
 [1. 0.]
 [0. 1.]
 [1. 0.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [0. 1.]
 [1. 0.]
 [0. 1.]
 [1. 0.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [1. 0.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [1. 0.]
 [0. 1.]
 [1. 0.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [1. 0.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [0. 1.]
 [1. 0.]
 [1. 0.]
 [0. 1.]
 [0. 1.]
 [1. 0.]
 [0. 1.]
 [1. 0.]
 [0. 1.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [0. 1.]
 [0. 1.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [0. 1.]
 [1. 0.]
 [0. 1.]
 [1. 0.]
 [0. 1.]
 [1. 0.]
 [0. 1.]
 [1. 0.]
 [1. 0.]
 [0. 1.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [1. 0.]
 [0. 1.]
 [1. 0.]
 [1. 0.]
 [0. 1.]
 [0. 1.]
 [1. 0.]
 [0. 1.]
 [1. 0.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [1. 0.]
 [0. 1.]
 [0. 1.]
 [1. 0.]
 [0. 1.]
 [1. 0.]
 [1. 0.]
 [0. 1.]
 [0. 1.]
 [1. 0.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [1. 0.]
 [0. 1.]
 [1. 0.]
 [0. 1.]
 [0. 1.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [1. 0.]
 [0. 1.]
 [0. 1.]
 [1. 0.]
 [0. 1.]]
(128, 2)
(128,) float32
MODEL_PERFS {'class_name': 'mllite.DecisionTreeClassifier', 'model_name': 'DecisionTreeClassifier', 'options': None, 'dataset': 'BinaryClass_10_sampled', 'size': 128, 'accuracy': 1.0, 'auc': 1.0}
WRITING_PERF_CODE 'logs/auto_tests/classification/DecisionTreeClassifier/mllite.DecisionTreeClassifier_BinaryClass_10_sampled.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.DecisionTreeClassifier', 'model_name': 'DecisionTreeClassifier', 'options': None, 'dataset': 'BinaryClass_10_sampled', 'training_time_in_sec': 0.014, 'prediction_time_in_sec': 0.0}
WRITING_SQL_CODE 'logs/auto_tests/classification/DecisionTreeClassifier/mllite.DecisionTreeClassifier_BinaryClass_10_sampled_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('BinaryClass_10_sampled', 'DecisionTreeClassifier', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
"DT_node_lookup" AS 
 (SELECT
    t."index" AS "index",
    COALESCE( t1."Leaf_3", t1."Leaf_8", t1."Leaf_10", t1."Leaf_11", t1."Leaf_12", t1."Leaf_14", t1."Leaf_16", t1."Leaf_18", t1."Leaf_20", t1."Leaf_21", t1."Leaf_22", t1."Leaf_27", t1."Leaf_28", t1."Leaf_29", t1."Leaf_31", t1."Leaf_32", t1."Leaf_34", t1."Leaf_35", t1."Leaf_37", t1."Leaf_38" ) AS node_id
  FROM
    "model_input" AS t
    LEFT OUTER JOIN
   (SELECT
      t."index" AS "index",
      CASE WHEN((t."X_5" > 0.088803) AND (t."X_6" <= -0.178653)) THEN 3 ELSE NULL END AS "Leaf_3",
     
SQL_OUT_PUT_FIRST_LINES_END ('BinaryClass_10_sampled', 'DecisionTreeClassifier', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('BinaryClass_10_sampled', 'DecisionTreeClassifier', 'duckdb')
S "P_0", 0.000000 AS "P_1", 0 AS "D", 1.000000 AS "DP"
    UNION ALL
    SELECT 38 AS nid,  0.000000 AS "P_0", 1.000000 AS "P_1", 1 AS "D", 1.000000 AS "DP"
  ) AS "Values"),
"DT_Output" AS 
 (SELECT
   t1."index" AS "index",
   t1.node_id AS node_id,
   t2.nid AS nid,
   t2."P_0" AS "P_0", t2."P_1" AS "P_1", 
   t2."D" AS "D", 
   t2."DP" AS "DP"
  FROM
   "DT_node_lookup" AS t1
   LEFT OUTER JOIN
   "DT_node_data" AS t2
   ON t1.node_id = t2.nid
 )
SELECT
   "DT_Output"."index" AS "index",
   CAST(NULL AS FLOAT)  AS "Score_0",
   "DT_Output"."P_0" AS "Proba_0",
   CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN LN( "DT_Output"."P_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
   CAST(NULL AS FLOAT)  AS "Score_1",
   "DT_Output"."P_1" AS "Proba_1",
   CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN LN( "DT_Output"."P_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
   "DT_Output"."D" AS "Decision",
   "DT_Output"."DP" AS "DecisionProba"
FROM "DT_Output"
SQL_OUT_PUT_LAST_LINES_END ('BinaryClass_10_sampled', 'DecisionTreeClassifier', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 128 entries, 0 to 127
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     128 non-null    float32
 1   X_1     128 non-null    float32
 2   X_2     128 non-null    float32
 3   X_3     128 non-null    float32
 4   X_4     128 non-null    float32
 5   X_5     128 non-null    float32
 6   X_6     128 non-null    float32
 7   X_7     128 non-null    float32
 8   X_8     128 non-null    float32
 9   X_9     128 non-null    float32
dtypes: float32(10)
memory usage: 6.0 KB
            X_0       X_1       X_2  ...       X_7       X_8       X_9
index                                ...                              
0     -1.064559 -0.820872 -0.723270  ...  0.652010 -0.319080 -0.383915
1     -0.960957 -1.294560 -0.778172  ... -0.518959  0.207019 -0.945521
2     -1.406136 -0.242116  1.301289  ... -1.043267 -1.426875  1.876952
3     -1.954561 -1.845000  0.508844  ...  0.532215 -1.374292  2.746056
4     -0.098659 -1.731538  2.272470  ...  0.845839  1.740497  0.199837
...         ...       ...       ...  ...       ...       ...       ...
123    0.637167  0.266685 -2.101867  ...  0.620480  0.443480  0.295088
124    1.237566  0.635414  1.362477  ... -2.311953 -1.462748 -0.264504
125   -2.188798  1.247514 -0.196171  ...  1.521653 -0.605569 -1.014692
126    1.684683  1.206950  0.344897  ... -0.703913 -0.717647  0.491219
127   -0.873119 -0.340358 -0.067087  ... -0.895793 -0.526077  1.201329

[128 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 128 entries, 0 to 127
Data columns (total 9 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          128 non-null    int64  
 1   Score_0        0 non-null      object 
 2   Proba_0        128 non-null    float64
 3   LogProba_0     128 non-null    float64
 4   Score_1        0 non-null      object 
 5   Proba_1        128 non-null    float64
 6   LogProba_1     128 non-null    float64
 7   Decision       128 non-null    int64  
 8   DecisionProba  128 non-null    float64
dtypes: float64(5), int64(2), object(2)
memory usage: 9.1+ KB
     index Score_0  Proba_0  ...     LogProba_1 Decision  DecisionProba
0        0    None      1.0  ... -1.797693e+308        0            1.0
1        1    None      1.0  ... -1.797693e+308        0            1.0
2        2    None      0.0  ...   0.000000e+00        1            1.0
3        3    None      1.0  ... -1.797693e+308        0            1.0
4        4    None      0.0  ...   0.000000e+00        1            1.0
..     ...     ...      ...  ...            ...      ...            ...
123    123    None      1.0  ... -1.797693e+308        0            1.0
124    124    None      0.0  ...   0.000000e+00        1            1.0
125    125    None      0.0  ...   0.000000e+00        1            1.0
126    126    None      1.0  ... -1.797693e+308        0            1.0
127    127    None      0.0  ...   0.000000e+00        1            1.0

[128 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
     index Score_0  SQL_Proba_0  ...  Py_Proba_0 Py_Proba_1  Py_Decision
112    112    None          0.0  ...         0.0        1.0            1
113    113    None          1.0  ...         1.0        0.0            0
114    114    None          0.0  ...         0.0        1.0            1
115    115    None          0.0  ...         0.0        1.0            1
116    116    None          1.0  ...         1.0        0.0            0
117    117    None          1.0  ...         1.0        0.0            0
118    118    None          1.0  ...         1.0        0.0            0
119    119    None          1.0  ...         1.0        0.0            0
120    120    None          0.0  ...         0.0        1.0            1
121    121    None          0.0  ...         0.0        1.0            1
122    122    None          0.0  ...         0.0        1.0            1
123    123    None          1.0  ...         1.0        0.0            0
124    124    None          0.0  ...         0.0        1.0            1
125    125    None          0.0  ...         0.0        1.0            1
126    126    None          1.0  ...         1.0        0.0            0
127    127    None          0.0  ...         0.0        1.0            1

[16 rows x 12 columns]
MLLITE_CLASS_SQL_ERROR ('BinaryClass_10_sampled', 'DecisionTreeClassifier', 'duckdb') ('Py_Proba_0', 'SQL_Proba_0') 0.0
     Py_Proba_0  SQL_Proba_0  SQL_Error_0
112         0.0          0.0          0.0
113         1.0          1.0          0.0
114         0.0          0.0          0.0
115         0.0          0.0          0.0
116         1.0          1.0          0.0
117         1.0          1.0          0.0
118         1.0          1.0          0.0
119         1.0          1.0          0.0
120         0.0          0.0          0.0
121         0.0          0.0          0.0
122         0.0          0.0          0.0
123         1.0          1.0          0.0
124         0.0          0.0          0.0
125         0.0          0.0          0.0
126         1.0          1.0          0.0
127         0.0          0.0          0.0
MLLITE_CLASS_SQL_ERROR ('BinaryClass_10_sampled', 'DecisionTreeClassifier', 'duckdb') ('Py_Proba_1', 'SQL_Proba_1') 0.0
     Py_Proba_1  SQL_Proba_1  SQL_Error_1
112         1.0          1.0          0.0
113         0.0          0.0          0.0
114         1.0          1.0          0.0
115         1.0          1.0          0.0
116         0.0          0.0          0.0
117         0.0          0.0          0.0
118         0.0          0.0          0.0
119         0.0          0.0          0.0
120         1.0          1.0          0.0
121         1.0          1.0          0.0
122         1.0          1.0          0.0
123         0.0          0.0          0.0
124         1.0          1.0          0.0
125         1.0          1.0          0.0
126         0.0          0.0          0.0
127         1.0          1.0          0.0
MLLITE_CLASS_SQL_EXECUTION_STATUS ('BinaryClass_10_sampled', 'DecisionTreeClassifier', 'duckdb', 'Success')
     Py_Decision  SQL_Decision
112            1             1
113            0             0
114            1             1
115            1             1
116            0             0
117            0             0
118            0             0
119            0             0
120            1             1
121            1             1
122            1             1
123            0             0
124            1             1
125            1             1
126            0             0
127            1             1
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/DecisionTreeClassifier/mllite.DecisionTreeClassifier_BinaryClass_10_sampled_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('BinaryClass_10_sampled', 'DecisionTreeClassifier', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
"DT_node_lookup" AS 
 (SELECT
    t."index" AS "index",
    COALESCE( t1."Leaf_3", t1."Leaf_8", t1."Leaf_10", t1."Leaf_11", t1."Leaf_12", t1."Leaf_14", t1."Leaf_16", t1."Leaf_18", t1."Leaf_20", t1."Leaf_21", t1."Leaf_22", t1."Leaf_27", t1."Leaf_28", t1."Leaf_29", t1."Leaf_31", t1."Leaf_32", t1."Leaf_34", t1."Leaf_35", t1."Leaf_37", t1."Leaf_38" ) AS node_id
  FROM
    "model_input" AS t
    LEFT OUTER JOIN
   (SELECT
      t."index" AS "index",
      CASE WHEN((t."X_5" > 0.088803) AND (t."X_6" <= -0.178653)) THEN 3 ELSE NULL END AS "Leaf_3",
     
SQL_OUT_PUT_FIRST_LINES_END ('BinaryClass_10_sampled', 'DecisionTreeClassifier', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('BinaryClass_10_sampled', 'DecisionTreeClassifier', 'sqlite')
S "P_0", 0.000000 AS "P_1", 0 AS "D", 1.000000 AS "DP"
    UNION ALL
    SELECT 38 AS nid,  0.000000 AS "P_0", 1.000000 AS "P_1", 1 AS "D", 1.000000 AS "DP"
  ) AS "Values"),
"DT_Output" AS 
 (SELECT
   t1."index" AS "index",
   t1.node_id AS node_id,
   t2.nid AS nid,
   t2."P_0" AS "P_0", t2."P_1" AS "P_1", 
   t2."D" AS "D", 
   t2."DP" AS "DP"
  FROM
   "DT_node_lookup" AS t1
   LEFT OUTER JOIN
   "DT_node_data" AS t2
   ON t1.node_id = t2.nid
 )
SELECT
   "DT_Output"."index" AS "index",
   CAST(NULL AS FLOAT)  AS "Score_0",
   "DT_Output"."P_0" AS "Proba_0",
   CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN LN( "DT_Output"."P_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
   CAST(NULL AS FLOAT)  AS "Score_1",
   "DT_Output"."P_1" AS "Proba_1",
   CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN LN( "DT_Output"."P_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
   "DT_Output"."D" AS "Decision",
   "DT_Output"."DP" AS "DecisionProba"
FROM "DT_Output"
SQL_OUT_PUT_LAST_LINES_END ('BinaryClass_10_sampled', 'DecisionTreeClassifier', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 128 entries, 0 to 127
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     128 non-null    float32
 1   X_1     128 non-null    float32
 2   X_2     128 non-null    float32
 3   X_3     128 non-null    float32
 4   X_4     128 non-null    float32
 5   X_5     128 non-null    float32
 6   X_6     128 non-null    float32
 7   X_7     128 non-null    float32
 8   X_8     128 non-null    float32
 9   X_9     128 non-null    float32
dtypes: float32(10)
memory usage: 6.0 KB
            X_0       X_1       X_2  ...       X_7       X_8       X_9
index                                ...                              
0     -1.064559 -0.820872 -0.723270  ...  0.652010 -0.319080 -0.383915
1     -0.960957 -1.294560 -0.778172  ... -0.518959  0.207019 -0.945521
2     -1.406136 -0.242116  1.301289  ... -1.043267 -1.426875  1.876952
3     -1.954561 -1.845000  0.508844  ...  0.532215 -1.374292  2.746056
4     -0.098659 -1.731538  2.272470  ...  0.845839  1.740497  0.199837
...         ...       ...       ...  ...       ...       ...       ...
123    0.637167  0.266685 -2.101867  ...  0.620480  0.443480  0.295088
124    1.237566  0.635414  1.362477  ... -2.311953 -1.462748 -0.264504
125   -2.188798  1.247514 -0.196171  ...  1.521653 -0.605569 -1.014692
126    1.684683  1.206950  0.344897  ... -0.703913 -0.717647  0.491219
127   -0.873119 -0.340358 -0.067087  ... -0.895793 -0.526077  1.201329

[128 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 128 entries, 0 to 127
Data columns (total 9 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          128 non-null    int64  
 1   Score_0        0 non-null      object 
 2   Proba_0        128 non-null    float64
 3   LogProba_0     128 non-null    float64
 4   Score_1        0 non-null      object 
 5   Proba_1        128 non-null    float64
 6   LogProba_1     128 non-null    float64
 7   Decision       128 non-null    int64  
 8   DecisionProba  128 non-null    float64
dtypes: float64(5), int64(2), object(2)
memory usage: 9.1+ KB
     index Score_0  Proba_0  ...     LogProba_1 Decision  DecisionProba
0        0    None      1.0  ... -1.797693e+308        0            1.0
1        1    None      1.0  ... -1.797693e+308        0            1.0
2        2    None      0.0  ...   0.000000e+00        1            1.0
3        3    None      1.0  ... -1.797693e+308        0            1.0
4        4    None      0.0  ...   0.000000e+00        1            1.0
..     ...     ...      ...  ...            ...      ...            ...
123    123    None      1.0  ... -1.797693e+308        0            1.0
124    124    None      0.0  ...   0.000000e+00        1            1.0
125    125    None      0.0  ...   0.000000e+00        1            1.0
126    126    None      1.0  ... -1.797693e+308        0            1.0
127    127    None      0.0  ...   0.000000e+00        1            1.0

[128 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
     index Score_0  SQL_Proba_0  ...  Py_Proba_0 Py_Proba_1  Py_Decision
112    112    None          0.0  ...         0.0        1.0            1
113    113    None          1.0  ...         1.0        0.0            0
114    114    None          0.0  ...         0.0        1.0            1
115    115    None          0.0  ...         0.0        1.0            1
116    116    None          1.0  ...         1.0        0.0            0
117    117    None          1.0  ...         1.0        0.0            0
118    118    None          1.0  ...         1.0        0.0            0
119    119    None          1.0  ...         1.0        0.0            0
120    120    None          0.0  ...         0.0        1.0            1
121    121    None          0.0  ...         0.0        1.0            1
122    122    None          0.0  ...         0.0        1.0            1
123    123    None          1.0  ...         1.0        0.0            0
124    124    None          0.0  ...         0.0        1.0            1
125    125    None          0.0  ...         0.0        1.0            1
126    126    None          1.0  ...         1.0        0.0            0
127    127    None          0.0  ...         0.0        1.0            1

[16 rows x 12 columns]
MLLITE_CLASS_SQL_ERROR ('BinaryClass_10_sampled', 'DecisionTreeClassifier', 'sqlite') ('Py_Proba_0', 'SQL_Proba_0') 0.0
     Py_Proba_0  SQL_Proba_0  SQL_Error_0
112         0.0          0.0          0.0
113         1.0          1.0          0.0
114         0.0          0.0          0.0
115         0.0          0.0          0.0
116         1.0          1.0          0.0
117         1.0          1.0          0.0
118         1.0          1.0          0.0
119         1.0          1.0          0.0
120         0.0          0.0          0.0
121         0.0          0.0          0.0
122         0.0          0.0          0.0
123         1.0          1.0          0.0
124         0.0          0.0          0.0
125         0.0          0.0          0.0
126         1.0          1.0          0.0
127         0.0          0.0          0.0
MLLITE_CLASS_SQL_ERROR ('BinaryClass_10_sampled', 'DecisionTreeClassifier', 'sqlite') ('Py_Proba_1', 'SQL_Proba_1') 0.0
     Py_Proba_1  SQL_Proba_1  SQL_Error_1
112         1.0          1.0          0.0
113         0.0          0.0          0.0
114         1.0          1.0          0.0
115         1.0          1.0          0.0
116         0.0          0.0          0.0
117         0.0          0.0          0.0
118         0.0          0.0          0.0
119         0.0          0.0          0.0
120         1.0          1.0          0.0
121         1.0          1.0          0.0
122         1.0          1.0          0.0
123         0.0          0.0          0.0
124         1.0          1.0          0.0
125         1.0          1.0          0.0
126         0.0          0.0          0.0
127         1.0          1.0          0.0
MLLITE_CLASS_SQL_EXECUTION_STATUS ('BinaryClass_10_sampled', 'DecisionTreeClassifier', 'sqlite', 'Success')
     Py_Decision  SQL_Decision
112            1             1
113            0             0
114            1             1
115            1             1
116            0             0
117            0             0
118            0             0
119            0             0
120            1             1
121            1             1
122            1             1
123            0             0
124            1             1
125            1             1
126            0             0
127            1             1
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/DecisionTreeClassifier/mllite.DecisionTreeClassifier_BinaryClass_10_sampled_pgsql.sql'



SQL_OUT_PUT_FIRST_LINES_START ('BinaryClass_10_sampled', 'DecisionTreeClassifier', 'pgsql')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
"DT_node_lookup" AS 
 (SELECT
    t."index" AS "index",
    COALESCE( t1."Leaf_3", t1."Leaf_8", t1."Leaf_10", t1."Leaf_11", t1."Leaf_12", t1."Leaf_14", t1."Leaf_16", t1."Leaf_18", t1."Leaf_20", t1."Leaf_21", t1."Leaf_22", t1."Leaf_27", t1."Leaf_28", t1."Leaf_29", t1."Leaf_31", t1."Leaf_32", t1."Leaf_34", t1."Leaf_35", t1."Leaf_37", t1."Leaf_38" ) AS node_id
  FROM
    "model_input" AS t
    LEFT OUTER JOIN
   (SELECT
      t."index" AS "index",
      CASE WHEN((t."X_5" > 0.088803) AND (t."X_6" <= -0.178653)) THEN 3 ELSE NULL END AS "Leaf_3",
     
SQL_OUT_PUT_FIRST_LINES_END ('BinaryClass_10_sampled', 'DecisionTreeClassifier', 'pgsql')
SQL_OUT_PUT_LAST_LINES_START ('BinaryClass_10_sampled', 'DecisionTreeClassifier', 'pgsql')
S "P_0", 0.000000 AS "P_1", 0 AS "D", 1.000000 AS "DP"
    UNION ALL
    SELECT 38 AS nid,  0.000000 AS "P_0", 1.000000 AS "P_1", 1 AS "D", 1.000000 AS "DP"
  ) AS "Values"),
"DT_Output" AS 
 (SELECT
   t1."index" AS "index",
   t1.node_id AS node_id,
   t2.nid AS nid,
   t2."P_0" AS "P_0", t2."P_1" AS "P_1", 
   t2."D" AS "D", 
   t2."DP" AS "DP"
  FROM
   "DT_node_lookup" AS t1
   LEFT OUTER JOIN
   "DT_node_data" AS t2
   ON t1.node_id = t2.nid
 )
SELECT
   "DT_Output"."index" AS "index",
   CAST(NULL AS FLOAT)  AS "Score_0",
   "DT_Output"."P_0" AS "Proba_0",
   CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN LN( "DT_Output"."P_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
   CAST(NULL AS FLOAT)  AS "Score_1",
   "DT_Output"."P_1" AS "Proba_1",
   CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN LN( "DT_Output"."P_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
   "DT_Output"."D" AS "Decision",
   "DT_Output"."DP" AS "DecisionProba"
FROM "DT_Output"
SQL_OUT_PUT_LAST_LINES_END ('BinaryClass_10_sampled', 'DecisionTreeClassifier', 'pgsql') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 128 entries, 0 to 127
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     128 non-null    float32
 1   X_1     128 non-null    float32
 2   X_2     128 non-null    float32
 3   X_3     128 non-null    float32
 4   X_4     128 non-null    float32
 5   X_5     128 non-null    float32
 6   X_6     128 non-null    float32
 7   X_7     128 non-null    float32
 8   X_8     128 non-null    float32
 9   X_9     128 non-null    float32
dtypes: float32(10)
memory usage: 6.0 KB
            X_0       X_1       X_2  ...       X_7       X_8       X_9
index                                ...                              
0     -1.064559 -0.820872 -0.723270  ...  0.652010 -0.319080 -0.383915
1     -0.960957 -1.294560 -0.778172  ... -0.518959  0.207019 -0.945521
2     -1.406136 -0.242116  1.301289  ... -1.043267 -1.426875  1.876952
3     -1.954561 -1.845000  0.508844  ...  0.532215 -1.374292  2.746056
4     -0.098659 -1.731538  2.272470  ...  0.845839  1.740497  0.199837
...         ...       ...       ...  ...       ...       ...       ...
123    0.637167  0.266685 -2.101867  ...  0.620480  0.443480  0.295088
124    1.237566  0.635414  1.362477  ... -2.311953 -1.462748 -0.264504
125   -2.188798  1.247514 -0.196171  ...  1.521653 -0.605569 -1.014692
126    1.684683  1.206950  0.344897  ... -0.703913 -0.717647  0.491219
127   -0.873119 -0.340358 -0.067087  ... -0.895793 -0.526077  1.201329

[128 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 128 entries, 0 to 127
Data columns (total 9 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          128 non-null    int64  
 1   Score_0        0 non-null      object 
 2   Proba_0        128 non-null    float64
 3   LogProba_0     128 non-null    float64
 4   Score_1        0 non-null      object 
 5   Proba_1        128 non-null    float64
 6   LogProba_1     128 non-null    float64
 7   Decision       128 non-null    int64  
 8   DecisionProba  128 non-null    float64
dtypes: float64(5), int64(2), object(2)
memory usage: 9.1+ KB
     index Score_0  Proba_0  ...     LogProba_1 Decision  DecisionProba
0        0    None      1.0  ... -1.797693e+308        0            1.0
1        1    None      1.0  ... -1.797693e+308        0            1.0
2        2    None      0.0  ...   0.000000e+00        1            1.0
3        3    None      1.0  ... -1.797693e+308        0            1.0
4        4    None      0.0  ...   0.000000e+00        1            1.0
..     ...     ...      ...  ...            ...      ...            ...
123    123    None      1.0  ... -1.797693e+308        0            1.0
124    124    None      0.0  ...   0.000000e+00        1            1.0
125    125    None      0.0  ...   0.000000e+00        1            1.0
126    126    None      1.0  ... -1.797693e+308        0            1.0
127    127    None      0.0  ...   0.000000e+00        1            1.0

[128 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
     index Score_0  SQL_Proba_0  ...  Py_Proba_0 Py_Proba_1  Py_Decision
112    112    None          0.0  ...         0.0        1.0            1
113    113    None          1.0  ...         1.0        0.0            0
114    114    None          0.0  ...         0.0        1.0            1
115    115    None          0.0  ...         0.0        1.0            1
116    116    None          1.0  ...         1.0        0.0            0
117    117    None          1.0  ...         1.0        0.0            0
118    118    None          1.0  ...         1.0        0.0            0
119    119    None          1.0  ...         1.0        0.0            0
120    120    None          0.0  ...         0.0        1.0            1
121    121    None          0.0  ...         0.0        1.0            1
122    122    None          0.0  ...         0.0        1.0            1
123    123    None          1.0  ...         1.0        0.0            0
124    124    None          0.0  ...         0.0        1.0            1
125    125    None          0.0  ...         0.0        1.0            1
126    126    None          1.0  ...         1.0        0.0            0
127    127    None          0.0  ...         0.0        1.0            1

[16 rows x 12 columns]
MLLITE_CLASS_SQL_ERROR ('BinaryClass_10_sampled', 'DecisionTreeClassifier', 'pgsql') ('Py_Proba_0', 'SQL_Proba_0') 0.0
     Py_Proba_0  SQL_Proba_0  SQL_Error_0
112         0.0          0.0          0.0
113         1.0          1.0          0.0
114         0.0          0.0          0.0
115         0.0          0.0          0.0
116         1.0          1.0          0.0
117         1.0          1.0          0.0
118         1.0          1.0          0.0
119         1.0          1.0          0.0
120         0.0          0.0          0.0
121         0.0          0.0          0.0
122         0.0          0.0          0.0
123         1.0          1.0          0.0
124         0.0          0.0          0.0
125         0.0          0.0          0.0
126         1.0          1.0          0.0
127         0.0          0.0          0.0
MLLITE_CLASS_SQL_ERROR ('BinaryClass_10_sampled', 'DecisionTreeClassifier', 'pgsql') ('Py_Proba_1', 'SQL_Proba_1') 0.0
     Py_Proba_1  SQL_Proba_1  SQL_Error_1
112         1.0          1.0          0.0
113         0.0          0.0          0.0
114         1.0          1.0          0.0
115         1.0          1.0          0.0
116         0.0          0.0          0.0
117         0.0          0.0          0.0
118         0.0          0.0          0.0
119         0.0          0.0          0.0
120         1.0          1.0          0.0
121         1.0          1.0          0.0
122         1.0          1.0          0.0
123         0.0          0.0          0.0
124         1.0          1.0          0.0
125         1.0          1.0          0.0
126         0.0          0.0          0.0
127         1.0          1.0          0.0
MLLITE_CLASS_SQL_EXECUTION_STATUS ('BinaryClass_10_sampled', 'DecisionTreeClassifier', 'pgsql', 'Success')
     Py_Decision  SQL_Decision
112            1             1
113            0             0
114            1             1
115            1             1
116            0             0
117            0             0
118            0             0
119            0             0
120            1             1
121            1             1
122            1             1
123            0             0
124            1             1
125            1             1
126            0             0
127            1             1
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
