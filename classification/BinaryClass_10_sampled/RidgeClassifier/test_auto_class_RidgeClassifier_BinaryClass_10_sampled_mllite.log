          X_0       X_1       X_2  ...       X_8       X_9  target
0   -1.064559 -0.820872 -0.723270  ... -0.319080 -0.383915       0
1   -0.960957 -1.294560 -0.778172  ...  0.207019 -0.945521       0
2   -1.406136 -0.242116  1.301289  ... -1.426875  1.876952       1
3   -1.954561 -1.845000  0.508844  ... -1.374292  2.746056       0
4   -0.098659 -1.731538  2.272469  ...  1.740497  0.199837       1
..        ...       ...       ...  ...       ...       ...     ...
123  0.637167  0.266685 -2.101867  ...  0.443480  0.295088       0
124  1.237566  0.635414  1.362477  ... -1.462748 -0.264504       1
125 -2.188798  1.247515 -0.196171  ... -0.605569 -1.014692       1
126  1.684683  1.206950  0.344897  ... -0.717647  0.491219       0
127 -0.873119 -0.340358 -0.067087  ... -0.526077  1.201329       1

[128 rows x 11 columns]
MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
('OPERATION_START', 'TRAINING')
[[-1.0645586  -0.8208718  -0.72327    -0.09642018 -0.40463343 -0.81522477
  -0.8386918   0.65200984 -0.31908    -0.3839149 ]
 [-0.9609572  -1.2945602  -0.77817184  0.8359748  -1.0189681  -0.12086504
  -0.68072116 -0.5189585   0.20701888 -0.9455213 ]
 [-1.4061359  -0.24211647  1.301289   -0.49436462  1.0264262   1.0800456
   1.3956257  -1.0432675  -1.426875    1.8769516 ]
 [-1.9545612  -1.8449999   0.5088439  -0.224022    0.66320896  0.0830382
   0.446295    0.53221494 -1.3742915   2.7460556 ]
 [-0.09865901 -1.7315376   2.2724695   0.11809641  1.0834117   2.8048902
   2.7064822   0.84583855  1.7404972   0.19983661]] [0 0 1 0 1]
MLLITE_FIT_USING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 3 4
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 4 4
('OPERATION_END_ELAPSED', 0.013, 'TRAINING')
{ ,   }
{ ,   }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_il8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 128, "dataset_features" : 10 },
	"classes" : [ 0, 1 ],
	"equations" : {
		"class_1" : {
			"intercept" : 0.040871,
			"coeffs" : [ 0.030085, 0.049467, 0.149709, -0.037209, -0.185188, 0.305253, 0.237038, 0.046774, -0.001404, -0.046630 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_10_sampled.json'

MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
MLLITE_RELOADING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_il8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 128, "dataset_features" : 10 },
	"classes" : [ 0, 1 ],
	"equations" : {
		"class_1" : {
			"intercept" : 0.040871,
			"coeffs" : [ 0.030085, 0.049467, 0.149709, -0.037209, -0.185188, 0.305253, 0.237038, 0.046774, -0.001404, -0.046630 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1 ],
	"dataset" : 	{
		"dataset_features" : 10,
		"dataset_rows" : 128
	},
	"equations" : 	{
		"class_1" : 	{
			"coeffs" : [ 0.030085, 0.049467, 0.149709, -0.037209, -0.185188, 0.305253, 0.237038, 0.046774, -0.001404, -0.04663 ],
			"intercept" : 0.040871
		}
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_il8", "version" : "2024-W12" },
	"options" :  { "alpha" : 1.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0.7152 0.2848]
 [0.5937 0.4063]
 [0.2551 0.7449]
 [0.5585 0.4415]
 [0.0382 0.9618]
 [0.6557 0.3443]
 [0.3141 0.6859]
 [0.0759 0.9241]
 [0.9    0.1   ]
 [0.8088 0.1912]
 [0.785  0.215 ]
 [0.2488 0.7512]
 [0.7644 0.2356]
 [0.0528 0.9472]
 [0.5225 0.4775]
 [0.2909 0.7091]
 [0.0447 0.9553]
 [0.2812 0.7188]
 [0.2661 0.7339]
 [0.0414 0.9586]
 [0.282  0.718 ]
 [0.7773 0.2227]
 [0.0996 0.9004]
 [0.3616 0.6384]
 [0.3705 0.6295]
 [0.5531 0.4469]
 [0.2956 0.7044]
 [0.8448 0.1552]
 [0.1591 0.8409]
 [0.3313 0.6687]
 [0.1023 0.8977]
 [0.5041 0.4959]
 [0.24   0.76  ]
 [0.1636 0.8364]
 [0.2678 0.7322]
 [0.3332 0.6668]
 [0.0548 0.9452]
 [0.8098 0.1902]
 [0.5595 0.4405]
 [0.7588 0.2412]
 [0.5804 0.4196]
 [0.7093 0.2907]
 [0.5159 0.4841]
 [0.9539 0.0461]
 [0.8073 0.1927]
 [0.629  0.371 ]
 [0.3774 0.6226]
 [0.8912 0.1088]
 [0.2008 0.7992]
 [0.7304 0.2696]
 [0.8348 0.1652]
 [0.8114 0.1886]
 [0.8193 0.1807]
 [0.906  0.094 ]
 [0.5147 0.4853]
 [0.2992 0.7008]
 [0.6309 0.3691]
 [0.5578 0.4422]
 [0.7156 0.2844]
 [0.7018 0.2982]
 [0.4593 0.5407]
 [0.4946 0.5054]
 [0.626  0.374 ]
 [0.6953 0.3047]
 [0.7283 0.2717]
 [0.5898 0.4102]
 [0.3215 0.6785]
 [0.2637 0.7363]
 [0.184  0.816 ]
 [0.5809 0.4191]
 [0.1502 0.8498]
 [0.2624 0.7376]
 [0.4531 0.5469]
 [0.5516 0.4484]
 [0.7173 0.2827]
 [0.1711 0.8289]
 [0.8448 0.1552]
 [0.8829 0.1171]
 [0.6772 0.3228]
 [0.9156 0.0844]
 [0.1086 0.8914]
 [0.3921 0.6079]
 [0.2316 0.7684]
 [0.7134 0.2866]
 [0.8806 0.1194]
 [0.3378 0.6622]
 [0.9059 0.0941]
 [0.7386 0.2614]
 [0.0726 0.9274]
 [0.2639 0.7361]
 [0.9207 0.0793]
 [0.1189 0.8811]
 [0.7497 0.2503]
 [0.4489 0.5511]
 [0.3485 0.6515]
 [0.6386 0.3614]
 [0.6514 0.3486]
 [0.5435 0.4565]
 [0.2922 0.7078]
 [0.0612 0.9388]
 [0.7234 0.2766]
 [0.2084 0.7916]
 [0.8509 0.1491]
 [0.7372 0.2628]
 [0.2361 0.7639]
 [0.2225 0.7775]
 [0.8395 0.1605]
 [0.2227 0.7773]
 [0.3437 0.6563]
 [0.1579 0.8421]
 [0.559  0.441 ]
 [0.6721 0.3279]
 [0.4218 0.5782]
 [0.4977 0.5023]
 [0.2566 0.7434]
 [0.1901 0.8099]
 [0.7417 0.2583]
 [0.4317 0.5683]
 [0.7684 0.2316]
 [0.3049 0.6951]
 [0.7749 0.2251]
 [0.4688 0.5312]
 [0.6479 0.3521]
 [0.714  0.286 ]
 [0.1936 0.8064]
 [0.3292 0.6708]
 [0.3246 0.6754]
 [0.155  0.845 ]]
(128, 2)
(128,) float32
MODEL_PERFS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'BinaryClass_10_sampled', 'size': 128, 'accuracy': 0.8359375, 'auc': 0.9033520919990212}
WRITING_PERF_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_10_sampled.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'BinaryClass_10_sampled', 'training_time_in_sec': 0.013, 'prediction_time_in_sec': 0.0}
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_10_sampled.sql'



SQL_OUT_PUT_FIRST_LINES_START
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT model_input."index" AS "index",
   0.040871 + 0.030085 * X_0 + 0.049467 * X_1 + 0.149709 * X_2 + -0.037209 * X_3 + -0.185188 * X_4 + 0.305253 * X_5 + 0.237038 * X_6 + 0.046774 * X_7 + -0.001404 * X_8 + -0.046630 * X_9 AS "Score_1", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "LogProba_1"
  FROM model_input
 ),
soft_max_orig_cte AS 
( SELECT t."index" AS "index", 
   -t."Score_1" AS "Score_0",
   1.0 - t."Proba_1" AS "Proba_0",
   CAST(NULL AS FLOAT) AS "LogProba_0",
   t."Score_1" AS "Score_1",
   t."Prob
SQL_OUT_PUT_FIRST_LINES_END
SQL_OUT_PUT_LAST_LINES_START
S t
),
arg_max_cte_with_max_proba_idx AS 
( SELECT t.*,
   CASE WHEN(t."Proba_0" = t."Max_Proba") THEN 0 else NULL END AS "max_idx_0",
   CASE WHEN(t."Proba_1" = t."Max_Proba") THEN 1 else NULL END AS "max_idx_1"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
 (SELECT t.*,
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 128 entries, 0 to 127
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     128 non-null    float32
 1   X_1     128 non-null    float32
 2   X_2     128 non-null    float32
 3   X_3     128 non-null    float32
 4   X_4     128 non-null    float32
 5   X_5     128 non-null    float32
 6   X_6     128 non-null    float32
 7   X_7     128 non-null    float32
 8   X_8     128 non-null    float32
 9   X_9     128 non-null    float32
dtypes: float32(10)
memory usage: 6.0 KB
            X_0       X_1       X_2  ...       X_7       X_8       X_9
index                                ...                              
0     -1.064559 -0.820872 -0.723270  ...  0.652010 -0.319080 -0.383915
1     -0.960957 -1.294560 -0.778172  ... -0.518959  0.207019 -0.945521
2     -1.406136 -0.242116  1.301289  ... -1.043267 -1.426875  1.876952
3     -1.954561 -1.845000  0.508844  ...  0.532215 -1.374292  2.746056
4     -0.098659 -1.731538  2.272470  ...  0.845839  1.740497  0.199837
...         ...       ...       ...  ...       ...       ...       ...
123    0.637167  0.266685 -2.101867  ...  0.620480  0.443480  0.295088
124    1.237566  0.635414  1.362477  ... -2.311953 -1.462748 -0.264504
125   -2.188798  1.247514 -0.196171  ...  1.521653 -0.605569 -1.014692
126    1.684683  1.206950  0.344897  ... -0.703913 -0.717647  0.491219
127   -0.873119 -0.340358 -0.067087  ... -0.895793 -0.526077  1.201329

[128 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
