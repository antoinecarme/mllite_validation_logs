          X_0       X_1       X_2  ...       X_8       X_9  target
0   -1.064559 -0.820872 -0.723270  ... -0.319080 -0.383915       0
1   -0.960957 -1.294560 -0.778172  ...  0.207019 -0.945521       0
2   -1.406136 -0.242116  1.301289  ... -1.426875  1.876952       1
3   -1.954561 -1.845000  0.508844  ... -1.374292  2.746056       0
4   -0.098659 -1.731538  2.272469  ...  1.740497  0.199837       1
..        ...       ...       ...  ...       ...       ...     ...
123  0.637167  0.266685 -2.101867  ...  0.443480  0.295088       0
124  1.237566  0.635414  1.362477  ... -1.462748 -0.264504       1
125 -2.188798  1.247515 -0.196171  ... -0.605569 -1.014692       1
126  1.684683  1.206950  0.344897  ... -0.717647  0.491219       0
127 -0.873119 -0.340358 -0.067087  ... -0.526077  1.201329       1

[128 rows x 11 columns]
MLLITE_MODEL_SET_OPTIONS RidgeClassifier {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { "alpha" : 0.0000001,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
('OPERATION_START', 'TRAINING')
[[-1.0645586  -0.8208718  -0.72327    -0.09642018 -0.40463343 -0.81522477
  -0.8386918   0.65200984 -0.31908    -0.3839149 ]
 [-0.9609572  -1.2945602  -0.77817184  0.8359748  -1.0189681  -0.12086504
  -0.68072116 -0.5189585   0.20701888 -0.9455213 ]
 [-1.4061359  -0.24211647  1.301289   -0.49436462  1.0264262   1.0800456
   1.3956257  -1.0432675  -1.426875    1.8769516 ]
 [-1.9545612  -1.8449999   0.5088439  -0.224022    0.66320896  0.0830382
   0.446295    0.53221494 -1.3742915   2.7460556 ]
 [-0.09865901 -1.7315376   2.2724695   0.11809641  1.0834117   2.8048902
   2.7064822   0.84583855  1.7404972   0.19983661]] [0 0 1 0 1]
MLLITE_FIT_USING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 3 4
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 4 4
('OPERATION_END_ELAPSED', 0.009, 'TRAINING')
{ "alpha" : 0.0000001,   }
{ "alpha" : 0.0000001,   }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W13", "signature" : "ff4_il8"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 128, "dataset_features" : 10 },
	"classes" : [ 0, 1 ],
	"equations" : {
		"class_1" : {
			"intercept" : 0.039925,
			"coeffs" : [ 0.031302, 0.049832, 0.146315, -0.037260, -0.183652, 0.302052, 0.249603, 0.047503, -0.002003, -0.047692 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_10_sampled_option_1.json'

MLLITE_MODEL_SET_OPTIONS RidgeClassifier {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { "alpha" : 0.0000001,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
MLLITE_RELOADING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W13", "signature" : "ff4_il8"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 128, "dataset_features" : 10 },
	"classes" : [ 0, 1 ],
	"equations" : {
		"class_1" : {
			"intercept" : 0.039925,
			"coeffs" : [ 0.031302, 0.049832, 0.146315, -0.037260, -0.183652, 0.302052, 0.249603, 0.047503, -0.002003, -0.047692 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1 ],
	"dataset" : 	{
		"dataset_features" : 10,
		"dataset_rows" : 128
	},
	"equations" : 	{
		"class_1" : 	{
			"coeffs" : [ 0.031302, 0.049832, 0.146315, -0.03726, -0.183652, 0.302052, 0.249603, 0.047503, -0.002003, -0.047692 ],
			"intercept" : 0.039925
		}
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_il8", "version" : "2024-W13" },
	"options" :  { "alpha" : 0.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0.6149 0.3851]
 [0.5496 0.4504]
 [0.3676 0.6324]
 [0.5296 0.4704]
 [0.1639 0.8361]
 [0.5812 0.4188]
 [0.4053 0.5947]
 [0.2241 0.7759]
 [0.7498 0.2502]
 [0.6731 0.3269]
 [0.6566 0.3434]
 [0.3661 0.6339]
 [0.6466 0.3534]
 [0.1882 0.8118]
 [0.5127 0.4873]
 [0.3916 0.6084]
 [0.1753 0.8247]
 [0.3859 0.6141]
 [0.3769 0.6231]
 [0.1723 0.8277]
 [0.3834 0.6166]
 [0.6546 0.3454]
 [0.2502 0.7498]
 [0.4298 0.5702]
 [0.4343 0.5657]
 [0.5259 0.4741]
 [0.3945 0.6055]
 [0.7034 0.2966]
 [0.3013 0.6987]
 [0.4118 0.5882]
 [0.2531 0.7469]
 [0.5006 0.4994]
 [0.3586 0.6414]
 [0.3047 0.6953]
 [0.3748 0.6252]
 [0.4126 0.5874]
 [0.192  0.808 ]
 [0.6732 0.3268]
 [0.5279 0.4721]
 [0.6393 0.3607]
 [0.5415 0.4585]
 [0.6089 0.3911]
 [0.5073 0.4927]
 [0.8224 0.1776]
 [0.6713 0.3287]
 [0.567  0.433 ]
 [0.4365 0.5635]
 [0.7409 0.2591]
 [0.3339 0.6661]
 [0.6217 0.3783]
 [0.6934 0.3066]
 [0.677  0.323 ]
 [0.6824 0.3176]
 [0.758  0.242 ]
 [0.5078 0.4922]
 [0.3932 0.6068]
 [0.5676 0.4324]
 [0.5298 0.4702]
 [0.6128 0.3872]
 [0.6043 0.3957]
 [0.48   0.52  ]
 [0.499  0.501 ]
 [0.5665 0.4335]
 [0.6011 0.3989]
 [0.6233 0.3767]
 [0.5468 0.4532]
 [0.4085 0.5915]
 [0.3726 0.6274]
 [0.3199 0.6801]
 [0.5395 0.4605]
 [0.2963 0.7037]
 [0.3754 0.6246]
 [0.4753 0.5247]
 [0.5263 0.4737]
 [0.6159 0.3841]
 [0.3099 0.6901]
 [0.6993 0.3007]
 [0.7334 0.2666]
 [0.593  0.407 ]
 [0.7694 0.2306]
 [0.2565 0.7435]
 [0.4442 0.5558]
 [0.3522 0.6478]
 [0.6131 0.3869]
 [0.7309 0.2691]
 [0.4171 0.5829]
 [0.7599 0.2401]
 [0.6267 0.3733]
 [0.2191 0.7809]
 [0.3757 0.6243]
 [0.7736 0.2264]
 [0.2697 0.7303]
 [0.6353 0.3647]
 [0.4749 0.5251]
 [0.421  0.579 ]
 [0.5704 0.4296]
 [0.5775 0.4225]
 [0.5214 0.4786]
 [0.3896 0.6104]
 [0.2008 0.7992]
 [0.6175 0.3825]
 [0.337  0.663 ]
 [0.705  0.295 ]
 [0.6258 0.3742]
 [0.3553 0.6447]
 [0.3493 0.6507]
 [0.6965 0.3035]
 [0.3486 0.6514]
 [0.4185 0.5815]
 [0.3001 0.6999]
 [0.5288 0.4712]
 [0.5894 0.4106]
 [0.4593 0.5407]
 [0.4975 0.5025]
 [0.3705 0.6295]
 [0.3242 0.6758]
 [0.6292 0.3708]
 [0.4644 0.5356]
 [0.646  0.354 ]
 [0.3959 0.6041]
 [0.6508 0.3492]
 [0.4832 0.5168]
 [0.5763 0.4237]
 [0.6169 0.3831]
 [0.3262 0.6738]
 [0.4126 0.5874]
 [0.4085 0.5915]
 [0.301  0.699 ]]
(128, 2)
(128,) float32
MODEL_PERFS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': '{"alpha" : 0.0000001}', 'dataset': 'BinaryClass_10_sampled', 'size': 128, 'accuracy': 0.8359375, 'auc': 0.9038414484952287}
WRITING_PERF_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_10_sampled_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': '{"alpha" : 0.0000001}', 'dataset': 'BinaryClass_10_sampled', 'training_time_in_sec': 0.009, 'prediction_time_in_sec': 0.0}
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_10_sampled_option_1_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('BinaryClass_10_sampled', 'RidgeClassifier', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT t."index" AS "index",
   -0.5 * ( 0.039925 + 0.031302 * t."X_0" + 0.049832 * t."X_1" + 0.146315 * t."X_2" + -0.037260 * t."X_3" + -0.183652 * t."X_4" + 0.302052 * t."X_5" + 0.249603 * t."X_6" + 0.047503 * t."X_7" + -0.002003 * t."X_8" + -0.047692 * t."X_9" ) AS "Score_0",
   CAST(NULL AS FLOAT) AS "Proba_0",
   CAST(NULL AS FLOAT) AS "LogProba_0",
   0.5 * ( 0.039925 + 0.031302 * t."X_0" + 0.049832 * t."X_1" + 0.146315 * t."X_2" + -0.037260 * t."X_3" + -0.183652 * t."X_4" + 0.302052 * t."X_5" + 0.249603 * t."X_6" + 0.
SQL_OUT_PUT_FIRST_LINES_END ('BinaryClass_10_sampled', 'RidgeClassifier', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('BinaryClass_10_sampled', 'RidgeClassifier', 'duckdb')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('BinaryClass_10_sampled', 'RidgeClassifier', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 128 entries, 0 to 127
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     128 non-null    float32
 1   X_1     128 non-null    float32
 2   X_2     128 non-null    float32
 3   X_3     128 non-null    float32
 4   X_4     128 non-null    float32
 5   X_5     128 non-null    float32
 6   X_6     128 non-null    float32
 7   X_7     128 non-null    float32
 8   X_8     128 non-null    float32
 9   X_9     128 non-null    float32
dtypes: float32(10)
memory usage: 6.0 KB
            X_0       X_1       X_2  ...       X_7       X_8       X_9
index                                ...                              
0     -1.064559 -0.820872 -0.723270  ...  0.652010 -0.319080 -0.383915
1     -0.960957 -1.294560 -0.778172  ... -0.518959  0.207019 -0.945521
2     -1.406136 -0.242116  1.301289  ... -1.043267 -1.426875  1.876952
3     -1.954561 -1.845000  0.508844  ...  0.532215 -1.374292  2.746056
4     -0.098659 -1.731538  2.272470  ...  0.845839  1.740497  0.199837
...         ...       ...       ...  ...       ...       ...       ...
123    0.637167  0.266685 -2.101867  ...  0.620480  0.443480  0.295088
124    1.237566  0.635414  1.362477  ... -2.311953 -1.462748 -0.264504
125   -2.188798  1.247514 -0.196171  ...  1.521653 -0.605569 -1.014692
126    1.684683  1.206950  0.344897  ... -0.703913 -0.717647  0.491219
127   -0.873119 -0.340358 -0.067087  ... -0.895793 -0.526077  1.201329

[128 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 128 entries, 0 to 127
Data columns (total 9 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          128 non-null    int64  
 1   Score_0        128 non-null    float64
 2   Proba_0        128 non-null    float64
 3   LogProba_0     128 non-null    float64
 4   Score_1        128 non-null    float64
 5   Proba_1        128 non-null    float64
 6   LogProba_1     128 non-null    float64
 7   Decision       128 non-null    int64  
 8   DecisionProba  128 non-null    float64
dtypes: float64(7), int64(2)
memory usage: 9.1 KB
     index   Score_0   Proba_0  ...  LogProba_1  Decision  DecisionProba
0        0  0.233942  0.614883  ...   -0.954207         0       0.614883
1        1  0.099463  0.549568  ...   -0.797549         0       0.549568
2        2 -0.271262  0.367601  ...   -0.458234         1       0.632399
3        3  0.059325  0.529628  ...   -0.754231         0       0.529628
4        4 -0.814804  0.163884  ...   -0.178988         1       0.836116
..     ...       ...       ...  ...         ...       ...            ...
123    123  0.238233  0.616913  ...   -0.959493         0       0.616913
124    124 -0.362719  0.326197  ...   -0.394817         1       0.673803
125    125 -0.176637  0.412589  ...   -0.532030         1       0.587411
126    126 -0.185008  0.408537  ...   -0.525156         1       0.591463
127    127 -0.421215  0.301023  ...   -0.358138         1       0.698977

[128 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
     index   Score_0  SQL_Proba_0  ...  Py_Proba_0  Py_Proba_1  Py_Decision
112    112 -0.081633     0.459274  ...    0.459274    0.540726            1
113    113 -0.004995     0.497503  ...    0.497502    0.502498            1
114    114 -0.265103     0.370469  ...    0.370469    0.629531            1
115    115 -0.367196     0.324232  ...    0.324232    0.675768            1
116    116  0.264470     0.629236  ...    0.629236    0.370764            0
117    117 -0.071409     0.464356  ...    0.464357    0.535643            1
118    118  0.300677     0.645966  ...    0.645966    0.354034            0
119    119 -0.211225     0.395931  ...    0.395931    0.604069            1
120    120  0.311170     0.650751  ...    0.650751    0.349249            0
121    121 -0.033713     0.483150  ...    0.483150    0.516850            1
122    122  0.153751     0.576275  ...    0.576276    0.423724            0
123    123  0.238233     0.616913  ...    0.616913    0.383087            0
124    124 -0.362719     0.326197  ...    0.326197    0.673803            1
125    125 -0.176637     0.412589  ...    0.412589    0.587411            1
126    126 -0.185008     0.408537  ...    0.408537    0.591463            1
127    127 -0.421215     0.301023  ...    0.301023    0.698977            1

[16 rows x 12 columns]
MLLITE_CLASS_SQL_ERROR ('BinaryClass_10_sampled', 'RidgeClassifier', 'duckdb') ('Py_Proba_0', 'SQL_Proba_0') 1.543698746667415e-07
     Py_Proba_0  SQL_Proba_0   SQL_Error_0
112    0.459274     0.459274  1.058607e-07
113    0.497502     0.497503 -2.461472e-07
114    0.370469     0.370469 -8.574055e-08
115    0.324232     0.324232  1.582767e-07
116    0.629236     0.629236  1.616350e-07
117    0.464357     0.464356  4.404022e-07
118    0.645966     0.645966  9.584119e-09
119    0.395931     0.395931  3.512366e-08
120    0.650751     0.650751  1.064300e-07
121    0.483150     0.483150  1.269353e-07
122    0.576276     0.576275  1.016933e-07
123    0.616913     0.616913 -2.748605e-07
124    0.326197     0.326197  2.976289e-07
125    0.412589     0.412589 -3.183551e-07
126    0.408537     0.408537  2.181239e-07
127    0.301023     0.301023 -1.655995e-07
MLLITE_CLASS_SQL_ERROR ('BinaryClass_10_sampled', 'RidgeClassifier', 'duckdb') ('Py_Proba_1', 'SQL_Proba_1') 1.5246974341518067e-07
     Py_Proba_1  SQL_Proba_1   SQL_Error_1
112    0.540726     0.540726 -1.952677e-07
113    0.502498     0.502497  2.759495e-07
114    0.629531     0.629531  5.593822e-08
115    0.675768     0.675768 -2.178813e-07
116    0.370764     0.370764 -1.318327e-07
117    0.535643     0.535644 -4.404022e-07
118    0.354034     0.354034 -9.584119e-09
119    0.604069     0.604069 -3.512366e-08
120    0.349249     0.349249  1.277925e-08
121    0.516850     0.516850 -1.269353e-07
122    0.423724     0.423725 -1.314956e-07
123    0.383087     0.383087  2.152558e-07
124    0.673803     0.673803 -2.976289e-07
125    0.587411     0.587411  2.885528e-07
126    0.591463     0.591463 -1.585192e-07
127    0.698977     0.698977  7.619253e-08
MLLITE_CLASS_SQL_EXECUTION_STATUS ('BinaryClass_10_sampled', 'RidgeClassifier', 'duckdb', 'Success')
     Py_Decision  SQL_Decision
112            1             1
113            1             1
114            1             1
115            1             1
116            0             0
117            1             1
118            0             0
119            1             1
120            0             0
121            1             1
122            0             0
123            0             0
124            1             1
125            1             1
126            1             1
127            1             1
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_10_sampled_option_1_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('BinaryClass_10_sampled', 'RidgeClassifier', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT t."index" AS "index",
   -0.5 * ( 0.039925 + 0.031302 * t."X_0" + 0.049832 * t."X_1" + 0.146315 * t."X_2" + -0.037260 * t."X_3" + -0.183652 * t."X_4" + 0.302052 * t."X_5" + 0.249603 * t."X_6" + 0.047503 * t."X_7" + -0.002003 * t."X_8" + -0.047692 * t."X_9" ) AS "Score_0",
   CAST(NULL AS FLOAT) AS "Proba_0",
   CAST(NULL AS FLOAT) AS "LogProba_0",
   0.5 * ( 0.039925 + 0.031302 * t."X_0" + 0.049832 * t."X_1" + 0.146315 * t."X_2" + -0.037260 * t."X_3" + -0.183652 * t."X_4" + 0.302052 * t."X_5" + 0.249603 * t."X_6" + 0.
SQL_OUT_PUT_FIRST_LINES_END ('BinaryClass_10_sampled', 'RidgeClassifier', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('BinaryClass_10_sampled', 'RidgeClassifier', 'sqlite')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('BinaryClass_10_sampled', 'RidgeClassifier', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 128 entries, 0 to 127
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     128 non-null    float32
 1   X_1     128 non-null    float32
 2   X_2     128 non-null    float32
 3   X_3     128 non-null    float32
 4   X_4     128 non-null    float32
 5   X_5     128 non-null    float32
 6   X_6     128 non-null    float32
 7   X_7     128 non-null    float32
 8   X_8     128 non-null    float32
 9   X_9     128 non-null    float32
dtypes: float32(10)
memory usage: 6.0 KB
            X_0       X_1       X_2  ...       X_7       X_8       X_9
index                                ...                              
0     -1.064559 -0.820872 -0.723270  ...  0.652010 -0.319080 -0.383915
1     -0.960957 -1.294560 -0.778172  ... -0.518959  0.207019 -0.945521
2     -1.406136 -0.242116  1.301289  ... -1.043267 -1.426875  1.876952
3     -1.954561 -1.845000  0.508844  ...  0.532215 -1.374292  2.746056
4     -0.098659 -1.731538  2.272470  ...  0.845839  1.740497  0.199837
...         ...       ...       ...  ...       ...       ...       ...
123    0.637167  0.266685 -2.101867  ...  0.620480  0.443480  0.295088
124    1.237566  0.635414  1.362477  ... -2.311953 -1.462748 -0.264504
125   -2.188798  1.247514 -0.196171  ...  1.521653 -0.605569 -1.014692
126    1.684683  1.206950  0.344897  ... -0.703913 -0.717647  0.491219
127   -0.873119 -0.340358 -0.067087  ... -0.895793 -0.526077  1.201329

[128 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 128 entries, 0 to 127
Data columns (total 9 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          128 non-null    int64  
 1   Score_0        128 non-null    float64
 2   Proba_0        128 non-null    float64
 3   LogProba_0     128 non-null    float64
 4   Score_1        128 non-null    float64
 5   Proba_1        128 non-null    float64
 6   LogProba_1     128 non-null    float64
 7   Decision       128 non-null    int64  
 8   DecisionProba  128 non-null    float64
dtypes: float64(7), int64(2)
memory usage: 9.1 KB
     index   Score_0   Proba_0  ...  LogProba_1  Decision  DecisionProba
0        0  0.233942  0.614883  ...   -0.954207         0       0.614883
1        1  0.099464  0.549568  ...   -0.797549         0       0.549568
2        2 -0.271262  0.367601  ...   -0.458234         1       0.632399
3        3  0.059325  0.529628  ...   -0.754231         0       0.529628
4        4 -0.814804  0.163884  ...   -0.178988         1       0.836116
..     ...       ...       ...  ...         ...       ...            ...
123    123  0.238233  0.616913  ...   -0.959493         0       0.616913
124    124 -0.362719  0.326197  ...   -0.394817         1       0.673803
125    125 -0.176637  0.412589  ...   -0.532030         1       0.587411
126    126 -0.185008  0.408537  ...   -0.525156         1       0.591463
127    127 -0.421215  0.301023  ...   -0.358138         1       0.698977

[128 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
     index   Score_0  SQL_Proba_0  ...  Py_Proba_0  Py_Proba_1  Py_Decision
112    112 -0.081633     0.459274  ...    0.459274    0.540726            1
113    113 -0.004995     0.497503  ...    0.497502    0.502498            1
114    114 -0.265103     0.370469  ...    0.370469    0.629531            1
115    115 -0.367196     0.324232  ...    0.324232    0.675768            1
116    116  0.264470     0.629236  ...    0.629236    0.370764            0
117    117 -0.071409     0.464356  ...    0.464357    0.535643            1
118    118  0.300677     0.645966  ...    0.645966    0.354034            0
119    119 -0.211225     0.395931  ...    0.395931    0.604069            1
120    120  0.311170     0.650751  ...    0.650751    0.349249            0
121    121 -0.033713     0.483150  ...    0.483150    0.516850            1
122    122  0.153751     0.576275  ...    0.576276    0.423724            0
123    123  0.238233     0.616913  ...    0.616913    0.383087            0
124    124 -0.362719     0.326197  ...    0.326197    0.673803            1
125    125 -0.176637     0.412589  ...    0.412589    0.587411            1
126    126 -0.185008     0.408537  ...    0.408537    0.591463            1
127    127 -0.421215     0.301023  ...    0.301023    0.698977            1

[16 rows x 12 columns]
MLLITE_CLASS_SQL_ERROR ('BinaryClass_10_sampled', 'RidgeClassifier', 'sqlite') ('Py_Proba_0', 'SQL_Proba_0') 1.545205889125125e-07
     Py_Proba_0  SQL_Proba_0   SQL_Error_0
112    0.459274     0.459274  1.085628e-07
113    0.497502     0.497503 -2.484070e-07
114    0.370469     0.370469 -8.760150e-08
115    0.324232     0.324232  1.573871e-07
116    0.629236     0.629236  1.682206e-07
117    0.464357     0.464356  4.439353e-07
118    0.645966     0.645966  1.979387e-08
119    0.395931     0.395931  2.854400e-08
120    0.650751     0.650751  1.088789e-07
121    0.483150     0.483150  1.295224e-07
122    0.576276     0.576275  9.853306e-08
123    0.616913     0.616913 -2.751523e-07
124    0.326197     0.326197  3.001749e-07
125    0.412589     0.412589 -3.164721e-07
126    0.408537     0.408537  2.139371e-07
127    0.301023     0.301023 -1.569143e-07
MLLITE_CLASS_SQL_ERROR ('BinaryClass_10_sampled', 'RidgeClassifier', 'sqlite') ('Py_Proba_1', 'SQL_Proba_1') 1.527314055455118e-07
     Py_Proba_1  SQL_Proba_1   SQL_Error_1
112    0.540726     0.540726 -1.979697e-07
113    0.502498     0.502497  2.782094e-07
114    0.629531     0.629531  5.779917e-08
115    0.675768     0.675768 -2.169917e-07
116    0.370764     0.370764 -1.384183e-07
117    0.535643     0.535644 -4.439353e-07
118    0.354034     0.354034 -1.979387e-08
119    0.604069     0.604069 -2.854400e-08
120    0.349249     0.349249  1.033042e-08
121    0.516850     0.516850 -1.295224e-07
122    0.423724     0.423725 -1.283354e-07
123    0.383087     0.383087  2.155476e-07
124    0.673803     0.673803 -3.001749e-07
125    0.587411     0.587411  2.866697e-07
126    0.591463     0.591463 -1.543325e-07
127    0.698977     0.698977  6.750729e-08
MLLITE_CLASS_SQL_EXECUTION_STATUS ('BinaryClass_10_sampled', 'RidgeClassifier', 'sqlite', 'Success')
     Py_Decision  SQL_Decision
112            1             1
113            1             1
114            1             1
115            1             1
116            0             0
117            1             1
118            0             0
119            1             1
120            0             0
121            1             1
122            0             0
123            0             0
124            1             1
125            1             1
126            1             1
127            1             1
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_10_sampled_option_1_pgsql.sql'



SQL_OUT_PUT_FIRST_LINES_START ('BinaryClass_10_sampled', 'RidgeClassifier', 'pgsql')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT t."index" AS "index",
   -0.5 * ( 0.039925 + 0.031302 * t."X_0" + 0.049832 * t."X_1" + 0.146315 * t."X_2" + -0.037260 * t."X_3" + -0.183652 * t."X_4" + 0.302052 * t."X_5" + 0.249603 * t."X_6" + 0.047503 * t."X_7" + -0.002003 * t."X_8" + -0.047692 * t."X_9" ) AS "Score_0",
   CAST(NULL AS FLOAT) AS "Proba_0",
   CAST(NULL AS FLOAT) AS "LogProba_0",
   0.5 * ( 0.039925 + 0.031302 * t."X_0" + 0.049832 * t."X_1" + 0.146315 * t."X_2" + -0.037260 * t."X_3" + -0.183652 * t."X_4" + 0.302052 * t."X_5" + 0.249603 * t."X_6" + 0.
SQL_OUT_PUT_FIRST_LINES_END ('BinaryClass_10_sampled', 'RidgeClassifier', 'pgsql')
SQL_OUT_PUT_LAST_LINES_START ('BinaryClass_10_sampled', 'RidgeClassifier', 'pgsql')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('BinaryClass_10_sampled', 'RidgeClassifier', 'pgsql') 




COPY_TRAINING_DATA_TO_SQLITE_START
