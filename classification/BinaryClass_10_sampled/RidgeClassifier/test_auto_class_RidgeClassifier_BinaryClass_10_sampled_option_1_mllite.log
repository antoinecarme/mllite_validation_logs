          X_0       X_1       X_2  ...       X_8       X_9  target
0   -1.064559 -0.820872 -0.723270  ... -0.319080 -0.383915       0
1   -0.960957 -1.294560 -0.778172  ...  0.207019 -0.945521       0
2   -1.406136 -0.242116  1.301289  ... -1.426875  1.876952       1
3   -1.954561 -1.845000  0.508844  ... -1.374292  2.746056       0
4   -0.098659 -1.731538  2.272469  ...  1.740497  0.199837       1
..        ...       ...       ...  ...       ...       ...     ...
123  0.637167  0.266685 -2.101867  ...  0.443480  0.295088       0
124  1.237566  0.635414  1.362477  ... -1.462748 -0.264504       1
125 -2.188798  1.247515 -0.196171  ... -0.605569 -1.014692       1
126  1.684683  1.206950  0.344897  ... -0.717647  0.491219       0
127 -0.873119 -0.340358 -0.067087  ... -0.526077  1.201329       1

[128 rows x 11 columns]
MLLITE_MODEL_SET_OPTIONS RidgeClassifier {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { "alpha" : 0.0000001,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
('OPERATION_START', 'TRAINING')
[[-1.0645586  -0.8208718  -0.72327    -0.09642018 -0.40463343 -0.81522477
  -0.8386918   0.65200984 -0.31908    -0.3839149 ]
 [-0.9609572  -1.2945602  -0.77817184  0.8359748  -1.0189681  -0.12086504
  -0.68072116 -0.5189585   0.20701888 -0.9455213 ]
 [-1.4061359  -0.24211647  1.301289   -0.49436462  1.0264262   1.0800456
   1.3956257  -1.0432675  -1.426875    1.8769516 ]
 [-1.9545612  -1.8449999   0.5088439  -0.224022    0.66320896  0.0830382
   0.446295    0.53221494 -1.3742915   2.7460556 ]
 [-0.09865901 -1.7315376   2.2724695   0.11809641  1.0834117   2.8048902
   2.7064822   0.84583855  1.7404972   0.19983661]] [0 0 1 0 1]
MLLITE_FIT_USING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 3 4
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 4 4
('OPERATION_END_ELAPSED', 0.007, 'TRAINING')
{ "alpha" : 0.0000001,   }
{ "alpha" : 0.0000001,   }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_il8"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 128, "dataset_features" : 10 },
	"classes" : [ 0, 1 ],
	"equations" : {
		"class_1" : {
			"intercept" : 0.039925,
			"coeffs" : [ 0.031302, 0.049832, 0.146315, -0.037260, -0.183652, 0.302052, 0.249603, 0.047503, -0.002003, -0.047692 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_10_sampled_option_1.json'

MLLITE_MODEL_SET_OPTIONS RidgeClassifier {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { "alpha" : 0.0000001,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
MLLITE_RELOADING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_il8"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 128, "dataset_features" : 10 },
	"classes" : [ 0, 1 ],
	"equations" : {
		"class_1" : {
			"intercept" : 0.039925,
			"coeffs" : [ 0.031302, 0.049832, 0.146315, -0.037260, -0.183652, 0.302052, 0.249603, 0.047503, -0.002003, -0.047692 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1 ],
	"dataset" : 	{
		"dataset_features" : 10,
		"dataset_rows" : 128
	},
	"equations" : 	{
		"class_1" : 	{
			"coeffs" : [ 0.031302, 0.049832, 0.146315, -0.03726, -0.183652, 0.302052, 0.249603, 0.047503, -0.002003, -0.047692 ],
			"intercept" : 0.039925
		}
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_il8", "version" : "2024-W12" },
	"options" :  { "alpha" : 0.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0.7182 0.2818]
 [0.5982 0.4018]
 [0.2526 0.7474]
 [0.559  0.441 ]
 [0.037  0.963 ]
 [0.6581 0.3419]
 [0.3171 0.6829]
 [0.077  0.923 ]
 [0.8998 0.1002]
 [0.8091 0.1909]
 [0.7853 0.2147]
 [0.2501 0.7499]
 [0.77   0.23  ]
 [0.051  0.949 ]
 [0.5255 0.4745]
 [0.2929 0.7071]
 [0.0432 0.9568]
 [0.2831 0.7169]
 [0.2679 0.7321]
 [0.0416 0.9584]
 [0.2788 0.7212]
 [0.7823 0.2177]
 [0.1002 0.8998]
 [0.3624 0.6376]
 [0.3708 0.6292]
 [0.5517 0.4483]
 [0.298  0.702 ]
 [0.849  0.151 ]
 [0.1568 0.8432]
 [0.3289 0.6711]
 [0.103  0.897 ]
 [0.5012 0.4988]
 [0.2381 0.7619]
 [0.1611 0.8389]
 [0.2644 0.7356]
 [0.3304 0.6696]
 [0.0535 0.9465]
 [0.8093 0.1907]
 [0.5556 0.4444]
 [0.7586 0.2414]
 [0.5823 0.4177]
 [0.708  0.292 ]
 [0.5146 0.4854]
 [0.9554 0.0446]
 [0.8066 0.1934]
 [0.6316 0.3684]
 [0.375  0.625 ]
 [0.891  0.109 ]
 [0.2008 0.7992]
 [0.7298 0.2702]
 [0.8365 0.1635]
 [0.8146 0.1854]
 [0.8219 0.1781]
 [0.9075 0.0925]
 [0.5156 0.4844]
 [0.2958 0.7042]
 [0.6328 0.3672]
 [0.5593 0.4407]
 [0.7147 0.2853]
 [0.6999 0.3001]
 [0.4601 0.5399]
 [0.4979 0.5021]
 [0.6306 0.3694]
 [0.6943 0.3057]
 [0.7325 0.2675]
 [0.5928 0.4072]
 [0.3229 0.6771]
 [0.2608 0.7392]
 [0.1811 0.8189]
 [0.5785 0.4215]
 [0.1506 0.8494]
 [0.2654 0.7346]
 [0.4507 0.5493]
 [0.5524 0.4476]
 [0.72   0.28  ]
 [0.1678 0.8322]
 [0.8439 0.1561]
 [0.8833 0.1167]
 [0.6798 0.3202]
 [0.9176 0.0824]
 [0.1064 0.8936]
 [0.3897 0.6103]
 [0.2282 0.7718]
 [0.7152 0.2848]
 [0.8806 0.1194]
 [0.3386 0.6614]
 [0.9092 0.0908]
 [0.7381 0.2619]
 [0.073  0.927 ]
 [0.2659 0.7341]
 [0.9211 0.0789]
 [0.12   0.88  ]
 [0.7521 0.2479]
 [0.45   0.55  ]
 [0.3459 0.6541]
 [0.6381 0.3619]
 [0.6513 0.3487]
 [0.5428 0.4572]
 [0.2894 0.7106]
 [0.0593 0.9407]
 [0.7228 0.2772]
 [0.2053 0.7947]
 [0.8509 0.1491]
 [0.7367 0.2633]
 [0.233  0.767 ]
 [0.2237 0.7763]
 [0.8404 0.1596]
 [0.2226 0.7774]
 [0.3412 0.6588]
 [0.1553 0.8447]
 [0.5575 0.4425]
 [0.6732 0.3268]
 [0.4191 0.5809]
 [0.495  0.505 ]
 [0.2572 0.7428]
 [0.1871 0.8129]
 [0.7423 0.2577]
 [0.4291 0.5709]
 [0.769  0.231 ]
 [0.3005 0.6995]
 [0.7764 0.2236]
 [0.4663 0.5337]
 [0.6491 0.3509]
 [0.7217 0.2783]
 [0.1899 0.8101]
 [0.3304 0.6696]
 [0.323  0.677 ]
 [0.1565 0.8435]]
(128, 2)
(128,) float32
MODEL_PERFS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': '{"alpha" : 0.0000001}', 'dataset': 'BinaryClass_10_sampled', 'size': 128, 'accuracy': 0.8359375, 'auc': 0.9038414484952287}
WRITING_PERF_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_10_sampled_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': '{"alpha" : 0.0000001}', 'dataset': 'BinaryClass_10_sampled', 'training_time_in_sec': 0.007, 'prediction_time_in_sec': 0.0}
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_10_sampled_option_1.sql'



SQL_OUT_PUT_FIRST_LINES_START
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT model_input."index" AS "index",
   0.039925 + 0.031302 * X_0 + 0.049832 * X_1 + 0.146315 * X_2 + -0.037260 * X_3 + -0.183652 * X_4 + 0.302052 * X_5 + 0.249603 * X_6 + 0.047503 * X_7 + -0.002003 * X_8 + -0.047692 * X_9 AS "Score_1", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "LogProba_1"
  FROM model_input
 ),
soft_max_orig_cte AS 
( SELECT t."index" AS "index", 
   -t."Score_1" AS "Score_0",
   1.0 - t."Proba_1" AS "Proba_0",
   CAST(NULL AS FLOAT) AS "LogProba_0",
   t."Score_1" AS "Score_1",
   t."Prob
SQL_OUT_PUT_FIRST_LINES_END
SQL_OUT_PUT_LAST_LINES_START
S t
),
arg_max_cte_with_max_proba_idx AS 
( SELECT t.*,
   CASE WHEN(t."Proba_0" = t."Max_Proba") THEN 0 else NULL END AS "max_idx_0",
   CASE WHEN(t."Proba_1" = t."Max_Proba") THEN 1 else NULL END AS "max_idx_1"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
 (SELECT t.*,
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 128 entries, 0 to 127
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     128 non-null    float32
 1   X_1     128 non-null    float32
 2   X_2     128 non-null    float32
 3   X_3     128 non-null    float32
 4   X_4     128 non-null    float32
 5   X_5     128 non-null    float32
 6   X_6     128 non-null    float32
 7   X_7     128 non-null    float32
 8   X_8     128 non-null    float32
 9   X_9     128 non-null    float32
dtypes: float32(10)
memory usage: 6.0 KB
            X_0       X_1       X_2  ...       X_7       X_8       X_9
index                                ...                              
0     -1.064559 -0.820872 -0.723270  ...  0.652010 -0.319080 -0.383915
1     -0.960957 -1.294560 -0.778172  ... -0.518959  0.207019 -0.945521
2     -1.406136 -0.242116  1.301289  ... -1.043267 -1.426875  1.876952
3     -1.954561 -1.845000  0.508844  ...  0.532215 -1.374292  2.746056
4     -0.098659 -1.731538  2.272470  ...  0.845839  1.740497  0.199837
...         ...       ...       ...  ...       ...       ...       ...
123    0.637167  0.266685 -2.101867  ...  0.620480  0.443480  0.295088
124    1.237566  0.635414  1.362477  ... -2.311953 -1.462748 -0.264504
125   -2.188798  1.247514 -0.196171  ...  1.521653 -0.605569 -1.014692
126    1.684683  1.206950  0.344897  ... -0.703913 -0.717647  0.491219
127   -0.873119 -0.340358 -0.067087  ... -0.895793 -0.526077  1.201329

[128 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
