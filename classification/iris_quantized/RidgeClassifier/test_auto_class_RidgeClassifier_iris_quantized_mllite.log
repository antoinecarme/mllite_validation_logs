     sepal length (cm)  sepal width (cm)  ...  petal width (cm)  target
0                    2                 8  ...                 1       0
1                    1                 4  ...                 1       0
2                    0                 6  ...                 1       0
3                    0                 5  ...                 1       0
4                    1                 8  ...                 1       0
..                 ...               ...  ...               ...     ...
145                  8                 4  ...                 9       2
146                  6                 1  ...                 7       2
147                  7                 4  ...                 8       2
148                  6                 7  ...                 9       2
149                  5                 4  ...                 7       2

[150 rows x 5 columns]
MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
('OPERATION_START', 'TRAINING')
[[2. 8. 1. 1.]
 [1. 4. 1. 1.]
 [0. 6. 0. 1.]
 [0. 5. 2. 1.]
 [1. 8. 1. 1.]] [0 0 0 0 0]
MLLITE_FIT_USING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 5 5
('OPERATION_END_ELAPSED', 0.013, 'TRAINING')
{ ,   }
{ ,   }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W13", "signature" : "ff4_il8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 150, "dataset_features" : 4 },
	"classes" : [ 0, 1, 2 ],
	"equations" : {
		"class_0" : {
			"intercept" : 0.096068,
			"coeffs" : [ -0.102039, 0.150494, -0.016461, -0.124419 ]
		},
		"class_1" : {
			"intercept" : 0.791755,
			"coeffs" : [ 0.239021, -0.209804, -0.239825, -0.032952 ]
		},
		"class_2" : {
			"intercept" : -1.887829,
			"coeffs" : [ -0.136984, 0.059310, 0.256289, 0.157370 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_iris_quantized.json'

MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
MLLITE_RELOADING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W13", "signature" : "ff4_il8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 150, "dataset_features" : 4 },
	"classes" : [ 0, 1, 2 ],
	"equations" : {
		"class_0" : {
			"intercept" : 0.096068,
			"coeffs" : [ -0.102039, 0.150494, -0.016461, -0.124419 ]
		},
		"class_1" : {
			"intercept" : 0.791755,
			"coeffs" : [ 0.239021, -0.209804, -0.239825, -0.032952 ]
		},
		"class_2" : {
			"intercept" : -1.887829,
			"coeffs" : [ -0.136984, 0.059310, 0.256289, 0.157370 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1, 2 ],
	"dataset" : 	{
		"dataset_features" : 4,
		"dataset_rows" : 150
	},
	"equations" : 	{
		"class_0" : 	{
			"coeffs" : [ -0.102039, 0.150494, -0.016461, -0.124419 ],
			"intercept" : 0.096068
		},
		"class_1" : 	{
			"coeffs" : [ 0.239021, -0.209804, -0.239825, -0.032952 ],
			"intercept" : 0.791755
		},
		"class_2" : 	{
			"coeffs" : [ -0.136984, 0.05931, 0.256289, 0.15737 ],
			"intercept" : -1.887829
		}
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_il8", "version" : "2024-W13" },
	"options" :  { "alpha" : 1.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0.7679 0.1495 0.0827]
 [0.5729 0.3351 0.092 ]
 [0.7362 0.1862 0.0777]
 [0.6986 0.1621 0.1393]
 [0.8001 0.1107 0.0892]
 [0.7504 0.1256 0.124 ]
 [0.7563 0.1169 0.1268]
 [0.7581 0.1203 0.1216]
 [0.5623 0.3353 0.1024]
 [0.693  0.2063 0.1007]
 [0.7828 0.1196 0.0976]
 [0.7819 0.0882 0.1299]
 [0.6645 0.2522 0.0834]
 [0.6369 0.3022 0.0608]
 [0.7115 0.2389 0.0496]
 [0.7635 0.1253 0.1112]
 [0.7367 0.1927 0.0706]
 [0.7375 0.1573 0.1052]
 [0.7169 0.1687 0.1144]
 [0.7751 0.0922 0.1326]
 [0.6833 0.2145 0.1022]
 [0.7751 0.0922 0.1326]
 [0.8258 0.1016 0.0726]
 [0.6897 0.1687 0.1416]
 [0.7819 0.0882 0.1299]
 [0.5957 0.2787 0.1256]
 [0.7212 0.1254 0.1534]
 [0.7709 0.12   0.109 ]
 [0.7158 0.1998 0.0844]
 [0.7442 0.1204 0.1354]
 [0.6986 0.1621 0.1393]
 [0.6484 0.2231 0.1286]
 [0.8358 0.0828 0.0814]
 [0.7777 0.1485 0.0738]
 [0.6584 0.2148 0.1268]
 [0.6861 0.2441 0.0699]
 [0.7035 0.2408 0.0557]
 [0.8262 0.1044 0.0695]
 [0.6073 0.3158 0.0769]
 [0.7256 0.162  0.1124]
 [0.768  0.1456 0.0864]
 [0.274  0.6598 0.0662]
 [0.7362 0.1862 0.0777]
 [0.7602 0.0922 0.1476]
 [0.7751 0.0922 0.1326]
 [0.5966 0.2719 0.1315]
 [0.808  0.0877 0.1043]
 [0.7458 0.1509 0.1033]
 [0.808  0.0877 0.1043]
 [0.7572 0.1503 0.0925]
 [0.2338 0.4806 0.2856]
 [0.267  0.3801 0.3529]
 [0.1948 0.4474 0.3578]
 [0.1842 0.6062 0.2096]
 [0.1121 0.6745 0.2134]
 [0.2497 0.4498 0.3005]
 [0.3119 0.1762 0.5119]
 [0.2778 0.5274 0.1948]
 [0.1456 0.7154 0.139 ]
 [0.2373 0.4244 0.3384]
 [0.2778 0.5274 0.1948]
 [0.2413 0.4463 0.3124]
 [0.1292 0.7674 0.1034]
 [0.2275 0.3523 0.4201]
 [0.2935 0.461  0.2454]
 [0.2139 0.5605 0.2256]
 [0.2622 0.2759 0.4619]
 [0.2126 0.6264 0.1609]
 [0.0822 0.7232 0.1945]
 [0.2126 0.6264 0.1609]
 [0.244  0.1539 0.6021]
 [0.198  0.627  0.1751]
 [0.1144 0.5612 0.3244]
 [0.2197 0.4451 0.3352]
 [0.1824 0.6373 0.1803]
 [0.1691 0.6354 0.1954]
 [0.1111 0.6864 0.2024]
 [0.1353 0.3905 0.4741]
 [0.2006 0.4256 0.3738]
 [0.1901 0.7003 0.1095]
 [0.2057 0.6177 0.1766]
 [0.2057 0.6177 0.1766]
 [0.1911 0.6171 0.1918]
 [0.1308 0.3648 0.5045]
 [0.28   0.2094 0.5106]
 [0.3577 0.1796 0.4628]
 [0.1948 0.4474 0.3578]
 [0.1034 0.7574 0.1392]
 [0.3498 0.3832 0.267 ]
 [0.2307 0.5296 0.2397]
 [0.238  0.4371 0.3249]
 [0.2752 0.3716 0.3532]
 [0.1911 0.6171 0.1918]
 [0.2778 0.5274 0.1948]
 [0.1911 0.6171 0.1918]
 [0.3498 0.3832 0.267 ]
 [0.2935 0.461  0.2454]
 [0.2218 0.5511 0.2271]
 [0.2873 0.5351 0.1776]
 [0.2399 0.5403 0.2198]
 [0.0775 0.0323 0.8902]
 [0.1181 0.2566 0.6253]
 [0.0863 0.2456 0.668 ]
 [0.1238 0.2071 0.6691]
 [0.0882 0.1737 0.7381]
 [0.0863 0.2456 0.668 ]
 [0.1776 0.2169 0.6054]
 [0.09   0.3349 0.5752]
 [0.0722 0.4911 0.4367]
 [0.0889 0.0719 0.8392]
 [0.1639 0.1793 0.6568]
 [0.0826 0.3997 0.5177]
 [0.1039 0.2627 0.6335]
 [0.0961 0.229  0.6749]
 [0.0884 0.1609 0.7507]
 [0.1119 0.1073 0.7808]
 [0.135  0.2216 0.6434]
 [0.1248 0.0642 0.811 ]
 [0.0384 0.282  0.6796]
 [0.1084 0.4335 0.4581]
 [0.1101 0.1484 0.7415]
 [0.1257 0.2611 0.6132]
 [0.062  0.3625 0.5755]
 [0.0987 0.5304 0.3709]
 [0.1539 0.1321 0.714 ]
 [0.1403 0.1772 0.6825]
 [0.1222 0.4583 0.4195]
 [0.1902 0.2466 0.5632]
 [0.0815 0.3011 0.6174]
 [0.1367 0.405  0.4583]
 [0.075  0.4    0.525 ]
 [0.1564 0.1033 0.7404]
 [0.0662 0.2683 0.6655]
 [0.1401 0.3834 0.4765]
 [0.1458 0.2968 0.5574]
 [0.0696 0.2169 0.7135]
 [0.1239 0.0589 0.8172]
 [0.154  0.1762 0.6698]
 [0.1902 0.2466 0.5632]
 [0.12   0.2117 0.6683]
 [0.097  0.1874 0.7156]
 [0.1107 0.2675 0.6218]
 [0.1181 0.2566 0.6253]
 [0.0915 0.0987 0.8098]
 [0.0982 0.1012 0.8006]
 [0.0942 0.3263 0.5796]
 [0.0977 0.42   0.4824]
 [0.1241 0.2791 0.5968]
 [0.1239 0.0589 0.8172]
 [0.1687 0.175  0.6563]]
(150, 3)
(150, 3) float32
MODEL_PERFS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'iris_quantized', 'size': 150, 'accuracy': 0.92, 'auc': 0.9705333333333334}
WRITING_PERF_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_iris_quantized.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'iris_quantized', 'training_time_in_sec': 0.013, 'prediction_time_in_sec': 0.0}
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_iris_quantized_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('iris_quantized', 'RidgeClassifier', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT t."index" AS "index",
   0.096068 + -0.102039 * t."X_0" + 0.150494 * t."X_1" + -0.016461 * t."X_2" + -0.124419 * t."X_3" AS "Score_0",
   CAST(NULL AS FLOAT) AS "Proba_0",
   CAST(NULL AS FLOAT) AS "LogProba_0",
   0.791755 + 0.239021 * t."X_0" + -0.209804 * t."X_1" + -0.239825 * t."X_2" + -0.032952 * t."X_3" AS "Score_1",
   CAST(NULL AS FLOAT) AS "Proba_1",
   CAST(NULL AS FLOAT) AS "LogProba_1",
   -1.887829 + -0.136984 * t."X_0" + 0.059310 * t."X_1" + 0.256289 * t."X_2" + 0.157370 * t."X_3" AS "Score_2",
   CAST(NULL AS FLOAT) AS "Proba_2",
   CAST(NULL AS FLOAT) AS "LogProba_2"
  FROM model_input AS t
 ),
soft_max_orig_cte AS 
( SELECT t."index" AS "index", 
   t."Score_0" AS "Score_0",
   t."Proba_0" AS "Proba_0",
   t."LogProba_
SQL_OUT_PUT_FIRST_LINES_END ('iris_quantized', 'RidgeClassifier', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('iris_quantized', 'RidgeClassifier', 'duckdb')
roba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1", t."max_idx_2" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('iris_quantized', 'RidgeClassifier', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 150 entries, 0 to 149
Data columns (total 4 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     150 non-null    float32
 1   X_1     150 non-null    float32
 2   X_2     150 non-null    float32
 3   X_3     150 non-null    float32
dtypes: float32(4)
memory usage: 3.5 KB
       X_0  X_1  X_2  X_3
index                    
0      2.0  8.0  1.0  1.0
1      1.0  4.0  1.0  1.0
2      0.0  6.0  0.0  1.0
3      0.0  5.0  2.0  1.0
4      1.0  8.0  1.0  1.0
...    ...  ...  ...  ...
145    8.0  4.0  7.0  9.0
146    6.0  1.0  7.0  7.0
147    7.0  4.0  7.0  8.0
148    6.0  7.0  8.0  9.0
149    5.0  4.0  7.0  7.0

[150 rows x 4 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 150 entries, 0 to 149
Data columns (total 12 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          150 non-null    int64  
 1   Score_0        150 non-null    float64
 2   Proba_0        150 non-null    float64
 3   LogProba_0     150 non-null    float64
 4   Score_1        150 non-null    float64
 5   Proba_1        150 non-null    float64
 6   LogProba_1     150 non-null    float64
 7   Score_2        150 non-null    float64
 8   Proba_2        150 non-null    float64
 9   LogProba_2     150 non-null    float64
 10  Decision       150 non-null    int64  
 11  DecisionProba  150 non-null    float64
dtypes: float64(10), int64(2)
memory usage: 14.2 KB
     index   Score_0   Proba_0  ...  LogProba_2  Decision  DecisionProba
0        0  0.955062  0.767854  ...   -2.492876         0       0.767854
1        1  0.455125  0.572918  ...   -2.386052         0       0.572918
2        2  0.874613  0.736152  ...   -2.555530         0       0.736152
3        3  0.691197  0.698630  ...   -1.971162         0       0.698630
4        4  1.057101  0.800061  ...   -2.416843         0       0.800061
..     ...       ...       ...  ...         ...       ...            ...
145    145 -1.353266  0.094170  ...   -0.545492         2       0.579556
146    146 -1.351832  0.097678  ...   -0.729053         2       0.482366
147    147 -1.126808  0.124126  ...   -0.516140         2       0.596820
148    148 -0.714167  0.123917  ...   -0.201895         2       0.817181
149    149 -0.798311  0.168713  ...   -0.421139         2       0.656299

[150 rows x 12 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Decision',
       'DecisionProba'],
      dtype='object')
     index   Score_0  SQL_Proba_0  ...  Py_Proba_1  Py_Proba_2  Py_Decision
134    134 -1.017416     0.145780  ...    0.296846    0.557375            2
135    135 -1.488227     0.069581  ...    0.216904    0.713515            2
136    136 -0.714167     0.123917  ...    0.058901    0.817182            2
137    137 -0.868356     0.153985  ...    0.176237    0.669778            2
138    138 -0.781850     0.190180  ...    0.246620    0.563200            2
139    139 -1.094814     0.120029  ...    0.211715    0.668256            2
140    140 -1.219233     0.096970  ...    0.187424    0.715606            2
141    141 -1.202772     0.110687  ...    0.267478    0.621836            2
142    142 -1.147754     0.118073  ...    0.256635    0.625292            2
143    143 -1.085200     0.091516  ...    0.098674    0.809811            2
144    144 -1.042664     0.098219  ...    0.101194    0.800587            2
145    145 -1.353266     0.094170  ...    0.326274    0.579556            2
146    146 -1.351832     0.097678  ...    0.419957    0.482365            2
147    147 -1.126808     0.124126  ...    0.279054    0.596820            2
148    148 -0.714167     0.123917  ...    0.058901    0.817182            2
149    149 -0.798311     0.168713  ...    0.174988    0.656299            2

[16 rows x 16 columns]
MLLITE_CLASS_SQL_ERROR ('iris_quantized', 'RidgeClassifier', 'duckdb') ('Py_Proba_0', 'SQL_Proba_0') 2.84459585046896e-07
     Py_Proba_0  SQL_Proba_0   SQL_Error_0
134    0.145780     0.145780 -5.008990e-07
135    0.069581     0.069581 -2.063282e-07
136    0.123917     0.123917 -4.173861e-07
137    0.153985     0.153985 -3.688365e-07
138    0.190179     0.190180 -3.116266e-07
139    0.120029     0.120029 -2.698682e-07
140    0.096970     0.096970 -2.417304e-07
141    0.110686     0.110687 -2.291496e-07
142    0.118073     0.118073 -3.755725e-07
143    0.091515     0.091516 -2.849634e-07
144    0.098219     0.098219 -2.411477e-07
145    0.094170     0.094170 -2.160997e-07
146    0.097678     0.097678 -2.933643e-07
147    0.124126     0.124126 -2.543254e-07
148    0.123917     0.123917 -4.173861e-07
149    0.168713     0.168713 -3.935748e-07
MLLITE_CLASS_SQL_ERROR ('iris_quantized', 'RidgeClassifier', 'duckdb') ('Py_Proba_1', 'SQL_Proba_1') 3.185171845990209e-07
     Py_Proba_1  SQL_Proba_1   SQL_Error_1
134    0.296846     0.296845  3.217081e-07
135    0.216904     0.216904  3.876132e-07
136    0.058901     0.058902 -5.051184e-08
137    0.176237     0.176237  2.027450e-07
138    0.246620     0.246620  2.121546e-07
139    0.211715     0.211714  2.836524e-07
140    0.187424     0.187424  2.434778e-07
141    0.267478     0.267477  3.982133e-07
142    0.256635     0.256635  1.252367e-07
143    0.098674     0.098674  5.693328e-08
144    0.101194     0.101194  2.418637e-08
145    0.326274     0.326273  4.816404e-07
146    0.419957     0.419956  4.771649e-07
147    0.279054     0.279054  3.907061e-07
148    0.058901     0.058902 -5.051184e-08
149    0.174988     0.174988  9.163192e-08
MLLITE_CLASS_SQL_ERROR ('iris_quantized', 'RidgeClassifier', 'duckdb') ('Py_Proba_2', 'SQL_Proba_2') 1.6042436042797612e-07
     Py_Proba_2  SQL_Proba_2   SQL_Error_2
134    0.557375     0.557375  1.791909e-07
135    0.713515     0.713515 -1.738344e-07
136    0.817182     0.817181  4.604474e-07
137    0.669778     0.669778  1.809927e-07
138    0.563200     0.563200  2.037802e-07
139    0.668256     0.668256  3.091932e-08
140    0.715606     0.715606 -2.409916e-08
141    0.621836     0.621836 -1.541625e-07
142    0.625292     0.625291  2.652370e-07
143    0.809811     0.809811  2.876347e-07
144    0.800587     0.800587  2.095107e-07
145    0.579556     0.579556 -3.176948e-07
146    0.482365     0.482366 -1.167453e-07
147    0.596820     0.596820 -1.065784e-07
148    0.817182     0.817181  4.604474e-07
149    0.656299     0.656299  3.317452e-07
MLLITE_CLASS_SQL_EXECUTION_STATUS ('iris_quantized', 'RidgeClassifier', 'duckdb', 'Success')
     Py_Decision  SQL_Decision
134            2             2
135            2             2
136            2             2
137            2             2
138            2             2
139            2             2
140            2             2
141            2             2
142            2             2
143            2             2
144            2             2
145            2             2
146            2             2
147            2             2
148            2             2
149            2             2
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_iris_quantized_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('iris_quantized', 'RidgeClassifier', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT t."index" AS "index",
   0.096068 + -0.102039 * t."X_0" + 0.150494 * t."X_1" + -0.016461 * t."X_2" + -0.124419 * t."X_3" AS "Score_0",
   CAST(NULL AS FLOAT) AS "Proba_0",
   CAST(NULL AS FLOAT) AS "LogProba_0",
   0.791755 + 0.239021 * t."X_0" + -0.209804 * t."X_1" + -0.239825 * t."X_2" + -0.032952 * t."X_3" AS "Score_1",
   CAST(NULL AS FLOAT) AS "Proba_1",
   CAST(NULL AS FLOAT) AS "LogProba_1",
   -1.887829 + -0.136984 * t."X_0" + 0.059310 * t."X_1" + 0.256289 * t."X_2" + 0.157370 * t."X_3" AS "Score_2",
   CAST(NULL AS FLOAT) AS "Proba_2",
   CAST(NULL AS FLOAT) AS "LogProba_2"
  FROM model_input AS t
 ),
soft_max_orig_cte AS 
( SELECT t."index" AS "index", 
   t."Score_0" AS "Score_0",
   t."Proba_0" AS "Proba_0",
   t."LogProba_
SQL_OUT_PUT_FIRST_LINES_END ('iris_quantized', 'RidgeClassifier', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('iris_quantized', 'RidgeClassifier', 'sqlite')
roba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1", t."max_idx_2" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('iris_quantized', 'RidgeClassifier', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 150 entries, 0 to 149
Data columns (total 4 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     150 non-null    float32
 1   X_1     150 non-null    float32
 2   X_2     150 non-null    float32
 3   X_3     150 non-null    float32
dtypes: float32(4)
memory usage: 3.5 KB
       X_0  X_1  X_2  X_3
index                    
0      2.0  8.0  1.0  1.0
1      1.0  4.0  1.0  1.0
2      0.0  6.0  0.0  1.0
3      0.0  5.0  2.0  1.0
4      1.0  8.0  1.0  1.0
...    ...  ...  ...  ...
145    8.0  4.0  7.0  9.0
146    6.0  1.0  7.0  7.0
147    7.0  4.0  7.0  8.0
148    6.0  7.0  8.0  9.0
149    5.0  4.0  7.0  7.0

[150 rows x 4 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 150 entries, 0 to 149
Data columns (total 12 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          150 non-null    int64  
 1   Score_0        150 non-null    float64
 2   Proba_0        150 non-null    float64
 3   LogProba_0     150 non-null    float64
 4   Score_1        150 non-null    float64
 5   Proba_1        150 non-null    float64
 6   LogProba_1     150 non-null    float64
 7   Score_2        150 non-null    float64
 8   Proba_2        150 non-null    float64
 9   LogProba_2     150 non-null    float64
 10  Decision       150 non-null    int64  
 11  DecisionProba  150 non-null    float64
dtypes: float64(10), int64(2)
memory usage: 14.2 KB
     index   Score_0   Proba_0  ...  LogProba_2  Decision  DecisionProba
0        0  0.955062  0.767854  ...   -2.492876         0       0.767854
1        1  0.455125  0.572918  ...   -2.386052         0       0.572918
2        2  0.874613  0.736152  ...   -2.555530         0       0.736152
3        3  0.691197  0.698630  ...   -1.971162         0       0.698630
4        4  1.057101  0.800061  ...   -2.416843         0       0.800061
..     ...       ...       ...  ...         ...       ...            ...
145    145 -1.353266  0.094170  ...   -0.545492         2       0.579556
146    146 -1.351832  0.097678  ...   -0.729053         2       0.482366
147    147 -1.126808  0.124127  ...   -0.516140         2       0.596820
148    148 -0.714167  0.123917  ...   -0.201894         2       0.817181
149    149 -0.798311  0.168713  ...   -0.421139         2       0.656299

[150 rows x 12 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Decision',
       'DecisionProba'],
      dtype='object')
     index   Score_0  SQL_Proba_0  ...  Py_Proba_1  Py_Proba_2  Py_Decision
134    134 -1.017416     0.145780  ...    0.296846    0.557375            2
135    135 -1.488227     0.069581  ...    0.216904    0.713515            2
136    136 -0.714167     0.123917  ...    0.058901    0.817182            2
137    137 -0.868356     0.153985  ...    0.176237    0.669778            2
138    138 -0.781850     0.190180  ...    0.246620    0.563200            2
139    139 -1.094814     0.120029  ...    0.211715    0.668256            2
140    140 -1.219233     0.096970  ...    0.187424    0.715606            2
141    141 -1.202772     0.110687  ...    0.267478    0.621836            2
142    142 -1.147754     0.118073  ...    0.256635    0.625292            2
143    143 -1.085200     0.091516  ...    0.098674    0.809811            2
144    144 -1.042664     0.098219  ...    0.101194    0.800587            2
145    145 -1.353266     0.094170  ...    0.326274    0.579556            2
146    146 -1.351832     0.097678  ...    0.419957    0.482365            2
147    147 -1.126808     0.124127  ...    0.279054    0.596820            2
148    148 -0.714167     0.123917  ...    0.058901    0.817182            2
149    149 -0.798311     0.168713  ...    0.174988    0.656299            2

[16 rows x 16 columns]
MLLITE_CLASS_SQL_ERROR ('iris_quantized', 'RidgeClassifier', 'sqlite') ('Py_Proba_0', 'SQL_Proba_0') 2.887318930927992e-07
     Py_Proba_0  SQL_Proba_0   SQL_Error_0
134    0.145780     0.145780 -5.082176e-07
135    0.069581     0.069581 -2.100550e-07
136    0.123917     0.123917 -4.151769e-07
137    0.153985     0.153985 -4.042814e-07
138    0.190179     0.190180 -3.572827e-07
139    0.120029     0.120029 -2.842544e-07
140    0.096970     0.096970 -2.483635e-07
141    0.110686     0.110687 -2.347746e-07
142    0.118073     0.118073 -3.820419e-07
143    0.091515     0.091516 -2.842822e-07
144    0.098219     0.098219 -2.433545e-07
145    0.094170     0.094170 -2.227863e-07
146    0.097678     0.097678 -3.009947e-07
147    0.124126     0.124127 -2.766761e-07
148    0.123917     0.123917 -4.151769e-07
149    0.168713     0.168713 -4.396110e-07
MLLITE_CLASS_SQL_ERROR ('iris_quantized', 'RidgeClassifier', 'sqlite') ('Py_Proba_1', 'SQL_Proba_1') 3.18916951411082e-07
     Py_Proba_1  SQL_Proba_1   SQL_Error_1
134    0.296846     0.296845  3.134549e-07
135    0.216904     0.216904  4.204981e-07
136    0.058901     0.058902 -3.947148e-08
137    0.176237     0.176237  1.626781e-07
138    0.246620     0.246620  1.986050e-07
139    0.211715     0.211714  2.726982e-07
140    0.187424     0.187424  2.253723e-07
141    0.267478     0.267477  3.838598e-07
142    0.256635     0.256635  1.166577e-07
143    0.098674     0.098674  6.338394e-08
144    0.101194     0.101194  3.790717e-08
145    0.326274     0.326273  4.697903e-07
146    0.419957     0.419956  4.951845e-07
147    0.279054     0.279054  3.485549e-07
148    0.058901     0.058902 -3.947148e-08
149    0.174988     0.174988  7.705700e-08
MLLITE_CLASS_SQL_ERROR ('iris_quantized', 'RidgeClassifier', 'sqlite') ('Py_Proba_2', 'SQL_Proba_2') 1.6284335971880614e-07
     Py_Proba_2  SQL_Proba_2   SQL_Error_2
134    0.557375     0.557375  1.947626e-07
135    0.713515     0.713515 -2.029925e-07
136    0.817182     0.817181  4.471978e-07
137    0.669778     0.669778  2.565045e-07
138    0.563200     0.563200  2.629858e-07
139    0.668256     0.668256  5.625972e-08
140    0.715606     0.715606  6.394911e-10
141    0.621836     0.621836 -1.341841e-07
142    0.625292     0.625291  2.802854e-07
143    0.809811     0.809811  2.805029e-07
144    0.800587     0.800587  1.979968e-07
145    0.579556     0.579556 -2.991581e-07
146    0.482365     0.482366 -1.271346e-07
147    0.596820     0.596820 -4.207647e-08
148    0.817182     0.817181  4.471978e-07
149    0.656299     0.656299  3.923563e-07
MLLITE_CLASS_SQL_EXECUTION_STATUS ('iris_quantized', 'RidgeClassifier', 'sqlite', 'Success')
     Py_Decision  SQL_Decision
134            2             2
135            2             2
136            2             2
137            2             2
138            2             2
139            2             2
140            2             2
141            2             2
142            2             2
143            2             2
144            2             2
145            2             2
146            2             2
147            2             2
148            2             2
149            2             2
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_iris_quantized_pgsql.sql'



SQL_OUT_PUT_FIRST_LINES_START ('iris_quantized', 'RidgeClassifier', 'pgsql')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT t."index" AS "index",
   0.096068 + -0.102039 * t."X_0" + 0.150494 * t."X_1" + -0.016461 * t."X_2" + -0.124419 * t."X_3" AS "Score_0",
   CAST(NULL AS FLOAT) AS "Proba_0",
   CAST(NULL AS FLOAT) AS "LogProba_0",
   0.791755 + 0.239021 * t."X_0" + -0.209804 * t."X_1" + -0.239825 * t."X_2" + -0.032952 * t."X_3" AS "Score_1",
   CAST(NULL AS FLOAT) AS "Proba_1",
   CAST(NULL AS FLOAT) AS "LogProba_1",
   -1.887829 + -0.136984 * t."X_0" + 0.059310 * t."X_1" + 0.256289 * t."X_2" + 0.157370 * t."X_3" AS "Score_2",
   CAST(NULL AS FLOAT) AS "Proba_2",
   CAST(NULL AS FLOAT) AS "LogProba_2"
  FROM model_input AS t
 ),
soft_max_orig_cte AS 
( SELECT t."index" AS "index", 
   t."Score_0" AS "Score_0",
   t."Proba_0" AS "Proba_0",
   t."LogProba_
SQL_OUT_PUT_FIRST_LINES_END ('iris_quantized', 'RidgeClassifier', 'pgsql')
SQL_OUT_PUT_LAST_LINES_START ('iris_quantized', 'RidgeClassifier', 'pgsql')
roba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1", t."max_idx_2" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('iris_quantized', 'RidgeClassifier', 'pgsql') 




COPY_TRAINING_DATA_TO_SQLITE_START
