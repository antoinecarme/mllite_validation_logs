READING_CSV digits_small ['data/small/digits_small.csv']
    pixel_0_0  pixel_0_1  pixel_0_2  ...  pixel_7_6  pixel_7_7  target
0           0          0          0  ...          7          0       2
1           0          0         11  ...         16         12       1
2           0          0          0  ...          0          0       1
3           0          0          7  ...          4          0       9
4           0          0          5  ...          0          0       8
..        ...        ...        ...  ...        ...        ...     ...
59          0          0          0  ...          0          0       4
60          0          0         12  ...          0          0       5
61          0          0          1  ...          0          0       8
62          0          0         10  ...          0          0       8
63          0          3         15  ...          0          0       5

[64 rows x 65 columns]
MLLITE_MODEL_SET_OPTIONS DecisionTreeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT DecisionTreeClassifier { "max_leaf_nodes" : 64}
MLLITE_MODEL_OPTIONS_AFTER_SETTING DecisionTreeClassifier { ,  "max_leaf_nodes" : 64 }
MLLITE_MODEL_JSON_AFTER_SETTING DecisionTreeClassifier None
('OPERATION_START', 'TRAINING')
[[ 0.  0.  0.  3. 15. 10.  1.  0.  0.  0.  0. 11. 10. 16.  4.  0.  0.  0.
   0. 12.  1. 15.  6.  0.  0.  0.  0.  3.  4. 15.  4.  0.  0.  0.  0.  6.
  15.  6.  0.  0.  0.  4. 15. 16.  9.  0.  0.  0.  0.  0. 13. 16. 15.  9.
   3.  0.  0.  0.  0.  4.  9. 14.  7.  0.]
 [ 0.  0. 11. 10.  0.  0.  0.  0.  0.  0. 11. 15.  0.  0.  0.  0.  0.  0.
  11. 16.  5.  0.  0.  0.  0.  0. 13. 16. 11.  0.  0.  0.  0.  0.  2.  7.
  16.  2.  0.  0.  0.  0.  0.  2. 14.  6.  0.  0.  0.  0.  6. 10. 15. 13.
   8.  3.  0.  0.  8. 16. 16. 16. 16. 12.]
 [ 0.  0.  0. 15. 11.  0.  0.  0.  0.  0.  6. 16. 16.  2.  0.  0.  0.  0.
  10. 16. 16.  1.  0.  0.  0.  2. 16. 16. 16.  3.  0.  0.  0.  7. 16. 16.
  14.  0.  0.  0.  0.  0.  3. 15. 10.  0.  0.  0.  0.  0.  0. 15.  7.  0.
   0.  0.  0.  0.  0. 14.  4.  0.  0.  0.]
 [ 0.  0.  7. 13. 10.  1.  0.  0.  0.  1. 15.  3.  9. 10.  0.  0.  0.  3.
  16.  4. 13. 11.  0.  0.  0.  0.  6. 12. 12. 16.  0.  0.  0.  0.  0.  0.
   0. 12.  5.  0.  0.  0.  0.  0.  0.  5. 11.  0.  0.  1. 11.  2.  0.  7.
  11.  0.  0.  0.  7. 13. 16. 15.  4.  0.]
 [ 0.  0.  5. 12. 13.  2.  0.  0.  0.  3. 16. 14. 16. 13.  1.  0.  0.  4.
  16.  9. 16. 12.  1.  0.  0.  1.  9. 16. 15.  1.  0.  0.  0.  1. 13. 16.
  16.  5.  0.  0.  0.  3. 16.  5. 12. 16.  0.  0.  0.  3. 15.  7. 14. 12.
   0.  0.  0.  0.  6. 16. 13.  3.  0.  0.]] [2 1 1 9 8]
MLLITE_FIT_USING_MODEL mllite_decision_tree_class.DecisionTreeClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_CLASSIFIER_FIT' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 0 64
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 6 64
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 64 64
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_CLASSIFIER_FIT' 2 4
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_CLASSIFIER_FIT' 3 4
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_CLASSIFIER_FIT' 4 4
('OPERATION_END_ELAPSED', 0.01, 'TRAINING')
{ ,  "max_leaf_nodes" : 64 }
{ ,  "max_leaf_nodes" : 64 }
{
	"metadata" : { "model" : "Breiman_CART", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : { "ccp_alpha" : 0.000000, "criterion" : "", "max_depth" : null, "max_features" : null, "max_leaf_nodes" : 64, "min_impurity_decrease" : 0.000000, "min_samples_leaf" : 1, "min_samples_split" : 2, "min_weight_fraction_leaf" : 0.000000, "random_state" : 1789, "splitter" : "best" },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 64 },
	"classes" : [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ],
	"tree" : {
	"features" : 64,
	"outputs" : 10,
	"max_depth" : 9,
	"node_count" : 45,
	"nodes" : {
		"node_00" : {"left" : 1, "right" : 2, "feature" : 36, "threshold" : 6.000000, "impurity" : 0.891113, "n_samples" : 64, "w_samples" : 64.000000, "value" : [0.093750, 0.078125, 0.062500, 0.046875, 0.109375, 0.140625, 0.109375, 0.093750, 0.140625, 0.125000]},
		"node_01" : {"left" : 3, "right" : 4, "feature" : 27, "threshold" : 6.000000, "impurity" : 0.672840, "n_samples" : 18, "w_samples" : 18.000000, "value" : [0.333333, 0.000000, 0.000000, 0.000000, 0.055556, 0.111111, 0.000000, 0.000000, 0.055556, 0.444444]},
		"node_02" : {"left" : 11, "right" : 12, "feature" : 41, "threshold" : 6.500000, "impurity" : 0.865785, "n_samples" : 46, "w_samples" : 46.000000, "value" : [0.000000, 0.108696, 0.086957, 0.065217, 0.130435, 0.152174, 0.152174, 0.130435, 0.173913, 0.000000]},
		"node_03" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 6, "w_samples" : 6.000000, "value" : [1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000]},
		"node_04" : {"left" : 5, "right" : 6, "feature" : 29, "threshold" : 9.500000, "impurity" : 0.513889, "n_samples" : 12, "w_samples" : 12.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 0.083333, 0.166667, 0.000000, 0.000000, 0.083333, 0.666667]},
		"node_05" : {"left" : 7, "right" : 8, "feature" : 46, "threshold" : 4.000000, "impurity" : 0.625000, "n_samples" : 4, "w_samples" : 4.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 0.250000, 0.500000, 0.000000, 0.000000, 0.250000, 0.000000]},
		"node_06" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 8, "w_samples" : 8.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000]},
		"node_07" : {"left" : 9, "right" : 10, "feature" : 45, "threshold" : 8.000000, "impurity" : 0.500000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 0.500000, 0.000000, 0.000000, 0.000000, 0.500000, 0.000000]},
		"node_08" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000]},
		"node_09" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000]},
		"node_10" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000]},
		"node_11" : {"left" : 13, "right" : 14, "feature" : 53, "threshold" : 0.500000, "impurity" : 0.857143, "n_samples" : 42, "w_samples" : 42.000000, "value" : [0.000000, 0.119048, 0.095238, 0.071429, 0.047619, 0.166667, 0.166667, 0.142857, 0.190476, 0.000000]},
		"node_12" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 4, "w_samples" : 4.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000]},
		"node_13" : {"left" : 15, "right" : 16, "feature" : 29, "threshold" : 6.500000, "impurity" : 0.518519, "n_samples" : 9, "w_samples" : 9.000000, "value" : [0.000000, 0.111111, 0.000000, 0.000000, 0.000000, 0.111111, 0.000000, 0.666667, 0.111111, 0.000000]},
		"node_14" : {"left" : 21, "right" : 22, "feature" : 28, "threshold" : 5.500000, "impurity" : 0.835629, "n_samples" : 33, "w_samples" : 33.000000, "value" : [0.000000, 0.121212, 0.121212, 0.090909, 0.060606, 0.181818, 0.212121, 0.000000, 0.212121, 0.000000]},
		"node_15" : {"left" : 17, "right" : 18, "feature" : 18, "threshold" : 11.000000, "impurity" : 0.666667, "n_samples" : 3, "w_samples" : 3.000000, "value" : [0.000000, 0.333333, 0.000000, 0.000000, 0.000000, 0.333333, 0.000000, 0.000000, 0.333333, 0.000000]},
		"node_16" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 6, "w_samples" : 6.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000]},
		"node_17" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000]},
		"node_18" : {"left" : 19, "right" : 20, "feature" : 2, "threshold" : 8.000000, "impurity" : 0.500000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.500000, 0.000000, 0.000000, 0.500000, 0.000000]},
		"node_19" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000]},
		"node_20" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000]},
		"node_21" : {"left" : 23, "right" : 24, "feature" : 35, "threshold" : 10.000000, "impurity" : 0.518519, "n_samples" : 9, "w_samples" : 9.000000, "value" : [0.000000, 0.000000, 0.111111, 0.000000, 0.111111, 0.111111, 0.666667, 0.000000, 0.000000, 0.000000]},
		"node_22" : {"left" : 29, "right" : 30, "feature" : 26, "threshold" : 15.500000, "impurity" : 0.809028, "n_samples" : 24, "w_samples" : 24.000000, "value" : [0.000000, 0.166667, 0.125000, 0.125000, 0.041667, 0.208333, 0.041667, 0.000000, 0.291667, 0.000000]},
		"node_23" : {"left" : 25, "right" : 26, "feature" : 5, "threshold" : 8.000000, "impurity" : 0.500000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [0.000000, 0.000000, 0.500000, 0.000000, 0.500000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000]},
		"node_24" : {"left" : 27, "right" : 28, "feature" : 60, "threshold" : 11.000000, "impurity" : 0.244898, "n_samples" : 7, "w_samples" : 7.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.142857, 0.857143, 0.000000, 0.000000, 0.000000]},
		"node_25" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000]},
		"node_26" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000]},
		"node_27" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000]},
		"node_28" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 6, "w_samples" : 6.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000]},
		"node_29" : {"left" : 35, "right" : 36, "feature" : 27, "threshold" : 7.500000, "impurity" : 0.733564, "n_samples" : 17, "w_samples" : 17.000000, "value" : [0.000000, 0.176471, 0.176471, 0.176471, 0.000000, 0.000000, 0.058824, 0.000000, 0.411765, 0.000000]},
		"node_30" : {"left" : 31, "right" : 32, "feature" : 34, "threshold" : 15.500000, "impurity" : 0.448980, "n_samples" : 7, "w_samples" : 7.000000, "value" : [0.000000, 0.142857, 0.000000, 0.000000, 0.142857, 0.714286, 0.000000, 0.000000, 0.000000, 0.000000]},
		"node_31" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 5, "w_samples" : 5.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000]},
		"node_32" : {"left" : 33, "right" : 34, "feature" : 30, "threshold" : 6.000000, "impurity" : 0.500000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [0.000000, 0.500000, 0.000000, 0.000000, 0.500000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000]},
		"node_33" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000]},
		"node_34" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000]},
		"node_35" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 3, "w_samples" : 3.000000, "value" : [0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000]},
		"node_36" : {"left" : 37, "right" : 38, "feature" : 61, "threshold" : 8.500000, "impurity" : 0.653061, "n_samples" : 14, "w_samples" : 14.000000, "value" : [0.000000, 0.214286, 0.000000, 0.214286, 0.000000, 0.000000, 0.071429, 0.000000, 0.500000, 0.000000]},
		"node_37" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 5, "w_samples" : 5.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000]},
		"node_38" : {"left" : 39, "right" : 40, "feature" : 42, "threshold" : 3.000000, "impurity" : 0.716049, "n_samples" : 9, "w_samples" : 9.000000, "value" : [0.000000, 0.333333, 0.000000, 0.333333, 0.000000, 0.000000, 0.111111, 0.000000, 0.222222, 0.000000]},
		"node_39" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 3, "w_samples" : 3.000000, "value" : [0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000]},
		"node_40" : {"left" : 41, "right" : 42, "feature" : 4, "threshold" : 15.500000, "impurity" : 0.611111, "n_samples" : 6, "w_samples" : 6.000000, "value" : [0.000000, 0.000000, 0.000000, 0.500000, 0.000000, 0.000000, 0.166667, 0.000000, 0.333333, 0.000000]},
		"node_41" : {"left" : 43, "right" : 44, "feature" : 4, "threshold" : 14.000000, "impurity" : 0.444444, "n_samples" : 3, "w_samples" : 3.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.333333, 0.000000, 0.666667, 0.000000]},
		"node_42" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 3, "w_samples" : 3.000000, "value" : [0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000]},
		"node_43" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000]},
		"node_44" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000]}
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/DecisionTreeClassifier/mllite.DecisionTreeClassifier_digits_small.json'

RELOADING_MODEL_FROM_JSON_START ('digits_small', 'DecisionTreeClassifier')
MLLITE_MODEL_SET_OPTIONS DecisionTreeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT DecisionTreeClassifier { "max_leaf_nodes" : 64}
MLLITE_MODEL_OPTIONS_AFTER_SETTING DecisionTreeClassifier { ,  "max_leaf_nodes" : 64 }
MLLITE_MODEL_JSON_AFTER_SETTING DecisionTreeClassifier None
MLLITE_RELOADING_MODEL mllite_decision_tree_class.DecisionTreeClassifier_ff4_il8
{
	"metadata" : { "model" : "Breiman_CART", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : { "ccp_alpha" : 0.000000, "criterion" : "", "max_depth" : null, "max_features" : null, "max_leaf_nodes" : 64, "min_impurity_decrease" : 0.000000, "min_samples_leaf" : 1, "min_samples_split" : 2, "min_weight_fraction_leaf" : 0.000000, "random_state" : 1789, "splitter" : "best" },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 64 },
	"classes" : [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ],
	"tree" : {
	"features" : 64,
	"outputs" : 10,
	"max_depth" : 9,
	"node_count" : 45,
	"nodes" : {
		"node_00" : {"left" : 1, "right" : 2, "feature" : 36, "threshold" : 6.000000, "impurity" : 0.891113, "n_samples" : 64, "w_samples" : 64.000000, "value" : [0.093750, 0.078125, 0.062500, 0.046875, 0.109375, 0.140625, 0.109375, 0.093750, 0.140625, 0.125000]},
		"node_01" : {"left" : 3, "right" : 4, "feature" : 27, "threshold" : 6.000000, "impurity" : 0.672840, "n_samples" : 18, "w_samples" : 18.000000, "value" : [0.333333, 0.000000, 0.000000, 0.000000, 0.055556, 0.111111, 0.000000, 0.000000, 0.055556, 0.444444]},
		"node_02" : {"left" : 11, "right" : 12, "feature" : 41, "threshold" : 6.500000, "impurity" : 0.865785, "n_samples" : 46, "w_samples" : 46.000000, "value" : [0.000000, 0.108696, 0.086957, 0.065217, 0.130435, 0.152174, 0.152174, 0.130435, 0.173913, 0.000000]},
		"node_03" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 6, "w_samples" : 6.000000, "value" : [1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000]},
		"node_04" : {"left" : 5, "right" : 6, "feature" : 29, "threshold" : 9.500000, "impurity" : 0.513889, "n_samples" : 12, "w_samples" : 12.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 0.083333, 0.166667, 0.000000, 0.000000, 0.083333, 0.666667]},
		"node_05" : {"left" : 7, "right" : 8, "feature" : 46, "threshold" : 4.000000, "impurity" : 0.625000, "n_samples" : 4, "w_samples" : 4.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 0.250000, 0.500000, 0.000000, 0.000000, 0.250000, 0.000000]},
		"node_06" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 8, "w_samples" : 8.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000]},
		"node_07" : {"left" : 9, "right" : 10, "feature" : 45, "threshold" : 8.000000, "impurity" : 0.500000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 0.500000, 0.000000, 0.000000, 0.000000, 0.500000, 0.000000]},
		"node_08" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000]},
		"node_09" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000]},
		"node_10" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000]},
		"node_11" : {"left" : 13, "right" : 14, "feature" : 53, "threshold" : 0.500000, "impurity" : 0.857143, "n_samples" : 42, "w_samples" : 42.000000, "value" : [0.000000, 0.119048, 0.095238, 0.071429, 0.047619, 0.166667, 0.166667, 0.142857, 0.190476, 0.000000]},
		"node_12" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 4, "w_samples" : 4.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000]},
		"node_13" : {"left" : 15, "right" : 16, "feature" : 29, "threshold" : 6.500000, "impurity" : 0.518519, "n_samples" : 9, "w_samples" : 9.000000, "value" : [0.000000, 0.111111, 0.000000, 0.000000, 0.000000, 0.111111, 0.000000, 0.666667, 0.111111, 0.000000]},
		"node_14" : {"left" : 21, "right" : 22, "feature" : 28, "threshold" : 5.500000, "impurity" : 0.835629, "n_samples" : 33, "w_samples" : 33.000000, "value" : [0.000000, 0.121212, 0.121212, 0.090909, 0.060606, 0.181818, 0.212121, 0.000000, 0.212121, 0.000000]},
		"node_15" : {"left" : 17, "right" : 18, "feature" : 18, "threshold" : 11.000000, "impurity" : 0.666667, "n_samples" : 3, "w_samples" : 3.000000, "value" : [0.000000, 0.333333, 0.000000, 0.000000, 0.000000, 0.333333, 0.000000, 0.000000, 0.333333, 0.000000]},
		"node_16" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 6, "w_samples" : 6.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000]},
		"node_17" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000]},
		"node_18" : {"left" : 19, "right" : 20, "feature" : 2, "threshold" : 8.000000, "impurity" : 0.500000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.500000, 0.000000, 0.000000, 0.500000, 0.000000]},
		"node_19" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000]},
		"node_20" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000]},
		"node_21" : {"left" : 23, "right" : 24, "feature" : 35, "threshold" : 10.000000, "impurity" : 0.518519, "n_samples" : 9, "w_samples" : 9.000000, "value" : [0.000000, 0.000000, 0.111111, 0.000000, 0.111111, 0.111111, 0.666667, 0.000000, 0.000000, 0.000000]},
		"node_22" : {"left" : 29, "right" : 30, "feature" : 26, "threshold" : 15.500000, "impurity" : 0.809028, "n_samples" : 24, "w_samples" : 24.000000, "value" : [0.000000, 0.166667, 0.125000, 0.125000, 0.041667, 0.208333, 0.041667, 0.000000, 0.291667, 0.000000]},
		"node_23" : {"left" : 25, "right" : 26, "feature" : 5, "threshold" : 8.000000, "impurity" : 0.500000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [0.000000, 0.000000, 0.500000, 0.000000, 0.500000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000]},
		"node_24" : {"left" : 27, "right" : 28, "feature" : 60, "threshold" : 11.000000, "impurity" : 0.244898, "n_samples" : 7, "w_samples" : 7.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.142857, 0.857143, 0.000000, 0.000000, 0.000000]},
		"node_25" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000]},
		"node_26" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000]},
		"node_27" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000]},
		"node_28" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 6, "w_samples" : 6.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000]},
		"node_29" : {"left" : 35, "right" : 36, "feature" : 27, "threshold" : 7.500000, "impurity" : 0.733564, "n_samples" : 17, "w_samples" : 17.000000, "value" : [0.000000, 0.176471, 0.176471, 0.176471, 0.000000, 0.000000, 0.058824, 0.000000, 0.411765, 0.000000]},
		"node_30" : {"left" : 31, "right" : 32, "feature" : 34, "threshold" : 15.500000, "impurity" : 0.448980, "n_samples" : 7, "w_samples" : 7.000000, "value" : [0.000000, 0.142857, 0.000000, 0.000000, 0.142857, 0.714286, 0.000000, 0.000000, 0.000000, 0.000000]},
		"node_31" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 5, "w_samples" : 5.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000]},
		"node_32" : {"left" : 33, "right" : 34, "feature" : 30, "threshold" : 6.000000, "impurity" : 0.500000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [0.000000, 0.500000, 0.000000, 0.000000, 0.500000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000]},
		"node_33" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000]},
		"node_34" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000]},
		"node_35" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 3, "w_samples" : 3.000000, "value" : [0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000]},
		"node_36" : {"left" : 37, "right" : 38, "feature" : 61, "threshold" : 8.500000, "impurity" : 0.653061, "n_samples" : 14, "w_samples" : 14.000000, "value" : [0.000000, 0.214286, 0.000000, 0.214286, 0.000000, 0.000000, 0.071429, 0.000000, 0.500000, 0.000000]},
		"node_37" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 5, "w_samples" : 5.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000]},
		"node_38" : {"left" : 39, "right" : 40, "feature" : 42, "threshold" : 3.000000, "impurity" : 0.716049, "n_samples" : 9, "w_samples" : 9.000000, "value" : [0.000000, 0.333333, 0.000000, 0.333333, 0.000000, 0.000000, 0.111111, 0.000000, 0.222222, 0.000000]},
		"node_39" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 3, "w_samples" : 3.000000, "value" : [0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000]},
		"node_40" : {"left" : 41, "right" : 42, "feature" : 4, "threshold" : 15.500000, "impurity" : 0.611111, "n_samples" : 6, "w_samples" : 6.000000, "value" : [0.000000, 0.000000, 0.000000, 0.500000, 0.000000, 0.000000, 0.166667, 0.000000, 0.333333, 0.000000]},
		"node_41" : {"left" : 43, "right" : 44, "feature" : 4, "threshold" : 14.000000, "impurity" : 0.444444, "n_samples" : 3, "w_samples" : 3.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.333333, 0.000000, 0.666667, 0.000000]},
		"node_42" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 3, "w_samples" : 3.000000, "value" : [0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000]},
		"node_43" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000]},
		"node_44" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000]}
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ],
	"dataset" : 	{
		"dataset_features" : 64,
		"dataset_rows" : 64
	},
	"metadata" :  { "model" : "Breiman_CART", "signature" : "ff4_il8", "version" : "2024-W14" },
	"options" :  { "ccp_alpha" : 0.0, "criterion" : "", "max_depth" : null, "max_features" : null, "max_leaf_nodes" : 64, "min_impurity_decrease" : 0.0, "min_samples_leaf" : 1, "min_samples_split" : 2, "min_weight_fraction_leaf" : 0.0, "random_state" : 1789, "splitter" : "best" },
	"tree" : 	{
		"features" : 64,
		"max_depth" : 9,
		"node_count" : 45,
		"nodes" : 	{
			"node_00" :  { "feature" : 36, "impurity" : 0.891113, "left" : 1, "n_samples" : 64, "right" : 2, "threshold" : 6.0, "value" : [ 0.09375, 0.078125, 0.0625, 0.046875, 0.109375, 0.140625, 0.109375, 0.09375, 0.140625, 0.125 ], "w_samples" : 64.0 },
			"node_01" :  { "feature" : 27, "impurity" : 0.67284, "left" : 3, "n_samples" : 18, "right" : 4, "threshold" : 6.0, "value" : [ 0.333333, 0.0, 0.0, 0.0, 0.055556, 0.111111, 0.0, 0.0, 0.055556, 0.444444 ], "w_samples" : 18.0 },
			"node_02" :  { "feature" : 41, "impurity" : 0.865785, "left" : 11, "n_samples" : 46, "right" : 12, "threshold" : 6.5, "value" : [ 0.0, 0.108696, 0.086957, 0.065217, 0.130435, 0.152174, 0.152174, 0.130435, 0.173913, 0.0 ], "w_samples" : 46.0 },
			"node_03" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 6, "right" : null, "threshold" : null, "value" : [ 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ], "w_samples" : 6.0 },
			"node_04" :  { "feature" : 29, "impurity" : 0.513889, "left" : 5, "n_samples" : 12, "right" : 6, "threshold" : 9.5, "value" : [ 0.0, 0.0, 0.0, 0.0, 0.083333, 0.166667, 0.0, 0.0, 0.083333, 0.666667 ], "w_samples" : 12.0 },
			"node_05" :  { "feature" : 46, "impurity" : 0.625, "left" : 7, "n_samples" : 4, "right" : 8, "threshold" : 4.0, "value" : [ 0.0, 0.0, 0.0, 0.0, 0.25, 0.5, 0.0, 0.0, 0.25, 0.0 ], "w_samples" : 4.0 },
			"node_06" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 8, "right" : null, "threshold" : null, "value" : [ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0 ], "w_samples" : 8.0 },
			"node_07" :  { "feature" : 45, "impurity" : 0.5, "left" : 9, "n_samples" : 2, "right" : 10, "threshold" : 8.0, "value" : [ 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.5, 0.0 ], "w_samples" : 2.0 },
			"node_08" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 2, "right" : null, "threshold" : null, "value" : [ 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0 ], "w_samples" : 2.0 },
			"node_09" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0 ], "w_samples" : 1.0 },
			"node_10" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0 ], "w_samples" : 1.0 },
			"node_11" :  { "feature" : 53, "impurity" : 0.857143, "left" : 13, "n_samples" : 42, "right" : 14, "threshold" : 0.5, "value" : [ 0.0, 0.119048, 0.095238, 0.071429, 0.047619, 0.166667, 0.166667, 0.142857, 0.190476, 0.0 ], "w_samples" : 42.0 },
			"node_12" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 4, "right" : null, "threshold" : null, "value" : [ 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0 ], "w_samples" : 4.0 },
			"node_13" :  { "feature" : 29, "impurity" : 0.518519, "left" : 15, "n_samples" : 9, "right" : 16, "threshold" : 6.5, "value" : [ 0.0, 0.111111, 0.0, 0.0, 0.0, 0.111111, 0.0, 0.666667, 0.111111, 0.0 ], "w_samples" : 9.0 },
			"node_14" :  { "feature" : 28, "impurity" : 0.835629, "left" : 21, "n_samples" : 33, "right" : 22, "threshold" : 5.5, "value" : [ 0.0, 0.121212, 0.121212, 0.090909, 0.060606, 0.181818, 0.212121, 0.0, 0.212121, 0.0 ], "w_samples" : 33.0 },
			"node_15" :  { "feature" : 18, "impurity" : 0.666667, "left" : 17, "n_samples" : 3, "right" : 18, "threshold" : 11.0, "value" : [ 0.0, 0.333333, 0.0, 0.0, 0.0, 0.333333, 0.0, 0.0, 0.333333, 0.0 ], "w_samples" : 3.0 },
			"node_16" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 6, "right" : null, "threshold" : null, "value" : [ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0 ], "w_samples" : 6.0 },
			"node_17" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ], "w_samples" : 1.0 },
			"node_18" :  { "feature" : 2, "impurity" : 0.5, "left" : 19, "n_samples" : 2, "right" : 20, "threshold" : 8.0, "value" : [ 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.5, 0.0 ], "w_samples" : 2.0 },
			"node_19" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0 ], "w_samples" : 1.0 },
			"node_20" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0 ], "w_samples" : 1.0 },
			"node_21" :  { "feature" : 35, "impurity" : 0.518519, "left" : 23, "n_samples" : 9, "right" : 24, "threshold" : 10.0, "value" : [ 0.0, 0.0, 0.111111, 0.0, 0.111111, 0.111111, 0.666667, 0.0, 0.0, 0.0 ], "w_samples" : 9.0 },
			"node_22" :  { "feature" : 26, "impurity" : 0.809028, "left" : 29, "n_samples" : 24, "right" : 30, "threshold" : 15.5, "value" : [ 0.0, 0.166667, 0.125, 0.125, 0.041667, 0.208333, 0.041667, 0.0, 0.291667, 0.0 ], "w_samples" : 24.0 },
			"node_23" :  { "feature" : 5, "impurity" : 0.5, "left" : 25, "n_samples" : 2, "right" : 26, "threshold" : 8.0, "value" : [ 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0 ], "w_samples" : 2.0 },
			"node_24" :  { "feature" : 60, "impurity" : 0.244898, "left" : 27, "n_samples" : 7, "right" : 28, "threshold" : 11.0, "value" : [ 0.0, 0.0, 0.0, 0.0, 0.0, 0.142857, 0.857143, 0.0, 0.0, 0.0 ], "w_samples" : 7.0 },
			"node_25" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0 ], "w_samples" : 1.0 },
			"node_26" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ], "w_samples" : 1.0 },
			"node_27" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0 ], "w_samples" : 1.0 },
			"node_28" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 6, "right" : null, "threshold" : null, "value" : [ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0 ], "w_samples" : 6.0 },
			"node_29" :  { "feature" : 27, "impurity" : 0.733564, "left" : 35, "n_samples" : 17, "right" : 36, "threshold" : 7.5, "value" : [ 0.0, 0.176471, 0.176471, 0.176471, 0.0, 0.0, 0.058824, 0.0, 0.411765, 0.0 ], "w_samples" : 17.0 },
			"node_30" :  { "feature" : 34, "impurity" : 0.44898, "left" : 31, "n_samples" : 7, "right" : 32, "threshold" : 15.5, "value" : [ 0.0, 0.142857, 0.0, 0.0, 0.142857, 0.714286, 0.0, 0.0, 0.0, 0.0 ], "w_samples" : 7.0 },
			"node_31" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 5, "right" : null, "threshold" : null, "value" : [ 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0 ], "w_samples" : 5.0 },
			"node_32" :  { "feature" : 30, "impurity" : 0.5, "left" : 33, "n_samples" : 2, "right" : 34, "threshold" : 6.0, "value" : [ 0.0, 0.5, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0 ], "w_samples" : 2.0 },
			"node_33" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ], "w_samples" : 1.0 },
			"node_34" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0 ], "w_samples" : 1.0 },
			"node_35" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 3, "right" : null, "threshold" : null, "value" : [ 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ], "w_samples" : 3.0 },
			"node_36" :  { "feature" : 61, "impurity" : 0.653061, "left" : 37, "n_samples" : 14, "right" : 38, "threshold" : 8.5, "value" : [ 0.0, 0.214286, 0.0, 0.214286, 0.0, 0.0, 0.071429, 0.0, 0.5, 0.0 ], "w_samples" : 14.0 },
			"node_37" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 5, "right" : null, "threshold" : null, "value" : [ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0 ], "w_samples" : 5.0 },
			"node_38" :  { "feature" : 42, "impurity" : 0.716049, "left" : 39, "n_samples" : 9, "right" : 40, "threshold" : 3.0, "value" : [ 0.0, 0.333333, 0.0, 0.333333, 0.0, 0.0, 0.111111, 0.0, 0.222222, 0.0 ], "w_samples" : 9.0 },
			"node_39" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 3, "right" : null, "threshold" : null, "value" : [ 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ], "w_samples" : 3.0 },
			"node_40" :  { "feature" : 4, "impurity" : 0.611111, "left" : 41, "n_samples" : 6, "right" : 42, "threshold" : 15.5, "value" : [ 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.166667, 0.0, 0.333333, 0.0 ], "w_samples" : 6.0 },
			"node_41" :  { "feature" : 4, "impurity" : 0.444444, "left" : 43, "n_samples" : 3, "right" : 44, "threshold" : 14.0, "value" : [ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.333333, 0.0, 0.666667, 0.0 ], "w_samples" : 3.0 },
			"node_42" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 3, "right" : null, "threshold" : null, "value" : [ 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ], "w_samples" : 3.0 },
			"node_43" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0 ], "w_samples" : 1.0 },
			"node_44" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 2, "right" : null, "threshold" : null, "value" : [ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0 ], "w_samples" : 2.0 }
		},
		"outputs" : 10
	}
}
BEAUTIFIED_JSON_END
RELOADING_MODEL_FROM_JSON_END ('digits_small', 'DecisionTreeClassifier')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]]
(64, 10)
(64, 10) float32
MODEL_PERFS {'class_name': 'mllite.DecisionTreeClassifier', 'model_name': 'DecisionTreeClassifier', 'options': None, 'dataset': 'digits_small', 'size': 64, 'accuracy': 1.0, 'auc': 1.0}
WRITING_PERF_CODE 'logs/auto_tests/classification/DecisionTreeClassifier/mllite.DecisionTreeClassifier_digits_small.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.DecisionTreeClassifier', 'model_name': 'DecisionTreeClassifier', 'options': None, 'dataset': 'digits_small', 'training_time_in_sec': 0.01, 'prediction_time_in_sec': 0.0}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 0 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 1 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 2 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 3 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 4 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 5 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 6 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 7 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 8 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 9 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 10 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 11 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 12 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 13 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 14 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 15 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 16 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 17 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 18 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 19 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 20 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 21 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 22 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 23 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 24 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 25 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 26 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 27 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 28 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 29 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 30 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 31 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 32 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 33 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 34 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 35 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 36 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 37 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 38 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 39 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 40 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 41 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 42 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 43 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 44 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 45 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 46 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 47 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 48 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 49 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 50 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 51 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 52 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 53 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 54 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 55 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 56 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 57 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 58 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 59 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 60 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 61 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 62 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 63 64
{
   "Contributions" : {
      "X_0" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_1" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_2" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.016113, 0.000000, 0.000000, -0.016113, 0.000000 ],
      "X_3" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_4" : [ 0.000000, 0.000000, 0.000000, 0.009766, 0.000000, 0.000000, -0.010742, 0.000000, 0.000977, 0.000000 ],
      "X_5" : [ 0.000000, 0.000000, 0.007324, 0.000000, -0.007324, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_6" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_7" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_8" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_9" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_10" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_11" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_12" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_13" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_14" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_15" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_16" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_17" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_18" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.009277, 0.000000, 0.000000, -0.009277, 0.000000 ],
      "X_19" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_20" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_21" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_22" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_23" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_24" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_25" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_26" : [ 0.000000, 0.023926, 0.016113, 0.000000, 0.008789, -0.032715, -0.001465, 0.000000, -0.014648, 0.000000 ],
      "X_27" : [ 0.020508, 0.012207, -0.051758, 0.007324, -0.001465, -0.018555, 0.011230, 0.000000, 0.023438, -0.002930 ],
      "X_28" : [ 0.000000, -0.017578, 0.000488, 0.002441, -0.006836, 0.003418, 0.016113, 0.000000, 0.001953, 0.000000 ],
      "X_29" : [ 0.000000, 0.038574, 0.000000, 0.000000, -0.005371, -0.004395, 0.000000, -0.048340, -0.006348, 0.025879 ],
      "X_30" : [ 0.000000, -0.004395, 0.000000, 0.000000, 0.004395, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_31" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_32" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_33" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_34" : [ 0.000000, 0.011719, 0.000000, 0.000000, 0.006348, -0.018066, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_35" : [ 0.000000, 0.000000, -0.000977, 0.000000, -0.009277, -0.008301, 0.018555, 0.000000, 0.000000, 0.000000 ],
      "X_36" : [ 0.003906, -0.019043, -0.014160, 0.003906, 0.005859, 0.007812, 0.009277, 0.009277, -0.025391, 0.018555 ],
      "X_37" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_38" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_39" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_40" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_41" : [ 0.000000, -0.008301, 0.008301, 0.000000, 0.026855, -0.001465, -0.007324, -0.014160, -0.003906, 0.000000 ],
      "X_42" : [ 0.000000, -0.019531, 0.000000, 0.010742, 0.000000, 0.000000, 0.000488, 0.000000, 0.008301, 0.000000 ],
      "X_43" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_44" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_45" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000488, 0.000000, 0.000000, 0.000000, -0.000488, 0.000000 ],
      "X_46" : [ 0.000000, 0.000000, 0.000000, 0.000000, -0.003906, 0.003418, 0.000000, 0.000000, 0.000488, 0.000000 ],
      "X_47" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_48" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_49" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_50" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_51" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_52" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_53" : [ 0.000000, -0.017090, -0.011719, 0.003906, 0.006836, 0.021484, 0.000488, -0.000977, -0.002930, 0.000000 ],
      "X_54" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_55" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_56" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_57" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_58" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_59" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_60" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -0.012207, 0.012207, 0.000000, 0.000000, 0.000000 ],
      "X_61" : [ 0.000000, -0.004395, 0.000000, 0.004883, 0.000000, 0.000000, -0.001953, 0.000000, 0.001465, 0.000000 ],
      "X_62" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_63" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ]   
   },
   "Most_Contributive_Features_By_Class" : {
      "class_0" : [ 27, 36 ],
      "class_1" : [ 29, 26, 42, 36, 28, 53, 27, 34, 41, 30 ],
      "class_2" : [ 27, 26, 36, 53, 41, 5, 35, 28 ],
      "class_3" : [ 42, 4, 27, 61, 36, 53, 28 ],
      "class_4" : [ 41, 35, 26, 5, 28, 53, 34, 36, 29, 30 ],
      "class_5" : [ 26, 53, 27, 34, 2, 60, 18, 35, 36, 29 ],
      "class_6" : [ 35, 28, 60, 27, 4, 36, 41, 61, 26, 42 ],
      "class_7" : [ 29, 41, 36, 53 ],
      "class_8" : [ 36, 27, 2, 26, 18, 42, 29, 41, 53, 28 ],
      "class_9" : [ 29, 36, 27 ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/classification/DecisionTreeClassifier/mllite.DecisionTreeClassifier_digits_small_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/classification/DecisionTreeClassifier/mllite.DecisionTreeClassifier_digits_small_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('digits_small', 'DecisionTreeClassifier', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('digits_small', 'DecisionTreeClassifier', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('digits_small', 'DecisionTreeClassifier', 'duckdb')
"."P_5" ) ELSE -1.79769313486231e+308 END AS "LogProba_5",
   CAST(NULL AS FLOAT)  AS "Score_6",
   "DT_Output"."P_6" AS "Proba_6",
   CASE WHEN ("DT_Output"."P_6" IS NULL OR "DT_Output"."P_6" > 0.0) THEN LN( "DT_Output"."P_6" ) ELSE -1.79769313486231e+308 END AS "LogProba_6",
   CAST(NULL AS FLOAT)  AS "Score_7",
   "DT_Output"."P_7" AS "Proba_7",
   CASE WHEN ("DT_Output"."P_7" IS NULL OR "DT_Output"."P_7" > 0.0) THEN LN( "DT_Output"."P_7" ) ELSE -1.79769313486231e+308 END AS "LogProba_7",
   CAST(NULL AS FLOAT)  AS "Score_8",
   "DT_Output"."P_8" AS "Proba_8",
   CASE WHEN ("DT_Output"."P_8" IS NULL OR "DT_Output"."P_8" > 0.0) THEN LN( "DT_Output"."P_8" ) ELSE -1.79769313486231e+308 END AS "LogProba_8",
   CAST(NULL AS FLOAT)  AS "Score_9",
   "DT_Output"."P_9" AS "Proba_9",
   CASE WHEN ("DT_Output"."P_9" IS NULL OR "DT_Output"."P_9" > 0.0) THEN LN( "DT_Output"."P_9" ) ELSE -1.79769313486231e+308 END AS "LogProba_9",
   "DT_Output"."D" AS "Decision",
   "DT_Output"."DP" AS "DecisionProba"
FROM "DT_Output"
SQL_OUT_PUT_LAST_LINES_END ('digits_small', 'DecisionTreeClassifier', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 64 entries, 0 to 63
Data columns (total 64 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     64 non-null     float32
 1   X_1     64 non-null     float32
 2   X_2     64 non-null     float32
 3   X_3     64 non-null     float32
 4   X_4     64 non-null     float32
 5   X_5     64 non-null     float32
 6   X_6     64 non-null     float32
 7   X_7     64 non-null     float32
 8   X_8     64 non-null     float32
 9   X_9     64 non-null     float32
 10  X_10    64 non-null     float32
 11  X_11    64 non-null     float32
 12  X_12    64 non-null     float32
 13  X_13    64 non-null     float32
 14  X_14    64 non-null     float32
 15  X_15    64 non-null     float32
 16  X_16    64 non-null     float32
 17  X_17    64 non-null     float32
 18  X_18    64 non-null     float32
 19  X_19    64 non-null     float32
 20  X_20    64 non-null     float32
 21  X_21    64 non-null     float32
 22  X_22    64 non-null     float32
 23  X_23    64 non-null     float32
 24  X_24    64 non-null     float32
 25  X_25    64 non-null     float32
 26  X_26    64 non-null     float32
 27  X_27    64 non-null     float32
 28  X_28    64 non-null     float32
 29  X_29    64 non-null     float32
 30  X_30    64 non-null     float32
 31  X_31    64 non-null     float32
 32  X_32    64 non-null     float32
 33  X_33    64 non-null     float32
 34  X_34    64 non-null     float32
 35  X_35    64 non-null     float32
 36  X_36    64 non-null     float32
 37  X_37    64 non-null     float32
 38  X_38    64 non-null     float32
 39  X_39    64 non-null     float32
 40  X_40    64 non-null     float32
 41  X_41    64 non-null     float32
 42  X_42    64 non-null     float32
 43  X_43    64 non-null     float32
 44  X_44    64 non-null     float32
 45  X_45    64 non-null     float32
 46  X_46    64 non-null     float32
 47  X_47    64 non-null     float32
 48  X_48    64 non-null     float32
 49  X_49    64 non-null     float32
 50  X_50    64 non-null     float32
 51  X_51    64 non-null     float32
 52  X_52    64 non-null     float32
 53  X_53    64 non-null     float32
 54  X_54    64 non-null     float32
 55  X_55    64 non-null     float32
 56  X_56    64 non-null     float32
 57  X_57    64 non-null     float32
 58  X_58    64 non-null     float32
 59  X_59    64 non-null     float32
 60  X_60    64 non-null     float32
 61  X_61    64 non-null     float32
 62  X_62    64 non-null     float32
 63  X_63    64 non-null     float32
dtypes: float32(64)
memory usage: 16.5 KB
       X_0  X_1   X_2   X_3   X_4   X_5  ...  X_58  X_59  X_60  X_61  X_62  X_63
index                                    ...                                    
0      0.0  0.0   0.0   3.0  15.0  10.0  ...   0.0   4.0   9.0  14.0   7.0   0.0
1      0.0  0.0  11.0  10.0   0.0   0.0  ...   8.0  16.0  16.0  16.0  16.0  12.0
2      0.0  0.0   0.0  15.0  11.0   0.0  ...   0.0  14.0   4.0   0.0   0.0   0.0
3      0.0  0.0   7.0  13.0  10.0   1.0  ...   7.0  13.0  16.0  15.0   4.0   0.0
4      0.0  0.0   5.0  12.0  13.0   2.0  ...   6.0  16.0  13.0   3.0   0.0   0.0
...    ...  ...   ...   ...   ...   ...  ...   ...   ...   ...   ...   ...   ...
59     0.0  0.0   0.0   0.0  13.0  11.0  ...   0.0   0.0  12.0  11.0   0.0   0.0
60     0.0  0.0  12.0  16.0  16.0   7.0  ...  10.0  12.0  12.0   4.0   0.0   0.0
61     0.0  0.0   1.0   7.0   6.0  11.0  ...   1.0  10.0   8.0   1.0   0.0   0.0
62     0.0  0.0  10.0   7.0  13.0   9.0  ...  11.0  14.0   5.0   0.0   0.0   0.0
63     0.0  3.0  15.0   8.0   8.0   6.0  ...  15.0  14.0   1.0   0.0   0.0   0.0

[64 rows x 64 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 64 entries, 0 to 63
Data columns (total 33 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          64 non-null     int64  
 1   Score_0        0 non-null      object 
 2   Proba_0        64 non-null     float64
 3   LogProba_0     64 non-null     float64
 4   Score_1        0 non-null      object 
 5   Proba_1        64 non-null     float64
 6   LogProba_1     64 non-null     float64
 7   Score_2        0 non-null      object 
 8   Proba_2        64 non-null     float64
 9   LogProba_2     64 non-null     float64
 10  Score_3        0 non-null      object 
 11  Proba_3        64 non-null     float64
 12  LogProba_3     64 non-null     float64
 13  Score_4        0 non-null      object 
 14  Proba_4        64 non-null     float64
 15  LogProba_4     64 non-null     float64
 16  Score_5        0 non-null      object 
 17  Proba_5        64 non-null     float64
 18  LogProba_5     64 non-null     float64
 19  Score_6        0 non-null      object 
 20  Proba_6        64 non-null     float64
 21  LogProba_6     64 non-null     float64
 22  Score_7        0 non-null      object 
 23  Proba_7        64 non-null     float64
 24  LogProba_7     64 non-null     float64
 25  Score_8        0 non-null      object 
 26  Proba_8        64 non-null     float64
 27  LogProba_8     64 non-null     float64
 28  Score_9        0 non-null      object 
 29  Proba_9        64 non-null     float64
 30  LogProba_9     64 non-null     float64
 31  Decision       64 non-null     int64  
 32  DecisionProba  64 non-null     float64
dtypes: float64(21), int64(2), object(10)
memory usage: 16.6+ KB
    index Score_0  Proba_0  ...     LogProba_9 Decision  DecisionProba
0       0    None      0.0  ... -1.797693e+308        2            1.0
1       1    None      0.0  ... -1.797693e+308        1            1.0
2       2    None      0.0  ... -1.797693e+308        1            1.0
3       3    None      0.0  ...   0.000000e+00        9            1.0
4       4    None      0.0  ... -1.797693e+308        8            1.0
..    ...     ...      ...  ...            ...      ...            ...
59     59    None      0.0  ... -1.797693e+308        4            1.0
60     60    None      0.0  ... -1.797693e+308        5            1.0
61     61    None      0.0  ... -1.797693e+308        8            1.0
62     62    None      0.0  ... -1.797693e+308        8            1.0
63     63    None      0.0  ... -1.797693e+308        5            1.0

[64 rows x 33 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Score_3', 'Proba_3',
       'LogProba_3', 'Score_4', 'Proba_4', 'LogProba_4', 'Score_5', 'Proba_5',
       'LogProba_5', 'Score_6', 'Proba_6', 'LogProba_6', 'Score_7', 'Proba_7',
       'LogProba_7', 'Score_8', 'Proba_8', 'LogProba_8', 'Score_9', 'Proba_9',
       'LogProba_9', 'Decision', 'DecisionProba'],
      dtype='object')
    index Score_0  SQL_Proba_0  ...  Py_Proba_8 Py_Proba_9  Py_Decision
48     48    None          0.0  ...         0.0        0.0            5
49     49    None          0.0  ...         0.0        0.0            5
50     50    None          0.0  ...         0.0        0.0            3
51     51    None          0.0  ...         0.0        0.0            2
52     52    None          0.0  ...         0.0        1.0            9
53     53    None          1.0  ...         0.0        0.0            0
54     54    None          0.0  ...         0.0        0.0            7
55     55    None          0.0  ...         1.0        0.0            8
56     56    None          0.0  ...         0.0        0.0            6
57     57    None          0.0  ...         0.0        1.0            9
58     58    None          0.0  ...         0.0        1.0            9
59     59    None          0.0  ...         0.0        0.0            4
60     60    None          0.0  ...         0.0        0.0            5
61     61    None          0.0  ...         1.0        0.0            8
62     62    None          0.0  ...         1.0        0.0            8
63     63    None          0.0  ...         0.0        0.0            5

[16 rows x 44 columns]
MLLITE_CLASS_SQL_ERROR ('digits_small', 'DecisionTreeClassifier', 'duckdb') ('Py_Proba_0', 'SQL_Proba_0') 0.0
    Py_Proba_0  SQL_Proba_0  SQL_Error_0
48         0.0          0.0          0.0
49         0.0          0.0          0.0
50         0.0          0.0          0.0
51         0.0          0.0          0.0
52         0.0          0.0          0.0
53         1.0          1.0          0.0
54         0.0          0.0          0.0
55         0.0          0.0          0.0
56         0.0          0.0          0.0
57         0.0          0.0          0.0
58         0.0          0.0          0.0
59         0.0          0.0          0.0
60         0.0          0.0          0.0
61         0.0          0.0          0.0
62         0.0          0.0          0.0
63         0.0          0.0          0.0
MLLITE_CLASS_SQL_ERROR ('digits_small', 'DecisionTreeClassifier', 'duckdb') ('Py_Proba_1', 'SQL_Proba_1') 0.0
    Py_Proba_1  SQL_Proba_1  SQL_Error_1
48         0.0          0.0          0.0
49         0.0          0.0          0.0
50         0.0          0.0          0.0
51         0.0          0.0          0.0
52         0.0          0.0          0.0
53         0.0          0.0          0.0
54         0.0          0.0          0.0
55         0.0          0.0          0.0
56         0.0          0.0          0.0
57         0.0          0.0          0.0
58         0.0          0.0          0.0
59         0.0          0.0          0.0
60         0.0          0.0          0.0
61         0.0          0.0          0.0
62         0.0          0.0          0.0
63         0.0          0.0          0.0
MLLITE_CLASS_SQL_ERROR ('digits_small', 'DecisionTreeClassifier', 'duckdb') ('Py_Proba_2', 'SQL_Proba_2') 0.0
    Py_Proba_2  SQL_Proba_2  SQL_Error_2
48         0.0          0.0          0.0
49         0.0          0.0          0.0
50         0.0          0.0          0.0
51         1.0          1.0          0.0
52         0.0          0.0          0.0
53         0.0          0.0          0.0
54         0.0          0.0          0.0
55         0.0          0.0          0.0
56         0.0          0.0          0.0
57         0.0          0.0          0.0
58         0.0          0.0          0.0
59         0.0          0.0          0.0
60         0.0          0.0          0.0
61         0.0          0.0          0.0
62         0.0          0.0          0.0
63         0.0          0.0          0.0
MLLITE_CLASS_SQL_ERROR ('digits_small', 'DecisionTreeClassifier', 'duckdb') ('Py_Proba_3', 'SQL_Proba_3') 0.0
    Py_Proba_3  SQL_Proba_3  SQL_Error_3
48         0.0          0.0          0.0
49         0.0          0.0          0.0
50         1.0          1.0          0.0
51         0.0          0.0          0.0
52         0.0          0.0          0.0
53         0.0          0.0          0.0
54         0.0          0.0          0.0
55         0.0          0.0          0.0
56         0.0          0.0          0.0
57         0.0          0.0          0.0
58         0.0          0.0          0.0
59         0.0          0.0          0.0
60         0.0          0.0          0.0
61         0.0          0.0          0.0
62         0.0          0.0          0.0
63         0.0          0.0          0.0
MLLITE_CLASS_SQL_ERROR ('digits_small', 'DecisionTreeClassifier', 'duckdb') ('Py_Proba_4', 'SQL_Proba_4') 0.0
    Py_Proba_4  SQL_Proba_4  SQL_Error_4
48         0.0          0.0          0.0
49         0.0          0.0          0.0
50         0.0          0.0          0.0
51         0.0          0.0          0.0
52         0.0          0.0          0.0
53         0.0          0.0          0.0
54         0.0          0.0          0.0
55         0.0          0.0          0.0
56         0.0          0.0          0.0
57         0.0          0.0          0.0
58         0.0          0.0          0.0
59         1.0          1.0          0.0
60         0.0          0.0          0.0
61         0.0          0.0          0.0
62         0.0          0.0          0.0
63         0.0          0.0          0.0
MLLITE_CLASS_SQL_ERROR ('digits_small', 'DecisionTreeClassifier', 'duckdb') ('Py_Proba_5', 'SQL_Proba_5') 0.0
    Py_Proba_5  SQL_Proba_5  SQL_Error_5
48         1.0          1.0          0.0
49         1.0          1.0          0.0
50         0.0          0.0          0.0
51         0.0          0.0          0.0
52         0.0          0.0          0.0
53         0.0          0.0          0.0
54         0.0          0.0          0.0
55         0.0          0.0          0.0
56         0.0          0.0          0.0
57         0.0          0.0          0.0
58         0.0          0.0          0.0
59         0.0          0.0          0.0
60         1.0          1.0          0.0
61         0.0          0.0          0.0
62         0.0          0.0          0.0
63         1.0          1.0          0.0
MLLITE_CLASS_SQL_ERROR ('digits_small', 'DecisionTreeClassifier', 'duckdb') ('Py_Proba_6', 'SQL_Proba_6') 0.0
    Py_Proba_6  SQL_Proba_6  SQL_Error_6
48         0.0          0.0          0.0
49         0.0          0.0          0.0
50         0.0          0.0          0.0
51         0.0          0.0          0.0
52         0.0          0.0          0.0
53         0.0          0.0          0.0
54         0.0          0.0          0.0
55         0.0          0.0          0.0
56         1.0          1.0          0.0
57         0.0          0.0          0.0
58         0.0          0.0          0.0
59         0.0          0.0          0.0
60         0.0          0.0          0.0
61         0.0          0.0          0.0
62         0.0          0.0          0.0
63         0.0          0.0          0.0
MLLITE_CLASS_SQL_ERROR ('digits_small', 'DecisionTreeClassifier', 'duckdb') ('Py_Proba_7', 'SQL_Proba_7') 0.0
    Py_Proba_7  SQL_Proba_7  SQL_Error_7
48         0.0          0.0          0.0
49         0.0          0.0          0.0
50         0.0          0.0          0.0
51         0.0          0.0          0.0
52         0.0          0.0          0.0
53         0.0          0.0          0.0
54         1.0          1.0          0.0
55         0.0          0.0          0.0
56         0.0          0.0          0.0
57         0.0          0.0          0.0
58         0.0          0.0          0.0
59         0.0          0.0          0.0
60         0.0          0.0          0.0
61         0.0          0.0          0.0
62         0.0          0.0          0.0
63         0.0          0.0          0.0
MLLITE_CLASS_SQL_ERROR ('digits_small', 'DecisionTreeClassifier', 'duckdb') ('Py_Proba_8', 'SQL_Proba_8') 0.0
    Py_Proba_8  SQL_Proba_8  SQL_Error_8
48         0.0          0.0          0.0
49         0.0          0.0          0.0
50         0.0          0.0          0.0
51         0.0          0.0          0.0
52         0.0          0.0          0.0
53         0.0          0.0          0.0
54         0.0          0.0          0.0
55         1.0          1.0          0.0
56         0.0          0.0          0.0
57         0.0          0.0          0.0
58         0.0          0.0          0.0
59         0.0          0.0          0.0
60         0.0          0.0          0.0
61         1.0          1.0          0.0
62         1.0          1.0          0.0
63         0.0          0.0          0.0
MLLITE_CLASS_SQL_ERROR ('digits_small', 'DecisionTreeClassifier', 'duckdb') ('Py_Proba_9', 'SQL_Proba_9') 0.0
    Py_Proba_9  SQL_Proba_9  SQL_Error_9
48         0.0          0.0          0.0
49         0.0          0.0          0.0
50         0.0          0.0          0.0
51         0.0          0.0          0.0
52         1.0          1.0          0.0
53         0.0          0.0          0.0
54         0.0          0.0          0.0
55         0.0          0.0          0.0
56         0.0          0.0          0.0
57         1.0          1.0          0.0
58         1.0          1.0          0.0
59         0.0          0.0          0.0
60         0.0          0.0          0.0
61         0.0          0.0          0.0
62         0.0          0.0          0.0
63         0.0          0.0          0.0
MLLITE_CLASS_SQL_EXECUTION_STATUS ('digits_small', 'DecisionTreeClassifier', 'duckdb', 'Success')
    Py_Decision  SQL_Decision
48            5             5
49            5             5
50            3             3
51            2             2
52            9             9
53            0             0
54            7             7
55            8             8
56            6             6
57            9             9
58            9             9
59            4             4
60            5             5
61            8             8
62            8             8
63            5             5
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/DecisionTreeClassifier/mllite.DecisionTreeClassifier_digits_small_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('digits_small', 'DecisionTreeClassifier', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('digits_small', 'DecisionTreeClassifier', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('digits_small', 'DecisionTreeClassifier', 'sqlite')
"."P_5" ) ELSE -1.79769313486231e+308 END AS "LogProba_5",
   CAST(NULL AS FLOAT)  AS "Score_6",
   "DT_Output"."P_6" AS "Proba_6",
   CASE WHEN ("DT_Output"."P_6" IS NULL OR "DT_Output"."P_6" > 0.0) THEN LN( "DT_Output"."P_6" ) ELSE -1.79769313486231e+308 END AS "LogProba_6",
   CAST(NULL AS FLOAT)  AS "Score_7",
   "DT_Output"."P_7" AS "Proba_7",
   CASE WHEN ("DT_Output"."P_7" IS NULL OR "DT_Output"."P_7" > 0.0) THEN LN( "DT_Output"."P_7" ) ELSE -1.79769313486231e+308 END AS "LogProba_7",
   CAST(NULL AS FLOAT)  AS "Score_8",
   "DT_Output"."P_8" AS "Proba_8",
   CASE WHEN ("DT_Output"."P_8" IS NULL OR "DT_Output"."P_8" > 0.0) THEN LN( "DT_Output"."P_8" ) ELSE -1.79769313486231e+308 END AS "LogProba_8",
   CAST(NULL AS FLOAT)  AS "Score_9",
   "DT_Output"."P_9" AS "Proba_9",
   CASE WHEN ("DT_Output"."P_9" IS NULL OR "DT_Output"."P_9" > 0.0) THEN LN( "DT_Output"."P_9" ) ELSE -1.79769313486231e+308 END AS "LogProba_9",
   "DT_Output"."D" AS "Decision",
   "DT_Output"."DP" AS "DecisionProba"
FROM "DT_Output"
SQL_OUT_PUT_LAST_LINES_END ('digits_small', 'DecisionTreeClassifier', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 64 entries, 0 to 63
Data columns (total 64 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     64 non-null     float32
 1   X_1     64 non-null     float32
 2   X_2     64 non-null     float32
 3   X_3     64 non-null     float32
 4   X_4     64 non-null     float32
 5   X_5     64 non-null     float32
 6   X_6     64 non-null     float32
 7   X_7     64 non-null     float32
 8   X_8     64 non-null     float32
 9   X_9     64 non-null     float32
 10  X_10    64 non-null     float32
 11  X_11    64 non-null     float32
 12  X_12    64 non-null     float32
 13  X_13    64 non-null     float32
 14  X_14    64 non-null     float32
 15  X_15    64 non-null     float32
 16  X_16    64 non-null     float32
 17  X_17    64 non-null     float32
 18  X_18    64 non-null     float32
 19  X_19    64 non-null     float32
 20  X_20    64 non-null     float32
 21  X_21    64 non-null     float32
 22  X_22    64 non-null     float32
 23  X_23    64 non-null     float32
 24  X_24    64 non-null     float32
 25  X_25    64 non-null     float32
 26  X_26    64 non-null     float32
 27  X_27    64 non-null     float32
 28  X_28    64 non-null     float32
 29  X_29    64 non-null     float32
 30  X_30    64 non-null     float32
 31  X_31    64 non-null     float32
 32  X_32    64 non-null     float32
 33  X_33    64 non-null     float32
 34  X_34    64 non-null     float32
 35  X_35    64 non-null     float32
 36  X_36    64 non-null     float32
 37  X_37    64 non-null     float32
 38  X_38    64 non-null     float32
 39  X_39    64 non-null     float32
 40  X_40    64 non-null     float32
 41  X_41    64 non-null     float32
 42  X_42    64 non-null     float32
 43  X_43    64 non-null     float32
 44  X_44    64 non-null     float32
 45  X_45    64 non-null     float32
 46  X_46    64 non-null     float32
 47  X_47    64 non-null     float32
 48  X_48    64 non-null     float32
 49  X_49    64 non-null     float32
 50  X_50    64 non-null     float32
 51  X_51    64 non-null     float32
 52  X_52    64 non-null     float32
 53  X_53    64 non-null     float32
 54  X_54    64 non-null     float32
 55  X_55    64 non-null     float32
 56  X_56    64 non-null     float32
 57  X_57    64 non-null     float32
 58  X_58    64 non-null     float32
 59  X_59    64 non-null     float32
 60  X_60    64 non-null     float32
 61  X_61    64 non-null     float32
 62  X_62    64 non-null     float32
 63  X_63    64 non-null     float32
dtypes: float32(64)
memory usage: 16.5 KB
       X_0  X_1   X_2   X_3   X_4   X_5  ...  X_58  X_59  X_60  X_61  X_62  X_63
index                                    ...                                    
0      0.0  0.0   0.0   3.0  15.0  10.0  ...   0.0   4.0   9.0  14.0   7.0   0.0
1      0.0  0.0  11.0  10.0   0.0   0.0  ...   8.0  16.0  16.0  16.0  16.0  12.0
2      0.0  0.0   0.0  15.0  11.0   0.0  ...   0.0  14.0   4.0   0.0   0.0   0.0
3      0.0  0.0   7.0  13.0  10.0   1.0  ...   7.0  13.0  16.0  15.0   4.0   0.0
4      0.0  0.0   5.0  12.0  13.0   2.0  ...   6.0  16.0  13.0   3.0   0.0   0.0
...    ...  ...   ...   ...   ...   ...  ...   ...   ...   ...   ...   ...   ...
59     0.0  0.0   0.0   0.0  13.0  11.0  ...   0.0   0.0  12.0  11.0   0.0   0.0
60     0.0  0.0  12.0  16.0  16.0   7.0  ...  10.0  12.0  12.0   4.0   0.0   0.0
61     0.0  0.0   1.0   7.0   6.0  11.0  ...   1.0  10.0   8.0   1.0   0.0   0.0
62     0.0  0.0  10.0   7.0  13.0   9.0  ...  11.0  14.0   5.0   0.0   0.0   0.0
63     0.0  3.0  15.0   8.0   8.0   6.0  ...  15.0  14.0   1.0   0.0   0.0   0.0

[64 rows x 64 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 64 entries, 0 to 63
Data columns (total 33 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          64 non-null     int64  
 1   Score_0        0 non-null      object 
 2   Proba_0        64 non-null     float64
 3   LogProba_0     64 non-null     float64
 4   Score_1        0 non-null      object 
 5   Proba_1        64 non-null     float64
 6   LogProba_1     64 non-null     float64
 7   Score_2        0 non-null      object 
 8   Proba_2        64 non-null     float64
 9   LogProba_2     64 non-null     float64
 10  Score_3        0 non-null      object 
 11  Proba_3        64 non-null     float64
 12  LogProba_3     64 non-null     float64
 13  Score_4        0 non-null      object 
 14  Proba_4        64 non-null     float64
 15  LogProba_4     64 non-null     float64
 16  Score_5        0 non-null      object 
 17  Proba_5        64 non-null     float64
 18  LogProba_5     64 non-null     float64
 19  Score_6        0 non-null      object 
 20  Proba_6        64 non-null     float64
 21  LogProba_6     64 non-null     float64
 22  Score_7        0 non-null      object 
 23  Proba_7        64 non-null     float64
 24  LogProba_7     64 non-null     float64
 25  Score_8        0 non-null      object 
 26  Proba_8        64 non-null     float64
 27  LogProba_8     64 non-null     float64
 28  Score_9        0 non-null      object 
 29  Proba_9        64 non-null     float64
 30  LogProba_9     64 non-null     float64
 31  Decision       64 non-null     int64  
 32  DecisionProba  64 non-null     float64
dtypes: float64(21), int64(2), object(10)
memory usage: 16.6+ KB
    index Score_0  Proba_0  ...     LogProba_9 Decision  DecisionProba
0       0    None      0.0  ... -1.797693e+308        2            1.0
1       1    None      0.0  ... -1.797693e+308        1            1.0
2       2    None      0.0  ... -1.797693e+308        1            1.0
3       3    None      0.0  ...   0.000000e+00        9            1.0
4       4    None      0.0  ... -1.797693e+308        8            1.0
..    ...     ...      ...  ...            ...      ...            ...
59     59    None      0.0  ... -1.797693e+308        4            1.0
60     60    None      0.0  ... -1.797693e+308        5            1.0
61     61    None      0.0  ... -1.797693e+308        8            1.0
62     62    None      0.0  ... -1.797693e+308        8            1.0
63     63    None      0.0  ... -1.797693e+308        5            1.0

[64 rows x 33 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Score_3', 'Proba_3',
       'LogProba_3', 'Score_4', 'Proba_4', 'LogProba_4', 'Score_5', 'Proba_5',
       'LogProba_5', 'Score_6', 'Proba_6', 'LogProba_6', 'Score_7', 'Proba_7',
       'LogProba_7', 'Score_8', 'Proba_8', 'LogProba_8', 'Score_9', 'Proba_9',
       'LogProba_9', 'Decision', 'DecisionProba'],
      dtype='object')
    index Score_0  SQL_Proba_0  ...  Py_Proba_8 Py_Proba_9  Py_Decision
48     48    None          0.0  ...         0.0        0.0            5
49     49    None          0.0  ...         0.0        0.0            5
50     50    None          0.0  ...         0.0        0.0            3
51     51    None          0.0  ...         0.0        0.0            2
52     52    None          0.0  ...         0.0        1.0            9
53     53    None          1.0  ...         0.0        0.0            0
54     54    None          0.0  ...         0.0        0.0            7
55     55    None          0.0  ...         1.0        0.0            8
56     56    None          0.0  ...         0.0        0.0            6
57     57    None          0.0  ...         0.0        1.0            9
58     58    None          0.0  ...         0.0        1.0            9
59     59    None          0.0  ...         0.0        0.0            4
60     60    None          0.0  ...         0.0        0.0            5
61     61    None          0.0  ...         1.0        0.0            8
62     62    None          0.0  ...         1.0        0.0            8
63     63    None          0.0  ...         0.0        0.0            5

[16 rows x 44 columns]
MLLITE_CLASS_SQL_ERROR ('digits_small', 'DecisionTreeClassifier', 'sqlite') ('Py_Proba_0', 'SQL_Proba_0') 0.0
    Py_Proba_0  SQL_Proba_0  SQL_Error_0
48         0.0          0.0          0.0
49         0.0          0.0          0.0
50         0.0          0.0          0.0
51         0.0          0.0          0.0
52         0.0          0.0          0.0
53         1.0          1.0          0.0
54         0.0          0.0          0.0
55         0.0          0.0          0.0
56         0.0          0.0          0.0
57         0.0          0.0          0.0
58         0.0          0.0          0.0
59         0.0          0.0          0.0
60         0.0          0.0          0.0
61         0.0          0.0          0.0
62         0.0          0.0          0.0
63         0.0          0.0          0.0
MLLITE_CLASS_SQL_ERROR ('digits_small', 'DecisionTreeClassifier', 'sqlite') ('Py_Proba_1', 'SQL_Proba_1') 0.0
    Py_Proba_1  SQL_Proba_1  SQL_Error_1
48         0.0          0.0          0.0
49         0.0          0.0          0.0
50         0.0          0.0          0.0
51         0.0          0.0          0.0
52         0.0          0.0          0.0
53         0.0          0.0          0.0
54         0.0          0.0          0.0
55         0.0          0.0          0.0
56         0.0          0.0          0.0
57         0.0          0.0          0.0
58         0.0          0.0          0.0
59         0.0          0.0          0.0
60         0.0          0.0          0.0
61         0.0          0.0          0.0
62         0.0          0.0          0.0
63         0.0          0.0          0.0
MLLITE_CLASS_SQL_ERROR ('digits_small', 'DecisionTreeClassifier', 'sqlite') ('Py_Proba_2', 'SQL_Proba_2') 0.0
    Py_Proba_2  SQL_Proba_2  SQL_Error_2
48         0.0          0.0          0.0
49         0.0          0.0          0.0
50         0.0          0.0          0.0
51         1.0          1.0          0.0
52         0.0          0.0          0.0
53         0.0          0.0          0.0
54         0.0          0.0          0.0
55         0.0          0.0          0.0
56         0.0          0.0          0.0
57         0.0          0.0          0.0
58         0.0          0.0          0.0
59         0.0          0.0          0.0
60         0.0          0.0          0.0
61         0.0          0.0          0.0
62         0.0          0.0          0.0
63         0.0          0.0          0.0
MLLITE_CLASS_SQL_ERROR ('digits_small', 'DecisionTreeClassifier', 'sqlite') ('Py_Proba_3', 'SQL_Proba_3') 0.0
    Py_Proba_3  SQL_Proba_3  SQL_Error_3
48         0.0          0.0          0.0
49         0.0          0.0          0.0
50         1.0          1.0          0.0
51         0.0          0.0          0.0
52         0.0          0.0          0.0
53         0.0          0.0          0.0
54         0.0          0.0          0.0
55         0.0          0.0          0.0
56         0.0          0.0          0.0
57         0.0          0.0          0.0
58         0.0          0.0          0.0
59         0.0          0.0          0.0
60         0.0          0.0          0.0
61         0.0          0.0          0.0
62         0.0          0.0          0.0
63         0.0          0.0          0.0
MLLITE_CLASS_SQL_ERROR ('digits_small', 'DecisionTreeClassifier', 'sqlite') ('Py_Proba_4', 'SQL_Proba_4') 0.0
    Py_Proba_4  SQL_Proba_4  SQL_Error_4
48         0.0          0.0          0.0
49         0.0          0.0          0.0
50         0.0          0.0          0.0
51         0.0          0.0          0.0
52         0.0          0.0          0.0
53         0.0          0.0          0.0
54         0.0          0.0          0.0
55         0.0          0.0          0.0
56         0.0          0.0          0.0
57         0.0          0.0          0.0
58         0.0          0.0          0.0
59         1.0          1.0          0.0
60         0.0          0.0          0.0
61         0.0          0.0          0.0
62         0.0          0.0          0.0
63         0.0          0.0          0.0
MLLITE_CLASS_SQL_ERROR ('digits_small', 'DecisionTreeClassifier', 'sqlite') ('Py_Proba_5', 'SQL_Proba_5') 0.0
    Py_Proba_5  SQL_Proba_5  SQL_Error_5
48         1.0          1.0          0.0
49         1.0          1.0          0.0
50         0.0          0.0          0.0
51         0.0          0.0          0.0
52         0.0          0.0          0.0
53         0.0          0.0          0.0
54         0.0          0.0          0.0
55         0.0          0.0          0.0
56         0.0          0.0          0.0
57         0.0          0.0          0.0
58         0.0          0.0          0.0
59         0.0          0.0          0.0
60         1.0          1.0          0.0
61         0.0          0.0          0.0
62         0.0          0.0          0.0
63         1.0          1.0          0.0
MLLITE_CLASS_SQL_ERROR ('digits_small', 'DecisionTreeClassifier', 'sqlite') ('Py_Proba_6', 'SQL_Proba_6') 0.0
    Py_Proba_6  SQL_Proba_6  SQL_Error_6
48         0.0          0.0          0.0
49         0.0          0.0          0.0
50         0.0          0.0          0.0
51         0.0          0.0          0.0
52         0.0          0.0          0.0
53         0.0          0.0          0.0
54         0.0          0.0          0.0
55         0.0          0.0          0.0
56         1.0          1.0          0.0
57         0.0          0.0          0.0
58         0.0          0.0          0.0
59         0.0          0.0          0.0
60         0.0          0.0          0.0
61         0.0          0.0          0.0
62         0.0          0.0          0.0
63         0.0          0.0          0.0
MLLITE_CLASS_SQL_ERROR ('digits_small', 'DecisionTreeClassifier', 'sqlite') ('Py_Proba_7', 'SQL_Proba_7') 0.0
    Py_Proba_7  SQL_Proba_7  SQL_Error_7
48         0.0          0.0          0.0
49         0.0          0.0          0.0
50         0.0          0.0          0.0
51         0.0          0.0          0.0
52         0.0          0.0          0.0
53         0.0          0.0          0.0
54         1.0          1.0          0.0
55         0.0          0.0          0.0
56         0.0          0.0          0.0
57         0.0          0.0          0.0
58         0.0          0.0          0.0
59         0.0          0.0          0.0
60         0.0          0.0          0.0
61         0.0          0.0          0.0
62         0.0          0.0          0.0
63         0.0          0.0          0.0
MLLITE_CLASS_SQL_ERROR ('digits_small', 'DecisionTreeClassifier', 'sqlite') ('Py_Proba_8', 'SQL_Proba_8') 0.0
    Py_Proba_8  SQL_Proba_8  SQL_Error_8
48         0.0          0.0          0.0
49         0.0          0.0          0.0
50         0.0          0.0          0.0
51         0.0          0.0          0.0
52         0.0          0.0          0.0
53         0.0          0.0          0.0
54         0.0          0.0          0.0
55         1.0          1.0          0.0
56         0.0          0.0          0.0
57         0.0          0.0          0.0
58         0.0          0.0          0.0
59         0.0          0.0          0.0
60         0.0          0.0          0.0
61         1.0          1.0          0.0
62         1.0          1.0          0.0
63         0.0          0.0          0.0
MLLITE_CLASS_SQL_ERROR ('digits_small', 'DecisionTreeClassifier', 'sqlite') ('Py_Proba_9', 'SQL_Proba_9') 0.0
    Py_Proba_9  SQL_Proba_9  SQL_Error_9
48         0.0          0.0          0.0
49         0.0          0.0          0.0
50         0.0          0.0          0.0
51         0.0          0.0          0.0
52         1.0          1.0          0.0
53         0.0          0.0          0.0
54         0.0          0.0          0.0
55         0.0          0.0          0.0
56         0.0          0.0          0.0
57         1.0          1.0          0.0
58         1.0          1.0          0.0
59         0.0          0.0          0.0
60         0.0          0.0          0.0
61         0.0          0.0          0.0
62         0.0          0.0          0.0
63         0.0          0.0          0.0
MLLITE_CLASS_SQL_EXECUTION_STATUS ('digits_small', 'DecisionTreeClassifier', 'sqlite', 'Success')
    Py_Decision  SQL_Decision
48            5             5
49            5             5
50            3             3
51            2             2
52            9             9
53            0             0
54            7             7
55            8             8
56            6             6
57            9             9
58            9             9
59            4             4
60            5             5
61            8             8
62            8             8
63            5             5
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
