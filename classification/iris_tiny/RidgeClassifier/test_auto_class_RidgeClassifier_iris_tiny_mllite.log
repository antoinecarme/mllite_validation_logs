    sepal length (cm)  sepal width (cm)  ...  petal width (cm)  target
0                 6.4               3.2  ...               2.3       2
1                 6.3               3.3  ...               1.6       1
2                 7.1               3.0  ...               2.1       2
3                 6.1               2.6  ...               1.4       2
4                 6.8               3.2  ...               2.3       2
5                 5.8               2.7  ...               1.0       1
6                 6.1               2.8  ...               1.3       1
7                 6.0               3.4  ...               1.6       1
8                 5.4               3.7  ...               0.2       0
9                 4.8               3.4  ...               0.2       0
10                5.4               3.4  ...               0.4       0
11                5.9               3.0  ...               1.5       1
12                5.1               2.5  ...               1.1       1
13                5.8               2.6  ...               1.2       1
14                6.7               3.3  ...               2.1       2
15                5.0               3.3  ...               0.2       0

[16 rows x 5 columns]
MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
('OPERATION_START', 'TRAINING')
[[6.4 3.2 5.3 2.3]
 [6.3 3.3 4.7 1.6]
 [7.1 3.  5.9 2.1]
 [6.1 2.6 5.6 1.4]
 [6.8 3.2 5.9 2.3]] [2 1 2 2 2]
MLLITE_FIT_USING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 5 5
('OPERATION_END_ELAPSED', 0.011, 'TRAINING')
{ ,   }
{ ,   }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_il8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 4 },
	"classes" : [ 0, 1, 2 ],
	"equations" : {
		"class_0" : {
			"intercept" : -2.370631,
			"coeffs" : [ 0.071604, 0.937354, -0.194516, -0.532735 ]
		},
		"class_1" : {
			"intercept" : 5.983428,
			"coeffs" : [ -0.424803, -1.264203, -0.036332, 0.352726 ]
		},
		"class_2" : {
			"intercept" : -4.612794,
			"coeffs" : [ 0.353199, 0.326849, 0.230847, 0.180010 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_iris_tiny.json'

MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
MLLITE_RELOADING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_il8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 4 },
	"classes" : [ 0, 1, 2 ],
	"equations" : {
		"class_0" : {
			"intercept" : -2.370631,
			"coeffs" : [ 0.071604, 0.937354, -0.194516, -0.532735 ]
		},
		"class_1" : {
			"intercept" : 5.983428,
			"coeffs" : [ -0.424803, -1.264203, -0.036332, 0.352726 ]
		},
		"class_2" : {
			"intercept" : -4.612794,
			"coeffs" : [ 0.353199, 0.326849, 0.230847, 0.180010 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1, 2 ],
	"dataset" : 	{
		"dataset_features" : 4,
		"dataset_rows" : 16
	},
	"equations" : 	{
		"class_0" : 	{
			"coeffs" : [ 0.071604, 0.937354, -0.194516, -0.532735 ],
			"intercept" : -2.370631
		},
		"class_1" : 	{
			"coeffs" : [ -0.424803, -1.264203, -0.036332, 0.352726 ],
			"intercept" : 5.983428
		},
		"class_2" : 	{
			"coeffs" : [ 0.353199, 0.326849, 0.230847, 0.18001 ],
			"intercept" : -4.612794
		}
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_il8", "version" : "2024-W12" },
	"options" :  { "alpha" : 1.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0.1217 0.333  0.5453]
 [0.2464 0.2783 0.4753]
 [0.0937 0.2593 0.647 ]
 [0.0982 0.5526 0.3491]
 [0.1006 0.2482 0.6512]
 [0.1953 0.5663 0.2384]
 [0.1977 0.509  0.2933]
 [0.2816 0.287  0.4313]
 [0.8074 0.1031 0.0895]
 [0.687  0.2324 0.0806]
 [0.6903 0.2037 0.106 ]
 [0.2078 0.4685 0.3237]
 [0.1313 0.7687 0.1   ]
 [0.1497 0.6357 0.2147]
 [0.135  0.2281 0.6369]
 [0.6707 0.2481 0.0812]]
(16, 3)
(16, 3) float32
MODEL_PERFS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'iris_tiny', 'size': 16, 'accuracy': 0.8125, 'auc': 0.9561327561327561}
WRITING_PERF_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_iris_tiny.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'iris_tiny', 'training_time_in_sec': 0.011, 'prediction_time_in_sec': 0.0}
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_iris_tiny.sql'



SQL_OUT_PUT_FIRST_LINES_START
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT model_input."index" AS "index",
   -2.370631 + 0.071604 * X_0 + 0.937354 * X_1 + -0.194516 * X_2 + -0.532735 * X_3 AS "Score_0", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "LogProba_0",
   5.983428 + -0.424803 * X_0 + -1.264203 * X_1 + -0.036332 * X_2 + 0.352726 * X_3 AS "Score_1", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "LogProba_1",
   -4.612794 + 0.353199 * X_0 + 0.326849 * X_1 + 0.230847 * X_2 + 0.180010 * X_3 AS "Score_2", CAST(NULL AS FLOAT) AS "Proba_2", CAST(NULL AS FLOAT) AS "LogProba_2"
  FROM model_input
 )
,
soft_max_orig_cte AS 
 (SELECT t."index" AS "index", 
   t."Score_0" AS "Score_0",
   t."Proba_0" AS "Proba_0",
   t."LogProba_0" AS "LogProba_0",
   t."Score_1" AS "Score_1",
   t."Proba_
SQL_OUT_PUT_FIRST_LINES_END
SQL_OUT_PUT_LAST_LINES_START
x_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."arg_max_Score" AS "Decision",
  CASE
   WHEN (arg_max_cte."arg_max_Score" = 0) THEN arg_max_cte."Proba_0"
   WHEN (arg_max_cte."arg_max_Score" = 1) THEN arg_max_cte."Proba_1"
   WHEN (arg_max_cte."arg_max_Score" = 2) THEN arg_max_cte."Proba_2"
 END AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END




COPY_TRAINING_DATA_TO_SQLITE_START
    X_0  X_1  X_2  X_3  KEY
0   6.4  3.2  5.3  2.3    0
1   6.3  3.3  4.7  1.6    1
2   7.1  3.0  5.9  2.1    2
3   6.1  2.6  5.6  1.4    3
4   6.8  3.2  5.9  2.3    4
5   5.8  2.7  4.1  1.0    5
6   6.1  2.8  4.0  1.3    6
7   6.0  3.4  4.5  1.6    7
8   5.4  3.7  1.5  0.2    8
9   4.8  3.4  1.6  0.2    9
10  5.4  3.4  1.5  0.4   10
11  5.9  3.0  4.2  1.5   11
12  5.1  2.5  3.0  1.1   12
13  5.8  2.6  4.0  1.2   13
14  6.7  3.3  5.7  2.1   14
15  5.0  3.3  1.4  0.2   15
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
    index   Score_0   Proba_0  ...  LogProba_2  Decision  DecisionProba
0       0 -1.169058  0.121657  ...   -0.606383         2       0.545320
1       1 -0.592859  0.246419  ...   -0.743904         2       0.475255
2       2 -1.316568  0.093718  ...   -0.435417         2       0.646995
3       3 -1.331845  0.098230  ...   -1.052318         1       0.552643
4       4 -1.257126  0.100570  ...   -0.428881         2       0.651237
5       5 -0.754723  0.195284  ...   -1.433841         1       0.566324
6       6 -0.779875  0.197740  ...   -1.226627         1       0.508979
7       7 -0.481701  0.281649  ...   -0.840878         2       0.431332
8       8  1.085919  0.807402  ...   -2.413759         0       0.807402
9       9  0.742299  0.687003  ...   -2.518511         0       0.687003
10     10  0.698166  0.690317  ...   -2.244729         0       0.690317
11     11 -0.752175  0.207772  ...   -1.127937         1       0.468527
12     12 -0.831622  0.131315  ...   -2.302339         1       0.768660
13     13 -0.935554  0.149683  ...   -1.538711         1       0.635659
14     14 -1.025101  0.135025  ...   -0.451105         2       0.636924
15     15  0.701788  0.670679  ...   -2.510262         0       0.670679

[16 rows x 12 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Decision',
       'DecisionProba'],
      dtype='object')
    index   Score_0  SQL_Proba_0  ...  Py_Proba_1  Py_Proba_2  Py_Decision
0       0 -1.169058     0.121657  ...    0.333025    0.545318            2
1       1 -0.592859     0.246419  ...    0.278327    0.475253            2
2       2 -1.316568     0.093718  ...    0.259289    0.646993            2
3       3 -1.331845     0.098230  ...    0.552644    0.349126            1
4       4 -1.257126     0.100570  ...    0.248194    0.651236            2
5       5 -0.754723     0.195284  ...    0.566325    0.238390            1
6       6 -0.779875     0.197740  ...    0.508980    0.293279            1
7       7 -0.481701     0.281649  ...    0.287020    0.431330            2
8       8  1.085919     0.807402  ...    0.103120    0.089478            0
9       9  0.742299     0.687003  ...    0.232418    0.080579            0
10     10  0.698166     0.690317  ...    0.203727    0.105956            0
11     11 -0.752175     0.207772  ...    0.468528    0.323699            1
12     12 -0.831622     0.131315  ...    0.768661    0.100024            1
13     13 -0.935554     0.149683  ...    0.635660    0.214657            1
14     14 -1.025101     0.135025  ...    0.228052    0.636922            2
15     15  0.701788     0.670679  ...    0.248074    0.081247            0

[16 rows x 16 columns]
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
