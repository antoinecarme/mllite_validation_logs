    sepal length (cm)  sepal width (cm)  ...  petal width (cm)  target
0                 6.4               3.2  ...               2.3       2
1                 6.3               3.3  ...               1.6       1
2                 7.1               3.0  ...               2.1       2
3                 6.1               2.6  ...               1.4       2
4                 6.8               3.2  ...               2.3       2
5                 5.8               2.7  ...               1.0       1
6                 6.1               2.8  ...               1.3       1
7                 6.0               3.4  ...               1.6       1
8                 5.4               3.7  ...               0.2       0
9                 4.8               3.4  ...               0.2       0
10                5.4               3.4  ...               0.4       0
11                5.9               3.0  ...               1.5       1
12                5.1               2.5  ...               1.1       1
13                5.8               2.6  ...               1.2       1
14                6.7               3.3  ...               2.1       2
15                5.0               3.3  ...               0.2       0

[16 rows x 5 columns]
MLLITE_MODEL_SET_OPTIONS RidgeClassifier {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { "alpha" : 0.0000001,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
('OPERATION_START', 'TRAINING')
[[6.4 3.2 5.3 2.3]
 [6.3 3.3 4.7 1.6]
 [7.1 3.  5.9 2.1]
 [6.1 2.6 5.6 1.4]
 [6.8 3.2 5.9 2.3]] [2 1 2 2 2]
MLLITE_FIT_USING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 5 5
('OPERATION_END_ELAPSED', 0.012, 'TRAINING')
{ "alpha" : 0.0000001,   }
{ "alpha" : 0.0000001,   }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_il8"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 4 },
	"classes" : [ 0, 1, 2 ],
	"equations" : {
		"class_0" : {
			"intercept" : -3.367818,
			"coeffs" : [ 0.328827, 0.889424, -0.245078, -0.672049 ]
		},
		"class_1" : {
			"intercept" : 7.136906,
			"coeffs" : [ -0.552121, -1.391880, -0.162043, 0.733985 ]
		},
		"class_2" : {
			"intercept" : -4.769086,
			"coeffs" : [ 0.223293, 0.502455, 0.407121, -0.061934 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_iris_tiny_option_1.json'

MLLITE_MODEL_SET_OPTIONS RidgeClassifier {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { "alpha" : 0.0000001,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
MLLITE_RELOADING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_il8"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 4 },
	"classes" : [ 0, 1, 2 ],
	"equations" : {
		"class_0" : {
			"intercept" : -3.367818,
			"coeffs" : [ 0.328827, 0.889424, -0.245078, -0.672049 ]
		},
		"class_1" : {
			"intercept" : 7.136906,
			"coeffs" : [ -0.552121, -1.391880, -0.162043, 0.733985 ]
		},
		"class_2" : {
			"intercept" : -4.769086,
			"coeffs" : [ 0.223293, 0.502455, 0.407121, -0.061934 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1, 2 ],
	"dataset" : 	{
		"dataset_features" : 4,
		"dataset_rows" : 16
	},
	"equations" : 	{
		"class_0" : 	{
			"coeffs" : [ 0.328827, 0.889424, -0.245078, -0.672049 ],
			"intercept" : -3.367818
		},
		"class_1" : 	{
			"coeffs" : [ -0.552121, -1.39188, -0.162043, 0.733985 ],
			"intercept" : 7.136906
		},
		"class_2" : 	{
			"coeffs" : [ 0.223293, 0.502455, 0.407121, -0.061934 ],
			"intercept" : -4.769086
		}
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_il8", "version" : "2024-W12" },
	"options" :  { "alpha" : 0.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0.1094 0.378  0.5126]
 [0.2452 0.262  0.4929]
 [0.1053 0.2461 0.6486]
 [0.0961 0.492  0.4119]
 [0.098  0.2504 0.6515]
 [0.2031 0.5423 0.2546]
 [0.2091 0.516  0.2749]
 [0.2603 0.2836 0.4561]
 [0.8323 0.0845 0.0832]
 [0.6793 0.2339 0.0868]
 [0.7176 0.1913 0.0911]
 [0.1957 0.4914 0.3129]
 [0.1004 0.8236 0.076 ]
 [0.1474 0.6494 0.2032]
 [0.1304 0.215  0.6546]
 [0.6799 0.2425 0.0776]]
(16, 3)
(16, 3) float32
MODEL_PERFS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': '{"alpha" : 0.0000001}', 'dataset': 'iris_tiny', 'size': 16, 'accuracy': 0.8125, 'auc': 0.9614237614237614}
WRITING_PERF_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_iris_tiny_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': '{"alpha" : 0.0000001}', 'dataset': 'iris_tiny', 'training_time_in_sec': 0.012, 'prediction_time_in_sec': 0.0}
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_iris_tiny_option_1.sql'



SQL_OUT_PUT_FIRST_LINES_START
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT model_input."index" AS "index",
   -3.367818 + 0.328827 * X_0 + 0.889424 * X_1 + -0.245078 * X_2 + -0.672049 * X_3 AS "Score_0", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "LogProba_0",
   7.136906 + -0.552121 * X_0 + -1.391880 * X_1 + -0.162043 * X_2 + 0.733985 * X_3 AS "Score_1", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "LogProba_1",
   -4.769086 + 0.223293 * X_0 + 0.502455 * X_1 + 0.407121 * X_2 + -0.061934 * X_3 AS "Score_2", CAST(NULL AS FLOAT) AS "Proba_2", CAST(NULL AS FLOAT) AS "LogProba_2"
  FROM model_input
 )
,
soft_max_orig_cte AS 
 (SELECT t."index" AS "index", 
   t."Score_0" AS "Score_0",
   t."Proba_0" AS "Proba_0",
   t."LogProba_0" AS "LogProba_0",
   t."Score_1" AS "Score_1",
   t."Proba
SQL_OUT_PUT_FIRST_LINES_END
SQL_OUT_PUT_LAST_LINES_START
x_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."arg_max_Score" AS "Decision",
  CASE
   WHEN (arg_max_cte."arg_max_Score" = 0) THEN arg_max_cte."Proba_0"
   WHEN (arg_max_cte."arg_max_Score" = 1) THEN arg_max_cte."Proba_1"
   WHEN (arg_max_cte."arg_max_Score" = 2) THEN arg_max_cte."Proba_2"
 END AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END




COPY_TRAINING_DATA_TO_SQLITE_START
    X_0  X_1  X_2  X_3  KEY
0   6.4  3.2  5.3  2.3    0
1   6.3  3.3  4.7  1.6    1
2   7.1  3.0  5.9  2.1    2
3   6.1  2.6  5.6  1.4    3
4   6.8  3.2  5.9  2.3    4
5   5.8  2.7  4.1  1.0    5
6   6.1  2.8  4.0  1.3    6
7   6.0  3.4  4.5  1.6    7
8   5.4  3.7  1.5  0.2    8
9   4.8  3.4  1.6  0.2    9
10  5.4  3.4  1.5  0.4   10
11  5.9  3.0  4.2  1.5   11
12  5.1  2.5  3.0  1.1   12
13  5.8  2.6  4.0  1.2   13
14  6.7  3.3  5.7  2.1   14
15  5.0  3.3  1.4  0.2   15
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
    index   Score_0   Proba_0  ...  LogProba_2  Decision  DecisionProba
0       0 -1.261794  0.109352  ...   -0.668254         2       0.512603
1       1 -0.588254  0.245150  ...   -0.707495         2       0.492877
2       2 -1.222137  0.105324  ...   -0.432963         2       0.648585
3       3 -1.362776  0.096107  ...   -0.886964         1       0.491989
4       4 -1.277310  0.098032  ...   -0.428422         2       0.651537
5       5 -0.736045  0.203096  ...   -1.368129         1       0.542322
6       6 -0.725562  0.209113  ...   -1.291474         1       0.516022
7       7 -0.548944  0.260282  ...   -0.785076         2       0.456085
8       8  1.196690  0.832279  ...   -2.486204         0       0.832279
9       9  0.708059  0.679336  ...   -2.444624         0       0.679336
10     10  0.795453  0.717607  ...   -2.396334         0       0.717607
11     11 -0.796868  0.195650  ...   -1.161846         1       0.491442
12     12 -0.941728  0.100418  ...   -2.577601         1       0.823626
13     13 -0.934890  0.147357  ...   -1.593445         1       0.649418
14     14 -1.037825  0.130399  ...   -0.423728         2       0.654602
15     15  0.733897  0.679911  ...   -2.556628         0       0.679911

[16 rows x 12 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Decision',
       'DecisionProba'],
      dtype='object')
    index   Score_0  SQL_Proba_0  ...  Py_Proba_1  Py_Proba_2  Py_Decision
0       0 -1.261794     0.109352  ...    0.378047    0.512602            2
1       1 -0.588254     0.245150  ...    0.261973    0.492877            2
2       2 -1.222137     0.105324  ...    0.246092    0.648584            2
3       3 -1.362776     0.096107  ...    0.491989    0.411904            1
4       4 -1.277310     0.098032  ...    0.250432    0.651536            2
5       5 -0.736045     0.203096  ...    0.542322    0.254582            1
6       6 -0.725562     0.209113  ...    0.516022    0.274865            1
7       7 -0.548944     0.260282  ...    0.283633    0.456084            2
8       8  1.196690     0.832279  ...    0.084496    0.083225            0
9       9  0.708059     0.679336  ...    0.233906    0.086759            0
10     10  0.795453     0.717607  ...    0.191342    0.091051            0
11     11 -0.796868     0.195650  ...    0.491442    0.312908            1
12     12 -0.941728     0.100418  ...    0.823626    0.075956            1
13     13 -0.934890     0.147357  ...    0.649419    0.203224            1
14     14 -1.037825     0.130399  ...    0.215000    0.654601            2
15     15  0.733897     0.679911  ...    0.242524    0.077566            0

[16 rows x 16 columns]
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
