READING_CSV iris_tiny ['data/tiny/iris_tiny.csv']
    sepal length (cm)  sepal width (cm)  ...  petal width (cm)  target
0                 6.4               3.2  ...               2.3       2
1                 6.3               3.3  ...               1.6       1
2                 7.1               3.0  ...               2.1       2
3                 6.1               2.6  ...               1.4       2
4                 6.8               3.2  ...               2.3       2
5                 5.8               2.7  ...               1.0       1
6                 6.1               2.8  ...               1.3       1
7                 6.0               3.4  ...               1.6       1
8                 5.4               3.7  ...               0.2       0
9                 4.8               3.4  ...               0.2       0
10                5.4               3.4  ...               0.4       0
11                5.9               3.0  ...               1.5       1
12                5.1               2.5  ...               1.1       1
13                5.8               2.6  ...               1.2       1
14                6.7               3.3  ...               2.1       2
15                5.0               3.3  ...               0.2       0

[16 rows x 5 columns]
MLLITE_MODEL_SET_OPTIONS DecisionTreeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT DecisionTreeClassifier { "max_leaf_nodes" : 64}
MLLITE_MODEL_OPTIONS_AFTER_SETTING DecisionTreeClassifier { ,  "max_leaf_nodes" : 64 }
MLLITE_MODEL_JSON_AFTER_SETTING DecisionTreeClassifier None
('OPERATION_START', 'TRAINING')
[[6.4 3.2 5.3 2.3]
 [6.3 3.3 4.7 1.6]
 [7.1 3.  5.9 2.1]
 [6.1 2.6 5.6 1.4]
 [6.8 3.2 5.9 2.3]] [2 1 2 2 2]
MLLITE_FIT_USING_MODEL mllite_decision_tree_class.DecisionTreeClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_CLASSIFIER_FIT' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 0 16
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 16 16
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_CLASSIFIER_FIT' 2 4
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_CLASSIFIER_FIT' 3 4
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_CLASSIFIER_FIT' 4 4
('OPERATION_END_ELAPSED', 0.012, 'TRAINING')
{ ,  "max_leaf_nodes" : 64 }
{ ,  "max_leaf_nodes" : 64 }
{
	"metadata" : { "model" : "Breiman_CART", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : { "ccp_alpha" : 0.000000, "criterion" : "", "max_depth" : null, "max_features" : null, "max_leaf_nodes" : 64, "min_impurity_decrease" : 0.000000, "min_samples_leaf" : 1, "min_samples_split" : 2, "min_weight_fraction_leaf" : 0.000000, "random_state" : 1789, "splitter" : "best" },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 4 },
	"classes" : [ 0, 1, 2 ],
	"tree" : {
	"features" : 4,
	"outputs" : 3,
	"max_depth" : 1,
	"node_count" : 5,
	"nodes" : {
		"node_0" : {"left" : 1, "right" : 2, "feature" : 2, "threshold" : 5.000000, "impurity" : 0.648438, "n_samples" : 16, "w_samples" : 16.000000, "value" : [0.250000, 0.437500, 0.312500]},
		"node_1" : {"left" : 3, "right" : 4, "feature" : 2, "threshold" : 2.300000, "impurity" : 0.462810, "n_samples" : 11, "w_samples" : 11.000000, "value" : [0.363636, 0.636364, 0.000000]},
		"node_2" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 5, "w_samples" : 5.000000, "value" : [0.000000, 0.000000, 1.000000]},
		"node_3" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 4, "w_samples" : 4.000000, "value" : [1.000000, 0.000000, 0.000000]},
		"node_4" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 7, "w_samples" : 7.000000, "value" : [0.000000, 1.000000, 0.000000]}
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/DecisionTreeClassifier/mllite.DecisionTreeClassifier_iris_tiny.json'

RELOADING_MODEL_FROM_JSON_START ('iris_tiny', 'DecisionTreeClassifier')
MLLITE_MODEL_SET_OPTIONS DecisionTreeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT DecisionTreeClassifier { "max_leaf_nodes" : 64}
MLLITE_MODEL_OPTIONS_AFTER_SETTING DecisionTreeClassifier { ,  "max_leaf_nodes" : 64 }
MLLITE_MODEL_JSON_AFTER_SETTING DecisionTreeClassifier None
MLLITE_RELOADING_MODEL mllite_decision_tree_class.DecisionTreeClassifier_ff4_il8
{
	"metadata" : { "model" : "Breiman_CART", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : { "ccp_alpha" : 0.000000, "criterion" : "", "max_depth" : null, "max_features" : null, "max_leaf_nodes" : 64, "min_impurity_decrease" : 0.000000, "min_samples_leaf" : 1, "min_samples_split" : 2, "min_weight_fraction_leaf" : 0.000000, "random_state" : 1789, "splitter" : "best" },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 4 },
	"classes" : [ 0, 1, 2 ],
	"tree" : {
	"features" : 4,
	"outputs" : 3,
	"max_depth" : 1,
	"node_count" : 5,
	"nodes" : {
		"node_0" : {"left" : 1, "right" : 2, "feature" : 2, "threshold" : 5.000000, "impurity" : 0.648438, "n_samples" : 16, "w_samples" : 16.000000, "value" : [0.250000, 0.437500, 0.312500]},
		"node_1" : {"left" : 3, "right" : 4, "feature" : 2, "threshold" : 2.300000, "impurity" : 0.462810, "n_samples" : 11, "w_samples" : 11.000000, "value" : [0.363636, 0.636364, 0.000000]},
		"node_2" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 5, "w_samples" : 5.000000, "value" : [0.000000, 0.000000, 1.000000]},
		"node_3" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 4, "w_samples" : 4.000000, "value" : [1.000000, 0.000000, 0.000000]},
		"node_4" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 7, "w_samples" : 7.000000, "value" : [0.000000, 1.000000, 0.000000]}
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1, 2 ],
	"dataset" : 	{
		"dataset_features" : 4,
		"dataset_rows" : 16
	},
	"metadata" :  { "model" : "Breiman_CART", "signature" : "ff4_il8", "version" : "2024-W14" },
	"options" :  { "ccp_alpha" : 0.0, "criterion" : "", "max_depth" : null, "max_features" : null, "max_leaf_nodes" : 64, "min_impurity_decrease" : 0.0, "min_samples_leaf" : 1, "min_samples_split" : 2, "min_weight_fraction_leaf" : 0.0, "random_state" : 1789, "splitter" : "best" },
	"tree" : 	{
		"features" : 4,
		"max_depth" : 1,
		"node_count" : 5,
		"nodes" : 	{
			"node_0" :  { "feature" : 2, "impurity" : 0.648438, "left" : 1, "n_samples" : 16, "right" : 2, "threshold" : 5.0, "value" : [ 0.25, 0.4375, 0.3125 ], "w_samples" : 16.0 },
			"node_1" :  { "feature" : 2, "impurity" : 0.46281, "left" : 3, "n_samples" : 11, "right" : 4, "threshold" : 2.3, "value" : [ 0.363636, 0.636364, 0.0 ], "w_samples" : 11.0 },
			"node_2" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 5, "right" : null, "threshold" : null, "value" : [ 0.0, 0.0, 1.0 ], "w_samples" : 5.0 },
			"node_3" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 4, "right" : null, "threshold" : null, "value" : [ 1.0, 0.0, 0.0 ], "w_samples" : 4.0 },
			"node_4" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 7, "right" : null, "threshold" : null, "value" : [ 0.0, 1.0, 0.0 ], "w_samples" : 7.0 }
		},
		"outputs" : 3
	}
}
BEAUTIFIED_JSON_END
RELOADING_MODEL_FROM_JSON_END ('iris_tiny', 'DecisionTreeClassifier')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0. 0. 1.]
 [0. 1. 0.]
 [0. 0. 1.]
 [0. 0. 1.]
 [0. 0. 1.]
 [0. 1. 0.]
 [0. 1. 0.]
 [0. 1. 0.]
 [1. 0. 0.]
 [1. 0. 0.]
 [1. 0. 0.]
 [0. 1. 0.]
 [0. 1. 0.]
 [0. 1. 0.]
 [0. 0. 1.]
 [1. 0. 0.]]
(16, 3)
(16, 3) float32
MODEL_PERFS {'class_name': 'mllite.DecisionTreeClassifier', 'model_name': 'DecisionTreeClassifier', 'options': None, 'dataset': 'iris_tiny', 'size': 16, 'accuracy': 1.0, 'auc': 1.0}
WRITING_PERF_CODE 'logs/auto_tests/classification/DecisionTreeClassifier/mllite.DecisionTreeClassifier_iris_tiny.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.DecisionTreeClassifier', 'model_name': 'DecisionTreeClassifier', 'options': None, 'dataset': 'iris_tiny', 'training_time_in_sec': 0.012, 'prediction_time_in_sec': 0.0}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 0 4
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 2 4
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 3 4
{
   "Contributions" : {
      "X_0" : [ 0.000000, 0.000000, 0.000000 ],
      "X_1" : [ 0.000000, 0.000000, 0.000000 ],
      "X_2" : [ -0.031250, 0.000000, 0.031250 ],
      "X_3" : [ 0.000000, 0.000000, 0.000000 ]   
   },
   "Most_Contributive_Features_By_Class" : {
      "class_0" : [ 2 ],
      "class_1" : [ ],
      "class_2" : [ 2 ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/classification/DecisionTreeClassifier/mllite.DecisionTreeClassifier_iris_tiny_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/classification/DecisionTreeClassifier/mllite.DecisionTreeClassifier_iris_tiny_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('iris_tiny', 'DecisionTreeClassifier', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "iris_tiny" AS "ADS" 
 ),
"DT_node_lookup" AS 
 (SELECT
    t."index" AS "index",
    COALESCE( t1."Leaf_2", t1."Leaf_3", t1."Leaf_4" ) AS node_id
  FROM
    "model_input" AS t
    LEFT OUTER JOIN
   (SELECT
      t."index" AS "index",
      CASE WHEN((t."X_2" > 5.000000)) THEN 2 ELSE NULL END AS "Leaf_2",
      CASE WHEN((t."X_2" <= 5.000000) AND (t."X_2" <= 2.300000)) THEN 3 ELSE NULL END AS "Leaf_3",
      CASE WHEN((t."X_2" <= 5.000000) AND (t."X_2" > 2.300000)) THEN 4 ELSE NULL END AS "Leaf_4"
    FROM "model_input" AS t
    ) AS t1
    ON(t."index" = t1."index")
 ),
"DT_node_data" AS 
 (SELECT
    "Values".nid AS nid,
    "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", 
    "Values"."D" AS "D",
    "Values"."DP" AS "DP"
  FROM (
    SELECT 0 AS nid,  0.250000 AS "P_0
SQL_OUT_PUT_FIRST_LINES_END ('iris_tiny', 'DecisionTreeClassifier', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('iris_tiny', 'DecisionTreeClassifier', 'duckdb')
d AS node_id,
   t2.nid AS nid,
   t2."P_0" AS "P_0", t2."P_1" AS "P_1", t2."P_2" AS "P_2", 
   t2."D" AS "D", 
   t2."DP" AS "DP"
  FROM
   "DT_node_lookup" AS t1
   LEFT OUTER JOIN
   "DT_node_data" AS t2
   ON t1.node_id = t2.nid
 )
SELECT
   "DT_Output"."index" AS "index",
   CAST(NULL AS FLOAT)  AS "Score_0",
   "DT_Output"."P_0" AS "Proba_0",
   CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN LN( "DT_Output"."P_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
   CAST(NULL AS FLOAT)  AS "Score_1",
   "DT_Output"."P_1" AS "Proba_1",
   CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN LN( "DT_Output"."P_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
   CAST(NULL AS FLOAT)  AS "Score_2",
   "DT_Output"."P_2" AS "Proba_2",
   CASE WHEN ("DT_Output"."P_2" IS NULL OR "DT_Output"."P_2" > 0.0) THEN LN( "DT_Output"."P_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
   "DT_Output"."D" AS "Decision",
   "DT_Output"."DP" AS "DecisionProba"
FROM "DT_Output"
SQL_OUT_PUT_LAST_LINES_END ('iris_tiny', 'DecisionTreeClassifier', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 16 entries, 0 to 15
Data columns (total 4 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     16 non-null     float32
 1   X_1     16 non-null     float32
 2   X_2     16 non-null     float32
 3   X_3     16 non-null     float32
dtypes: float32(4)
memory usage: 384.0 bytes
       X_0  X_1  X_2  X_3
index                    
0      6.4  3.2  5.3  2.3
1      6.3  3.3  4.7  1.6
2      7.1  3.0  5.9  2.1
3      6.1  2.6  5.6  1.4
4      6.8  3.2  5.9  2.3
5      5.8  2.7  4.1  1.0
6      6.1  2.8  4.0  1.3
7      6.0  3.4  4.5  1.6
8      5.4  3.7  1.5  0.2
9      4.8  3.4  1.6  0.2
10     5.4  3.4  1.5  0.4
11     5.9  3.0  4.2  1.5
12     5.1  2.5  3.0  1.1
13     5.8  2.6  4.0  1.2
14     6.7  3.3  5.7  2.1
15     5.0  3.3  1.4  0.2
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 16 entries, 0 to 15
Data columns (total 12 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          16 non-null     int64  
 1   Score_0        0 non-null      object 
 2   Proba_0        16 non-null     float64
 3   LogProba_0     16 non-null     float64
 4   Score_1        0 non-null      object 
 5   Proba_1        16 non-null     float64
 6   LogProba_1     16 non-null     float64
 7   Score_2        0 non-null      object 
 8   Proba_2        16 non-null     float64
 9   LogProba_2     16 non-null     float64
 10  Decision       16 non-null     int64  
 11  DecisionProba  16 non-null     float64
dtypes: float64(7), int64(2), object(3)
memory usage: 1.6+ KB
    index Score_0  Proba_0  ...     LogProba_2 Decision  DecisionProba
0       0    None      0.0  ...   0.000000e+00        2            1.0
1       1    None      0.0  ... -1.797693e+308        1            1.0
2       2    None      0.0  ...   0.000000e+00        2            1.0
3       3    None      0.0  ...   0.000000e+00        2            1.0
4       4    None      0.0  ...   0.000000e+00        2            1.0
5       5    None      0.0  ... -1.797693e+308        1            1.0
6       6    None      0.0  ... -1.797693e+308        1            1.0
7       7    None      0.0  ... -1.797693e+308        1            1.0
8       8    None      1.0  ... -1.797693e+308        0            1.0
9       9    None      1.0  ... -1.797693e+308        0            1.0
10     10    None      1.0  ... -1.797693e+308        0            1.0
11     11    None      0.0  ... -1.797693e+308        1            1.0
12     12    None      0.0  ... -1.797693e+308        1            1.0
13     13    None      0.0  ... -1.797693e+308        1            1.0
14     14    None      0.0  ...   0.000000e+00        2            1.0
15     15    None      1.0  ... -1.797693e+308        0            1.0

[16 rows x 12 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Decision',
       'DecisionProba'],
      dtype='object')
    index Score_0  SQL_Proba_0  ...  Py_Proba_1 Py_Proba_2  Py_Decision
0       0    None          0.0  ...         0.0        1.0            2
1       1    None          0.0  ...         1.0        0.0            1
2       2    None          0.0  ...         0.0        1.0            2
3       3    None          0.0  ...         0.0        1.0            2
4       4    None          0.0  ...         0.0        1.0            2
5       5    None          0.0  ...         1.0        0.0            1
6       6    None          0.0  ...         1.0        0.0            1
7       7    None          0.0  ...         1.0        0.0            1
8       8    None          1.0  ...         0.0        0.0            0
9       9    None          1.0  ...         0.0        0.0            0
10     10    None          1.0  ...         0.0        0.0            0
11     11    None          0.0  ...         1.0        0.0            1
12     12    None          0.0  ...         1.0        0.0            1
13     13    None          0.0  ...         1.0        0.0            1
14     14    None          0.0  ...         0.0        1.0            2
15     15    None          1.0  ...         0.0        0.0            0

[16 rows x 16 columns]
MLLITE_CLASS_SQL_ERROR ('iris_tiny', 'DecisionTreeClassifier', 'duckdb') ('Py_Proba_0', 'SQL_Proba_0') 0.0
    Py_Proba_0  SQL_Proba_0  SQL_Error_0
0          0.0          0.0          0.0
1          0.0          0.0          0.0
2          0.0          0.0          0.0
3          0.0          0.0          0.0
4          0.0          0.0          0.0
5          0.0          0.0          0.0
6          0.0          0.0          0.0
7          0.0          0.0          0.0
8          1.0          1.0          0.0
9          1.0          1.0          0.0
10         1.0          1.0          0.0
11         0.0          0.0          0.0
12         0.0          0.0          0.0
13         0.0          0.0          0.0
14         0.0          0.0          0.0
15         1.0          1.0          0.0
MLLITE_CLASS_SQL_ERROR ('iris_tiny', 'DecisionTreeClassifier', 'duckdb') ('Py_Proba_1', 'SQL_Proba_1') 0.0
    Py_Proba_1  SQL_Proba_1  SQL_Error_1
0          0.0          0.0          0.0
1          1.0          1.0          0.0
2          0.0          0.0          0.0
3          0.0          0.0          0.0
4          0.0          0.0          0.0
5          1.0          1.0          0.0
6          1.0          1.0          0.0
7          1.0          1.0          0.0
8          0.0          0.0          0.0
9          0.0          0.0          0.0
10         0.0          0.0          0.0
11         1.0          1.0          0.0
12         1.0          1.0          0.0
13         1.0          1.0          0.0
14         0.0          0.0          0.0
15         0.0          0.0          0.0
MLLITE_CLASS_SQL_ERROR ('iris_tiny', 'DecisionTreeClassifier', 'duckdb') ('Py_Proba_2', 'SQL_Proba_2') 0.0
    Py_Proba_2  SQL_Proba_2  SQL_Error_2
0          1.0          1.0          0.0
1          0.0          0.0          0.0
2          1.0          1.0          0.0
3          1.0          1.0          0.0
4          1.0          1.0          0.0
5          0.0          0.0          0.0
6          0.0          0.0          0.0
7          0.0          0.0          0.0
8          0.0          0.0          0.0
9          0.0          0.0          0.0
10         0.0          0.0          0.0
11         0.0          0.0          0.0
12         0.0          0.0          0.0
13         0.0          0.0          0.0
14         1.0          1.0          0.0
15         0.0          0.0          0.0
MLLITE_CLASS_SQL_EXECUTION_STATUS ('iris_tiny', 'DecisionTreeClassifier', 'duckdb', 'Success')
    Py_Decision  SQL_Decision
0             2             2
1             1             1
2             2             2
3             2             2
4             2             2
5             1             1
6             1             1
7             1             1
8             0             0
9             0             0
10            0             0
11            1             1
12            1             1
13            1             1
14            2             2
15            0             0
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/DecisionTreeClassifier/mllite.DecisionTreeClassifier_iris_tiny_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('iris_tiny', 'DecisionTreeClassifier', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "iris_tiny" AS "ADS" 
 ),
"DT_node_lookup" AS 
 (SELECT
    t."index" AS "index",
    COALESCE( t1."Leaf_2", t1."Leaf_3", t1."Leaf_4" ) AS node_id
  FROM
    "model_input" AS t
    LEFT OUTER JOIN
   (SELECT
      t."index" AS "index",
      CASE WHEN((t."X_2" > 5.000000)) THEN 2 ELSE NULL END AS "Leaf_2",
      CASE WHEN((t."X_2" <= 5.000000) AND (t."X_2" <= 2.300000)) THEN 3 ELSE NULL END AS "Leaf_3",
      CASE WHEN((t."X_2" <= 5.000000) AND (t."X_2" > 2.300000)) THEN 4 ELSE NULL END AS "Leaf_4"
    FROM "model_input" AS t
    ) AS t1
    ON(t."index" = t1."index")
 ),
"DT_node_data" AS 
 (SELECT
    "Values".nid AS nid,
    "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", 
    "Values"."D" AS "D",
    "Values"."DP" AS "DP"
  FROM (
    SELECT 0 AS nid,  0.250000 AS "P_0
SQL_OUT_PUT_FIRST_LINES_END ('iris_tiny', 'DecisionTreeClassifier', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('iris_tiny', 'DecisionTreeClassifier', 'sqlite')
d AS node_id,
   t2.nid AS nid,
   t2."P_0" AS "P_0", t2."P_1" AS "P_1", t2."P_2" AS "P_2", 
   t2."D" AS "D", 
   t2."DP" AS "DP"
  FROM
   "DT_node_lookup" AS t1
   LEFT OUTER JOIN
   "DT_node_data" AS t2
   ON t1.node_id = t2.nid
 )
SELECT
   "DT_Output"."index" AS "index",
   CAST(NULL AS FLOAT)  AS "Score_0",
   "DT_Output"."P_0" AS "Proba_0",
   CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN LN( "DT_Output"."P_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
   CAST(NULL AS FLOAT)  AS "Score_1",
   "DT_Output"."P_1" AS "Proba_1",
   CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN LN( "DT_Output"."P_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
   CAST(NULL AS FLOAT)  AS "Score_2",
   "DT_Output"."P_2" AS "Proba_2",
   CASE WHEN ("DT_Output"."P_2" IS NULL OR "DT_Output"."P_2" > 0.0) THEN LN( "DT_Output"."P_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
   "DT_Output"."D" AS "Decision",
   "DT_Output"."DP" AS "DecisionProba"
FROM "DT_Output"
SQL_OUT_PUT_LAST_LINES_END ('iris_tiny', 'DecisionTreeClassifier', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 16 entries, 0 to 15
Data columns (total 4 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     16 non-null     float32
 1   X_1     16 non-null     float32
 2   X_2     16 non-null     float32
 3   X_3     16 non-null     float32
dtypes: float32(4)
memory usage: 384.0 bytes
       X_0  X_1  X_2  X_3
index                    
0      6.4  3.2  5.3  2.3
1      6.3  3.3  4.7  1.6
2      7.1  3.0  5.9  2.1
3      6.1  2.6  5.6  1.4
4      6.8  3.2  5.9  2.3
5      5.8  2.7  4.1  1.0
6      6.1  2.8  4.0  1.3
7      6.0  3.4  4.5  1.6
8      5.4  3.7  1.5  0.2
9      4.8  3.4  1.6  0.2
10     5.4  3.4  1.5  0.4
11     5.9  3.0  4.2  1.5
12     5.1  2.5  3.0  1.1
13     5.8  2.6  4.0  1.2
14     6.7  3.3  5.7  2.1
15     5.0  3.3  1.4  0.2
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 16 entries, 0 to 15
Data columns (total 12 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          16 non-null     int64  
 1   Score_0        0 non-null      object 
 2   Proba_0        16 non-null     float64
 3   LogProba_0     16 non-null     float64
 4   Score_1        0 non-null      object 
 5   Proba_1        16 non-null     float64
 6   LogProba_1     16 non-null     float64
 7   Score_2        0 non-null      object 
 8   Proba_2        16 non-null     float64
 9   LogProba_2     16 non-null     float64
 10  Decision       16 non-null     int64  
 11  DecisionProba  16 non-null     float64
dtypes: float64(7), int64(2), object(3)
memory usage: 1.6+ KB
    index Score_0  Proba_0  ...     LogProba_2 Decision  DecisionProba
0       0    None      0.0  ...   0.000000e+00        2            1.0
1       1    None      0.0  ... -1.797693e+308        1            1.0
2       2    None      0.0  ...   0.000000e+00        2            1.0
3       3    None      0.0  ...   0.000000e+00        2            1.0
4       4    None      0.0  ...   0.000000e+00        2            1.0
5       5    None      0.0  ... -1.797693e+308        1            1.0
6       6    None      0.0  ... -1.797693e+308        1            1.0
7       7    None      0.0  ... -1.797693e+308        1            1.0
8       8    None      1.0  ... -1.797693e+308        0            1.0
9       9    None      1.0  ... -1.797693e+308        0            1.0
10     10    None      1.0  ... -1.797693e+308        0            1.0
11     11    None      0.0  ... -1.797693e+308        1            1.0
12     12    None      0.0  ... -1.797693e+308        1            1.0
13     13    None      0.0  ... -1.797693e+308        1            1.0
14     14    None      0.0  ...   0.000000e+00        2            1.0
15     15    None      1.0  ... -1.797693e+308        0            1.0

[16 rows x 12 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Decision',
       'DecisionProba'],
      dtype='object')
    index Score_0  SQL_Proba_0  ...  Py_Proba_1 Py_Proba_2  Py_Decision
0       0    None          0.0  ...         0.0        1.0            2
1       1    None          0.0  ...         1.0        0.0            1
2       2    None          0.0  ...         0.0        1.0            2
3       3    None          0.0  ...         0.0        1.0            2
4       4    None          0.0  ...         0.0        1.0            2
5       5    None          0.0  ...         1.0        0.0            1
6       6    None          0.0  ...         1.0        0.0            1
7       7    None          0.0  ...         1.0        0.0            1
8       8    None          1.0  ...         0.0        0.0            0
9       9    None          1.0  ...         0.0        0.0            0
10     10    None          1.0  ...         0.0        0.0            0
11     11    None          0.0  ...         1.0        0.0            1
12     12    None          0.0  ...         1.0        0.0            1
13     13    None          0.0  ...         1.0        0.0            1
14     14    None          0.0  ...         0.0        1.0            2
15     15    None          1.0  ...         0.0        0.0            0

[16 rows x 16 columns]
MLLITE_CLASS_SQL_ERROR ('iris_tiny', 'DecisionTreeClassifier', 'sqlite') ('Py_Proba_0', 'SQL_Proba_0') 0.0
    Py_Proba_0  SQL_Proba_0  SQL_Error_0
0          0.0          0.0          0.0
1          0.0          0.0          0.0
2          0.0          0.0          0.0
3          0.0          0.0          0.0
4          0.0          0.0          0.0
5          0.0          0.0          0.0
6          0.0          0.0          0.0
7          0.0          0.0          0.0
8          1.0          1.0          0.0
9          1.0          1.0          0.0
10         1.0          1.0          0.0
11         0.0          0.0          0.0
12         0.0          0.0          0.0
13         0.0          0.0          0.0
14         0.0          0.0          0.0
15         1.0          1.0          0.0
MLLITE_CLASS_SQL_ERROR ('iris_tiny', 'DecisionTreeClassifier', 'sqlite') ('Py_Proba_1', 'SQL_Proba_1') 0.0
    Py_Proba_1  SQL_Proba_1  SQL_Error_1
0          0.0          0.0          0.0
1          1.0          1.0          0.0
2          0.0          0.0          0.0
3          0.0          0.0          0.0
4          0.0          0.0          0.0
5          1.0          1.0          0.0
6          1.0          1.0          0.0
7          1.0          1.0          0.0
8          0.0          0.0          0.0
9          0.0          0.0          0.0
10         0.0          0.0          0.0
11         1.0          1.0          0.0
12         1.0          1.0          0.0
13         1.0          1.0          0.0
14         0.0          0.0          0.0
15         0.0          0.0          0.0
MLLITE_CLASS_SQL_ERROR ('iris_tiny', 'DecisionTreeClassifier', 'sqlite') ('Py_Proba_2', 'SQL_Proba_2') 0.0
    Py_Proba_2  SQL_Proba_2  SQL_Error_2
0          1.0          1.0          0.0
1          0.0          0.0          0.0
2          1.0          1.0          0.0
3          1.0          1.0          0.0
4          1.0          1.0          0.0
5          0.0          0.0          0.0
6          0.0          0.0          0.0
7          0.0          0.0          0.0
8          0.0          0.0          0.0
9          0.0          0.0          0.0
10         0.0          0.0          0.0
11         0.0          0.0          0.0
12         0.0          0.0          0.0
13         0.0          0.0          0.0
14         1.0          1.0          0.0
15         0.0          0.0          0.0
MLLITE_CLASS_SQL_EXECUTION_STATUS ('iris_tiny', 'DecisionTreeClassifier', 'sqlite', 'Success')
    Py_Decision  SQL_Decision
0             2             2
1             1             1
2             2             2
3             2             2
4             2             2
5             1             1
6             1             1
7             1             1
8             0             0
9             0             0
10            0             0
11            1             1
12            1             1
13            1             1
14            2             2
15            0             0
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
