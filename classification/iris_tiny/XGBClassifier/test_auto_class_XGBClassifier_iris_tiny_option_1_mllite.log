READING_CSV iris_tiny ['data/tiny/iris_tiny.csv']
    sepal length (cm)  sepal width (cm)  ...  petal width (cm)  target
0                 6.4               3.2  ...               2.3       2
1                 6.3               3.3  ...               1.6       1
2                 7.1               3.0  ...               2.1       2
3                 6.1               2.6  ...               1.4       2
4                 6.8               3.2  ...               2.3       2
5                 5.8               2.7  ...               1.0       1
6                 6.1               2.8  ...               1.3       1
7                 6.0               3.4  ...               1.6       1
8                 5.4               3.7  ...               0.2       0
9                 4.8               3.4  ...               0.2       0
10                5.4               3.4  ...               0.4       0
11                5.9               3.0  ...               1.5       1
12                5.1               2.5  ...               1.1       1
13                5.8               2.6  ...               1.2       1
14                6.7               3.3  ...               2.1       2
15                5.0               3.3  ...               0.2       0

[16 rows x 5 columns]
MLLITE_MODEL_SET_OPTIONS XGBClassifier {"max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 }
MLLITE_MODEL_OPTIONS_DEFAULT XGBClassifier { "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING XGBClassifier { "max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 ,  "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32  }
MLLITE_MODEL_JSON_AFTER_SETTING XGBClassifier None
('OPERATION_START', 'TRAINING')
[[6.4 3.2 5.3 2.3]
 [6.3 3.3 4.7 1.6]
 [7.1 3.  5.9 2.1]
 [6.1 2.6 5.6 1.4]
 [6.8 3.2 5.9 2.3]] [2 1 2 2 2]
MLLITE_FIT_USING_MODEL mllite_xgb_class.XGBClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_CLASSIFIER_FIT' 1 3
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_CLASSIFIER_FIT' 2 3
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 1 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 2 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 3 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 4 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 5 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 6 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 7 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_CLASSIFIER_FIT' 3 3
('OPERATION_END_ELAPSED', 0.012, 'TRAINING')
{ "max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 ,  "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32  }
{ "max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 ,  "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32  }
{
	"metadata" : { "model" : "Friedman_XGB", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : { "base_score" : [ ], "early_stopping_rounds" : 0, "eval_metric" : "", "gamma" : 0.000000, "grow_policy" : 0, "learning_rate" : 0.300000, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 32, "min_child_weight" : 5.000000, "n_estimators" : 5, "objective" : "reg:squarederror", "reg_alpha" : 0.000000, "reg_lambda" : 1.000000, "tree_method" : "auto" },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 4 },
	"classes" : [ 0, 1, 2 ],
	"booster" : {
		"BaseScore" : [ 0.250000, 0.437500, 0.312500 ],
		"Trees" : 5,
		"Tree_0" : {
			"Node_0" : { "leaf_value" : [ 0.250000, 0.437500, 0.312500 ], "parent" : null, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_1" : {
			"Node_0" : { "leaf_value" : [ 0.500000, 0.875000, 0.625000 ], "parent" : null, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_2" : {
			"Node_0" : { "leaf_value" : [ 1.000000, 1.750000, 1.250000 ], "parent" : null, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_3" : {
			"Node_0" : { "leaf_value" : [ 2.000000, 3.500000, 2.500000 ], "parent" : null, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_4" : {
			"Node_0" : { "leaf_value" : [ 4.000000, 7.000000, 5.000000 ], "parent" : null, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/XGBClassifier/mllite.XGBClassifier_iris_tiny_option_1.json'

RELOADING_MODEL_FROM_JSON_START ('iris_tiny', 'XGBClassifier')
MLLITE_MODEL_SET_OPTIONS XGBClassifier {"max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 }
MLLITE_MODEL_OPTIONS_DEFAULT XGBClassifier { "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING XGBClassifier { "max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 ,  "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32  }
MLLITE_MODEL_JSON_AFTER_SETTING XGBClassifier None
MLLITE_RELOADING_MODEL mllite_xgb_class.XGBClassifier_ff4_il8
{
	"metadata" : { "model" : "Friedman_XGB", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : { "base_score" : [ ], "early_stopping_rounds" : 0, "eval_metric" : "", "gamma" : 0.000000, "grow_policy" : 0, "learning_rate" : 0.300000, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 32, "min_child_weight" : 5.000000, "n_estimators" : 5, "objective" : "reg:squarederror", "reg_alpha" : 0.000000, "reg_lambda" : 1.000000, "tree_method" : "auto" },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 4 },
	"classes" : [ 0, 1, 2 ],
	"booster" : {
		"BaseScore" : [ 0.250000, 0.437500, 0.312500 ],
		"Trees" : 5,
		"Tree_0" : {
			"Node_0" : { "leaf_value" : [ 0.250000, 0.437500, 0.312500 ], "parent" : null, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_1" : {
			"Node_0" : { "leaf_value" : [ 0.500000, 0.875000, 0.625000 ], "parent" : null, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_2" : {
			"Node_0" : { "leaf_value" : [ 1.000000, 1.750000, 1.250000 ], "parent" : null, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_3" : {
			"Node_0" : { "leaf_value" : [ 2.000000, 3.500000, 2.500000 ], "parent" : null, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_4" : {
			"Node_0" : { "leaf_value" : [ 4.000000, 7.000000, 5.000000 ], "parent" : null, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		}
	}
}
BEAUTIFIED_JSON_START
{
	"booster" : 	{
		"BaseScore" : [ 0.25, 0.4375, 0.3125 ],
		"Tree_0" : 	{
			"Node_0" : 	{
				"leaf_value" : [ 0.25, 0.4375, 0.3125 ],
				"left" : null,
				"parent" : null,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			}
		},
		"Tree_1" : 	{
			"Node_0" : 	{
				"leaf_value" : [ 0.5, 0.875, 0.625 ],
				"left" : null,
				"parent" : null,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			}
		},
		"Tree_2" : 	{
			"Node_0" : 	{
				"leaf_value" : [ 1.0, 1.75, 1.25 ],
				"left" : null,
				"parent" : null,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			}
		},
		"Tree_3" : 	{
			"Node_0" : 	{
				"leaf_value" : [ 2.0, 3.5, 2.5 ],
				"left" : null,
				"parent" : null,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			}
		},
		"Tree_4" : 	{
			"Node_0" : 	{
				"leaf_value" : [ 4.0, 7.0, 5.0 ],
				"left" : null,
				"parent" : null,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			}
		},
		"Trees" : 5
	},
	"classes" : [ 0, 1, 2 ],
	"dataset" : 	{
		"dataset_features" : 4,
		"dataset_rows" : 16
	},
	"metadata" :  { "model" : "Friedman_XGB", "signature" : "ff4_il8", "version" : "2024-W14" },
	"options" :  { "base_score" : [ ], "early_stopping_rounds" : 0, "eval_metric" : "", "gamma" : 0.0, "grow_policy" : 0, "learning_rate" : 0.3, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 32, "min_child_weight" : 5.0, "n_estimators" : 5, "objective" : "reg:squarederror", "reg_alpha" : 0.0, "reg_lambda" : 1.0, "tree_method" : "auto" }
}
BEAUTIFIED_JSON_END
RELOADING_MODEL_FROM_JSON_END ('iris_tiny', 'XGBClassifier')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0.0024 0.9796 0.0179]
 [0.0024 0.9796 0.0179]
 [0.0024 0.9796 0.0179]
 [0.0024 0.9796 0.0179]
 [0.0024 0.9796 0.0179]
 [0.0024 0.9796 0.0179]
 [0.0024 0.9796 0.0179]
 [0.0024 0.9796 0.0179]
 [0.0024 0.9796 0.0179]
 [0.0024 0.9796 0.0179]
 [0.0024 0.9796 0.0179]
 [0.0024 0.9796 0.0179]
 [0.0024 0.9796 0.0179]
 [0.0024 0.9796 0.0179]
 [0.0024 0.9796 0.0179]
 [0.0024 0.9796 0.0179]]
(16, 3)
(16, 3) float32
MODEL_PERFS {'class_name': 'mllite.XGBClassifier', 'model_name': 'XGBClassifier', 'options': '{"max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 }', 'dataset': 'iris_tiny', 'size': 16, 'accuracy': 0.4375, 'auc': 0.5}
WRITING_PERF_CODE 'logs/auto_tests/classification/XGBClassifier/mllite.XGBClassifier_iris_tiny_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.XGBClassifier', 'model_name': 'XGBClassifier', 'options': '{"max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 }', 'dataset': 'iris_tiny', 'training_time_in_sec': 0.012, 'prediction_time_in_sec': 0.0}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 0 4
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 2 4
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 3 4
{
   "Contributions" : {
      "X_0" : [ 0.000000, 0.000000, 0.000000 ],
      "X_1" : [ 0.000000, 0.000000, 0.000000 ],
      "X_2" : [ 0.000000, 0.000000, 0.000000 ],
      "X_3" : [ 0.000000, 0.000000, 0.000000 ]   
   },
   "Most_Contributive_Features_By_Class" : {
      "class_0" : [ ],
      "class_1" : [ ],
      "class_2" : [ ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/classification/XGBClassifier/mllite.XGBClassifier_iris_tiny_option_1_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/classification/XGBClassifier/mllite.XGBClassifier_iris_tiny_option_1_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('iris_tiny', 'XGBClassifier', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "iris_tiny" AS "ADS" 
 ),
"DT_node_lookup_0" AS 
 (SELECT
    t."index" AS "index",
    0 AS node_id
  FROM model_input t
 )
,
"DT_node_data_0" AS 
 (SELECT
    "Values".nid AS nid,
    "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2"
  FROM (
    SELECT 0 AS nid,  0.250000 AS "P_0", 0.437500 AS "P_1", 0.312500 AS "P_2"
  ) AS "Values")
,
"DT_output_0" AS 
 (SELECT
   t1."index" AS "index",
   t1.node_id AS node_id,
   t2.nid AS nid,
   t2."P_0" AS "P_0", t2."P_1" AS "P_1", t2."P_2" AS "P_2"
  FROM
   "DT_node_lookup_0" AS t1
   LEFT OUTER JOIN
   "DT_node_data_0" AS t2
   ON t1.node_id = t2.nid
 )
,
"DT_node_lookup_1" AS 
 (SELECT
    t."index" AS "index",
    0 AS node_id
  FROM model_input t
 )
,
"DT_node_data_1" AS 
 (SELECT
    "Values".nid AS nid,
    "Values"."P_0" AS
SQL_OUT_PUT_FIRST_LINES_END ('iris_tiny', 'XGBClassifier', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('iris_tiny', 'XGBClassifier', 'duckdb')
roba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1", t."max_idx_2" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('iris_tiny', 'XGBClassifier', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 16 entries, 0 to 15
Data columns (total 4 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     16 non-null     float32
 1   X_1     16 non-null     float32
 2   X_2     16 non-null     float32
 3   X_3     16 non-null     float32
dtypes: float32(4)
memory usage: 384.0 bytes
       X_0  X_1  X_2  X_3
index                    
0      6.4  3.2  5.3  2.3
1      6.3  3.3  4.7  1.6
2      7.1  3.0  5.9  2.1
3      6.1  2.6  5.6  1.4
4      6.8  3.2  5.9  2.3
5      5.8  2.7  4.1  1.0
6      6.1  2.8  4.0  1.3
7      6.0  3.4  4.5  1.6
8      5.4  3.7  1.5  0.2
9      4.8  3.4  1.6  0.2
10     5.4  3.4  1.5  0.4
11     5.9  3.0  4.2  1.5
12     5.1  2.5  3.0  1.1
13     5.8  2.6  4.0  1.2
14     6.7  3.3  5.7  2.1
15     5.0  3.3  1.4  0.2
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 16 entries, 0 to 15
Data columns (total 12 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          16 non-null     int64  
 1   Score_0        16 non-null     float64
 2   Proba_0        16 non-null     float64
 3   LogProba_0     16 non-null     float64
 4   Score_1        16 non-null     float64
 5   Proba_1        16 non-null     float64
 6   LogProba_1     16 non-null     float64
 7   Score_2        16 non-null     float64
 8   Proba_2        16 non-null     float64
 9   LogProba_2     16 non-null     float64
 10  Decision       16 non-null     int64  
 11  DecisionProba  16 non-null     float64
dtypes: float64(10), int64(2)
memory usage: 1.6 KB
    index  Score_0   Proba_0  ...  LogProba_2  Decision  DecisionProba
0       0      8.0  0.002428  ...   -4.020581         1       0.979629
1       1      8.0  0.002428  ...   -4.020581         1       0.979629
2       2      8.0  0.002428  ...   -4.020581         1       0.979629
3       3      8.0  0.002428  ...   -4.020581         1       0.979629
4       4      8.0  0.002428  ...   -4.020581         1       0.979629
5       5      8.0  0.002428  ...   -4.020581         1       0.979629
6       6      8.0  0.002428  ...   -4.020581         1       0.979629
7       7      8.0  0.002428  ...   -4.020581         1       0.979629
8       8      8.0  0.002428  ...   -4.020581         1       0.979629
9       9      8.0  0.002428  ...   -4.020581         1       0.979629
10     10      8.0  0.002428  ...   -4.020581         1       0.979629
11     11      8.0  0.002428  ...   -4.020581         1       0.979629
12     12      8.0  0.002428  ...   -4.020581         1       0.979629
13     13      8.0  0.002428  ...   -4.020581         1       0.979629
14     14      8.0  0.002428  ...   -4.020581         1       0.979629
15     15      8.0  0.002428  ...   -4.020581         1       0.979629

[16 rows x 12 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Decision',
       'DecisionProba'],
      dtype='object')
    index  Score_0  SQL_Proba_0  ...  Py_Proba_1  Py_Proba_2  Py_Decision
0       0      8.0     0.002428  ...    0.979629    0.017943            1
1       1      8.0     0.002428  ...    0.979629    0.017943            1
2       2      8.0     0.002428  ...    0.979629    0.017943            1
3       3      8.0     0.002428  ...    0.979629    0.017943            1
4       4      8.0     0.002428  ...    0.979629    0.017943            1
5       5      8.0     0.002428  ...    0.979629    0.017943            1
6       6      8.0     0.002428  ...    0.979629    0.017943            1
7       7      8.0     0.002428  ...    0.979629    0.017943            1
8       8      8.0     0.002428  ...    0.979629    0.017943            1
9       9      8.0     0.002428  ...    0.979629    0.017943            1
10     10      8.0     0.002428  ...    0.979629    0.017943            1
11     11      8.0     0.002428  ...    0.979629    0.017943            1
12     12      8.0     0.002428  ...    0.979629    0.017943            1
13     13      8.0     0.002428  ...    0.979629    0.017943            1
14     14      8.0     0.002428  ...    0.979629    0.017943            1
15     15      8.0     0.002428  ...    0.979629    0.017943            1

[16 rows x 16 columns]
MLLITE_CLASS_SQL_ERROR ('iris_tiny', 'XGBClassifier', 'duckdb') ('Py_Proba_0', 'SQL_Proba_0') 1.916997589314351e-10
    Py_Proba_0  SQL_Proba_0   SQL_Error_0
0     0.002428     0.002428 -1.916998e-10
1     0.002428     0.002428 -1.916998e-10
2     0.002428     0.002428 -1.916998e-10
3     0.002428     0.002428 -1.916998e-10
4     0.002428     0.002428 -1.916998e-10
5     0.002428     0.002428 -1.916998e-10
6     0.002428     0.002428 -1.916998e-10
7     0.002428     0.002428 -1.916998e-10
8     0.002428     0.002428 -1.916998e-10
9     0.002428     0.002428 -1.916998e-10
10    0.002428     0.002428 -1.916998e-10
11    0.002428     0.002428 -1.916998e-10
12    0.002428     0.002428 -1.916998e-10
13    0.002428     0.002428 -1.916998e-10
14    0.002428     0.002428 -1.916998e-10
15    0.002428     0.002428 -1.916998e-10
MLLITE_CLASS_SQL_ERROR ('iris_tiny', 'XGBClassifier', 'duckdb') ('Py_Proba_1', 'SQL_Proba_1') 1.0779803050198211e-07
    Py_Proba_1  SQL_Proba_1   SQL_Error_1
0     0.979629     0.979629 -1.077980e-07
1     0.979629     0.979629 -1.077980e-07
2     0.979629     0.979629 -1.077980e-07
3     0.979629     0.979629 -1.077980e-07
4     0.979629     0.979629 -1.077980e-07
5     0.979629     0.979629 -1.077980e-07
6     0.979629     0.979629 -1.077980e-07
7     0.979629     0.979629 -1.077980e-07
8     0.979629     0.979629 -1.077980e-07
9     0.979629     0.979629 -1.077980e-07
10    0.979629     0.979629 -1.077980e-07
11    0.979629     0.979629 -1.077980e-07
12    0.979629     0.979629 -1.077980e-07
13    0.979629     0.979629 -1.077980e-07
14    0.979629     0.979629 -1.077980e-07
15    0.979629     0.979629 -1.077980e-07
MLLITE_CLASS_SQL_ERROR ('iris_tiny', 'XGBClassifier', 'duckdb') ('Py_Proba_2', 'SQL_Proba_2') 1.906333649964731e-09
    Py_Proba_2  SQL_Proba_2   SQL_Error_2
0     0.017943     0.017943 -1.906334e-09
1     0.017943     0.017943 -1.906334e-09
2     0.017943     0.017943 -1.906334e-09
3     0.017943     0.017943 -1.906334e-09
4     0.017943     0.017943 -1.906334e-09
5     0.017943     0.017943 -1.906334e-09
6     0.017943     0.017943 -1.906334e-09
7     0.017943     0.017943 -1.906334e-09
8     0.017943     0.017943 -1.906334e-09
9     0.017943     0.017943 -1.906334e-09
10    0.017943     0.017943 -1.906334e-09
11    0.017943     0.017943 -1.906334e-09
12    0.017943     0.017943 -1.906334e-09
13    0.017943     0.017943 -1.906334e-09
14    0.017943     0.017943 -1.906334e-09
15    0.017943     0.017943 -1.906334e-09
MLLITE_CLASS_SQL_EXECUTION_STATUS ('iris_tiny', 'XGBClassifier', 'duckdb', 'Success')
    Py_Decision  SQL_Decision
0             1             1
1             1             1
2             1             1
3             1             1
4             1             1
5             1             1
6             1             1
7             1             1
8             1             1
9             1             1
10            1             1
11            1             1
12            1             1
13            1             1
14            1             1
15            1             1
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/XGBClassifier/mllite.XGBClassifier_iris_tiny_option_1_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('iris_tiny', 'XGBClassifier', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "iris_tiny" AS "ADS" 
 ),
"DT_node_lookup_0" AS 
 (SELECT
    t."index" AS "index",
    0 AS node_id
  FROM model_input t
 )
,
"DT_node_data_0" AS 
 (SELECT
    "Values".nid AS nid,
    "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2"
  FROM (
    SELECT 0 AS nid,  0.250000 AS "P_0", 0.437500 AS "P_1", 0.312500 AS "P_2"
  ) AS "Values")
,
"DT_output_0" AS 
 (SELECT
   t1."index" AS "index",
   t1.node_id AS node_id,
   t2.nid AS nid,
   t2."P_0" AS "P_0", t2."P_1" AS "P_1", t2."P_2" AS "P_2"
  FROM
   "DT_node_lookup_0" AS t1
   LEFT OUTER JOIN
   "DT_node_data_0" AS t2
   ON t1.node_id = t2.nid
 )
,
"DT_node_lookup_1" AS 
 (SELECT
    t."index" AS "index",
    0 AS node_id
  FROM model_input t
 )
,
"DT_node_data_1" AS 
 (SELECT
    "Values".nid AS nid,
    "Values"."P_0" AS
SQL_OUT_PUT_FIRST_LINES_END ('iris_tiny', 'XGBClassifier', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('iris_tiny', 'XGBClassifier', 'sqlite')
roba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1", t."max_idx_2" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('iris_tiny', 'XGBClassifier', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 16 entries, 0 to 15
Data columns (total 4 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     16 non-null     float32
 1   X_1     16 non-null     float32
 2   X_2     16 non-null     float32
 3   X_3     16 non-null     float32
dtypes: float32(4)
memory usage: 384.0 bytes
       X_0  X_1  X_2  X_3
index                    
0      6.4  3.2  5.3  2.3
1      6.3  3.3  4.7  1.6
2      7.1  3.0  5.9  2.1
3      6.1  2.6  5.6  1.4
4      6.8  3.2  5.9  2.3
5      5.8  2.7  4.1  1.0
6      6.1  2.8  4.0  1.3
7      6.0  3.4  4.5  1.6
8      5.4  3.7  1.5  0.2
9      4.8  3.4  1.6  0.2
10     5.4  3.4  1.5  0.4
11     5.9  3.0  4.2  1.5
12     5.1  2.5  3.0  1.1
13     5.8  2.6  4.0  1.2
14     6.7  3.3  5.7  2.1
15     5.0  3.3  1.4  0.2
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 16 entries, 0 to 15
Data columns (total 12 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          16 non-null     int64  
 1   Score_0        16 non-null     float64
 2   Proba_0        16 non-null     float64
 3   LogProba_0     16 non-null     float64
 4   Score_1        16 non-null     float64
 5   Proba_1        16 non-null     float64
 6   LogProba_1     16 non-null     float64
 7   Score_2        16 non-null     float64
 8   Proba_2        16 non-null     float64
 9   LogProba_2     16 non-null     float64
 10  Decision       16 non-null     int64  
 11  DecisionProba  16 non-null     float64
dtypes: float64(10), int64(2)
memory usage: 1.6 KB
    index  Score_0   Proba_0  ...  LogProba_2  Decision  DecisionProba
0       0      8.0  0.002428  ...   -4.020581         1       0.979629
1       1      8.0  0.002428  ...   -4.020581         1       0.979629
2       2      8.0  0.002428  ...   -4.020581         1       0.979629
3       3      8.0  0.002428  ...   -4.020581         1       0.979629
4       4      8.0  0.002428  ...   -4.020581         1       0.979629
5       5      8.0  0.002428  ...   -4.020581         1       0.979629
6       6      8.0  0.002428  ...   -4.020581         1       0.979629
7       7      8.0  0.002428  ...   -4.020581         1       0.979629
8       8      8.0  0.002428  ...   -4.020581         1       0.979629
9       9      8.0  0.002428  ...   -4.020581         1       0.979629
10     10      8.0  0.002428  ...   -4.020581         1       0.979629
11     11      8.0  0.002428  ...   -4.020581         1       0.979629
12     12      8.0  0.002428  ...   -4.020581         1       0.979629
13     13      8.0  0.002428  ...   -4.020581         1       0.979629
14     14      8.0  0.002428  ...   -4.020581         1       0.979629
15     15      8.0  0.002428  ...   -4.020581         1       0.979629

[16 rows x 12 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Decision',
       'DecisionProba'],
      dtype='object')
    index  Score_0  SQL_Proba_0  ...  Py_Proba_1  Py_Proba_2  Py_Decision
0       0      8.0     0.002428  ...    0.979629    0.017943            1
1       1      8.0     0.002428  ...    0.979629    0.017943            1
2       2      8.0     0.002428  ...    0.979629    0.017943            1
3       3      8.0     0.002428  ...    0.979629    0.017943            1
4       4      8.0     0.002428  ...    0.979629    0.017943            1
5       5      8.0     0.002428  ...    0.979629    0.017943            1
6       6      8.0     0.002428  ...    0.979629    0.017943            1
7       7      8.0     0.002428  ...    0.979629    0.017943            1
8       8      8.0     0.002428  ...    0.979629    0.017943            1
9       9      8.0     0.002428  ...    0.979629    0.017943            1
10     10      8.0     0.002428  ...    0.979629    0.017943            1
11     11      8.0     0.002428  ...    0.979629    0.017943            1
12     12      8.0     0.002428  ...    0.979629    0.017943            1
13     13      8.0     0.002428  ...    0.979629    0.017943            1
14     14      8.0     0.002428  ...    0.979629    0.017943            1
15     15      8.0     0.002428  ...    0.979629    0.017943            1

[16 rows x 16 columns]
MLLITE_CLASS_SQL_ERROR ('iris_tiny', 'XGBClassifier', 'sqlite') ('Py_Proba_0', 'SQL_Proba_0') 1.916997589314351e-10
    Py_Proba_0  SQL_Proba_0   SQL_Error_0
0     0.002428     0.002428 -1.916998e-10
1     0.002428     0.002428 -1.916998e-10
2     0.002428     0.002428 -1.916998e-10
3     0.002428     0.002428 -1.916998e-10
4     0.002428     0.002428 -1.916998e-10
5     0.002428     0.002428 -1.916998e-10
6     0.002428     0.002428 -1.916998e-10
7     0.002428     0.002428 -1.916998e-10
8     0.002428     0.002428 -1.916998e-10
9     0.002428     0.002428 -1.916998e-10
10    0.002428     0.002428 -1.916998e-10
11    0.002428     0.002428 -1.916998e-10
12    0.002428     0.002428 -1.916998e-10
13    0.002428     0.002428 -1.916998e-10
14    0.002428     0.002428 -1.916998e-10
15    0.002428     0.002428 -1.916998e-10
MLLITE_CLASS_SQL_ERROR ('iris_tiny', 'XGBClassifier', 'sqlite') ('Py_Proba_1', 'SQL_Proba_1') 1.0779803050198211e-07
    Py_Proba_1  SQL_Proba_1   SQL_Error_1
0     0.979629     0.979629 -1.077980e-07
1     0.979629     0.979629 -1.077980e-07
2     0.979629     0.979629 -1.077980e-07
3     0.979629     0.979629 -1.077980e-07
4     0.979629     0.979629 -1.077980e-07
5     0.979629     0.979629 -1.077980e-07
6     0.979629     0.979629 -1.077980e-07
7     0.979629     0.979629 -1.077980e-07
8     0.979629     0.979629 -1.077980e-07
9     0.979629     0.979629 -1.077980e-07
10    0.979629     0.979629 -1.077980e-07
11    0.979629     0.979629 -1.077980e-07
12    0.979629     0.979629 -1.077980e-07
13    0.979629     0.979629 -1.077980e-07
14    0.979629     0.979629 -1.077980e-07
15    0.979629     0.979629 -1.077980e-07
MLLITE_CLASS_SQL_ERROR ('iris_tiny', 'XGBClassifier', 'sqlite') ('Py_Proba_2', 'SQL_Proba_2') 1.906333649964731e-09
    Py_Proba_2  SQL_Proba_2   SQL_Error_2
0     0.017943     0.017943 -1.906334e-09
1     0.017943     0.017943 -1.906334e-09
2     0.017943     0.017943 -1.906334e-09
3     0.017943     0.017943 -1.906334e-09
4     0.017943     0.017943 -1.906334e-09
5     0.017943     0.017943 -1.906334e-09
6     0.017943     0.017943 -1.906334e-09
7     0.017943     0.017943 -1.906334e-09
8     0.017943     0.017943 -1.906334e-09
9     0.017943     0.017943 -1.906334e-09
10    0.017943     0.017943 -1.906334e-09
11    0.017943     0.017943 -1.906334e-09
12    0.017943     0.017943 -1.906334e-09
13    0.017943     0.017943 -1.906334e-09
14    0.017943     0.017943 -1.906334e-09
15    0.017943     0.017943 -1.906334e-09
MLLITE_CLASS_SQL_EXECUTION_STATUS ('iris_tiny', 'XGBClassifier', 'sqlite', 'Success')
    Py_Decision  SQL_Decision
0             1             1
1             1             1
2             1             1
3             1             1
4             1             1
5             1             1
6             1             1
7             1             1
8             1             1
9             1             1
10            1             1
11            1             1
12            1             1
13            1             1
14            1             1
15            1             1
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
