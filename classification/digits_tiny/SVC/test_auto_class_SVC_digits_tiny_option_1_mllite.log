READING_CSV digits_tiny ['data/tiny/digits_tiny.csv']
    pixel_0_0  pixel_0_1  pixel_0_2  ...  pixel_7_6  pixel_7_7  target
0           0          0          0  ...          7          0       2
1           0          0         11  ...         16         12       1
2           0          0          0  ...          0          0       1
3           0          0          7  ...          4          0       9
4           0          0          5  ...          0          0       8
5           0          0          1  ...          0          0       8
6           0          0          2  ...          0          0       7
7           0          0          4  ...          0          0       0
8           0          0          1  ...          1          0       9
9           0          0          2  ...          0          0       7
10          0          0          0  ...          0          0       4
11          0          0          5  ...          0          0       3
12          0          1         11  ...          3          0       9
13          0          0          0  ...          0          0       7
14          0          0          1  ...          0          0       0
15          0          0          5  ...          0          0       0

[16 rows x 65 columns]
MLLITE_MODEL_SET_OPTIONS SVC {"C" : 2}
MLLITE_MODEL_OPTIONS_DEFAULT SVC { "max_iter" : 128 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING SVC { "C" : 2,  "max_iter" : 128  }
MLLITE_MODEL_JSON_AFTER_SETTING SVC None
('OPERATION_START', 'TRAINING')
[[ 0.  0.  0.  3. 15. 10.  1.  0.  0.  0.  0. 11. 10. 16.  4.  0.  0.  0.
   0. 12.  1. 15.  6.  0.  0.  0.  0.  3.  4. 15.  4.  0.  0.  0.  0.  6.
  15.  6.  0.  0.  0.  4. 15. 16.  9.  0.  0.  0.  0.  0. 13. 16. 15.  9.
   3.  0.  0.  0.  0.  4.  9. 14.  7.  0.]
 [ 0.  0. 11. 10.  0.  0.  0.  0.  0.  0. 11. 15.  0.  0.  0.  0.  0.  0.
  11. 16.  5.  0.  0.  0.  0.  0. 13. 16. 11.  0.  0.  0.  0.  0.  2.  7.
  16.  2.  0.  0.  0.  0.  0.  2. 14.  6.  0.  0.  0.  0.  6. 10. 15. 13.
   8.  3.  0.  0.  8. 16. 16. 16. 16. 12.]
 [ 0.  0.  0. 15. 11.  0.  0.  0.  0.  0.  6. 16. 16.  2.  0.  0.  0.  0.
  10. 16. 16.  1.  0.  0.  0.  2. 16. 16. 16.  3.  0.  0.  0.  7. 16. 16.
  14.  0.  0.  0.  0.  0.  3. 15. 10.  0.  0.  0.  0.  0.  0. 15.  7.  0.
   0.  0.  0.  0.  0. 14.  4.  0.  0.  0.]
 [ 0.  0.  7. 13. 10.  1.  0.  0.  0.  1. 15.  3.  9. 10.  0.  0.  0.  3.
  16.  4. 13. 11.  0.  0.  0.  0.  6. 12. 12. 16.  0.  0.  0.  0.  0.  0.
   0. 12.  5.  0.  0.  0.  0.  0.  0.  5. 11.  0.  0.  1. 11.  2.  0.  7.
  11.  0.  0.  0.  7. 13. 16. 15.  4.  0.]
 [ 0.  0.  5. 12. 13.  2.  0.  0.  0.  3. 16. 14. 16. 13.  1.  0.  0.  4.
  16.  9. 16. 12.  1.  0.  0.  1.  9. 16. 15.  1.  0.  0.  0.  1. 13. 16.
  16.  5.  0.  0.  0.  3. 16.  5. 12. 16.  0.  0.  0.  3. 15.  7. 14. 12.
   0.  0.  0.  0.  6. 16. 13.  3.  0.  0.]] [2 1 1 9 8]
MLLITE_FIT_USING_MODEL mllite_svm_class.SVC_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_CLASSIFIER_FIT' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_CLASSIFIER_FIT' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_CLASSIFIER_FIT' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_CLASSIFIER_FIT' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 1 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_0_1_CV_FOLD_3' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_0_1' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 2 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 3 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_0_3_CV_FOLD_1' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 4 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 5 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_0_7_CV_FOLD_1' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_0_7_CV_FOLD_2' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_0_7_CV_FOLD_4' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_0_7_CV_FOLD_5' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_0_7' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 6 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_0_8' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 7 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_0_9_CV_FOLD_2' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_0_9' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 8 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_1_2_CV_FOLD_1' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_1_2_CV_FOLD_3' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_1_2' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 9 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_1_3' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 10 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_1_4_CV_FOLD_1' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_1_4_CV_FOLD_3' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_1_4' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 11 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_1_7' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 12 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 13 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_1_9_CV_FOLD_4' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_1_9' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 14 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 15 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 16 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 17 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 18 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 19 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 20 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 21 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 22 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 23 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 24 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 25 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 26 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_7_8' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 27 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_7_9_CV_FOLD_1' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_7_9_CV_FOLD_2' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_7_9_CV_FOLD_3' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_7_9' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 28 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_CLASSIFIER_FIT' 5 5
('OPERATION_END_ELAPSED', 0.04, 'TRAINING')
{ "C" : 2,  "max_iter" : 128  }
{ "C" : 2,  "max_iter" : 128  }
{
	"metadata" : { "model" : "Vapnik_SVC_RBF", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : {"svm_type" : "c_svc", "kernel" : "rbf", "degree" : 3, "gamma" : 0.000449, "coef0" : 0.000000, "cache_size" : 300, "tol" : 0.001000, "nu" : 0.500000, "epsilon" : 0.000000, "shrinking" : 0, "probability" : 1, "C" : 2.000000, "max_iter" : 128, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 64 },
	"classes" : [ 0, 1, 2, 3, 4, 7, 8, 9 ],
	"svm_model" : {
	"classes" : 8,
	"L" : 16,
	"SupportVectors" : {
		"SV_00" : [ 0.000000, 0.000000, 4.000000, 12.000000, 5.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 12.000000, 14.000000, 15.000000, 7.000000, 0.000000, 0.000000, 0.000000, 2.000000, 14.000000, 1.000000, 2.000000, 16.000000, 0.000000, 0.000000, 0.000000, 4.000000, 8.000000, 0.000000, 0.000000, 10.000000, 4.000000, 0.000000, 0.000000, 7.000000, 8.000000, 0.000000, 0.000000, 6.000000, 8.000000, 0.000000, 0.000000, 4.000000, 11.000000, 0.000000, 0.000000, 5.000000, 8.000000, 0.000000, 0.000000, 0.000000, 14.000000, 11.000000, 3.000000, 13.000000, 5.000000, 0.000000, 0.000000, 0.000000, 2.000000, 11.000000, 16.000000, 11.000000, 0.000000, 0.000000 ],
		"SV_01" : [ 0.000000, 0.000000, 1.000000, 9.000000, 15.000000, 11.000000, 0.000000, 0.000000, 0.000000, 0.000000, 11.000000, 16.000000, 8.000000, 14.000000, 6.000000, 0.000000, 0.000000, 2.000000, 16.000000, 10.000000, 0.000000, 9.000000, 9.000000, 0.000000, 0.000000, 1.000000, 16.000000, 4.000000, 0.000000, 8.000000, 8.000000, 0.000000, 0.000000, 4.000000, 16.000000, 4.000000, 0.000000, 8.000000, 8.000000, 0.000000, 0.000000, 1.000000, 16.000000, 5.000000, 1.000000, 11.000000, 3.000000, 0.000000, 0.000000, 0.000000, 12.000000, 12.000000, 10.000000, 10.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 10.000000, 13.000000, 3.000000, 0.000000, 0.000000 ],
		"SV_02" : [ 0.000000, 0.000000, 5.000000, 12.000000, 1.000000, 6.000000, 0.000000, 0.000000, 0.000000, 0.000000, 11.000000, 12.000000, 0.000000, 16.000000, 2.000000, 0.000000, 0.000000, 0.000000, 16.000000, 5.000000, 0.000000, 12.000000, 4.000000, 0.000000, 0.000000, 3.000000, 15.000000, 0.000000, 0.000000, 8.000000, 4.000000, 0.000000, 0.000000, 7.000000, 12.000000, 0.000000, 0.000000, 4.000000, 7.000000, 0.000000, 0.000000, 2.000000, 15.000000, 1.000000, 1.000000, 12.000000, 5.000000, 0.000000, 0.000000, 0.000000, 16.000000, 11.000000, 12.000000, 15.000000, 3.000000, 0.000000, 0.000000, 0.000000, 4.000000, 12.000000, 12.000000, 3.000000, 0.000000, 0.000000 ],
		"SV_03" : [ 0.000000, 0.000000, 11.000000, 10.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 11.000000, 15.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 11.000000, 16.000000, 5.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 13.000000, 16.000000, 11.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 7.000000, 16.000000, 2.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 14.000000, 6.000000, 0.000000, 0.000000, 0.000000, 0.000000, 6.000000, 10.000000, 15.000000, 13.000000, 8.000000, 3.000000, 0.000000, 0.000000, 8.000000, 16.000000, 16.000000, 16.000000, 16.000000, 12.000000 ],
		"SV_04" : [ 0.000000, 0.000000, 0.000000, 15.000000, 11.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 6.000000, 16.000000, 16.000000, 2.000000, 0.000000, 0.000000, 0.000000, 0.000000, 10.000000, 16.000000, 16.000000, 1.000000, 0.000000, 0.000000, 0.000000, 2.000000, 16.000000, 16.000000, 16.000000, 3.000000, 0.000000, 0.000000, 0.000000, 7.000000, 16.000000, 16.000000, 14.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 3.000000, 15.000000, 10.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 15.000000, 7.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 14.000000, 4.000000, 0.000000, 0.000000, 0.000000 ],
		"SV_05" : [ 0.000000, 0.000000, 0.000000, 3.000000, 15.000000, 10.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 11.000000, 10.000000, 16.000000, 4.000000, 0.000000, 0.000000, 0.000000, 0.000000, 12.000000, 1.000000, 15.000000, 6.000000, 0.000000, 0.000000, 0.000000, 0.000000, 3.000000, 4.000000, 15.000000, 4.000000, 0.000000, 0.000000, 0.000000, 0.000000, 6.000000, 15.000000, 6.000000, 0.000000, 0.000000, 0.000000, 4.000000, 15.000000, 16.000000, 9.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 13.000000, 16.000000, 15.000000, 9.000000, 3.000000, 0.000000, 0.000000, 0.000000, 0.000000, 4.000000, 9.000000, 14.000000, 7.000000, 0.000000 ],
		"SV_06" : [ 0.000000, 0.000000, 5.000000, 13.000000, 16.000000, 10.000000, 1.000000, 0.000000, 0.000000, 7.000000, 16.000000, 16.000000, 16.000000, 16.000000, 7.000000, 0.000000, 0.000000, 0.000000, 5.000000, 2.000000, 11.000000, 14.000000, 5.000000, 0.000000, 0.000000, 0.000000, 0.000000, 10.000000, 15.000000, 6.000000, 0.000000, 0.000000, 0.000000, 0.000000, 9.000000, 16.000000, 13.000000, 2.000000, 0.000000, 0.000000, 0.000000, 0.000000, 4.000000, 11.000000, 15.000000, 14.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 2.000000, 13.000000, 16.000000, 1.000000, 0.000000, 0.000000, 0.000000, 5.000000, 14.000000, 15.000000, 9.000000, 0.000000, 0.000000 ],
		"SV_07" : [ 0.000000, 0.000000, 0.000000, 3.000000, 14.000000, 9.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 13.000000, 11.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 9.000000, 14.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 4.000000, 16.000000, 4.000000, 0.000000, 4.000000, 2.000000, 0.000000, 0.000000, 12.000000, 12.000000, 7.000000, 14.000000, 16.000000, 10.000000, 0.000000, 0.000000, 13.000000, 16.000000, 14.000000, 11.000000, 16.000000, 4.000000, 0.000000, 0.000000, 2.000000, 2.000000, 0.000000, 11.000000, 13.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 3.000000, 16.000000, 9.000000, 0.000000, 0.000000 ],
		"SV_08" : [ 0.000000, 0.000000, 2.000000, 13.000000, 16.000000, 13.000000, 4.000000, 0.000000, 0.000000, 0.000000, 9.000000, 11.000000, 9.000000, 16.000000, 7.000000, 0.000000, 0.000000, 2.000000, 15.000000, 2.000000, 2.000000, 15.000000, 2.000000, 0.000000, 0.000000, 3.000000, 3.000000, 0.000000, 8.000000, 13.000000, 2.000000, 0.000000, 0.000000, 0.000000, 1.000000, 13.000000, 16.000000, 16.000000, 10.000000, 0.000000, 0.000000, 0.000000, 0.000000, 11.000000, 13.000000, 5.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 11.000000, 6.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 3.000000, 15.000000, 2.000000, 0.000000, 0.000000, 0.000000 ],
		"SV_09" : [ 0.000000, 0.000000, 2.000000, 13.000000, 16.000000, 14.000000, 1.000000, 0.000000, 0.000000, 0.000000, 11.000000, 12.000000, 7.000000, 16.000000, 3.000000, 0.000000, 0.000000, 0.000000, 9.000000, 3.000000, 2.000000, 16.000000, 3.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 9.000000, 11.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 11.000000, 15.000000, 13.000000, 3.000000, 0.000000, 0.000000, 0.000000, 4.000000, 15.000000, 16.000000, 13.000000, 3.000000, 0.000000, 0.000000, 0.000000, 0.000000, 14.000000, 8.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 5.000000, 15.000000, 4.000000, 0.000000, 0.000000, 0.000000 ],
		"SV_10" : [ 0.000000, 0.000000, 0.000000, 8.000000, 16.000000, 16.000000, 16.000000, 6.000000, 0.000000, 0.000000, 6.000000, 14.000000, 5.000000, 8.000000, 16.000000, 2.000000, 0.000000, 0.000000, 7.000000, 4.000000, 0.000000, 6.000000, 12.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 12.000000, 6.000000, 0.000000, 0.000000, 0.000000, 0.000000, 11.000000, 16.000000, 16.000000, 10.000000, 0.000000, 0.000000, 0.000000, 0.000000, 12.000000, 16.000000, 8.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 6.000000, 16.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 12.000000, 9.000000, 0.000000, 0.000000, 0.000000 ],
		"SV_11" : [ 0.000000, 0.000000, 5.000000, 12.000000, 13.000000, 2.000000, 0.000000, 0.000000, 0.000000, 3.000000, 16.000000, 14.000000, 16.000000, 13.000000, 1.000000, 0.000000, 0.000000, 4.000000, 16.000000, 9.000000, 16.000000, 12.000000, 1.000000, 0.000000, 0.000000, 1.000000, 9.000000, 16.000000, 15.000000, 1.000000, 0.000000, 0.000000, 0.000000, 1.000000, 13.000000, 16.000000, 16.000000, 5.000000, 0.000000, 0.000000, 0.000000, 3.000000, 16.000000, 5.000000, 12.000000, 16.000000, 0.000000, 0.000000, 0.000000, 3.000000, 15.000000, 7.000000, 14.000000, 12.000000, 0.000000, 0.000000, 0.000000, 0.000000, 6.000000, 16.000000, 13.000000, 3.000000, 0.000000, 0.000000 ],
		"SV_12" : [ 0.000000, 0.000000, 1.000000, 8.000000, 15.000000, 11.000000, 3.000000, 0.000000, 0.000000, 0.000000, 11.000000, 12.000000, 9.000000, 14.000000, 11.000000, 0.000000, 0.000000, 2.000000, 14.000000, 0.000000, 0.000000, 13.000000, 6.000000, 0.000000, 0.000000, 7.000000, 15.000000, 8.000000, 12.000000, 9.000000, 0.000000, 0.000000, 0.000000, 0.000000, 6.000000, 13.000000, 16.000000, 8.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 13.000000, 9.000000, 15.000000, 4.000000, 0.000000, 0.000000, 0.000000, 0.000000, 16.000000, 8.000000, 14.000000, 3.000000, 0.000000, 0.000000, 0.000000, 0.000000, 11.000000, 15.000000, 8.000000, 0.000000, 0.000000 ],
		"SV_13" : [ 0.000000, 0.000000, 7.000000, 13.000000, 10.000000, 1.000000, 0.000000, 0.000000, 0.000000, 1.000000, 15.000000, 3.000000, 9.000000, 10.000000, 0.000000, 0.000000, 0.000000, 3.000000, 16.000000, 4.000000, 13.000000, 11.000000, 0.000000, 0.000000, 0.000000, 0.000000, 6.000000, 12.000000, 12.000000, 16.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 12.000000, 5.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 5.000000, 11.000000, 0.000000, 0.000000, 1.000000, 11.000000, 2.000000, 0.000000, 7.000000, 11.000000, 0.000000, 0.000000, 0.000000, 7.000000, 13.000000, 16.000000, 15.000000, 4.000000, 0.000000 ],
		"SV_14" : [ 0.000000, 0.000000, 1.000000, 12.000000, 16.000000, 14.000000, 2.000000, 0.000000, 0.000000, 0.000000, 13.000000, 11.000000, 3.000000, 16.000000, 5.000000, 0.000000, 0.000000, 4.000000, 14.000000, 0.000000, 0.000000, 15.000000, 6.000000, 0.000000, 0.000000, 6.000000, 12.000000, 8.000000, 13.000000, 16.000000, 5.000000, 0.000000, 0.000000, 0.000000, 9.000000, 12.000000, 4.000000, 10.000000, 8.000000, 0.000000, 0.000000, 0.000000, 3.000000, 0.000000, 0.000000, 11.000000, 5.000000, 0.000000, 0.000000, 0.000000, 16.000000, 14.000000, 5.000000, 15.000000, 4.000000, 0.000000, 0.000000, 0.000000, 3.000000, 12.000000, 16.000000, 11.000000, 1.000000, 0.000000 ],
		"SV_15" : [ 0.000000, 1.000000, 11.000000, 13.000000, 10.000000, 1.000000, 0.000000, 0.000000, 0.000000, 8.000000, 12.000000, 3.000000, 13.000000, 10.000000, 0.000000, 0.000000, 0.000000, 8.000000, 11.000000, 2.000000, 11.000000, 16.000000, 1.000000, 0.000000, 0.000000, 1.000000, 15.000000, 16.000000, 16.000000, 16.000000, 2.000000, 0.000000, 0.000000, 0.000000, 2.000000, 8.000000, 3.000000, 9.000000, 6.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 7.000000, 9.000000, 0.000000, 0.000000, 2.000000, 12.000000, 3.000000, 0.000000, 9.000000, 12.000000, 0.000000, 0.000000, 1.000000, 9.000000, 15.000000, 16.000000, 13.000000, 3.000000, 0.000000 ]
	},
	"SupportVectorsCoefs" : {
		"SV_coef_0" : [ 0.864779, 0.897017, 0.344157, -1.049299, -1.056654, -1.918965, -1.769921, -2.000000, -0.565446, -0.837729, -0.729464, -1.331588, -1.584499, -1.556466, -2.000000, -0.137851 ],
		"SV_coef_1" : [ 0.806281, 1.030445, 0.082239, 0.844643, 0.847689, -1.692332, -1.979999, -1.757198, -0.437929, -0.909334, -0.714630, -1.712354, -1.360004, -0.711634, -0.900540, -0.622753 ],
		"SV_coef_2" : [ 0.761090, 0.910589, 0.098242, 0.911999, 1.068000, 1.593829, -1.593829, -1.513337, -0.000000, -1.216958, -0.783042, -0.765573, -1.217577, -0.581116, -1.066599, -0.127991 ],
		"SV_coef_3" : [ 0.679552, 1.302495, 0.017952, 0.828125, 0.929073, 1.513337, 1.386534, -1.386534, -0.000000, -1.464340, -0.535660, -1.051200, -0.948800, -0.303465, -1.090696, -0.605838 ],
		"SV_coef_4" : [ 0.767540, 1.225515, 0.139584, 0.896894, 1.164999, 2.000000, 2.000000, 1.659440, -0.140098, -0.703490, -0.815852, -0.851925, -1.051093, -0.494340, -0.826631, -0.226307 ],
		"SV_coef_5" : [ 1.000950, 1.654531, 0.260606, 1.350514, 1.721844, 1.983150, 2.000000, 1.903018, 0.621689, 1.686212, 0.748548, -1.056449, -2.000000, -0.737203, -1.420015, -0.137233 ],
		"SV_coef_6" : [ 2.000000, 1.336835, 0.357482, 1.214998, 1.019930, 1.775706, 2.000000, 1.547277, 1.015556, 0.709532, 0.569363, 1.297923, 2.000000, -0.385233, -2.000000, -0.912690 ]
	},
	"rho" : [ 0.139644, -0.187094, -0.174842, -0.183538, 0.011127, 0.117591, 0.014785, -0.286770, -0.333437, -0.296782, -0.135723, -0.097196, -0.092496, 0.000000, 0.000000, 0.266332, 0.257698, 0.208784, 0.000000, 0.312841, 0.787253, 0.284708, 0.174168, 0.258041, 0.192798, 0.040436, 0.062918, -0.072480 ],
	"nSV" : [ 3, 2, 1, 1, 1, 3, 2, 3 ],
	"probA" : [ -3.492932, 3.099356, 3.473943, 2.660979, -1.855065, -4.075683, -1.784885, 2.009982, 1.782273, 1.951064, -3.144217, 3.511440, -3.338329, 0.693147, 0.693147, 2.400162, 2.061934, 1.782260, 0.693147, 2.647072, 1.340076, 1.863226, 2.754393, 2.157272, 2.420978, -5.783503, -1.819958, -0.455916 ],
	"probB" : [ 1.097597, -3.295713, -3.645344, -2.934019, -0.041305, 1.300531, 0.080297, -1.316839, -1.093868, -1.260900, -1.022397, 0.260117, -0.988467, -0.000000, -0.000000, 2.734676, 1.421299, 2.191927, -0.000000, 2.975717, 0.648264, 2.212633, 3.107064, 1.475385, 2.764940, 2.453132, 0.168280, 0.127792 ],
	"n_iter" : [ 12, 9, 9, 9, 13, 11, 12, 11, 11, 11, 12, 8, 12, 1, 1, 4, 9, 10, 1, 2, 2, 7, 10, 10, 8, 13, 14, 7 ]
}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/SVC/mllite.SVC_digits_tiny_option_1.json'

RELOADING_MODEL_FROM_JSON_START ('digits_tiny', 'SVC')
MLLITE_MODEL_SET_OPTIONS SVC {"C" : 2}
MLLITE_MODEL_OPTIONS_DEFAULT SVC { "max_iter" : 128 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING SVC { "C" : 2,  "max_iter" : 128  }
MLLITE_MODEL_JSON_AFTER_SETTING SVC None
MLLITE_RELOADING_MODEL mllite_svm_class.SVC_ff4_il8
{
	"metadata" : { "model" : "Vapnik_SVC_RBF", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : {"svm_type" : "c_svc", "kernel" : "rbf", "degree" : 3, "gamma" : 0.000449, "coef0" : 0.000000, "cache_size" : 300, "tol" : 0.001000, "nu" : 0.500000, "epsilon" : 0.000000, "shrinking" : 0, "probability" : 1, "C" : 2.000000, "max_iter" : 128, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 64 },
	"classes" : [ 0, 1, 2, 3, 4, 7, 8, 9 ],
	"svm_model" : {
	"classes" : 8,
	"L" : 16,
	"SupportVectors" : {
		"SV_00" : [ 0.000000, 0.000000, 4.000000, 12.000000, 5.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 12.000000, 14.000000, 15.000000, 7.000000, 0.000000, 0.000000, 0.000000, 2.000000, 14.000000, 1.000000, 2.000000, 16.000000, 0.000000, 0.000000, 0.000000, 4.000000, 8.000000, 0.000000, 0.000000, 10.000000, 4.000000, 0.000000, 0.000000, 7.000000, 8.000000, 0.000000, 0.000000, 6.000000, 8.000000, 0.000000, 0.000000, 4.000000, 11.000000, 0.000000, 0.000000, 5.000000, 8.000000, 0.000000, 0.000000, 0.000000, 14.000000, 11.000000, 3.000000, 13.000000, 5.000000, 0.000000, 0.000000, 0.000000, 2.000000, 11.000000, 16.000000, 11.000000, 0.000000, 0.000000 ],
		"SV_01" : [ 0.000000, 0.000000, 1.000000, 9.000000, 15.000000, 11.000000, 0.000000, 0.000000, 0.000000, 0.000000, 11.000000, 16.000000, 8.000000, 14.000000, 6.000000, 0.000000, 0.000000, 2.000000, 16.000000, 10.000000, 0.000000, 9.000000, 9.000000, 0.000000, 0.000000, 1.000000, 16.000000, 4.000000, 0.000000, 8.000000, 8.000000, 0.000000, 0.000000, 4.000000, 16.000000, 4.000000, 0.000000, 8.000000, 8.000000, 0.000000, 0.000000, 1.000000, 16.000000, 5.000000, 1.000000, 11.000000, 3.000000, 0.000000, 0.000000, 0.000000, 12.000000, 12.000000, 10.000000, 10.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 10.000000, 13.000000, 3.000000, 0.000000, 0.000000 ],
		"SV_02" : [ 0.000000, 0.000000, 5.000000, 12.000000, 1.000000, 6.000000, 0.000000, 0.000000, 0.000000, 0.000000, 11.000000, 12.000000, 0.000000, 16.000000, 2.000000, 0.000000, 0.000000, 0.000000, 16.000000, 5.000000, 0.000000, 12.000000, 4.000000, 0.000000, 0.000000, 3.000000, 15.000000, 0.000000, 0.000000, 8.000000, 4.000000, 0.000000, 0.000000, 7.000000, 12.000000, 0.000000, 0.000000, 4.000000, 7.000000, 0.000000, 0.000000, 2.000000, 15.000000, 1.000000, 1.000000, 12.000000, 5.000000, 0.000000, 0.000000, 0.000000, 16.000000, 11.000000, 12.000000, 15.000000, 3.000000, 0.000000, 0.000000, 0.000000, 4.000000, 12.000000, 12.000000, 3.000000, 0.000000, 0.000000 ],
		"SV_03" : [ 0.000000, 0.000000, 11.000000, 10.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 11.000000, 15.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 11.000000, 16.000000, 5.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 13.000000, 16.000000, 11.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 7.000000, 16.000000, 2.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 14.000000, 6.000000, 0.000000, 0.000000, 0.000000, 0.000000, 6.000000, 10.000000, 15.000000, 13.000000, 8.000000, 3.000000, 0.000000, 0.000000, 8.000000, 16.000000, 16.000000, 16.000000, 16.000000, 12.000000 ],
		"SV_04" : [ 0.000000, 0.000000, 0.000000, 15.000000, 11.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 6.000000, 16.000000, 16.000000, 2.000000, 0.000000, 0.000000, 0.000000, 0.000000, 10.000000, 16.000000, 16.000000, 1.000000, 0.000000, 0.000000, 0.000000, 2.000000, 16.000000, 16.000000, 16.000000, 3.000000, 0.000000, 0.000000, 0.000000, 7.000000, 16.000000, 16.000000, 14.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 3.000000, 15.000000, 10.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 15.000000, 7.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 14.000000, 4.000000, 0.000000, 0.000000, 0.000000 ],
		"SV_05" : [ 0.000000, 0.000000, 0.000000, 3.000000, 15.000000, 10.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 11.000000, 10.000000, 16.000000, 4.000000, 0.000000, 0.000000, 0.000000, 0.000000, 12.000000, 1.000000, 15.000000, 6.000000, 0.000000, 0.000000, 0.000000, 0.000000, 3.000000, 4.000000, 15.000000, 4.000000, 0.000000, 0.000000, 0.000000, 0.000000, 6.000000, 15.000000, 6.000000, 0.000000, 0.000000, 0.000000, 4.000000, 15.000000, 16.000000, 9.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 13.000000, 16.000000, 15.000000, 9.000000, 3.000000, 0.000000, 0.000000, 0.000000, 0.000000, 4.000000, 9.000000, 14.000000, 7.000000, 0.000000 ],
		"SV_06" : [ 0.000000, 0.000000, 5.000000, 13.000000, 16.000000, 10.000000, 1.000000, 0.000000, 0.000000, 7.000000, 16.000000, 16.000000, 16.000000, 16.000000, 7.000000, 0.000000, 0.000000, 0.000000, 5.000000, 2.000000, 11.000000, 14.000000, 5.000000, 0.000000, 0.000000, 0.000000, 0.000000, 10.000000, 15.000000, 6.000000, 0.000000, 0.000000, 0.000000, 0.000000, 9.000000, 16.000000, 13.000000, 2.000000, 0.000000, 0.000000, 0.000000, 0.000000, 4.000000, 11.000000, 15.000000, 14.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 2.000000, 13.000000, 16.000000, 1.000000, 0.000000, 0.000000, 0.000000, 5.000000, 14.000000, 15.000000, 9.000000, 0.000000, 0.000000 ],
		"SV_07" : [ 0.000000, 0.000000, 0.000000, 3.000000, 14.000000, 9.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 13.000000, 11.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 9.000000, 14.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 4.000000, 16.000000, 4.000000, 0.000000, 4.000000, 2.000000, 0.000000, 0.000000, 12.000000, 12.000000, 7.000000, 14.000000, 16.000000, 10.000000, 0.000000, 0.000000, 13.000000, 16.000000, 14.000000, 11.000000, 16.000000, 4.000000, 0.000000, 0.000000, 2.000000, 2.000000, 0.000000, 11.000000, 13.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 3.000000, 16.000000, 9.000000, 0.000000, 0.000000 ],
		"SV_08" : [ 0.000000, 0.000000, 2.000000, 13.000000, 16.000000, 13.000000, 4.000000, 0.000000, 0.000000, 0.000000, 9.000000, 11.000000, 9.000000, 16.000000, 7.000000, 0.000000, 0.000000, 2.000000, 15.000000, 2.000000, 2.000000, 15.000000, 2.000000, 0.000000, 0.000000, 3.000000, 3.000000, 0.000000, 8.000000, 13.000000, 2.000000, 0.000000, 0.000000, 0.000000, 1.000000, 13.000000, 16.000000, 16.000000, 10.000000, 0.000000, 0.000000, 0.000000, 0.000000, 11.000000, 13.000000, 5.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 11.000000, 6.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 3.000000, 15.000000, 2.000000, 0.000000, 0.000000, 0.000000 ],
		"SV_09" : [ 0.000000, 0.000000, 2.000000, 13.000000, 16.000000, 14.000000, 1.000000, 0.000000, 0.000000, 0.000000, 11.000000, 12.000000, 7.000000, 16.000000, 3.000000, 0.000000, 0.000000, 0.000000, 9.000000, 3.000000, 2.000000, 16.000000, 3.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 9.000000, 11.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 11.000000, 15.000000, 13.000000, 3.000000, 0.000000, 0.000000, 0.000000, 4.000000, 15.000000, 16.000000, 13.000000, 3.000000, 0.000000, 0.000000, 0.000000, 0.000000, 14.000000, 8.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 5.000000, 15.000000, 4.000000, 0.000000, 0.000000, 0.000000 ],
		"SV_10" : [ 0.000000, 0.000000, 0.000000, 8.000000, 16.000000, 16.000000, 16.000000, 6.000000, 0.000000, 0.000000, 6.000000, 14.000000, 5.000000, 8.000000, 16.000000, 2.000000, 0.000000, 0.000000, 7.000000, 4.000000, 0.000000, 6.000000, 12.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 12.000000, 6.000000, 0.000000, 0.000000, 0.000000, 0.000000, 11.000000, 16.000000, 16.000000, 10.000000, 0.000000, 0.000000, 0.000000, 0.000000, 12.000000, 16.000000, 8.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 6.000000, 16.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 12.000000, 9.000000, 0.000000, 0.000000, 0.000000 ],
		"SV_11" : [ 0.000000, 0.000000, 5.000000, 12.000000, 13.000000, 2.000000, 0.000000, 0.000000, 0.000000, 3.000000, 16.000000, 14.000000, 16.000000, 13.000000, 1.000000, 0.000000, 0.000000, 4.000000, 16.000000, 9.000000, 16.000000, 12.000000, 1.000000, 0.000000, 0.000000, 1.000000, 9.000000, 16.000000, 15.000000, 1.000000, 0.000000, 0.000000, 0.000000, 1.000000, 13.000000, 16.000000, 16.000000, 5.000000, 0.000000, 0.000000, 0.000000, 3.000000, 16.000000, 5.000000, 12.000000, 16.000000, 0.000000, 0.000000, 0.000000, 3.000000, 15.000000, 7.000000, 14.000000, 12.000000, 0.000000, 0.000000, 0.000000, 0.000000, 6.000000, 16.000000, 13.000000, 3.000000, 0.000000, 0.000000 ],
		"SV_12" : [ 0.000000, 0.000000, 1.000000, 8.000000, 15.000000, 11.000000, 3.000000, 0.000000, 0.000000, 0.000000, 11.000000, 12.000000, 9.000000, 14.000000, 11.000000, 0.000000, 0.000000, 2.000000, 14.000000, 0.000000, 0.000000, 13.000000, 6.000000, 0.000000, 0.000000, 7.000000, 15.000000, 8.000000, 12.000000, 9.000000, 0.000000, 0.000000, 0.000000, 0.000000, 6.000000, 13.000000, 16.000000, 8.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 13.000000, 9.000000, 15.000000, 4.000000, 0.000000, 0.000000, 0.000000, 0.000000, 16.000000, 8.000000, 14.000000, 3.000000, 0.000000, 0.000000, 0.000000, 0.000000, 11.000000, 15.000000, 8.000000, 0.000000, 0.000000 ],
		"SV_13" : [ 0.000000, 0.000000, 7.000000, 13.000000, 10.000000, 1.000000, 0.000000, 0.000000, 0.000000, 1.000000, 15.000000, 3.000000, 9.000000, 10.000000, 0.000000, 0.000000, 0.000000, 3.000000, 16.000000, 4.000000, 13.000000, 11.000000, 0.000000, 0.000000, 0.000000, 0.000000, 6.000000, 12.000000, 12.000000, 16.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 12.000000, 5.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 5.000000, 11.000000, 0.000000, 0.000000, 1.000000, 11.000000, 2.000000, 0.000000, 7.000000, 11.000000, 0.000000, 0.000000, 0.000000, 7.000000, 13.000000, 16.000000, 15.000000, 4.000000, 0.000000 ],
		"SV_14" : [ 0.000000, 0.000000, 1.000000, 12.000000, 16.000000, 14.000000, 2.000000, 0.000000, 0.000000, 0.000000, 13.000000, 11.000000, 3.000000, 16.000000, 5.000000, 0.000000, 0.000000, 4.000000, 14.000000, 0.000000, 0.000000, 15.000000, 6.000000, 0.000000, 0.000000, 6.000000, 12.000000, 8.000000, 13.000000, 16.000000, 5.000000, 0.000000, 0.000000, 0.000000, 9.000000, 12.000000, 4.000000, 10.000000, 8.000000, 0.000000, 0.000000, 0.000000, 3.000000, 0.000000, 0.000000, 11.000000, 5.000000, 0.000000, 0.000000, 0.000000, 16.000000, 14.000000, 5.000000, 15.000000, 4.000000, 0.000000, 0.000000, 0.000000, 3.000000, 12.000000, 16.000000, 11.000000, 1.000000, 0.000000 ],
		"SV_15" : [ 0.000000, 1.000000, 11.000000, 13.000000, 10.000000, 1.000000, 0.000000, 0.000000, 0.000000, 8.000000, 12.000000, 3.000000, 13.000000, 10.000000, 0.000000, 0.000000, 0.000000, 8.000000, 11.000000, 2.000000, 11.000000, 16.000000, 1.000000, 0.000000, 0.000000, 1.000000, 15.000000, 16.000000, 16.000000, 16.000000, 2.000000, 0.000000, 0.000000, 0.000000, 2.000000, 8.000000, 3.000000, 9.000000, 6.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 7.000000, 9.000000, 0.000000, 0.000000, 2.000000, 12.000000, 3.000000, 0.000000, 9.000000, 12.000000, 0.000000, 0.000000, 1.000000, 9.000000, 15.000000, 16.000000, 13.000000, 3.000000, 0.000000 ]
	},
	"SupportVectorsCoefs" : {
		"SV_coef_0" : [ 0.864779, 0.897017, 0.344157, -1.049299, -1.056654, -1.918965, -1.769921, -2.000000, -0.565446, -0.837729, -0.729464, -1.331588, -1.584499, -1.556466, -2.000000, -0.137851 ],
		"SV_coef_1" : [ 0.806281, 1.030445, 0.082239, 0.844643, 0.847689, -1.692332, -1.979999, -1.757198, -0.437929, -0.909334, -0.714630, -1.712354, -1.360004, -0.711634, -0.900540, -0.622753 ],
		"SV_coef_2" : [ 0.761090, 0.910589, 0.098242, 0.911999, 1.068000, 1.593829, -1.593829, -1.513337, -0.000000, -1.216958, -0.783042, -0.765573, -1.217577, -0.581116, -1.066599, -0.127991 ],
		"SV_coef_3" : [ 0.679552, 1.302495, 0.017952, 0.828125, 0.929073, 1.513337, 1.386534, -1.386534, -0.000000, -1.464340, -0.535660, -1.051200, -0.948800, -0.303465, -1.090696, -0.605838 ],
		"SV_coef_4" : [ 0.767540, 1.225515, 0.139584, 0.896894, 1.164999, 2.000000, 2.000000, 1.659440, -0.140098, -0.703490, -0.815852, -0.851925, -1.051093, -0.494340, -0.826631, -0.226307 ],
		"SV_coef_5" : [ 1.000950, 1.654531, 0.260606, 1.350514, 1.721844, 1.983150, 2.000000, 1.903018, 0.621689, 1.686212, 0.748548, -1.056449, -2.000000, -0.737203, -1.420015, -0.137233 ],
		"SV_coef_6" : [ 2.000000, 1.336835, 0.357482, 1.214998, 1.019930, 1.775706, 2.000000, 1.547277, 1.015556, 0.709532, 0.569363, 1.297923, 2.000000, -0.385233, -2.000000, -0.912690 ]
	},
	"rho" : [ 0.139644, -0.187094, -0.174842, -0.183538, 0.011127, 0.117591, 0.014785, -0.286770, -0.333437, -0.296782, -0.135723, -0.097196, -0.092496, 0.000000, 0.000000, 0.266332, 0.257698, 0.208784, 0.000000, 0.312841, 0.787253, 0.284708, 0.174168, 0.258041, 0.192798, 0.040436, 0.062918, -0.072480 ],
	"nSV" : [ 3, 2, 1, 1, 1, 3, 2, 3 ],
	"probA" : [ -3.492932, 3.099356, 3.473943, 2.660979, -1.855065, -4.075683, -1.784885, 2.009982, 1.782273, 1.951064, -3.144217, 3.511440, -3.338329, 0.693147, 0.693147, 2.400162, 2.061934, 1.782260, 0.693147, 2.647072, 1.340076, 1.863226, 2.754393, 2.157272, 2.420978, -5.783503, -1.819958, -0.455916 ],
	"probB" : [ 1.097597, -3.295713, -3.645344, -2.934019, -0.041305, 1.300531, 0.080297, -1.316839, -1.093868, -1.260900, -1.022397, 0.260117, -0.988467, -0.000000, -0.000000, 2.734676, 1.421299, 2.191927, -0.000000, 2.975717, 0.648264, 2.212633, 3.107064, 1.475385, 2.764940, 2.453132, 0.168280, 0.127792 ],
	"n_iter" : [ 12, 9, 9, 9, 13, 11, 12, 11, 11, 11, 12, 8, 12, 1, 1, 4, 9, 10, 1, 2, 2, 7, 10, 10, 8, 13, 14, 7 ]
}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1, 2, 3, 4, 7, 8, 9 ],
	"dataset" : 	{
		"dataset_features" : 64,
		"dataset_rows" : 16
	},
	"metadata" :  { "model" : "Vapnik_SVC_RBF", "signature" : "ff4_il8", "version" : "2024-W14" },
	"options" :  { "C" : 2.0, "cache_size" : 300, "coef0" : 0.0, "degree" : 3, "epsilon" : 0.0, "gamma" : 0.000449, "kernel" : "rbf", "max_iter" : 128, "nu" : 0.5, "probability" : 1, "random_state" : 1789, "shrinking" : 0, "svm_type" : "c_svc", "tol" : 0.001 },
	"svm_model" : 	{
		"L" : 16,
		"SupportVectors" : 	{
			"SV_00" : [ 0.0, 0.0, 4.0, 12.0, 5.0, 0.0, 0.0, 0.0, 0.0, 0.0, 12.0, 14.0, 15.0, 7.0, 0.0, 0.0, 0.0, 2.0, 14.0, 1.0, 2.0, 16.0, 0.0, 0.0, 0.0, 4.0, 8.0, 0.0, 0.0, 10.0, 4.0, 0.0, 0.0, 7.0, 8.0, 0.0, 0.0, 6.0, 8.0, 0.0, 0.0, 4.0, 11.0, 0.0, 0.0, 5.0, 8.0, 0.0, 0.0, 0.0, 14.0, 11.0, 3.0, 13.0, 5.0, 0.0, 0.0, 0.0, 2.0, 11.0, 16.0, 11.0, 0.0, 0.0 ],
			"SV_01" : [ 0.0, 0.0, 1.0, 9.0, 15.0, 11.0, 0.0, 0.0, 0.0, 0.0, 11.0, 16.0, 8.0, 14.0, 6.0, 0.0, 0.0, 2.0, 16.0, 10.0, 0.0, 9.0, 9.0, 0.0, 0.0, 1.0, 16.0, 4.0, 0.0, 8.0, 8.0, 0.0, 0.0, 4.0, 16.0, 4.0, 0.0, 8.0, 8.0, 0.0, 0.0, 1.0, 16.0, 5.0, 1.0, 11.0, 3.0, 0.0, 0.0, 0.0, 12.0, 12.0, 10.0, 10.0, 0.0, 0.0, 0.0, 0.0, 1.0, 10.0, 13.0, 3.0, 0.0, 0.0 ],
			"SV_02" : [ 0.0, 0.0, 5.0, 12.0, 1.0, 6.0, 0.0, 0.0, 0.0, 0.0, 11.0, 12.0, 0.0, 16.0, 2.0, 0.0, 0.0, 0.0, 16.0, 5.0, 0.0, 12.0, 4.0, 0.0, 0.0, 3.0, 15.0, 0.0, 0.0, 8.0, 4.0, 0.0, 0.0, 7.0, 12.0, 0.0, 0.0, 4.0, 7.0, 0.0, 0.0, 2.0, 15.0, 1.0, 1.0, 12.0, 5.0, 0.0, 0.0, 0.0, 16.0, 11.0, 12.0, 15.0, 3.0, 0.0, 0.0, 0.0, 4.0, 12.0, 12.0, 3.0, 0.0, 0.0 ],
			"SV_03" : [ 0.0, 0.0, 11.0, 10.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 11.0, 15.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 11.0, 16.0, 5.0, 0.0, 0.0, 0.0, 0.0, 0.0, 13.0, 16.0, 11.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 7.0, 16.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 14.0, 6.0, 0.0, 0.0, 0.0, 0.0, 6.0, 10.0, 15.0, 13.0, 8.0, 3.0, 0.0, 0.0, 8.0, 16.0, 16.0, 16.0, 16.0, 12.0 ],
			"SV_04" : [ 0.0, 0.0, 0.0, 15.0, 11.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.0, 16.0, 16.0, 2.0, 0.0, 0.0, 0.0, 0.0, 10.0, 16.0, 16.0, 1.0, 0.0, 0.0, 0.0, 2.0, 16.0, 16.0, 16.0, 3.0, 0.0, 0.0, 0.0, 7.0, 16.0, 16.0, 14.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.0, 15.0, 10.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 15.0, 7.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 14.0, 4.0, 0.0, 0.0, 0.0 ],
			"SV_05" : [ 0.0, 0.0, 0.0, 3.0, 15.0, 10.0, 1.0, 0.0, 0.0, 0.0, 0.0, 11.0, 10.0, 16.0, 4.0, 0.0, 0.0, 0.0, 0.0, 12.0, 1.0, 15.0, 6.0, 0.0, 0.0, 0.0, 0.0, 3.0, 4.0, 15.0, 4.0, 0.0, 0.0, 0.0, 0.0, 6.0, 15.0, 6.0, 0.0, 0.0, 0.0, 4.0, 15.0, 16.0, 9.0, 0.0, 0.0, 0.0, 0.0, 0.0, 13.0, 16.0, 15.0, 9.0, 3.0, 0.0, 0.0, 0.0, 0.0, 4.0, 9.0, 14.0, 7.0, 0.0 ],
			"SV_06" : [ 0.0, 0.0, 5.0, 13.0, 16.0, 10.0, 1.0, 0.0, 0.0, 7.0, 16.0, 16.0, 16.0, 16.0, 7.0, 0.0, 0.0, 0.0, 5.0, 2.0, 11.0, 14.0, 5.0, 0.0, 0.0, 0.0, 0.0, 10.0, 15.0, 6.0, 0.0, 0.0, 0.0, 0.0, 9.0, 16.0, 13.0, 2.0, 0.0, 0.0, 0.0, 0.0, 4.0, 11.0, 15.0, 14.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 13.0, 16.0, 1.0, 0.0, 0.0, 0.0, 5.0, 14.0, 15.0, 9.0, 0.0, 0.0 ],
			"SV_07" : [ 0.0, 0.0, 0.0, 3.0, 14.0, 9.0, 0.0, 0.0, 0.0, 0.0, 0.0, 13.0, 11.0, 1.0, 0.0, 0.0, 0.0, 0.0, 9.0, 14.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.0, 16.0, 4.0, 0.0, 4.0, 2.0, 0.0, 0.0, 12.0, 12.0, 7.0, 14.0, 16.0, 10.0, 0.0, 0.0, 13.0, 16.0, 14.0, 11.0, 16.0, 4.0, 0.0, 0.0, 2.0, 2.0, 0.0, 11.0, 13.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.0, 16.0, 9.0, 0.0, 0.0 ],
			"SV_08" : [ 0.0, 0.0, 2.0, 13.0, 16.0, 13.0, 4.0, 0.0, 0.0, 0.0, 9.0, 11.0, 9.0, 16.0, 7.0, 0.0, 0.0, 2.0, 15.0, 2.0, 2.0, 15.0, 2.0, 0.0, 0.0, 3.0, 3.0, 0.0, 8.0, 13.0, 2.0, 0.0, 0.0, 0.0, 1.0, 13.0, 16.0, 16.0, 10.0, 0.0, 0.0, 0.0, 0.0, 11.0, 13.0, 5.0, 1.0, 0.0, 0.0, 0.0, 0.0, 11.0, 6.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.0, 15.0, 2.0, 0.0, 0.0, 0.0 ],
			"SV_09" : [ 0.0, 0.0, 2.0, 13.0, 16.0, 14.0, 1.0, 0.0, 0.0, 0.0, 11.0, 12.0, 7.0, 16.0, 3.0, 0.0, 0.0, 0.0, 9.0, 3.0, 2.0, 16.0, 3.0, 0.0, 0.0, 0.0, 0.0, 0.0, 9.0, 11.0, 0.0, 0.0, 0.0, 0.0, 2.0, 11.0, 15.0, 13.0, 3.0, 0.0, 0.0, 0.0, 4.0, 15.0, 16.0, 13.0, 3.0, 0.0, 0.0, 0.0, 0.0, 14.0, 8.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 15.0, 4.0, 0.0, 0.0, 0.0 ],
			"SV_10" : [ 0.0, 0.0, 0.0, 8.0, 16.0, 16.0, 16.0, 6.0, 0.0, 0.0, 6.0, 14.0, 5.0, 8.0, 16.0, 2.0, 0.0, 0.0, 7.0, 4.0, 0.0, 6.0, 12.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 12.0, 6.0, 0.0, 0.0, 0.0, 0.0, 11.0, 16.0, 16.0, 10.0, 0.0, 0.0, 0.0, 0.0, 12.0, 16.0, 8.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.0, 16.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 12.0, 9.0, 0.0, 0.0, 0.0 ],
			"SV_11" : [ 0.0, 0.0, 5.0, 12.0, 13.0, 2.0, 0.0, 0.0, 0.0, 3.0, 16.0, 14.0, 16.0, 13.0, 1.0, 0.0, 0.0, 4.0, 16.0, 9.0, 16.0, 12.0, 1.0, 0.0, 0.0, 1.0, 9.0, 16.0, 15.0, 1.0, 0.0, 0.0, 0.0, 1.0, 13.0, 16.0, 16.0, 5.0, 0.0, 0.0, 0.0, 3.0, 16.0, 5.0, 12.0, 16.0, 0.0, 0.0, 0.0, 3.0, 15.0, 7.0, 14.0, 12.0, 0.0, 0.0, 0.0, 0.0, 6.0, 16.0, 13.0, 3.0, 0.0, 0.0 ],
			"SV_12" : [ 0.0, 0.0, 1.0, 8.0, 15.0, 11.0, 3.0, 0.0, 0.0, 0.0, 11.0, 12.0, 9.0, 14.0, 11.0, 0.0, 0.0, 2.0, 14.0, 0.0, 0.0, 13.0, 6.0, 0.0, 0.0, 7.0, 15.0, 8.0, 12.0, 9.0, 0.0, 0.0, 0.0, 0.0, 6.0, 13.0, 16.0, 8.0, 0.0, 0.0, 0.0, 0.0, 0.0, 13.0, 9.0, 15.0, 4.0, 0.0, 0.0, 0.0, 0.0, 16.0, 8.0, 14.0, 3.0, 0.0, 0.0, 0.0, 0.0, 11.0, 15.0, 8.0, 0.0, 0.0 ],
			"SV_13" : [ 0.0, 0.0, 7.0, 13.0, 10.0, 1.0, 0.0, 0.0, 0.0, 1.0, 15.0, 3.0, 9.0, 10.0, 0.0, 0.0, 0.0, 3.0, 16.0, 4.0, 13.0, 11.0, 0.0, 0.0, 0.0, 0.0, 6.0, 12.0, 12.0, 16.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 12.0, 5.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 11.0, 0.0, 0.0, 1.0, 11.0, 2.0, 0.0, 7.0, 11.0, 0.0, 0.0, 0.0, 7.0, 13.0, 16.0, 15.0, 4.0, 0.0 ],
			"SV_14" : [ 0.0, 0.0, 1.0, 12.0, 16.0, 14.0, 2.0, 0.0, 0.0, 0.0, 13.0, 11.0, 3.0, 16.0, 5.0, 0.0, 0.0, 4.0, 14.0, 0.0, 0.0, 15.0, 6.0, 0.0, 0.0, 6.0, 12.0, 8.0, 13.0, 16.0, 5.0, 0.0, 0.0, 0.0, 9.0, 12.0, 4.0, 10.0, 8.0, 0.0, 0.0, 0.0, 3.0, 0.0, 0.0, 11.0, 5.0, 0.0, 0.0, 0.0, 16.0, 14.0, 5.0, 15.0, 4.0, 0.0, 0.0, 0.0, 3.0, 12.0, 16.0, 11.0, 1.0, 0.0 ],
			"SV_15" : [ 0.0, 1.0, 11.0, 13.0, 10.0, 1.0, 0.0, 0.0, 0.0, 8.0, 12.0, 3.0, 13.0, 10.0, 0.0, 0.0, 0.0, 8.0, 11.0, 2.0, 11.0, 16.0, 1.0, 0.0, 0.0, 1.0, 15.0, 16.0, 16.0, 16.0, 2.0, 0.0, 0.0, 0.0, 2.0, 8.0, 3.0, 9.0, 6.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 7.0, 9.0, 0.0, 0.0, 2.0, 12.0, 3.0, 0.0, 9.0, 12.0, 0.0, 0.0, 1.0, 9.0, 15.0, 16.0, 13.0, 3.0, 0.0 ]
		},
		"SupportVectorsCoefs" : 	{
			"SV_coef_0" : [ 0.864779, 0.897017, 0.344157, -1.049299, -1.056654, -1.918965, -1.769921, -2.0, -0.565446, -0.837729, -0.729464, -1.331588, -1.584499, -1.556466, -2.0, -0.137851 ],
			"SV_coef_1" : [ 0.806281, 1.030445, 0.082239, 0.844643, 0.847689, -1.692332, -1.979999, -1.757198, -0.437929, -0.909334, -0.71463, -1.712354, -1.360004, -0.711634, -0.90054, -0.622753 ],
			"SV_coef_2" : [ 0.76109, 0.910589, 0.098242, 0.911999, 1.068, 1.593829, -1.593829, -1.513337, -0.0, -1.216958, -0.783042, -0.765573, -1.217577, -0.581116, -1.066599, -0.127991 ],
			"SV_coef_3" : [ 0.679552, 1.302495, 0.017952, 0.828125, 0.929073, 1.513337, 1.386534, -1.386534, -0.0, -1.46434, -0.53566, -1.0512, -0.9488, -0.303465, -1.090696, -0.605838 ],
			"SV_coef_4" : [ 0.76754, 1.225515, 0.139584, 0.896894, 1.164999, 2.0, 2.0, 1.65944, -0.140098, -0.70349, -0.815852, -0.851925, -1.051093, -0.49434, -0.826631, -0.226307 ],
			"SV_coef_5" : [ 1.00095, 1.654531, 0.260606, 1.350514, 1.721844, 1.98315, 2.0, 1.903018, 0.621689, 1.686212, 0.748548, -1.056449, -2.0, -0.737203, -1.420015, -0.137233 ],
			"SV_coef_6" : [ 2.0, 1.336835, 0.357482, 1.214998, 1.01993, 1.775706, 2.0, 1.547277, 1.015556, 0.709532, 0.569363, 1.297923, 2.0, -0.385233, -2.0, -0.91269 ]
		},
		"classes" : 8,
		"nSV" : [ 3, 2, 1, 1, 1, 3, 2, 3 ],
		"n_iter" : [ 12, 9, 9, 9, 13, 11, 12, 11, 11, 11, 12, 8, 12, 1, 1, 4, 9, 10, 1, 2, 2, 7, 10, 10, 8, 13, 14, 7 ],
		"probA" : [ -3.492932, 3.099356, 3.473943, 2.660979, -1.855065, -4.075683, -1.784885, 2.009982, 1.782273, 1.951064, -3.144217, 3.51144, -3.338329, 0.693147, 0.693147, 2.400162, 2.061934, 1.78226, 0.693147, 2.647072, 1.340076, 1.863226, 2.754393, 2.157272, 2.420978, -5.783503, -1.819958, -0.455916 ],
		"probB" : [ 1.097597, -3.295713, -3.645344, -2.934019, -0.041305, 1.300531, 0.080297, -1.316839, -1.093868, -1.2609, -1.022397, 0.260117, -0.988467, -0.0, -0.0, 2.734676, 1.421299, 2.191927, -0.0, 2.975717, 0.648264, 2.212633, 3.107064, 1.475385, 2.76494, 2.453132, 0.16828, 0.127792 ],
		"rho" : [ 0.139644, -0.187094, -0.174842, -0.183538, 0.011127, 0.117591, 0.014785, -0.28677, -0.333437, -0.296782, -0.135723, -0.097196, -0.092496, 0.0, 0.0, 0.266332, 0.257698, 0.208784, 0.0, 0.312841, 0.787253, 0.284708, 0.174168, 0.258041, 0.192798, 0.040436, 0.062918, -0.07248 ]
	}
}
BEAUTIFIED_JSON_END
RELOADING_MODEL_FROM_JSON_END ('digits_tiny', 'SVC')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0.0824 0.133  0.0878 0.1238 0.1474 0.1759 0.1496 0.1002]
 [0.0449 0.0439 0.115  0.07   0.0683 0.0971 0.1777 0.3831]
 [0.0545 0.0711 0.1667 0.0939 0.0959 0.2176 0.2163 0.0841]
 [0.0516 0.0929 0.1044 0.0774 0.1055 0.0767 0.1049 0.3864]
 [0.0738 0.0853 0.1541 0.1185 0.1018 0.1666 0.1113 0.1887]
 [0.0665 0.0889 0.2146 0.1098 0.1298 0.1482 0.0871 0.1551]
 [0.0487 0.0582 0.1856 0.1185 0.135  0.1256 0.2077 0.1206]
 [0.03   0.0858 0.0762 0.0692 0.0447 0.1298 0.1025 0.4618]
 [0.0529 0.0445 0.1669 0.1049 0.0858 0.0567 0.1056 0.3828]
 [0.0496 0.0604 0.1786 0.115  0.1373 0.1287 0.2113 0.119 ]
 [0.0865 0.0757 0.1614 0.1323 0.0604 0.1619 0.1611 0.1608]
 [0.0684 0.1419 0.1296 0.0899 0.1286 0.1502 0.1413 0.1501]
 [0.0455 0.0952 0.1084 0.0762 0.1085 0.0751 0.1032 0.3878]
 [0.048  0.0414 0.1497 0.1855 0.1556 0.1215 0.1136 0.1848]
 [0.0355 0.0745 0.0853 0.0687 0.0424 0.099  0.1831 0.4117]
 [0.0354 0.0744 0.0857 0.0735 0.0443 0.1518 0.1094 0.4256]]
(16, 8)
(16, 8) float32
MODEL_PERFS {'class_name': 'mllite.SVC', 'model_name': 'SVC', 'options': '{"C" : 2}', 'dataset': 'digits_tiny', 'size': 16, 'accuracy': 0.9375, 'auc': 0.28566849816849815}
WRITING_PERF_CODE 'logs/auto_tests/classification/SVC/mllite.SVC_digits_tiny_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.SVC', 'model_name': 'SVC', 'options': '{"C" : 2}', 'dataset': 'digits_tiny', 'training_time_in_sec': 0.04, 'prediction_time_in_sec': 0.0}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 0 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 1 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 2 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 3 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 4 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 5 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 6 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 7 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 8 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 9 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 10 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 11 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 12 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 13 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 14 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 15 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 16 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 17 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 18 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 19 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 20 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 21 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 22 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 23 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 24 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 25 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 26 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 27 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 28 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 29 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 30 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 31 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 32 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 33 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 34 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 35 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 36 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 37 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 38 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 39 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 40 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 41 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 42 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 43 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 44 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 45 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 46 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 47 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 48 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 49 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 50 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 51 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 52 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 53 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 54 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 55 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 56 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 57 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 58 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 59 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 60 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 61 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 62 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 63 64
{
   "Contributions" : {
      "X_0" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_1" : [ 0.000000, -0.000000, -0.000000, -0.000000, -0.000000, 0.000001, -0.000000, 0.000000 ],
      "X_2" : [ -0.000129, -0.000179, 0.000423, 0.000156, -0.000044, 0.000052, -0.000042, -0.000237 ],
      "X_3" : [ -0.000260, -0.001389, 0.000500, -0.000157, 0.000025, 0.000762, 0.000029, 0.000490 ],
      "X_4" : [ -0.000037, -0.002181, 0.000187, 0.000536, 0.000546, -0.000618, -0.001120, 0.002686 ],
      "X_5" : [ 0.000024, -0.001308, 0.001076, -0.000469, 0.000200, -0.000211, -0.000817, 0.001505 ],
      "X_6" : [ -0.000151, -0.001159, -0.000127, 0.000239, 0.000154, 0.000678, -0.000125, 0.000491 ],
      "X_7" : [ -0.000005, -0.000569, 0.000036, 0.000166, 0.000035, 0.000560, -0.000239, 0.000015 ],
      "X_8" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_9" : [ -0.000021, -0.000371, 0.000105, 0.000289, -0.000067, 0.000241, 0.000291, -0.000467 ],
      "X_10" : [ 0.000246, 0.000428, -0.000447, 0.000647, -0.000110, 0.001330, -0.002796, 0.000702 ],
      "X_11" : [ 0.000328, -0.000445, 0.000442, 0.000453, 0.000504, 0.000959, 0.000609, -0.002850 ],
      "X_12" : [ -0.000020, 0.000437, 0.000316, 0.000290, 0.000431, -0.000865, 0.000702, -0.001290 ],
      "X_13" : [ -0.000048, -0.001907, 0.000342, -0.000139, 0.000213, -0.001079, -0.000442, 0.003061 ],
      "X_14" : [ -0.000458, 0.001818, -0.000107, -0.000436, -0.000069, 0.000119, -0.000070, -0.000797 ],
      "X_15" : [ -0.000013, -0.000108, -0.000004, 0.000056, -0.000002, -0.000077, 0.000167, -0.000019 ],
      "X_16" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_17" : [ -0.000085, 0.000073, 0.000011, 0.000024, -0.000000, 0.000822, -0.000376, -0.000469 ],
      "X_18" : [ -0.000222, -0.000211, -0.001033, -0.000149, -0.000245, -0.000450, 0.001701, 0.000608 ],
      "X_19" : [ -0.000240, -0.000841, 0.000446, 0.000623, 0.000029, -0.001385, -0.000319, 0.001688 ],
      "X_20" : [ -0.000675, 0.000195, 0.000404, 0.000019, 0.000047, 0.001169, -0.002042, 0.000884 ],
      "X_21" : [ -0.000342, -0.004527, 0.002226, 0.000852, 0.001104, -0.000738, 0.001216, 0.000211 ],
      "X_22" : [ -0.000131, 0.001635, -0.000287, -0.000288, -0.000116, -0.000627, -0.000368, 0.000181 ],
      "X_23" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_24" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_25" : [ -0.000080, 0.000875, -0.000071, -0.000053, -0.000159, 0.000066, -0.000475, -0.000103 ],
      "X_26" : [ -0.000009, -0.006180, -0.000187, 0.000945, 0.001188, -0.000401, 0.002834, 0.001810 ],
      "X_27" : [ -0.001129, -0.002963, 0.000018, 0.000212, -0.000187, 0.002948, -0.002687, 0.003787 ],
      "X_28" : [ -0.002192, -0.001388, -0.001659, -0.000290, -0.000567, 0.002270, -0.006402, 0.010227 ],
      "X_29" : [ 0.000231, -0.000047, 0.002040, 0.000577, 0.000434, -0.000779, -0.000930, -0.001526 ],
      "X_30" : [ 0.000025, 0.000527, 0.000092, 0.000060, 0.000288, 0.000473, -0.000621, -0.000844 ],
      "X_31" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_32" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_33" : [ -0.000152, -0.000029, -0.000106, -0.000191, -0.000246, 0.001025, -0.000904, 0.000602 ],
      "X_34" : [ -0.000633, 0.001073, -0.000629, 0.000677, -0.000392, 0.000499, -0.002716, 0.002122 ],
      "X_35" : [ -0.000434, -0.001593, -0.000265, 0.000123, 0.000023, 0.000111, -0.002308, 0.004342 ],
      "X_36" : [ -0.001270, -0.000680, 0.000091, 0.000298, -0.000228, 0.004666, 0.001410, -0.004287 ],
      "X_37" : [ 0.000111, 0.000106, 0.001029, 0.001315, 0.001110, -0.003685, 0.001664, -0.001650 ],
      "X_38" : [ -0.000298, 0.000461, -0.000038, 0.000386, 0.000765, 0.000430, -0.000345, -0.001362 ],
      "X_39" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_40" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_41" : [ -0.000225, 0.000075, 0.000039, 0.000300, 0.000005, 0.000459, -0.001142, 0.000490 ],
      "X_42" : [ -0.002431, 0.002415, 0.000370, -0.000065, 0.000357, -0.002020, -0.001756, 0.003130 ],
      "X_43" : [ -0.000196, -0.003800, 0.002208, 0.001825, 0.000918, 0.003394, 0.001823, -0.006172 ],
      "X_44" : [ -0.000460, -0.002637, 0.000340, 0.000523, 0.000763, 0.005437, -0.001343, -0.002624 ],
      "X_45" : [ 0.000029, -0.000361, -0.000810, 0.000135, 0.000241, 0.002874, -0.002385, 0.000277 ],
      "X_46" : [ 0.000159, -0.000410, 0.000709, 0.000603, 0.000594, 0.000601, 0.000129, -0.002385 ],
      "X_47" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_48" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_49" : [ 0.000014, 0.000110, -0.000010, 0.000007, 0.000013, 0.000026, -0.000140, -0.000020 ],
      "X_50" : [ -0.000068, 0.006473, 0.000466, -0.000653, 0.000598, 0.000307, 0.000213, -0.007335 ],
      "X_51" : [ -0.000108, 0.003770, -0.001364, -0.000901, 0.000695, -0.000507, -0.000507, -0.001077 ],
      "X_52" : [ 0.000285, -0.001793, 0.001286, 0.000448, 0.000920, -0.000194, 0.000641, -0.001593 ],
      "X_53" : [ -0.000396, 0.000378, -0.000707, 0.001247, 0.000071, 0.001787, -0.003591, 0.001210 ],
      "X_54" : [ 0.000060, -0.000392, 0.000549, 0.000345, 0.000689, -0.000325, 0.000213, -0.001138 ],
      "X_55" : [ -0.000066, 0.000099, -0.000031, -0.000027, -0.000023, -0.000237, -0.000183, 0.000469 ],
      "X_56" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_57" : [ 0.000000, -0.000000, -0.000000, -0.000000, -0.000000, 0.000001, -0.000000, 0.000000 ],
      "X_58" : [ -0.000105, -0.000655, 0.000464, 0.000220, 0.000019, 0.000067, 0.000495, -0.000506 ],
      "X_59" : [ -0.000490, 0.001978, -0.000273, -0.000105, -0.000340, 0.000170, -0.002011, 0.001071 ],
      "X_60" : [ 0.000583, 0.000200, 0.000516, 0.001347, 0.001273, -0.001012, 0.000197, -0.003103 ],
      "X_61" : [ 0.000158, -0.000240, 0.000615, 0.000755, 0.000508, -0.000838, -0.000217, -0.000741 ],
      "X_62" : [ 0.000251, 0.001660, 0.000914, -0.000171, 0.000357, -0.000526, -0.001588, -0.000897 ],
      "X_63" : [ -0.000210, 0.000094, 0.000291, 0.000150, 0.000117, -0.000624, -0.000281, 0.000463 ]   
   },
   "Most_Contributive_Features_By_Class" : {
      "class_0" : [ 42, 28, 36, 27, 20, 34, 60, 59, 44, 14 ],
      "class_1" : [ 50, 26, 21, 43, 51, 27, 44, 42, 4, 59 ],
      "class_2" : [ 21, 43, 29, 28, 51, 52, 5, 18, 37, 62 ],
      "class_3" : [ 43, 60, 37, 53, 26, 51, 21, 61, 34, 50 ],
      "class_4" : [ 60, 26, 37, 21, 52, 43, 38, 44, 51, 54 ],
      "class_5" : [ 44, 36, 37, 43, 27, 45, 28, 42, 53, 19 ],
      "class_6" : [ 28, 53, 26, 10, 34, 27, 45, 35, 20, 59 ],
      "class_7" : [ 28, 50, 43, 35, 36, 27, 42, 60, 13, 11 ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/classification/SVC/mllite.SVC_digits_tiny_option_1_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/classification/SVC/mllite.SVC_digits_tiny_option_1_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('digits_tiny', 'SVC', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('digits_tiny', 'SVC', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('digits_tiny', 'SVC', 'duckdb')
ore_4" AS "Score_4",
  arg_max_cte."Proba_4" AS "Proba_4",
  CASE WHEN (arg_max_cte."Proba_4" IS NULL OR arg_max_cte."Proba_4" > 0.0) THEN LN( arg_max_cte."Proba_4" ) ELSE -1.79769313486231e+308 END AS "LogProba_4",
  arg_max_cte."Score_5" AS "Score_5",
  arg_max_cte."Proba_5" AS "Proba_5",
  CASE WHEN (arg_max_cte."Proba_5" IS NULL OR arg_max_cte."Proba_5" > 0.0) THEN LN( arg_max_cte."Proba_5" ) ELSE -1.79769313486231e+308 END AS "LogProba_5",
  arg_max_cte."Score_6" AS "Score_6",
  arg_max_cte."Proba_6" AS "Proba_6",
  CASE WHEN (arg_max_cte."Proba_6" IS NULL OR arg_max_cte."Proba_6" > 0.0) THEN LN( arg_max_cte."Proba_6" ) ELSE -1.79769313486231e+308 END AS "LogProba_6",
  arg_max_cte."Score_7" AS "Score_7",
  arg_max_cte."Proba_7" AS "Proba_7",
  CASE WHEN (arg_max_cte."Proba_7" IS NULL OR arg_max_cte."Proba_7" > 0.0) THEN LN( arg_max_cte."Proba_7" ) ELSE -1.79769313486231e+308 END AS "LogProba_7",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('digits_tiny', 'SVC', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 16 entries, 0 to 15
Data columns (total 64 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     16 non-null     float32
 1   X_1     16 non-null     float32
 2   X_2     16 non-null     float32
 3   X_3     16 non-null     float32
 4   X_4     16 non-null     float32
 5   X_5     16 non-null     float32
 6   X_6     16 non-null     float32
 7   X_7     16 non-null     float32
 8   X_8     16 non-null     float32
 9   X_9     16 non-null     float32
 10  X_10    16 non-null     float32
 11  X_11    16 non-null     float32
 12  X_12    16 non-null     float32
 13  X_13    16 non-null     float32
 14  X_14    16 non-null     float32
 15  X_15    16 non-null     float32
 16  X_16    16 non-null     float32
 17  X_17    16 non-null     float32
 18  X_18    16 non-null     float32
 19  X_19    16 non-null     float32
 20  X_20    16 non-null     float32
 21  X_21    16 non-null     float32
 22  X_22    16 non-null     float32
 23  X_23    16 non-null     float32
 24  X_24    16 non-null     float32
 25  X_25    16 non-null     float32
 26  X_26    16 non-null     float32
 27  X_27    16 non-null     float32
 28  X_28    16 non-null     float32
 29  X_29    16 non-null     float32
 30  X_30    16 non-null     float32
 31  X_31    16 non-null     float32
 32  X_32    16 non-null     float32
 33  X_33    16 non-null     float32
 34  X_34    16 non-null     float32
 35  X_35    16 non-null     float32
 36  X_36    16 non-null     float32
 37  X_37    16 non-null     float32
 38  X_38    16 non-null     float32
 39  X_39    16 non-null     float32
 40  X_40    16 non-null     float32
 41  X_41    16 non-null     float32
 42  X_42    16 non-null     float32
 43  X_43    16 non-null     float32
 44  X_44    16 non-null     float32
 45  X_45    16 non-null     float32
 46  X_46    16 non-null     float32
 47  X_47    16 non-null     float32
 48  X_48    16 non-null     float32
 49  X_49    16 non-null     float32
 50  X_50    16 non-null     float32
 51  X_51    16 non-null     float32
 52  X_52    16 non-null     float32
 53  X_53    16 non-null     float32
 54  X_54    16 non-null     float32
 55  X_55    16 non-null     float32
 56  X_56    16 non-null     float32
 57  X_57    16 non-null     float32
 58  X_58    16 non-null     float32
 59  X_59    16 non-null     float32
 60  X_60    16 non-null     float32
 61  X_61    16 non-null     float32
 62  X_62    16 non-null     float32
 63  X_63    16 non-null     float32
dtypes: float32(64)
memory usage: 4.1 KB
       X_0  X_1   X_2   X_3   X_4   X_5  ...  X_58  X_59  X_60  X_61  X_62  X_63
index                                    ...                                    
0      0.0  0.0   0.0   3.0  15.0  10.0  ...   0.0   4.0   9.0  14.0   7.0   0.0
1      0.0  0.0  11.0  10.0   0.0   0.0  ...   8.0  16.0  16.0  16.0  16.0  12.0
2      0.0  0.0   0.0  15.0  11.0   0.0  ...   0.0  14.0   4.0   0.0   0.0   0.0
3      0.0  0.0   7.0  13.0  10.0   1.0  ...   7.0  13.0  16.0  15.0   4.0   0.0
4      0.0  0.0   5.0  12.0  13.0   2.0  ...   6.0  16.0  13.0   3.0   0.0   0.0
5      0.0  0.0   1.0   8.0  15.0  11.0  ...   0.0  11.0  15.0   8.0   0.0   0.0
6      0.0  0.0   2.0  13.0  16.0  13.0  ...   3.0  15.0   2.0   0.0   0.0   0.0
7      0.0  0.0   4.0  12.0   5.0   0.0  ...   2.0  11.0  16.0  11.0   0.0   0.0
8      0.0  0.0   1.0  12.0  16.0  14.0  ...   3.0  12.0  16.0  11.0   1.0   0.0
9      0.0  0.0   2.0  13.0  16.0  14.0  ...   5.0  15.0   4.0   0.0   0.0   0.0
10     0.0  0.0   0.0   3.0  14.0   9.0  ...   0.0   3.0  16.0   9.0   0.0   0.0
11     0.0  0.0   5.0  13.0  16.0  10.0  ...   5.0  14.0  15.0   9.0   0.0   0.0
12     0.0  1.0  11.0  13.0  10.0   1.0  ...   9.0  15.0  16.0  13.0   3.0   0.0
13     0.0  0.0   0.0   8.0  16.0  16.0  ...   0.0  12.0   9.0   0.0   0.0   0.0
14     0.0  0.0   1.0   9.0  15.0  11.0  ...   1.0  10.0  13.0   3.0   0.0   0.0
15     0.0  0.0   5.0  12.0   1.0   6.0  ...   4.0  12.0  12.0   3.0   0.0   0.0

[16 rows x 64 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 16 entries, 0 to 15
Data columns (total 27 columns):
 #   Column         Non-Null Count  Dtype 
---  ------         --------------  ----- 
 0   index          16 non-null     int64 
 1   Score_0        16 non-null     int64 
 2   Proba_0        0 non-null      object
 3   LogProba_0     0 non-null      object
 4   Score_1        16 non-null     int64 
 5   Proba_1        0 non-null      object
 6   LogProba_1     0 non-null      object
 7   Score_2        16 non-null     int64 
 8   Proba_2        0 non-null      object
 9   LogProba_2     0 non-null      object
 10  Score_3        16 non-null     int64 
 11  Proba_3        0 non-null      object
 12  LogProba_3     0 non-null      object
 13  Score_4        16 non-null     int64 
 14  Proba_4        0 non-null      object
 15  LogProba_4     0 non-null      object
 16  Score_5        16 non-null     int64 
 17  Proba_5        0 non-null      object
 18  LogProba_5     0 non-null      object
 19  Score_6        16 non-null     int64 
 20  Proba_6        0 non-null      object
 21  LogProba_6     0 non-null      object
 22  Score_7        16 non-null     int64 
 23  Proba_7        0 non-null      object
 24  LogProba_7     0 non-null      object
 25  Decision       0 non-null      object
 26  DecisionProba  0 non-null      object
dtypes: int64(9), object(18)
memory usage: 3.5+ KB
    index  Score_0 Proba_0 LogProba_0  ...  Proba_7 LogProba_7 Decision  DecisionProba
0       0        7    None       None  ...     None       None     None           None
1       1        7    None       None  ...     None       None     None           None
2       2        7    None       None  ...     None       None     None           None
3       3        7    None       None  ...     None       None     None           None
4       4        7    None       None  ...     None       None     None           None
5       5        7    None       None  ...     None       None     None           None
6       6        7    None       None  ...     None       None     None           None
7       7        7    None       None  ...     None       None     None           None
8       8        7    None       None  ...     None       None     None           None
9       9        7    None       None  ...     None       None     None           None
10     10        7    None       None  ...     None       None     None           None
11     11        7    None       None  ...     None       None     None           None
12     12        7    None       None  ...     None       None     None           None
13     13        7    None       None  ...     None       None     None           None
14     14        7    None       None  ...     None       None     None           None
15     15        7    None       None  ...     None       None     None           None

[16 rows x 27 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Score_3', 'Proba_3',
       'LogProba_3', 'Score_4', 'Proba_4', 'LogProba_4', 'Score_5', 'Proba_5',
       'LogProba_5', 'Score_6', 'Proba_6', 'LogProba_6', 'Score_7', 'Proba_7',
       'LogProba_7', 'Decision', 'DecisionProba'],
      dtype='object')
    index  Score_0 SQL_Proba_0  ... Py_Proba_6  Py_Proba_7 Py_Decision
0       0        7        None  ...   0.149593    0.100248           2
1       1        7        None  ...   0.177665    0.383090           1
2       2        7        None  ...   0.216313    0.084100           1
3       3        7        None  ...   0.104914    0.386435           9
4       4        7        None  ...   0.111258    0.188681           8
5       5        7        None  ...   0.087057    0.155104           8
6       6        7        None  ...   0.207727    0.120626           7
7       7        7        None  ...   0.102518    0.461785           0
8       8        7        None  ...   0.105570    0.382834           9
9       9        7        None  ...   0.211334    0.119001           7
10     10        7        None  ...   0.161075    0.160775           4
11     11        7        None  ...   0.141284    0.150149           8
12     12        7        None  ...   0.103244    0.387843           9
13     13        7        None  ...   0.113597    0.184804           7
14     14        7        None  ...   0.183060    0.411660           0
15     15        7        None  ...   0.109388    0.425563           0

[16 rows x 36 columns]
MLLITE_CLASS_SQL_ERROR ('digits_tiny', 'SVC', 'duckdb') ('Py_Proba_0', 'SQL_Proba_0') nan
    Py_Proba_0 SQL_Proba_0 SQL_Error_0
0     0.082385        None         NaN
1     0.044891        None         NaN
2     0.054496        None         NaN
3     0.051635        None         NaN
4     0.073789        None         NaN
5     0.066521        None         NaN
6     0.048664        None         NaN
7     0.030010        None         NaN
8     0.052866        None         NaN
9     0.049617        None         NaN
10    0.086475        None         NaN
11    0.068368        None         NaN
12    0.045549        None         NaN
13    0.047952        None         NaN
14    0.035473        None         NaN
15    0.035394        None         NaN
MLLITE_CLASS_SQL_ERROR ('digits_tiny', 'SVC', 'duckdb') ('Py_Proba_1', 'SQL_Proba_1') nan
    Py_Proba_1 SQL_Proba_1 SQL_Error_1
0     0.132956        None         NaN
1     0.043870        None         NaN
2     0.071105        None         NaN
3     0.092939        None         NaN
4     0.085311        None         NaN
5     0.088888        None         NaN
6     0.058161        None         NaN
7     0.085790        None         NaN
8     0.044486        None         NaN
9     0.060371        None         NaN
10    0.075704        None         NaN
11    0.141905        None         NaN
12    0.095177        None         NaN
13    0.041407        None         NaN
14    0.074482        None         NaN
15    0.074390        None         NaN
MLLITE_CLASS_SQL_ERROR ('digits_tiny', 'SVC', 'duckdb') ('Py_Proba_2', 'SQL_Proba_2') nan
    Py_Proba_2 SQL_Proba_2 SQL_Error_2
0     0.087757        None         NaN
1     0.115040        None         NaN
2     0.166655        None         NaN
3     0.104410        None         NaN
4     0.154132        None         NaN
5     0.214637        None         NaN
6     0.185617        None         NaN
7     0.076217        None         NaN
8     0.166925        None         NaN
9     0.178609        None         NaN
10    0.161405        None         NaN
11    0.129592        None         NaN
12    0.108422        None         NaN
13    0.149692        None         NaN
14    0.085314        None         NaN
15    0.085667        None         NaN
MLLITE_CLASS_SQL_ERROR ('digits_tiny', 'SVC', 'duckdb') ('Py_Proba_3', 'SQL_Proba_3') nan
    Py_Proba_3 SQL_Proba_3 SQL_Error_3
0     0.123767        None         NaN
1     0.069971        None         NaN
2     0.093872        None         NaN
3     0.077429        None         NaN
4     0.118490        None         NaN
5     0.109822        None         NaN
6     0.118529        None         NaN
7     0.069204        None         NaN
8     0.104904        None         NaN
9     0.115000        None         NaN
10    0.132307        None         NaN
11    0.089944        None         NaN
12    0.076202        None         NaN
13    0.185467        None         NaN
14    0.068666        None         NaN
15    0.073500        None         NaN
MLLITE_CLASS_SQL_ERROR ('digits_tiny', 'SVC', 'duckdb') ('Py_Proba_4', 'SQL_Proba_4') nan
    Py_Proba_4 SQL_Proba_4 SQL_Error_4
0     0.147408        None         NaN
1     0.068328        None         NaN
2     0.095896        None         NaN
3     0.105511        None         NaN
4     0.101778        None         NaN
5     0.129778        None         NaN
6     0.135028        None         NaN
7     0.044694        None         NaN
8     0.085764        None         NaN
9     0.137331        None         NaN
10    0.060357        None         NaN
11    0.128550        None         NaN
12    0.108456        None         NaN
13    0.155572        None         NaN
14    0.042364        None         NaN
15    0.044263        None         NaN
MLLITE_CLASS_SQL_ERROR ('digits_tiny', 'SVC', 'duckdb') ('Py_Proba_5', 'SQL_Proba_5') nan
    Py_Proba_5 SQL_Proba_5 SQL_Error_5
0     0.175886        None         NaN
1     0.097145        None         NaN
2     0.217562        None         NaN
3     0.076726        None         NaN
4     0.166562        None         NaN
5     0.148194        None         NaN
6     0.125649        None         NaN
7     0.129782        None         NaN
8     0.056651        None         NaN
9     0.128736        None         NaN
10    0.161902        None         NaN
11    0.150207        None         NaN
12    0.075107        None         NaN
13    0.121509        None         NaN
14    0.098981        None         NaN
15    0.151835        None         NaN
MLLITE_CLASS_SQL_ERROR ('digits_tiny', 'SVC', 'duckdb') ('Py_Proba_6', 'SQL_Proba_6') nan
    Py_Proba_6 SQL_Proba_6 SQL_Error_6
0     0.149593        None         NaN
1     0.177665        None         NaN
2     0.216313        None         NaN
3     0.104914        None         NaN
4     0.111258        None         NaN
5     0.087057        None         NaN
6     0.207727        None         NaN
7     0.102518        None         NaN
8     0.105570        None         NaN
9     0.211334        None         NaN
10    0.161075        None         NaN
11    0.141284        None         NaN
12    0.103244        None         NaN
13    0.113597        None         NaN
14    0.183060        None         NaN
15    0.109388        None         NaN
MLLITE_CLASS_SQL_ERROR ('digits_tiny', 'SVC', 'duckdb') ('Py_Proba_7', 'SQL_Proba_7') nan
    Py_Proba_7 SQL_Proba_7 SQL_Error_7
0     0.100248        None         NaN
1     0.383090        None         NaN
2     0.084100        None         NaN
3     0.386435        None         NaN
4     0.188681        None         NaN
5     0.155104        None         NaN
6     0.120626        None         NaN
7     0.461785        None         NaN
8     0.382834        None         NaN
9     0.119001        None         NaN
10    0.160775        None         NaN
11    0.150149        None         NaN
12    0.387843        None         NaN
13    0.184804        None         NaN
14    0.411660        None         NaN
15    0.425563        None         NaN
MLLITE_CLASS_SQL_EXECUTION_STATUS ('digits_tiny', 'SVC', 'duckdb', 'Success')
    Py_Decision SQL_Decision
0             2         None
1             1         None
2             1         None
3             9         None
4             8         None
5             8         None
6             7         None
7             0         None
8             9         None
9             7         None
10            4         None
11            8         None
12            9         None
13            7         None
14            0         None
15            0         None
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/SVC/mllite.SVC_digits_tiny_option_1_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('digits_tiny', 'SVC', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('digits_tiny', 'SVC', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('digits_tiny', 'SVC', 'sqlite')
ore_4" AS "Score_4",
  arg_max_cte."Proba_4" AS "Proba_4",
  CASE WHEN (arg_max_cte."Proba_4" IS NULL OR arg_max_cte."Proba_4" > 0.0) THEN LN( arg_max_cte."Proba_4" ) ELSE -1.79769313486231e+308 END AS "LogProba_4",
  arg_max_cte."Score_5" AS "Score_5",
  arg_max_cte."Proba_5" AS "Proba_5",
  CASE WHEN (arg_max_cte."Proba_5" IS NULL OR arg_max_cte."Proba_5" > 0.0) THEN LN( arg_max_cte."Proba_5" ) ELSE -1.79769313486231e+308 END AS "LogProba_5",
  arg_max_cte."Score_6" AS "Score_6",
  arg_max_cte."Proba_6" AS "Proba_6",
  CASE WHEN (arg_max_cte."Proba_6" IS NULL OR arg_max_cte."Proba_6" > 0.0) THEN LN( arg_max_cte."Proba_6" ) ELSE -1.79769313486231e+308 END AS "LogProba_6",
  arg_max_cte."Score_7" AS "Score_7",
  arg_max_cte."Proba_7" AS "Proba_7",
  CASE WHEN (arg_max_cte."Proba_7" IS NULL OR arg_max_cte."Proba_7" > 0.0) THEN LN( arg_max_cte."Proba_7" ) ELSE -1.79769313486231e+308 END AS "LogProba_7",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('digits_tiny', 'SVC', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 16 entries, 0 to 15
Data columns (total 64 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     16 non-null     float32
 1   X_1     16 non-null     float32
 2   X_2     16 non-null     float32
 3   X_3     16 non-null     float32
 4   X_4     16 non-null     float32
 5   X_5     16 non-null     float32
 6   X_6     16 non-null     float32
 7   X_7     16 non-null     float32
 8   X_8     16 non-null     float32
 9   X_9     16 non-null     float32
 10  X_10    16 non-null     float32
 11  X_11    16 non-null     float32
 12  X_12    16 non-null     float32
 13  X_13    16 non-null     float32
 14  X_14    16 non-null     float32
 15  X_15    16 non-null     float32
 16  X_16    16 non-null     float32
 17  X_17    16 non-null     float32
 18  X_18    16 non-null     float32
 19  X_19    16 non-null     float32
 20  X_20    16 non-null     float32
 21  X_21    16 non-null     float32
 22  X_22    16 non-null     float32
 23  X_23    16 non-null     float32
 24  X_24    16 non-null     float32
 25  X_25    16 non-null     float32
 26  X_26    16 non-null     float32
 27  X_27    16 non-null     float32
 28  X_28    16 non-null     float32
 29  X_29    16 non-null     float32
 30  X_30    16 non-null     float32
 31  X_31    16 non-null     float32
 32  X_32    16 non-null     float32
 33  X_33    16 non-null     float32
 34  X_34    16 non-null     float32
 35  X_35    16 non-null     float32
 36  X_36    16 non-null     float32
 37  X_37    16 non-null     float32
 38  X_38    16 non-null     float32
 39  X_39    16 non-null     float32
 40  X_40    16 non-null     float32
 41  X_41    16 non-null     float32
 42  X_42    16 non-null     float32
 43  X_43    16 non-null     float32
 44  X_44    16 non-null     float32
 45  X_45    16 non-null     float32
 46  X_46    16 non-null     float32
 47  X_47    16 non-null     float32
 48  X_48    16 non-null     float32
 49  X_49    16 non-null     float32
 50  X_50    16 non-null     float32
 51  X_51    16 non-null     float32
 52  X_52    16 non-null     float32
 53  X_53    16 non-null     float32
 54  X_54    16 non-null     float32
 55  X_55    16 non-null     float32
 56  X_56    16 non-null     float32
 57  X_57    16 non-null     float32
 58  X_58    16 non-null     float32
 59  X_59    16 non-null     float32
 60  X_60    16 non-null     float32
 61  X_61    16 non-null     float32
 62  X_62    16 non-null     float32
 63  X_63    16 non-null     float32
dtypes: float32(64)
memory usage: 4.1 KB
       X_0  X_1   X_2   X_3   X_4   X_5  ...  X_58  X_59  X_60  X_61  X_62  X_63
index                                    ...                                    
0      0.0  0.0   0.0   3.0  15.0  10.0  ...   0.0   4.0   9.0  14.0   7.0   0.0
1      0.0  0.0  11.0  10.0   0.0   0.0  ...   8.0  16.0  16.0  16.0  16.0  12.0
2      0.0  0.0   0.0  15.0  11.0   0.0  ...   0.0  14.0   4.0   0.0   0.0   0.0
3      0.0  0.0   7.0  13.0  10.0   1.0  ...   7.0  13.0  16.0  15.0   4.0   0.0
4      0.0  0.0   5.0  12.0  13.0   2.0  ...   6.0  16.0  13.0   3.0   0.0   0.0
5      0.0  0.0   1.0   8.0  15.0  11.0  ...   0.0  11.0  15.0   8.0   0.0   0.0
6      0.0  0.0   2.0  13.0  16.0  13.0  ...   3.0  15.0   2.0   0.0   0.0   0.0
7      0.0  0.0   4.0  12.0   5.0   0.0  ...   2.0  11.0  16.0  11.0   0.0   0.0
8      0.0  0.0   1.0  12.0  16.0  14.0  ...   3.0  12.0  16.0  11.0   1.0   0.0
9      0.0  0.0   2.0  13.0  16.0  14.0  ...   5.0  15.0   4.0   0.0   0.0   0.0
10     0.0  0.0   0.0   3.0  14.0   9.0  ...   0.0   3.0  16.0   9.0   0.0   0.0
11     0.0  0.0   5.0  13.0  16.0  10.0  ...   5.0  14.0  15.0   9.0   0.0   0.0
12     0.0  1.0  11.0  13.0  10.0   1.0  ...   9.0  15.0  16.0  13.0   3.0   0.0
13     0.0  0.0   0.0   8.0  16.0  16.0  ...   0.0  12.0   9.0   0.0   0.0   0.0
14     0.0  0.0   1.0   9.0  15.0  11.0  ...   1.0  10.0  13.0   3.0   0.0   0.0
15     0.0  0.0   5.0  12.0   1.0   6.0  ...   4.0  12.0  12.0   3.0   0.0   0.0

[16 rows x 64 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
MODEL_SQL_EXECUTION_FAILED ('digits_tiny', 'SVC', 'sqlite', '(sqlite3.OperationalError) no such function: ANY_VALUE')
MLLITE_CLASS_SQL_EXECUTION_STATUS ('digits_tiny', 'SVC', 'sqlite', 'sql_execution_failed')
