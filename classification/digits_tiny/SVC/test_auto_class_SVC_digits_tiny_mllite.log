    pixel_0_0  pixel_0_1  pixel_0_2  ...  pixel_7_6  pixel_7_7  target
0           0          0          0  ...          7          0       2
1           0          0         11  ...         16         12       1
2           0          0          0  ...          0          0       1
3           0          0          7  ...          4          0       9
4           0          0          5  ...          0          0       8
5           0          0          1  ...          0          0       8
6           0          0          2  ...          0          0       7
7           0          0          4  ...          0          0       0
8           0          0          1  ...          1          0       9
9           0          0          2  ...          0          0       7
10          0          0          0  ...          0          0       4
11          0          0          5  ...          0          0       3
12          0          1         11  ...          3          0       9
13          0          0          0  ...          0          0       7
14          0          0          1  ...          0          0       0
15          0          0          5  ...          0          0       0

[16 rows x 65 columns]
MLLITE_MODEL_SET_OPTIONS SVC None
MLLITE_MODEL_OPTIONS_DEFAULT SVC { "max_iter" : 128 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING SVC { ,  "max_iter" : 128  }
MLLITE_MODEL_JSON_AFTER_SETTING SVC None
('OPERATION_START', 'TRAINING')
[[ 0.  0.  0.  3. 15. 10.  1.  0.  0.  0.  0. 11. 10. 16.  4.  0.  0.  0.
   0. 12.  1. 15.  6.  0.  0.  0.  0.  3.  4. 15.  4.  0.  0.  0.  0.  6.
  15.  6.  0.  0.  0.  4. 15. 16.  9.  0.  0.  0.  0.  0. 13. 16. 15.  9.
   3.  0.  0.  0.  0.  4.  9. 14.  7.  0.]
 [ 0.  0. 11. 10.  0.  0.  0.  0.  0.  0. 11. 15.  0.  0.  0.  0.  0.  0.
  11. 16.  5.  0.  0.  0.  0.  0. 13. 16. 11.  0.  0.  0.  0.  0.  2.  7.
  16.  2.  0.  0.  0.  0.  0.  2. 14.  6.  0.  0.  0.  0.  6. 10. 15. 13.
   8.  3.  0.  0.  8. 16. 16. 16. 16. 12.]
 [ 0.  0.  0. 15. 11.  0.  0.  0.  0.  0.  6. 16. 16.  2.  0.  0.  0.  0.
  10. 16. 16.  1.  0.  0.  0.  2. 16. 16. 16.  3.  0.  0.  0.  7. 16. 16.
  14.  0.  0.  0.  0.  0.  3. 15. 10.  0.  0.  0.  0.  0.  0. 15.  7.  0.
   0.  0.  0.  0.  0. 14.  4.  0.  0.  0.]
 [ 0.  0.  7. 13. 10.  1.  0.  0.  0.  1. 15.  3.  9. 10.  0.  0.  0.  3.
  16.  4. 13. 11.  0.  0.  0.  0.  6. 12. 12. 16.  0.  0.  0.  0.  0.  0.
   0. 12.  5.  0.  0.  0.  0.  0.  0.  5. 11.  0.  0.  1. 11.  2.  0.  7.
  11.  0.  0.  0.  7. 13. 16. 15.  4.  0.]
 [ 0.  0.  5. 12. 13.  2.  0.  0.  0.  3. 16. 14. 16. 13.  1.  0.  0.  4.
  16.  9. 16. 12.  1.  0.  0.  1.  9. 16. 15.  1.  0.  0.  0.  1. 13. 16.
  16.  5.  0.  0.  0.  3. 16.  5. 12. 16.  0.  0.  0.  3. 15.  7. 14. 12.
   0.  0.  0.  0.  6. 16. 13.  3.  0.  0.]] [2 1 1 9 8]
MLLITE_FIT_USING_MODEL mllite_svm_class.SVC_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_CLASSIFIER_FIT' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_CLASSIFIER_FIT' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_CLASSIFIER_FIT' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_CLASSIFIER_FIT' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 1 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 2 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 3 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 4 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 5 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_0_7_CV_FOLD_4' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_0_7' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 6 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 7 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 8 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 9 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 10 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 11 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 12 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 13 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 14 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 15 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 16 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 17 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 18 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 19 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 20 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 21 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 22 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 23 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 24 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 25 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 26 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 27 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_SOLVER_ITERATION:SVC_Global_BINARY_7_9' 12 128
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 28 28
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_CLASSIFIER_FIT' 5 5
('OPERATION_END_ELAPSED', 0.027, 'TRAINING')
{ ,  "max_iter" : 128  }
{ ,  "max_iter" : 128  }
{
	"metadata" : { "model" : "Vapnik_SVC_RBF", "version" : "2024-W13", "signature" : "ff4_il8"},
	"options" : {"svm_type" : "c_svc", "kernel" : "rbf", "degree" : 3, "gamma" : 0.000449, "coef0" : 0.000000, "cache_size" : 300, "tol" : 0.001000, "nu" : 0.500000, "epsilon" : 0.000000, "shrinking" : 0, "probability" : 1, "C" : 1.000000, "max_iter" : 128, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 64 },
	"classes" : [ 0, 1, 2, 3, 4, 7, 8, 9 ],
	"svm_model" : {
	"classes" : 8,
	"L" : 16,
	"SupportVectors" : {
		"SV_00" : [ 0.000000, 0.000000, 4.000000, 12.000000, 5.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 12.000000, 14.000000, 15.000000, 7.000000, 0.000000, 0.000000, 0.000000, 2.000000, 14.000000, 1.000000, 2.000000, 16.000000, 0.000000, 0.000000, 0.000000, 4.000000, 8.000000, 0.000000, 0.000000, 10.000000, 4.000000, 0.000000, 0.000000, 7.000000, 8.000000, 0.000000, 0.000000, 6.000000, 8.000000, 0.000000, 0.000000, 4.000000, 11.000000, 0.000000, 0.000000, 5.000000, 8.000000, 0.000000, 0.000000, 0.000000, 14.000000, 11.000000, 3.000000, 13.000000, 5.000000, 0.000000, 0.000000, 0.000000, 2.000000, 11.000000, 16.000000, 11.000000, 0.000000, 0.000000 ],
		"SV_01" : [ 0.000000, 0.000000, 1.000000, 9.000000, 15.000000, 11.000000, 0.000000, 0.000000, 0.000000, 0.000000, 11.000000, 16.000000, 8.000000, 14.000000, 6.000000, 0.000000, 0.000000, 2.000000, 16.000000, 10.000000, 0.000000, 9.000000, 9.000000, 0.000000, 0.000000, 1.000000, 16.000000, 4.000000, 0.000000, 8.000000, 8.000000, 0.000000, 0.000000, 4.000000, 16.000000, 4.000000, 0.000000, 8.000000, 8.000000, 0.000000, 0.000000, 1.000000, 16.000000, 5.000000, 1.000000, 11.000000, 3.000000, 0.000000, 0.000000, 0.000000, 12.000000, 12.000000, 10.000000, 10.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 10.000000, 13.000000, 3.000000, 0.000000, 0.000000 ],
		"SV_02" : [ 0.000000, 0.000000, 5.000000, 12.000000, 1.000000, 6.000000, 0.000000, 0.000000, 0.000000, 0.000000, 11.000000, 12.000000, 0.000000, 16.000000, 2.000000, 0.000000, 0.000000, 0.000000, 16.000000, 5.000000, 0.000000, 12.000000, 4.000000, 0.000000, 0.000000, 3.000000, 15.000000, 0.000000, 0.000000, 8.000000, 4.000000, 0.000000, 0.000000, 7.000000, 12.000000, 0.000000, 0.000000, 4.000000, 7.000000, 0.000000, 0.000000, 2.000000, 15.000000, 1.000000, 1.000000, 12.000000, 5.000000, 0.000000, 0.000000, 0.000000, 16.000000, 11.000000, 12.000000, 15.000000, 3.000000, 0.000000, 0.000000, 0.000000, 4.000000, 12.000000, 12.000000, 3.000000, 0.000000, 0.000000 ],
		"SV_03" : [ 0.000000, 0.000000, 11.000000, 10.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 11.000000, 15.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 11.000000, 16.000000, 5.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 13.000000, 16.000000, 11.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 7.000000, 16.000000, 2.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 14.000000, 6.000000, 0.000000, 0.000000, 0.000000, 0.000000, 6.000000, 10.000000, 15.000000, 13.000000, 8.000000, 3.000000, 0.000000, 0.000000, 8.000000, 16.000000, 16.000000, 16.000000, 16.000000, 12.000000 ],
		"SV_04" : [ 0.000000, 0.000000, 0.000000, 15.000000, 11.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 6.000000, 16.000000, 16.000000, 2.000000, 0.000000, 0.000000, 0.000000, 0.000000, 10.000000, 16.000000, 16.000000, 1.000000, 0.000000, 0.000000, 0.000000, 2.000000, 16.000000, 16.000000, 16.000000, 3.000000, 0.000000, 0.000000, 0.000000, 7.000000, 16.000000, 16.000000, 14.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 3.000000, 15.000000, 10.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 15.000000, 7.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 14.000000, 4.000000, 0.000000, 0.000000, 0.000000 ],
		"SV_05" : [ 0.000000, 0.000000, 0.000000, 3.000000, 15.000000, 10.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 11.000000, 10.000000, 16.000000, 4.000000, 0.000000, 0.000000, 0.000000, 0.000000, 12.000000, 1.000000, 15.000000, 6.000000, 0.000000, 0.000000, 0.000000, 0.000000, 3.000000, 4.000000, 15.000000, 4.000000, 0.000000, 0.000000, 0.000000, 0.000000, 6.000000, 15.000000, 6.000000, 0.000000, 0.000000, 0.000000, 4.000000, 15.000000, 16.000000, 9.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 13.000000, 16.000000, 15.000000, 9.000000, 3.000000, 0.000000, 0.000000, 0.000000, 0.000000, 4.000000, 9.000000, 14.000000, 7.000000, 0.000000 ],
		"SV_06" : [ 0.000000, 0.000000, 5.000000, 13.000000, 16.000000, 10.000000, 1.000000, 0.000000, 0.000000, 7.000000, 16.000000, 16.000000, 16.000000, 16.000000, 7.000000, 0.000000, 0.000000, 0.000000, 5.000000, 2.000000, 11.000000, 14.000000, 5.000000, 0.000000, 0.000000, 0.000000, 0.000000, 10.000000, 15.000000, 6.000000, 0.000000, 0.000000, 0.000000, 0.000000, 9.000000, 16.000000, 13.000000, 2.000000, 0.000000, 0.000000, 0.000000, 0.000000, 4.000000, 11.000000, 15.000000, 14.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 2.000000, 13.000000, 16.000000, 1.000000, 0.000000, 0.000000, 0.000000, 5.000000, 14.000000, 15.000000, 9.000000, 0.000000, 0.000000 ],
		"SV_07" : [ 0.000000, 0.000000, 0.000000, 3.000000, 14.000000, 9.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 13.000000, 11.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 9.000000, 14.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 4.000000, 16.000000, 4.000000, 0.000000, 4.000000, 2.000000, 0.000000, 0.000000, 12.000000, 12.000000, 7.000000, 14.000000, 16.000000, 10.000000, 0.000000, 0.000000, 13.000000, 16.000000, 14.000000, 11.000000, 16.000000, 4.000000, 0.000000, 0.000000, 2.000000, 2.000000, 0.000000, 11.000000, 13.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 3.000000, 16.000000, 9.000000, 0.000000, 0.000000 ],
		"SV_08" : [ 0.000000, 0.000000, 2.000000, 13.000000, 16.000000, 13.000000, 4.000000, 0.000000, 0.000000, 0.000000, 9.000000, 11.000000, 9.000000, 16.000000, 7.000000, 0.000000, 0.000000, 2.000000, 15.000000, 2.000000, 2.000000, 15.000000, 2.000000, 0.000000, 0.000000, 3.000000, 3.000000, 0.000000, 8.000000, 13.000000, 2.000000, 0.000000, 0.000000, 0.000000, 1.000000, 13.000000, 16.000000, 16.000000, 10.000000, 0.000000, 0.000000, 0.000000, 0.000000, 11.000000, 13.000000, 5.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 11.000000, 6.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 3.000000, 15.000000, 2.000000, 0.000000, 0.000000, 0.000000 ],
		"SV_09" : [ 0.000000, 0.000000, 2.000000, 13.000000, 16.000000, 14.000000, 1.000000, 0.000000, 0.000000, 0.000000, 11.000000, 12.000000, 7.000000, 16.000000, 3.000000, 0.000000, 0.000000, 0.000000, 9.000000, 3.000000, 2.000000, 16.000000, 3.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 9.000000, 11.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 11.000000, 15.000000, 13.000000, 3.000000, 0.000000, 0.000000, 0.000000, 4.000000, 15.000000, 16.000000, 13.000000, 3.000000, 0.000000, 0.000000, 0.000000, 0.000000, 14.000000, 8.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 5.000000, 15.000000, 4.000000, 0.000000, 0.000000, 0.000000 ],
		"SV_10" : [ 0.000000, 0.000000, 0.000000, 8.000000, 16.000000, 16.000000, 16.000000, 6.000000, 0.000000, 0.000000, 6.000000, 14.000000, 5.000000, 8.000000, 16.000000, 2.000000, 0.000000, 0.000000, 7.000000, 4.000000, 0.000000, 6.000000, 12.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 12.000000, 6.000000, 0.000000, 0.000000, 0.000000, 0.000000, 11.000000, 16.000000, 16.000000, 10.000000, 0.000000, 0.000000, 0.000000, 0.000000, 12.000000, 16.000000, 8.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 6.000000, 16.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 12.000000, 9.000000, 0.000000, 0.000000, 0.000000 ],
		"SV_11" : [ 0.000000, 0.000000, 5.000000, 12.000000, 13.000000, 2.000000, 0.000000, 0.000000, 0.000000, 3.000000, 16.000000, 14.000000, 16.000000, 13.000000, 1.000000, 0.000000, 0.000000, 4.000000, 16.000000, 9.000000, 16.000000, 12.000000, 1.000000, 0.000000, 0.000000, 1.000000, 9.000000, 16.000000, 15.000000, 1.000000, 0.000000, 0.000000, 0.000000, 1.000000, 13.000000, 16.000000, 16.000000, 5.000000, 0.000000, 0.000000, 0.000000, 3.000000, 16.000000, 5.000000, 12.000000, 16.000000, 0.000000, 0.000000, 0.000000, 3.000000, 15.000000, 7.000000, 14.000000, 12.000000, 0.000000, 0.000000, 0.000000, 0.000000, 6.000000, 16.000000, 13.000000, 3.000000, 0.000000, 0.000000 ],
		"SV_12" : [ 0.000000, 0.000000, 1.000000, 8.000000, 15.000000, 11.000000, 3.000000, 0.000000, 0.000000, 0.000000, 11.000000, 12.000000, 9.000000, 14.000000, 11.000000, 0.000000, 0.000000, 2.000000, 14.000000, 0.000000, 0.000000, 13.000000, 6.000000, 0.000000, 0.000000, 7.000000, 15.000000, 8.000000, 12.000000, 9.000000, 0.000000, 0.000000, 0.000000, 0.000000, 6.000000, 13.000000, 16.000000, 8.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 13.000000, 9.000000, 15.000000, 4.000000, 0.000000, 0.000000, 0.000000, 0.000000, 16.000000, 8.000000, 14.000000, 3.000000, 0.000000, 0.000000, 0.000000, 0.000000, 11.000000, 15.000000, 8.000000, 0.000000, 0.000000 ],
		"SV_13" : [ 0.000000, 0.000000, 7.000000, 13.000000, 10.000000, 1.000000, 0.000000, 0.000000, 0.000000, 1.000000, 15.000000, 3.000000, 9.000000, 10.000000, 0.000000, 0.000000, 0.000000, 3.000000, 16.000000, 4.000000, 13.000000, 11.000000, 0.000000, 0.000000, 0.000000, 0.000000, 6.000000, 12.000000, 12.000000, 16.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 12.000000, 5.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 5.000000, 11.000000, 0.000000, 0.000000, 1.000000, 11.000000, 2.000000, 0.000000, 7.000000, 11.000000, 0.000000, 0.000000, 0.000000, 7.000000, 13.000000, 16.000000, 15.000000, 4.000000, 0.000000 ],
		"SV_14" : [ 0.000000, 0.000000, 1.000000, 12.000000, 16.000000, 14.000000, 2.000000, 0.000000, 0.000000, 0.000000, 13.000000, 11.000000, 3.000000, 16.000000, 5.000000, 0.000000, 0.000000, 4.000000, 14.000000, 0.000000, 0.000000, 15.000000, 6.000000, 0.000000, 0.000000, 6.000000, 12.000000, 8.000000, 13.000000, 16.000000, 5.000000, 0.000000, 0.000000, 0.000000, 9.000000, 12.000000, 4.000000, 10.000000, 8.000000, 0.000000, 0.000000, 0.000000, 3.000000, 0.000000, 0.000000, 11.000000, 5.000000, 0.000000, 0.000000, 0.000000, 16.000000, 14.000000, 5.000000, 15.000000, 4.000000, 0.000000, 0.000000, 0.000000, 3.000000, 12.000000, 16.000000, 11.000000, 1.000000, 0.000000 ],
		"SV_15" : [ 0.000000, 1.000000, 11.000000, 13.000000, 10.000000, 1.000000, 0.000000, 0.000000, 0.000000, 8.000000, 12.000000, 3.000000, 13.000000, 10.000000, 0.000000, 0.000000, 0.000000, 8.000000, 11.000000, 2.000000, 11.000000, 16.000000, 1.000000, 0.000000, 0.000000, 1.000000, 15.000000, 16.000000, 16.000000, 16.000000, 2.000000, 0.000000, 0.000000, 0.000000, 2.000000, 8.000000, 3.000000, 9.000000, 6.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 7.000000, 9.000000, 0.000000, 0.000000, 2.000000, 12.000000, 3.000000, 0.000000, 9.000000, 12.000000, 0.000000, 0.000000, 1.000000, 9.000000, 15.000000, 16.000000, 13.000000, 3.000000, 0.000000 ]
	},
	"SupportVectorsCoefs" : {
		"SV_coef_0" : [ 0.823021, 0.850621, 0.326358, -1.000000, -1.000000, -1.000000, -1.000000, -1.000000, -0.554586, -0.823699, -0.702606, -1.000000, -1.000000, -1.000000, -1.000000, -0.701718 ],
		"SV_coef_1" : [ 0.420917, 0.535853, 0.043230, 0.498888, 0.501112, -1.000000, -1.000000, -1.000000, -0.402757, -0.870823, -0.698948, -1.000000, -1.000000, -0.628688, -0.809947, -0.561364 ],
		"SV_coef_2" : [ 0.431581, 0.513789, 0.054630, 0.460313, 0.539687, 1.000000, -1.000000, -1.000000, -0.000000, -0.608479, -0.391521, -0.386039, -0.613961, -0.325915, -0.600345, -0.073740 ],
		"SV_coef_3" : [ 0.339776, 0.650165, 0.010059, 0.471005, 0.528995, 1.000000, 1.000000, -1.000000, -0.000000, -0.732170, -0.267830, -0.525600, -0.474400, -0.151274, -0.545107, -0.303619 ],
		"SV_coef_4" : [ 0.795536, 1.000000, 0.285355, 0.972528, 1.000000, 1.000000, 1.000000, 1.000000, -0.088290, -0.420597, -0.491113, -0.448034, -0.551966, -0.320051, -0.533168, -0.146781 ],
		"SV_coef_5" : [ 0.716593, 1.000000, 0.283407, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 0.489890, 1.000000, 0.510110, -1.000000, -1.000000, -0.803704, -1.000000, -0.307673 ],
		"SV_coef_6" : [ 1.000000, 1.000000, 0.701718, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 0.932040, 0.649064, 0.530273, 1.000000, 1.000000, -0.307759, -1.000000, -0.692241 ]
	},
	"rho" : [ 0.082120, -0.576429, -0.533812, -0.591735, 0.017821, -0.208806, -0.021307, -0.578599, -0.663418, -0.599869, -0.095406, -0.054996, 0.017348, 0.000000, 0.000000, 0.633166, 0.625589, 0.554382, 0.000000, 0.656420, 0.893627, 0.642324, 0.502244, 0.610048, 0.478126, -0.231763, 0.020370, 0.266835 ],
	"nSV" : [ 3, 2, 1, 1, 1, 3, 2, 3 ],
	"probA" : [ -6.607348, 5.324748, 5.554262, 4.591659, -2.039781, 6.605371, -1.700003, 1.952958, 1.783658, 1.906840, -6.239567, 1.688748, -3.733774, 0.693147, 0.693147, 4.632849, 1.969866, 2.319304, 0.693147, 5.291907, 1.533718, 2.832031, 3.880067, 2.021508, 2.948030, 14.576571, -2.010381, 2.138195 ],
	"probB" : [ 3.278235, -5.528591, -5.734478, -4.880754, -0.015638, -3.710654, -0.054904, -1.259813, -1.092713, -1.215017, -3.061108, 0.053287, -1.653161, -0.000000, -0.000000, 4.968959, 1.291147, 2.768837, -0.000000, 5.620518, 0.841007, 3.233119, 4.257354, 1.331494, 3.335504, -8.328896, 0.085910, 1.404341 ],
	"n_iter" : [ 8, 8, 7, 6, 11, 3, 4, 2, 2, 2, 8, 2, 7, 1, 1, 2, 2, 6, 1, 2, 2, 6, 5, 2, 6, 3, 12, 3 ]
}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/SVC/mllite.SVC_digits_tiny.json'

MLLITE_MODEL_SET_OPTIONS SVC None
MLLITE_MODEL_OPTIONS_DEFAULT SVC { "max_iter" : 128 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING SVC { ,  "max_iter" : 128  }
MLLITE_MODEL_JSON_AFTER_SETTING SVC None
MLLITE_RELOADING_MODEL mllite_svm_class.SVC_ff4_il8
{
	"metadata" : { "model" : "Vapnik_SVC_RBF", "version" : "2024-W13", "signature" : "ff4_il8"},
	"options" : {"svm_type" : "c_svc", "kernel" : "rbf", "degree" : 3, "gamma" : 0.000449, "coef0" : 0.000000, "cache_size" : 300, "tol" : 0.001000, "nu" : 0.500000, "epsilon" : 0.000000, "shrinking" : 0, "probability" : 1, "C" : 1.000000, "max_iter" : 128, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 64 },
	"classes" : [ 0, 1, 2, 3, 4, 7, 8, 9 ],
	"svm_model" : {
	"classes" : 8,
	"L" : 16,
	"SupportVectors" : {
		"SV_00" : [ 0.000000, 0.000000, 4.000000, 12.000000, 5.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 12.000000, 14.000000, 15.000000, 7.000000, 0.000000, 0.000000, 0.000000, 2.000000, 14.000000, 1.000000, 2.000000, 16.000000, 0.000000, 0.000000, 0.000000, 4.000000, 8.000000, 0.000000, 0.000000, 10.000000, 4.000000, 0.000000, 0.000000, 7.000000, 8.000000, 0.000000, 0.000000, 6.000000, 8.000000, 0.000000, 0.000000, 4.000000, 11.000000, 0.000000, 0.000000, 5.000000, 8.000000, 0.000000, 0.000000, 0.000000, 14.000000, 11.000000, 3.000000, 13.000000, 5.000000, 0.000000, 0.000000, 0.000000, 2.000000, 11.000000, 16.000000, 11.000000, 0.000000, 0.000000 ],
		"SV_01" : [ 0.000000, 0.000000, 1.000000, 9.000000, 15.000000, 11.000000, 0.000000, 0.000000, 0.000000, 0.000000, 11.000000, 16.000000, 8.000000, 14.000000, 6.000000, 0.000000, 0.000000, 2.000000, 16.000000, 10.000000, 0.000000, 9.000000, 9.000000, 0.000000, 0.000000, 1.000000, 16.000000, 4.000000, 0.000000, 8.000000, 8.000000, 0.000000, 0.000000, 4.000000, 16.000000, 4.000000, 0.000000, 8.000000, 8.000000, 0.000000, 0.000000, 1.000000, 16.000000, 5.000000, 1.000000, 11.000000, 3.000000, 0.000000, 0.000000, 0.000000, 12.000000, 12.000000, 10.000000, 10.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 10.000000, 13.000000, 3.000000, 0.000000, 0.000000 ],
		"SV_02" : [ 0.000000, 0.000000, 5.000000, 12.000000, 1.000000, 6.000000, 0.000000, 0.000000, 0.000000, 0.000000, 11.000000, 12.000000, 0.000000, 16.000000, 2.000000, 0.000000, 0.000000, 0.000000, 16.000000, 5.000000, 0.000000, 12.000000, 4.000000, 0.000000, 0.000000, 3.000000, 15.000000, 0.000000, 0.000000, 8.000000, 4.000000, 0.000000, 0.000000, 7.000000, 12.000000, 0.000000, 0.000000, 4.000000, 7.000000, 0.000000, 0.000000, 2.000000, 15.000000, 1.000000, 1.000000, 12.000000, 5.000000, 0.000000, 0.000000, 0.000000, 16.000000, 11.000000, 12.000000, 15.000000, 3.000000, 0.000000, 0.000000, 0.000000, 4.000000, 12.000000, 12.000000, 3.000000, 0.000000, 0.000000 ],
		"SV_03" : [ 0.000000, 0.000000, 11.000000, 10.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 11.000000, 15.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 11.000000, 16.000000, 5.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 13.000000, 16.000000, 11.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 7.000000, 16.000000, 2.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 14.000000, 6.000000, 0.000000, 0.000000, 0.000000, 0.000000, 6.000000, 10.000000, 15.000000, 13.000000, 8.000000, 3.000000, 0.000000, 0.000000, 8.000000, 16.000000, 16.000000, 16.000000, 16.000000, 12.000000 ],
		"SV_04" : [ 0.000000, 0.000000, 0.000000, 15.000000, 11.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 6.000000, 16.000000, 16.000000, 2.000000, 0.000000, 0.000000, 0.000000, 0.000000, 10.000000, 16.000000, 16.000000, 1.000000, 0.000000, 0.000000, 0.000000, 2.000000, 16.000000, 16.000000, 16.000000, 3.000000, 0.000000, 0.000000, 0.000000, 7.000000, 16.000000, 16.000000, 14.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 3.000000, 15.000000, 10.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 15.000000, 7.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 14.000000, 4.000000, 0.000000, 0.000000, 0.000000 ],
		"SV_05" : [ 0.000000, 0.000000, 0.000000, 3.000000, 15.000000, 10.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 11.000000, 10.000000, 16.000000, 4.000000, 0.000000, 0.000000, 0.000000, 0.000000, 12.000000, 1.000000, 15.000000, 6.000000, 0.000000, 0.000000, 0.000000, 0.000000, 3.000000, 4.000000, 15.000000, 4.000000, 0.000000, 0.000000, 0.000000, 0.000000, 6.000000, 15.000000, 6.000000, 0.000000, 0.000000, 0.000000, 4.000000, 15.000000, 16.000000, 9.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 13.000000, 16.000000, 15.000000, 9.000000, 3.000000, 0.000000, 0.000000, 0.000000, 0.000000, 4.000000, 9.000000, 14.000000, 7.000000, 0.000000 ],
		"SV_06" : [ 0.000000, 0.000000, 5.000000, 13.000000, 16.000000, 10.000000, 1.000000, 0.000000, 0.000000, 7.000000, 16.000000, 16.000000, 16.000000, 16.000000, 7.000000, 0.000000, 0.000000, 0.000000, 5.000000, 2.000000, 11.000000, 14.000000, 5.000000, 0.000000, 0.000000, 0.000000, 0.000000, 10.000000, 15.000000, 6.000000, 0.000000, 0.000000, 0.000000, 0.000000, 9.000000, 16.000000, 13.000000, 2.000000, 0.000000, 0.000000, 0.000000, 0.000000, 4.000000, 11.000000, 15.000000, 14.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 2.000000, 13.000000, 16.000000, 1.000000, 0.000000, 0.000000, 0.000000, 5.000000, 14.000000, 15.000000, 9.000000, 0.000000, 0.000000 ],
		"SV_07" : [ 0.000000, 0.000000, 0.000000, 3.000000, 14.000000, 9.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 13.000000, 11.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 9.000000, 14.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 4.000000, 16.000000, 4.000000, 0.000000, 4.000000, 2.000000, 0.000000, 0.000000, 12.000000, 12.000000, 7.000000, 14.000000, 16.000000, 10.000000, 0.000000, 0.000000, 13.000000, 16.000000, 14.000000, 11.000000, 16.000000, 4.000000, 0.000000, 0.000000, 2.000000, 2.000000, 0.000000, 11.000000, 13.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 3.000000, 16.000000, 9.000000, 0.000000, 0.000000 ],
		"SV_08" : [ 0.000000, 0.000000, 2.000000, 13.000000, 16.000000, 13.000000, 4.000000, 0.000000, 0.000000, 0.000000, 9.000000, 11.000000, 9.000000, 16.000000, 7.000000, 0.000000, 0.000000, 2.000000, 15.000000, 2.000000, 2.000000, 15.000000, 2.000000, 0.000000, 0.000000, 3.000000, 3.000000, 0.000000, 8.000000, 13.000000, 2.000000, 0.000000, 0.000000, 0.000000, 1.000000, 13.000000, 16.000000, 16.000000, 10.000000, 0.000000, 0.000000, 0.000000, 0.000000, 11.000000, 13.000000, 5.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 11.000000, 6.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 3.000000, 15.000000, 2.000000, 0.000000, 0.000000, 0.000000 ],
		"SV_09" : [ 0.000000, 0.000000, 2.000000, 13.000000, 16.000000, 14.000000, 1.000000, 0.000000, 0.000000, 0.000000, 11.000000, 12.000000, 7.000000, 16.000000, 3.000000, 0.000000, 0.000000, 0.000000, 9.000000, 3.000000, 2.000000, 16.000000, 3.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 9.000000, 11.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 11.000000, 15.000000, 13.000000, 3.000000, 0.000000, 0.000000, 0.000000, 4.000000, 15.000000, 16.000000, 13.000000, 3.000000, 0.000000, 0.000000, 0.000000, 0.000000, 14.000000, 8.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 5.000000, 15.000000, 4.000000, 0.000000, 0.000000, 0.000000 ],
		"SV_10" : [ 0.000000, 0.000000, 0.000000, 8.000000, 16.000000, 16.000000, 16.000000, 6.000000, 0.000000, 0.000000, 6.000000, 14.000000, 5.000000, 8.000000, 16.000000, 2.000000, 0.000000, 0.000000, 7.000000, 4.000000, 0.000000, 6.000000, 12.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 12.000000, 6.000000, 0.000000, 0.000000, 0.000000, 0.000000, 11.000000, 16.000000, 16.000000, 10.000000, 0.000000, 0.000000, 0.000000, 0.000000, 12.000000, 16.000000, 8.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 6.000000, 16.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 12.000000, 9.000000, 0.000000, 0.000000, 0.000000 ],
		"SV_11" : [ 0.000000, 0.000000, 5.000000, 12.000000, 13.000000, 2.000000, 0.000000, 0.000000, 0.000000, 3.000000, 16.000000, 14.000000, 16.000000, 13.000000, 1.000000, 0.000000, 0.000000, 4.000000, 16.000000, 9.000000, 16.000000, 12.000000, 1.000000, 0.000000, 0.000000, 1.000000, 9.000000, 16.000000, 15.000000, 1.000000, 0.000000, 0.000000, 0.000000, 1.000000, 13.000000, 16.000000, 16.000000, 5.000000, 0.000000, 0.000000, 0.000000, 3.000000, 16.000000, 5.000000, 12.000000, 16.000000, 0.000000, 0.000000, 0.000000, 3.000000, 15.000000, 7.000000, 14.000000, 12.000000, 0.000000, 0.000000, 0.000000, 0.000000, 6.000000, 16.000000, 13.000000, 3.000000, 0.000000, 0.000000 ],
		"SV_12" : [ 0.000000, 0.000000, 1.000000, 8.000000, 15.000000, 11.000000, 3.000000, 0.000000, 0.000000, 0.000000, 11.000000, 12.000000, 9.000000, 14.000000, 11.000000, 0.000000, 0.000000, 2.000000, 14.000000, 0.000000, 0.000000, 13.000000, 6.000000, 0.000000, 0.000000, 7.000000, 15.000000, 8.000000, 12.000000, 9.000000, 0.000000, 0.000000, 0.000000, 0.000000, 6.000000, 13.000000, 16.000000, 8.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 13.000000, 9.000000, 15.000000, 4.000000, 0.000000, 0.000000, 0.000000, 0.000000, 16.000000, 8.000000, 14.000000, 3.000000, 0.000000, 0.000000, 0.000000, 0.000000, 11.000000, 15.000000, 8.000000, 0.000000, 0.000000 ],
		"SV_13" : [ 0.000000, 0.000000, 7.000000, 13.000000, 10.000000, 1.000000, 0.000000, 0.000000, 0.000000, 1.000000, 15.000000, 3.000000, 9.000000, 10.000000, 0.000000, 0.000000, 0.000000, 3.000000, 16.000000, 4.000000, 13.000000, 11.000000, 0.000000, 0.000000, 0.000000, 0.000000, 6.000000, 12.000000, 12.000000, 16.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 12.000000, 5.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 5.000000, 11.000000, 0.000000, 0.000000, 1.000000, 11.000000, 2.000000, 0.000000, 7.000000, 11.000000, 0.000000, 0.000000, 0.000000, 7.000000, 13.000000, 16.000000, 15.000000, 4.000000, 0.000000 ],
		"SV_14" : [ 0.000000, 0.000000, 1.000000, 12.000000, 16.000000, 14.000000, 2.000000, 0.000000, 0.000000, 0.000000, 13.000000, 11.000000, 3.000000, 16.000000, 5.000000, 0.000000, 0.000000, 4.000000, 14.000000, 0.000000, 0.000000, 15.000000, 6.000000, 0.000000, 0.000000, 6.000000, 12.000000, 8.000000, 13.000000, 16.000000, 5.000000, 0.000000, 0.000000, 0.000000, 9.000000, 12.000000, 4.000000, 10.000000, 8.000000, 0.000000, 0.000000, 0.000000, 3.000000, 0.000000, 0.000000, 11.000000, 5.000000, 0.000000, 0.000000, 0.000000, 16.000000, 14.000000, 5.000000, 15.000000, 4.000000, 0.000000, 0.000000, 0.000000, 3.000000, 12.000000, 16.000000, 11.000000, 1.000000, 0.000000 ],
		"SV_15" : [ 0.000000, 1.000000, 11.000000, 13.000000, 10.000000, 1.000000, 0.000000, 0.000000, 0.000000, 8.000000, 12.000000, 3.000000, 13.000000, 10.000000, 0.000000, 0.000000, 0.000000, 8.000000, 11.000000, 2.000000, 11.000000, 16.000000, 1.000000, 0.000000, 0.000000, 1.000000, 15.000000, 16.000000, 16.000000, 16.000000, 2.000000, 0.000000, 0.000000, 0.000000, 2.000000, 8.000000, 3.000000, 9.000000, 6.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 7.000000, 9.000000, 0.000000, 0.000000, 2.000000, 12.000000, 3.000000, 0.000000, 9.000000, 12.000000, 0.000000, 0.000000, 1.000000, 9.000000, 15.000000, 16.000000, 13.000000, 3.000000, 0.000000 ]
	},
	"SupportVectorsCoefs" : {
		"SV_coef_0" : [ 0.823021, 0.850621, 0.326358, -1.000000, -1.000000, -1.000000, -1.000000, -1.000000, -0.554586, -0.823699, -0.702606, -1.000000, -1.000000, -1.000000, -1.000000, -0.701718 ],
		"SV_coef_1" : [ 0.420917, 0.535853, 0.043230, 0.498888, 0.501112, -1.000000, -1.000000, -1.000000, -0.402757, -0.870823, -0.698948, -1.000000, -1.000000, -0.628688, -0.809947, -0.561364 ],
		"SV_coef_2" : [ 0.431581, 0.513789, 0.054630, 0.460313, 0.539687, 1.000000, -1.000000, -1.000000, -0.000000, -0.608479, -0.391521, -0.386039, -0.613961, -0.325915, -0.600345, -0.073740 ],
		"SV_coef_3" : [ 0.339776, 0.650165, 0.010059, 0.471005, 0.528995, 1.000000, 1.000000, -1.000000, -0.000000, -0.732170, -0.267830, -0.525600, -0.474400, -0.151274, -0.545107, -0.303619 ],
		"SV_coef_4" : [ 0.795536, 1.000000, 0.285355, 0.972528, 1.000000, 1.000000, 1.000000, 1.000000, -0.088290, -0.420597, -0.491113, -0.448034, -0.551966, -0.320051, -0.533168, -0.146781 ],
		"SV_coef_5" : [ 0.716593, 1.000000, 0.283407, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 0.489890, 1.000000, 0.510110, -1.000000, -1.000000, -0.803704, -1.000000, -0.307673 ],
		"SV_coef_6" : [ 1.000000, 1.000000, 0.701718, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 0.932040, 0.649064, 0.530273, 1.000000, 1.000000, -0.307759, -1.000000, -0.692241 ]
	},
	"rho" : [ 0.082120, -0.576429, -0.533812, -0.591735, 0.017821, -0.208806, -0.021307, -0.578599, -0.663418, -0.599869, -0.095406, -0.054996, 0.017348, 0.000000, 0.000000, 0.633166, 0.625589, 0.554382, 0.000000, 0.656420, 0.893627, 0.642324, 0.502244, 0.610048, 0.478126, -0.231763, 0.020370, 0.266835 ],
	"nSV" : [ 3, 2, 1, 1, 1, 3, 2, 3 ],
	"probA" : [ -6.607348, 5.324748, 5.554262, 4.591659, -2.039781, 6.605371, -1.700003, 1.952958, 1.783658, 1.906840, -6.239567, 1.688748, -3.733774, 0.693147, 0.693147, 4.632849, 1.969866, 2.319304, 0.693147, 5.291907, 1.533718, 2.832031, 3.880067, 2.021508, 2.948030, 14.576571, -2.010381, 2.138195 ],
	"probB" : [ 3.278235, -5.528591, -5.734478, -4.880754, -0.015638, -3.710654, -0.054904, -1.259813, -1.092713, -1.215017, -3.061108, 0.053287, -1.653161, -0.000000, -0.000000, 4.968959, 1.291147, 2.768837, -0.000000, 5.620518, 0.841007, 3.233119, 4.257354, 1.331494, 3.335504, -8.328896, 0.085910, 1.404341 ],
	"n_iter" : [ 8, 8, 7, 6, 11, 3, 4, 2, 2, 2, 8, 2, 7, 1, 1, 2, 2, 6, 1, 2, 2, 6, 5, 2, 6, 3, 12, 3 ]
}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1, 2, 3, 4, 7, 8, 9 ],
	"dataset" : 	{
		"dataset_features" : 64,
		"dataset_rows" : 16
	},
	"metadata" :  { "model" : "Vapnik_SVC_RBF", "signature" : "ff4_il8", "version" : "2024-W13" },
	"options" :  { "C" : 1.0, "cache_size" : 300, "coef0" : 0.0, "degree" : 3, "epsilon" : 0.0, "gamma" : 0.000449, "kernel" : "rbf", "max_iter" : 128, "nu" : 0.5, "probability" : 1, "random_state" : 1789, "shrinking" : 0, "svm_type" : "c_svc", "tol" : 0.001 },
	"svm_model" : 	{
		"L" : 16,
		"SupportVectors" : 	{
			"SV_00" : [ 0.0, 0.0, 4.0, 12.0, 5.0, 0.0, 0.0, 0.0, 0.0, 0.0, 12.0, 14.0, 15.0, 7.0, 0.0, 0.0, 0.0, 2.0, 14.0, 1.0, 2.0, 16.0, 0.0, 0.0, 0.0, 4.0, 8.0, 0.0, 0.0, 10.0, 4.0, 0.0, 0.0, 7.0, 8.0, 0.0, 0.0, 6.0, 8.0, 0.0, 0.0, 4.0, 11.0, 0.0, 0.0, 5.0, 8.0, 0.0, 0.0, 0.0, 14.0, 11.0, 3.0, 13.0, 5.0, 0.0, 0.0, 0.0, 2.0, 11.0, 16.0, 11.0, 0.0, 0.0 ],
			"SV_01" : [ 0.0, 0.0, 1.0, 9.0, 15.0, 11.0, 0.0, 0.0, 0.0, 0.0, 11.0, 16.0, 8.0, 14.0, 6.0, 0.0, 0.0, 2.0, 16.0, 10.0, 0.0, 9.0, 9.0, 0.0, 0.0, 1.0, 16.0, 4.0, 0.0, 8.0, 8.0, 0.0, 0.0, 4.0, 16.0, 4.0, 0.0, 8.0, 8.0, 0.0, 0.0, 1.0, 16.0, 5.0, 1.0, 11.0, 3.0, 0.0, 0.0, 0.0, 12.0, 12.0, 10.0, 10.0, 0.0, 0.0, 0.0, 0.0, 1.0, 10.0, 13.0, 3.0, 0.0, 0.0 ],
			"SV_02" : [ 0.0, 0.0, 5.0, 12.0, 1.0, 6.0, 0.0, 0.0, 0.0, 0.0, 11.0, 12.0, 0.0, 16.0, 2.0, 0.0, 0.0, 0.0, 16.0, 5.0, 0.0, 12.0, 4.0, 0.0, 0.0, 3.0, 15.0, 0.0, 0.0, 8.0, 4.0, 0.0, 0.0, 7.0, 12.0, 0.0, 0.0, 4.0, 7.0, 0.0, 0.0, 2.0, 15.0, 1.0, 1.0, 12.0, 5.0, 0.0, 0.0, 0.0, 16.0, 11.0, 12.0, 15.0, 3.0, 0.0, 0.0, 0.0, 4.0, 12.0, 12.0, 3.0, 0.0, 0.0 ],
			"SV_03" : [ 0.0, 0.0, 11.0, 10.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 11.0, 15.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 11.0, 16.0, 5.0, 0.0, 0.0, 0.0, 0.0, 0.0, 13.0, 16.0, 11.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 7.0, 16.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 14.0, 6.0, 0.0, 0.0, 0.0, 0.0, 6.0, 10.0, 15.0, 13.0, 8.0, 3.0, 0.0, 0.0, 8.0, 16.0, 16.0, 16.0, 16.0, 12.0 ],
			"SV_04" : [ 0.0, 0.0, 0.0, 15.0, 11.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.0, 16.0, 16.0, 2.0, 0.0, 0.0, 0.0, 0.0, 10.0, 16.0, 16.0, 1.0, 0.0, 0.0, 0.0, 2.0, 16.0, 16.0, 16.0, 3.0, 0.0, 0.0, 0.0, 7.0, 16.0, 16.0, 14.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.0, 15.0, 10.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 15.0, 7.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 14.0, 4.0, 0.0, 0.0, 0.0 ],
			"SV_05" : [ 0.0, 0.0, 0.0, 3.0, 15.0, 10.0, 1.0, 0.0, 0.0, 0.0, 0.0, 11.0, 10.0, 16.0, 4.0, 0.0, 0.0, 0.0, 0.0, 12.0, 1.0, 15.0, 6.0, 0.0, 0.0, 0.0, 0.0, 3.0, 4.0, 15.0, 4.0, 0.0, 0.0, 0.0, 0.0, 6.0, 15.0, 6.0, 0.0, 0.0, 0.0, 4.0, 15.0, 16.0, 9.0, 0.0, 0.0, 0.0, 0.0, 0.0, 13.0, 16.0, 15.0, 9.0, 3.0, 0.0, 0.0, 0.0, 0.0, 4.0, 9.0, 14.0, 7.0, 0.0 ],
			"SV_06" : [ 0.0, 0.0, 5.0, 13.0, 16.0, 10.0, 1.0, 0.0, 0.0, 7.0, 16.0, 16.0, 16.0, 16.0, 7.0, 0.0, 0.0, 0.0, 5.0, 2.0, 11.0, 14.0, 5.0, 0.0, 0.0, 0.0, 0.0, 10.0, 15.0, 6.0, 0.0, 0.0, 0.0, 0.0, 9.0, 16.0, 13.0, 2.0, 0.0, 0.0, 0.0, 0.0, 4.0, 11.0, 15.0, 14.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 13.0, 16.0, 1.0, 0.0, 0.0, 0.0, 5.0, 14.0, 15.0, 9.0, 0.0, 0.0 ],
			"SV_07" : [ 0.0, 0.0, 0.0, 3.0, 14.0, 9.0, 0.0, 0.0, 0.0, 0.0, 0.0, 13.0, 11.0, 1.0, 0.0, 0.0, 0.0, 0.0, 9.0, 14.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.0, 16.0, 4.0, 0.0, 4.0, 2.0, 0.0, 0.0, 12.0, 12.0, 7.0, 14.0, 16.0, 10.0, 0.0, 0.0, 13.0, 16.0, 14.0, 11.0, 16.0, 4.0, 0.0, 0.0, 2.0, 2.0, 0.0, 11.0, 13.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.0, 16.0, 9.0, 0.0, 0.0 ],
			"SV_08" : [ 0.0, 0.0, 2.0, 13.0, 16.0, 13.0, 4.0, 0.0, 0.0, 0.0, 9.0, 11.0, 9.0, 16.0, 7.0, 0.0, 0.0, 2.0, 15.0, 2.0, 2.0, 15.0, 2.0, 0.0, 0.0, 3.0, 3.0, 0.0, 8.0, 13.0, 2.0, 0.0, 0.0, 0.0, 1.0, 13.0, 16.0, 16.0, 10.0, 0.0, 0.0, 0.0, 0.0, 11.0, 13.0, 5.0, 1.0, 0.0, 0.0, 0.0, 0.0, 11.0, 6.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.0, 15.0, 2.0, 0.0, 0.0, 0.0 ],
			"SV_09" : [ 0.0, 0.0, 2.0, 13.0, 16.0, 14.0, 1.0, 0.0, 0.0, 0.0, 11.0, 12.0, 7.0, 16.0, 3.0, 0.0, 0.0, 0.0, 9.0, 3.0, 2.0, 16.0, 3.0, 0.0, 0.0, 0.0, 0.0, 0.0, 9.0, 11.0, 0.0, 0.0, 0.0, 0.0, 2.0, 11.0, 15.0, 13.0, 3.0, 0.0, 0.0, 0.0, 4.0, 15.0, 16.0, 13.0, 3.0, 0.0, 0.0, 0.0, 0.0, 14.0, 8.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 15.0, 4.0, 0.0, 0.0, 0.0 ],
			"SV_10" : [ 0.0, 0.0, 0.0, 8.0, 16.0, 16.0, 16.0, 6.0, 0.0, 0.0, 6.0, 14.0, 5.0, 8.0, 16.0, 2.0, 0.0, 0.0, 7.0, 4.0, 0.0, 6.0, 12.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 12.0, 6.0, 0.0, 0.0, 0.0, 0.0, 11.0, 16.0, 16.0, 10.0, 0.0, 0.0, 0.0, 0.0, 12.0, 16.0, 8.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.0, 16.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 12.0, 9.0, 0.0, 0.0, 0.0 ],
			"SV_11" : [ 0.0, 0.0, 5.0, 12.0, 13.0, 2.0, 0.0, 0.0, 0.0, 3.0, 16.0, 14.0, 16.0, 13.0, 1.0, 0.0, 0.0, 4.0, 16.0, 9.0, 16.0, 12.0, 1.0, 0.0, 0.0, 1.0, 9.0, 16.0, 15.0, 1.0, 0.0, 0.0, 0.0, 1.0, 13.0, 16.0, 16.0, 5.0, 0.0, 0.0, 0.0, 3.0, 16.0, 5.0, 12.0, 16.0, 0.0, 0.0, 0.0, 3.0, 15.0, 7.0, 14.0, 12.0, 0.0, 0.0, 0.0, 0.0, 6.0, 16.0, 13.0, 3.0, 0.0, 0.0 ],
			"SV_12" : [ 0.0, 0.0, 1.0, 8.0, 15.0, 11.0, 3.0, 0.0, 0.0, 0.0, 11.0, 12.0, 9.0, 14.0, 11.0, 0.0, 0.0, 2.0, 14.0, 0.0, 0.0, 13.0, 6.0, 0.0, 0.0, 7.0, 15.0, 8.0, 12.0, 9.0, 0.0, 0.0, 0.0, 0.0, 6.0, 13.0, 16.0, 8.0, 0.0, 0.0, 0.0, 0.0, 0.0, 13.0, 9.0, 15.0, 4.0, 0.0, 0.0, 0.0, 0.0, 16.0, 8.0, 14.0, 3.0, 0.0, 0.0, 0.0, 0.0, 11.0, 15.0, 8.0, 0.0, 0.0 ],
			"SV_13" : [ 0.0, 0.0, 7.0, 13.0, 10.0, 1.0, 0.0, 0.0, 0.0, 1.0, 15.0, 3.0, 9.0, 10.0, 0.0, 0.0, 0.0, 3.0, 16.0, 4.0, 13.0, 11.0, 0.0, 0.0, 0.0, 0.0, 6.0, 12.0, 12.0, 16.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 12.0, 5.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 11.0, 0.0, 0.0, 1.0, 11.0, 2.0, 0.0, 7.0, 11.0, 0.0, 0.0, 0.0, 7.0, 13.0, 16.0, 15.0, 4.0, 0.0 ],
			"SV_14" : [ 0.0, 0.0, 1.0, 12.0, 16.0, 14.0, 2.0, 0.0, 0.0, 0.0, 13.0, 11.0, 3.0, 16.0, 5.0, 0.0, 0.0, 4.0, 14.0, 0.0, 0.0, 15.0, 6.0, 0.0, 0.0, 6.0, 12.0, 8.0, 13.0, 16.0, 5.0, 0.0, 0.0, 0.0, 9.0, 12.0, 4.0, 10.0, 8.0, 0.0, 0.0, 0.0, 3.0, 0.0, 0.0, 11.0, 5.0, 0.0, 0.0, 0.0, 16.0, 14.0, 5.0, 15.0, 4.0, 0.0, 0.0, 0.0, 3.0, 12.0, 16.0, 11.0, 1.0, 0.0 ],
			"SV_15" : [ 0.0, 1.0, 11.0, 13.0, 10.0, 1.0, 0.0, 0.0, 0.0, 8.0, 12.0, 3.0, 13.0, 10.0, 0.0, 0.0, 0.0, 8.0, 11.0, 2.0, 11.0, 16.0, 1.0, 0.0, 0.0, 1.0, 15.0, 16.0, 16.0, 16.0, 2.0, 0.0, 0.0, 0.0, 2.0, 8.0, 3.0, 9.0, 6.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 7.0, 9.0, 0.0, 0.0, 2.0, 12.0, 3.0, 0.0, 9.0, 12.0, 0.0, 0.0, 1.0, 9.0, 15.0, 16.0, 13.0, 3.0, 0.0 ]
		},
		"SupportVectorsCoefs" : 	{
			"SV_coef_0" : [ 0.823021, 0.850621, 0.326358, -1.0, -1.0, -1.0, -1.0, -1.0, -0.554586, -0.823699, -0.702606, -1.0, -1.0, -1.0, -1.0, -0.701718 ],
			"SV_coef_1" : [ 0.420917, 0.535853, 0.04323, 0.498888, 0.501112, -1.0, -1.0, -1.0, -0.402757, -0.870823, -0.698948, -1.0, -1.0, -0.628688, -0.809947, -0.561364 ],
			"SV_coef_2" : [ 0.431581, 0.513789, 0.05463, 0.460313, 0.539687, 1.0, -1.0, -1.0, -0.0, -0.608479, -0.391521, -0.386039, -0.613961, -0.325915, -0.600345, -0.07374 ],
			"SV_coef_3" : [ 0.339776, 0.650165, 0.010059, 0.471005, 0.528995, 1.0, 1.0, -1.0, -0.0, -0.73217, -0.26783, -0.5256, -0.4744, -0.151274, -0.545107, -0.303619 ],
			"SV_coef_4" : [ 0.795536, 1.0, 0.285355, 0.972528, 1.0, 1.0, 1.0, 1.0, -0.08829, -0.420597, -0.491113, -0.448034, -0.551966, -0.320051, -0.533168, -0.146781 ],
			"SV_coef_5" : [ 0.716593, 1.0, 0.283407, 1.0, 1.0, 1.0, 1.0, 1.0, 0.48989, 1.0, 0.51011, -1.0, -1.0, -0.803704, -1.0, -0.307673 ],
			"SV_coef_6" : [ 1.0, 1.0, 0.701718, 1.0, 1.0, 1.0, 1.0, 1.0, 0.93204, 0.649064, 0.530273, 1.0, 1.0, -0.307759, -1.0, -0.692241 ]
		},
		"classes" : 8,
		"nSV" : [ 3, 2, 1, 1, 1, 3, 2, 3 ],
		"n_iter" : [ 8, 8, 7, 6, 11, 3, 4, 2, 2, 2, 8, 2, 7, 1, 1, 2, 2, 6, 1, 2, 2, 6, 5, 2, 6, 3, 12, 3 ],
		"probA" : [ -6.607348, 5.324748, 5.554262, 4.591659, -2.039781, 6.605371, -1.700003, 1.952958, 1.783658, 1.90684, -6.239567, 1.688748, -3.733774, 0.693147, 0.693147, 4.632849, 1.969866, 2.319304, 0.693147, 5.291907, 1.533718, 2.832031, 3.880067, 2.021508, 2.94803, 14.576571, -2.010381, 2.138195 ],
		"probB" : [ 3.278235, -5.528591, -5.734478, -4.880754, -0.015638, -3.710654, -0.054904, -1.259813, -1.092713, -1.215017, -3.061108, 0.053287, -1.653161, -0.0, -0.0, 4.968959, 1.291147, 2.768837, -0.0, 5.620518, 0.841007, 3.233119, 4.257354, 1.331494, 3.335504, -8.328896, 0.08591, 1.404341 ],
		"rho" : [ 0.08212, -0.576429, -0.533812, -0.591735, 0.017821, -0.208806, -0.021307, -0.578599, -0.663418, -0.599869, -0.095406, -0.054996, 0.017348, 0.0, 0.0, 0.633166, 0.625589, 0.554382, 0.0, 0.65642, 0.893627, 0.642324, 0.502244, 0.610048, 0.478126, -0.231763, 0.02037, 0.266835 ]
	}
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0.0629 0.0858 0.1037 0.1263 0.1178 0.2414 0.1157 0.1463]
 [0.0461 0.0544 0.1438 0.0823 0.0774 0.1083 0.0635 0.4244]
 [0.0554 0.0879 0.1976 0.1072 0.1055 0.2315 0.0725 0.1424]
 [0.0504 0.141  0.1361 0.0937 0.2001 0.0979 0.0536 0.2271]
 [0.0475 0.1224 0.2007 0.0708 0.1089 0.1383 0.0527 0.2587]
 [0.0637 0.1259 0.1373 0.0831 0.1264 0.2541 0.0711 0.1384]
 [0.048  0.231  0.1304 0.0898 0.1284 0.12   0.053  0.1994]
 [0.0341 0.1546 0.0649 0.0683 0.0491 0.1326 0.0935 0.4028]
 [0.0957 0.1038 0.151  0.1041 0.1128 0.1237 0.0664 0.2425]
 [0.0444 0.1237 0.142  0.0963 0.1426 0.1317 0.0583 0.261 ]
 [0.0612 0.1032 0.1297 0.1955 0.0663 0.1553 0.1222 0.1665]
 [0.056  0.0777 0.1215 0.0777 0.1673 0.2218 0.0644 0.2135]
 [0.0471 0.1413 0.1371 0.0924 0.2017 0.0978 0.054  0.2287]
 [0.0403 0.1127 0.1246 0.1294 0.1224 0.1226 0.1027 0.2453]
 [0.0578 0.2177 0.081  0.0851 0.0469 0.2039 0.0765 0.2311]
 [0.0581 0.2226 0.0835 0.0873 0.0499 0.1901 0.0803 0.2281]]
(16, 8)
(16, 8) float32
MODEL_PERFS {'class_name': 'mllite.SVC', 'model_name': 'SVC', 'options': None, 'dataset': 'digits_tiny', 'size': 16, 'accuracy': 0.8125, 'auc': 0.26389652014652015}
WRITING_PERF_CODE 'logs/auto_tests/classification/SVC/mllite.SVC_digits_tiny.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.SVC', 'model_name': 'SVC', 'options': None, 'dataset': 'digits_tiny', 'training_time_in_sec': 0.027, 'prediction_time_in_sec': 0.0}
WRITING_SQL_CODE 'logs/auto_tests/classification/SVC/mllite.SVC_digits_tiny_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('digits_tiny', 'SVC', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('digits_tiny', 'SVC', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('digits_tiny', 'SVC', 'duckdb')
ore_4" AS "Score_4",
  arg_max_cte."Proba_4" AS "Proba_4",
  CASE WHEN (arg_max_cte."Proba_4" IS NULL OR arg_max_cte."Proba_4" > 0.0) THEN LN( arg_max_cte."Proba_4" ) ELSE -1.79769313486231e+308 END AS "LogProba_4",
  arg_max_cte."Score_5" AS "Score_5",
  arg_max_cte."Proba_5" AS "Proba_5",
  CASE WHEN (arg_max_cte."Proba_5" IS NULL OR arg_max_cte."Proba_5" > 0.0) THEN LN( arg_max_cte."Proba_5" ) ELSE -1.79769313486231e+308 END AS "LogProba_5",
  arg_max_cte."Score_6" AS "Score_6",
  arg_max_cte."Proba_6" AS "Proba_6",
  CASE WHEN (arg_max_cte."Proba_6" IS NULL OR arg_max_cte."Proba_6" > 0.0) THEN LN( arg_max_cte."Proba_6" ) ELSE -1.79769313486231e+308 END AS "LogProba_6",
  arg_max_cte."Score_7" AS "Score_7",
  arg_max_cte."Proba_7" AS "Proba_7",
  CASE WHEN (arg_max_cte."Proba_7" IS NULL OR arg_max_cte."Proba_7" > 0.0) THEN LN( arg_max_cte."Proba_7" ) ELSE -1.79769313486231e+308 END AS "LogProba_7",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('digits_tiny', 'SVC', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 16 entries, 0 to 15
Data columns (total 64 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     16 non-null     float32
 1   X_1     16 non-null     float32
 2   X_2     16 non-null     float32
 3   X_3     16 non-null     float32
 4   X_4     16 non-null     float32
 5   X_5     16 non-null     float32
 6   X_6     16 non-null     float32
 7   X_7     16 non-null     float32
 8   X_8     16 non-null     float32
 9   X_9     16 non-null     float32
 10  X_10    16 non-null     float32
 11  X_11    16 non-null     float32
 12  X_12    16 non-null     float32
 13  X_13    16 non-null     float32
 14  X_14    16 non-null     float32
 15  X_15    16 non-null     float32
 16  X_16    16 non-null     float32
 17  X_17    16 non-null     float32
 18  X_18    16 non-null     float32
 19  X_19    16 non-null     float32
 20  X_20    16 non-null     float32
 21  X_21    16 non-null     float32
 22  X_22    16 non-null     float32
 23  X_23    16 non-null     float32
 24  X_24    16 non-null     float32
 25  X_25    16 non-null     float32
 26  X_26    16 non-null     float32
 27  X_27    16 non-null     float32
 28  X_28    16 non-null     float32
 29  X_29    16 non-null     float32
 30  X_30    16 non-null     float32
 31  X_31    16 non-null     float32
 32  X_32    16 non-null     float32
 33  X_33    16 non-null     float32
 34  X_34    16 non-null     float32
 35  X_35    16 non-null     float32
 36  X_36    16 non-null     float32
 37  X_37    16 non-null     float32
 38  X_38    16 non-null     float32
 39  X_39    16 non-null     float32
 40  X_40    16 non-null     float32
 41  X_41    16 non-null     float32
 42  X_42    16 non-null     float32
 43  X_43    16 non-null     float32
 44  X_44    16 non-null     float32
 45  X_45    16 non-null     float32
 46  X_46    16 non-null     float32
 47  X_47    16 non-null     float32
 48  X_48    16 non-null     float32
 49  X_49    16 non-null     float32
 50  X_50    16 non-null     float32
 51  X_51    16 non-null     float32
 52  X_52    16 non-null     float32
 53  X_53    16 non-null     float32
 54  X_54    16 non-null     float32
 55  X_55    16 non-null     float32
 56  X_56    16 non-null     float32
 57  X_57    16 non-null     float32
 58  X_58    16 non-null     float32
 59  X_59    16 non-null     float32
 60  X_60    16 non-null     float32
 61  X_61    16 non-null     float32
 62  X_62    16 non-null     float32
 63  X_63    16 non-null     float32
dtypes: float32(64)
memory usage: 4.1 KB
       X_0  X_1   X_2   X_3   X_4   X_5  ...  X_58  X_59  X_60  X_61  X_62  X_63
index                                    ...                                    
0      0.0  0.0   0.0   3.0  15.0  10.0  ...   0.0   4.0   9.0  14.0   7.0   0.0
1      0.0  0.0  11.0  10.0   0.0   0.0  ...   8.0  16.0  16.0  16.0  16.0  12.0
2      0.0  0.0   0.0  15.0  11.0   0.0  ...   0.0  14.0   4.0   0.0   0.0   0.0
3      0.0  0.0   7.0  13.0  10.0   1.0  ...   7.0  13.0  16.0  15.0   4.0   0.0
4      0.0  0.0   5.0  12.0  13.0   2.0  ...   6.0  16.0  13.0   3.0   0.0   0.0
5      0.0  0.0   1.0   8.0  15.0  11.0  ...   0.0  11.0  15.0   8.0   0.0   0.0
6      0.0  0.0   2.0  13.0  16.0  13.0  ...   3.0  15.0   2.0   0.0   0.0   0.0
7      0.0  0.0   4.0  12.0   5.0   0.0  ...   2.0  11.0  16.0  11.0   0.0   0.0
8      0.0  0.0   1.0  12.0  16.0  14.0  ...   3.0  12.0  16.0  11.0   1.0   0.0
9      0.0  0.0   2.0  13.0  16.0  14.0  ...   5.0  15.0   4.0   0.0   0.0   0.0
10     0.0  0.0   0.0   3.0  14.0   9.0  ...   0.0   3.0  16.0   9.0   0.0   0.0
11     0.0  0.0   5.0  13.0  16.0  10.0  ...   5.0  14.0  15.0   9.0   0.0   0.0
12     0.0  1.0  11.0  13.0  10.0   1.0  ...   9.0  15.0  16.0  13.0   3.0   0.0
13     0.0  0.0   0.0   8.0  16.0  16.0  ...   0.0  12.0   9.0   0.0   0.0   0.0
14     0.0  0.0   1.0   9.0  15.0  11.0  ...   1.0  10.0  13.0   3.0   0.0   0.0
15     0.0  0.0   5.0  12.0   1.0   6.0  ...   4.0  12.0  12.0   3.0   0.0   0.0

[16 rows x 64 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 16 entries, 0 to 15
Data columns (total 27 columns):
 #   Column         Non-Null Count  Dtype 
---  ------         --------------  ----- 
 0   index          16 non-null     int64 
 1   Score_0        16 non-null     int64 
 2   Proba_0        0 non-null      object
 3   LogProba_0     0 non-null      object
 4   Score_1        16 non-null     int64 
 5   Proba_1        0 non-null      object
 6   LogProba_1     0 non-null      object
 7   Score_2        16 non-null     int64 
 8   Proba_2        0 non-null      object
 9   LogProba_2     0 non-null      object
 10  Score_3        16 non-null     int64 
 11  Proba_3        0 non-null      object
 12  LogProba_3     0 non-null      object
 13  Score_4        16 non-null     int64 
 14  Proba_4        0 non-null      object
 15  LogProba_4     0 non-null      object
 16  Score_5        16 non-null     int64 
 17  Proba_5        0 non-null      object
 18  LogProba_5     0 non-null      object
 19  Score_6        16 non-null     int64 
 20  Proba_6        0 non-null      object
 21  LogProba_6     0 non-null      object
 22  Score_7        16 non-null     int64 
 23  Proba_7        0 non-null      object
 24  LogProba_7     0 non-null      object
 25  Decision       0 non-null      object
 26  DecisionProba  0 non-null      object
dtypes: int64(9), object(18)
memory usage: 3.5+ KB
    index  Score_0 Proba_0 LogProba_0  ...  Proba_7 LogProba_7 Decision  DecisionProba
0       0        7    None       None  ...     None       None     None           None
1       1        7    None       None  ...     None       None     None           None
2       2        7    None       None  ...     None       None     None           None
3       3        7    None       None  ...     None       None     None           None
4       4        7    None       None  ...     None       None     None           None
5       5        7    None       None  ...     None       None     None           None
6       6        7    None       None  ...     None       None     None           None
7       7        7    None       None  ...     None       None     None           None
8       8        7    None       None  ...     None       None     None           None
9       9        7    None       None  ...     None       None     None           None
10     10        7    None       None  ...     None       None     None           None
11     11        7    None       None  ...     None       None     None           None
12     12        7    None       None  ...     None       None     None           None
13     13        7    None       None  ...     None       None     None           None
14     14        7    None       None  ...     None       None     None           None
15     15        7    None       None  ...     None       None     None           None

[16 rows x 27 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Score_3', 'Proba_3',
       'LogProba_3', 'Score_4', 'Proba_4', 'LogProba_4', 'Score_5', 'Proba_5',
       'LogProba_5', 'Score_6', 'Proba_6', 'LogProba_6', 'Score_7', 'Proba_7',
       'LogProba_7', 'Decision', 'DecisionProba'],
      dtype='object')
    index  Score_0 SQL_Proba_0  ... Py_Proba_6  Py_Proba_7 Py_Decision
0       0        7        None  ...   0.115725    0.146276           7
1       1        7        None  ...   0.063463    0.424354           1
2       2        7        None  ...   0.072488    0.142378           1
3       3        7        None  ...   0.053624    0.227128           9
4       4        7        None  ...   0.052706    0.258742           8
5       5        7        None  ...   0.071111    0.138406           8
6       6        7        None  ...   0.052987    0.199424           7
7       7        7        None  ...   0.093498    0.402785           0
8       8        7        None  ...   0.066398    0.242525           9
9       9        7        None  ...   0.058270    0.260989           7
10     10        7        None  ...   0.122223    0.166509           0
11     11        7        None  ...   0.064375    0.213468           8
12     12        7        None  ...   0.054001    0.228712           9
13     13        7        None  ...   0.102656    0.245335           7
14     14        7        None  ...   0.076542    0.231106           0
15     15        7        None  ...   0.080282    0.228126           0

[16 rows x 36 columns]
MLLITE_CLASS_SQL_ERROR ('digits_tiny', 'SVC', 'duckdb') ('Py_Proba_0', 'SQL_Proba_0') nan
    Py_Proba_0 SQL_Proba_0 SQL_Error_0
0     0.062888        None         NaN
1     0.046071        None         NaN
2     0.055425        None         NaN
3     0.050440        None         NaN
4     0.047542        None         NaN
5     0.063681        None         NaN
6     0.048001        None         NaN
7     0.034128        None         NaN
8     0.095702        None         NaN
9     0.044360        None         NaN
10    0.061219        None         NaN
11    0.056011        None         NaN
12    0.047134        None         NaN
13    0.040323        None         NaN
14    0.057804        None         NaN
15    0.058146        None         NaN
MLLITE_CLASS_SQL_ERROR ('digits_tiny', 'SVC', 'duckdb') ('Py_Proba_1', 'SQL_Proba_1') nan
    Py_Proba_1 SQL_Proba_1 SQL_Error_1
0     0.085825        None         NaN
1     0.054427        None         NaN
2     0.087941        None         NaN
3     0.140978        None         NaN
4     0.122355        None         NaN
5     0.125868        None         NaN
6     0.230962        None         NaN
7     0.154649        None         NaN
8     0.103794        None         NaN
9     0.123744        None         NaN
10    0.103214        None         NaN
11    0.077729        None         NaN
12    0.141261        None         NaN
13    0.112653        None         NaN
14    0.217671        None         NaN
15    0.222603        None         NaN
MLLITE_CLASS_SQL_ERROR ('digits_tiny', 'SVC', 'duckdb') ('Py_Proba_2', 'SQL_Proba_2') nan
    Py_Proba_2 SQL_Proba_2 SQL_Error_2
0     0.103733        None         NaN
1     0.143760        None         NaN
2     0.197605        None         NaN
3     0.136140        None         NaN
4     0.200682        None         NaN
5     0.137273        None         NaN
6     0.130441        None         NaN
7     0.064947        None         NaN
8     0.151034        None         NaN
9     0.142032        None         NaN
10    0.129738        None         NaN
11    0.121541        None         NaN
12    0.137052        None         NaN
13    0.124570        None         NaN
14    0.081011        None         NaN
15    0.083497        None         NaN
MLLITE_CLASS_SQL_ERROR ('digits_tiny', 'SVC', 'duckdb') ('Py_Proba_3', 'SQL_Proba_3') nan
    Py_Proba_3 SQL_Proba_3 SQL_Error_3
0     0.126337        None         NaN
1     0.082252        None         NaN
2     0.107214        None         NaN
3     0.093684        None         NaN
4     0.070838        None         NaN
5     0.083077        None         NaN
6     0.089819        None         NaN
7     0.068340        None         NaN
8     0.104117        None         NaN
9     0.096273        None         NaN
10    0.195511        None         NaN
11    0.077699        None         NaN
12    0.092397        None         NaN
13    0.129417        None         NaN
14    0.085094        None         NaN
15    0.087344        None         NaN
MLLITE_CLASS_SQL_ERROR ('digits_tiny', 'SVC', 'duckdb') ('Py_Proba_4', 'SQL_Proba_4') nan
    Py_Proba_4 SQL_Proba_4 SQL_Error_4
0     0.117835        None         NaN
1     0.077361        None         NaN
2     0.105497        None         NaN
3     0.200091        None         NaN
4     0.108870        None         NaN
5     0.126446        None         NaN
6     0.128416        None         NaN
7     0.049056        None         NaN
8     0.112757        None         NaN
9     0.142605        None         NaN
10    0.066252        None         NaN
11    0.167342        None         NaN
12    0.201683        None         NaN
13    0.122432        None         NaN
14    0.046901        None         NaN
15    0.049897        None         NaN
MLLITE_CLASS_SQL_ERROR ('digits_tiny', 'SVC', 'duckdb') ('Py_Proba_5', 'SQL_Proba_5') nan
    Py_Proba_5 SQL_Proba_5 SQL_Error_5
0     0.241381        None         NaN
1     0.108312        None         NaN
2     0.231451        None         NaN
3     0.097916        None         NaN
4     0.138264        None         NaN
5     0.254138        None         NaN
6     0.119951        None         NaN
7     0.132597        None         NaN
8     0.123674        None         NaN
9     0.131726        None         NaN
10    0.155334        None         NaN
11    0.221835        None         NaN
12    0.097760        None         NaN
13    0.122613        None         NaN
14    0.203872        None         NaN
15    0.190104        None         NaN
MLLITE_CLASS_SQL_ERROR ('digits_tiny', 'SVC', 'duckdb') ('Py_Proba_6', 'SQL_Proba_6') nan
    Py_Proba_6 SQL_Proba_6 SQL_Error_6
0     0.115725        None         NaN
1     0.063463        None         NaN
2     0.072488        None         NaN
3     0.053624        None         NaN
4     0.052706        None         NaN
5     0.071111        None         NaN
6     0.052987        None         NaN
7     0.093498        None         NaN
8     0.066398        None         NaN
9     0.058270        None         NaN
10    0.122223        None         NaN
11    0.064375        None         NaN
12    0.054001        None         NaN
13    0.102656        None         NaN
14    0.076542        None         NaN
15    0.080282        None         NaN
MLLITE_CLASS_SQL_ERROR ('digits_tiny', 'SVC', 'duckdb') ('Py_Proba_7', 'SQL_Proba_7') nan
    Py_Proba_7 SQL_Proba_7 SQL_Error_7
0     0.146276        None         NaN
1     0.424354        None         NaN
2     0.142378        None         NaN
3     0.227128        None         NaN
4     0.258742        None         NaN
5     0.138406        None         NaN
6     0.199424        None         NaN
7     0.402785        None         NaN
8     0.242525        None         NaN
9     0.260989        None         NaN
10    0.166509        None         NaN
11    0.213468        None         NaN
12    0.228712        None         NaN
13    0.245335        None         NaN
14    0.231106        None         NaN
15    0.228126        None         NaN
MLLITE_CLASS_SQL_EXECUTION_STATUS ('digits_tiny', 'SVC', 'duckdb', 'Success')
    Py_Decision SQL_Decision
0             7         None
1             1         None
2             1         None
3             9         None
4             8         None
5             8         None
6             7         None
7             0         None
8             9         None
9             7         None
10            0         None
11            8         None
12            9         None
13            7         None
14            0         None
15            0         None
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/SVC/mllite.SVC_digits_tiny_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('digits_tiny', 'SVC', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('digits_tiny', 'SVC', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('digits_tiny', 'SVC', 'sqlite')
ore_4" AS "Score_4",
  arg_max_cte."Proba_4" AS "Proba_4",
  CASE WHEN (arg_max_cte."Proba_4" IS NULL OR arg_max_cte."Proba_4" > 0.0) THEN LN( arg_max_cte."Proba_4" ) ELSE -1.79769313486231e+308 END AS "LogProba_4",
  arg_max_cte."Score_5" AS "Score_5",
  arg_max_cte."Proba_5" AS "Proba_5",
  CASE WHEN (arg_max_cte."Proba_5" IS NULL OR arg_max_cte."Proba_5" > 0.0) THEN LN( arg_max_cte."Proba_5" ) ELSE -1.79769313486231e+308 END AS "LogProba_5",
  arg_max_cte."Score_6" AS "Score_6",
  arg_max_cte."Proba_6" AS "Proba_6",
  CASE WHEN (arg_max_cte."Proba_6" IS NULL OR arg_max_cte."Proba_6" > 0.0) THEN LN( arg_max_cte."Proba_6" ) ELSE -1.79769313486231e+308 END AS "LogProba_6",
  arg_max_cte."Score_7" AS "Score_7",
  arg_max_cte."Proba_7" AS "Proba_7",
  CASE WHEN (arg_max_cte."Proba_7" IS NULL OR arg_max_cte."Proba_7" > 0.0) THEN LN( arg_max_cte."Proba_7" ) ELSE -1.79769313486231e+308 END AS "LogProba_7",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('digits_tiny', 'SVC', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 16 entries, 0 to 15
Data columns (total 64 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     16 non-null     float32
 1   X_1     16 non-null     float32
 2   X_2     16 non-null     float32
 3   X_3     16 non-null     float32
 4   X_4     16 non-null     float32
 5   X_5     16 non-null     float32
 6   X_6     16 non-null     float32
 7   X_7     16 non-null     float32
 8   X_8     16 non-null     float32
 9   X_9     16 non-null     float32
 10  X_10    16 non-null     float32
 11  X_11    16 non-null     float32
 12  X_12    16 non-null     float32
 13  X_13    16 non-null     float32
 14  X_14    16 non-null     float32
 15  X_15    16 non-null     float32
 16  X_16    16 non-null     float32
 17  X_17    16 non-null     float32
 18  X_18    16 non-null     float32
 19  X_19    16 non-null     float32
 20  X_20    16 non-null     float32
 21  X_21    16 non-null     float32
 22  X_22    16 non-null     float32
 23  X_23    16 non-null     float32
 24  X_24    16 non-null     float32
 25  X_25    16 non-null     float32
 26  X_26    16 non-null     float32
 27  X_27    16 non-null     float32
 28  X_28    16 non-null     float32
 29  X_29    16 non-null     float32
 30  X_30    16 non-null     float32
 31  X_31    16 non-null     float32
 32  X_32    16 non-null     float32
 33  X_33    16 non-null     float32
 34  X_34    16 non-null     float32
 35  X_35    16 non-null     float32
 36  X_36    16 non-null     float32
 37  X_37    16 non-null     float32
 38  X_38    16 non-null     float32
 39  X_39    16 non-null     float32
 40  X_40    16 non-null     float32
 41  X_41    16 non-null     float32
 42  X_42    16 non-null     float32
 43  X_43    16 non-null     float32
 44  X_44    16 non-null     float32
 45  X_45    16 non-null     float32
 46  X_46    16 non-null     float32
 47  X_47    16 non-null     float32
 48  X_48    16 non-null     float32
 49  X_49    16 non-null     float32
 50  X_50    16 non-null     float32
 51  X_51    16 non-null     float32
 52  X_52    16 non-null     float32
 53  X_53    16 non-null     float32
 54  X_54    16 non-null     float32
 55  X_55    16 non-null     float32
 56  X_56    16 non-null     float32
 57  X_57    16 non-null     float32
 58  X_58    16 non-null     float32
 59  X_59    16 non-null     float32
 60  X_60    16 non-null     float32
 61  X_61    16 non-null     float32
 62  X_62    16 non-null     float32
 63  X_63    16 non-null     float32
dtypes: float32(64)
memory usage: 4.1 KB
       X_0  X_1   X_2   X_3   X_4   X_5  ...  X_58  X_59  X_60  X_61  X_62  X_63
index                                    ...                                    
0      0.0  0.0   0.0   3.0  15.0  10.0  ...   0.0   4.0   9.0  14.0   7.0   0.0
1      0.0  0.0  11.0  10.0   0.0   0.0  ...   8.0  16.0  16.0  16.0  16.0  12.0
2      0.0  0.0   0.0  15.0  11.0   0.0  ...   0.0  14.0   4.0   0.0   0.0   0.0
3      0.0  0.0   7.0  13.0  10.0   1.0  ...   7.0  13.0  16.0  15.0   4.0   0.0
4      0.0  0.0   5.0  12.0  13.0   2.0  ...   6.0  16.0  13.0   3.0   0.0   0.0
5      0.0  0.0   1.0   8.0  15.0  11.0  ...   0.0  11.0  15.0   8.0   0.0   0.0
6      0.0  0.0   2.0  13.0  16.0  13.0  ...   3.0  15.0   2.0   0.0   0.0   0.0
7      0.0  0.0   4.0  12.0   5.0   0.0  ...   2.0  11.0  16.0  11.0   0.0   0.0
8      0.0  0.0   1.0  12.0  16.0  14.0  ...   3.0  12.0  16.0  11.0   1.0   0.0
9      0.0  0.0   2.0  13.0  16.0  14.0  ...   5.0  15.0   4.0   0.0   0.0   0.0
10     0.0  0.0   0.0   3.0  14.0   9.0  ...   0.0   3.0  16.0   9.0   0.0   0.0
11     0.0  0.0   5.0  13.0  16.0  10.0  ...   5.0  14.0  15.0   9.0   0.0   0.0
12     0.0  1.0  11.0  13.0  10.0   1.0  ...   9.0  15.0  16.0  13.0   3.0   0.0
13     0.0  0.0   0.0   8.0  16.0  16.0  ...   0.0  12.0   9.0   0.0   0.0   0.0
14     0.0  0.0   1.0   9.0  15.0  11.0  ...   1.0  10.0  13.0   3.0   0.0   0.0
15     0.0  0.0   5.0  12.0   1.0   6.0  ...   4.0  12.0  12.0   3.0   0.0   0.0

[16 rows x 64 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
MODEL_SQL_EXECUTION_FAILED ('digits_tiny', 'SVC', 'sqlite', '(sqlite3.OperationalError) no such function: ANY_VALUE')
WRITING_SQL_CODE 'logs/auto_tests/classification/SVC/mllite.SVC_digits_tiny_pgsql.sql'



SQL_OUT_PUT_FIRST_LINES_START ('digits_tiny', 'SVC', 'pgsql')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('digits_tiny', 'SVC', 'pgsql')
SQL_OUT_PUT_LAST_LINES_START ('digits_tiny', 'SVC', 'pgsql')
ore_4" AS "Score_4",
  arg_max_cte."Proba_4" AS "Proba_4",
  CASE WHEN (arg_max_cte."Proba_4" IS NULL OR arg_max_cte."Proba_4" > 0.0) THEN LN( arg_max_cte."Proba_4" ) ELSE -1.79769313486231e+308 END AS "LogProba_4",
  arg_max_cte."Score_5" AS "Score_5",
  arg_max_cte."Proba_5" AS "Proba_5",
  CASE WHEN (arg_max_cte."Proba_5" IS NULL OR arg_max_cte."Proba_5" > 0.0) THEN LN( arg_max_cte."Proba_5" ) ELSE -1.79769313486231e+308 END AS "LogProba_5",
  arg_max_cte."Score_6" AS "Score_6",
  arg_max_cte."Proba_6" AS "Proba_6",
  CASE WHEN (arg_max_cte."Proba_6" IS NULL OR arg_max_cte."Proba_6" > 0.0) THEN LN( arg_max_cte."Proba_6" ) ELSE -1.79769313486231e+308 END AS "LogProba_6",
  arg_max_cte."Score_7" AS "Score_7",
  arg_max_cte."Proba_7" AS "Proba_7",
  CASE WHEN (arg_max_cte."Proba_7" IS NULL OR arg_max_cte."Proba_7" > 0.0) THEN LN( arg_max_cte."Proba_7" ) ELSE -1.79769313486231e+308 END AS "LogProba_7",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('digits_tiny', 'SVC', 'pgsql') 




COPY_TRAINING_DATA_TO_SQLITE_START
