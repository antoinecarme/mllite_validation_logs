    pixel_0_0  pixel_0_1  pixel_0_2  ...  pixel_7_6  pixel_7_7  target
0           0          0          0  ...          7          0       2
1           0          0         11  ...         16         12       1
2           0          0          0  ...          0          0       1
3           0          0          7  ...          4          0       9
4           0          0          5  ...          0          0       8
5           0          0          1  ...          0          0       8
6           0          0          2  ...          0          0       7
7           0          0          4  ...          0          0       0
8           0          0          1  ...          1          0       9
9           0          0          2  ...          0          0       7
10          0          0          0  ...          0          0       4
11          0          0          5  ...          0          0       3
12          0          1         11  ...          3          0       9
13          0          0          0  ...          0          0       7
14          0          0          1  ...          0          0       0
15          0          0          5  ...          0          0       0

[16 rows x 65 columns]
MLLITE_MODEL_SET_OPTIONS DecisionTreeClassifier {"max_depth" : 6, "max_leaf_nodes" : 32}
MLLITE_MODEL_OPTIONS_DEFAULT DecisionTreeClassifier { "max_leaf_nodes" : 64}
MLLITE_MODEL_OPTIONS_AFTER_SETTING DecisionTreeClassifier { "max_depth" : 6, "max_leaf_nodes" : 32,  "max_leaf_nodes" : 64 }
MLLITE_MODEL_JSON_AFTER_SETTING DecisionTreeClassifier None
('OPERATION_START', 'TRAINING')
[[ 0.  0.  0.  3. 15. 10.  1.  0.  0.  0.  0. 11. 10. 16.  4.  0.  0.  0.
   0. 12.  1. 15.  6.  0.  0.  0.  0.  3.  4. 15.  4.  0.  0.  0.  0.  6.
  15.  6.  0.  0.  0.  4. 15. 16.  9.  0.  0.  0.  0.  0. 13. 16. 15.  9.
   3.  0.  0.  0.  0.  4.  9. 14.  7.  0.]
 [ 0.  0. 11. 10.  0.  0.  0.  0.  0.  0. 11. 15.  0.  0.  0.  0.  0.  0.
  11. 16.  5.  0.  0.  0.  0.  0. 13. 16. 11.  0.  0.  0.  0.  0.  2.  7.
  16.  2.  0.  0.  0.  0.  0.  2. 14.  6.  0.  0.  0.  0.  6. 10. 15. 13.
   8.  3.  0.  0.  8. 16. 16. 16. 16. 12.]
 [ 0.  0.  0. 15. 11.  0.  0.  0.  0.  0.  6. 16. 16.  2.  0.  0.  0.  0.
  10. 16. 16.  1.  0.  0.  0.  2. 16. 16. 16.  3.  0.  0.  0.  7. 16. 16.
  14.  0.  0.  0.  0.  0.  3. 15. 10.  0.  0.  0.  0.  0.  0. 15.  7.  0.
   0.  0.  0.  0.  0. 14.  4.  0.  0.  0.]
 [ 0.  0.  7. 13. 10.  1.  0.  0.  0.  1. 15.  3.  9. 10.  0.  0.  0.  3.
  16.  4. 13. 11.  0.  0.  0.  0.  6. 12. 12. 16.  0.  0.  0.  0.  0.  0.
   0. 12.  5.  0.  0.  0.  0.  0.  0.  5. 11.  0.  0.  1. 11.  2.  0.  7.
  11.  0.  0.  0.  7. 13. 16. 15.  4.  0.]
 [ 0.  0.  5. 12. 13.  2.  0.  0.  0.  3. 16. 14. 16. 13.  1.  0.  0.  4.
  16.  9. 16. 12.  1.  0.  0.  1.  9. 16. 15.  1.  0.  0.  0.  1. 13. 16.
  16.  5.  0.  0.  0.  3. 16.  5. 12. 16.  0.  0.  0.  3. 15.  7. 14. 12.
   0.  0.  0.  0.  6. 16. 13.  3.  0.  0.]] [2 1 1 9 8]
MLLITE_FIT_USING_MODEL mllite_decision_tree_class.DecisionTreeClassifier_ff4_il8
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ib1_ib1'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ib1_ih2'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ib1_ii4'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ib1_il8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ib1_ff4'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ib1_fd8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ib1_OO8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ih2_ib1'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ih2_ih2'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ih2_ii4'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ih2_il8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ih2_ff4'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ih2_fd8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ih2_OO8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ii4_ib1'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ii4_ih2'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ii4_ii4'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ii4_il8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ii4_ff4'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ii4_fd8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ii4_OO8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_il8_ib1'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_il8_ih2'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_il8_ii4'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_il8_il8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_il8_ff4'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_il8_fd8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_il8_OO8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ff4_ib1'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ff4_ih2'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ff4_ii4'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ff4_il8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ff4_ff4'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ff4_fd8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_ff4_OO8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_fd8_ib1'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_fd8_ih2'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_fd8_ii4'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_fd8_il8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_fd8_ff4'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_fd8_fd8'
REGISTERING_MLLITE_MODEL 'DecisionTreeClassifier_fd8_OO8'
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_CLASSIFIER_FIT' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 0 6
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_CLASSIFIER_FIT' 2 4
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_CLASSIFIER_FIT' 3 4
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_CLASSIFIER_FIT' 4 4
('OPERATION_END_ELAPSED', 0.01, 'TRAINING')
{ "max_depth" : 6, "max_leaf_nodes" : 32,  "max_leaf_nodes" : 64 }
{ "max_depth" : 6, "max_leaf_nodes" : 32,  "max_leaf_nodes" : 64 }
{
	"metadata" : { "model" : "Breiman_CART", "version" : "2024-W12", "signature" : "ff4_il8"},
	"options" : { "ccp_alpha" : 0.000000, "criterion" : "", "max_depth" : 6, "max_features" : null, "max_leaf_nodes" : 32, "min_impurity_decrease" : 0.000000, "min_samples_leaf" : 1, "min_samples_split" : 2, "min_weight_fraction_leaf" : 0.000000, "random_state" : 1789, "splitter" : "best" },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 64 },
	"classes" : [ 0, 1, 2, 3, 4, 7, 8, 9 ],
	"tree" : {
	"features" : 64,
	"outputs" : 8,
	"max_depth" : 5,
	"node_count" : 13,
	"nodes" : {
		"node_00" : {"left" : 1, "right" : 2, "feature" : 29, "threshold" : 15.500000, "impurity" : 0.851562, "n_samples" : 16, "w_samples" : 16.000000, "value" : [0.187500, 0.125000, 0.062500, 0.062500, 0.062500, 0.187500, 0.125000, 0.187500]},
		"node_01" : {"left" : 3, "right" : 4, "feature" : 35, "threshold" : 5.000000, "impurity" : 0.828402, "n_samples" : 13, "w_samples" : 13.000000, "value" : [0.230769, 0.153846, 0.076923, 0.076923, 0.076923, 0.230769, 0.153846, 0.000000]},
		"node_02" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 3, "w_samples" : 3.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000]},
		"node_03" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 3, "w_samples" : 3.000000, "value" : [1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000]},
		"node_04" : {"left" : 5, "right" : 6, "feature" : 27, "threshold" : 1.500000, "impurity" : 0.800000, "n_samples" : 10, "w_samples" : 10.000000, "value" : [0.000000, 0.200000, 0.100000, 0.100000, 0.100000, 0.300000, 0.200000, 0.000000]},
		"node_05" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 3, "w_samples" : 3.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000]},
		"node_06" : {"left" : 7, "right" : 8, "feature" : 5, "threshold" : 1.000000, "impurity" : 0.775510, "n_samples" : 7, "w_samples" : 7.000000, "value" : [0.000000, 0.285714, 0.142857, 0.142857, 0.142857, 0.000000, 0.285714, 0.000000]},
		"node_07" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000]},
		"node_08" : {"left" : 9, "right" : 10, "feature" : 36, "threshold" : 15.500000, "impurity" : 0.720000, "n_samples" : 5, "w_samples" : 5.000000, "value" : [0.000000, 0.000000, 0.200000, 0.200000, 0.200000, 0.000000, 0.400000, 0.000000]},
		"node_09" : {"left" : 11, "right" : 12, "feature" : 45, "threshold" : 7.000000, "impurity" : 0.666667, "n_samples" : 3, "w_samples" : 3.000000, "value" : [0.000000, 0.000000, 0.333333, 0.333333, 0.333333, 0.000000, 0.000000, 0.000000]},
		"node_10" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000]},
		"node_11" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000]},
		"node_12" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.500000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [0.000000, 0.000000, 0.000000, 0.500000, 0.500000, 0.000000, 0.000000, 0.000000]}
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/DecisionTreeClassifier/mllite.DecisionTreeClassifier_digits_tiny_option_1.json'

MLLITE_MODEL_SET_OPTIONS DecisionTreeClassifier {"max_depth" : 6, "max_leaf_nodes" : 32}
MLLITE_MODEL_OPTIONS_DEFAULT DecisionTreeClassifier { "max_leaf_nodes" : 64}
MLLITE_MODEL_OPTIONS_AFTER_SETTING DecisionTreeClassifier { "max_depth" : 6, "max_leaf_nodes" : 32,  "max_leaf_nodes" : 64 }
MLLITE_MODEL_JSON_AFTER_SETTING DecisionTreeClassifier None
MLLITE_RELOADING_MODEL mllite_decision_tree_class.DecisionTreeClassifier_ff4_il8
{
	"metadata" : { "model" : "Breiman_CART", "version" : "2024-W12", "signature" : "ff4_il8"},
	"options" : { "ccp_alpha" : 0.000000, "criterion" : "", "max_depth" : 6, "max_features" : null, "max_leaf_nodes" : 32, "min_impurity_decrease" : 0.000000, "min_samples_leaf" : 1, "min_samples_split" : 2, "min_weight_fraction_leaf" : 0.000000, "random_state" : 1789, "splitter" : "best" },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 64 },
	"classes" : [ 0, 1, 2, 3, 4, 7, 8, 9 ],
	"tree" : {
	"features" : 64,
	"outputs" : 8,
	"max_depth" : 5,
	"node_count" : 13,
	"nodes" : {
		"node_00" : {"left" : 1, "right" : 2, "feature" : 29, "threshold" : 15.500000, "impurity" : 0.851562, "n_samples" : 16, "w_samples" : 16.000000, "value" : [0.187500, 0.125000, 0.062500, 0.062500, 0.062500, 0.187500, 0.125000, 0.187500]},
		"node_01" : {"left" : 3, "right" : 4, "feature" : 35, "threshold" : 5.000000, "impurity" : 0.828402, "n_samples" : 13, "w_samples" : 13.000000, "value" : [0.230769, 0.153846, 0.076923, 0.076923, 0.076923, 0.230769, 0.153846, 0.000000]},
		"node_02" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 3, "w_samples" : 3.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000]},
		"node_03" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 3, "w_samples" : 3.000000, "value" : [1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000]},
		"node_04" : {"left" : 5, "right" : 6, "feature" : 27, "threshold" : 1.500000, "impurity" : 0.800000, "n_samples" : 10, "w_samples" : 10.000000, "value" : [0.000000, 0.200000, 0.100000, 0.100000, 0.100000, 0.300000, 0.200000, 0.000000]},
		"node_05" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 3, "w_samples" : 3.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000]},
		"node_06" : {"left" : 7, "right" : 8, "feature" : 5, "threshold" : 1.000000, "impurity" : 0.775510, "n_samples" : 7, "w_samples" : 7.000000, "value" : [0.000000, 0.285714, 0.142857, 0.142857, 0.142857, 0.000000, 0.285714, 0.000000]},
		"node_07" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000]},
		"node_08" : {"left" : 9, "right" : 10, "feature" : 36, "threshold" : 15.500000, "impurity" : 0.720000, "n_samples" : 5, "w_samples" : 5.000000, "value" : [0.000000, 0.000000, 0.200000, 0.200000, 0.200000, 0.000000, 0.400000, 0.000000]},
		"node_09" : {"left" : 11, "right" : 12, "feature" : 45, "threshold" : 7.000000, "impurity" : 0.666667, "n_samples" : 3, "w_samples" : 3.000000, "value" : [0.000000, 0.000000, 0.333333, 0.333333, 0.333333, 0.000000, 0.000000, 0.000000]},
		"node_10" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000]},
		"node_11" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000]},
		"node_12" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.500000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [0.000000, 0.000000, 0.000000, 0.500000, 0.500000, 0.000000, 0.000000, 0.000000]}
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1, 2, 3, 4, 7, 8, 9 ],
	"dataset" : 	{
		"dataset_features" : 64,
		"dataset_rows" : 16
	},
	"metadata" :  { "model" : "Breiman_CART", "signature" : "ff4_il8", "version" : "2024-W12" },
	"options" :  { "ccp_alpha" : 0.0, "criterion" : "", "max_depth" : 6, "max_features" : null, "max_leaf_nodes" : 32, "min_impurity_decrease" : 0.0, "min_samples_leaf" : 1, "min_samples_split" : 2, "min_weight_fraction_leaf" : 0.0, "random_state" : 1789, "splitter" : "best" },
	"tree" : 	{
		"features" : 64,
		"max_depth" : 5,
		"node_count" : 13,
		"nodes" : 	{
			"node_00" :  { "feature" : 29, "impurity" : 0.851562, "left" : 1, "n_samples" : 16, "right" : 2, "threshold" : 15.5, "value" : [ 0.1875, 0.125, 0.0625, 0.0625, 0.0625, 0.1875, 0.125, 0.1875 ], "w_samples" : 16.0 },
			"node_01" :  { "feature" : 35, "impurity" : 0.828402, "left" : 3, "n_samples" : 13, "right" : 4, "threshold" : 5.0, "value" : [ 0.230769, 0.153846, 0.076923, 0.076923, 0.076923, 0.230769, 0.153846, 0.0 ], "w_samples" : 13.0 },
			"node_02" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 3, "right" : null, "threshold" : null, "value" : [ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0 ], "w_samples" : 3.0 },
			"node_03" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 3, "right" : null, "threshold" : null, "value" : [ 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ], "w_samples" : 3.0 },
			"node_04" :  { "feature" : 27, "impurity" : 0.8, "left" : 5, "n_samples" : 10, "right" : 6, "threshold" : 1.5, "value" : [ 0.0, 0.2, 0.1, 0.1, 0.1, 0.3, 0.2, 0.0 ], "w_samples" : 10.0 },
			"node_05" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 3, "right" : null, "threshold" : null, "value" : [ 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0 ], "w_samples" : 3.0 },
			"node_06" :  { "feature" : 5, "impurity" : 0.77551, "left" : 7, "n_samples" : 7, "right" : 8, "threshold" : 1.0, "value" : [ 0.0, 0.285714, 0.142857, 0.142857, 0.142857, 0.0, 0.285714, 0.0 ], "w_samples" : 7.0 },
			"node_07" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 2, "right" : null, "threshold" : null, "value" : [ 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ], "w_samples" : 2.0 },
			"node_08" :  { "feature" : 36, "impurity" : 0.72, "left" : 9, "n_samples" : 5, "right" : 10, "threshold" : 15.5, "value" : [ 0.0, 0.0, 0.2, 0.2, 0.2, 0.0, 0.4, 0.0 ], "w_samples" : 5.0 },
			"node_09" :  { "feature" : 45, "impurity" : 0.666667, "left" : 11, "n_samples" : 3, "right" : 12, "threshold" : 7.0, "value" : [ 0.0, 0.0, 0.333333, 0.333333, 0.333333, 0.0, 0.0, 0.0 ], "w_samples" : 3.0 },
			"node_10" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 2, "right" : null, "threshold" : null, "value" : [ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0 ], "w_samples" : 2.0 },
			"node_11" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0 ], "w_samples" : 1.0 },
			"node_12" :  { "feature" : null, "impurity" : 0.5, "left" : null, "n_samples" : 2, "right" : null, "threshold" : null, "value" : [ 0.0, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0 ], "w_samples" : 2.0 }
		},
		"outputs" : 8
	}
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0.  0.  1.  0.  0.  0.  0.  0. ]
 [0.  1.  0.  0.  0.  0.  0.  0. ]
 [0.  1.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0.  0.  1.  0. ]
 [0.  0.  0.  0.  0.  0.  1.  0. ]
 [0.  0.  0.  0.  0.  1.  0.  0. ]
 [1.  0.  0.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0.  1.  0.  0. ]
 [0.  0.  0.  0.5 0.5 0.  0.  0. ]
 [0.  0.  0.  0.5 0.5 0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  1. ]
 [0.  0.  0.  0.  0.  1.  0.  0. ]
 [1.  0.  0.  0.  0.  0.  0.  0. ]
 [1.  0.  0.  0.  0.  0.  0.  0. ]]
(16, 8)
(16, 8) float32
MODEL_PERFS {'class_name': 'mllite.DecisionTreeClassifier', 'model_name': 'DecisionTreeClassifier', 'options': '{"max_depth" : 6, "max_leaf_nodes" : 32}', 'dataset': 'digits_tiny', 'size': 16, 'accuracy': 0.9375, 'auc': 0.9916666666666667}
WRITING_PERF_CODE 'logs/auto_tests/classification/DecisionTreeClassifier/mllite.DecisionTreeClassifier_digits_tiny_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.DecisionTreeClassifier', 'model_name': 'DecisionTreeClassifier', 'options': '{"max_depth" : 6, "max_leaf_nodes" : 32}', 'dataset': 'digits_tiny', 'training_time_in_sec': 0.01, 'prediction_time_in_sec': 0.0}
WRITING_SQL_CODE 'logs/auto_tests/classification/DecisionTreeClassifier/mllite.DecisionTreeClassifier_digits_tiny_option_1.sql'



SQL_OUT_PUT_FIRST_LINES_START
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END
SQL_OUT_PUT_LAST_LINES_START
"."P_3" ) ELSE -1.79769313486231e+308 END AS "LogProba_3",
   CAST(NULL AS FLOAT)  AS "Score_4",
   "DT_Output"."P_4" AS "Proba_4",
   CASE WHEN ("DT_Output"."P_4" IS NULL OR "DT_Output"."P_4" > 0.0) THEN LN( "DT_Output"."P_4" ) ELSE -1.79769313486231e+308 END AS "LogProba_4",
   CAST(NULL AS FLOAT)  AS "Score_5",
   "DT_Output"."P_5" AS "Proba_5",
   CASE WHEN ("DT_Output"."P_5" IS NULL OR "DT_Output"."P_5" > 0.0) THEN LN( "DT_Output"."P_5" ) ELSE -1.79769313486231e+308 END AS "LogProba_5",
   CAST(NULL AS FLOAT)  AS "Score_6",
   "DT_Output"."P_6" AS "Proba_6",
   CASE WHEN ("DT_Output"."P_6" IS NULL OR "DT_Output"."P_6" > 0.0) THEN LN( "DT_Output"."P_6" ) ELSE -1.79769313486231e+308 END AS "LogProba_6",
   CAST(NULL AS FLOAT)  AS "Score_7",
   "DT_Output"."P_7" AS "Proba_7",
   CASE WHEN ("DT_Output"."P_7" IS NULL OR "DT_Output"."P_7" > 0.0) THEN LN( "DT_Output"."P_7" ) ELSE -1.79769313486231e+308 END AS "LogProba_7",
   "DT_Output"."D" AS "Decision",
   "DT_Output"."DP" AS "DecisionProba"
FROM "DT_Output"
SQL_OUT_PUT_LAST_LINES_END




COPY_TRAINING_DATA_TO_SQLITE_START
    X_0  X_1   X_2   X_3   X_4   X_5  ...  X_59  X_60  X_61  X_62  X_63  KEY
0   0.0  0.0   0.0   3.0  15.0  10.0  ...   4.0   9.0  14.0   7.0   0.0    0
1   0.0  0.0  11.0  10.0   0.0   0.0  ...  16.0  16.0  16.0  16.0  12.0    1
2   0.0  0.0   0.0  15.0  11.0   0.0  ...  14.0   4.0   0.0   0.0   0.0    2
3   0.0  0.0   7.0  13.0  10.0   1.0  ...  13.0  16.0  15.0   4.0   0.0    3
4   0.0  0.0   5.0  12.0  13.0   2.0  ...  16.0  13.0   3.0   0.0   0.0    4
5   0.0  0.0   1.0   8.0  15.0  11.0  ...  11.0  15.0   8.0   0.0   0.0    5
6   0.0  0.0   2.0  13.0  16.0  13.0  ...  15.0   2.0   0.0   0.0   0.0    6
7   0.0  0.0   4.0  12.0   5.0   0.0  ...  11.0  16.0  11.0   0.0   0.0    7
8   0.0  0.0   1.0  12.0  16.0  14.0  ...  12.0  16.0  11.0   1.0   0.0    8
9   0.0  0.0   2.0  13.0  16.0  14.0  ...  15.0   4.0   0.0   0.0   0.0    9
10  0.0  0.0   0.0   3.0  14.0   9.0  ...   3.0  16.0   9.0   0.0   0.0   10
11  0.0  0.0   5.0  13.0  16.0  10.0  ...  14.0  15.0   9.0   0.0   0.0   11
12  0.0  1.0  11.0  13.0  10.0   1.0  ...  15.0  16.0  13.0   3.0   0.0   12
13  0.0  0.0   0.0   8.0  16.0  16.0  ...  12.0   9.0   0.0   0.0   0.0   13
14  0.0  0.0   1.0   9.0  15.0  11.0  ...  10.0  13.0   3.0   0.0   0.0   14
15  0.0  0.0   5.0  12.0   1.0   6.0  ...  12.0  12.0   3.0   0.0   0.0   15

[16 rows x 65 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
    index Score_0  Proba_0  ...     LogProba_7 Decision  DecisionProba
0       0    None      0.0  ... -1.797693e+308        2            1.0
1       1    None      0.0  ... -1.797693e+308        1            1.0
2       2    None      0.0  ... -1.797693e+308        1            1.0
3       3    None      0.0  ...   0.000000e+00        7            1.0
4       4    None      0.0  ... -1.797693e+308        6            1.0
5       5    None      0.0  ... -1.797693e+308        6            1.0
6       6    None      0.0  ... -1.797693e+308        5            1.0
7       7    None      1.0  ... -1.797693e+308        0            1.0
8       8    None      0.0  ...   0.000000e+00        7            1.0
9       9    None      0.0  ... -1.797693e+308        5            1.0
10     10    None      0.0  ... -1.797693e+308        3            0.5
11     11    None      0.0  ... -1.797693e+308        3            0.5
12     12    None      0.0  ...   0.000000e+00        7            1.0
13     13    None      0.0  ... -1.797693e+308        5            1.0
14     14    None      1.0  ... -1.797693e+308        0            1.0
15     15    None      1.0  ... -1.797693e+308        0            1.0

[16 rows x 27 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Score_3', 'Proba_3',
       'LogProba_3', 'Score_4', 'Proba_4', 'LogProba_4', 'Score_5', 'Proba_5',
       'LogProba_5', 'Score_6', 'Proba_6', 'LogProba_6', 'Score_7', 'Proba_7',
       'LogProba_7', 'Decision', 'DecisionProba'],
      dtype='object')
    index Score_0  SQL_Proba_0  ...  Py_Proba_6 Py_Proba_7  Py_Decision
0       0    None          0.0  ...         0.0        0.0            2
1       1    None          0.0  ...         0.0        0.0            1
2       2    None          0.0  ...         0.0        0.0            1
3       3    None          0.0  ...         0.0        1.0            9
4       4    None          0.0  ...         1.0        0.0            8
5       5    None          0.0  ...         1.0        0.0            8
6       6    None          0.0  ...         0.0        0.0            7
7       7    None          1.0  ...         0.0        0.0            0
8       8    None          0.0  ...         0.0        1.0            9
9       9    None          0.0  ...         0.0        0.0            7
10     10    None          0.0  ...         0.0        0.0            3
11     11    None          0.0  ...         0.0        0.0            3
12     12    None          0.0  ...         0.0        1.0            9
13     13    None          0.0  ...         0.0        0.0            7
14     14    None          1.0  ...         0.0        0.0            0
15     15    None          1.0  ...         0.0        0.0            0

[16 rows x 36 columns]
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
