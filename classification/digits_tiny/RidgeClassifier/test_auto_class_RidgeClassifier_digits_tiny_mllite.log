READING_CSV digits_tiny ['data/tiny/digits_tiny.csv']
    pixel_0_0  pixel_0_1  pixel_0_2  ...  pixel_7_6  pixel_7_7  target
0           0          0          0  ...          7          0       2
1           0          0         11  ...         16         12       1
2           0          0          0  ...          0          0       1
3           0          0          7  ...          4          0       9
4           0          0          5  ...          0          0       8
5           0          0          1  ...          0          0       8
6           0          0          2  ...          0          0       7
7           0          0          4  ...          0          0       0
8           0          0          1  ...          1          0       9
9           0          0          2  ...          0          0       7
10          0          0          0  ...          0          0       4
11          0          0          5  ...          0          0       3
12          0          1         11  ...          3          0       9
13          0          0          0  ...          0          0       7
14          0          0          1  ...          0          0       0
15          0          0          5  ...          0          0       0

[16 rows x 65 columns]
MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
('OPERATION_START', 'TRAINING')
[[ 0.  0.  0.  3. 15. 10.  1.  0.  0.  0.  0. 11. 10. 16.  4.  0.  0.  0.
   0. 12.  1. 15.  6.  0.  0.  0.  0.  3.  4. 15.  4.  0.  0.  0.  0.  6.
  15.  6.  0.  0.  0.  4. 15. 16.  9.  0.  0.  0.  0.  0. 13. 16. 15.  9.
   3.  0.  0.  0.  0.  4.  9. 14.  7.  0.]
 [ 0.  0. 11. 10.  0.  0.  0.  0.  0.  0. 11. 15.  0.  0.  0.  0.  0.  0.
  11. 16.  5.  0.  0.  0.  0.  0. 13. 16. 11.  0.  0.  0.  0.  0.  2.  7.
  16.  2.  0.  0.  0.  0.  0.  2. 14.  6.  0.  0.  0.  0.  6. 10. 15. 13.
   8.  3.  0.  0.  8. 16. 16. 16. 16. 12.]
 [ 0.  0.  0. 15. 11.  0.  0.  0.  0.  0.  6. 16. 16.  2.  0.  0.  0.  0.
  10. 16. 16.  1.  0.  0.  0.  2. 16. 16. 16.  3.  0.  0.  0.  7. 16. 16.
  14.  0.  0.  0.  0.  0.  3. 15. 10.  0.  0.  0.  0.  0.  0. 15.  7.  0.
   0.  0.  0.  0.  0. 14.  4.  0.  0.  0.]
 [ 0.  0.  7. 13. 10.  1.  0.  0.  0.  1. 15.  3.  9. 10.  0.  0.  0.  3.
  16.  4. 13. 11.  0.  0.  0.  0.  6. 12. 12. 16.  0.  0.  0.  0.  0.  0.
   0. 12.  5.  0.  0.  0.  0.  0.  0.  5. 11.  0.  0.  1. 11.  2.  0.  7.
  11.  0.  0.  0.  7. 13. 16. 15.  4.  0.]
 [ 0.  0.  5. 12. 13.  2.  0.  0.  0.  3. 16. 14. 16. 13.  1.  0.  0.  4.
  16.  9. 16. 12.  1.  0.  0.  1.  9. 16. 15.  1.  0.  0.  0.  1. 13. 16.
  16.  5.  0.  0.  0.  3. 16.  5. 12. 16.  0.  0.  0.  3. 15.  7. 14. 12.
   0.  0.  0.  0.  6. 16. 13.  3.  0.  0.]] [2 1 1 9 8]
MLLITE_FIT_USING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 1 10
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 2 10
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 3 10
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 4 10
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 5 10
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 6 10
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 7 10
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 8 10
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 9 10
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 10 10
('OPERATION_END_ELAPSED', 0.015, 'TRAINING')
{ ,   }
{ ,   }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 64 },
	"classes" : [ 0, 1, 2, 3, 4, 7, 8, 9 ],
	"equations" : {
		"class_0" : {
			"intercept" : -43.158489,
			"coeffs" : [ 0.000000, 19.632570, -1.497880, 1.003589, 0.923052, 0.860025, -0.345810, -0.128569, 0.000000, 3.068665, 0.163576, -0.370190, 0.125932, -0.629184, -0.580049, 0.539003, 0.000000, -3.637224, 4.728627, -0.479570, -0.086604, -0.982034, -0.487607, 0.000000, 0.000000, -2.106989, -0.559134, 0.711718, -4.148492, 0.254058, -4.447741, 0.000000, 0.000000, -0.783379, -0.344632, 2.226249, 0.314687, -1.526011, 0.872741, 0.000000, 0.000000, 0.186223, -1.136976, 1.783186, 0.874379, -0.283081, -0.547848, 0.000000, 0.000000, -5.322760, 3.229949, 0.858756, -0.578543, -0.267856, 0.789972, -0.407654, 0.000000, 20.876719, 0.412305, -2.054986, 1.666284, -0.209945, 0.550333, -0.337834 ]
		},
		"class_1" : {
			"intercept" : -28.158890,
			"coeffs" : [ 0.000000, -13.867838, 7.810869, -0.262935, 0.304572, 1.077815, 0.863464, 1.023539, 0.000000, -1.539509, -0.911787, 0.182737, -0.236336, 0.125823, 0.304622, 3.687079, 0.000000, 1.702952, -1.317002, 4.234421, -0.144494, 0.917906, 0.491232, 0.000000, 0.000000, 3.239829, -1.029766, -0.747394, 1.967162, -3.182262, 2.841766, 0.000000, 0.000000, 0.047894, -0.570636, -0.545492, -0.523701, 0.631097, -0.316824, 0.000000, 0.000000, 0.157579, -0.171311, -0.866722, -0.568119, 0.233044, 1.458899, 0.000000, 0.000000, -0.045284, -1.492940, 1.318399, -0.651791, 0.600391, -0.339866, -14.202880, 0.000000, -13.038352, -0.595456, 1.184803, -0.753825, 1.135951, -1.387271, -2.449749 ]
		},
		"class_2" : {
			"intercept" : 34.747604,
			"coeffs" : [ 0.000000, -8.919848, -4.586308, 2.012600, -0.754928, -0.836670, 0.409335, -1.379739, 0.000000, 0.647079, -0.366694, -0.152832, 0.431037, 0.627368, 1.861337, -3.830960, 0.000000, 2.533419, -3.854491, 0.874815, 0.228456, -0.246836, -0.744458, 0.000000, 0.000000, 0.867679, 0.863951, -0.054376, -1.524467, 0.154151, -1.271524, 0.000000, 0.000000, -0.682177, 0.221160, -0.538860, -0.165292, 0.693949, -0.146965, 0.000000, 0.000000, -1.244849, -0.328832, -1.071534, 0.106222, 1.258921, 0.436118, 0.000000, 0.000000, 4.540814, 0.333357, 0.157692, -0.219837, -0.089720, -0.019389, 5.754574, 0.000000, -8.505154, 1.959763, 0.199088, -1.017744, 0.696026, -0.931326, 1.360002 ]
		},
		"class_3" : {
			"intercept" : 51.005718,
			"coeffs" : [ 0.000000, -8.939165, 2.449948, -0.726363, 0.074482, -0.006229, 0.066524, -0.640546, 0.000000, -2.294885, 1.409464, -0.004478, -0.527920, 0.434871, -0.030244, -1.613408, 0.000000, 1.775068, -3.217394, -0.732023, 0.029790, 0.033243, -0.114384, 0.000000, 0.000000, 2.056089, 0.597105, -0.356004, 1.057473, -0.886606, 1.898637, 0.000000, 0.000000, 0.359551, 0.129470, -0.628720, -0.033115, 0.374511, -0.597790, 0.000000, 0.000000, -0.439899, 0.578630, -0.225112, -0.474393, -0.698230, 0.024491, 0.000000, 0.000000, 3.306078, -0.825879, -1.066698, 0.046715, -0.805926, -0.510395, -0.143496, 0.000000, -8.524449, -1.213671, 0.500393, -0.099980, -0.274701, 0.028244, -0.114515 ]
		},
		"class_4" : {
			"intercept" : 44.265545,
			"coeffs" : [ 0.000000, 5.903325, -6.123075, 2.581363, -0.782294, -0.573270, 0.017516, -0.322995, 0.000000, -0.319155, -1.222328, -0.192419, -0.373400, 0.810729, 0.289448, -0.660734, 0.000000, 2.423113, -0.364018, 1.183649, 0.015559, 1.137209, 0.295846, 0.000000, 0.000000, -0.015388, 0.080360, 0.260006, -1.341312, -1.691519, -1.468088, 0.000000, 0.000000, -2.619165, -0.229035, 0.303698, -0.055896, -0.516568, 0.289330, 0.000000, 0.000000, 1.495674, -0.102928, -0.721968, -0.205725, 0.110031, 0.219050, 0.000000, 0.000000, -3.707443, -0.830721, -1.274960, -0.193607, -0.144070, 0.718021, 1.790203, 0.000000, 6.317941, 1.884587, -0.576269, 0.881253, -0.106226, -0.026524, 0.368911 ]
		},
		"class_5" : {
			"intercept" : 138.517166,
			"coeffs" : [ 0.000000, -7.581316, -11.311668, -1.711746, -0.653131, -1.693564, -0.943669, -1.261563, 0.000000, 1.275109, 0.318981, -0.198807, 0.386508, -0.277252, -0.636071, -7.791733, 0.000000, 2.930969, -2.879639, -2.387623, 0.321762, -0.162699, -0.030661, 0.000000, 0.000000, -0.727057, -0.182197, 1.104478, -1.438622, 1.888850, 0.194536, 0.000000, 0.000000, -0.963977, 0.225004, -0.833723, -0.343251, -0.446250, 1.065260, 0.000000, 0.000000, -1.530908, 0.279945, -1.856295, -0.802241, 0.290558, 0.819057, 0.000000, 0.000000, 12.202333, -3.387255, -0.527496, 1.459877, 3.153577, 2.979064, 9.865434, 0.000000, -6.337293, 1.837969, 1.564008, -2.785338, -3.810443, 2.635870, 2.230439 ]
		},
		"class_6" : {
			"intercept" : -10.779532,
			"coeffs" : [ 0.000000, 18.209957, -2.110596, -0.914124, 0.225634, 0.675203, 0.256769, 1.155926, 0.000000, 1.494827, 0.495336, -0.328071, -0.352368, -0.052976, -0.680209, 4.084245, 0.000000, -1.892001, 3.484683, -0.867150, -0.108588, 0.050611, -0.320324, 0.000000, 0.000000, -1.864759, -0.691067, -0.439267, 2.229364, -1.579019, 1.596220, 0.000000, 0.000000, 1.402406, -0.613978, -0.375822, 0.052947, 0.386410, -1.570449, 0.000000, 0.000000, 1.880685, 0.255342, 0.208323, 0.091794, -1.204298, -0.094026, 0.000000, 0.000000, -5.895102, 0.132221, 0.263336, 0.326088, -0.020342, 0.267636, 0.166686, 0.000000, 19.039223, -0.094112, -0.651545, 1.043190, -0.390612, 0.535501, -0.115609 ]
		},
		"class_7" : {
			"intercept" : -192.439148,
			"coeffs" : [ 0.000000, -4.437694, 15.368718, -1.982383, 0.662612, 0.496689, -0.324129, 1.553946, 0.000000, -2.332130, 0.113450, 1.064060, 0.546547, -1.039379, -0.528834, 5.586504, 0.000000, -5.836297, 3.419236, -1.826518, -0.255881, -0.747401, 0.910356, 0.000000, 0.000000, -1.449404, 0.920748, -0.479161, 3.198895, 5.042346, 0.656192, 0.000000, 0.000000, 3.238847, 1.182647, 0.392672, 0.753621, 0.402864, 0.404699, 0.000000, 0.000000, -0.504504, 0.626129, 2.750122, 0.978084, 0.293054, -2.315740, 0.000000, 0.000000, -5.078635, 2.841266, 0.270971, -0.188901, -2.426054, -3.885043, -2.822866, 0.000000, -9.828636, -4.191386, -0.165493, 1.066162, 2.959950, -1.404826, -0.941644 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_digits_tiny.json'

RELOADING_MODEL_FROM_JSON_START ('digits_tiny', 'RidgeClassifier')
MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
MLLITE_RELOADING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 64 },
	"classes" : [ 0, 1, 2, 3, 4, 7, 8, 9 ],
	"equations" : {
		"class_0" : {
			"intercept" : -43.158489,
			"coeffs" : [ 0.000000, 19.632570, -1.497880, 1.003589, 0.923052, 0.860025, -0.345810, -0.128569, 0.000000, 3.068665, 0.163576, -0.370190, 0.125932, -0.629184, -0.580049, 0.539003, 0.000000, -3.637224, 4.728627, -0.479570, -0.086604, -0.982034, -0.487607, 0.000000, 0.000000, -2.106989, -0.559134, 0.711718, -4.148492, 0.254058, -4.447741, 0.000000, 0.000000, -0.783379, -0.344632, 2.226249, 0.314687, -1.526011, 0.872741, 0.000000, 0.000000, 0.186223, -1.136976, 1.783186, 0.874379, -0.283081, -0.547848, 0.000000, 0.000000, -5.322760, 3.229949, 0.858756, -0.578543, -0.267856, 0.789972, -0.407654, 0.000000, 20.876719, 0.412305, -2.054986, 1.666284, -0.209945, 0.550333, -0.337834 ]
		},
		"class_1" : {
			"intercept" : -28.158890,
			"coeffs" : [ 0.000000, -13.867838, 7.810869, -0.262935, 0.304572, 1.077815, 0.863464, 1.023539, 0.000000, -1.539509, -0.911787, 0.182737, -0.236336, 0.125823, 0.304622, 3.687079, 0.000000, 1.702952, -1.317002, 4.234421, -0.144494, 0.917906, 0.491232, 0.000000, 0.000000, 3.239829, -1.029766, -0.747394, 1.967162, -3.182262, 2.841766, 0.000000, 0.000000, 0.047894, -0.570636, -0.545492, -0.523701, 0.631097, -0.316824, 0.000000, 0.000000, 0.157579, -0.171311, -0.866722, -0.568119, 0.233044, 1.458899, 0.000000, 0.000000, -0.045284, -1.492940, 1.318399, -0.651791, 0.600391, -0.339866, -14.202880, 0.000000, -13.038352, -0.595456, 1.184803, -0.753825, 1.135951, -1.387271, -2.449749 ]
		},
		"class_2" : {
			"intercept" : 34.747604,
			"coeffs" : [ 0.000000, -8.919848, -4.586308, 2.012600, -0.754928, -0.836670, 0.409335, -1.379739, 0.000000, 0.647079, -0.366694, -0.152832, 0.431037, 0.627368, 1.861337, -3.830960, 0.000000, 2.533419, -3.854491, 0.874815, 0.228456, -0.246836, -0.744458, 0.000000, 0.000000, 0.867679, 0.863951, -0.054376, -1.524467, 0.154151, -1.271524, 0.000000, 0.000000, -0.682177, 0.221160, -0.538860, -0.165292, 0.693949, -0.146965, 0.000000, 0.000000, -1.244849, -0.328832, -1.071534, 0.106222, 1.258921, 0.436118, 0.000000, 0.000000, 4.540814, 0.333357, 0.157692, -0.219837, -0.089720, -0.019389, 5.754574, 0.000000, -8.505154, 1.959763, 0.199088, -1.017744, 0.696026, -0.931326, 1.360002 ]
		},
		"class_3" : {
			"intercept" : 51.005718,
			"coeffs" : [ 0.000000, -8.939165, 2.449948, -0.726363, 0.074482, -0.006229, 0.066524, -0.640546, 0.000000, -2.294885, 1.409464, -0.004478, -0.527920, 0.434871, -0.030244, -1.613408, 0.000000, 1.775068, -3.217394, -0.732023, 0.029790, 0.033243, -0.114384, 0.000000, 0.000000, 2.056089, 0.597105, -0.356004, 1.057473, -0.886606, 1.898637, 0.000000, 0.000000, 0.359551, 0.129470, -0.628720, -0.033115, 0.374511, -0.597790, 0.000000, 0.000000, -0.439899, 0.578630, -0.225112, -0.474393, -0.698230, 0.024491, 0.000000, 0.000000, 3.306078, -0.825879, -1.066698, 0.046715, -0.805926, -0.510395, -0.143496, 0.000000, -8.524449, -1.213671, 0.500393, -0.099980, -0.274701, 0.028244, -0.114515 ]
		},
		"class_4" : {
			"intercept" : 44.265545,
			"coeffs" : [ 0.000000, 5.903325, -6.123075, 2.581363, -0.782294, -0.573270, 0.017516, -0.322995, 0.000000, -0.319155, -1.222328, -0.192419, -0.373400, 0.810729, 0.289448, -0.660734, 0.000000, 2.423113, -0.364018, 1.183649, 0.015559, 1.137209, 0.295846, 0.000000, 0.000000, -0.015388, 0.080360, 0.260006, -1.341312, -1.691519, -1.468088, 0.000000, 0.000000, -2.619165, -0.229035, 0.303698, -0.055896, -0.516568, 0.289330, 0.000000, 0.000000, 1.495674, -0.102928, -0.721968, -0.205725, 0.110031, 0.219050, 0.000000, 0.000000, -3.707443, -0.830721, -1.274960, -0.193607, -0.144070, 0.718021, 1.790203, 0.000000, 6.317941, 1.884587, -0.576269, 0.881253, -0.106226, -0.026524, 0.368911 ]
		},
		"class_5" : {
			"intercept" : 138.517166,
			"coeffs" : [ 0.000000, -7.581316, -11.311668, -1.711746, -0.653131, -1.693564, -0.943669, -1.261563, 0.000000, 1.275109, 0.318981, -0.198807, 0.386508, -0.277252, -0.636071, -7.791733, 0.000000, 2.930969, -2.879639, -2.387623, 0.321762, -0.162699, -0.030661, 0.000000, 0.000000, -0.727057, -0.182197, 1.104478, -1.438622, 1.888850, 0.194536, 0.000000, 0.000000, -0.963977, 0.225004, -0.833723, -0.343251, -0.446250, 1.065260, 0.000000, 0.000000, -1.530908, 0.279945, -1.856295, -0.802241, 0.290558, 0.819057, 0.000000, 0.000000, 12.202333, -3.387255, -0.527496, 1.459877, 3.153577, 2.979064, 9.865434, 0.000000, -6.337293, 1.837969, 1.564008, -2.785338, -3.810443, 2.635870, 2.230439 ]
		},
		"class_6" : {
			"intercept" : -10.779532,
			"coeffs" : [ 0.000000, 18.209957, -2.110596, -0.914124, 0.225634, 0.675203, 0.256769, 1.155926, 0.000000, 1.494827, 0.495336, -0.328071, -0.352368, -0.052976, -0.680209, 4.084245, 0.000000, -1.892001, 3.484683, -0.867150, -0.108588, 0.050611, -0.320324, 0.000000, 0.000000, -1.864759, -0.691067, -0.439267, 2.229364, -1.579019, 1.596220, 0.000000, 0.000000, 1.402406, -0.613978, -0.375822, 0.052947, 0.386410, -1.570449, 0.000000, 0.000000, 1.880685, 0.255342, 0.208323, 0.091794, -1.204298, -0.094026, 0.000000, 0.000000, -5.895102, 0.132221, 0.263336, 0.326088, -0.020342, 0.267636, 0.166686, 0.000000, 19.039223, -0.094112, -0.651545, 1.043190, -0.390612, 0.535501, -0.115609 ]
		},
		"class_7" : {
			"intercept" : -192.439148,
			"coeffs" : [ 0.000000, -4.437694, 15.368718, -1.982383, 0.662612, 0.496689, -0.324129, 1.553946, 0.000000, -2.332130, 0.113450, 1.064060, 0.546547, -1.039379, -0.528834, 5.586504, 0.000000, -5.836297, 3.419236, -1.826518, -0.255881, -0.747401, 0.910356, 0.000000, 0.000000, -1.449404, 0.920748, -0.479161, 3.198895, 5.042346, 0.656192, 0.000000, 0.000000, 3.238847, 1.182647, 0.392672, 0.753621, 0.402864, 0.404699, 0.000000, 0.000000, -0.504504, 0.626129, 2.750122, 0.978084, 0.293054, -2.315740, 0.000000, 0.000000, -5.078635, 2.841266, 0.270971, -0.188901, -2.426054, -3.885043, -2.822866, 0.000000, -9.828636, -4.191386, -0.165493, 1.066162, 2.959950, -1.404826, -0.941644 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1, 2, 3, 4, 7, 8, 9 ],
	"dataset" : 	{
		"dataset_features" : 64,
		"dataset_rows" : 16
	},
	"equations" : 	{
		"class_0" : 	{
			"coeffs" : [ 0.0, 19.63257, -1.49788, 1.003589, 0.923052, 0.860025, -0.34581, -0.128569, 0.0, 3.068665, 0.163576, -0.37019, 0.125932, -0.629184, -0.580049, 0.539003, 0.0, -3.637224, 4.728627, -0.47957, -0.086604, -0.982034, -0.487607, 0.0, 0.0, -2.106989, -0.559134, 0.711718, -4.148492, 0.254058, -4.447741, 0.0, 0.0, -0.783379, -0.344632, 2.226249, 0.314687, -1.526011, 0.872741, 0.0, 0.0, 0.186223, -1.136976, 1.783186, 0.874379, -0.283081, -0.547848, 0.0, 0.0, -5.32276, 3.229949, 0.858756, -0.578543, -0.267856, 0.789972, -0.407654, 0.0, 20.876719, 0.412305, -2.054986, 1.666284, -0.209945, 0.550333, -0.337834 ],
			"intercept" : -43.158489
		},
		"class_1" : 	{
			"coeffs" : [ 0.0, -13.867838, 7.810869, -0.262935, 0.304572, 1.077815, 0.863464, 1.023539, 0.0, -1.539509, -0.911787, 0.182737, -0.236336, 0.125823, 0.304622, 3.687079, 0.0, 1.702952, -1.317002, 4.234421, -0.144494, 0.917906, 0.491232, 0.0, 0.0, 3.239829, -1.029766, -0.747394, 1.967162, -3.182262, 2.841766, 0.0, 0.0, 0.047894, -0.570636, -0.545492, -0.523701, 0.631097, -0.316824, 0.0, 0.0, 0.157579, -0.171311, -0.866722, -0.568119, 0.233044, 1.458899, 0.0, 0.0, -0.045284, -1.49294, 1.318399, -0.651791, 0.600391, -0.339866, -14.20288, 0.0, -13.038352, -0.595456, 1.184803, -0.753825, 1.135951, -1.387271, -2.449749 ],
			"intercept" : -28.15889
		},
		"class_2" : 	{
			"coeffs" : [ 0.0, -8.919848, -4.586308, 2.0126, -0.754928, -0.83667, 0.409335, -1.379739, 0.0, 0.647079, -0.366694, -0.152832, 0.431037, 0.627368, 1.861337, -3.83096, 0.0, 2.533419, -3.854491, 0.874815, 0.228456, -0.246836, -0.744458, 0.0, 0.0, 0.867679, 0.863951, -0.054376, -1.524467, 0.154151, -1.271524, 0.0, 0.0, -0.682177, 0.22116, -0.53886, -0.165292, 0.693949, -0.146965, 0.0, 0.0, -1.244849, -0.328832, -1.071534, 0.106222, 1.258921, 0.436118, 0.0, 0.0, 4.540814, 0.333357, 0.157692, -0.219837, -0.08972, -0.019389, 5.754574, 0.0, -8.505154, 1.959763, 0.199088, -1.017744, 0.696026, -0.931326, 1.360002 ],
			"intercept" : 34.747604
		},
		"class_3" : 	{
			"coeffs" : [ 0.0, -8.939165, 2.449948, -0.726363, 0.074482, -0.006229, 0.066524, -0.640546, 0.0, -2.294885, 1.409464, -0.004478, -0.52792, 0.434871, -0.030244, -1.613408, 0.0, 1.775068, -3.217394, -0.732023, 0.02979, 0.033243, -0.114384, 0.0, 0.0, 2.056089, 0.597105, -0.356004, 1.057473, -0.886606, 1.898637, 0.0, 0.0, 0.359551, 0.12947, -0.62872, -0.033115, 0.374511, -0.59779, 0.0, 0.0, -0.439899, 0.57863, -0.225112, -0.474393, -0.69823, 0.024491, 0.0, 0.0, 3.306078, -0.825879, -1.066698, 0.046715, -0.805926, -0.510395, -0.143496, 0.0, -8.524449, -1.213671, 0.500393, -0.09998, -0.274701, 0.028244, -0.114515 ],
			"intercept" : 51.005718
		},
		"class_4" : 	{
			"coeffs" : [ 0.0, 5.903325, -6.123075, 2.581363, -0.782294, -0.57327, 0.017516, -0.322995, 0.0, -0.319155, -1.222328, -0.192419, -0.3734, 0.810729, 0.289448, -0.660734, 0.0, 2.423113, -0.364018, 1.183649, 0.015559, 1.137209, 0.295846, 0.0, 0.0, -0.015388, 0.08036, 0.260006, -1.341312, -1.691519, -1.468088, 0.0, 0.0, -2.619165, -0.229035, 0.303698, -0.055896, -0.516568, 0.28933, 0.0, 0.0, 1.495674, -0.102928, -0.721968, -0.205725, 0.110031, 0.21905, 0.0, 0.0, -3.707443, -0.830721, -1.27496, -0.193607, -0.14407, 0.718021, 1.790203, 0.0, 6.317941, 1.884587, -0.576269, 0.881253, -0.106226, -0.026524, 0.368911 ],
			"intercept" : 44.265545
		},
		"class_5" : 	{
			"coeffs" : [ 0.0, -7.581316, -11.311668, -1.711746, -0.653131, -1.693564, -0.943669, -1.261563, 0.0, 1.275109, 0.318981, -0.198807, 0.386508, -0.277252, -0.636071, -7.791733, 0.0, 2.930969, -2.879639, -2.387623, 0.321762, -0.162699, -0.030661, 0.0, 0.0, -0.727057, -0.182197, 1.104478, -1.438622, 1.88885, 0.194536, 0.0, 0.0, -0.963977, 0.225004, -0.833723, -0.343251, -0.44625, 1.06526, 0.0, 0.0, -1.530908, 0.279945, -1.856295, -0.802241, 0.290558, 0.819057, 0.0, 0.0, 12.202333, -3.387255, -0.527496, 1.459877, 3.153577, 2.979064, 9.865434, 0.0, -6.337293, 1.837969, 1.564008, -2.785338, -3.810443, 2.63587, 2.230439 ],
			"intercept" : 138.517166
		},
		"class_6" : 	{
			"coeffs" : [ 0.0, 18.209957, -2.110596, -0.914124, 0.225634, 0.675203, 0.256769, 1.155926, 0.0, 1.494827, 0.495336, -0.328071, -0.352368, -0.052976, -0.680209, 4.084245, 0.0, -1.892001, 3.484683, -0.86715, -0.108588, 0.050611, -0.320324, 0.0, 0.0, -1.864759, -0.691067, -0.439267, 2.229364, -1.579019, 1.59622, 0.0, 0.0, 1.402406, -0.613978, -0.375822, 0.052947, 0.38641, -1.570449, 0.0, 0.0, 1.880685, 0.255342, 0.208323, 0.091794, -1.204298, -0.094026, 0.0, 0.0, -5.895102, 0.132221, 0.263336, 0.326088, -0.020342, 0.267636, 0.166686, 0.0, 19.039223, -0.094112, -0.651545, 1.04319, -0.390612, 0.535501, -0.115609 ],
			"intercept" : -10.779532
		},
		"class_7" : 	{
			"coeffs" : [ 0.0, -4.437694, 15.368718, -1.982383, 0.662612, 0.496689, -0.324129, 1.553946, 0.0, -2.33213, 0.11345, 1.06406, 0.546547, -1.039379, -0.528834, 5.586504, 0.0, -5.836297, 3.419236, -1.826518, -0.255881, -0.747401, 0.910356, 0.0, 0.0, -1.449404, 0.920748, -0.479161, 3.198895, 5.042346, 0.656192, 0.0, 0.0, 3.238847, 1.182647, 0.392672, 0.753621, 0.402864, 0.404699, 0.0, 0.0, -0.504504, 0.626129, 2.750122, 0.978084, 0.293054, -2.31574, 0.0, 0.0, -5.078635, 2.841266, 0.270971, -0.188901, -2.426054, -3.885043, -2.822866, 0.0, -9.828636, -4.191386, -0.165493, 1.066162, 2.95995, -1.404826, -0.941644 ],
			"intercept" : -192.439148
		}
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_il8", "version" : "2024-W14" },
	"options" :  { "alpha" : 1.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
RELOADING_MODEL_FROM_JSON_END ('digits_tiny', 'RidgeClassifier')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[1.500e-03 2.300e-03 9.881e-01 1.500e-03 4.700e-03 5.000e-04 6.000e-04
  9.000e-04]
 [5.590e-02 7.158e-01 1.520e-02 4.280e-02 3.040e-02 9.200e-03 4.520e-02
  8.550e-02]
 [4.000e-04 7.695e-01 1.113e-01 1.620e-02 1.370e-02 7.220e-02 1.590e-02
  7.000e-04]
 [1.300e-03 2.300e-03 3.000e-04 2.300e-03 3.100e-03 3.000e-04 7.000e-03
  9.833e-01]
 [5.099e-01 1.230e-02 1.700e-03 2.000e-03 1.400e-03 3.000e-04 4.572e-01
  1.530e-02]
 [1.680e-02 4.440e-02 4.000e-04 4.200e-03 1.300e-03 6.100e-03 9.248e-01
  1.900e-03]
 [1.058e-01 5.000e-04 0.000e+00 3.000e-04 4.200e-03 7.992e-01 1.300e-03
  8.880e-02]
 [9.688e-01 7.000e-04 9.500e-03 6.200e-03 3.500e-03 2.400e-03 5.600e-03
  3.300e-03]
 [2.000e-04 2.000e-04 6.683e-01 4.700e-03 3.800e-03 1.000e-03 7.000e-04
  3.210e-01]
 [2.000e-04 5.100e-03 1.590e-01 6.400e-03 9.000e-04 8.247e-01 3.700e-03
  0.000e+00]
 [1.000e-03 2.200e-03 1.740e-02 7.700e-03 9.565e-01 1.230e-02 9.000e-04
  2.000e-03]
 [1.000e-04 3.100e-03 2.800e-03 8.236e-01 1.350e-02 1.600e-03 1.400e-03
  1.540e-01]
 [3.250e-02 2.110e-01 1.436e-01 1.437e-01 6.020e-02 1.604e-01 3.210e-02
  2.165e-01]
 [1.089e-01 6.710e-02 1.446e-01 1.115e-01 9.970e-02 3.439e-01 6.410e-02
  6.020e-02]
 [9.552e-01 9.400e-03 1.000e-04 1.000e-03 6.700e-03 7.500e-03 1.960e-02
  6.000e-04]
 [6.702e-01 8.630e-02 1.890e-02 3.070e-02 1.410e-02 7.680e-02 2.190e-02
  8.100e-02]]
(16, 8)
(16, 8) float32
MODEL_PERFS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'digits_tiny', 'size': 16, 'accuracy': 0.875, 'auc': 1.0}
WRITING_PERF_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_digits_tiny.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'digits_tiny', 'training_time_in_sec': 0.015, 'prediction_time_in_sec': 0.0}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 0 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 1 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 2 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 3 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 4 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 5 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 6 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 7 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 8 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 9 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 10 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 11 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 12 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 13 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 14 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 15 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 16 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 17 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 18 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 19 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 20 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 21 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 22 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 23 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 24 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 25 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 26 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 27 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 28 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 29 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 30 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 31 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 32 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 33 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 34 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 35 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 36 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 37 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 38 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 39 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 40 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 41 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 42 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 43 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 44 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 45 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 46 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 47 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 48 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 49 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 50 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 51 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 52 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 53 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 54 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 55 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 56 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 57 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 58 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 59 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 60 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 61 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 62 64
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 63 64
{
   "Contributions" : {
      "X_0" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_1" : [ -0.009521, -0.000444, 0.005265, 0.000123, -0.000036, -0.003219, 0.005846, 0.001986 ],
      "X_2" : [ 0.020238, -0.009632, 0.000875, 0.007922, -0.015208, 0.012732, 0.017434, -0.034362 ],
      "X_3" : [ -0.000756, 0.001931, -0.000417, -0.003150, -0.002635, 0.004161, 0.003494, -0.002630 ],
      "X_4" : [ 0.003729, 0.001088, -0.002332, 0.003349, -0.011262, -0.001008, 0.007542, -0.001106 ],
      "X_5" : [ -0.000152, -0.003558, 0.012003, 0.002147, 0.009533, -0.016369, -0.004977, 0.001372 ],
      "X_6" : [ -0.000445, 0.000341, 0.001831, 0.003761, 0.002244, -0.000443, -0.005850, -0.001439 ],
      "X_7" : [ 0.001704, -0.004768, 0.002478, 0.003298, -0.001729, 0.002136, -0.000556, -0.002561 ],
      "X_8" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_9" : [ -0.018934, -0.001216, 0.006101, -0.008778, 0.003060, -0.006656, -0.000890, 0.027314 ],
      "X_10" : [ 0.002132, 0.002247, -0.006119, 0.020983, -0.012303, -0.006249, -0.004533, 0.003842 ],
      "X_11" : [ -0.000727, -0.000321, -0.000667, 0.001100, -0.002004, 0.001140, -0.000964, 0.002443 ],
      "X_12" : [ -0.002500, 0.004014, 0.006046, -0.004763, -0.007308, 0.007428, -0.000406, -0.002512 ],
      "X_13" : [ 0.002672, 0.000424, -0.003139, 0.002818, 0.003956, 0.002693, -0.005467, -0.003956 ],
      "X_14" : [ 0.003988, -0.001432, -0.001095, 0.000873, 0.002379, -0.011838, 0.001880, 0.005245 ],
      "X_15" : [ 0.001019, -0.005738, -0.000972, 0.004845, -0.000784, 0.004261, 0.000780, -0.003411 ],
      "X_16" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_17" : [ 0.007404, -0.000221, -0.001498, 0.007445, 0.005931, 0.004244, -0.014036, -0.009267 ],
      "X_18" : [ -0.004572, -0.002510, -0.001909, -0.025419, 0.003762, 0.003217, 0.011570, 0.015861 ],
      "X_19" : [ -0.006315, 0.031257, -0.013461, -0.003081, 0.015675, 0.008631, -0.010170, -0.022535 ],
      "X_20" : [ 0.001358, -0.000390, -0.000362, 0.000222, 0.000292, 0.004141, -0.002694, -0.002567 ],
      "X_21" : [ -0.006137, 0.003587, -0.002467, -0.004238, 0.021770, -0.001601, -0.001567, -0.009347 ],
      "X_22" : [ 0.001320, -0.002398, 0.001725, 0.001891, -0.000364, -0.000731, -0.001104, -0.000338 ],
      "X_23" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_24" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_25" : [ 0.005068, -0.019416, -0.007075, -0.002407, -0.000622, 0.008597, 0.004918, 0.010937 ],
      "X_26" : [ -0.000820, 0.004643, -0.020998, 0.003432, 0.006395, 0.014166, 0.001780, -0.008597 ],
      "X_27" : [ -0.002909, 0.002245, 0.008769, 0.002943, 0.006558, -0.018551, -0.004512, 0.005456 ],
      "X_28" : [ -0.005911, -0.008809, 0.003920, 0.026453, 0.014581, 0.002866, -0.005295, -0.027805 ],
      "X_29" : [ -0.002523, 0.048737, 0.018192, 0.001932, -0.030838, 0.004731, -0.028725, -0.011507 ],
      "X_30" : [ 0.022020, -0.019972, -0.004692, -0.003510, 0.002899, -0.002921, 0.008074, -0.001897 ],
      "X_31" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_32" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_33" : [ 0.002093, 0.002300, -0.004858, 0.004236, -0.004591, 0.002151, -0.003936, 0.002605 ],
      "X_34" : [ 0.007143, 0.006337, 0.002682, -0.001309, -0.003561, 0.001425, -0.004929, -0.007789 ],
      "X_35" : [ -0.022312, 0.004074, 0.008101, 0.000936, 0.004864, -0.001633, -0.001286, 0.007256 ],
      "X_36" : [ 0.000268, -0.005370, 0.006346, 0.001063, -0.000934, -0.010023, 0.000241, 0.008409 ],
      "X_37" : [ -0.000934, 0.001053, 0.014893, -0.000966, -0.004054, -0.007638, 0.001463, -0.003817 ],
      "X_38" : [ -0.000261, 0.000196, -0.003452, -0.000666, -0.002632, 0.003112, 0.003710, -0.000007 ],
      "X_39" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_40" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_41" : [ 0.006974, 0.000339, -0.004682, 0.007530, -0.008510, -0.005780, -0.002604, 0.006732 ],
      "X_42" : [ -0.020157, 0.007964, -0.005537, -0.004358, 0.003886, 0.003801, -0.000266, 0.014667 ],
      "X_43" : [ 0.007738, -0.007140, -0.004414, -0.006374, 0.019289, -0.008948, 0.002445, -0.002597 ],
      "X_44" : [ -0.003660, -0.008441, 0.007102, 0.003328, 0.004338, -0.012100, 0.009740, -0.000307 ],
      "X_45" : [ -0.001251, 0.001392, 0.000471, -0.000492, -0.004306, 0.005928, 0.009553, -0.011294 ],
      "X_46" : [ -0.004137, -0.003139, 0.000351, -0.004623, -0.007734, -0.002525, 0.004321, 0.017485 ],
      "X_47" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_48" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_49" : [ 0.010446, 0.003612, -0.000587, 0.001258, -0.018959, -0.008703, -0.007894, 0.020827 ],
      "X_50" : [ -0.045826, 0.035090, 0.020753, -0.014340, -0.003912, 0.026412, 0.008432, -0.026608 ],
      "X_51" : [ 0.013536, 0.006605, -0.000096, -0.002967, -0.026278, -0.007705, 0.008091, 0.008815 ],
      "X_52" : [ 0.006671, -0.004290, 0.002014, -0.000987, 0.001174, -0.003300, -0.002300, 0.001018 ],
      "X_53" : [ -0.017985, 0.016172, 0.001788, -0.009735, -0.001836, -0.022952, 0.001663, 0.032885 ],
      "X_54" : [ -0.007673, -0.002694, 0.013841, 0.004470, 0.008028, -0.028503, 0.004614, 0.007917 ],
      "X_55" : [ 0.001648, -0.000427, -0.008220, 0.000001, 0.008487, -0.005042, 0.006236, -0.002683 ],
      "X_56" : [ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 ],
      "X_57" : [ -0.007743, -0.000304, 0.005660, -0.000554, -0.000043, -0.003623, 0.005844, 0.000762 ],
      "X_58" : [ -0.008781, -0.006529, -0.000607, -0.008251, 0.002023, 0.006902, -0.001181, 0.016423 ],
      "X_59" : [ 0.006474, -0.001788, -0.004928, 0.001062, -0.001453, 0.002797, -0.006853, 0.004689 ],
      "X_60" : [ -0.014440, 0.001893, 0.008900, 0.000338, -0.010717, 0.028794, -0.012802, -0.001965 ],
      "X_61" : [ -0.005953, -0.007607, -0.020820, -0.013257, -0.010361, 0.071915, -0.004600, -0.009315 ],
      "X_62" : [ 0.000441, -0.000039, 0.024403, 0.002821, 0.009169, -0.036149, 0.006310, -0.006955 ],
      "X_63" : [ 0.003525, -0.001910, -0.007255, 0.000040, 0.008952, -0.005063, 0.006248, -0.004536 ]   
   },
   "Most_Contributive_Features_By_Class" : {
      "class_0" : [ 50, 35, 30, 2, 42, 9, 53, 60, 51, 49 ],
      "class_1" : [ 29, 50, 19, 30, 25, 53, 2, 28, 44, 42 ],
      "class_2" : [ 62, 26, 61, 50, 29, 37, 54, 19, 5, 60 ],
      "class_3" : [ 28, 18, 10, 50, 61, 53, 9, 58, 2, 41 ],
      "class_4" : [ 29, 51, 21, 43, 49, 19, 2, 28, 10, 4 ],
      "class_5" : [ 61, 62, 60, 54, 50, 53, 27, 5, 26, 2 ],
      "class_6" : [ 29, 2, 17, 60, 18, 19, 44, 45, 50, 51 ],
      "class_7" : [ 2, 53, 28, 9, 50, 19, 49, 46, 58, 18 ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_digits_tiny_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_digits_tiny_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('digits_tiny', 'RidgeClassifier', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('digits_tiny', 'RidgeClassifier', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('digits_tiny', 'RidgeClassifier', 'duckdb')
ore_4" AS "Score_4",
  arg_max_cte."Proba_4" AS "Proba_4",
  CASE WHEN (arg_max_cte."Proba_4" IS NULL OR arg_max_cte."Proba_4" > 0.0) THEN LN( arg_max_cte."Proba_4" ) ELSE -1.79769313486231e+308 END AS "LogProba_4",
  arg_max_cte."Score_5" AS "Score_5",
  arg_max_cte."Proba_5" AS "Proba_5",
  CASE WHEN (arg_max_cte."Proba_5" IS NULL OR arg_max_cte."Proba_5" > 0.0) THEN LN( arg_max_cte."Proba_5" ) ELSE -1.79769313486231e+308 END AS "LogProba_5",
  arg_max_cte."Score_6" AS "Score_6",
  arg_max_cte."Proba_6" AS "Proba_6",
  CASE WHEN (arg_max_cte."Proba_6" IS NULL OR arg_max_cte."Proba_6" > 0.0) THEN LN( arg_max_cte."Proba_6" ) ELSE -1.79769313486231e+308 END AS "LogProba_6",
  arg_max_cte."Score_7" AS "Score_7",
  arg_max_cte."Proba_7" AS "Proba_7",
  CASE WHEN (arg_max_cte."Proba_7" IS NULL OR arg_max_cte."Proba_7" > 0.0) THEN LN( arg_max_cte."Proba_7" ) ELSE -1.79769313486231e+308 END AS "LogProba_7",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('digits_tiny', 'RidgeClassifier', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 16 entries, 0 to 15
Data columns (total 64 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     16 non-null     float32
 1   X_1     16 non-null     float32
 2   X_2     16 non-null     float32
 3   X_3     16 non-null     float32
 4   X_4     16 non-null     float32
 5   X_5     16 non-null     float32
 6   X_6     16 non-null     float32
 7   X_7     16 non-null     float32
 8   X_8     16 non-null     float32
 9   X_9     16 non-null     float32
 10  X_10    16 non-null     float32
 11  X_11    16 non-null     float32
 12  X_12    16 non-null     float32
 13  X_13    16 non-null     float32
 14  X_14    16 non-null     float32
 15  X_15    16 non-null     float32
 16  X_16    16 non-null     float32
 17  X_17    16 non-null     float32
 18  X_18    16 non-null     float32
 19  X_19    16 non-null     float32
 20  X_20    16 non-null     float32
 21  X_21    16 non-null     float32
 22  X_22    16 non-null     float32
 23  X_23    16 non-null     float32
 24  X_24    16 non-null     float32
 25  X_25    16 non-null     float32
 26  X_26    16 non-null     float32
 27  X_27    16 non-null     float32
 28  X_28    16 non-null     float32
 29  X_29    16 non-null     float32
 30  X_30    16 non-null     float32
 31  X_31    16 non-null     float32
 32  X_32    16 non-null     float32
 33  X_33    16 non-null     float32
 34  X_34    16 non-null     float32
 35  X_35    16 non-null     float32
 36  X_36    16 non-null     float32
 37  X_37    16 non-null     float32
 38  X_38    16 non-null     float32
 39  X_39    16 non-null     float32
 40  X_40    16 non-null     float32
 41  X_41    16 non-null     float32
 42  X_42    16 non-null     float32
 43  X_43    16 non-null     float32
 44  X_44    16 non-null     float32
 45  X_45    16 non-null     float32
 46  X_46    16 non-null     float32
 47  X_47    16 non-null     float32
 48  X_48    16 non-null     float32
 49  X_49    16 non-null     float32
 50  X_50    16 non-null     float32
 51  X_51    16 non-null     float32
 52  X_52    16 non-null     float32
 53  X_53    16 non-null     float32
 54  X_54    16 non-null     float32
 55  X_55    16 non-null     float32
 56  X_56    16 non-null     float32
 57  X_57    16 non-null     float32
 58  X_58    16 non-null     float32
 59  X_59    16 non-null     float32
 60  X_60    16 non-null     float32
 61  X_61    16 non-null     float32
 62  X_62    16 non-null     float32
 63  X_63    16 non-null     float32
dtypes: float32(64)
memory usage: 4.1 KB
       X_0  X_1   X_2   X_3   X_4   X_5  ...  X_58  X_59  X_60  X_61  X_62  X_63
index                                    ...                                    
0      0.0  0.0   0.0   3.0  15.0  10.0  ...   0.0   4.0   9.0  14.0   7.0   0.0
1      0.0  0.0  11.0  10.0   0.0   0.0  ...   8.0  16.0  16.0  16.0  16.0  12.0
2      0.0  0.0   0.0  15.0  11.0   0.0  ...   0.0  14.0   4.0   0.0   0.0   0.0
3      0.0  0.0   7.0  13.0  10.0   1.0  ...   7.0  13.0  16.0  15.0   4.0   0.0
4      0.0  0.0   5.0  12.0  13.0   2.0  ...   6.0  16.0  13.0   3.0   0.0   0.0
5      0.0  0.0   1.0   8.0  15.0  11.0  ...   0.0  11.0  15.0   8.0   0.0   0.0
6      0.0  0.0   2.0  13.0  16.0  13.0  ...   3.0  15.0   2.0   0.0   0.0   0.0
7      0.0  0.0   4.0  12.0   5.0   0.0  ...   2.0  11.0  16.0  11.0   0.0   0.0
8      0.0  0.0   1.0  12.0  16.0  14.0  ...   3.0  12.0  16.0  11.0   1.0   0.0
9      0.0  0.0   2.0  13.0  16.0  14.0  ...   5.0  15.0   4.0   0.0   0.0   0.0
10     0.0  0.0   0.0   3.0  14.0   9.0  ...   0.0   3.0  16.0   9.0   0.0   0.0
11     0.0  0.0   5.0  13.0  16.0  10.0  ...   5.0  14.0  15.0   9.0   0.0   0.0
12     0.0  1.0  11.0  13.0  10.0   1.0  ...   9.0  15.0  16.0  13.0   3.0   0.0
13     0.0  0.0   0.0   8.0  16.0  16.0  ...   0.0  12.0   9.0   0.0   0.0   0.0
14     0.0  0.0   1.0   9.0  15.0  11.0  ...   1.0  10.0  13.0   3.0   0.0   0.0
15     0.0  0.0   5.0  12.0   1.0   6.0  ...   4.0  12.0  12.0   3.0   0.0   0.0

[16 rows x 64 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 16 entries, 0 to 15
Data columns (total 27 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          16 non-null     int64  
 1   Score_0        16 non-null     float64
 2   Proba_0        16 non-null     float64
 3   LogProba_0     16 non-null     float64
 4   Score_1        16 non-null     float64
 5   Proba_1        16 non-null     float64
 6   LogProba_1     16 non-null     float64
 7   Score_2        16 non-null     float64
 8   Proba_2        16 non-null     float64
 9   LogProba_2     16 non-null     float64
 10  Score_3        16 non-null     float64
 11  Proba_3        16 non-null     float64
 12  LogProba_3     16 non-null     float64
 13  Score_4        16 non-null     float64
 14  Proba_4        16 non-null     float64
 15  LogProba_4     16 non-null     float64
 16  Score_5        16 non-null     float64
 17  Proba_5        16 non-null     float64
 18  LogProba_5     16 non-null     float64
 19  Score_6        16 non-null     float64
 20  Proba_6        16 non-null     float64
 21  LogProba_6     16 non-null     float64
 22  Score_7        16 non-null     float64
 23  Proba_7        16 non-null     float64
 24  LogProba_7     16 non-null     float64
 25  Decision       16 non-null     int64  
 26  DecisionProba  16 non-null     float64
dtypes: float64(25), int64(2)
memory usage: 3.5 KB
    index   Score_0   Proba_0  ...  LogProba_7  Decision  DecisionProba
0       0 -1.471344  0.001462  ...   -6.997177         2       0.988053
1       1 -0.596851  0.055909  ...   -2.459102         1       0.715765
2       2 -4.441638  0.000423  ...   -7.210347         1       0.769530
3       3 -1.651721  0.001320  ...   -0.016822         7       0.983319
4       4  3.233078  0.509855  ...   -4.180302         0       0.509855
5       5 -0.005911  0.016846  ...   -6.242424         6       0.924840
6       6  2.583676  0.105765  ...   -2.421850         5       0.799179
7       7  4.176592  0.968829  ...   -5.711402         0       0.968829
8       8 -4.037489  0.000151  ...   -1.136242         2       0.668321
9       9 -3.521830  0.000217  ...  -11.903492         5       0.824668
10     10 -2.673797  0.001041  ...   -6.220128         4       0.956535
11     11 -5.222513  0.000071  ...   -1.871033         3       0.823586
12     12 -1.867259  0.032512  ...   -1.530234         7       0.216485
13     13 -0.720654  0.108854  ...   -2.809936         5       0.343884
14     14  4.435720  0.955162  ...   -7.360410         0       0.955162
15     15  1.782354  0.670177  ...   -2.513042         0       0.670177

[16 rows x 27 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Score_3', 'Proba_3',
       'LogProba_3', 'Score_4', 'Proba_4', 'LogProba_4', 'Score_5', 'Proba_5',
       'LogProba_5', 'Score_6', 'Proba_6', 'LogProba_6', 'Score_7', 'Proba_7',
       'LogProba_7', 'Decision', 'DecisionProba'],
      dtype='object')
    index   Score_0  SQL_Proba_0  ...  Py_Proba_6  Py_Proba_7  Py_Decision
0       0 -1.471344     0.001462  ...    0.000618    0.000914            2
1       1 -0.596851     0.055909  ...    0.045248    0.085513            1
2       2 -4.441638     0.000423  ...    0.015921    0.000739            1
3       3 -1.651721     0.001320  ...    0.007035    0.983319            9
4       4  3.233078     0.509855  ...    0.457211    0.015294            0
5       5 -0.005911     0.016846  ...    0.924841    0.001945            8
6       6  2.583676     0.105765  ...    0.001274    0.088756            7
7       7  4.176592     0.968829  ...    0.005594    0.003308            0
8       8 -4.037489     0.000151  ...    0.000741    0.321020            2
9       9 -3.521830     0.000217  ...    0.003738    0.000007            7
10     10 -2.673797     0.001041  ...    0.000944    0.001989            4
11     11 -5.222513     0.000071  ...    0.001376    0.153958            3
12     12 -1.867259     0.032512  ...    0.032146    0.216487            9
13     13 -0.720654     0.108854  ...    0.064067    0.060212            7
14     14  4.435720     0.955162  ...    0.019568    0.000636            0
15     15  1.782354     0.670177  ...    0.021923    0.081025            0

[16 rows x 36 columns]
MLLITE_CLASS_SQL_ERROR ('digits_tiny', 'RidgeClassifier', 'duckdb') ('Py_Proba_0', 'SQL_Proba_0') 1.048456882757889e-06
    Py_Proba_0  SQL_Proba_0   SQL_Error_0
0     0.001462     0.001462 -2.017250e-08
1     0.055906     0.055909 -2.432717e-06
2     0.000423     0.000423 -1.544082e-08
3     0.001320     0.001320 -1.949946e-08
4     0.509850     0.509855 -5.273759e-06
5     0.016845     0.016846 -4.052440e-07
6     0.105766     0.105765  1.280136e-06
7     0.968829     0.968829 -2.166483e-07
8     0.000151     0.000151 -2.316160e-09
9     0.000217     0.000217 -2.946433e-09
10    0.001041     0.001041 -1.299705e-08
11    0.000071     0.000071 -2.117548e-09
12    0.032511     0.032512 -3.190191e-07
13    0.108853     0.108854 -6.552033e-07
14    0.955161     0.955162 -8.922463e-07
15    0.670172     0.670177 -5.224847e-06
MLLITE_CLASS_SQL_ERROR ('digits_tiny', 'RidgeClassifier', 'duckdb') ('Py_Proba_1', 'SQL_Proba_1') 6.051172843112846e-07
    Py_Proba_1  SQL_Proba_1   SQL_Error_1
0     0.002258     0.002258 -4.937860e-08
1     0.715767     0.715765  1.932482e-06
2     0.769531     0.769530  1.796266e-06
3     0.002339     0.002339 -4.943529e-08
4     0.012271     0.012271  3.232113e-07
5     0.044385     0.044386 -6.408750e-08
6     0.000453     0.000453  1.685269e-08
7     0.000672     0.000672 -9.427230e-09
8     0.000158     0.000158 -1.064202e-09
9     0.005106     0.005106  1.316459e-07
10    0.002180     0.002180 -1.995899e-10
11    0.003071     0.003071 -6.167146e-08
12    0.210976     0.210979 -3.581556e-06
13    0.067123     0.067122  7.163393e-07
14    0.009395     0.009395  8.545248e-08
15    0.086327     0.086326  8.628069e-07
MLLITE_CLASS_SQL_ERROR ('digits_tiny', 'RidgeClassifier', 'duckdb') ('Py_Proba_2', 'SQL_Proba_2') 6.885715139736167e-07
    Py_Proba_2  SQL_Proba_2   SQL_Error_2
0     0.988053     0.988053  3.600650e-08
1     0.015157     0.015157 -7.382805e-08
2     0.111269     0.111269 -1.332964e-07
3     0.000268     0.000268 -1.124177e-09
4     0.001661     0.001661  2.606966e-09
5     0.000371     0.000371  6.717467e-09
6     0.000006     0.000006  2.565368e-10
7     0.009481     0.009481 -1.419186e-07
8     0.668324     0.668321  2.873711e-06
9     0.158999     0.158996  2.465565e-06
10    0.017386     0.017386  4.212311e-07
11    0.002751     0.002751 -1.713204e-08
12    0.143565     0.143564  1.803146e-06
13    0.144639     0.144637  2.711311e-06
14    0.000121     0.000121  1.210881e-09
15    0.018871     0.018872 -3.280822e-07
MLLITE_CLASS_SQL_ERROR ('digits_tiny', 'RidgeClassifier', 'duckdb') ('Py_Proba_3', 'SQL_Proba_3') 6.759691602737618e-07
    Py_Proba_3  SQL_Proba_3   SQL_Error_3
0     0.001515     0.001515  1.571571e-08
1     0.042790     0.042789  5.537488e-07
2     0.016185     0.016185  3.484518e-09
3     0.002262     0.002262  6.235998e-09
4     0.002017     0.002017  9.775928e-08
5     0.004217     0.004217  1.050536e-08
6     0.000345     0.000345  1.535196e-08
7     0.006241     0.006241  7.771333e-08
8     0.004731     0.004731  1.714456e-07
9     0.006377     0.006377  1.048102e-07
10    0.007667     0.007666  2.790427e-07
11    0.823593     0.823586  6.617507e-06
12    0.143726     0.143724  1.574195e-06
13    0.111509     0.111510 -5.021469e-07
14    0.000996     0.000996  4.250161e-08
15    0.030739     0.030738  7.433426e-07
MLLITE_CLASS_SQL_ERROR ('digits_tiny', 'RidgeClassifier', 'duckdb') ('Py_Proba_4', 'SQL_Proba_4') 2.5797138836124926e-07
    Py_Proba_4  SQL_Proba_4   SQL_Error_4
0     0.004666     0.004666 -9.777512e-08
1     0.030448     0.030447  3.152448e-07
2     0.013730     0.013730 -3.373744e-07
3     0.003149     0.003149  2.714499e-08
4     0.001365     0.001365  3.137478e-08
5     0.001319     0.001319  1.597328e-08
6     0.004220     0.004220  1.264717e-07
7     0.003487     0.003487  1.213519e-08
8     0.003827     0.003827  1.379479e-07
9     0.000891     0.000891  3.582512e-09
10    0.956534     0.956535 -9.758437e-07
11    0.013529     0.013529 -1.053809e-08
12    0.060181     0.060180  1.364693e-06
13    0.099718     0.099718  2.528392e-07
14    0.006662     0.006662  1.725624e-07
15    0.014143     0.014143  2.460409e-07
MLLITE_CLASS_SQL_ERROR ('digits_tiny', 'RidgeClassifier', 'duckdb') ('Py_Proba_5', 'SQL_Proba_5') 8.369746723856543e-07
    Py_Proba_5  SQL_Proba_5   SQL_Error_5
0     0.000513     0.000513 -3.429684e-09
1     0.009171     0.009171  2.003571e-07
2     0.072201     0.072202 -7.426510e-07
3     0.000308     0.000308 -3.139858e-09
4     0.000331     0.000331  6.598094e-10
5     0.006076     0.006076 -3.801172e-08
6     0.799179     0.799179 -4.207287e-07
7     0.002387     0.002387 -2.445359e-08
8     0.001048     0.001048 -5.442844e-10
9     0.824666     0.824668 -2.556971e-06
10    0.012259     0.012259 -9.377240e-08
11    0.001650     0.001650 -5.992998e-08
12    0.160408     0.160411 -2.342792e-06
13    0.343878     0.343884 -6.333557e-06
14    0.007462     0.007462  1.851875e-07
15    0.076799     0.076799  3.854089e-07
MLLITE_CLASS_SQL_ERROR ('digits_tiny', 'RidgeClassifier', 'duckdb') ('Py_Proba_6', 'SQL_Proba_6') 5.24423029335381e-07
    Py_Proba_6  SQL_Proba_6   SQL_Error_6
0     0.000618     0.000618 -5.268380e-09
1     0.045248     0.045250 -1.661128e-06
2     0.015921     0.015922 -4.518250e-07
3     0.007035     0.007035 -3.509602e-08
4     0.457211     0.457206  4.737971e-06
5     0.924841     0.924840  4.102862e-07
6     0.001274     0.001274  3.944477e-08
7     0.005594     0.005594 -3.303067e-08
8     0.000741     0.000741  5.253678e-09
9     0.003738     0.003738  2.040253e-08
10    0.000944     0.000944 -1.172750e-08
11    0.001376     0.001376 -3.286809e-08
12    0.032146     0.032146  3.613437e-08
13    0.064067     0.064067  4.096524e-07
14    0.019568     0.019568  4.982074e-07
15    0.021923     0.021923 -2.472755e-09
MLLITE_CLASS_SQL_ERROR ('digits_tiny', 'RidgeClassifier', 'duckdb') ('Py_Proba_7', 'SQL_Proba_7') 1.2896621972602349e-06
    Py_Proba_7  SQL_Proba_7   SQL_Error_7
0     0.000914     0.000914 -1.717508e-09
1     0.085513     0.085512  1.050356e-06
2     0.000739     0.000739 -2.413844e-08
3     0.983319     0.983319  2.598105e-07
4     0.015294     0.015294  1.621618e-07
5     0.001945     0.001945 -2.700124e-08
6     0.088756     0.088757 -9.111492e-07
7     0.003308     0.003308  1.050110e-07
8     0.321020     0.321023 -3.310642e-06
9     0.000007     0.000007  4.977702e-11
10    0.001989     0.001989  7.202882e-08
11    0.153958     0.153965 -6.478120e-06
12    0.216487     0.216485  1.476374e-06
13    0.060212     0.060209  3.311359e-06
14    0.000636     0.000636  3.094640e-08
15    0.081025     0.081021  3.413729e-06
MLLITE_CLASS_SQL_EXECUTION_STATUS ('digits_tiny', 'RidgeClassifier', 'duckdb', 'Success')
    Py_Decision  SQL_Decision
0             2             2
1             1             1
2             1             1
3             9             7
4             0             0
5             8             6
6             7             5
7             0             0
8             2             2
9             7             5
10            4             4
11            3             3
12            9             7
13            7             5
14            0             0
15            0             0
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_digits_tiny_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('digits_tiny', 'RidgeClassifier', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('digits_tiny', 'RidgeClassifier', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('digits_tiny', 'RidgeClassifier', 'sqlite')
ore_4" AS "Score_4",
  arg_max_cte."Proba_4" AS "Proba_4",
  CASE WHEN (arg_max_cte."Proba_4" IS NULL OR arg_max_cte."Proba_4" > 0.0) THEN LN( arg_max_cte."Proba_4" ) ELSE -1.79769313486231e+308 END AS "LogProba_4",
  arg_max_cte."Score_5" AS "Score_5",
  arg_max_cte."Proba_5" AS "Proba_5",
  CASE WHEN (arg_max_cte."Proba_5" IS NULL OR arg_max_cte."Proba_5" > 0.0) THEN LN( arg_max_cte."Proba_5" ) ELSE -1.79769313486231e+308 END AS "LogProba_5",
  arg_max_cte."Score_6" AS "Score_6",
  arg_max_cte."Proba_6" AS "Proba_6",
  CASE WHEN (arg_max_cte."Proba_6" IS NULL OR arg_max_cte."Proba_6" > 0.0) THEN LN( arg_max_cte."Proba_6" ) ELSE -1.79769313486231e+308 END AS "LogProba_6",
  arg_max_cte."Score_7" AS "Score_7",
  arg_max_cte."Proba_7" AS "Proba_7",
  CASE WHEN (arg_max_cte."Proba_7" IS NULL OR arg_max_cte."Proba_7" > 0.0) THEN LN( arg_max_cte."Proba_7" ) ELSE -1.79769313486231e+308 END AS "LogProba_7",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('digits_tiny', 'RidgeClassifier', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 16 entries, 0 to 15
Data columns (total 64 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     16 non-null     float32
 1   X_1     16 non-null     float32
 2   X_2     16 non-null     float32
 3   X_3     16 non-null     float32
 4   X_4     16 non-null     float32
 5   X_5     16 non-null     float32
 6   X_6     16 non-null     float32
 7   X_7     16 non-null     float32
 8   X_8     16 non-null     float32
 9   X_9     16 non-null     float32
 10  X_10    16 non-null     float32
 11  X_11    16 non-null     float32
 12  X_12    16 non-null     float32
 13  X_13    16 non-null     float32
 14  X_14    16 non-null     float32
 15  X_15    16 non-null     float32
 16  X_16    16 non-null     float32
 17  X_17    16 non-null     float32
 18  X_18    16 non-null     float32
 19  X_19    16 non-null     float32
 20  X_20    16 non-null     float32
 21  X_21    16 non-null     float32
 22  X_22    16 non-null     float32
 23  X_23    16 non-null     float32
 24  X_24    16 non-null     float32
 25  X_25    16 non-null     float32
 26  X_26    16 non-null     float32
 27  X_27    16 non-null     float32
 28  X_28    16 non-null     float32
 29  X_29    16 non-null     float32
 30  X_30    16 non-null     float32
 31  X_31    16 non-null     float32
 32  X_32    16 non-null     float32
 33  X_33    16 non-null     float32
 34  X_34    16 non-null     float32
 35  X_35    16 non-null     float32
 36  X_36    16 non-null     float32
 37  X_37    16 non-null     float32
 38  X_38    16 non-null     float32
 39  X_39    16 non-null     float32
 40  X_40    16 non-null     float32
 41  X_41    16 non-null     float32
 42  X_42    16 non-null     float32
 43  X_43    16 non-null     float32
 44  X_44    16 non-null     float32
 45  X_45    16 non-null     float32
 46  X_46    16 non-null     float32
 47  X_47    16 non-null     float32
 48  X_48    16 non-null     float32
 49  X_49    16 non-null     float32
 50  X_50    16 non-null     float32
 51  X_51    16 non-null     float32
 52  X_52    16 non-null     float32
 53  X_53    16 non-null     float32
 54  X_54    16 non-null     float32
 55  X_55    16 non-null     float32
 56  X_56    16 non-null     float32
 57  X_57    16 non-null     float32
 58  X_58    16 non-null     float32
 59  X_59    16 non-null     float32
 60  X_60    16 non-null     float32
 61  X_61    16 non-null     float32
 62  X_62    16 non-null     float32
 63  X_63    16 non-null     float32
dtypes: float32(64)
memory usage: 4.1 KB
       X_0  X_1   X_2   X_3   X_4   X_5  ...  X_58  X_59  X_60  X_61  X_62  X_63
index                                    ...                                    
0      0.0  0.0   0.0   3.0  15.0  10.0  ...   0.0   4.0   9.0  14.0   7.0   0.0
1      0.0  0.0  11.0  10.0   0.0   0.0  ...   8.0  16.0  16.0  16.0  16.0  12.0
2      0.0  0.0   0.0  15.0  11.0   0.0  ...   0.0  14.0   4.0   0.0   0.0   0.0
3      0.0  0.0   7.0  13.0  10.0   1.0  ...   7.0  13.0  16.0  15.0   4.0   0.0
4      0.0  0.0   5.0  12.0  13.0   2.0  ...   6.0  16.0  13.0   3.0   0.0   0.0
5      0.0  0.0   1.0   8.0  15.0  11.0  ...   0.0  11.0  15.0   8.0   0.0   0.0
6      0.0  0.0   2.0  13.0  16.0  13.0  ...   3.0  15.0   2.0   0.0   0.0   0.0
7      0.0  0.0   4.0  12.0   5.0   0.0  ...   2.0  11.0  16.0  11.0   0.0   0.0
8      0.0  0.0   1.0  12.0  16.0  14.0  ...   3.0  12.0  16.0  11.0   1.0   0.0
9      0.0  0.0   2.0  13.0  16.0  14.0  ...   5.0  15.0   4.0   0.0   0.0   0.0
10     0.0  0.0   0.0   3.0  14.0   9.0  ...   0.0   3.0  16.0   9.0   0.0   0.0
11     0.0  0.0   5.0  13.0  16.0  10.0  ...   5.0  14.0  15.0   9.0   0.0   0.0
12     0.0  1.0  11.0  13.0  10.0   1.0  ...   9.0  15.0  16.0  13.0   3.0   0.0
13     0.0  0.0   0.0   8.0  16.0  16.0  ...   0.0  12.0   9.0   0.0   0.0   0.0
14     0.0  0.0   1.0   9.0  15.0  11.0  ...   1.0  10.0  13.0   3.0   0.0   0.0
15     0.0  0.0   5.0  12.0   1.0   6.0  ...   4.0  12.0  12.0   3.0   0.0   0.0

[16 rows x 64 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 16 entries, 0 to 15
Data columns (total 27 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          16 non-null     int64  
 1   Score_0        16 non-null     float64
 2   Proba_0        16 non-null     float64
 3   LogProba_0     16 non-null     float64
 4   Score_1        16 non-null     float64
 5   Proba_1        16 non-null     float64
 6   LogProba_1     16 non-null     float64
 7   Score_2        16 non-null     float64
 8   Proba_2        16 non-null     float64
 9   LogProba_2     16 non-null     float64
 10  Score_3        16 non-null     float64
 11  Proba_3        16 non-null     float64
 12  LogProba_3     16 non-null     float64
 13  Score_4        16 non-null     float64
 14  Proba_4        16 non-null     float64
 15  LogProba_4     16 non-null     float64
 16  Score_5        16 non-null     float64
 17  Proba_5        16 non-null     float64
 18  LogProba_5     16 non-null     float64
 19  Score_6        16 non-null     float64
 20  Proba_6        16 non-null     float64
 21  LogProba_6     16 non-null     float64
 22  Score_7        16 non-null     float64
 23  Proba_7        16 non-null     float64
 24  LogProba_7     16 non-null     float64
 25  Decision       16 non-null     int64  
 26  DecisionProba  16 non-null     float64
dtypes: float64(25), int64(2)
memory usage: 3.5 KB
    index   Score_0   Proba_0  ...  LogProba_7  Decision  DecisionProba
0       0 -1.471331  0.001462  ...   -6.997215         2       0.988053
1       1 -0.596858  0.055908  ...   -2.459099         1       0.715767
2       2 -4.441642  0.000423  ...   -7.210348         1       0.769531
3       3 -1.651725  0.001320  ...   -0.016822         7       0.983319
4       4  3.233070  0.509854  ...   -4.180310         0       0.509854
5       5 -0.005919  0.016846  ...   -6.242453         6       0.924841
6       6  2.583674  0.105765  ...   -2.421878         5       0.799182
7       7  4.176597  0.968829  ...   -5.711408         0       0.968829
8       8 -4.037502  0.000151  ...   -1.136259         2       0.668326
9       9 -3.521837  0.000217  ...  -11.903496         5       0.824670
10     10 -2.673797  0.001041  ...   -6.220103         4       0.956535
11     11 -5.222515  0.000071  ...   -1.871035         3       0.823587
12     12 -1.867261  0.032511  ...   -1.530228         7       0.216486
13     13 -0.720657  0.108853  ...   -2.809890         5       0.343882
14     14  4.435720  0.955162  ...   -7.360422         0       0.955162
15     15  1.782350  0.670177  ...   -2.513048         0       0.670177

[16 rows x 27 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Score_3', 'Proba_3',
       'LogProba_3', 'Score_4', 'Proba_4', 'LogProba_4', 'Score_5', 'Proba_5',
       'LogProba_5', 'Score_6', 'Proba_6', 'LogProba_6', 'Score_7', 'Proba_7',
       'LogProba_7', 'Decision', 'DecisionProba'],
      dtype='object')
    index   Score_0  SQL_Proba_0  ...  Py_Proba_6  Py_Proba_7  Py_Decision
0       0 -1.471331     0.001462  ...    0.000618    0.000914            2
1       1 -0.596858     0.055908  ...    0.045248    0.085513            1
2       2 -4.441642     0.000423  ...    0.015921    0.000739            1
3       3 -1.651725     0.001320  ...    0.007035    0.983319            9
4       4  3.233070     0.509854  ...    0.457211    0.015294            0
5       5 -0.005919     0.016846  ...    0.924841    0.001945            8
6       6  2.583674     0.105765  ...    0.001274    0.088756            7
7       7  4.176597     0.968829  ...    0.005594    0.003308            0
8       8 -4.037502     0.000151  ...    0.000741    0.321020            2
9       9 -3.521837     0.000217  ...    0.003738    0.000007            7
10     10 -2.673797     0.001041  ...    0.000944    0.001989            4
11     11 -5.222515     0.000071  ...    0.001376    0.153958            3
12     12 -1.867261     0.032511  ...    0.032146    0.216487            9
13     13 -0.720657     0.108853  ...    0.064067    0.060212            7
14     14  4.435720     0.955162  ...    0.019568    0.000636            0
15     15  1.782350     0.670177  ...    0.021923    0.081025            0

[16 rows x 36 columns]
MLLITE_CLASS_SQL_ERROR ('digits_tiny', 'RidgeClassifier', 'sqlite') ('Py_Proba_0', 'SQL_Proba_0') 9.006557259703566e-07
    Py_Proba_0  SQL_Proba_0   SQL_Error_0
0     0.001462     0.001462 -2.740020e-08
1     0.055906     0.055908 -1.646820e-06
2     0.000423     0.000423 -9.881324e-09
3     0.001320     0.001320 -9.698775e-09
4     0.509850     0.509854 -4.140937e-06
5     0.016845     0.016846 -2.593484e-07
6     0.105766     0.105765  1.389210e-06
7     0.968829     0.968829 -4.173319e-07
8     0.000151     0.000151 -1.796939e-09
9     0.000217     0.000217  3.027327e-10
10    0.001041     0.001041 -1.836413e-08
11    0.000071     0.000071 -1.857506e-09
12    0.032511     0.032511 -2.424490e-07
13    0.108853     0.108853 -1.293574e-07
14    0.955161     0.955162 -8.579509e-07
15    0.670172     0.670177 -5.257786e-06
MLLITE_CLASS_SQL_ERROR ('digits_tiny', 'RidgeClassifier', 'sqlite') ('Py_Proba_1', 'SQL_Proba_1') 3.1027185930367307e-07
    Py_Proba_1  SQL_Proba_1   SQL_Error_1
0     0.002258     0.002258 -3.393509e-08
1     0.715767     0.715767  6.266705e-07
2     0.769531     0.769531  3.603824e-07
3     0.002339     0.002339 -3.335828e-08
4     0.012271     0.012271  1.688257e-07
5     0.044385     0.044386 -6.700559e-08
6     0.000453     0.000453  1.641696e-08
7     0.000672     0.000672 -5.237078e-09
8     0.000158     0.000158 -2.310794e-09
9     0.005106     0.005106  1.645426e-07
10    0.002180     0.002180 -1.125555e-08
11    0.003071     0.003071 -3.975893e-08
12    0.210976     0.210977 -1.785893e-06
13    0.067123     0.067122  1.085689e-06
14    0.009395     0.009395  1.308890e-07
15    0.086327     0.086326  4.321799e-07
MLLITE_CLASS_SQL_ERROR ('digits_tiny', 'RidgeClassifier', 'sqlite') ('Py_Proba_2', 'SQL_Proba_2') 7.393588078348419e-07
    Py_Proba_2  SQL_Proba_2   SQL_Error_2
0     0.988053     0.988053 -1.446398e-07
1     0.015157     0.015157  9.373841e-08
2     0.111269     0.111269  2.453304e-07
3     0.000268     0.000268  2.708709e-11
4     0.001661     0.001661  3.785688e-09
5     0.000371     0.000371  6.376258e-09
6     0.000006     0.000006  2.854666e-10
7     0.009481     0.009481 -8.937611e-08
8     0.668324     0.668326 -2.367210e-06
9     0.158999     0.158995  3.905824e-06
10    0.017386     0.017386  2.795831e-07
11    0.002751     0.002751 -1.245838e-08
12    0.143565     0.143564  1.320840e-06
13    0.144639     0.144636  2.952164e-06
14    0.000121     0.000121  1.191979e-09
15    0.018871     0.018872 -4.069104e-07
MLLITE_CLASS_SQL_ERROR ('digits_tiny', 'RidgeClassifier', 'sqlite') ('Py_Proba_3', 'SQL_Proba_3') 5.767168619827615e-07
    Py_Proba_3  SQL_Proba_3   SQL_Error_3
0     0.001515     0.001515  3.232598e-08
1     0.042790     0.042789  7.794282e-07
2     0.016185     0.016185  1.434363e-07
3     0.002262     0.002262  1.568129e-08
4     0.002017     0.002017  8.170143e-08
5     0.004217     0.004217  2.336706e-09
6     0.000345     0.000345  1.139549e-08
7     0.006241     0.006241  9.258216e-08
8     0.004731     0.004731  1.082877e-07
9     0.006377     0.006377  1.772744e-07
10    0.007667     0.007666  2.142539e-07
11    0.823593     0.823587  6.186289e-06
12    0.143726     0.143725  1.506132e-07
13    0.111509     0.111510 -3.084270e-07
14    0.000996     0.000996  4.292680e-08
15    0.030739     0.030738  8.805101e-07
MLLITE_CLASS_SQL_ERROR ('digits_tiny', 'RidgeClassifier', 'sqlite') ('Py_Proba_4', 'SQL_Proba_4') 2.4800632335057017e-07
    Py_Proba_4  SQL_Proba_4   SQL_Error_4
0     0.004666     0.004666  1.361101e-08
1     0.030448     0.030447  3.664514e-07
2     0.013730     0.013730 -2.588245e-07
3     0.003149     0.003149  4.825637e-08
4     0.001365     0.001365  1.476440e-08
5     0.001319     0.001319  1.733151e-08
6     0.004220     0.004220  1.208491e-07
7     0.003487     0.003487  5.693690e-08
8     0.003827     0.003827  6.937364e-08
9     0.000891     0.000891  1.592600e-08
10    0.956534     0.956535 -6.745386e-07
11    0.013529     0.013529  2.320984e-08
12    0.060181     0.060180  1.437157e-06
13    0.099718     0.099718 -5.269312e-07
14    0.006662     0.006662  1.763429e-07
15    0.014143     0.014143  1.475973e-07
MLLITE_CLASS_SQL_ERROR ('digits_tiny', 'RidgeClassifier', 'sqlite') ('Py_Proba_5', 'SQL_Proba_5') 8.608427064457511e-07
    Py_Proba_5  SQL_Proba_5   SQL_Error_5
0     0.000513     0.000513 -3.460539e-10
1     0.009171     0.009171  1.064543e-07
2     0.072201     0.072201 -7.123310e-08
3     0.000308     0.000308 -2.226454e-09
4     0.000331     0.000331  1.712337e-09
5     0.006076     0.006076 -5.551865e-08
6     0.799179     0.799182 -3.020362e-06
7     0.002387     0.002387 -3.250598e-09
8     0.001048     0.001048 -3.674777e-09
9     0.824666     0.824670 -4.159790e-06
10    0.012259     0.012259 -1.205334e-07
11    0.001650     0.001650 -5.064408e-08
12    0.160408     0.160410 -1.238270e-06
13    0.343878     0.343882 -4.287676e-06
14    0.007462     0.007462  1.394917e-07
15    0.076799     0.076799  5.123002e-07
MLLITE_CLASS_SQL_ERROR ('digits_tiny', 'RidgeClassifier', 'sqlite') ('Py_Proba_6', 'SQL_Proba_6') 4.33391337971137e-07
    Py_Proba_6  SQL_Proba_6   SQL_Error_6
0     0.000618     0.000618  1.033842e-09
1     0.045248     0.045249 -1.281124e-06
2     0.015921     0.015921 -2.907586e-07
3     0.007035     0.007035 -2.047429e-08
4     0.457211     0.457207  3.661365e-06
5     0.924841     0.924841  2.367570e-07
6     0.001274     0.001274  3.463150e-08
7     0.005594     0.005594  1.149169e-08
8     0.000741     0.000741 -2.312960e-09
9     0.003738     0.003738  6.198008e-08
10    0.000944     0.000944 -1.491495e-08
11    0.001376     0.001376 -2.768662e-08
12    0.032146     0.032146  1.667273e-07
13    0.064067     0.064067  5.892863e-07
14    0.019568     0.019568  4.524200e-07
15    0.021923     0.021923 -8.129766e-08
MLLITE_CLASS_SQL_ERROR ('digits_tiny', 'RidgeClassifier', 'sqlite') ('Py_Proba_7', 'SQL_Proba_7') 9.99066673561969e-07
    Py_Proba_7  SQL_Proba_7   SQL_Error_7
0     0.000914     0.000914  3.333069e-08
1     0.085513     0.085512  8.397167e-07
2     0.000739     0.000739 -2.342752e-08
3     0.983319     0.983319  1.866897e-07
4     0.015294     0.015294  2.907674e-07
5     0.001945     0.001945  2.820906e-08
6     0.088756     0.088755  1.594209e-06
7     0.003308     0.003308  1.235662e-07
8     0.321020     0.321018  2.073436e-06
9     0.000007     0.000007  7.940402e-11
10    0.001989     0.001989  2.353210e-08
11    0.153958     0.153964 -6.121964e-06
12    0.216487     0.216486  2.024501e-07
13    0.060212     0.060212  5.358449e-07
14    0.000636     0.000636  3.851078e-08
15    0.081025     0.081021  3.869333e-06
MLLITE_CLASS_SQL_EXECUTION_STATUS ('digits_tiny', 'RidgeClassifier', 'sqlite', 'Success')
    Py_Decision  SQL_Decision
0             2             2
1             1             1
2             1             1
3             9             7
4             0             0
5             8             6
6             7             5
7             0             0
8             2             2
9             7             5
10            4             4
11            3             3
12            9             7
13            7             5
14            0             0
15            0             0
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
