READING_CSV FourClass_100_sampled ['data/sampled/FourClass_100_sampled.csv']
          X_0       X_1       X_2  ...      X_98      X_99  target
0    0.935563  2.247500 -1.070940  ... -0.177791 -0.249523       3
1    0.293314 -1.260450 -3.448018  ...  0.164190  2.205145       2
2    0.596661  1.589408 -0.810968  ...  0.026429 -0.565740       0
3    1.456436 -2.080544  0.694122  ...  1.059889  0.328791       1
4   -1.193096 -0.499944  0.528137  ...  1.236806  1.097111       2
..        ...       ...       ...  ...       ...       ...     ...
123  0.634123 -0.617818 -2.241496  ... -0.966775 -0.710358       2
124  0.918349 -0.311832 -0.471041  ... -0.317160  0.826388       1
125 -1.275761  1.107036  0.345849  ...  0.566895  0.570030       1
126  0.529198  1.241322  0.500518  ... -1.251546 -1.179887       0
127 -0.098289 -0.628792 -0.750264  ...  0.882400 -0.271507       3

[128 rows x 101 columns]
MLLITE_MODEL_SET_OPTIONS RidgeClassifier {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { "alpha" : 0.0000001,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
('OPERATION_START', 'TRAINING')
[[ 9.35562551e-01  2.24750018e+00 -1.07094014e+00  5.08270264e-01
   1.43985808e-01 -4.33900356e-01  2.20938280e-01 -6.05712712e-01
   1.04623568e+00 -5.11191189e-01 -1.49217200e+00  5.78792810e-01
  -5.20725727e-01  8.71259570e-01 -1.55619383e+00  1.52518547e+00
  -7.36531466e-02 -1.17264986e+00 -6.90029681e-01 -1.00071573e+00
   3.37273180e-01 -5.52994728e-01  4.75280344e-01 -1.40307999e+00
   9.60445762e-01 -4.87094879e-01 -7.87123621e-01  4.54730177e+00
   1.16833878e+00 -5.16704082e-01  1.26904652e-01 -2.69020295e+00
  -1.60714972e+00 -1.60194361e+00  1.45940697e+00 -2.07469568e-01
  -7.90602565e-01 -2.78487932e-02 -1.21024287e+00  5.58430433e-01
  -1.63653836e-01  6.32869065e-01 -1.25206620e-01 -3.34407538e-01
   6.30639970e-01  1.33564019e+00  3.52602506e+00  7.06132531e-01
   1.95425427e+00 -2.52463102e-01 -4.60086882e-01 -1.19924438e+00
   6.41360343e-01 -2.27416492e+00 -1.08663130e+00 -1.79455566e+00
  -4.53341693e-01 -5.69205701e-01 -2.71141529e-01  6.19319558e-01
  -2.58924603e+00  9.84492600e-01  2.16141731e-01  8.48047435e-01
  -2.20009804e-01 -3.31227589e+00  1.16689853e-01  1.42259753e+00
   1.79406500e+00 -1.90514177e-01  7.55192041e-01  1.54058591e-01
   7.11078942e-01 -1.32698989e+00 -2.07093787e+00  9.34237540e-01
  -4.60939616e-01 -8.04052234e-01 -5.02367616e-02 -3.75201797e+00
   6.09228611e-02 -1.00079381e+00 -9.43618715e-01  2.28104413e-01
  -9.84539762e-02 -8.51119459e-02  8.69812146e-02 -1.41765642e+00
   2.71681398e-01 -8.74418080e-01 -2.53257823e+00 -5.78377783e-01
  -7.53983378e-01  9.52363431e-01 -9.63835180e-01 -6.48602486e-01
  -1.77499366e+00  6.77245975e-01 -1.77790895e-01 -2.49523029e-01]
 [ 2.93314219e-01 -1.26045048e+00 -3.44801831e+00  2.69382149e-01
   1.54421818e+00 -6.00797161e-02  2.80081749e-01 -3.49374235e-01
  -1.71003997e+00  8.22554767e-01  7.01598311e-03  7.73456335e-01
  -1.02132368e+00 -1.34428933e-01 -2.03461379e-01  1.28476620e+00
  -1.16496360e+00 -5.35073131e-02  8.57034981e-01  1.38256717e+00
   9.03933793e-02  8.63964017e-03 -5.40078878e-01 -4.88574624e-01
   4.52568620e-01  5.42306304e-01  1.07568896e+00  3.46140218e+00
   3.28359604e+00 -3.20053488e-01 -1.14804339e+00 -2.76097941e+00
   1.55631797e-02  8.74092340e-01 -7.98800826e-01 -2.42959595e+00
  -6.76247656e-01 -1.14995682e+00  4.39849287e-01 -1.87727064e-01
   1.34595573e+00 -9.83103573e-01 -8.30253839e-01 -1.39651984e-01
   2.03547105e-01  4.51490223e-01 -3.95970130e+00 -3.51787716e-01
   7.84379542e-01 -4.29442495e-01  1.05397455e-01  7.79593885e-01
  -1.13827668e-01 -5.40005386e-01 -1.16847146e+00 -3.36890638e-01
   9.90479112e-01  5.00425518e-01 -2.40916753e+00 -8.40187371e-01
  -2.07494095e-01 -4.10496503e-01  4.08632898e+00  9.31320012e-01
   9.54048574e-01 -9.11957398e-02 -7.51672363e+00  7.23851264e-01
  -3.96382175e-02  1.77101314e+00 -1.17600811e+00  1.22991554e-01
  -3.74346748e-02  1.72770336e-01 -4.08644319e-01  4.94354963e-01
   1.74994171e+00  9.89653885e-01  1.74723223e-01 -9.37665176e+00
  -4.31565335e-03 -1.70145118e+00 -1.74992526e+00 -1.72720656e-01
   5.82682490e-01 -5.26583374e-01  1.91324139e+00 -2.40155920e-01
  -1.35112417e+00 -3.65208060e-01 -1.35532707e-01  1.08672369e+00
   7.04294443e-01 -8.71233284e-01  1.04183960e+00 -6.46791577e-01
   3.74140948e-01  3.27620208e-01  1.64190233e-01  2.20514464e+00]
 [ 5.96660793e-01  1.58940768e+00 -8.10967982e-01 -4.73919630e-01
  -9.17869389e-01 -1.61617601e+00 -6.78639174e-01  1.03318654e-01
  -5.00028312e-01  1.78057873e+00 -1.34553814e+00 -5.28248453e+00
   7.20736444e-01  1.79546729e-01 -1.75809467e+00 -8.59387755e-01
  -2.27263141e-02 -1.87025774e+00  1.67022240e+00 -2.89478928e-01
   8.37067842e-01  6.59622908e-01  4.29693535e-02 -9.46969926e-01
   4.30729359e-01 -7.75742769e-01  3.41510355e-01 -2.02011466e+00
  -1.02778935e+00 -1.69667840e+00 -1.71012551e-01  4.23166782e-01
  -1.79182720e+00 -5.75773478e-01 -1.71246231e+00  5.68344474e-01
  -6.81339622e-01  3.23087126e-01 -1.44740534e+00 -1.38365650e+00
   3.77985537e-01 -6.37483299e-01  7.76762664e-01  5.55373728e-01
   1.11285400e+00 -1.27088690e+00  2.94207788e+00  4.38418001e-01
   7.77927995e-01  8.14674795e-01 -3.88954520e-01 -1.27854240e+00
   3.87139380e-01 -5.47252417e-01  7.68055022e-01  1.48158407e+00
  -5.30028522e-01  8.71521354e-01  2.20103472e-01 -1.80267835e+00
   1.62707639e+00  2.93988436e-01  4.04036474e+00 -1.38034463e+00
  -8.25688243e-01  7.04825699e-01  8.15395546e+00  1.22501051e+00
   1.66788650e+00  2.72147131e+00  6.49030805e-01 -9.60100591e-01
  -1.05595326e+00 -4.90769893e-02 -1.56489909e+00  3.93039435e-01
   8.80326271e-01  1.46846676e+00  2.43020996e-01 -1.33081412e+00
   2.29413652e+00  7.48559713e-01  1.10301085e-01  1.11530209e+00
  -3.07022452e-01 -3.43551278e-01  7.95005918e-01  2.63235778e-01
   7.99354970e-01 -5.73727824e-02  7.56435156e-01 -3.64444673e-01
   1.29907846e+00 -3.82006057e-02  7.76137769e-01 -8.31591904e-01
   1.53442824e+00 -1.27538812e+00  2.64287349e-02 -5.65739751e-01]
 [ 1.45643616e+00 -2.08054376e+00  6.94121957e-01 -5.21965921e-01
  -2.32917964e-01  1.52993643e+00 -1.81002557e-01 -9.00278687e-01
  -3.17071170e-01  4.05129343e-01 -9.13353622e-01  1.52238500e+00
   1.75047374e+00 -7.30361819e-01  1.55085921e+00  1.42706335e-01
   4.59196642e-02  4.07628447e-01 -3.26506257e-01 -4.81859356e-01
   9.39201862e-02 -2.45961189e-01 -1.96491504e+00  5.07482708e-01
   1.15683150e+00 -3.67391527e-01 -9.73286927e-01 -3.10479784e+00
  -2.73889601e-01  1.66504610e+00 -1.51400971e+00 -9.55533683e-01
   2.07410976e-01  1.52923656e+00 -1.69865060e+00  1.74417377e+00
  -1.26610243e+00 -5.80420077e-01 -8.55364025e-01  1.04407564e-01
   5.93953609e-01 -1.41621888e+00  1.08122841e-01 -4.84067738e-01
   1.69581461e+00  1.38722503e+00 -3.99619937e+00  1.27301514e+00
   6.38230085e-01  2.15354633e+00 -8.86631683e-02  9.06281710e-01
   1.31646347e+00  1.80131924e+00  5.43839991e-01 -1.20308149e+00
   1.03996921e+00  4.74938527e-02 -2.78281540e-01 -1.01100028e+00
   1.63605332e+00 -6.30008936e-01  2.86958098e+00  1.29696774e+00
   1.89161137e-01  2.85747457e+00 -4.18727446e+00 -7.44388819e-01
   2.98897564e-01  1.36116946e+00  1.38416719e+00 -2.11131483e-01
   1.18849802e+00  1.96934193e-01 -1.47064614e+00 -3.63175780e-01
   7.84732163e-01 -1.32636324e-01  1.00253135e-01  2.38688135e+00
  -2.33116910e-01  4.48122442e-01  2.28070378e+00 -1.26993442e+00
  -3.67890954e-01 -8.16320002e-01 -9.08941507e-01 -7.01003969e-01
   1.05856764e+00 -3.64899427e-01 -2.01056767e+00 -1.06769252e+00
   1.60698414e+00 -2.91990757e-01  2.26473403e+00 -4.49902713e-01
   4.62933123e-01  7.53116310e-01  1.05988944e+00  3.28791380e-01]
 [-1.19309628e+00 -4.99944448e-01  5.28136671e-01  1.85364544e-01
  -7.10495830e-01 -8.85336176e-02 -6.38042450e-01  8.81741822e-01
   1.25752389e+00 -8.73580158e-01 -9.55399573e-01 -1.35603696e-01
   4.83997911e-01 -9.96602833e-01  9.37519133e-01 -5.89864291e-02
  -1.13989949e+00 -1.25818241e+00  5.26024342e-01 -7.01516032e-01
   1.32973158e+00  2.44526839e+00 -7.72712529e-01  5.13766646e-01
   4.98695105e-01  1.14376044e+00 -6.54239535e-01 -6.17800094e-02
  -1.03205192e+00  2.77230233e-01 -9.69139159e-01  1.10734671e-01
  -5.05987525e-01  1.02873945e+00  1.02971303e+00 -2.58090401e+00
  -9.99437511e-01  2.12422752e+00 -3.89198899e-01 -9.32601035e-01
  -6.93674445e-01 -4.07995224e-01 -1.90250194e+00 -6.23405516e-01
  -1.66650927e+00 -2.14010692e+00 -3.13505024e-01  9.16595995e-01
  -1.29809892e+00  1.01324391e+00  1.43364155e+00 -1.01352572e+00
  -1.49118865e+00 -2.45811558e+00  1.11938548e+00  4.71531510e-01
   2.87433833e-01  6.17101133e-01  5.58946013e-01 -9.08716619e-01
   2.14687967e+00 -1.05833352e+00 -8.24340701e-01  1.51690736e-01
   1.60771608e+00  9.55081761e-01 -1.60897672e+00 -1.66303873e+00
   7.57982671e-01  3.17573786e-01  3.93135488e-01  1.26543090e-01
   1.48471398e-02 -1.58860159e+00 -5.91678858e-01  3.42316389e-01
  -2.10359603e-01 -1.42355669e+00 -2.23383650e-01 -4.08269119e+00
   9.26247478e-01  5.84456980e-01 -5.01928627e-01 -5.45637131e-01
   6.72929883e-01 -1.34969640e+00  1.73498929e+00 -2.95029342e-01
   7.98496783e-01  1.77032605e-01 -2.69206595e+00  1.26748353e-01
  -5.17131031e-01  9.58465040e-01 -5.24760962e-01  3.00141931e-01
   9.27737057e-02 -5.06614506e-01  1.23680639e+00  1.09711075e+00]] [3 2 0 1 2]
MLLITE_FIT_USING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 6 6
('OPERATION_END_ELAPSED', 0.065, 'TRAINING')
{ "alpha" : 0.0000001,   }
{ "alpha" : 0.0000001,   }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 128, "dataset_features" : 100 },
	"classes" : [ 0, 1, 2, 3 ],
	"equations" : {
		"class_0" : {
			"intercept" : -0.584476,
			"coeffs" : [ -0.149482, 0.177374, 0.006457, 0.221549, -0.006775, 0.166078, 0.133836, -0.342083, 0.065577, 0.131714, -0.177602, 0.015111, -0.121622, 0.012661, 0.116193, -0.220935, 0.081262, -0.111115, 0.139084, -0.051024, 0.272064, -0.042323, -0.125059, -0.032476, -0.165943, -0.027691, -0.091845, 0.007514, -0.175878, -0.115776, -0.025400, 0.213897, -0.101205, -0.008131, -0.061767, 0.048025, 0.049709, -0.082073, 0.088260, -0.045333, 0.121818, 0.150798, 0.084119, -0.080673, -0.267043, 0.074550, 0.074983, -0.001198, -0.064360, -0.036843, 0.012829, 0.067431, 0.143346, -0.009441, -0.045341, 0.158448, -0.009826, 0.245732, -0.078063, 0.185085, -0.065655, -0.102528, 0.037533, -0.025775, 0.282400, -0.049630, 0.045499, -0.015525, -0.099236, 0.170258, 0.148471, 0.226160, 0.230163, 0.004486, -0.021293, 0.020048, 0.081731, -0.089122, -0.109616, 0.070820, 0.284101, -0.269289, -0.039934, -0.028882, -0.146797, 0.159601, -0.020691, -0.115997, -0.237720, -0.095270, 0.041029, 0.094548, 0.078023, -0.274951, 0.085865, 0.015906, 0.266422, 0.038177, 0.100254, 0.072483 ]
		},
		"class_1" : {
			"intercept" : -0.451225,
			"coeffs" : [ -0.011344, -0.120191, 0.246145, 0.125488, -0.077932, -0.049540, -0.040841, -0.113352, -0.179589, -0.203495, 0.065274, 0.103570, 0.063679, -0.178880, 0.104760, -0.085127, -0.003380, -0.076939, 0.072607, -0.017085, -0.144183, -0.119327, 0.219049, -0.212464, -0.050629, -0.320001, -0.007874, -0.118465, 0.343373, -0.026763, 0.005356, -0.020948, 0.030699, -0.123561, 0.084996, 0.043611, -0.123817, 0.010837, -0.038862, -0.053949, 0.128328, -0.034515, -0.045073, 0.196059, 0.217410, 0.049111, -0.106354, -0.161888, -0.084040, -0.005152, 0.180064, -0.064677, 0.053559, -0.100257, 0.101637, -0.103487, -0.025038, -0.230490, 0.001088, 0.023506, 0.098270, 0.086794, 0.123115, 0.175761, -0.193398, 0.067089, 0.011930, 0.121468, -0.183003, -0.081285, -0.107466, -0.141487, -0.097545, -0.100171, 0.019256, -0.053896, 0.025794, 0.131317, 0.175907, -0.002067, -0.237232, 0.170025, 0.065380, -0.007412, -0.056429, 0.081658, 0.186404, -0.155873, 0.031818, 0.136311, -0.121407, -0.039415, -0.180981, 0.105439, -0.037143, -0.033551, 0.051116, -0.078304, 0.182707, -0.161858 ]
		},
		"class_2" : {
			"intercept" : -0.517543,
			"coeffs" : [ 0.075500, -0.031313, -0.179848, -0.185499, -0.007088, -0.024311, 0.148488, 0.266681, 0.036949, 0.155383, 0.173507, -0.123068, 0.158625, -0.097844, -0.103307, 0.268755, 0.011330, 0.101214, -0.115272, 0.032845, 0.042012, 0.031905, -0.043262, 0.185386, 0.037967, 0.214675, 0.073515, 0.066277, -0.037082, -0.154406, 0.025466, -0.048213, 0.036976, 0.114338, 0.008839, -0.057436, 0.001217, 0.140320, -0.032805, 0.106185, -0.002348, -0.125542, -0.155516, -0.024535, -0.016020, -0.047866, -0.026209, 0.003736, -0.028453, 0.041483, -0.050938, -0.073957, -0.116936, 0.009532, -0.134487, 0.043353, -0.077166, 0.071805, -0.052453, 0.093659, 0.143064, -0.130462, -0.091074, -0.120431, -0.092353, -0.007889, -0.030340, -0.037059, 0.185729, -0.024315, 0.002305, 0.095725, -0.065462, -0.029083, -0.027027, 0.136243, 0.057201, -0.167520, -0.052736, -0.050223, 0.116978, 0.002750, 0.232277, -0.012485, 0.097530, -0.022447, -0.014701, 0.031809, 0.129679, -0.018849, 0.095345, -0.026117, 0.065089, -0.139273, -0.045635, -0.075261, -0.237609, 0.106648, -0.157031, 0.147590 ]
		},
		"class_3" : {
			"intercept" : -0.447006,
			"coeffs" : [ 0.085326, -0.025869, -0.072753, -0.161537, 0.091795, -0.092227, -0.241482, 0.188754, 0.077062, -0.083602, -0.061180, 0.002817, -0.100682, 0.264064, -0.117646, 0.037307, -0.089211, 0.086839, -0.096418, 0.035264, -0.169894, 0.129745, -0.050729, 0.059553, 0.178605, 0.133017, 0.026204, 0.045444, -0.130414, 0.296946, -0.005422, -0.144114, 0.033531, 0.017354, -0.032068, -0.034591, 0.072892, -0.069083, -0.016593, -0.006903, -0.247798, 0.009259, 0.116471, -0.090853, 0.065652, -0.075795, 0.057937, 0.159349, 0.176854, -0.000294, -0.141955, 0.071203, -0.079970, 0.096946, 0.078192, -0.098313, 0.112029, -0.087047, 0.129428, -0.302251, -0.177149, 0.146196, -0.067680, -0.029557, 0.003350, -0.008525, -0.029713, -0.068885, 0.096511, -0.064657, -0.043308, -0.180398, -0.067155, 0.124768, 0.029063, -0.102395, -0.164727, 0.125325, -0.013556, -0.015833, -0.163846, 0.096513, -0.257723, 0.048779, 0.105696, -0.218812, -0.151013, 0.240062, 0.076224, -0.022193, -0.014967, -0.029016, 0.037868, 0.308784, -0.003087, 0.092906, -0.079929, -0.066521, -0.125931, -0.058213 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_100_sampled_option_1.json'

RELOADING_MODEL_FROM_JSON_START ('FourClass_100_sampled', 'RidgeClassifier')
MLLITE_MODEL_SET_OPTIONS RidgeClassifier {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { "alpha" : 0.0000001,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
MLLITE_RELOADING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 128, "dataset_features" : 100 },
	"classes" : [ 0, 1, 2, 3 ],
	"equations" : {
		"class_0" : {
			"intercept" : -0.584476,
			"coeffs" : [ -0.149482, 0.177374, 0.006457, 0.221549, -0.006775, 0.166078, 0.133836, -0.342083, 0.065577, 0.131714, -0.177602, 0.015111, -0.121622, 0.012661, 0.116193, -0.220935, 0.081262, -0.111115, 0.139084, -0.051024, 0.272064, -0.042323, -0.125059, -0.032476, -0.165943, -0.027691, -0.091845, 0.007514, -0.175878, -0.115776, -0.025400, 0.213897, -0.101205, -0.008131, -0.061767, 0.048025, 0.049709, -0.082073, 0.088260, -0.045333, 0.121818, 0.150798, 0.084119, -0.080673, -0.267043, 0.074550, 0.074983, -0.001198, -0.064360, -0.036843, 0.012829, 0.067431, 0.143346, -0.009441, -0.045341, 0.158448, -0.009826, 0.245732, -0.078063, 0.185085, -0.065655, -0.102528, 0.037533, -0.025775, 0.282400, -0.049630, 0.045499, -0.015525, -0.099236, 0.170258, 0.148471, 0.226160, 0.230163, 0.004486, -0.021293, 0.020048, 0.081731, -0.089122, -0.109616, 0.070820, 0.284101, -0.269289, -0.039934, -0.028882, -0.146797, 0.159601, -0.020691, -0.115997, -0.237720, -0.095270, 0.041029, 0.094548, 0.078023, -0.274951, 0.085865, 0.015906, 0.266422, 0.038177, 0.100254, 0.072483 ]
		},
		"class_1" : {
			"intercept" : -0.451225,
			"coeffs" : [ -0.011344, -0.120191, 0.246145, 0.125488, -0.077932, -0.049540, -0.040841, -0.113352, -0.179589, -0.203495, 0.065274, 0.103570, 0.063679, -0.178880, 0.104760, -0.085127, -0.003380, -0.076939, 0.072607, -0.017085, -0.144183, -0.119327, 0.219049, -0.212464, -0.050629, -0.320001, -0.007874, -0.118465, 0.343373, -0.026763, 0.005356, -0.020948, 0.030699, -0.123561, 0.084996, 0.043611, -0.123817, 0.010837, -0.038862, -0.053949, 0.128328, -0.034515, -0.045073, 0.196059, 0.217410, 0.049111, -0.106354, -0.161888, -0.084040, -0.005152, 0.180064, -0.064677, 0.053559, -0.100257, 0.101637, -0.103487, -0.025038, -0.230490, 0.001088, 0.023506, 0.098270, 0.086794, 0.123115, 0.175761, -0.193398, 0.067089, 0.011930, 0.121468, -0.183003, -0.081285, -0.107466, -0.141487, -0.097545, -0.100171, 0.019256, -0.053896, 0.025794, 0.131317, 0.175907, -0.002067, -0.237232, 0.170025, 0.065380, -0.007412, -0.056429, 0.081658, 0.186404, -0.155873, 0.031818, 0.136311, -0.121407, -0.039415, -0.180981, 0.105439, -0.037143, -0.033551, 0.051116, -0.078304, 0.182707, -0.161858 ]
		},
		"class_2" : {
			"intercept" : -0.517543,
			"coeffs" : [ 0.075500, -0.031313, -0.179848, -0.185499, -0.007088, -0.024311, 0.148488, 0.266681, 0.036949, 0.155383, 0.173507, -0.123068, 0.158625, -0.097844, -0.103307, 0.268755, 0.011330, 0.101214, -0.115272, 0.032845, 0.042012, 0.031905, -0.043262, 0.185386, 0.037967, 0.214675, 0.073515, 0.066277, -0.037082, -0.154406, 0.025466, -0.048213, 0.036976, 0.114338, 0.008839, -0.057436, 0.001217, 0.140320, -0.032805, 0.106185, -0.002348, -0.125542, -0.155516, -0.024535, -0.016020, -0.047866, -0.026209, 0.003736, -0.028453, 0.041483, -0.050938, -0.073957, -0.116936, 0.009532, -0.134487, 0.043353, -0.077166, 0.071805, -0.052453, 0.093659, 0.143064, -0.130462, -0.091074, -0.120431, -0.092353, -0.007889, -0.030340, -0.037059, 0.185729, -0.024315, 0.002305, 0.095725, -0.065462, -0.029083, -0.027027, 0.136243, 0.057201, -0.167520, -0.052736, -0.050223, 0.116978, 0.002750, 0.232277, -0.012485, 0.097530, -0.022447, -0.014701, 0.031809, 0.129679, -0.018849, 0.095345, -0.026117, 0.065089, -0.139273, -0.045635, -0.075261, -0.237609, 0.106648, -0.157031, 0.147590 ]
		},
		"class_3" : {
			"intercept" : -0.447006,
			"coeffs" : [ 0.085326, -0.025869, -0.072753, -0.161537, 0.091795, -0.092227, -0.241482, 0.188754, 0.077062, -0.083602, -0.061180, 0.002817, -0.100682, 0.264064, -0.117646, 0.037307, -0.089211, 0.086839, -0.096418, 0.035264, -0.169894, 0.129745, -0.050729, 0.059553, 0.178605, 0.133017, 0.026204, 0.045444, -0.130414, 0.296946, -0.005422, -0.144114, 0.033531, 0.017354, -0.032068, -0.034591, 0.072892, -0.069083, -0.016593, -0.006903, -0.247798, 0.009259, 0.116471, -0.090853, 0.065652, -0.075795, 0.057937, 0.159349, 0.176854, -0.000294, -0.141955, 0.071203, -0.079970, 0.096946, 0.078192, -0.098313, 0.112029, -0.087047, 0.129428, -0.302251, -0.177149, 0.146196, -0.067680, -0.029557, 0.003350, -0.008525, -0.029713, -0.068885, 0.096511, -0.064657, -0.043308, -0.180398, -0.067155, 0.124768, 0.029063, -0.102395, -0.164727, 0.125325, -0.013556, -0.015833, -0.163846, 0.096513, -0.257723, 0.048779, 0.105696, -0.218812, -0.151013, 0.240062, 0.076224, -0.022193, -0.014967, -0.029016, 0.037868, 0.308784, -0.003087, 0.092906, -0.079929, -0.066521, -0.125931, -0.058213 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1, 2, 3 ],
	"dataset" : 	{
		"dataset_features" : 100,
		"dataset_rows" : 128
	},
	"equations" : 	{
		"class_0" : 	{
			"coeffs" : [ -0.149482, 0.177374, 0.006457, 0.221549, -0.006775, 0.166078, 0.133836, -0.342083, 0.065577, 0.131714, -0.177602, 0.015111, -0.121622, 0.012661, 0.116193, -0.220935, 0.081262, -0.111115, 0.139084, -0.051024, 0.272064, -0.042323, -0.125059, -0.032476, -0.165943, -0.027691, -0.091845, 0.007514, -0.175878, -0.115776, -0.0254, 0.213897, -0.101205, -0.008131, -0.061767, 0.048025, 0.049709, -0.082073, 0.08826, -0.045333, 0.121818, 0.150798, 0.084119, -0.080673, -0.267043, 0.07455, 0.074983, -0.001198, -0.06436, -0.036843, 0.012829, 0.067431, 0.143346, -0.009441, -0.045341, 0.158448, -0.009826, 0.245732, -0.078063, 0.185085, -0.065655, -0.102528, 0.037533, -0.025775, 0.2824, -0.04963, 0.045499, -0.015525, -0.099236, 0.170258, 0.148471, 0.22616, 0.230163, 0.004486, -0.021293, 0.020048, 0.081731, -0.089122, -0.109616, 0.07082, 0.284101, -0.269289, -0.039934, -0.028882, -0.146797, 0.159601, -0.020691, -0.115997, -0.23772, -0.09527, 0.041029, 0.094548, 0.078023, -0.274951, 0.085865, 0.015906, 0.266422, 0.038177, 0.100254, 0.072483 ],
			"intercept" : -0.584476
		},
		"class_1" : 	{
			"coeffs" : [ -0.011344, -0.120191, 0.246145, 0.125488, -0.077932, -0.04954, -0.040841, -0.113352, -0.179589, -0.203495, 0.065274, 0.10357, 0.063679, -0.17888, 0.10476, -0.085127, -0.00338, -0.076939, 0.072607, -0.017085, -0.144183, -0.119327, 0.219049, -0.212464, -0.050629, -0.320001, -0.007874, -0.118465, 0.343373, -0.026763, 0.005356, -0.020948, 0.030699, -0.123561, 0.084996, 0.043611, -0.123817, 0.010837, -0.038862, -0.053949, 0.128328, -0.034515, -0.045073, 0.196059, 0.21741, 0.049111, -0.106354, -0.161888, -0.08404, -0.005152, 0.180064, -0.064677, 0.053559, -0.100257, 0.101637, -0.103487, -0.025038, -0.23049, 0.001088, 0.023506, 0.09827, 0.086794, 0.123115, 0.175761, -0.193398, 0.067089, 0.01193, 0.121468, -0.183003, -0.081285, -0.107466, -0.141487, -0.097545, -0.100171, 0.019256, -0.053896, 0.025794, 0.131317, 0.175907, -0.002067, -0.237232, 0.170025, 0.06538, -0.007412, -0.056429, 0.081658, 0.186404, -0.155873, 0.031818, 0.136311, -0.121407, -0.039415, -0.180981, 0.105439, -0.037143, -0.033551, 0.051116, -0.078304, 0.182707, -0.161858 ],
			"intercept" : -0.451225
		},
		"class_2" : 	{
			"coeffs" : [ 0.0755, -0.031313, -0.179848, -0.185499, -0.007088, -0.024311, 0.148488, 0.266681, 0.036949, 0.155383, 0.173507, -0.123068, 0.158625, -0.097844, -0.103307, 0.268755, 0.01133, 0.101214, -0.115272, 0.032845, 0.042012, 0.031905, -0.043262, 0.185386, 0.037967, 0.214675, 0.073515, 0.066277, -0.037082, -0.154406, 0.025466, -0.048213, 0.036976, 0.114338, 0.008839, -0.057436, 0.001217, 0.14032, -0.032805, 0.106185, -0.002348, -0.125542, -0.155516, -0.024535, -0.01602, -0.047866, -0.026209, 0.003736, -0.028453, 0.041483, -0.050938, -0.073957, -0.116936, 0.009532, -0.134487, 0.043353, -0.077166, 0.071805, -0.052453, 0.093659, 0.143064, -0.130462, -0.091074, -0.120431, -0.092353, -0.007889, -0.03034, -0.037059, 0.185729, -0.024315, 0.002305, 0.095725, -0.065462, -0.029083, -0.027027, 0.136243, 0.057201, -0.16752, -0.052736, -0.050223, 0.116978, 0.00275, 0.232277, -0.012485, 0.09753, -0.022447, -0.014701, 0.031809, 0.129679, -0.018849, 0.095345, -0.026117, 0.065089, -0.139273, -0.045635, -0.075261, -0.237609, 0.106648, -0.157031, 0.14759 ],
			"intercept" : -0.517543
		},
		"class_3" : 	{
			"coeffs" : [ 0.085326, -0.025869, -0.072753, -0.161537, 0.091795, -0.092227, -0.241482, 0.188754, 0.077062, -0.083602, -0.06118, 0.002817, -0.100682, 0.264064, -0.117646, 0.037307, -0.089211, 0.086839, -0.096418, 0.035264, -0.169894, 0.129745, -0.050729, 0.059553, 0.178605, 0.133017, 0.026204, 0.045444, -0.130414, 0.296946, -0.005422, -0.144114, 0.033531, 0.017354, -0.032068, -0.034591, 0.072892, -0.069083, -0.016593, -0.006903, -0.247798, 0.009259, 0.116471, -0.090853, 0.065652, -0.075795, 0.057937, 0.159349, 0.176854, -0.000294, -0.141955, 0.071203, -0.07997, 0.096946, 0.078192, -0.098313, 0.112029, -0.087047, 0.129428, -0.302251, -0.177149, 0.146196, -0.06768, -0.029557, 0.00335, -0.008525, -0.029713, -0.068885, 0.096511, -0.064657, -0.043308, -0.180398, -0.067155, 0.124768, 0.029063, -0.102395, -0.164727, 0.125325, -0.013556, -0.015833, -0.163846, 0.096513, -0.257723, 0.048779, 0.105696, -0.218812, -0.151013, 0.240062, 0.076224, -0.022193, -0.014967, -0.029016, 0.037868, 0.308784, -0.003087, 0.092906, -0.079929, -0.066521, -0.125931, -0.058213 ],
			"intercept" : -0.447006
		}
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_il8", "version" : "2024-W14" },
	"options" :  { "alpha" : 0.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
RELOADING_MODEL_FROM_JSON_END ('FourClass_100_sampled', 'RidgeClassifier')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0.067  0.1224 0.1488 0.6618]
 [0.0888 0.1607 0.6747 0.0758]
 [0.6888 0.0838 0.1548 0.0725]
 [0.0862 0.7315 0.0931 0.0892]
 [0.0808 0.046  0.7571 0.1161]
 [0.0588 0.1965 0.5515 0.1932]
 [0.5241 0.146  0.1109 0.2191]
 [0.095  0.0741 0.0342 0.7967]
 [0.4914 0.2448 0.0739 0.1899]
 [0.6047 0.1038 0.0963 0.1952]
 [0.1256 0.044  0.1654 0.665 ]
 [0.6812 0.0734 0.0936 0.1518]
 [0.1185 0.6201 0.1562 0.1051]
 [0.0861 0.0752 0.0851 0.7536]
 [0.0452 0.6122 0.2511 0.0915]
 [0.1741 0.1185 0.5575 0.1498]
 [0.0585 0.0632 0.1329 0.7455]
 [0.6985 0.1299 0.1002 0.0713]
 [0.1382 0.6429 0.1147 0.1042]
 [0.53   0.2551 0.1031 0.1118]
 [0.1367 0.0849 0.084  0.6944]
 [0.1564 0.6078 0.1218 0.114 ]
 [0.1353 0.428  0.3132 0.1235]
 [0.7661 0.0785 0.0927 0.0627]
 [0.0913 0.1062 0.1431 0.6594]
 [0.174  0.1721 0.5211 0.1329]
 [0.1258 0.1655 0.1165 0.5922]
 [0.0941 0.0923 0.1288 0.6848]
 [0.5684 0.0798 0.2153 0.1364]
 [0.0516 0.1328 0.6131 0.2025]
 [0.3744 0.1513 0.2962 0.1782]
 [0.1561 0.1443 0.0871 0.6125]
 [0.1272 0.0936 0.6961 0.0831]
 [0.7357 0.0991 0.0897 0.0755]
 [0.1616 0.2147 0.4897 0.1341]
 [0.1711 0.233  0.3906 0.2053]
 [0.1825 0.0727 0.1535 0.5913]
 [0.562  0.1636 0.1013 0.1731]
 [0.1344 0.0896 0.6975 0.0785]
 [0.0854 0.1129 0.6156 0.1861]
 [0.1026 0.1639 0.6706 0.0629]
 [0.0824 0.1465 0.0537 0.7173]
 [0.1764 0.1159 0.12   0.5877]
 [0.1151 0.126  0.1605 0.5984]
 [0.0866 0.1036 0.1137 0.6962]
 [0.7824 0.1029 0.0574 0.0573]
 [0.1638 0.4924 0.1795 0.1643]
 [0.0765 0.0872 0.0723 0.764 ]
 [0.7225 0.0916 0.0655 0.1204]
 [0.1343 0.094  0.5644 0.2073]
 [0.2622 0.4843 0.0701 0.1834]
 [0.1303 0.1668 0.1768 0.5262]
 [0.5725 0.1552 0.0981 0.1742]
 [0.1683 0.4975 0.1744 0.1598]
 [0.5709 0.1425 0.1099 0.1768]
 [0.5792 0.0843 0.1228 0.2137]
 [0.1392 0.1136 0.5946 0.1526]
 [0.0936 0.1246 0.6599 0.1219]
 [0.1246 0.1286 0.6193 0.1275]
 [0.5969 0.1322 0.1495 0.1214]
 [0.1184 0.5314 0.2795 0.0708]
 [0.0587 0.1384 0.7122 0.0907]
 [0.1218 0.6135 0.1572 0.1076]
 [0.1144 0.1217 0.1406 0.6233]
 [0.1069 0.084  0.0841 0.7251]
 [0.0793 0.114  0.1208 0.6859]
 [0.1828 0.5111 0.1885 0.1176]
 [0.1186 0.1008 0.6388 0.1419]
 [0.7795 0.0698 0.0826 0.0681]
 [0.0946 0.0478 0.1209 0.7368]
 [0.7606 0.0704 0.1177 0.0513]
 [0.0991 0.0758 0.7202 0.1049]
 [0.5651 0.183  0.1225 0.1294]
 [0.6181 0.0967 0.1411 0.1442]
 [0.107  0.7505 0.0498 0.0927]
 [0.1342 0.0861 0.6493 0.1304]
 [0.0802 0.0797 0.7536 0.0865]
 [0.6888 0.1063 0.096  0.1089]
 [0.1383 0.1139 0.1952 0.5525]
 [0.5533 0.1689 0.1559 0.1219]
 [0.1121 0.2243 0.4807 0.1828]
 [0.7313 0.0835 0.1157 0.0695]
 [0.6117 0.0586 0.2446 0.0851]
 [0.548  0.184  0.0903 0.1778]
 [0.1267 0.1548 0.1681 0.5503]
 [0.6112 0.0919 0.2045 0.0924]
 [0.1469 0.1138 0.6236 0.1157]
 [0.6266 0.0778 0.1162 0.1795]
 [0.1456 0.0864 0.2695 0.4984]
 [0.074  0.7529 0.1043 0.0689]
 [0.1481 0.6683 0.0755 0.1081]
 [0.5691 0.1592 0.0631 0.2086]
 [0.1138 0.1948 0.5553 0.1361]
 [0.1382 0.1492 0.1842 0.5285]
 [0.1464 0.1107 0.6215 0.1213]
 [0.0998 0.1283 0.0965 0.6754]
 [0.1079 0.1079 0.037  0.7472]
 [0.1382 0.6115 0.1253 0.1249]
 [0.0995 0.1318 0.6818 0.0869]
 [0.1983 0.0739 0.1726 0.5552]
 [0.2087 0.0957 0.1406 0.555 ]
 [0.1386 0.1287 0.6644 0.0683]
 [0.0833 0.1338 0.1569 0.626 ]
 [0.5845 0.1508 0.0767 0.1881]
 [0.1294 0.1753 0.0859 0.6094]
 [0.6497 0.1488 0.0545 0.147 ]
 [0.7145 0.086  0.1302 0.0694]
 [0.0814 0.5753 0.1535 0.1897]
 [0.0648 0.6071 0.1668 0.1612]
 [0.6995 0.1165 0.126  0.0581]
 [0.1018 0.1153 0.0908 0.6921]
 [0.2626 0.4646 0.1576 0.1153]
 [0.0986 0.5691 0.1766 0.1556]
 [0.1108 0.1422 0.0837 0.6633]
 [0.7769 0.0318 0.1303 0.061 ]
 [0.717  0.1191 0.1053 0.0586]
 [0.1562 0.1017 0.1549 0.5872]
 [0.0904 0.1693 0.6219 0.1184]
 [0.6478 0.1503 0.1082 0.0937]
 [0.0631 0.6429 0.1415 0.1525]
 [0.1941 0.6212 0.1128 0.0719]
 [0.0888 0.0877 0.0803 0.7432]
 [0.1578 0.176  0.5864 0.0798]
 [0.0859 0.143  0.6112 0.1599]
 [0.1231 0.7388 0.0832 0.0549]
 [0.1035 0.7736 0.0676 0.0553]
 [0.7625 0.0799 0.0712 0.0864]
 [0.0871 0.1108 0.1047 0.6974]]
(128, 4)
(128, 4) float32
MODEL_PERFS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': '{"alpha" : 0.0000001}', 'dataset': 'FourClass_100_sampled', 'size': 128, 'accuracy': 0.9921875, 'auc': 0.9999168606584636}
WRITING_PERF_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_100_sampled_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': '{"alpha" : 0.0000001}', 'dataset': 'FourClass_100_sampled', 'training_time_in_sec': 0.065, 'prediction_time_in_sec': 0.0}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 0 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 1 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 2 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 3 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 4 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 5 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 6 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 7 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 8 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 9 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 10 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 11 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 12 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 13 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 14 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 15 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 16 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 17 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 18 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 19 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 20 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 21 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 22 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 23 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 24 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 25 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 26 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 27 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 28 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 29 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 30 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 31 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 32 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 33 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 34 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 35 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 36 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 37 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 38 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 39 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 40 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 41 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 42 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 43 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 44 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 45 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 46 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 47 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 48 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 49 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 50 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 51 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 52 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 53 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 54 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 55 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 56 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 57 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 58 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 59 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 60 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 61 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 62 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 63 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 64 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 65 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 66 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 67 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 68 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 69 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 70 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 71 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 72 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 73 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 74 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 75 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 76 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 77 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 78 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 79 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 80 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 81 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 82 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 83 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 84 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 85 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 86 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 87 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 88 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 89 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 90 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 91 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 92 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 93 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 94 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 95 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 96 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 97 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 98 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 99 100
{
   "Contributions" : {
      "X_0" : [ -0.006888, -0.000784, 0.005145, 0.002526 ],
      "X_1" : [ 0.005002, -0.002920, -0.001607, -0.000474 ],
      "X_2" : [ 0.002308, 0.005808, -0.006452, -0.001663 ],
      "X_3" : [ 0.008386, -0.001236, -0.005415, -0.001734 ],
      "X_4" : [ 0.000460, 0.001101, 0.000393, -0.001954 ],
      "X_5" : [ -0.000718, 0.001192, 0.000289, -0.000764 ],
      "X_6" : [ -0.005744, -0.000487, -0.004427, 0.010658 ],
      "X_7" : [ 0.010331, 0.007606, -0.012262, -0.005675 ],
      "X_8" : [ 0.001278, -0.000009, -0.000482, -0.000786 ],
      "X_9" : [ 0.001430, -0.000475, 0.001348, -0.002303 ],
      "X_10" : [ -0.000691, 0.002113, -0.004875, 0.003454 ],
      "X_11" : [ -0.001937, -0.004894, 0.007478, -0.000647 ],
      "X_12" : [ -0.004400, 0.003380, 0.006029, -0.005009 ],
      "X_13" : [ 0.001763, -0.002999, -0.001665, 0.002901 ],
      "X_14" : [ -0.002333, -0.006017, 0.002462, 0.005888 ],
      "X_15" : [ 0.008054, 0.007004, -0.016610, 0.001552 ],
      "X_16" : [ 0.001615, -0.000572, -0.001047, 0.000004 ],
      "X_17" : [ 0.000205, 0.002150, -0.000186, -0.002169 ],
      "X_18" : [ -0.009128, -0.005879, 0.010351, 0.004656 ],
      "X_19" : [ 0.004038, 0.000988, -0.002442, -0.002585 ],
      "X_20" : [ 0.001068, 0.001698, 0.000528, -0.003295 ],
      "X_21" : [ -0.002749, -0.002787, 0.000592, 0.004944 ],
      "X_22" : [ -0.004523, 0.007259, -0.000596, -0.002140 ],
      "X_23" : [ 0.003353, 0.004038, -0.006899, -0.000492 ],
      "X_24" : [ -0.004290, 0.001055, 0.001610, 0.001624 ],
      "X_25" : [ -0.000487, 0.007303, -0.005708, -0.001108 ],
      "X_26" : [ 0.001587, 0.001094, -0.002305, -0.000376 ],
      "X_27" : [ 0.000636, -0.006497, 0.002709, 0.003152 ],
      "X_28" : [ -0.001334, -0.014402, 0.007582, 0.008154 ],
      "X_29" : [ 0.006714, 0.000441, 0.008613, -0.015768 ],
      "X_30" : [ -0.001066, 0.000138, 0.001155, -0.000227 ],
      "X_31" : [ 0.010964, -0.004181, -0.004156, -0.002627 ],
      "X_32" : [ -0.000151, 0.000268, 0.000324, -0.000440 ],
      "X_33" : [ 0.001632, 0.005815, -0.007229, -0.000219 ],
      "X_34" : [ 0.000525, -0.000051, 0.000143, -0.000617 ],
      "X_35" : [ 0.004400, 0.002398, -0.005045, -0.001753 ],
      "X_36" : [ -0.000090, 0.001331, -0.001241, 0.000000 ],
      "X_37" : [ -0.006399, -0.000021, 0.013573, -0.007153 ],
      "X_38" : [ -0.002278, 0.000027, 0.001502, 0.000749 ],
      "X_39" : [ -0.000063, -0.001168, 0.001174, 0.000056 ],
      "X_40" : [ -0.009578, -0.006567, 0.001047, 0.015098 ],
      "X_41" : [ 0.006061, -0.001115, -0.006383, 0.001437 ],
      "X_42" : [ 0.002839, -0.001821, -0.004965, 0.003946 ],
      "X_43" : [ -0.001640, -0.001445, 0.001595, 0.001489 ],
      "X_44" : [ 0.003168, -0.000757, -0.001218, -0.001193 ],
      "X_45" : [ -0.005161, -0.003583, 0.003873, 0.004871 ],
      "X_46" : [ 0.006766, -0.006310, -0.003130, 0.002674 ],
      "X_47" : [ -0.000008, 0.000951, 0.000131, -0.001074 ],
      "X_48" : [ 0.001121, -0.002048, 0.000630, 0.000297 ],
      "X_49" : [ 0.005399, -0.000717, -0.004586, -0.000095 ],
      "X_50" : [ 0.001267, 0.002950, -0.000428, -0.003789 ],
      "X_51" : [ -0.004141, 0.003161, 0.004221, -0.003241 ],
      "X_52" : [ 0.004062, 0.002050, -0.005145, -0.000966 ],
      "X_53" : [ 0.000021, 0.000109, -0.000512, 0.000382 ],
      "X_54" : [ 0.001324, -0.001247, -0.001828, 0.001750 ],
      "X_55" : [ -0.000864, -0.001575, 0.000889, 0.001550 ],
      "X_56" : [ 0.000878, 0.002060, 0.004975, -0.007913 ],
      "X_57" : [ 0.002894, -0.004827, 0.001907, 0.000026 ],
      "X_58" : [ -0.001352, 0.000054, -0.002414, 0.003712 ],
      "X_59" : [ -0.006483, -0.000955, -0.003907, 0.011345 ],
      "X_60" : [ 0.000773, -0.004393, 0.005764, -0.002145 ],
      "X_61" : [ -0.005039, 0.002500, -0.003807, 0.006346 ],
      "X_62" : [ -0.005742, -0.005134, 0.004080, 0.006796 ],
      "X_63" : [ 0.002515, -0.008732, 0.004037, 0.002179 ],
      "X_64" : [ 0.004288, -0.004074, 0.000290, -0.000503 ],
      "X_65" : [ 0.003295, -0.003522, -0.000423, 0.000650 ],
      "X_66" : [ 0.014545, -0.000723, -0.007839, -0.005982 ],
      "X_67" : [ -0.000436, 0.003098, -0.001182, -0.001480 ],
      "X_68" : [ -0.002622, 0.003983, 0.000217, -0.001578 ],
      "X_69" : [ -0.002768, 0.001491, 0.001183, 0.000094 ],
      "X_70" : [ 0.006528, -0.004670, 0.000575, -0.002432 ],
      "X_71" : [ 0.010516, -0.005745, 0.000232, -0.005003 ],
      "X_72" : [ -0.008346, 0.003334, 0.001998, 0.003014 ],
      "X_73" : [ -0.000040, 0.001035, 0.000163, -0.001158 ],
      "X_74" : [ 0.000985, -0.001285, 0.002063, -0.001763 ],
      "X_75" : [ 0.000253, -0.001199, 0.003806, -0.002860 ],
      "X_76" : [ 0.004726, 0.001398, 0.004743, -0.010867 ],
      "X_77" : [ -0.000560, 0.001439, -0.007446, 0.006567 ],
      "X_78" : [ -0.004265, 0.004932, -0.001286, 0.000619 ],
      "X_79" : [ 0.003204, 0.000567, -0.003167, -0.000603 ],
      "X_80" : [ 0.013281, -0.008825, 0.005580, -0.010036 ],
      "X_81" : [ 0.004970, -0.004742, 0.000678, -0.000905 ],
      "X_82" : [ 0.001575, -0.000009, -0.007906, 0.006340 ],
      "X_83" : [ 0.000666, 0.000413, 0.000637, -0.001716 ],
      "X_84" : [ -0.004062, -0.001430, 0.003096, 0.002396 ],
      "X_85" : [ -0.002862, 0.001394, -0.001135, 0.002604 ],
      "X_86" : [ 0.001221, -0.010188, 0.002089, 0.006878 ],
      "X_87" : [ 0.002639, -0.002585, -0.000415, 0.000362 ],
      "X_88" : [ -0.004043, 0.000952, 0.003085, 0.000005 ],
      "X_89" : [ -0.003602, 0.003866, -0.000027, -0.000238 ],
      "X_90" : [ 0.002540, -0.006886, 0.003947, 0.000398 ],
      "X_91" : [ 0.000217, -0.000453, 0.000560, -0.000325 ],
      "X_92" : [ -0.001411, 0.003021, -0.001332, -0.000277 ],
      "X_93" : [ -0.015763, 0.003496, -0.009631, 0.021898 ],
      "X_94" : [ -0.005829, 0.002059, 0.003403, 0.000366 ],
      "X_95" : [ -0.000046, 0.001265, 0.002275, -0.003494 ],
      "X_96" : [ -0.002592, -0.005255, 0.007661, 0.000186 ],
      "X_97" : [ -0.000541, 0.003342, -0.005344, 0.002542 ],
      "X_98" : [ 0.003264, 0.001440, -0.004186, -0.000518 ],
      "X_99" : [ -0.003749, 0.007647, -0.005203, 0.001305 ]   
   },
   "Most_Contributive_Features_By_Class" : {
      "class_0" : [ 93, 66, 80, 31, 71, 7, 40, 18, 3, 72 ],
      "class_1" : [ 28, 86, 80, 63, 99, 7, 25, 22, 15, 90 ],
      "class_2" : [ 15, 37, 7, 18, 93, 29, 82, 66, 96, 28 ],
      "class_3" : [ 93, 29, 40, 59, 76, 6, 80, 28, 56, 37 ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_100_sampled_option_1_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_100_sampled_option_1_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('FourClass_100_sampled', 'RidgeClassifier', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('FourClass_100_sampled', 'RidgeClassifier', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('FourClass_100_sampled', 'RidgeClassifier', 'duckdb')
ore_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."Score_3" AS "Score_3",
  arg_max_cte."Proba_3" AS "Proba_3",
  CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN LN( arg_max_cte."Proba_3" ) ELSE -1.79769313486231e+308 END AS "LogProba_3",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('FourClass_100_sampled', 'RidgeClassifier', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 128 entries, 0 to 127
Data columns (total 100 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     128 non-null    float32
 1   X_1     128 non-null    float32
 2   X_2     128 non-null    float32
 3   X_3     128 non-null    float32
 4   X_4     128 non-null    float32
 5   X_5     128 non-null    float32
 6   X_6     128 non-null    float32
 7   X_7     128 non-null    float32
 8   X_8     128 non-null    float32
 9   X_9     128 non-null    float32
 10  X_10    128 non-null    float32
 11  X_11    128 non-null    float32
 12  X_12    128 non-null    float32
 13  X_13    128 non-null    float32
 14  X_14    128 non-null    float32
 15  X_15    128 non-null    float32
 16  X_16    128 non-null    float32
 17  X_17    128 non-null    float32
 18  X_18    128 non-null    float32
 19  X_19    128 non-null    float32
 20  X_20    128 non-null    float32
 21  X_21    128 non-null    float32
 22  X_22    128 non-null    float32
 23  X_23    128 non-null    float32
 24  X_24    128 non-null    float32
 25  X_25    128 non-null    float32
 26  X_26    128 non-null    float32
 27  X_27    128 non-null    float32
 28  X_28    128 non-null    float32
 29  X_29    128 non-null    float32
 30  X_30    128 non-null    float32
 31  X_31    128 non-null    float32
 32  X_32    128 non-null    float32
 33  X_33    128 non-null    float32
 34  X_34    128 non-null    float32
 35  X_35    128 non-null    float32
 36  X_36    128 non-null    float32
 37  X_37    128 non-null    float32
 38  X_38    128 non-null    float32
 39  X_39    128 non-null    float32
 40  X_40    128 non-null    float32
 41  X_41    128 non-null    float32
 42  X_42    128 non-null    float32
 43  X_43    128 non-null    float32
 44  X_44    128 non-null    float32
 45  X_45    128 non-null    float32
 46  X_46    128 non-null    float32
 47  X_47    128 non-null    float32
 48  X_48    128 non-null    float32
 49  X_49    128 non-null    float32
 50  X_50    128 non-null    float32
 51  X_51    128 non-null    float32
 52  X_52    128 non-null    float32
 53  X_53    128 non-null    float32
 54  X_54    128 non-null    float32
 55  X_55    128 non-null    float32
 56  X_56    128 non-null    float32
 57  X_57    128 non-null    float32
 58  X_58    128 non-null    float32
 59  X_59    128 non-null    float32
 60  X_60    128 non-null    float32
 61  X_61    128 non-null    float32
 62  X_62    128 non-null    float32
 63  X_63    128 non-null    float32
 64  X_64    128 non-null    float32
 65  X_65    128 non-null    float32
 66  X_66    128 non-null    float32
 67  X_67    128 non-null    float32
 68  X_68    128 non-null    float32
 69  X_69    128 non-null    float32
 70  X_70    128 non-null    float32
 71  X_71    128 non-null    float32
 72  X_72    128 non-null    float32
 73  X_73    128 non-null    float32
 74  X_74    128 non-null    float32
 75  X_75    128 non-null    float32
 76  X_76    128 non-null    float32
 77  X_77    128 non-null    float32
 78  X_78    128 non-null    float32
 79  X_79    128 non-null    float32
 80  X_80    128 non-null    float32
 81  X_81    128 non-null    float32
 82  X_82    128 non-null    float32
 83  X_83    128 non-null    float32
 84  X_84    128 non-null    float32
 85  X_85    128 non-null    float32
 86  X_86    128 non-null    float32
 87  X_87    128 non-null    float32
 88  X_88    128 non-null    float32
 89  X_89    128 non-null    float32
 90  X_90    128 non-null    float32
 91  X_91    128 non-null    float32
 92  X_92    128 non-null    float32
 93  X_93    128 non-null    float32
 94  X_94    128 non-null    float32
 95  X_95    128 non-null    float32
 96  X_96    128 non-null    float32
 97  X_97    128 non-null    float32
 98  X_98    128 non-null    float32
 99  X_99    128 non-null    float32
dtypes: float32(100)
memory usage: 51.0 KB
            X_0       X_1       X_2  ...      X_97      X_98      X_99
index                                ...                              
0      0.935563  2.247500 -1.070940  ...  0.677246 -0.177791 -0.249523
1      0.293314 -1.260450 -3.448018  ...  0.327620  0.164190  2.205145
2      0.596661  1.589408 -0.810968  ... -1.275388  0.026429 -0.565740
3      1.456436 -2.080544  0.694122  ...  0.753116  1.059889  0.328791
4     -1.193096 -0.499944  0.528137  ... -0.506615  1.236806  1.097111
...         ...       ...       ...  ...       ...       ...       ...
123    0.634123 -0.617818 -2.241496  ...  0.279937 -0.966775 -0.710358
124    0.918349 -0.311832 -0.471041  ... -0.320630 -0.317160  0.826388
125   -1.275761  1.107036  0.345849  ...  0.379130  0.566895  0.570030
126    0.529198  1.241322  0.500518  ... -0.490827 -1.251546 -1.179887
127   -0.098289 -0.628792 -0.750264  ... -1.144028  0.882400 -0.271507

[128 rows x 100 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 128 entries, 0 to 127
Data columns (total 15 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          128 non-null    int64  
 1   Score_0        128 non-null    float64
 2   Proba_0        128 non-null    float64
 3   LogProba_0     128 non-null    float64
 4   Score_1        128 non-null    float64
 5   Proba_1        128 non-null    float64
 6   LogProba_1     128 non-null    float64
 7   Score_2        128 non-null    float64
 8   Proba_2        128 non-null    float64
 9   LogProba_2     128 non-null    float64
 10  Score_3        128 non-null    float64
 11  Proba_3        128 non-null    float64
 12  LogProba_3     128 non-null    float64
 13  Decision       128 non-null    int64  
 14  DecisionProba  128 non-null    float64
dtypes: float64(13), int64(2)
memory usage: 15.1 KB
     index   Score_0   Proba_0  ...  LogProba_3  Decision  DecisionProba
0        0 -1.422704  0.067003  ...   -0.412800         3       0.661795
1        1 -1.115295  0.088761  ...   -2.579234         2       0.674676
2        2  0.959794  0.688790  ...   -2.623476         0       0.688790
3        3 -1.060223  0.086220  ...   -2.416515         1       0.731467
4        4 -1.009655  0.080802  ...   -2.153116         2       0.757108
..     ...       ...       ...  ...         ...       ...            ...
123    123 -1.271716  0.085947  ...   -1.833418         2       0.611228
124    124 -0.647291  0.123082  ...   -2.901925         1       0.738825
125    125 -0.736964  0.103488  ...   -2.894395         1       0.773572
126    126  1.200816  0.762535  ...   -2.448979         0       0.762535
127    127 -1.126046  0.087131  ...   -0.360392         3       0.697403

[128 rows x 15 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Score_3', 'Proba_3',
       'LogProba_3', 'Decision', 'DecisionProba'],
      dtype='object')
     index   Score_0  SQL_Proba_0  ...  Py_Proba_2  Py_Proba_3  Py_Decision
112    112 -1.194170     0.098573  ...    0.176645    0.155641            1
113    113 -0.938937     0.110825  ...    0.083685    0.663266            3
114    114  1.383416     0.776939  ...    0.130260    0.061009            0
115    115  1.053585     0.716951  ...    0.105301    0.058629            0
116    116 -0.723450     0.156217  ...    0.154878    0.587243            3
117    117 -1.205673     0.090446  ...    0.621897    0.118384            2
118    118  0.793365     0.647774  ...    0.108222    0.093723            0
119    119 -1.500200     0.063085  ...    0.141492    0.152532            1
120    120 -0.405789     0.194145  ...    0.112810    0.071887            1
121    121 -1.004179     0.088832  ...    0.080255    0.743196            3
122    122 -0.682230     0.157822  ...    0.586392    0.079822            2
123    123 -1.271716     0.085947  ...    0.611228    0.159866            2
124    124 -0.647291     0.123082  ...    0.083176    0.054917            1
125    125 -0.736964     0.103488  ...    0.067608    0.055333            1
126    126  1.200816     0.762535  ...    0.071156    0.086382            0
127    127 -1.126046     0.087131  ...    0.104682    0.697403            3

[16 rows x 20 columns]
MLLITE_CLASS_SQL_ERROR ('FourClass_100_sampled', 'RidgeClassifier', 'duckdb') ('Py_Proba_0', 'SQL_Proba_0') 5.400041333290871e-07
     Py_Proba_0  SQL_Proba_0   SQL_Error_0
112    0.098572     0.098573 -9.580237e-07
113    0.110825     0.110825 -2.880862e-07
114    0.776937     0.776939 -1.330779e-06
115    0.716951     0.716951  2.198313e-07
116    0.156217     0.156217  1.020300e-07
117    0.090445     0.090446 -5.349877e-07
118    0.647773     0.647774 -7.162390e-07
119    0.063085     0.063085 -2.009151e-07
120    0.194144     0.194145 -1.205270e-06
121    0.088833     0.088832  3.730766e-07
122    0.157821     0.157822 -1.545215e-06
123    0.085947     0.085947 -1.421296e-07
124    0.123081     0.123082 -3.805639e-07
125    0.103488     0.103488  9.342683e-09
126    0.762535     0.762535  3.728047e-08
127    0.087131     0.087131  1.086592e-07
MLLITE_CLASS_SQL_ERROR ('FourClass_100_sampled', 'RidgeClassifier', 'duckdb') ('Py_Proba_1', 'SQL_Proba_1') 4.712944447626149e-07
     Py_Proba_1  SQL_Proba_1   SQL_Error_1
112    0.569142     0.569142  8.390550e-07
113    0.142224     0.142224  6.708843e-07
114    0.031793     0.031793 -4.314965e-08
115    0.119118     0.119118 -1.583242e-07
116    0.101663     0.101662  7.115215e-07
117    0.169273     0.169274 -5.703362e-07
118    0.150282     0.150282  4.187601e-07
119    0.642891     0.642890  8.344058e-07
120    0.621158     0.621158  8.495118e-07
121    0.087716     0.087717 -4.571361e-07
122    0.175966     0.175966 -5.638465e-07
123    0.142959     0.142959 -2.732651e-07
124    0.738825     0.738825  7.262277e-07
125    0.773571     0.773572 -4.703874e-07
126    0.079927     0.079927  4.582248e-08
127    0.110783     0.110783  5.822091e-07
MLLITE_CLASS_SQL_ERROR ('FourClass_100_sampled', 'RidgeClassifier', 'duckdb') ('Py_Proba_2', 'SQL_Proba_2') 6.392406404390314e-07
     Py_Proba_2  SQL_Proba_2   SQL_Error_2
112    0.176645     0.176645  3.014899e-07
113    0.083685     0.083685  3.694620e-07
114    0.130260     0.130260  8.814881e-07
115    0.105301     0.105302 -1.353122e-07
116    0.154878     0.154878  5.692950e-08
117    0.621897     0.621896  1.617549e-06
118    0.108222     0.108222 -4.097606e-07
119    0.141492     0.141493 -8.831926e-07
120    0.112810     0.112811 -1.118596e-07
121    0.080255     0.080256 -6.152054e-07
122    0.586392     0.586390  2.123477e-06
123    0.611228     0.611228  5.221194e-07
124    0.083176     0.083176  1.562081e-08
125    0.067608     0.067608  9.956011e-08
126    0.071156     0.071156 -1.727412e-07
127    0.104682     0.104683 -5.078165e-07
MLLITE_CLASS_SQL_ERROR ('FourClass_100_sampled', 'RidgeClassifier', 'duckdb') ('Py_Proba_3', 'SQL_Proba_3') 4.319150002275057e-07
     Py_Proba_3  SQL_Proba_3   SQL_Error_3
112    0.155641     0.155641 -4.841080e-08
113    0.663266     0.663266 -6.852049e-07
114    0.061009     0.061009  4.104840e-07
115    0.058629     0.058629  1.222339e-07
116    0.587243     0.587244 -9.524374e-07
117    0.118384     0.118385 -4.749718e-07
118    0.093723     0.093722  7.966466e-07
119    0.152532     0.152532  2.720536e-07
120    0.071887     0.071887  3.856617e-07
121    0.743196     0.743195  6.918144e-07
122    0.079822     0.079822  3.773861e-08
123    0.159866     0.159866 -2.035823e-07
124    0.054917     0.054917 -3.314822e-07
125    0.055333     0.055332  3.689351e-07
126    0.086382     0.086382  7.473708e-08
127    0.697403     0.697403 -1.607001e-07
MLLITE_CLASS_SQL_EXECUTION_STATUS ('FourClass_100_sampled', 'RidgeClassifier', 'duckdb', 'Success')
     Py_Decision  SQL_Decision
112            1             1
113            3             3
114            0             0
115            0             0
116            3             3
117            2             2
118            0             0
119            1             1
120            1             1
121            3             3
122            2             2
123            2             2
124            1             1
125            1             1
126            0             0
127            3             3
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_100_sampled_option_1_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('FourClass_100_sampled', 'RidgeClassifier', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('FourClass_100_sampled', 'RidgeClassifier', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('FourClass_100_sampled', 'RidgeClassifier', 'sqlite')
ore_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."Score_3" AS "Score_3",
  arg_max_cte."Proba_3" AS "Proba_3",
  CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN LN( arg_max_cte."Proba_3" ) ELSE -1.79769313486231e+308 END AS "LogProba_3",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('FourClass_100_sampled', 'RidgeClassifier', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 128 entries, 0 to 127
Data columns (total 100 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     128 non-null    float32
 1   X_1     128 non-null    float32
 2   X_2     128 non-null    float32
 3   X_3     128 non-null    float32
 4   X_4     128 non-null    float32
 5   X_5     128 non-null    float32
 6   X_6     128 non-null    float32
 7   X_7     128 non-null    float32
 8   X_8     128 non-null    float32
 9   X_9     128 non-null    float32
 10  X_10    128 non-null    float32
 11  X_11    128 non-null    float32
 12  X_12    128 non-null    float32
 13  X_13    128 non-null    float32
 14  X_14    128 non-null    float32
 15  X_15    128 non-null    float32
 16  X_16    128 non-null    float32
 17  X_17    128 non-null    float32
 18  X_18    128 non-null    float32
 19  X_19    128 non-null    float32
 20  X_20    128 non-null    float32
 21  X_21    128 non-null    float32
 22  X_22    128 non-null    float32
 23  X_23    128 non-null    float32
 24  X_24    128 non-null    float32
 25  X_25    128 non-null    float32
 26  X_26    128 non-null    float32
 27  X_27    128 non-null    float32
 28  X_28    128 non-null    float32
 29  X_29    128 non-null    float32
 30  X_30    128 non-null    float32
 31  X_31    128 non-null    float32
 32  X_32    128 non-null    float32
 33  X_33    128 non-null    float32
 34  X_34    128 non-null    float32
 35  X_35    128 non-null    float32
 36  X_36    128 non-null    float32
 37  X_37    128 non-null    float32
 38  X_38    128 non-null    float32
 39  X_39    128 non-null    float32
 40  X_40    128 non-null    float32
 41  X_41    128 non-null    float32
 42  X_42    128 non-null    float32
 43  X_43    128 non-null    float32
 44  X_44    128 non-null    float32
 45  X_45    128 non-null    float32
 46  X_46    128 non-null    float32
 47  X_47    128 non-null    float32
 48  X_48    128 non-null    float32
 49  X_49    128 non-null    float32
 50  X_50    128 non-null    float32
 51  X_51    128 non-null    float32
 52  X_52    128 non-null    float32
 53  X_53    128 non-null    float32
 54  X_54    128 non-null    float32
 55  X_55    128 non-null    float32
 56  X_56    128 non-null    float32
 57  X_57    128 non-null    float32
 58  X_58    128 non-null    float32
 59  X_59    128 non-null    float32
 60  X_60    128 non-null    float32
 61  X_61    128 non-null    float32
 62  X_62    128 non-null    float32
 63  X_63    128 non-null    float32
 64  X_64    128 non-null    float32
 65  X_65    128 non-null    float32
 66  X_66    128 non-null    float32
 67  X_67    128 non-null    float32
 68  X_68    128 non-null    float32
 69  X_69    128 non-null    float32
 70  X_70    128 non-null    float32
 71  X_71    128 non-null    float32
 72  X_72    128 non-null    float32
 73  X_73    128 non-null    float32
 74  X_74    128 non-null    float32
 75  X_75    128 non-null    float32
 76  X_76    128 non-null    float32
 77  X_77    128 non-null    float32
 78  X_78    128 non-null    float32
 79  X_79    128 non-null    float32
 80  X_80    128 non-null    float32
 81  X_81    128 non-null    float32
 82  X_82    128 non-null    float32
 83  X_83    128 non-null    float32
 84  X_84    128 non-null    float32
 85  X_85    128 non-null    float32
 86  X_86    128 non-null    float32
 87  X_87    128 non-null    float32
 88  X_88    128 non-null    float32
 89  X_89    128 non-null    float32
 90  X_90    128 non-null    float32
 91  X_91    128 non-null    float32
 92  X_92    128 non-null    float32
 93  X_93    128 non-null    float32
 94  X_94    128 non-null    float32
 95  X_95    128 non-null    float32
 96  X_96    128 non-null    float32
 97  X_97    128 non-null    float32
 98  X_98    128 non-null    float32
 99  X_99    128 non-null    float32
dtypes: float32(100)
memory usage: 51.0 KB
            X_0       X_1       X_2  ...      X_97      X_98      X_99
index                                ...                              
0      0.935563  2.247500 -1.070940  ...  0.677246 -0.177791 -0.249523
1      0.293314 -1.260450 -3.448018  ...  0.327620  0.164190  2.205145
2      0.596661  1.589408 -0.810968  ... -1.275388  0.026429 -0.565740
3      1.456436 -2.080544  0.694122  ...  0.753116  1.059889  0.328791
4     -1.193096 -0.499944  0.528137  ... -0.506615  1.236806  1.097111
...         ...       ...       ...  ...       ...       ...       ...
123    0.634123 -0.617818 -2.241496  ...  0.279937 -0.966775 -0.710358
124    0.918349 -0.311832 -0.471041  ... -0.320630 -0.317160  0.826388
125   -1.275761  1.107036  0.345849  ...  0.379130  0.566895  0.570030
126    0.529198  1.241322  0.500518  ... -0.490827 -1.251546 -1.179887
127   -0.098289 -0.628792 -0.750264  ... -1.144028  0.882400 -0.271507

[128 rows x 100 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 128 entries, 0 to 127
Data columns (total 15 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          128 non-null    int64  
 1   Score_0        128 non-null    float64
 2   Proba_0        128 non-null    float64
 3   LogProba_0     128 non-null    float64
 4   Score_1        128 non-null    float64
 5   Proba_1        128 non-null    float64
 6   LogProba_1     128 non-null    float64
 7   Score_2        128 non-null    float64
 8   Proba_2        128 non-null    float64
 9   LogProba_2     128 non-null    float64
 10  Score_3        128 non-null    float64
 11  Proba_3        128 non-null    float64
 12  LogProba_3     128 non-null    float64
 13  Decision       128 non-null    int64  
 14  DecisionProba  128 non-null    float64
dtypes: float64(13), int64(2)
memory usage: 15.1 KB
     index   Score_0   Proba_0  ...  LogProba_3  Decision  DecisionProba
0        0 -1.422704  0.067003  ...   -0.412800         3       0.661795
1        1 -1.115295  0.088761  ...   -2.579234         2       0.674676
2        2  0.959794  0.688790  ...   -2.623476         0       0.688790
3        3 -1.060223  0.086220  ...   -2.416514         1       0.731467
4        4 -1.009655  0.080802  ...   -2.153116         2       0.757108
..     ...       ...       ...  ...         ...       ...            ...
123    123 -1.271715  0.085947  ...   -1.833418         2       0.611228
124    124 -0.647291  0.123082  ...   -2.901925         1       0.738825
125    125 -0.736964  0.103488  ...   -2.894395         1       0.773572
126    126  1.200816  0.762535  ...   -2.448979         0       0.762535
127    127 -1.126046  0.087131  ...   -0.360392         3       0.697403

[128 rows x 15 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Score_3', 'Proba_3',
       'LogProba_3', 'Decision', 'DecisionProba'],
      dtype='object')
     index   Score_0  SQL_Proba_0  ...  Py_Proba_2  Py_Proba_3  Py_Decision
112    112 -1.194170     0.098573  ...    0.176645    0.155641            1
113    113 -0.938937     0.110825  ...    0.083685    0.663266            3
114    114  1.383416     0.776939  ...    0.130260    0.061009            0
115    115  1.053585     0.716951  ...    0.105301    0.058629            0
116    116 -0.723450     0.156217  ...    0.154878    0.587243            3
117    117 -1.205673     0.090446  ...    0.621897    0.118384            2
118    118  0.793365     0.647774  ...    0.108222    0.093723            0
119    119 -1.500199     0.063085  ...    0.141492    0.152532            1
120    120 -0.405789     0.194145  ...    0.112810    0.071887            1
121    121 -1.004179     0.088833  ...    0.080255    0.743196            3
122    122 -0.682230     0.157822  ...    0.586392    0.079822            2
123    123 -1.271715     0.085947  ...    0.611228    0.159866            2
124    124 -0.647291     0.123082  ...    0.083176    0.054917            1
125    125 -0.736964     0.103488  ...    0.067608    0.055333            1
126    126  1.200816     0.762535  ...    0.071156    0.086382            0
127    127 -1.126046     0.087131  ...    0.104682    0.697403            3

[16 rows x 20 columns]
MLLITE_CLASS_SQL_ERROR ('FourClass_100_sampled', 'RidgeClassifier', 'sqlite') ('Py_Proba_0', 'SQL_Proba_0') 5.411604698312778e-07
     Py_Proba_0  SQL_Proba_0   SQL_Error_0
112    0.098572     0.098573 -9.715548e-07
113    0.110825     0.110825 -2.869842e-07
114    0.776937     0.776939 -1.261529e-06
115    0.716951     0.716951  2.289694e-07
116    0.156217     0.156217  9.419475e-08
117    0.090445     0.090446 -5.275707e-07
118    0.647773     0.647774 -6.751013e-07
119    0.063085     0.063085 -2.409145e-07
120    0.194144     0.194145 -1.173640e-06
121    0.088833     0.088833  3.569810e-07
122    0.157821     0.157822 -1.535086e-06
123    0.085947     0.085947 -1.774636e-07
124    0.123081     0.123082 -3.792678e-07
125    0.103488     0.103488  4.692235e-08
126    0.762535     0.762535  5.480953e-08
127    0.087131     0.087131  1.004852e-07
MLLITE_CLASS_SQL_ERROR ('FourClass_100_sampled', 'RidgeClassifier', 'sqlite') ('Py_Proba_1', 'SQL_Proba_1') 4.6970037941869826e-07
     Py_Proba_1  SQL_Proba_1   SQL_Error_1
112    0.569142     0.569142  8.105084e-07
113    0.142224     0.142224  6.496745e-07
114    0.031793     0.031793 -4.426328e-08
115    0.119118     0.119119 -1.693233e-07
116    0.101663     0.101662  7.241212e-07
117    0.169273     0.169274 -6.166061e-07
118    0.150282     0.150282  3.948008e-07
119    0.642891     0.642890  8.855052e-07
120    0.621158     0.621158  8.074872e-07
121    0.087716     0.087717 -4.882789e-07
122    0.175966     0.175966 -5.447610e-07
123    0.142959     0.142959 -2.957280e-07
124    0.738825     0.738825  6.926557e-07
125    0.773571     0.773572 -5.344650e-07
126    0.079927     0.079927  2.309951e-08
127    0.110783     0.110783  5.961863e-07
MLLITE_CLASS_SQL_ERROR ('FourClass_100_sampled', 'RidgeClassifier', 'sqlite') ('Py_Proba_2', 'SQL_Proba_2') 6.432928314472285e-07
     Py_Proba_2  SQL_Proba_2   SQL_Error_2
112    0.176645     0.176645  3.512285e-07
113    0.083685     0.083685  3.554665e-07
114    0.130260     0.130260  8.438524e-07
115    0.105301     0.105302 -1.344529e-07
116    0.154878     0.154878  3.534809e-08
117    0.621897     0.621895  1.671360e-06
118    0.108222     0.108222 -4.244915e-07
119    0.141492     0.141493 -9.007036e-07
120    0.112810     0.112811 -1.427338e-07
121    0.080255     0.080256 -6.067917e-07
122    0.586392     0.586390  2.099044e-06
123    0.611228     0.611228  5.593029e-07
124    0.083176     0.083176  5.012080e-08
125    0.067608     0.067608  1.290334e-07
126    0.071156     0.071156 -1.709331e-07
127    0.104682     0.104683 -5.379864e-07
MLLITE_CLASS_SQL_ERROR ('FourClass_100_sampled', 'RidgeClassifier', 'sqlite') ('Py_Proba_3', 'SQL_Proba_3') 4.3145796797496765e-07
     Py_Proba_3  SQL_Proba_3   SQL_Error_3
112    0.155641     0.155641 -5.607163e-08
113    0.663266     0.663266 -6.511016e-07
114    0.061009     0.061009  3.799835e-07
115    0.058629     0.058629  1.232355e-07
116    0.587243     0.587244 -9.356204e-07
117    0.118384     0.118385 -4.899300e-07
118    0.093723     0.093722  7.941989e-07
119    0.152532     0.152532  2.784647e-07
120    0.071887     0.071887  4.269305e-07
121    0.743196     0.743195  7.306390e-07
122    0.079822     0.079822  3.295709e-08
123    0.159866     0.159866 -1.829688e-07
124    0.054917     0.054917 -3.337064e-07
125    0.055333     0.055332  3.659598e-07
126    0.086382     0.086382  7.812293e-08
127    0.697403     0.697403 -1.363334e-07
MLLITE_CLASS_SQL_EXECUTION_STATUS ('FourClass_100_sampled', 'RidgeClassifier', 'sqlite', 'Success')
     Py_Decision  SQL_Decision
112            1             1
113            3             3
114            0             0
115            0             0
116            3             3
117            2             2
118            0             0
119            1             1
120            1             1
121            3             3
122            2             2
123            2             2
124            1             1
125            1             1
126            0             0
127            3             3
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
