READING_CSV iris_sampled ['data/sampled/iris_sampled.csv']
    sepal length (cm)  sepal width (cm)  ...  petal width (cm)  target
0                 6.4               3.2  ...               2.3       2
1                 6.3               3.3  ...               1.6       1
2                 7.1               3.0  ...               2.1       2
3                 6.1               2.6  ...               1.4       2
4                 6.8               3.2  ...               2.3       2
5                 5.8               2.7  ...               1.0       1
6                 6.1               2.8  ...               1.3       1
7                 6.0               3.4  ...               1.6       1
8                 5.4               3.7  ...               0.2       0
9                 4.8               3.4  ...               0.2       0
10                5.4               3.4  ...               0.4       0
11                5.9               3.0  ...               1.5       1
12                5.1               2.5  ...               1.1       1
13                5.8               2.6  ...               1.2       1
14                6.7               3.3  ...               2.1       2
15                5.0               3.3  ...               0.2       0
16                6.2               2.9  ...               1.3       1
17                4.7               3.2  ...               0.2       0

[18 rows x 5 columns]
MLLITE_MODEL_SET_OPTIONS MLPClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT MLPClassifier { "max_iter" : 32}
MLLITE_MODEL_OPTIONS_AFTER_SETTING MLPClassifier { ,  "max_iter" : 32 }
MLLITE_MODEL_JSON_AFTER_SETTING MLPClassifier None
('OPERATION_START', 'TRAINING')
[[6.4 3.2 5.3 2.3]
 [6.3 3.3 4.7 1.6]
 [7.1 3.  5.9 2.1]
 [6.1 2.6 5.6 1.4]
 [6.8 3.2 5.9 2.3]] [2 1 2 2 2]
MLLITE_FIT_USING_MODEL mllite_mlp_class.MLPClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT' 1 3
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT' 2 3
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 3 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 6 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 9 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 12 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 15 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 18 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 21 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 24 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 27 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 30 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 32 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT' 3 3
('OPERATION_END_ELAPSED', 0.011, 'TRAINING')
{ ,  "max_iter" : 32 }
{ ,  "max_iter" : 32 }
{
	"metadata" : { "model" : "Rosenblatt_MLP", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : {  "hidden_layer_sizes" : [ 100 ], "activation" : "relu", "solver" : "adam", "alpha" : 0.000100, "batch_size" : null, "learning_rate" : "constant", "learning_rate_init" : 0.001000, "power_t" : 0.500000, "max_iter" : 32, "shuffle" : 1, "random_state" : 1789, "tol" : 0.000100, "verbose" : 0, "warm_start" : 0, "momentum" : 0.900000, "nesterovs_momentum" : 1, "early_stopping" : 0, "validation_fraction" : 0.100000, "beta_1" : 0.900000, "beta_2" : 0.999000, "epsilon" : 0.000000, "n_iter_no_change" : 10, "max_fun" : 15000 },
	"dataset" : { "dataset_rows" : 18, "dataset_features" : 4 },
	"classes" : [ 0, 1, 2 ],
	"layers" : {
		"sizes" : [ 4, 100, 3 ],
		"Layer_0" : {
			"name" : "Input_Layer",
			"NbInputs" : 0,
			"NbOutputs" : 4 
		},
		"Layer_1" : {
			"name" : "Hidden_Layer_1",
			"NbInputs" : 4,
			"NbOutputs" : 100 ,
			"coeffs_0" : [ -0.000659, 0.113077, -0.098035, -0.008064, 0.055435, -0.158829, 0.057715, -0.003521, 0.192993, 0.038389, 0.211048, -0.027324, 0.251271, -0.185541, -0.100623, 0.119695, 0.137104, -0.115070, -0.122237, -0.186389, 0.092781, -0.207561, -0.008712, -0.012299, -0.047717, -0.188851, -0.096021, 0.184848, -0.017654, 0.033294, -0.185748, 0.023897, -0.062019, 0.099735, -0.019616, 0.088423, -0.159850, 0.198341, -0.175863, 0.129082, -0.172538, 0.115259, 0.079887, 0.205636, -0.150790, -0.185116, 0.092015, 0.053972, 0.149626, 0.217748, 0.194285, -0.156031, 0.154781, 0.206994, -0.112318, 0.106492, 0.049461, 0.018012, 0.042140, 0.125435, -0.179208, 0.004227, 0.085795, 0.124738, -0.178246, 0.154826, -0.133716, -0.192713, 0.224719, 0.239393, -0.045582, -0.195333, 0.002392, 0.218386, -0.173311, 0.079109, 0.096783, 0.129958, 0.195598, -0.092346, 0.111887, 0.176770, 0.187153, -0.032517, -0.186382, 0.131497, 0.027809, -0.045510, -0.180172, -0.218292, -0.087854, 0.204276, -0.008885, -0.048975, -0.055625, -0.227905, 0.080030, -0.086892, -0.093217, -0.048806 ],
			"coeffs_1" : [ 0.121147, -0.181137, -0.078942, 0.133811, 0.166121, 0.200779, 0.164800, 0.138404, -0.110929, 0.055895, 0.033491, 0.164319, 0.138981, -0.000589, 0.138138, 0.197097, 0.048797, -0.082576, -0.065666, -0.119020, 0.121127, 0.133635, -0.137206, 0.054331, -0.153069, -0.000634, 0.072384, -0.099306, 0.109744, -0.195101, -0.186607, 0.177711, 0.226390, -0.151632, -0.061557, -0.200173, -0.183640, -0.191827, -0.079753, -0.054998, -0.157202, -0.190492, -0.190105, 0.034092, -0.157723, -0.190227, 0.055984, 0.050740, -0.047144, 0.089217, 0.037652, -0.158922, -0.032619, 0.205937, 0.272170, -0.015868, -0.225700, -0.116709, 0.109425, -0.206930, 0.082876, -0.153296, 0.207048, 0.219547, -0.109984, 0.113878, -0.115576, 0.176415, -0.214456, 0.141316, 0.080876, -0.134079, 0.120586, 0.107825, 0.006743, -0.127586, 0.195954, 0.194476, -0.123844, 0.050509, 0.135031, 0.024125, 0.003242, 0.229384, 0.085086, 0.115810, -0.143865, -0.032623, 0.194530, 0.138956, -0.069635, -0.072676, 0.152406, -0.124573, 0.031332, 0.183170, -0.191995, -0.145391, -0.135137, -0.125113 ],
			"coeffs_2" : [ -0.086826, -0.015338, -0.196642, 0.172386, 0.240778, 0.069804, -0.002822, 0.070487, 0.010444, 0.087581, 0.046550, 0.164475, 0.077274, -0.100990, -0.068665, -0.177719, -0.117339, -0.143667, 0.066427, -0.034734, -0.120703, -0.201623, 0.242264, -0.115931, -0.057221, 0.083368, 0.135206, 0.083455, -0.185440, 0.208961, 0.185954, 0.202499, 0.026218, 0.254706, 0.179017, 0.073064, -0.081848, 0.195802, -0.208912, -0.193659, -0.025159, -0.029177, 0.115594, 0.188050, 0.043977, -0.038635, -0.141299, -0.173097, 0.048940, 0.058395, -0.199935, -0.028284, 0.166847, -0.077715, 0.026472, -0.070250, 0.062932, -0.122389, 0.011430, 0.147716, 0.073041, 0.128232, 0.165609, 0.151211, 0.077483, -0.175329, -0.020091, -0.165604, 0.076311, 0.078087, 0.207393, 0.123263, 0.232658, -0.148624, 0.052584, 0.155773, 0.068865, 0.208501, -0.091628, 0.190373, 0.131114, 0.262534, 0.004832, 0.064837, 0.139230, 0.103303, 0.171961, -0.205026, 0.077819, 0.222858, 0.049404, 0.176760, -0.102499, 0.079715, -0.169219, 0.050676, -0.200754, 0.120747, 0.004431, 0.007153 ],
			"coeffs_3" : [ 0.116799, -0.222234, -0.166419, -0.044942, -0.153646, 0.126639, -0.027504, -0.096947, -0.070270, 0.121173, 0.159606, -0.077339, 0.094405, -0.177913, 0.199310, -0.028022, 0.070285, -0.147349, -0.141136, 0.052454, -0.095450, 0.186514, -0.184817, -0.144443, 0.105694, 0.016502, 0.185239, 0.127537, -0.144595, -0.136108, -0.199146, 0.081789, 0.077301, 0.118965, -0.040806, 0.032806, 0.196866, -0.194368, -0.066630, -0.074223, 0.004695, -0.093319, -0.053274, -0.088342, -0.050261, 0.122060, 0.046604, -0.144126, -0.086694, -0.017688, 0.218230, 0.024223, -0.172328, -0.098659, -0.170172, 0.095241, -0.136295, -0.046736, -0.166936, 0.017989, -0.176220, -0.106495, 0.193267, -0.159157, 0.207539, -0.143200, 0.093519, -0.152247, 0.113176, -0.084807, -0.175283, -0.123349, -0.212983, 0.042240, -0.194713, 0.237735, -0.253819, -0.019027, 0.227489, 0.032500, -0.026625, -0.058815, 0.197974, -0.147963, -0.156101, -0.130083, 0.032625, 0.170446, -0.038047, 0.088670, 0.151620, 0.113027, -0.178425, 0.098564, -0.152611, 0.119704, -0.175211, -0.072895, 0.199270, -0.142700 ],
			"intercepts" : [ -0.098329, 0.021627, 0.122204, 0.218485, -0.101992, 0.004558, 0.226225, 0.192922, 0.170788, -0.022945, -0.147997, -0.098459, 0.067193, -0.204436, -0.092806, -0.192780, -0.040594, -0.075174, -0.013875, -0.040220, 0.227486, 0.157066, -0.099615, -0.023077, 0.135882, -0.216829, -0.099540, 0.008445, -0.119039, 0.034205, -0.219782, -0.042870, -0.058511, 0.114186, -0.017679, 0.141137, -0.018475, -0.234673, 0.189832, -0.221136, -0.009981, -0.025688, 0.112183, -0.254137, -0.084426, 0.196254, 0.156149, -0.147839, 0.166270, 0.077937, 0.222274, 0.207382, -0.089471, 0.181315, 0.225348, 0.221902, 0.135937, 0.035240, 0.045321, -0.047989, -0.030121, -0.015552, 0.011300, -0.084488, -0.151722, 0.021503, 0.231954, -0.068275, -0.124141, -0.160003, -0.072539, -0.116597, -0.034956, -0.073916, 0.191070, -0.025694, 0.044880, 0.006939, -0.005015, 0.028055, -0.080367, 0.203746, 0.250293, 0.088610, 0.041405, 0.074969, -0.000670, 0.154070, 0.072312, -0.029304, -0.054875, -0.228662, 0.217775, -0.200400, -0.122221, 0.206771, -0.156734, 0.201561, -0.134914, 0.219189 ]
		},
		"Layer_2" : {
			"name" : "Output_Layer",
			"NbInputs" : 100,
			"NbOutputs" : 3 ,
			"coeffs_00" : [ 0.123479, 0.167388, -0.191873 ],
			"coeffs_01" : [ 0.130665, -0.177057, 0.222642 ],
			"coeffs_02" : [ -0.147232, -0.174194, -0.143742 ],
			"coeffs_03" : [ -0.059730, 0.098773, 0.149004 ],
			"coeffs_04" : [ -0.071447, 0.215914, -0.093504 ],
			"coeffs_05" : [ -0.232978, -0.116618, 0.012421 ],
			"coeffs_06" : [ 0.046207, -0.174297, 0.108305 ],
			"coeffs_07" : [ 0.117247, -0.047023, -0.125100 ],
			"coeffs_08" : [ 0.143858, -0.169382, 0.185585 ],
			"coeffs_09" : [ 0.134867, 0.039509, -0.186399 ],
			"coeffs_10" : [ -0.228673, -0.127729, 0.036724 ],
			"coeffs_11" : [ -0.244890, -0.056283, -0.084705 ],
			"coeffs_12" : [ 0.139071, 0.132912, -0.189781 ],
			"coeffs_13" : [ 0.089560, 0.132537, 0.045873 ],
			"coeffs_14" : [ 0.178321, -0.066713, -0.169187 ],
			"coeffs_15" : [ 0.035140, 0.109061, -0.207122 ],
			"coeffs_16" : [ -0.072413, 0.166068, -0.185185 ],
			"coeffs_17" : [ -0.023104, -0.040567, 0.109409 ],
			"coeffs_18" : [ -0.141248, 0.200450, 0.011152 ],
			"coeffs_19" : [ -0.187259, -0.174870, 0.156918 ],
			"coeffs_20" : [ 0.076463, -0.089106, -0.033013 ],
			"coeffs_21" : [ -0.058436, 0.197318, 0.183534 ],
			"coeffs_22" : [ -0.063985, -0.103407, 0.186549 ],
			"coeffs_23" : [ -0.011759, 0.070848, 0.018334 ],
			"coeffs_24" : [ -0.147600, 0.066783, 0.104495 ],
			"coeffs_25" : [ -0.000088, 0.095540, -0.005308 ],
			"coeffs_26" : [ -0.170103, 0.156961, -0.095202 ],
			"coeffs_27" : [ 0.026370, -0.110912, -0.103044 ],
			"coeffs_28" : [ 0.077292, 0.181270, -0.185306 ],
			"coeffs_29" : [ -0.153955, 0.000815, -0.068856 ],
			"coeffs_30" : [ -0.140442, 0.136262, -0.172414 ],
			"coeffs_31" : [ -0.072923, 0.198935, 0.241863 ],
			"coeffs_32" : [ -0.037476, 0.144569, -0.099615 ],
			"coeffs_33" : [ -0.080518, 0.162072, -0.051815 ],
			"coeffs_34" : [ -0.225118, 0.013112, 0.144056 ],
			"coeffs_35" : [ -0.197539, -0.190176, 0.048763 ],
			"coeffs_36" : [ 0.032638, -0.076406, 0.071713 ],
			"coeffs_37" : [ 0.134461, 0.013766, 0.117057 ],
			"coeffs_38" : [ 0.061958, 0.010282, -0.048880 ],
			"coeffs_39" : [ 0.185375, -0.152006, -0.157632 ],
			"coeffs_40" : [ -0.127733, -0.185992, -0.184587 ],
			"coeffs_41" : [ 0.088884, 0.021956, -0.093464 ],
			"coeffs_42" : [ 0.034534, 0.123545, 0.090104 ],
			"coeffs_43" : [ -0.086794, -0.169645, 0.013954 ],
			"coeffs_44" : [ 0.037135, 0.114812, -0.197155 ],
			"coeffs_45" : [ -0.167643, 0.013143, -0.060541 ],
			"coeffs_46" : [ -0.104508, 0.239246, -0.160289 ],
			"coeffs_47" : [ -0.124614, 0.181018, 0.183232 ],
			"coeffs_48" : [ 0.098970, -0.121928, 0.150053 ],
			"coeffs_49" : [ 0.178525, 0.147966, -0.074948 ],
			"coeffs_50" : [ -0.069713, 0.140254, -0.175025 ],
			"coeffs_51" : [ -0.122756, 0.165788, 0.126837 ],
			"coeffs_52" : [ -0.167917, 0.182336, -0.123969 ],
			"coeffs_53" : [ -0.160808, 0.115356, -0.142839 ],
			"coeffs_54" : [ 0.259393, 0.077484, -0.064352 ],
			"coeffs_55" : [ 0.169890, 0.165268, 0.082077 ],
			"coeffs_56" : [ 0.194729, 0.001562, -0.109995 ],
			"coeffs_57" : [ -0.012243, -0.027236, 0.134695 ],
			"coeffs_58" : [ -0.064912, 0.104068, -0.160574 ],
			"coeffs_59" : [ 0.155447, -0.125988, 0.170662 ],
			"coeffs_60" : [ 0.200004, -0.001439, -0.210480 ],
			"coeffs_61" : [ 0.123103, -0.050464, -0.152519 ],
			"coeffs_62" : [ -0.046842, -0.156813, 0.212361 ],
			"coeffs_63" : [ -0.046546, -0.071118, -0.046817 ],
			"coeffs_64" : [ 0.170070, -0.087578, 0.044365 ],
			"coeffs_65" : [ 0.021211, -0.165906, 0.115032 ],
			"coeffs_66" : [ -0.134599, 0.185941, -0.181720 ],
			"coeffs_67" : [ -0.070992, -0.175433, -0.027029 ],
			"coeffs_68" : [ -0.090948, -0.216656, 0.006837 ],
			"coeffs_69" : [ -0.156014, 0.094942, 0.146116 ],
			"coeffs_70" : [ 0.106070, 0.085683, 0.005997 ],
			"coeffs_71" : [ -0.203810, -0.199122, 0.176752 ],
			"coeffs_72" : [ -0.091277, 0.043130, -0.131857 ],
			"coeffs_73" : [ 0.236064, -0.025939, 0.021987 ],
			"coeffs_74" : [ -0.138795, -0.011309, -0.008695 ],
			"coeffs_75" : [ -0.198117, -0.170069, -0.052078 ],
			"coeffs_76" : [ 0.165909, -0.185283, -0.042568 ],
			"coeffs_77" : [ 0.082480, -0.228165, 0.229811 ],
			"coeffs_78" : [ -0.223245, -0.171228, -0.004918 ],
			"coeffs_79" : [ -0.058487, -0.031026, 0.213334 ],
			"coeffs_80" : [ -0.130062, 0.121994, -0.007013 ],
			"coeffs_81" : [ -0.163306, -0.103228, -0.099064 ],
			"coeffs_82" : [ -0.138766, 0.063026, -0.173374 ],
			"coeffs_83" : [ 0.185912, 0.053609, -0.079492 ],
			"coeffs_84" : [ -0.177244, -0.202059, -0.076778 ],
			"coeffs_85" : [ 0.205646, 0.225396, 0.055504 ],
			"coeffs_86" : [ -0.242889, -0.061766, -0.101592 ],
			"coeffs_87" : [ -0.025500, 0.065094, -0.047723 ],
			"coeffs_88" : [ 0.085237, 0.191528, -0.051895 ],
			"coeffs_89" : [ 0.174439, 0.025712, 0.246608 ],
			"coeffs_90" : [ 0.182126, -0.158897, 0.116898 ],
			"coeffs_91" : [ 0.019788, -0.071656, 0.042588 ],
			"coeffs_92" : [ 0.154101, -0.139948, 0.215220 ],
			"coeffs_93" : [ -0.141780, -0.064583, -0.169690 ],
			"coeffs_94" : [ -0.194919, -0.192652, 0.009980 ],
			"coeffs_95" : [ 0.029845, -0.109208, -0.029706 ],
			"coeffs_96" : [ -0.166456, -0.048821, 0.121959 ],
			"coeffs_97" : [ -0.109451, -0.251207, -0.195048 ],
			"coeffs_98" : [ -0.199657, 0.208246, 0.178303 ],
			"coeffs_99" : [ 0.200075, 0.193312, 0.104381 ],
			"intercepts" : [ 0.151426, -0.094136, -0.124720 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/MLPClassifier/mllite.MLPClassifier_iris_sampled.json'

RELOADING_MODEL_FROM_JSON_START ('iris_sampled', 'MLPClassifier')
MLLITE_MODEL_SET_OPTIONS MLPClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT MLPClassifier { "max_iter" : 32}
MLLITE_MODEL_OPTIONS_AFTER_SETTING MLPClassifier { ,  "max_iter" : 32 }
MLLITE_MODEL_JSON_AFTER_SETTING MLPClassifier None
MLLITE_RELOADING_MODEL mllite_mlp_class.MLPClassifier_ff4_il8
{
	"metadata" : { "model" : "Rosenblatt_MLP", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : {  "hidden_layer_sizes" : [ 100 ], "activation" : "relu", "solver" : "adam", "alpha" : 0.000100, "batch_size" : null, "learning_rate" : "constant", "learning_rate_init" : 0.001000, "power_t" : 0.500000, "max_iter" : 32, "shuffle" : 1, "random_state" : 1789, "tol" : 0.000100, "verbose" : 0, "warm_start" : 0, "momentum" : 0.900000, "nesterovs_momentum" : 1, "early_stopping" : 0, "validation_fraction" : 0.100000, "beta_1" : 0.900000, "beta_2" : 0.999000, "epsilon" : 0.000000, "n_iter_no_change" : 10, "max_fun" : 15000 },
	"dataset" : { "dataset_rows" : 18, "dataset_features" : 4 },
	"classes" : [ 0, 1, 2 ],
	"layers" : {
		"sizes" : [ 4, 100, 3 ],
		"Layer_0" : {
			"name" : "Input_Layer",
			"NbInputs" : 0,
			"NbOutputs" : 4 
		},
		"Layer_1" : {
			"name" : "Hidden_Layer_1",
			"NbInputs" : 4,
			"NbOutputs" : 100 ,
			"coeffs_0" : [ -0.000659, 0.113077, -0.098035, -0.008064, 0.055435, -0.158829, 0.057715, -0.003521, 0.192993, 0.038389, 0.211048, -0.027324, 0.251271, -0.185541, -0.100623, 0.119695, 0.137104, -0.115070, -0.122237, -0.186389, 0.092781, -0.207561, -0.008712, -0.012299, -0.047717, -0.188851, -0.096021, 0.184848, -0.017654, 0.033294, -0.185748, 0.023897, -0.062019, 0.099735, -0.019616, 0.088423, -0.159850, 0.198341, -0.175863, 0.129082, -0.172538, 0.115259, 0.079887, 0.205636, -0.150790, -0.185116, 0.092015, 0.053972, 0.149626, 0.217748, 0.194285, -0.156031, 0.154781, 0.206994, -0.112318, 0.106492, 0.049461, 0.018012, 0.042140, 0.125435, -0.179208, 0.004227, 0.085795, 0.124738, -0.178246, 0.154826, -0.133716, -0.192713, 0.224719, 0.239393, -0.045582, -0.195333, 0.002392, 0.218386, -0.173311, 0.079109, 0.096783, 0.129958, 0.195598, -0.092346, 0.111887, 0.176770, 0.187153, -0.032517, -0.186382, 0.131497, 0.027809, -0.045510, -0.180172, -0.218292, -0.087854, 0.204276, -0.008885, -0.048975, -0.055625, -0.227905, 0.080030, -0.086892, -0.093217, -0.048806 ],
			"coeffs_1" : [ 0.121147, -0.181137, -0.078942, 0.133811, 0.166121, 0.200779, 0.164800, 0.138404, -0.110929, 0.055895, 0.033491, 0.164319, 0.138981, -0.000589, 0.138138, 0.197097, 0.048797, -0.082576, -0.065666, -0.119020, 0.121127, 0.133635, -0.137206, 0.054331, -0.153069, -0.000634, 0.072384, -0.099306, 0.109744, -0.195101, -0.186607, 0.177711, 0.226390, -0.151632, -0.061557, -0.200173, -0.183640, -0.191827, -0.079753, -0.054998, -0.157202, -0.190492, -0.190105, 0.034092, -0.157723, -0.190227, 0.055984, 0.050740, -0.047144, 0.089217, 0.037652, -0.158922, -0.032619, 0.205937, 0.272170, -0.015868, -0.225700, -0.116709, 0.109425, -0.206930, 0.082876, -0.153296, 0.207048, 0.219547, -0.109984, 0.113878, -0.115576, 0.176415, -0.214456, 0.141316, 0.080876, -0.134079, 0.120586, 0.107825, 0.006743, -0.127586, 0.195954, 0.194476, -0.123844, 0.050509, 0.135031, 0.024125, 0.003242, 0.229384, 0.085086, 0.115810, -0.143865, -0.032623, 0.194530, 0.138956, -0.069635, -0.072676, 0.152406, -0.124573, 0.031332, 0.183170, -0.191995, -0.145391, -0.135137, -0.125113 ],
			"coeffs_2" : [ -0.086826, -0.015338, -0.196642, 0.172386, 0.240778, 0.069804, -0.002822, 0.070487, 0.010444, 0.087581, 0.046550, 0.164475, 0.077274, -0.100990, -0.068665, -0.177719, -0.117339, -0.143667, 0.066427, -0.034734, -0.120703, -0.201623, 0.242264, -0.115931, -0.057221, 0.083368, 0.135206, 0.083455, -0.185440, 0.208961, 0.185954, 0.202499, 0.026218, 0.254706, 0.179017, 0.073064, -0.081848, 0.195802, -0.208912, -0.193659, -0.025159, -0.029177, 0.115594, 0.188050, 0.043977, -0.038635, -0.141299, -0.173097, 0.048940, 0.058395, -0.199935, -0.028284, 0.166847, -0.077715, 0.026472, -0.070250, 0.062932, -0.122389, 0.011430, 0.147716, 0.073041, 0.128232, 0.165609, 0.151211, 0.077483, -0.175329, -0.020091, -0.165604, 0.076311, 0.078087, 0.207393, 0.123263, 0.232658, -0.148624, 0.052584, 0.155773, 0.068865, 0.208501, -0.091628, 0.190373, 0.131114, 0.262534, 0.004832, 0.064837, 0.139230, 0.103303, 0.171961, -0.205026, 0.077819, 0.222858, 0.049404, 0.176760, -0.102499, 0.079715, -0.169219, 0.050676, -0.200754, 0.120747, 0.004431, 0.007153 ],
			"coeffs_3" : [ 0.116799, -0.222234, -0.166419, -0.044942, -0.153646, 0.126639, -0.027504, -0.096947, -0.070270, 0.121173, 0.159606, -0.077339, 0.094405, -0.177913, 0.199310, -0.028022, 0.070285, -0.147349, -0.141136, 0.052454, -0.095450, 0.186514, -0.184817, -0.144443, 0.105694, 0.016502, 0.185239, 0.127537, -0.144595, -0.136108, -0.199146, 0.081789, 0.077301, 0.118965, -0.040806, 0.032806, 0.196866, -0.194368, -0.066630, -0.074223, 0.004695, -0.093319, -0.053274, -0.088342, -0.050261, 0.122060, 0.046604, -0.144126, -0.086694, -0.017688, 0.218230, 0.024223, -0.172328, -0.098659, -0.170172, 0.095241, -0.136295, -0.046736, -0.166936, 0.017989, -0.176220, -0.106495, 0.193267, -0.159157, 0.207539, -0.143200, 0.093519, -0.152247, 0.113176, -0.084807, -0.175283, -0.123349, -0.212983, 0.042240, -0.194713, 0.237735, -0.253819, -0.019027, 0.227489, 0.032500, -0.026625, -0.058815, 0.197974, -0.147963, -0.156101, -0.130083, 0.032625, 0.170446, -0.038047, 0.088670, 0.151620, 0.113027, -0.178425, 0.098564, -0.152611, 0.119704, -0.175211, -0.072895, 0.199270, -0.142700 ],
			"intercepts" : [ -0.098329, 0.021627, 0.122204, 0.218485, -0.101992, 0.004558, 0.226225, 0.192922, 0.170788, -0.022945, -0.147997, -0.098459, 0.067193, -0.204436, -0.092806, -0.192780, -0.040594, -0.075174, -0.013875, -0.040220, 0.227486, 0.157066, -0.099615, -0.023077, 0.135882, -0.216829, -0.099540, 0.008445, -0.119039, 0.034205, -0.219782, -0.042870, -0.058511, 0.114186, -0.017679, 0.141137, -0.018475, -0.234673, 0.189832, -0.221136, -0.009981, -0.025688, 0.112183, -0.254137, -0.084426, 0.196254, 0.156149, -0.147839, 0.166270, 0.077937, 0.222274, 0.207382, -0.089471, 0.181315, 0.225348, 0.221902, 0.135937, 0.035240, 0.045321, -0.047989, -0.030121, -0.015552, 0.011300, -0.084488, -0.151722, 0.021503, 0.231954, -0.068275, -0.124141, -0.160003, -0.072539, -0.116597, -0.034956, -0.073916, 0.191070, -0.025694, 0.044880, 0.006939, -0.005015, 0.028055, -0.080367, 0.203746, 0.250293, 0.088610, 0.041405, 0.074969, -0.000670, 0.154070, 0.072312, -0.029304, -0.054875, -0.228662, 0.217775, -0.200400, -0.122221, 0.206771, -0.156734, 0.201561, -0.134914, 0.219189 ]
		},
		"Layer_2" : {
			"name" : "Output_Layer",
			"NbInputs" : 100,
			"NbOutputs" : 3 ,
			"coeffs_00" : [ 0.123479, 0.167388, -0.191873 ],
			"coeffs_01" : [ 0.130665, -0.177057, 0.222642 ],
			"coeffs_02" : [ -0.147232, -0.174194, -0.143742 ],
			"coeffs_03" : [ -0.059730, 0.098773, 0.149004 ],
			"coeffs_04" : [ -0.071447, 0.215914, -0.093504 ],
			"coeffs_05" : [ -0.232978, -0.116618, 0.012421 ],
			"coeffs_06" : [ 0.046207, -0.174297, 0.108305 ],
			"coeffs_07" : [ 0.117247, -0.047023, -0.125100 ],
			"coeffs_08" : [ 0.143858, -0.169382, 0.185585 ],
			"coeffs_09" : [ 0.134867, 0.039509, -0.186399 ],
			"coeffs_10" : [ -0.228673, -0.127729, 0.036724 ],
			"coeffs_11" : [ -0.244890, -0.056283, -0.084705 ],
			"coeffs_12" : [ 0.139071, 0.132912, -0.189781 ],
			"coeffs_13" : [ 0.089560, 0.132537, 0.045873 ],
			"coeffs_14" : [ 0.178321, -0.066713, -0.169187 ],
			"coeffs_15" : [ 0.035140, 0.109061, -0.207122 ],
			"coeffs_16" : [ -0.072413, 0.166068, -0.185185 ],
			"coeffs_17" : [ -0.023104, -0.040567, 0.109409 ],
			"coeffs_18" : [ -0.141248, 0.200450, 0.011152 ],
			"coeffs_19" : [ -0.187259, -0.174870, 0.156918 ],
			"coeffs_20" : [ 0.076463, -0.089106, -0.033013 ],
			"coeffs_21" : [ -0.058436, 0.197318, 0.183534 ],
			"coeffs_22" : [ -0.063985, -0.103407, 0.186549 ],
			"coeffs_23" : [ -0.011759, 0.070848, 0.018334 ],
			"coeffs_24" : [ -0.147600, 0.066783, 0.104495 ],
			"coeffs_25" : [ -0.000088, 0.095540, -0.005308 ],
			"coeffs_26" : [ -0.170103, 0.156961, -0.095202 ],
			"coeffs_27" : [ 0.026370, -0.110912, -0.103044 ],
			"coeffs_28" : [ 0.077292, 0.181270, -0.185306 ],
			"coeffs_29" : [ -0.153955, 0.000815, -0.068856 ],
			"coeffs_30" : [ -0.140442, 0.136262, -0.172414 ],
			"coeffs_31" : [ -0.072923, 0.198935, 0.241863 ],
			"coeffs_32" : [ -0.037476, 0.144569, -0.099615 ],
			"coeffs_33" : [ -0.080518, 0.162072, -0.051815 ],
			"coeffs_34" : [ -0.225118, 0.013112, 0.144056 ],
			"coeffs_35" : [ -0.197539, -0.190176, 0.048763 ],
			"coeffs_36" : [ 0.032638, -0.076406, 0.071713 ],
			"coeffs_37" : [ 0.134461, 0.013766, 0.117057 ],
			"coeffs_38" : [ 0.061958, 0.010282, -0.048880 ],
			"coeffs_39" : [ 0.185375, -0.152006, -0.157632 ],
			"coeffs_40" : [ -0.127733, -0.185992, -0.184587 ],
			"coeffs_41" : [ 0.088884, 0.021956, -0.093464 ],
			"coeffs_42" : [ 0.034534, 0.123545, 0.090104 ],
			"coeffs_43" : [ -0.086794, -0.169645, 0.013954 ],
			"coeffs_44" : [ 0.037135, 0.114812, -0.197155 ],
			"coeffs_45" : [ -0.167643, 0.013143, -0.060541 ],
			"coeffs_46" : [ -0.104508, 0.239246, -0.160289 ],
			"coeffs_47" : [ -0.124614, 0.181018, 0.183232 ],
			"coeffs_48" : [ 0.098970, -0.121928, 0.150053 ],
			"coeffs_49" : [ 0.178525, 0.147966, -0.074948 ],
			"coeffs_50" : [ -0.069713, 0.140254, -0.175025 ],
			"coeffs_51" : [ -0.122756, 0.165788, 0.126837 ],
			"coeffs_52" : [ -0.167917, 0.182336, -0.123969 ],
			"coeffs_53" : [ -0.160808, 0.115356, -0.142839 ],
			"coeffs_54" : [ 0.259393, 0.077484, -0.064352 ],
			"coeffs_55" : [ 0.169890, 0.165268, 0.082077 ],
			"coeffs_56" : [ 0.194729, 0.001562, -0.109995 ],
			"coeffs_57" : [ -0.012243, -0.027236, 0.134695 ],
			"coeffs_58" : [ -0.064912, 0.104068, -0.160574 ],
			"coeffs_59" : [ 0.155447, -0.125988, 0.170662 ],
			"coeffs_60" : [ 0.200004, -0.001439, -0.210480 ],
			"coeffs_61" : [ 0.123103, -0.050464, -0.152519 ],
			"coeffs_62" : [ -0.046842, -0.156813, 0.212361 ],
			"coeffs_63" : [ -0.046546, -0.071118, -0.046817 ],
			"coeffs_64" : [ 0.170070, -0.087578, 0.044365 ],
			"coeffs_65" : [ 0.021211, -0.165906, 0.115032 ],
			"coeffs_66" : [ -0.134599, 0.185941, -0.181720 ],
			"coeffs_67" : [ -0.070992, -0.175433, -0.027029 ],
			"coeffs_68" : [ -0.090948, -0.216656, 0.006837 ],
			"coeffs_69" : [ -0.156014, 0.094942, 0.146116 ],
			"coeffs_70" : [ 0.106070, 0.085683, 0.005997 ],
			"coeffs_71" : [ -0.203810, -0.199122, 0.176752 ],
			"coeffs_72" : [ -0.091277, 0.043130, -0.131857 ],
			"coeffs_73" : [ 0.236064, -0.025939, 0.021987 ],
			"coeffs_74" : [ -0.138795, -0.011309, -0.008695 ],
			"coeffs_75" : [ -0.198117, -0.170069, -0.052078 ],
			"coeffs_76" : [ 0.165909, -0.185283, -0.042568 ],
			"coeffs_77" : [ 0.082480, -0.228165, 0.229811 ],
			"coeffs_78" : [ -0.223245, -0.171228, -0.004918 ],
			"coeffs_79" : [ -0.058487, -0.031026, 0.213334 ],
			"coeffs_80" : [ -0.130062, 0.121994, -0.007013 ],
			"coeffs_81" : [ -0.163306, -0.103228, -0.099064 ],
			"coeffs_82" : [ -0.138766, 0.063026, -0.173374 ],
			"coeffs_83" : [ 0.185912, 0.053609, -0.079492 ],
			"coeffs_84" : [ -0.177244, -0.202059, -0.076778 ],
			"coeffs_85" : [ 0.205646, 0.225396, 0.055504 ],
			"coeffs_86" : [ -0.242889, -0.061766, -0.101592 ],
			"coeffs_87" : [ -0.025500, 0.065094, -0.047723 ],
			"coeffs_88" : [ 0.085237, 0.191528, -0.051895 ],
			"coeffs_89" : [ 0.174439, 0.025712, 0.246608 ],
			"coeffs_90" : [ 0.182126, -0.158897, 0.116898 ],
			"coeffs_91" : [ 0.019788, -0.071656, 0.042588 ],
			"coeffs_92" : [ 0.154101, -0.139948, 0.215220 ],
			"coeffs_93" : [ -0.141780, -0.064583, -0.169690 ],
			"coeffs_94" : [ -0.194919, -0.192652, 0.009980 ],
			"coeffs_95" : [ 0.029845, -0.109208, -0.029706 ],
			"coeffs_96" : [ -0.166456, -0.048821, 0.121959 ],
			"coeffs_97" : [ -0.109451, -0.251207, -0.195048 ],
			"coeffs_98" : [ -0.199657, 0.208246, 0.178303 ],
			"coeffs_99" : [ 0.200075, 0.193312, 0.104381 ],
			"intercepts" : [ 0.151426, -0.094136, -0.124720 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1, 2 ],
	"dataset" : 	{
		"dataset_features" : 4,
		"dataset_rows" : 18
	},
	"layers" : 	{
		"Layer_0" : 	{
			"NbInputs" : 0,
			"NbOutputs" : 4,
			"name" : "Input_Layer"
		},
		"Layer_1" : 	{
			"NbInputs" : 4,
			"NbOutputs" : 100,
			"coeffs_0" : [ -0.000659, 0.113077, -0.098035, -0.008064, 0.055435, -0.158829, 0.057715, -0.003521, 0.192993, 0.038389, 0.211048, -0.027324, 0.251271, -0.185541, -0.100623, 0.119695, 0.137104, -0.11507, -0.122237, -0.186389, 0.092781, -0.207561, -0.008712, -0.012299, -0.047717, -0.188851, -0.096021, 0.184848, -0.017654, 0.033294, -0.185748, 0.023897, -0.062019, 0.099735, -0.019616, 0.088423, -0.15985, 0.198341, -0.175863, 0.129082, -0.172538, 0.115259, 0.079887, 0.205636, -0.15079, -0.185116, 0.092015, 0.053972, 0.149626, 0.217748, 0.194285, -0.156031, 0.154781, 0.206994, -0.112318, 0.106492, 0.049461, 0.018012, 0.04214, 0.125435, -0.179208, 0.004227, 0.085795, 0.124738, -0.178246, 0.154826, -0.133716, -0.192713, 0.224719, 0.239393, -0.045582, -0.195333, 0.002392, 0.218386, -0.173311, 0.079109, 0.096783, 0.129958, 0.195598, -0.092346, 0.111887, 0.17677, 0.187153, -0.032517, -0.186382, 0.131497, 0.027809, -0.04551, -0.180172, -0.218292, -0.087854, 0.204276, -0.008885, -0.048975, -0.055625, -0.227905, 0.08003, -0.086892, -0.093217, -0.048806 ],
			"coeffs_1" : [ 0.121147, -0.181137, -0.078942, 0.133811, 0.166121, 0.200779, 0.1648, 0.138404, -0.110929, 0.055895, 0.033491, 0.164319, 0.138981, -0.000589, 0.138138, 0.197097, 0.048797, -0.082576, -0.065666, -0.11902, 0.121127, 0.133635, -0.137206, 0.054331, -0.153069, -0.000634, 0.072384, -0.099306, 0.109744, -0.195101, -0.186607, 0.177711, 0.22639, -0.151632, -0.061557, -0.200173, -0.18364, -0.191827, -0.079753, -0.054998, -0.157202, -0.190492, -0.190105, 0.034092, -0.157723, -0.190227, 0.055984, 0.05074, -0.047144, 0.089217, 0.037652, -0.158922, -0.032619, 0.205937, 0.27217, -0.015868, -0.2257, -0.116709, 0.109425, -0.20693, 0.082876, -0.153296, 0.207048, 0.219547, -0.109984, 0.113878, -0.115576, 0.176415, -0.214456, 0.141316, 0.080876, -0.134079, 0.120586, 0.107825, 0.006743, -0.127586, 0.195954, 0.194476, -0.123844, 0.050509, 0.135031, 0.024125, 0.003242, 0.229384, 0.085086, 0.11581, -0.143865, -0.032623, 0.19453, 0.138956, -0.069635, -0.072676, 0.152406, -0.124573, 0.031332, 0.18317, -0.191995, -0.145391, -0.135137, -0.125113 ],
			"coeffs_2" : [ -0.086826, -0.015338, -0.196642, 0.172386, 0.240778, 0.069804, -0.002822, 0.070487, 0.010444, 0.087581, 0.04655, 0.164475, 0.077274, -0.10099, -0.068665, -0.177719, -0.117339, -0.143667, 0.066427, -0.034734, -0.120703, -0.201623, 0.242264, -0.115931, -0.057221, 0.083368, 0.135206, 0.083455, -0.18544, 0.208961, 0.185954, 0.202499, 0.026218, 0.254706, 0.179017, 0.073064, -0.081848, 0.195802, -0.208912, -0.193659, -0.025159, -0.029177, 0.115594, 0.18805, 0.043977, -0.038635, -0.141299, -0.173097, 0.04894, 0.058395, -0.199935, -0.028284, 0.166847, -0.077715, 0.026472, -0.07025, 0.062932, -0.122389, 0.01143, 0.147716, 0.073041, 0.128232, 0.165609, 0.151211, 0.077483, -0.175329, -0.020091, -0.165604, 0.076311, 0.078087, 0.207393, 0.123263, 0.232658, -0.148624, 0.052584, 0.155773, 0.068865, 0.208501, -0.091628, 0.190373, 0.131114, 0.262534, 0.004832, 0.064837, 0.13923, 0.103303, 0.171961, -0.205026, 0.077819, 0.222858, 0.049404, 0.17676, -0.102499, 0.079715, -0.169219, 0.050676, -0.200754, 0.120747, 0.004431, 0.007153 ],
			"coeffs_3" : [ 0.116799, -0.222234, -0.166419, -0.044942, -0.153646, 0.126639, -0.027504, -0.096947, -0.07027, 0.121173, 0.159606, -0.077339, 0.094405, -0.177913, 0.19931, -0.028022, 0.070285, -0.147349, -0.141136, 0.052454, -0.09545, 0.186514, -0.184817, -0.144443, 0.105694, 0.016502, 0.185239, 0.127537, -0.144595, -0.136108, -0.199146, 0.081789, 0.077301, 0.118965, -0.040806, 0.032806, 0.196866, -0.194368, -0.06663, -0.074223, 0.004695, -0.093319, -0.053274, -0.088342, -0.050261, 0.12206, 0.046604, -0.144126, -0.086694, -0.017688, 0.21823, 0.024223, -0.172328, -0.098659, -0.170172, 0.095241, -0.136295, -0.046736, -0.166936, 0.017989, -0.17622, -0.106495, 0.193267, -0.159157, 0.207539, -0.1432, 0.093519, -0.152247, 0.113176, -0.084807, -0.175283, -0.123349, -0.212983, 0.04224, -0.194713, 0.237735, -0.253819, -0.019027, 0.227489, 0.0325, -0.026625, -0.058815, 0.197974, -0.147963, -0.156101, -0.130083, 0.032625, 0.170446, -0.038047, 0.08867, 0.15162, 0.113027, -0.178425, 0.098564, -0.152611, 0.119704, -0.175211, -0.072895, 0.19927, -0.1427 ],
			"intercepts" : [ -0.098329, 0.021627, 0.122204, 0.218485, -0.101992, 0.004558, 0.226225, 0.192922, 0.170788, -0.022945, -0.147997, -0.098459, 0.067193, -0.204436, -0.092806, -0.19278, -0.040594, -0.075174, -0.013875, -0.04022, 0.227486, 0.157066, -0.099615, -0.023077, 0.135882, -0.216829, -0.09954, 0.008445, -0.119039, 0.034205, -0.219782, -0.04287, -0.058511, 0.114186, -0.017679, 0.141137, -0.018475, -0.234673, 0.189832, -0.221136, -0.009981, -0.025688, 0.112183, -0.254137, -0.084426, 0.196254, 0.156149, -0.147839, 0.16627, 0.077937, 0.222274, 0.207382, -0.089471, 0.181315, 0.225348, 0.221902, 0.135937, 0.03524, 0.045321, -0.047989, -0.030121, -0.015552, 0.0113, -0.084488, -0.151722, 0.021503, 0.231954, -0.068275, -0.124141, -0.160003, -0.072539, -0.116597, -0.034956, -0.073916, 0.19107, -0.025694, 0.04488, 0.006939, -0.005015, 0.028055, -0.080367, 0.203746, 0.250293, 0.08861, 0.041405, 0.074969, -0.00067, 0.15407, 0.072312, -0.029304, -0.054875, -0.228662, 0.217775, -0.2004, -0.122221, 0.206771, -0.156734, 0.201561, -0.134914, 0.219189 ],
			"name" : "Hidden_Layer_1"
		},
		"Layer_2" : 	{
			"NbInputs" : 100,
			"NbOutputs" : 3,
			"coeffs_00" : [ 0.123479, 0.167388, -0.191873 ],
			"coeffs_01" : [ 0.130665, -0.177057, 0.222642 ],
			"coeffs_02" : [ -0.147232, -0.174194, -0.143742 ],
			"coeffs_03" : [ -0.05973, 0.098773, 0.149004 ],
			"coeffs_04" : [ -0.071447, 0.215914, -0.093504 ],
			"coeffs_05" : [ -0.232978, -0.116618, 0.012421 ],
			"coeffs_06" : [ 0.046207, -0.174297, 0.108305 ],
			"coeffs_07" : [ 0.117247, -0.047023, -0.1251 ],
			"coeffs_08" : [ 0.143858, -0.169382, 0.185585 ],
			"coeffs_09" : [ 0.134867, 0.039509, -0.186399 ],
			"coeffs_10" : [ -0.228673, -0.127729, 0.036724 ],
			"coeffs_11" : [ -0.24489, -0.056283, -0.084705 ],
			"coeffs_12" : [ 0.139071, 0.132912, -0.189781 ],
			"coeffs_13" : [ 0.08956, 0.132537, 0.045873 ],
			"coeffs_14" : [ 0.178321, -0.066713, -0.169187 ],
			"coeffs_15" : [ 0.03514, 0.109061, -0.207122 ],
			"coeffs_16" : [ -0.072413, 0.166068, -0.185185 ],
			"coeffs_17" : [ -0.023104, -0.040567, 0.109409 ],
			"coeffs_18" : [ -0.141248, 0.20045, 0.011152 ],
			"coeffs_19" : [ -0.187259, -0.17487, 0.156918 ],
			"coeffs_20" : [ 0.076463, -0.089106, -0.033013 ],
			"coeffs_21" : [ -0.058436, 0.197318, 0.183534 ],
			"coeffs_22" : [ -0.063985, -0.103407, 0.186549 ],
			"coeffs_23" : [ -0.011759, 0.070848, 0.018334 ],
			"coeffs_24" : [ -0.1476, 0.066783, 0.104495 ],
			"coeffs_25" : [ -8.8e-05, 0.09554, -0.005308 ],
			"coeffs_26" : [ -0.170103, 0.156961, -0.095202 ],
			"coeffs_27" : [ 0.02637, -0.110912, -0.103044 ],
			"coeffs_28" : [ 0.077292, 0.18127, -0.185306 ],
			"coeffs_29" : [ -0.153955, 0.000815, -0.068856 ],
			"coeffs_30" : [ -0.140442, 0.136262, -0.172414 ],
			"coeffs_31" : [ -0.072923, 0.198935, 0.241863 ],
			"coeffs_32" : [ -0.037476, 0.144569, -0.099615 ],
			"coeffs_33" : [ -0.080518, 0.162072, -0.051815 ],
			"coeffs_34" : [ -0.225118, 0.013112, 0.144056 ],
			"coeffs_35" : [ -0.197539, -0.190176, 0.048763 ],
			"coeffs_36" : [ 0.032638, -0.076406, 0.071713 ],
			"coeffs_37" : [ 0.134461, 0.013766, 0.117057 ],
			"coeffs_38" : [ 0.061958, 0.010282, -0.04888 ],
			"coeffs_39" : [ 0.185375, -0.152006, -0.157632 ],
			"coeffs_40" : [ -0.127733, -0.185992, -0.184587 ],
			"coeffs_41" : [ 0.088884, 0.021956, -0.093464 ],
			"coeffs_42" : [ 0.034534, 0.123545, 0.090104 ],
			"coeffs_43" : [ -0.086794, -0.169645, 0.013954 ],
			"coeffs_44" : [ 0.037135, 0.114812, -0.197155 ],
			"coeffs_45" : [ -0.167643, 0.013143, -0.060541 ],
			"coeffs_46" : [ -0.104508, 0.239246, -0.160289 ],
			"coeffs_47" : [ -0.124614, 0.181018, 0.183232 ],
			"coeffs_48" : [ 0.09897, -0.121928, 0.150053 ],
			"coeffs_49" : [ 0.178525, 0.147966, -0.074948 ],
			"coeffs_50" : [ -0.069713, 0.140254, -0.175025 ],
			"coeffs_51" : [ -0.122756, 0.165788, 0.126837 ],
			"coeffs_52" : [ -0.167917, 0.182336, -0.123969 ],
			"coeffs_53" : [ -0.160808, 0.115356, -0.142839 ],
			"coeffs_54" : [ 0.259393, 0.077484, -0.064352 ],
			"coeffs_55" : [ 0.16989, 0.165268, 0.082077 ],
			"coeffs_56" : [ 0.194729, 0.001562, -0.109995 ],
			"coeffs_57" : [ -0.012243, -0.027236, 0.134695 ],
			"coeffs_58" : [ -0.064912, 0.104068, -0.160574 ],
			"coeffs_59" : [ 0.155447, -0.125988, 0.170662 ],
			"coeffs_60" : [ 0.200004, -0.001439, -0.21048 ],
			"coeffs_61" : [ 0.123103, -0.050464, -0.152519 ],
			"coeffs_62" : [ -0.046842, -0.156813, 0.212361 ],
			"coeffs_63" : [ -0.046546, -0.071118, -0.046817 ],
			"coeffs_64" : [ 0.17007, -0.087578, 0.044365 ],
			"coeffs_65" : [ 0.021211, -0.165906, 0.115032 ],
			"coeffs_66" : [ -0.134599, 0.185941, -0.18172 ],
			"coeffs_67" : [ -0.070992, -0.175433, -0.027029 ],
			"coeffs_68" : [ -0.090948, -0.216656, 0.006837 ],
			"coeffs_69" : [ -0.156014, 0.094942, 0.146116 ],
			"coeffs_70" : [ 0.10607, 0.085683, 0.005997 ],
			"coeffs_71" : [ -0.20381, -0.199122, 0.176752 ],
			"coeffs_72" : [ -0.091277, 0.04313, -0.131857 ],
			"coeffs_73" : [ 0.236064, -0.025939, 0.021987 ],
			"coeffs_74" : [ -0.138795, -0.011309, -0.008695 ],
			"coeffs_75" : [ -0.198117, -0.170069, -0.052078 ],
			"coeffs_76" : [ 0.165909, -0.185283, -0.042568 ],
			"coeffs_77" : [ 0.08248, -0.228165, 0.229811 ],
			"coeffs_78" : [ -0.223245, -0.171228, -0.004918 ],
			"coeffs_79" : [ -0.058487, -0.031026, 0.213334 ],
			"coeffs_80" : [ -0.130062, 0.121994, -0.007013 ],
			"coeffs_81" : [ -0.163306, -0.103228, -0.099064 ],
			"coeffs_82" : [ -0.138766, 0.063026, -0.173374 ],
			"coeffs_83" : [ 0.185912, 0.053609, -0.079492 ],
			"coeffs_84" : [ -0.177244, -0.202059, -0.076778 ],
			"coeffs_85" : [ 0.205646, 0.225396, 0.055504 ],
			"coeffs_86" : [ -0.242889, -0.061766, -0.101592 ],
			"coeffs_87" : [ -0.0255, 0.065094, -0.047723 ],
			"coeffs_88" : [ 0.085237, 0.191528, -0.051895 ],
			"coeffs_89" : [ 0.174439, 0.025712, 0.246608 ],
			"coeffs_90" : [ 0.182126, -0.158897, 0.116898 ],
			"coeffs_91" : [ 0.019788, -0.071656, 0.042588 ],
			"coeffs_92" : [ 0.154101, -0.139948, 0.21522 ],
			"coeffs_93" : [ -0.14178, -0.064583, -0.16969 ],
			"coeffs_94" : [ -0.194919, -0.192652, 0.00998 ],
			"coeffs_95" : [ 0.029845, -0.109208, -0.029706 ],
			"coeffs_96" : [ -0.166456, -0.048821, 0.121959 ],
			"coeffs_97" : [ -0.109451, -0.251207, -0.195048 ],
			"coeffs_98" : [ -0.199657, 0.208246, 0.178303 ],
			"coeffs_99" : [ 0.200075, 0.193312, 0.104381 ],
			"intercepts" : [ 0.151426, -0.094136, -0.12472 ],
			"name" : "Output_Layer"
		},
		"sizes" : [ 4, 100, 3 ]
	},
	"metadata" :  { "model" : "Rosenblatt_MLP", "signature" : "ff4_il8", "version" : "2024-W14" },
	"options" :  { "activation" : "relu", "alpha" : 0.0001, "batch_size" : null, "beta_1" : 0.9, "beta_2" : 0.999, "early_stopping" : 0, "epsilon" : 0.0, "hidden_layer_sizes" : [ 100 ], "learning_rate" : "constant", "learning_rate_init" : 0.001, "max_fun" : 15000, "max_iter" : 32, "momentum" : 0.9, "n_iter_no_change" : 10, "nesterovs_momentum" : 1, "power_t" : 0.5, "random_state" : 1789, "shuffle" : 1, "solver" : "adam", "tol" : 0.0001, "validation_fraction" : 0.1, "verbose" : 0, "warm_start" : 0 }
}
BEAUTIFIED_JSON_END
RELOADING_MODEL_FROM_JSON_END ('iris_sampled', 'MLPClassifier')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0.0952 0.4348 0.47  ]
 [0.1334 0.4691 0.3974]
 [0.0794 0.3785 0.5421]
 [0.0974 0.3567 0.546 ]
 [0.0775 0.3971 0.5254]
 [0.1686 0.4346 0.3968]
 [0.1666 0.4542 0.3792]
 [0.1428 0.4872 0.37  ]
 [0.3691 0.4754 0.1555]
 [0.3683 0.4595 0.1721]
 [0.3618 0.467  0.1712]
 [0.1538 0.4648 0.3814]
 [0.2236 0.4555 0.3209]
 [0.1657 0.4338 0.4005]
 [0.0874 0.4172 0.4954]
 [0.3762 0.4549 0.169 ]
 [0.1534 0.4487 0.3979]
 [0.381  0.4498 0.1693]]
(18, 3)
(18, 3) float32
MODEL_PERFS {'class_name': 'mllite.MLPClassifier', 'model_name': 'MLPClassifier', 'options': None, 'dataset': 'iris_sampled', 'size': 18, 'accuracy': 0.7222222222222222, 'auc': 0.8875000000000001}
WRITING_PERF_CODE 'logs/auto_tests/classification/MLPClassifier/mllite.MLPClassifier_iris_sampled.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.MLPClassifier', 'model_name': 'MLPClassifier', 'options': None, 'dataset': 'iris_sampled', 'training_time_in_sec': 0.011, 'prediction_time_in_sec': 0.0}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 0 4
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 2 4
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 3 4
{
   "Contributions" : {
      "X_0" : [ 0.000063, 0.000256, -0.000319 ],
      "X_1" : [ 0.000167, -0.000425, 0.000259 ],
      "X_2" : [ -0.002069, -0.001436, 0.003506 ],
      "X_3" : [ -0.000450, 0.000285, 0.000165 ]   
   },
   "Most_Contributive_Features_By_Class" : {
      "class_0" : [ 2, 3, 1, 0 ],
      "class_1" : [ 2, 1, 3, 0 ],
      "class_2" : [ 2, 0, 1, 3 ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/classification/MLPClassifier/mllite.MLPClassifier_iris_sampled_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/classification/MLPClassifier/mllite.MLPClassifier_iris_sampled_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('iris_sampled', 'MLPClassifier', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "iris_sampled" AS "ADS" 
 ),
"Input_Layer_BA" AS
 ( SELECT t."index" as "index",
    t."X_0" AS "OUT_0",
    t."X_1" AS "OUT_1",
    t."X_2" AS "OUT_2",
    t."X_3" AS "OUT_3"
 FROM "model_input" AS t
),
"Hidden_Layer_1_BA" AS
 ( SELECT t."index" as "index",
    -0.098329 + -0.000659 * t."OUT_0"  + 0.121147 * t."OUT_1"  + -0.086826 * t."OUT_2"  + 0.116799 * t."OUT_3" AS "OUT_0",
    0.021627 + 0.113077 * t."OUT_0"  + -0.181137 * t."OUT_1"  + -0.015338 * t."OUT_2"  + -0.222234 * t."OUT_3" AS "OUT_1",
    0.122204 + -0.098035 * t."OUT_0"  + -0.078942 * t."OUT_1"  + -0.196642 * t."OUT_2"  + -0.166419 * t."OUT_3" AS "OUT_2",
    0.218485 + -0.008064 * t."OUT_0"  + 0.133811 * t."OUT_1"  + 0.172386 * t."OUT_2"  + -0.044942 * t."OUT_3" AS "OUT_3",
    -0.101992 + 0.055435 * t."OUT_0"  + 0.166121 * t."OUT_1
SQL_OUT_PUT_FIRST_LINES_END ('iris_sampled', 'MLPClassifier', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('iris_sampled', 'MLPClassifier', 'duckdb')
roba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1", t."max_idx_2" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('iris_sampled', 'MLPClassifier', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 18 entries, 0 to 17
Data columns (total 4 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     18 non-null     float32
 1   X_1     18 non-null     float32
 2   X_2     18 non-null     float32
 3   X_3     18 non-null     float32
dtypes: float32(4)
memory usage: 432.0 bytes
       X_0  X_1  X_2  X_3
index                    
0      6.4  3.2  5.3  2.3
1      6.3  3.3  4.7  1.6
2      7.1  3.0  5.9  2.1
3      6.1  2.6  5.6  1.4
4      6.8  3.2  5.9  2.3
5      5.8  2.7  4.1  1.0
6      6.1  2.8  4.0  1.3
7      6.0  3.4  4.5  1.6
8      5.4  3.7  1.5  0.2
9      4.8  3.4  1.6  0.2
10     5.4  3.4  1.5  0.4
11     5.9  3.0  4.2  1.5
12     5.1  2.5  3.0  1.1
13     5.8  2.6  4.0  1.2
14     6.7  3.3  5.7  2.1
15     5.0  3.3  1.4  0.2
16     6.2  2.9  4.3  1.3
17     4.7  3.2  1.3  0.2
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 18 entries, 0 to 17
Data columns (total 12 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          18 non-null     int64  
 1   Score_0        18 non-null     float64
 2   Proba_0        18 non-null     float64
 3   LogProba_0     18 non-null     float64
 4   Score_1        18 non-null     float64
 5   Proba_1        18 non-null     float64
 6   LogProba_1     18 non-null     float64
 7   Score_2        18 non-null     float64
 8   Proba_2        18 non-null     float64
 9   LogProba_2     18 non-null     float64
 10  Decision       18 non-null     int64  
 11  DecisionProba  18 non-null     float64
dtypes: float64(10), int64(2)
memory usage: 1.8 KB
    index   Score_0   Proba_0  ...  LogProba_2  Decision  DecisionProba
0       0 -1.649027  0.095163  ...   -0.755033         2       0.469995
1       1 -1.282477  0.133444  ...   -0.922751         1       0.469132
2       2 -1.847976  0.079387  ...   -0.612308         2       0.542098
3       3 -1.552793  0.097354  ...   -0.605184         2       0.545974
4       4 -1.842220  0.077502  ...   -0.643546         2       0.525426
5       5 -1.034796  0.168566  ...   -0.924328         1       0.434636
6       6 -1.093674  0.166570  ...   -0.969607         1       0.454197
7       7 -1.183513  0.142838  ...   -0.994368         1       0.487205
8       8  0.105656  0.369057  ...   -1.860828         1       0.475399
9       9  0.096483  0.368348  ...   -1.759626         1       0.459543
10     10  0.015576  0.361835  ...   -1.765043         1       0.466986
11     11 -1.143490  0.153766  ...   -0.963875         1       0.464822
12     12 -0.729315  0.223609  ...   -1.136748         1       0.455530
13     13 -1.080297  0.165694  ...   -0.914979         1       0.433781
14     14 -1.712619  0.087353  ...   -0.702328         2       0.495431
15     15  0.105021  0.376165  ...   -1.777960         1       0.454852
16     16 -1.164961  0.153417  ...   -0.921508         1       0.448665
17     17  0.130235  0.380952  ...   -1.776097         1       0.449751

[18 rows x 12 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Decision',
       'DecisionProba'],
      dtype='object')
    index   Score_0  SQL_Proba_0  ...  Py_Proba_1  Py_Proba_2  Py_Decision
2       2 -1.847976     0.079387  ...    0.378512    0.542101            2
3       3 -1.552793     0.097354  ...    0.356671    0.545976            2
4       4 -1.842220     0.077502  ...    0.397070    0.525428            2
5       5 -1.034796     0.168566  ...    0.434635    0.396799            1
6       6 -1.093674     0.166570  ...    0.454196    0.379234            1
7       7 -1.183513     0.142838  ...    0.487203    0.369959            1
8       8  0.105656     0.369057  ...    0.475399    0.155545            1
9       9  0.096483     0.368348  ...    0.459543    0.172110            1
10     10  0.015576     0.361835  ...    0.466986    0.171180            1
11     11 -1.143490     0.153766  ...    0.464821    0.381414            1
12     12 -0.729315     0.223609  ...    0.455529    0.320862            1
13     13 -1.080297     0.165694  ...    0.433780    0.400527            1
14     14 -1.712619     0.087353  ...    0.417215    0.495433            2
15     15  0.105021     0.376165  ...    0.454853    0.168983            1
16     16 -1.164961     0.153417  ...    0.448663    0.397920            1
17     17  0.130235     0.380952  ...    0.449751    0.169298            1

[16 rows x 16 columns]
MLLITE_CLASS_SQL_ERROR ('iris_sampled', 'MLPClassifier', 'duckdb') ('Py_Proba_0', 'SQL_Proba_0') 6.13581777044366e-07
    Py_Proba_0  SQL_Proba_0   SQL_Error_0
2     0.079387     0.079387 -3.373376e-07
3     0.097353     0.097354 -3.598111e-07
4     0.077502     0.077502 -2.836049e-07
5     0.168566     0.168566 -4.860655e-07
6     0.166570     0.166570 -5.482743e-07
7     0.142838     0.142838 -4.303541e-07
8     0.369056     0.369057 -1.083785e-06
9     0.368347     0.368348 -1.064921e-06
10    0.361834     0.361835 -1.250504e-06
11    0.153766     0.153766 -4.250358e-07
12    0.223609     0.223609 -5.598849e-07
13    0.165693     0.165694 -4.743669e-07
14    0.087352     0.087353 -3.299143e-07
15    0.376164     0.376165 -1.149599e-06
16    0.153416     0.153417 -5.240101e-07
17    0.380951     0.380952 -9.380914e-07
MLLITE_CLASS_SQL_ERROR ('iris_sampled', 'MLPClassifier', 'duckdb') ('Py_Proba_1', 'SQL_Proba_1') 1.1088089620760034e-06
    Py_Proba_1  SQL_Proba_1   SQL_Error_1
2     0.378512     0.378514 -1.889727e-06
3     0.356671     0.356672 -1.502891e-06
4     0.397070     0.397072 -2.138507e-06
5     0.434635     0.434636 -1.005475e-06
6     0.454196     0.454197 -1.047749e-06
7     0.487203     0.487205 -1.331262e-06
8     0.475399     0.475399  2.673060e-07
9     0.459543     0.459543  3.691912e-07
10    0.466986     0.466986  4.471284e-07
11    0.464821     0.464822 -1.263706e-06
12    0.455529     0.455530 -5.159167e-07
13    0.433780     0.433781 -1.166750e-06
14    0.417215     0.417217 -1.849354e-06
15    0.454853     0.454852  3.808908e-07
16    0.448663     0.448665 -1.330997e-06
17    0.449751     0.449751  3.307787e-07
MLLITE_CLASS_SQL_ERROR ('iris_sampled', 'MLPClassifier', 'duckdb') ('Py_Proba_2', 'SQL_Proba_2') 1.5258109628099283e-06
    Py_Proba_2  SQL_Proba_2   SQL_Error_2
2     0.542101     0.542098  2.197262e-06
3     0.545976     0.545974  1.870153e-06
4     0.525428     0.525426  2.414661e-06
5     0.396799     0.396798  1.491541e-06
6     0.379234     0.379232  1.551320e-06
7     0.369959     0.369957  1.761616e-06
8     0.155545     0.155544  7.568740e-07
9     0.172110     0.172109  7.106313e-07
10    0.171180     0.171179  8.331776e-07
11    0.381414     0.381412  1.748346e-06
12    0.320862     0.320861  1.090703e-06
13    0.400527     0.400525  1.685821e-06
14    0.495433     0.495431  2.164367e-06
15    0.168983     0.168983  8.134117e-07
16    0.397920     0.397919  1.795403e-06
17    0.169298     0.169298  6.669173e-07
MLLITE_CLASS_SQL_EXECUTION_STATUS ('iris_sampled', 'MLPClassifier', 'duckdb', 'Success')
    Py_Decision  SQL_Decision
2             2             2
3             2             2
4             2             2
5             1             1
6             1             1
7             1             1
8             1             1
9             1             1
10            1             1
11            1             1
12            1             1
13            1             1
14            2             2
15            1             1
16            1             1
17            1             1
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/MLPClassifier/mllite.MLPClassifier_iris_sampled_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('iris_sampled', 'MLPClassifier', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "iris_sampled" AS "ADS" 
 ),
"Input_Layer_BA" AS
 ( SELECT t."index" as "index",
    t."X_0" AS "OUT_0",
    t."X_1" AS "OUT_1",
    t."X_2" AS "OUT_2",
    t."X_3" AS "OUT_3"
 FROM "model_input" AS t
),
"Hidden_Layer_1_BA" AS
 ( SELECT t."index" as "index",
    -0.098329 + -0.000659 * t."OUT_0"  + 0.121147 * t."OUT_1"  + -0.086826 * t."OUT_2"  + 0.116799 * t."OUT_3" AS "OUT_0",
    0.021627 + 0.113077 * t."OUT_0"  + -0.181137 * t."OUT_1"  + -0.015338 * t."OUT_2"  + -0.222234 * t."OUT_3" AS "OUT_1",
    0.122204 + -0.098035 * t."OUT_0"  + -0.078942 * t."OUT_1"  + -0.196642 * t."OUT_2"  + -0.166419 * t."OUT_3" AS "OUT_2",
    0.218485 + -0.008064 * t."OUT_0"  + 0.133811 * t."OUT_1"  + 0.172386 * t."OUT_2"  + -0.044942 * t."OUT_3" AS "OUT_3",
    -0.101992 + 0.055435 * t."OUT_0"  + 0.166121 * t."OUT_1
SQL_OUT_PUT_FIRST_LINES_END ('iris_sampled', 'MLPClassifier', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('iris_sampled', 'MLPClassifier', 'sqlite')
roba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1", t."max_idx_2" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('iris_sampled', 'MLPClassifier', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 18 entries, 0 to 17
Data columns (total 4 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     18 non-null     float32
 1   X_1     18 non-null     float32
 2   X_2     18 non-null     float32
 3   X_3     18 non-null     float32
dtypes: float32(4)
memory usage: 432.0 bytes
       X_0  X_1  X_2  X_3
index                    
0      6.4  3.2  5.3  2.3
1      6.3  3.3  4.7  1.6
2      7.1  3.0  5.9  2.1
3      6.1  2.6  5.6  1.4
4      6.8  3.2  5.9  2.3
5      5.8  2.7  4.1  1.0
6      6.1  2.8  4.0  1.3
7      6.0  3.4  4.5  1.6
8      5.4  3.7  1.5  0.2
9      4.8  3.4  1.6  0.2
10     5.4  3.4  1.5  0.4
11     5.9  3.0  4.2  1.5
12     5.1  2.5  3.0  1.1
13     5.8  2.6  4.0  1.2
14     6.7  3.3  5.7  2.1
15     5.0  3.3  1.4  0.2
16     6.2  2.9  4.3  1.3
17     4.7  3.2  1.3  0.2
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 18 entries, 0 to 17
Data columns (total 12 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          18 non-null     int64  
 1   Score_0        18 non-null     float64
 2   Proba_0        18 non-null     float64
 3   LogProba_0     18 non-null     float64
 4   Score_1        18 non-null     float64
 5   Proba_1        18 non-null     float64
 6   LogProba_1     18 non-null     float64
 7   Score_2        18 non-null     float64
 8   Proba_2        18 non-null     float64
 9   LogProba_2     18 non-null     float64
 10  Decision       18 non-null     int64  
 11  DecisionProba  18 non-null     float64
dtypes: float64(10), int64(2)
memory usage: 1.8 KB
    index   Score_0   Proba_0  ...  LogProba_2  Decision  DecisionProba
0       0 -1.649027  0.095163  ...   -0.755033         2       0.469995
1       1 -1.282477  0.133444  ...   -0.922751         1       0.469132
2       2 -1.847976  0.079387  ...   -0.612308         2       0.542098
3       3 -1.552793  0.097354  ...   -0.605184         2       0.545974
4       4 -1.842220  0.077502  ...   -0.643546         2       0.525426
5       5 -1.034796  0.168566  ...   -0.924328         1       0.434636
6       6 -1.093675  0.166570  ...   -0.969607         1       0.454198
7       7 -1.183513  0.142838  ...   -0.994368         1       0.487205
8       8  0.105656  0.369057  ...   -1.860827         1       0.475399
9       9  0.096483  0.368348  ...   -1.759626         1       0.459543
10     10  0.015576  0.361835  ...   -1.765043         1       0.466986
11     11 -1.143490  0.153766  ...   -0.963875         1       0.464822
12     12 -0.729315  0.223609  ...   -1.136748         1       0.455530
13     13 -1.080297  0.165694  ...   -0.914979         1       0.433781
14     14 -1.712619  0.087353  ...   -0.702327         2       0.495431
15     15  0.105021  0.376165  ...   -1.777959         1       0.454852
16     16 -1.164961  0.153417  ...   -0.921508         1       0.448665
17     17  0.130235  0.380952  ...   -1.776097         1       0.449751

[18 rows x 12 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Decision',
       'DecisionProba'],
      dtype='object')
    index   Score_0  SQL_Proba_0  ...  Py_Proba_1  Py_Proba_2  Py_Decision
2       2 -1.847976     0.079387  ...    0.378512    0.542101            2
3       3 -1.552793     0.097354  ...    0.356671    0.545976            2
4       4 -1.842220     0.077502  ...    0.397070    0.525428            2
5       5 -1.034796     0.168566  ...    0.434635    0.396799            1
6       6 -1.093675     0.166570  ...    0.454196    0.379234            1
7       7 -1.183513     0.142838  ...    0.487203    0.369959            1
8       8  0.105656     0.369057  ...    0.475399    0.155545            1
9       9  0.096483     0.368348  ...    0.459543    0.172110            1
10     10  0.015576     0.361835  ...    0.466986    0.171180            1
11     11 -1.143490     0.153766  ...    0.464821    0.381414            1
12     12 -0.729315     0.223609  ...    0.455529    0.320862            1
13     13 -1.080297     0.165694  ...    0.433780    0.400527            1
14     14 -1.712619     0.087353  ...    0.417215    0.495433            2
15     15  0.105021     0.376165  ...    0.454853    0.168983            1
16     16 -1.164961     0.153417  ...    0.448663    0.397920            1
17     17  0.130235     0.380952  ...    0.449751    0.169298            1

[16 rows x 16 columns]
MLLITE_CLASS_SQL_ERROR ('iris_sampled', 'MLPClassifier', 'sqlite') ('Py_Proba_0', 'SQL_Proba_0') 6.099527408709449e-07
    Py_Proba_0  SQL_Proba_0   SQL_Error_0
2     0.079387     0.079387 -3.252952e-07
3     0.097353     0.097354 -3.237909e-07
4     0.077502     0.077502 -2.714061e-07
5     0.168566     0.168566 -4.918472e-07
6     0.166570     0.166570 -4.913087e-07
7     0.142838     0.142838 -4.230769e-07
8     0.369056     0.369057 -1.104814e-06
9     0.368347     0.368348 -1.099491e-06
10    0.361834     0.361835 -1.206704e-06
11    0.153766     0.153766 -4.466116e-07
12    0.223609     0.223609 -5.383218e-07
13    0.165693     0.165694 -5.093300e-07
14    0.087352     0.087353 -3.143371e-07
15    0.376164     0.376165 -1.155834e-06
16    0.153416     0.153417 -5.494075e-07
17    0.380951     0.380952 -9.638733e-07
MLLITE_CLASS_SQL_ERROR ('iris_sampled', 'MLPClassifier', 'sqlite') ('Py_Proba_1', 'SQL_Proba_1') 1.09682399941481e-06
    Py_Proba_1  SQL_Proba_1   SQL_Error_1
2     0.378512     0.378514 -1.805957e-06
3     0.356671     0.356672 -1.466429e-06
4     0.397070     0.397072 -1.978299e-06
5     0.434635     0.434636 -1.023321e-06
6     0.454196     0.454198 -1.126170e-06
7     0.487203     0.487205 -1.334674e-06
8     0.475399     0.475399  3.186933e-07
9     0.459543     0.459543  4.133635e-07
10    0.466986     0.466986  4.146021e-07
11    0.464821     0.464822 -1.213709e-06
12    0.455529     0.455530 -5.439931e-07
13    0.433780     0.433781 -1.092007e-06
14    0.417215     0.417216 -1.787153e-06
15    0.454853     0.454852  4.566437e-07
16    0.448663     0.448665 -1.264316e-06
17    0.449751     0.449751  3.579847e-07
MLLITE_CLASS_SQL_ERROR ('iris_sampled', 'MLPClassifier', 'sqlite') ('Py_Proba_2', 'SQL_Proba_2') 1.4917533890564567e-06
    Py_Proba_2  SQL_Proba_2   SQL_Error_2
2     0.542101     0.542098  2.101450e-06
3     0.545976     0.545974  1.797670e-06
4     0.525428     0.525426  2.242255e-06
5     0.396799     0.396798  1.515168e-06
6     0.379234     0.379232  1.572775e-06
7     0.369959     0.369957  1.757751e-06
8     0.155545     0.155544  7.265165e-07
9     0.172110     0.172109  7.010283e-07
10    0.171180     0.171179  8.219037e-07
11    0.381414     0.381412  1.719925e-06
12    0.320862     0.320861  1.097216e-06
13    0.400527     0.400525  1.646041e-06
14    0.495433     0.495431  2.086589e-06
15    0.168983     0.168983  7.438940e-07
16    0.397920     0.397919  1.754119e-06
17    0.169298     0.169298  6.654933e-07
MLLITE_CLASS_SQL_EXECUTION_STATUS ('iris_sampled', 'MLPClassifier', 'sqlite', 'Success')
    Py_Decision  SQL_Decision
2             2             2
3             2             2
4             2             2
5             1             1
6             1             1
7             1             1
8             1             1
9             1             1
10            1             1
11            1             1
12            1             1
13            1             1
14            2             2
15            1             1
16            1             1
17            1             1
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
