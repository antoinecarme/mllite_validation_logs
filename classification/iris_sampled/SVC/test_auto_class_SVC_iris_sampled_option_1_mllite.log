    sepal length (cm)  sepal width (cm)  ...  petal width (cm)  target
0                 6.4               3.2  ...               2.3       2
1                 6.3               3.3  ...               1.6       1
2                 7.1               3.0  ...               2.1       2
3                 6.1               2.6  ...               1.4       2
4                 6.8               3.2  ...               2.3       2
5                 5.8               2.7  ...               1.0       1
6                 6.1               2.8  ...               1.3       1
7                 6.0               3.4  ...               1.6       1
8                 5.4               3.7  ...               0.2       0
9                 4.8               3.4  ...               0.2       0
10                5.4               3.4  ...               0.4       0
11                5.9               3.0  ...               1.5       1
12                5.1               2.5  ...               1.1       1
13                5.8               2.6  ...               1.2       1
14                6.7               3.3  ...               2.1       2
15                5.0               3.3  ...               0.2       0
16                6.2               2.9  ...               1.3       1
17                4.7               3.2  ...               0.2       0

[18 rows x 5 columns]
MLLITE_MODEL_SET_OPTIONS SVC {"C" : 2}
MLLITE_MODEL_OPTIONS_DEFAULT SVC { "max_iter" : 128 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING SVC { "C" : 2,  "max_iter" : 128  }
MLLITE_MODEL_JSON_AFTER_SETTING SVC None
('OPERATION_START', 'TRAINING')
[[6.4 3.2 5.3 2.3]
 [6.3 3.3 4.7 1.6]
 [7.1 3.  5.9 2.1]
 [6.1 2.6 5.6 1.4]
 [6.8 3.2 5.9 2.3]] [2 1 2 2 2]
MLLITE_FIT_USING_MODEL mllite_svm_class.SVC_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_CLASSIFIER_FIT' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_CLASSIFIER_FIT' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_CLASSIFIER_FIT' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_CLASSIFIER_FIT' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 1 3
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 2 3
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_SUB_PROBLEM' 3 3
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_TRAIN_CLASS_PROBA_CROSS_VALIDATION' 5 5
PROGRESS_REPORT_ELAPSED_TOTAL 'SVM_CLASSIFIER_FIT' 5 5
('OPERATION_END_ELAPSED', 0.011, 'TRAINING')
{ "C" : 2,  "max_iter" : 128  }
{ "C" : 2,  "max_iter" : 128  }
{
	"metadata" : { "model" : "Vapnik_SVC_RBF", "version" : "2024-W12", "signature" : "ff4_il8"},
	"options" : {"svm_type" : "c_svc", "kernel" : "rbf", "degree" : 3, "gamma" : 0.067644, "coef0" : 0.000000, "cache_size" : 300, "tol" : 0.001000, "nu" : 0.500000, "epsilon" : 0.000000, "shrinking" : 0, "probability" : 1, "C" : 2.000000, "max_iter" : 128, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 18, "dataset_features" : 4 },
	"classes" : [ 0, 1, 2 ],
	"svm_model" : {
	"classes" : 3,
	"L" : 13,
	"SupportVectors" : {
		"SV_00" : [ 4.800000, 3.400000, 1.600000, 0.200000 ],
		"SV_01" : [ 5.400000, 3.400000, 1.500000, 0.400000 ],
		"SV_02" : [ 6.300000, 3.300000, 4.700000, 1.600000 ],
		"SV_03" : [ 5.800000, 2.700000, 4.100000, 1.000000 ],
		"SV_04" : [ 6.100000, 2.800000, 4.000000, 1.300000 ],
		"SV_05" : [ 6.000000, 3.400000, 4.500000, 1.600000 ],
		"SV_06" : [ 5.900000, 3.000000, 4.200000, 1.500000 ],
		"SV_07" : [ 5.100000, 2.500000, 3.000000, 1.100000 ],
		"SV_08" : [ 6.200000, 2.900000, 4.300000, 1.300000 ],
		"SV_09" : [ 6.400000, 3.200000, 5.300000, 2.300000 ],
		"SV_10" : [ 6.100000, 2.600000, 5.600000, 1.400000 ],
		"SV_11" : [ 6.800000, 3.200000, 5.900000, 2.300000 ],
		"SV_12" : [ 6.700000, 3.300000, 5.700000, 2.100000 ]
	},
	"SupportVectorsCoefs" : {
		"SV_coef_0" : [ 1.170876, 2.000000, -0.000000, -0.397518, -0.773358, -0.000000, -0.000000, -2.000000, -0.000000, -0.678509, -0.746916, -0.000000, -0.000000 ],
		"SV_coef_1" : [ 0.141281, 1.284144, 2.000000, 0.000000, 0.000000, 2.000000, 0.684211, 0.000000, 2.000000, -2.000000, -2.000000, -0.684211, -2.000000 ]
	},
	"rho" : [ -0.090057, 0.027411, -0.001722 ],
	"nSV" : [ 2, 7, 4 ],
	"probA" : [ -1.978797, -1.777841, -2.266994 ],
	"probB" : [ 0.322553, 0.009580, 0.109777 ],
	"n_iter" : [ 8, 7, 4 ]
}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/SVC/mllite.SVC_iris_sampled_option_1.json'

MLLITE_MODEL_SET_OPTIONS SVC {"C" : 2}
MLLITE_MODEL_OPTIONS_DEFAULT SVC { "max_iter" : 128 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING SVC { "C" : 2,  "max_iter" : 128  }
MLLITE_MODEL_JSON_AFTER_SETTING SVC None
MLLITE_RELOADING_MODEL mllite_svm_class.SVC_ff4_il8
{
	"metadata" : { "model" : "Vapnik_SVC_RBF", "version" : "2024-W12", "signature" : "ff4_il8"},
	"options" : {"svm_type" : "c_svc", "kernel" : "rbf", "degree" : 3, "gamma" : 0.067644, "coef0" : 0.000000, "cache_size" : 300, "tol" : 0.001000, "nu" : 0.500000, "epsilon" : 0.000000, "shrinking" : 0, "probability" : 1, "C" : 2.000000, "max_iter" : 128, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 18, "dataset_features" : 4 },
	"classes" : [ 0, 1, 2 ],
	"svm_model" : {
	"classes" : 3,
	"L" : 13,
	"SupportVectors" : {
		"SV_00" : [ 4.800000, 3.400000, 1.600000, 0.200000 ],
		"SV_01" : [ 5.400000, 3.400000, 1.500000, 0.400000 ],
		"SV_02" : [ 6.300000, 3.300000, 4.700000, 1.600000 ],
		"SV_03" : [ 5.800000, 2.700000, 4.100000, 1.000000 ],
		"SV_04" : [ 6.100000, 2.800000, 4.000000, 1.300000 ],
		"SV_05" : [ 6.000000, 3.400000, 4.500000, 1.600000 ],
		"SV_06" : [ 5.900000, 3.000000, 4.200000, 1.500000 ],
		"SV_07" : [ 5.100000, 2.500000, 3.000000, 1.100000 ],
		"SV_08" : [ 6.200000, 2.900000, 4.300000, 1.300000 ],
		"SV_09" : [ 6.400000, 3.200000, 5.300000, 2.300000 ],
		"SV_10" : [ 6.100000, 2.600000, 5.600000, 1.400000 ],
		"SV_11" : [ 6.800000, 3.200000, 5.900000, 2.300000 ],
		"SV_12" : [ 6.700000, 3.300000, 5.700000, 2.100000 ]
	},
	"SupportVectorsCoefs" : {
		"SV_coef_0" : [ 1.170876, 2.000000, -0.000000, -0.397518, -0.773358, -0.000000, -0.000000, -2.000000, -0.000000, -0.678509, -0.746916, -0.000000, -0.000000 ],
		"SV_coef_1" : [ 0.141281, 1.284144, 2.000000, 0.000000, 0.000000, 2.000000, 0.684211, 0.000000, 2.000000, -2.000000, -2.000000, -0.684211, -2.000000 ]
	},
	"rho" : [ -0.090057, 0.027411, -0.001722 ],
	"nSV" : [ 2, 7, 4 ],
	"probA" : [ -1.978797, -1.777841, -2.266994 ],
	"probB" : [ 0.322553, 0.009580, 0.109777 ],
	"n_iter" : [ 8, 7, 4 ]
}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1, 2 ],
	"dataset" : 	{
		"dataset_features" : 4,
		"dataset_rows" : 18
	},
	"metadata" :  { "model" : "Vapnik_SVC_RBF", "signature" : "ff4_il8", "version" : "2024-W12" },
	"options" :  { "C" : 2.0, "cache_size" : 300, "coef0" : 0.0, "degree" : 3, "epsilon" : 0.0, "gamma" : 0.067644, "kernel" : "rbf", "max_iter" : 128, "nu" : 0.5, "probability" : 1, "random_state" : 1789, "shrinking" : 0, "svm_type" : "c_svc", "tol" : 0.001 },
	"svm_model" : 	{
		"L" : 13,
		"SupportVectors" : 	{
			"SV_00" : [ 4.8, 3.4, 1.6, 0.2 ],
			"SV_01" : [ 5.4, 3.4, 1.5, 0.4 ],
			"SV_02" : [ 6.3, 3.3, 4.7, 1.6 ],
			"SV_03" : [ 5.8, 2.7, 4.1, 1.0 ],
			"SV_04" : [ 6.1, 2.8, 4.0, 1.3 ],
			"SV_05" : [ 6.0, 3.4, 4.5, 1.6 ],
			"SV_06" : [ 5.9, 3.0, 4.2, 1.5 ],
			"SV_07" : [ 5.1, 2.5, 3.0, 1.1 ],
			"SV_08" : [ 6.2, 2.9, 4.3, 1.3 ],
			"SV_09" : [ 6.4, 3.2, 5.3, 2.3 ],
			"SV_10" : [ 6.1, 2.6, 5.6, 1.4 ],
			"SV_11" : [ 6.8, 3.2, 5.9, 2.3 ],
			"SV_12" : [ 6.7, 3.3, 5.7, 2.1 ]
		},
		"SupportVectorsCoefs" : 	{
			"SV_coef_0" : [ 1.170876, 2.0, -0.0, -0.397518, -0.773358, -0.0, -0.0, -2.0, -0.0, -0.678509, -0.746916, -0.0, -0.0 ],
			"SV_coef_1" : [ 0.141281, 1.284144, 2.0, 0.0, 0.0, 2.0, 0.684211, 0.0, 2.0, -2.0, -2.0, -0.684211, -2.0 ]
		},
		"classes" : 3,
		"nSV" : [ 2, 7, 4 ],
		"n_iter" : [ 8, 7, 4 ],
		"probA" : [ -1.978797, -1.777841, -2.266994 ],
		"probB" : [ 0.322553, 0.00958, 0.109777 ],
		"rho" : [ -0.090057, 0.027411, -0.001722 ]
	}
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0.0659 0.2544 0.6798]
 [0.0485 0.9417 0.0098]
 [0.068  0.0901 0.8419]
 [0.0608 0.2949 0.6443]
 [0.0667 0.0902 0.8431]
 [0.1817 0.0651 0.7532]
 [0.1751 0.0608 0.7642]
 [0.131  0.0363 0.8328]
 [0.     0.     1.    ]
 [0.     0.     1.    ]
 [0.     0.     1.    ]
 [0.1546 0.0487 0.7967]
 [0.4719 0.2978 0.2302]
 [0.1823 0.0657 0.7519]
 [0.0666 0.1431 0.7903]
 [0.     0.     1.    ]
 [0.1453 0.0436 0.8111]
 [0.     0.     1.    ]]
(18, 3)
(18, 3) float32
MODEL_PERFS {'class_name': 'mllite.SVC', 'model_name': 'SVC', 'options': '{"C" : 2}', 'dataset': 'iris_sampled', 'size': 18, 'accuracy': 1.0, 'auc': 0.3365384615384615}
WRITING_PERF_CODE 'logs/auto_tests/classification/SVC/mllite.SVC_iris_sampled_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.SVC', 'model_name': 'SVC', 'options': '{"C" : 2}', 'dataset': 'iris_sampled', 'training_time_in_sec': 0.011, 'prediction_time_in_sec': 0.0}
WRITING_SQL_CODE 'logs/auto_tests/classification/SVC/mllite.SVC_iris_sampled_option_1.sql'



SQL_OUT_PUT_FIRST_LINES_START
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 )
,
"SV_data" AS
 ( SELECT 
   "Values".sv_idx AS sv_idx,
   CAST("Values".sv_0 AS FLOAT) sv_0,
   CAST("Values".sv_1 AS FLOAT) sv_1,
   CAST("Values".sv_2 AS FLOAT) sv_2,
   CAST("Values".sv_3 AS FLOAT) sv_3
  FROM
  (
     SELECT 0 AS sv_idx, 4.800000 AS sv_0, 3.400000 AS sv_1, 1.600000 AS sv_2, 0.200000 AS sv_3
     UNION ALL
     SELECT 1 AS sv_idx, 5.400000 AS sv_0, 3.400000 AS sv_1, 1.500000 AS sv_2, 0.400000 AS sv_3
     UNION ALL
     SELECT 2 AS sv_idx, 6.300000 AS sv_0, 3.300000 AS sv_1, 4.700000 AS sv_2, 1.600000 AS sv_3
     UNION ALL
     SELECT 3 AS sv_idx, 5.800000 AS sv_0, 2.700000 AS sv_1, 4.100000 AS sv_2, 1.000000 AS sv_3
     UNION ALL
     SELECT 4 AS sv_idx, 6.100000 AS sv_0, 2.800000 AS sv_1, 4.000000 AS sv_2, 1.300000 AS sv_3
     UNION ALL
   
SQL_OUT_PUT_FIRST_LINES_END
SQL_OUT_PUT_LAST_LINES_START
x_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."arg_max_Score" AS "Decision",
  CASE
   WHEN (arg_max_cte."arg_max_Score" = 0) THEN arg_max_cte."Proba_0"
   WHEN (arg_max_cte."arg_max_Score" = 1) THEN arg_max_cte."Proba_1"
   WHEN (arg_max_cte."arg_max_Score" = 2) THEN arg_max_cte."Proba_2"
 END AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END




COPY_TRAINING_DATA_TO_SQLITE_START
    X_0  X_1  X_2  X_3  KEY
0   6.4  3.2  5.3  2.3    0
1   6.3  3.3  4.7  1.6    1
2   7.1  3.0  5.9  2.1    2
3   6.1  2.6  5.6  1.4    3
4   6.8  3.2  5.9  2.3    4
5   5.8  2.7  4.1  1.0    5
6   6.1  2.8  4.0  1.3    6
7   6.0  3.4  4.5  1.6    7
8   5.4  3.7  1.5  0.2    8
9   4.8  3.4  1.6  0.2    9
10  5.4  3.4  1.5  0.4   10
11  5.9  3.0  4.2  1.5   11
12  5.1  2.5  3.0  1.1   12
13  5.8  2.6  4.0  1.2   13
14  6.7  3.3  5.7  2.1   14
15  5.0  3.3  1.4  0.2   15
16  6.2  2.9  4.3  1.3   16
17  4.7  3.2  1.3  0.2   17
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
    index  Score_0 Proba_0  ... LogProba_2  Decision DecisionProba
0       0        2    None  ...       None         0          None
1       1        2    None  ...       None         0          None
2       2        2    None  ...       None         0          None
3       3        2    None  ...       None         0          None
4       4        2    None  ...       None         0          None
5       5        2    None  ...       None         0          None
6       6        2    None  ...       None         0          None
7       7        2    None  ...       None         0          None
8       8        2    None  ...       None         0          None
9       9        2    None  ...       None         0          None
10     10        2    None  ...       None         0          None
11     11        2    None  ...       None         0          None
12     12        2    None  ...       None         0          None
13     13        2    None  ...       None         0          None
14     14        2    None  ...       None         0          None
15     15        2    None  ...       None         0          None
16     16        2    None  ...       None         0          None
17     17        2    None  ...       None         0          None

[18 rows x 12 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Decision',
       'DecisionProba'],
      dtype='object')
    index  Score_0 SQL_Proba_0  ...    Py_Proba_1  Py_Proba_2 Py_Decision
2       2        2        None  ...  9.012848e-02    0.841882           2
3       3        2        None  ...  2.949328e-01    0.644270           2
4       4        2        None  ...  9.017803e-02    0.843111           2
5       5        2        None  ...  6.510155e-02    0.753155           1
6       6        2        None  ...  6.078287e-02    0.764155           1
7       7        2        None  ...  3.627620e-02    0.832770           1
8       8        2        None  ...  2.930234e-14    1.000000           0
9       9        2        None  ...  2.930234e-14    1.000000           0
10     10        2        None  ...  2.930234e-14    1.000000           0
11     11        2        None  ...  4.873189e-02    0.796703           1
12     12        2        None  ...  2.978400e-01    0.230232           1
13     13        2        None  ...  6.572415e-02    0.751949           1
14     14        2        None  ...  1.431309e-01    0.790284           2
15     15        2        None  ...  2.930234e-14    1.000000           0
16     16        2        None  ...  4.361653e-02    0.811094           1
17     17        2        None  ...  2.930234e-14    1.000000           0

[16 rows x 16 columns]
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
