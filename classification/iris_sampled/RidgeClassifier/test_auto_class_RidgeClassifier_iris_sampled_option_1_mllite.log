    sepal length (cm)  sepal width (cm)  ...  petal width (cm)  target
0                 6.4               3.2  ...               2.3       2
1                 6.3               3.3  ...               1.6       1
2                 7.1               3.0  ...               2.1       2
3                 6.1               2.6  ...               1.4       2
4                 6.8               3.2  ...               2.3       2
5                 5.8               2.7  ...               1.0       1
6                 6.1               2.8  ...               1.3       1
7                 6.0               3.4  ...               1.6       1
8                 5.4               3.7  ...               0.2       0
9                 4.8               3.4  ...               0.2       0
10                5.4               3.4  ...               0.4       0
11                5.9               3.0  ...               1.5       1
12                5.1               2.5  ...               1.1       1
13                5.8               2.6  ...               1.2       1
14                6.7               3.3  ...               2.1       2
15                5.0               3.3  ...               0.2       0
16                6.2               2.9  ...               1.3       1
17                4.7               3.2  ...               0.2       0

[18 rows x 5 columns]
MLLITE_MODEL_SET_OPTIONS RidgeClassifier {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { "alpha" : 0.0000001,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
('OPERATION_START', 'TRAINING')
[[6.4 3.2 5.3 2.3]
 [6.3 3.3 4.7 1.6]
 [7.1 3.  5.9 2.1]
 [6.1 2.6 5.6 1.4]
 [6.8 3.2 5.9 2.3]] [2 1 2 2 2]
MLLITE_FIT_USING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 1 5
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 2 5
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 3 5
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 4 5
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 5 5
('OPERATION_END_ELAPSED', 0.012, 'TRAINING')
{ "alpha" : 0.0000001,   }
{ "alpha" : 0.0000001,   }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_il8"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 18, "dataset_features" : 4 },
	"classes" : [ 0, 1, 2 ],
	"equations" : {
		"class_0" : {
			"intercept" : -2.674155,
			"coeffs" : [ 0.137207, 0.975062, -0.224788, -0.594189 ]
		},
		"class_1" : {
			"intercept" : 5.289789,
			"coeffs" : [ -0.012821, -1.650562, -0.224487, 0.505509 ]
		},
		"class_2" : {
			"intercept" : -3.615628,
			"coeffs" : [ -0.124389, 0.675502, 0.449278, 0.088676 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_iris_sampled_option_1.json'

MLLITE_MODEL_SET_OPTIONS RidgeClassifier {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { "alpha" : 0.0000001,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
MLLITE_RELOADING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_il8"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 18, "dataset_features" : 4 },
	"classes" : [ 0, 1, 2 ],
	"equations" : {
		"class_0" : {
			"intercept" : -2.674155,
			"coeffs" : [ 0.137207, 0.975062, -0.224788, -0.594189 ]
		},
		"class_1" : {
			"intercept" : 5.289789,
			"coeffs" : [ -0.012821, -1.650562, -0.224487, 0.505509 ]
		},
		"class_2" : {
			"intercept" : -3.615628,
			"coeffs" : [ -0.124389, 0.675502, 0.449278, 0.088676 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1, 2 ],
	"dataset" : 	{
		"dataset_features" : 4,
		"dataset_rows" : 18
	},
	"equations" : 	{
		"class_0" : 	{
			"coeffs" : [ 0.137207, 0.975062, -0.224788, -0.594189 ],
			"intercept" : -2.674155
		},
		"class_1" : 	{
			"coeffs" : [ -0.012821, -1.650562, -0.224487, 0.505509 ],
			"intercept" : 5.289789
		},
		"class_2" : 	{
			"coeffs" : [ -0.124389, 0.675502, 0.449278, 0.088676 ],
			"intercept" : -3.615628
		}
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_il8", "version" : "2024-W12" },
	"options" :  { "alpha" : 0.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0.1123 0.3486 0.5391]
 [0.2438 0.2736 0.4826]
 [0.0967 0.3667 0.5366]
 [0.0913 0.5327 0.3759]
 [0.0961 0.281  0.6228]
 [0.1917 0.5791 0.2293]
 [0.188  0.5806 0.2314]
 [0.269  0.2428 0.4883]
 [0.8368 0.0806 0.0827]
 [0.7316 0.1694 0.099 ]
 [0.7207 0.19   0.0893]
 [0.2021 0.474  0.3239]
 [0.1233 0.7807 0.0959]
 [0.1386 0.6783 0.1831]
 [0.129  0.2363 0.6347]
 [0.7103 0.2075 0.0821]
 [0.2098 0.4911 0.299 ]
 [0.6588 0.2618 0.0793]]
(18, 3)
(18, 3) float32
MODEL_PERFS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': '{"alpha" : 0.0000001}', 'dataset': 'iris_sampled', 'size': 18, 'accuracy': 0.8333333333333334, 'auc': 0.9439102564102564}
WRITING_PERF_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_iris_sampled_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': '{"alpha" : 0.0000001}', 'dataset': 'iris_sampled', 'training_time_in_sec': 0.012, 'prediction_time_in_sec': 0.0}
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_iris_sampled_option_1.sql'



SQL_OUT_PUT_FIRST_LINES_START
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT model_input."index" AS "index",
   -2.674155 + 0.137207 * X_0 + 0.975062 * X_1 + -0.224788 * X_2 + -0.594189 * X_3 AS "Score_0", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "LogProba_0",
   5.289789 + -0.012821 * X_0 + -1.650562 * X_1 + -0.224487 * X_2 + 0.505509 * X_3 AS "Score_1", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "LogProba_1",
   -3.615628 + -0.124389 * X_0 + 0.675502 * X_1 + 0.449278 * X_2 + 0.088676 * X_3 AS "Score_2", CAST(NULL AS FLOAT) AS "Proba_2", CAST(NULL AS FLOAT) AS "LogProba_2"
  FROM model_input
 )
,
soft_max_orig_cte AS 
 (SELECT t."index" AS "index", 
   t."Score_0" AS "Score_0",
   t."Proba_0" AS "Proba_0",
   t."LogProba_0" AS "LogProba_0",
   t."Score_1" AS "Score_1",
   t."Proba
SQL_OUT_PUT_FIRST_LINES_END
SQL_OUT_PUT_LAST_LINES_START
x_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."arg_max_Score" AS "Decision",
  CASE
   WHEN (arg_max_cte."arg_max_Score" = 0) THEN arg_max_cte."Proba_0"
   WHEN (arg_max_cte."arg_max_Score" = 1) THEN arg_max_cte."Proba_1"
   WHEN (arg_max_cte."arg_max_Score" = 2) THEN arg_max_cte."Proba_2"
 END AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END




COPY_TRAINING_DATA_TO_SQLITE_START
    X_0  X_1  X_2  X_3  KEY
0   6.4  3.2  5.3  2.3    0
1   6.3  3.3  4.7  1.6    1
2   7.1  3.0  5.9  2.1    2
3   6.1  2.6  5.6  1.4    3
4   6.8  3.2  5.9  2.3    4
5   5.8  2.7  4.1  1.0    5
6   6.1  2.8  4.0  1.3    6
7   6.0  3.4  4.5  1.6    7
8   5.4  3.7  1.5  0.2    8
9   4.8  3.4  1.6  0.2    9
10  5.4  3.4  1.5  0.4   10
11  5.9  3.0  4.2  1.5   11
12  5.1  2.5  3.0  1.1   12
13  5.8  2.6  4.0  1.2   13
14  6.7  3.3  5.7  2.1   14
15  5.0  3.3  1.4  0.2   15
16  6.2  2.9  4.3  1.3   16
17  4.7  3.2  1.3  0.2   17
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
    index   Score_0   Proba_0  ...  LogProba_2  Decision  DecisionProba
0       0 -1.233843  0.112295  ...   -0.617764         2       0.539149
1       1 -0.599252  0.243838  ...   -0.728633         2       0.482568
2       2 -1.348845  0.096703  ...   -0.622588         2       0.536554
3       3 -1.392709  0.091344  ...   -0.978407         1       0.532747
4       4 -1.313833  0.096124  ...   -0.473460         2       0.622843
5       5 -0.761507  0.191687  ...   -1.472897         1       0.579053
6       6 -0.778616  0.187963  ...   -1.463498         1       0.580612
7       7 -0.497951  0.268959  ...   -0.716869         2       0.488279
8       8  1.218472  0.836782  ...   -2.492983         0       0.836782
9       9  0.821151  0.731622  ...   -2.313050         0       0.731622
10     10  0.807116  0.720681  ...   -2.415909         0       0.720681
11     11 -0.774841  0.202065  ...   -1.127360         1       0.474048
12     12 -0.864716  0.123335  ...   -2.344011         1       0.780722
13     13 -0.955372  0.138608  ...   -1.697990         1       0.678341
14     14 -1.066252  0.128989  ...   -0.454550         2       0.634734
15     15  0.796044  0.710346  ...   -2.499738         0       0.710346
16     16 -0.734826  0.209845  ...   -1.207268         1       0.491142
17     17  0.679854  0.658844  ...   -2.533977         0       0.658844

[18 rows x 12 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Decision',
       'DecisionProba'],
      dtype='object')
    index   Score_0  SQL_Proba_0  ...  Py_Proba_1  Py_Proba_2  Py_Decision
2       2 -1.348845     0.096703  ...    0.366743    0.536554            2
3       3 -1.392709     0.091344  ...    0.532747    0.375909            1
4       4 -1.313833     0.096124  ...    0.281034    0.622844            2
5       5 -0.761507     0.191687  ...    0.579054    0.229260            1
6       6 -0.778616     0.187963  ...    0.580613    0.231425            1
7       7 -0.497951     0.268959  ...    0.242763    0.488279            2
8       8  1.218472     0.836782  ...    0.080555    0.082663            0
9       9  0.821151     0.731622  ...    0.169419    0.098959            0
10     10  0.807116     0.720681  ...    0.190034    0.089286            0
11     11 -0.774841     0.202065  ...    0.474049    0.323887            1
12     12 -0.864716     0.123335  ...    0.780723    0.095942            1
13     13 -0.955372     0.138608  ...    0.678342    0.183051            1
14     14 -1.066252     0.128989  ...    0.236278    0.634734            2
15     15  0.796044     0.710346  ...    0.207548    0.082107            0
16     16 -0.734826     0.209845  ...    0.491143    0.299013            1
17     17  0.679854     0.658844  ...    0.261814    0.079343            0

[16 rows x 16 columns]
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
