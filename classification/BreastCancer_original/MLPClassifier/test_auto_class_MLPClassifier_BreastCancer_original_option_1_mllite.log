READING_CSV BreastCancer_original ['data/original/BreastCancer.csv']
     mean radius  mean texture  ...  worst fractal dimension  target
0          17.99         10.38  ...                  0.11890       0
1          20.57         17.77  ...                  0.08902       0
2          19.69         21.25  ...                  0.08758       0
3          11.42         20.38  ...                  0.17300       0
4          20.29         14.34  ...                  0.07678       0
..           ...           ...  ...                      ...     ...
564        21.56         22.39  ...                  0.07115       0
565        20.13         28.25  ...                  0.06637       0
566        16.60         28.08  ...                  0.07820       0
567        20.60         29.33  ...                  0.12400       0
568         7.76         24.54  ...                  0.07039       1

[569 rows x 31 columns]
MLLITE_MODEL_SET_OPTIONS MLPClassifier {"hidden_layer_sizes" : [4, 8, 6]}
MLLITE_MODEL_OPTIONS_DEFAULT MLPClassifier { "max_iter" : 32}
MLLITE_MODEL_OPTIONS_AFTER_SETTING MLPClassifier { "hidden_layer_sizes" : [4, 8, 6],  "max_iter" : 32 }
MLLITE_MODEL_JSON_AFTER_SETTING MLPClassifier None
('OPERATION_START', 'TRAINING')
[[1.799e+01 1.038e+01 1.228e+02 1.001e+03 1.184e-01 2.776e-01 3.001e-01
  1.471e-01 2.419e-01 7.871e-02 1.095e+00 9.053e-01 8.589e+00 1.534e+02
  6.399e-03 4.904e-02 5.373e-02 1.587e-02 3.003e-02 6.193e-03 2.538e+01
  1.733e+01 1.846e+02 2.019e+03 1.622e-01 6.656e-01 7.119e-01 2.654e-01
  4.601e-01 1.189e-01]
 [2.057e+01 1.777e+01 1.329e+02 1.326e+03 8.474e-02 7.864e-02 8.690e-02
  7.017e-02 1.812e-01 5.667e-02 5.435e-01 7.339e-01 3.398e+00 7.408e+01
  5.225e-03 1.308e-02 1.860e-02 1.340e-02 1.389e-02 3.532e-03 2.499e+01
  2.341e+01 1.588e+02 1.956e+03 1.238e-01 1.866e-01 2.416e-01 1.860e-01
  2.750e-01 8.902e-02]
 [1.969e+01 2.125e+01 1.300e+02 1.203e+03 1.096e-01 1.599e-01 1.974e-01
  1.279e-01 2.069e-01 5.999e-02 7.456e-01 7.869e-01 4.585e+00 9.403e+01
  6.150e-03 4.006e-02 3.832e-02 2.058e-02 2.250e-02 4.571e-03 2.357e+01
  2.553e+01 1.525e+02 1.709e+03 1.444e-01 4.245e-01 4.504e-01 2.430e-01
  3.613e-01 8.758e-02]
 [1.142e+01 2.038e+01 7.758e+01 3.861e+02 1.425e-01 2.839e-01 2.414e-01
  1.052e-01 2.597e-01 9.744e-02 4.956e-01 1.156e+00 3.445e+00 2.723e+01
  9.110e-03 7.458e-02 5.661e-02 1.867e-02 5.963e-02 9.208e-03 1.491e+01
  2.650e+01 9.887e+01 5.677e+02 2.098e-01 8.663e-01 6.869e-01 2.575e-01
  6.638e-01 1.730e-01]
 [2.029e+01 1.434e+01 1.351e+02 1.297e+03 1.003e-01 1.328e-01 1.980e-01
  1.043e-01 1.809e-01 5.883e-02 7.572e-01 7.813e-01 5.438e+00 9.444e+01
  1.149e-02 2.461e-02 5.688e-02 1.885e-02 1.756e-02 5.115e-03 2.254e+01
  1.667e+01 1.522e+02 1.575e+03 1.374e-01 2.050e-01 4.000e-01 1.625e-01
  2.364e-01 7.678e-02]] [0 0 0 0 0]
MLLITE_FIT_USING_MODEL mllite_mlp_class.MLPClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT' 1 3
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT' 2 3
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 3 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 6 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 9 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 12 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 15 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 18 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 21 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 24 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 27 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 30 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 32 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT' 3 3
('OPERATION_END_ELAPSED', 0.052, 'TRAINING')
{ "hidden_layer_sizes" : [4, 8, 6],  "max_iter" : 32 }
{ "hidden_layer_sizes" : [4, 8, 6],  "max_iter" : 32 }
{
	"metadata" : { "model" : "Rosenblatt_MLP", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : {  "hidden_layer_sizes" : [ 4, 8, 6 ], "activation" : "relu", "solver" : "adam", "alpha" : 0.000100, "batch_size" : null, "learning_rate" : "constant", "learning_rate_init" : 0.001000, "power_t" : 0.500000, "max_iter" : 32, "shuffle" : 1, "random_state" : 1789, "tol" : 0.000100, "verbose" : 0, "warm_start" : 0, "momentum" : 0.900000, "nesterovs_momentum" : 1, "early_stopping" : 0, "validation_fraction" : 0.100000, "beta_1" : 0.900000, "beta_2" : 0.999000, "epsilon" : 0.000000, "n_iter_no_change" : 10, "max_fun" : 15000 },
	"dataset" : { "dataset_rows" : 569, "dataset_features" : 30 },
	"classes" : [ 0, 1 ],
	"layers" : {
		"sizes" : [ 30, 4, 8, 6, 1 ],
		"Layer_0" : {
			"name" : "Input_Layer",
			"NbInputs" : 0,
			"NbOutputs" : 30 
		},
		"Layer_1" : {
			"name" : "Hidden_Layer_1",
			"NbInputs" : 30,
			"NbOutputs" : 4 ,
			"coeffs_00" : [ -0.062877, 0.217923, -0.171459, -0.030922 ],
			"coeffs_01" : [ 0.049613, -0.294738, 0.121763, 0.013379 ],
			"coeffs_02" : [ 0.331685, 0.089131, 0.349281, -0.065839 ],
			"coeffs_03" : [ 0.392772, -0.371462, -0.175984, 0.156287 ],
			"coeffs_04" : [ 0.191696, -0.201252, -0.213785, -0.325985 ],
			"coeffs_05" : [ 0.157330, -0.414717, -0.066979, 0.019589 ],
			"coeffs_06" : [ -0.105943, -0.381641, -0.215094, 0.343634 ],
			"coeffs_07" : [ -0.053452, 0.003465, -0.376151, 0.023954 ],
			"coeffs_08" : [ -0.156097, 0.155011, -0.084525, 0.177865 ],
			"coeffs_09" : [ -0.308192, 0.367910, -0.307576, 0.225757 ],
			"coeffs_10" : [ -0.326248, 0.231126, 0.098946, 0.381596 ],
			"coeffs_11" : [ -0.292672, -0.323759, 0.140531, 0.151490 ],
			"coeffs_12" : [ 0.258098, 0.360349, 0.319697, -0.272891 ],
			"coeffs_13" : [ 0.228020, 0.342355, -0.253665, 0.187635 ],
			"coeffs_14" : [ 0.095024, 0.031502, 0.053316, 0.239946 ],
			"coeffs_15" : [ -0.385722, 0.053013, 0.172071, 0.241667 ],
			"coeffs_16" : [ -0.384193, 0.291182, -0.233863, -0.388472 ],
			"coeffs_17" : [ 0.388278, 0.400927, -0.055371, -0.341627 ],
			"coeffs_18" : [ -0.043354, 0.401676, -0.303112, 0.165607 ],
			"coeffs_19" : [ 0.161494, 0.248151, 0.370137, -0.212163 ],
			"coeffs_20" : [ 0.150795, 0.295639, 0.307756, -0.037646 ],
			"coeffs_21" : [ -0.400216, 0.209921, 0.004659, -0.079595 ],
			"coeffs_22" : [ -0.334332, -0.397437, -0.153652, 0.378767 ],
			"coeffs_23" : [ -0.006442, -0.085654, -0.097285, -0.376288 ],
			"coeffs_24" : [ 0.112499, -0.127784, -0.163032, -0.085359 ],
			"coeffs_25" : [ 0.149322, -0.296816, -0.138066, 0.241600 ],
			"coeffs_26" : [ 0.253629, 0.357613, 0.305245, 0.238515 ],
			"coeffs_27" : [ -0.202017, 0.039600, 0.117358, 0.284766 ],
			"coeffs_28" : [ 0.179651, -0.001030, 0.241597, 0.291647 ],
			"coeffs_29" : [ 0.041981, -0.144422, -0.114846, -0.208159 ],
			"intercepts" : [ 0.192150, 0.233720, -0.290591, 0.136162 ]
		},
		"Layer_2" : {
			"name" : "Hidden_Layer_2",
			"NbInputs" : 4,
			"NbOutputs" : 8 ,
			"coeffs_0" : [ -0.450622, -0.001867, 0.116064, -0.284529, 0.307188, -0.668273, -0.635713, 0.542165 ],
			"coeffs_1" : [ 0.640801, -0.467921, -0.265616, -0.534516, -0.540622, -0.542913, -0.234787, -0.161909 ],
			"coeffs_2" : [ -0.462791, -0.509832, -0.625969, 0.136479, -0.464325, -0.560014, 0.140396, 0.245475 ],
			"coeffs_3" : [ -0.111183, 0.189751, 0.083580, -0.467854, -0.116517, 0.586027, 0.704649, -0.112664 ],
			"intercepts" : [ -0.601465, -0.343582, 0.314154, -0.585498, 0.265216, -0.374832, 0.651135, 0.656902 ]
		},
		"Layer_3" : {
			"name" : "Hidden_Layer_3",
			"NbInputs" : 8,
			"NbOutputs" : 6 ,
			"coeffs_0" : [ -0.299766, 0.339618, -0.315008, 0.480827, -0.555063, 0.391634 ],
			"coeffs_1" : [ 0.136049, -0.365438, 0.304756, 0.303771, 0.018379, -0.284353 ],
			"coeffs_2" : [ 0.531662, 0.572828, -0.264870, 0.090214, 0.340022, 0.092188 ],
			"coeffs_3" : [ -0.013455, 0.598982, 0.231906, 0.268682, -0.460970, -0.088915 ],
			"coeffs_4" : [ 0.517290, 0.377184, -0.189793, -0.157303, 0.444131, -0.324037 ],
			"coeffs_5" : [ 0.085396, 0.534354, -0.603413, -0.358589, -0.368321, -0.341001 ],
			"coeffs_6" : [ -0.264320, -0.009806, -0.535956, 0.404701, 0.617728, 0.111382 ],
			"coeffs_7" : [ 0.011623, 0.270819, 0.067016, 0.331022, 0.032417, 0.406470 ],
			"intercepts" : [ 0.318079, -0.297861, -0.187150, -0.584205, -0.332278, -0.413692 ]
		},
		"Layer_4" : {
			"name" : "Output_Layer",
			"NbInputs" : 6,
			"NbOutputs" : 1 ,
			"coeffs_0" : [ 0.240226 ],
			"coeffs_1" : [ -0.149310 ],
			"coeffs_2" : [ -0.393289 ],
			"coeffs_3" : [ -0.792340 ],
			"coeffs_4" : [ 0.797121 ],
			"coeffs_5" : [ -0.371171 ],
			"intercepts" : [ -0.198717 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/MLPClassifier/mllite.MLPClassifier_BreastCancer_original_option_1.json'

RELOADING_MODEL_FROM_JSON_START ('BreastCancer_original', 'MLPClassifier')
MLLITE_MODEL_SET_OPTIONS MLPClassifier {"hidden_layer_sizes" : [4, 8, 6]}
MLLITE_MODEL_OPTIONS_DEFAULT MLPClassifier { "max_iter" : 32}
MLLITE_MODEL_OPTIONS_AFTER_SETTING MLPClassifier { "hidden_layer_sizes" : [4, 8, 6],  "max_iter" : 32 }
MLLITE_MODEL_JSON_AFTER_SETTING MLPClassifier None
MLLITE_RELOADING_MODEL mllite_mlp_class.MLPClassifier_ff4_il8
{
	"metadata" : { "model" : "Rosenblatt_MLP", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : {  "hidden_layer_sizes" : [ 4, 8, 6 ], "activation" : "relu", "solver" : "adam", "alpha" : 0.000100, "batch_size" : null, "learning_rate" : "constant", "learning_rate_init" : 0.001000, "power_t" : 0.500000, "max_iter" : 32, "shuffle" : 1, "random_state" : 1789, "tol" : 0.000100, "verbose" : 0, "warm_start" : 0, "momentum" : 0.900000, "nesterovs_momentum" : 1, "early_stopping" : 0, "validation_fraction" : 0.100000, "beta_1" : 0.900000, "beta_2" : 0.999000, "epsilon" : 0.000000, "n_iter_no_change" : 10, "max_fun" : 15000 },
	"dataset" : { "dataset_rows" : 569, "dataset_features" : 30 },
	"classes" : [ 0, 1 ],
	"layers" : {
		"sizes" : [ 30, 4, 8, 6, 1 ],
		"Layer_0" : {
			"name" : "Input_Layer",
			"NbInputs" : 0,
			"NbOutputs" : 30 
		},
		"Layer_1" : {
			"name" : "Hidden_Layer_1",
			"NbInputs" : 30,
			"NbOutputs" : 4 ,
			"coeffs_00" : [ -0.062877, 0.217923, -0.171459, -0.030922 ],
			"coeffs_01" : [ 0.049613, -0.294738, 0.121763, 0.013379 ],
			"coeffs_02" : [ 0.331685, 0.089131, 0.349281, -0.065839 ],
			"coeffs_03" : [ 0.392772, -0.371462, -0.175984, 0.156287 ],
			"coeffs_04" : [ 0.191696, -0.201252, -0.213785, -0.325985 ],
			"coeffs_05" : [ 0.157330, -0.414717, -0.066979, 0.019589 ],
			"coeffs_06" : [ -0.105943, -0.381641, -0.215094, 0.343634 ],
			"coeffs_07" : [ -0.053452, 0.003465, -0.376151, 0.023954 ],
			"coeffs_08" : [ -0.156097, 0.155011, -0.084525, 0.177865 ],
			"coeffs_09" : [ -0.308192, 0.367910, -0.307576, 0.225757 ],
			"coeffs_10" : [ -0.326248, 0.231126, 0.098946, 0.381596 ],
			"coeffs_11" : [ -0.292672, -0.323759, 0.140531, 0.151490 ],
			"coeffs_12" : [ 0.258098, 0.360349, 0.319697, -0.272891 ],
			"coeffs_13" : [ 0.228020, 0.342355, -0.253665, 0.187635 ],
			"coeffs_14" : [ 0.095024, 0.031502, 0.053316, 0.239946 ],
			"coeffs_15" : [ -0.385722, 0.053013, 0.172071, 0.241667 ],
			"coeffs_16" : [ -0.384193, 0.291182, -0.233863, -0.388472 ],
			"coeffs_17" : [ 0.388278, 0.400927, -0.055371, -0.341627 ],
			"coeffs_18" : [ -0.043354, 0.401676, -0.303112, 0.165607 ],
			"coeffs_19" : [ 0.161494, 0.248151, 0.370137, -0.212163 ],
			"coeffs_20" : [ 0.150795, 0.295639, 0.307756, -0.037646 ],
			"coeffs_21" : [ -0.400216, 0.209921, 0.004659, -0.079595 ],
			"coeffs_22" : [ -0.334332, -0.397437, -0.153652, 0.378767 ],
			"coeffs_23" : [ -0.006442, -0.085654, -0.097285, -0.376288 ],
			"coeffs_24" : [ 0.112499, -0.127784, -0.163032, -0.085359 ],
			"coeffs_25" : [ 0.149322, -0.296816, -0.138066, 0.241600 ],
			"coeffs_26" : [ 0.253629, 0.357613, 0.305245, 0.238515 ],
			"coeffs_27" : [ -0.202017, 0.039600, 0.117358, 0.284766 ],
			"coeffs_28" : [ 0.179651, -0.001030, 0.241597, 0.291647 ],
			"coeffs_29" : [ 0.041981, -0.144422, -0.114846, -0.208159 ],
			"intercepts" : [ 0.192150, 0.233720, -0.290591, 0.136162 ]
		},
		"Layer_2" : {
			"name" : "Hidden_Layer_2",
			"NbInputs" : 4,
			"NbOutputs" : 8 ,
			"coeffs_0" : [ -0.450622, -0.001867, 0.116064, -0.284529, 0.307188, -0.668273, -0.635713, 0.542165 ],
			"coeffs_1" : [ 0.640801, -0.467921, -0.265616, -0.534516, -0.540622, -0.542913, -0.234787, -0.161909 ],
			"coeffs_2" : [ -0.462791, -0.509832, -0.625969, 0.136479, -0.464325, -0.560014, 0.140396, 0.245475 ],
			"coeffs_3" : [ -0.111183, 0.189751, 0.083580, -0.467854, -0.116517, 0.586027, 0.704649, -0.112664 ],
			"intercepts" : [ -0.601465, -0.343582, 0.314154, -0.585498, 0.265216, -0.374832, 0.651135, 0.656902 ]
		},
		"Layer_3" : {
			"name" : "Hidden_Layer_3",
			"NbInputs" : 8,
			"NbOutputs" : 6 ,
			"coeffs_0" : [ -0.299766, 0.339618, -0.315008, 0.480827, -0.555063, 0.391634 ],
			"coeffs_1" : [ 0.136049, -0.365438, 0.304756, 0.303771, 0.018379, -0.284353 ],
			"coeffs_2" : [ 0.531662, 0.572828, -0.264870, 0.090214, 0.340022, 0.092188 ],
			"coeffs_3" : [ -0.013455, 0.598982, 0.231906, 0.268682, -0.460970, -0.088915 ],
			"coeffs_4" : [ 0.517290, 0.377184, -0.189793, -0.157303, 0.444131, -0.324037 ],
			"coeffs_5" : [ 0.085396, 0.534354, -0.603413, -0.358589, -0.368321, -0.341001 ],
			"coeffs_6" : [ -0.264320, -0.009806, -0.535956, 0.404701, 0.617728, 0.111382 ],
			"coeffs_7" : [ 0.011623, 0.270819, 0.067016, 0.331022, 0.032417, 0.406470 ],
			"intercepts" : [ 0.318079, -0.297861, -0.187150, -0.584205, -0.332278, -0.413692 ]
		},
		"Layer_4" : {
			"name" : "Output_Layer",
			"NbInputs" : 6,
			"NbOutputs" : 1 ,
			"coeffs_0" : [ 0.240226 ],
			"coeffs_1" : [ -0.149310 ],
			"coeffs_2" : [ -0.393289 ],
			"coeffs_3" : [ -0.792340 ],
			"coeffs_4" : [ 0.797121 ],
			"coeffs_5" : [ -0.371171 ],
			"intercepts" : [ -0.198717 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1 ],
	"dataset" : 	{
		"dataset_features" : 30,
		"dataset_rows" : 569
	},
	"layers" : 	{
		"Layer_0" : 	{
			"NbInputs" : 0,
			"NbOutputs" : 30,
			"name" : "Input_Layer"
		},
		"Layer_1" : 	{
			"NbInputs" : 30,
			"NbOutputs" : 4,
			"coeffs_00" : [ -0.062877, 0.217923, -0.171459, -0.030922 ],
			"coeffs_01" : [ 0.049613, -0.294738, 0.121763, 0.013379 ],
			"coeffs_02" : [ 0.331685, 0.089131, 0.349281, -0.065839 ],
			"coeffs_03" : [ 0.392772, -0.371462, -0.175984, 0.156287 ],
			"coeffs_04" : [ 0.191696, -0.201252, -0.213785, -0.325985 ],
			"coeffs_05" : [ 0.15733, -0.414717, -0.066979, 0.019589 ],
			"coeffs_06" : [ -0.105943, -0.381641, -0.215094, 0.343634 ],
			"coeffs_07" : [ -0.053452, 0.003465, -0.376151, 0.023954 ],
			"coeffs_08" : [ -0.156097, 0.155011, -0.084525, 0.177865 ],
			"coeffs_09" : [ -0.308192, 0.36791, -0.307576, 0.225757 ],
			"coeffs_10" : [ -0.326248, 0.231126, 0.098946, 0.381596 ],
			"coeffs_11" : [ -0.292672, -0.323759, 0.140531, 0.15149 ],
			"coeffs_12" : [ 0.258098, 0.360349, 0.319697, -0.272891 ],
			"coeffs_13" : [ 0.22802, 0.342355, -0.253665, 0.187635 ],
			"coeffs_14" : [ 0.095024, 0.031502, 0.053316, 0.239946 ],
			"coeffs_15" : [ -0.385722, 0.053013, 0.172071, 0.241667 ],
			"coeffs_16" : [ -0.384193, 0.291182, -0.233863, -0.388472 ],
			"coeffs_17" : [ 0.388278, 0.400927, -0.055371, -0.341627 ],
			"coeffs_18" : [ -0.043354, 0.401676, -0.303112, 0.165607 ],
			"coeffs_19" : [ 0.161494, 0.248151, 0.370137, -0.212163 ],
			"coeffs_20" : [ 0.150795, 0.295639, 0.307756, -0.037646 ],
			"coeffs_21" : [ -0.400216, 0.209921, 0.004659, -0.079595 ],
			"coeffs_22" : [ -0.334332, -0.397437, -0.153652, 0.378767 ],
			"coeffs_23" : [ -0.006442, -0.085654, -0.097285, -0.376288 ],
			"coeffs_24" : [ 0.112499, -0.127784, -0.163032, -0.085359 ],
			"coeffs_25" : [ 0.149322, -0.296816, -0.138066, 0.2416 ],
			"coeffs_26" : [ 0.253629, 0.357613, 0.305245, 0.238515 ],
			"coeffs_27" : [ -0.202017, 0.0396, 0.117358, 0.284766 ],
			"coeffs_28" : [ 0.179651, -0.00103, 0.241597, 0.291647 ],
			"coeffs_29" : [ 0.041981, -0.144422, -0.114846, -0.208159 ],
			"intercepts" : [ 0.19215, 0.23372, -0.290591, 0.136162 ],
			"name" : "Hidden_Layer_1"
		},
		"Layer_2" : 	{
			"NbInputs" : 4,
			"NbOutputs" : 8,
			"coeffs_0" : [ -0.450622, -0.001867, 0.116064, -0.284529, 0.307188, -0.668273, -0.635713, 0.542165 ],
			"coeffs_1" : [ 0.640801, -0.467921, -0.265616, -0.534516, -0.540622, -0.542913, -0.234787, -0.161909 ],
			"coeffs_2" : [ -0.462791, -0.509832, -0.625969, 0.136479, -0.464325, -0.560014, 0.140396, 0.245475 ],
			"coeffs_3" : [ -0.111183, 0.189751, 0.08358, -0.467854, -0.116517, 0.586027, 0.704649, -0.112664 ],
			"intercepts" : [ -0.601465, -0.343582, 0.314154, -0.585498, 0.265216, -0.374832, 0.651135, 0.656902 ],
			"name" : "Hidden_Layer_2"
		},
		"Layer_3" : 	{
			"NbInputs" : 8,
			"NbOutputs" : 6,
			"coeffs_0" : [ -0.299766, 0.339618, -0.315008, 0.480827, -0.555063, 0.391634 ],
			"coeffs_1" : [ 0.136049, -0.365438, 0.304756, 0.303771, 0.018379, -0.284353 ],
			"coeffs_2" : [ 0.531662, 0.572828, -0.26487, 0.090214, 0.340022, 0.092188 ],
			"coeffs_3" : [ -0.013455, 0.598982, 0.231906, 0.268682, -0.46097, -0.088915 ],
			"coeffs_4" : [ 0.51729, 0.377184, -0.189793, -0.157303, 0.444131, -0.324037 ],
			"coeffs_5" : [ 0.085396, 0.534354, -0.603413, -0.358589, -0.368321, -0.341001 ],
			"coeffs_6" : [ -0.26432, -0.009806, -0.535956, 0.404701, 0.617728, 0.111382 ],
			"coeffs_7" : [ 0.011623, 0.270819, 0.067016, 0.331022, 0.032417, 0.40647 ],
			"intercepts" : [ 0.318079, -0.297861, -0.18715, -0.584205, -0.332278, -0.413692 ],
			"name" : "Hidden_Layer_3"
		},
		"Layer_4" : 	{
			"NbInputs" : 6,
			"NbOutputs" : 1,
			"coeffs_0" : [ 0.240226 ],
			"coeffs_1" : [ -0.14931 ],
			"coeffs_2" : [ -0.393289 ],
			"coeffs_3" : [ -0.79234 ],
			"coeffs_4" : [ 0.797121 ],
			"coeffs_5" : [ -0.371171 ],
			"intercepts" : [ -0.198717 ],
			"name" : "Output_Layer"
		},
		"sizes" : [ 30, 4, 8, 6, 1 ]
	},
	"metadata" :  { "model" : "Rosenblatt_MLP", "signature" : "ff4_il8", "version" : "2024-W14" },
	"options" :  { "activation" : "relu", "alpha" : 0.0001, "batch_size" : null, "beta_1" : 0.9, "beta_2" : 0.999, "early_stopping" : 0, "epsilon" : 0.0, "hidden_layer_sizes" : [ 4, 8, 6 ], "learning_rate" : "constant", "learning_rate_init" : 0.001, "max_fun" : 15000, "max_iter" : 32, "momentum" : 0.9, "n_iter_no_change" : 10, "nesterovs_momentum" : 1, "power_t" : 0.5, "random_state" : 1789, "shuffle" : 1, "solver" : "adam", "tol" : 0.0001, "validation_fraction" : 0.1, "verbose" : 0, "warm_start" : 0 }
}
BEAUTIFIED_JSON_END
RELOADING_MODEL_FROM_JSON_END ('BreastCancer_original', 'MLPClassifier')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
[[0.5823 0.4177]
 [0.6233 0.3767]
 [0.6091 0.3909]
 ...
 [0.5582 0.4418]
 [0.6125 0.3875]
 [0.4627 0.5373]]
(569, 2)
(569,) float32
MODEL_PERFS {'class_name': 'mllite.MLPClassifier', 'model_name': 'MLPClassifier', 'options': '{"hidden_layer_sizes" : [4, 8, 6]}', 'dataset': 'BreastCancer_original', 'size': 569, 'accuracy': 0.6449912126537786, 'auc': 0.9328523862375139}
WRITING_PERF_CODE 'logs/auto_tests/classification/MLPClassifier/mllite.MLPClassifier_BreastCancer_original_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.MLPClassifier', 'model_name': 'MLPClassifier', 'options': '{"hidden_layer_sizes" : [4, 8, 6]}', 'dataset': 'BreastCancer_original', 'training_time_in_sec': 0.052, 'prediction_time_in_sec': 0.001}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 0 30
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 1 30
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 2 30
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 3 30
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 4 30
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 5 30
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 6 30
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 7 30
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 8 30
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 9 30
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 10 30
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 11 30
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 12 30
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 13 30
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 14 30
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 15 30
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 16 30
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 17 30
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 18 30
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 19 30
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 20 30
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 21 30
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 22 30
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 23 30
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 24 30
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 25 30
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 26 30
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 27 30
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 28 30
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 29 30
{
   "Contributions" : {
      "X_0" : [ -0.000044, 0.000044 ],
      "X_1" : [ 0.000003, -0.000003 ],
      "X_2" : [ 0.000062, -0.000062 ],
      "X_3" : [ 0.018392, -0.018392 ],
      "X_4" : [ 0.000000, -0.000000 ],
      "X_5" : [ 0.000001, -0.000001 ],
      "X_6" : [ 0.000005, -0.000005 ],
      "X_7" : [ 0.000000, -0.000000 ],
      "X_8" : [ -0.000000, 0.000000 ],
      "X_9" : [ -0.000000, 0.000000 ],
      "X_10" : [ 0.000012, -0.000012 ],
      "X_11" : [ -0.000003, 0.000003 ],
      "X_12" : [ -0.000066, 0.000066 ],
      "X_13" : [ 0.002165, -0.002165 ],
      "X_14" : [ -0.000000, 0.000000 ],
      "X_15" : [ -0.000000, 0.000000 ],
      "X_16" : [ -0.000002, 0.000002 ],
      "X_17" : [ -0.000000, 0.000000 ],
      "X_18" : [ -0.000000, 0.000000 ],
      "X_19" : [ -0.000000, 0.000000 ],
      "X_20" : [ 0.000001, -0.000001 ],
      "X_21" : [ -0.000004, 0.000004 ],
      "X_22" : [ 0.002591, -0.002591 ],
      "X_23" : [ -0.015919, 0.015919 ],
      "X_24" : [ -0.000000, 0.000000 ],
      "X_25" : [ 0.000004, -0.000004 ],
      "X_26" : [ 0.000009, -0.000009 ],
      "X_27" : [ 0.000003, -0.000003 ],
      "X_28" : [ 0.000001, -0.000001 ],
      "X_29" : [ 0.000000, -0.000000 ]   
   },
   "Most_Contributive_Features_By_Class" : {
      "class_0" : [ 3, 23, 22, 13, 12, 2, 0, 10, 26, 6 ],
      "class_1" : [ 3, 23, 22, 13, 12, 2, 0, 10, 26, 6 ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/classification/MLPClassifier/mllite.MLPClassifier_BreastCancer_original_option_1_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/classification/MLPClassifier/mllite.MLPClassifier_BreastCancer_original_option_1_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('BreastCancer_original', 'MLPClassifier', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('BreastCancer_original', 'MLPClassifier', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('BreastCancer_original', 'MLPClassifier', 'duckdb')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('BreastCancer_original', 'MLPClassifier', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 569 entries, 0 to 568
Data columns (total 30 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     569 non-null    float32
 1   X_1     569 non-null    float32
 2   X_2     569 non-null    float32
 3   X_3     569 non-null    float32
 4   X_4     569 non-null    float32
 5   X_5     569 non-null    float32
 6   X_6     569 non-null    float32
 7   X_7     569 non-null    float32
 8   X_8     569 non-null    float32
 9   X_9     569 non-null    float32
 10  X_10    569 non-null    float32
 11  X_11    569 non-null    float32
 12  X_12    569 non-null    float32
 13  X_13    569 non-null    float32
 14  X_14    569 non-null    float32
 15  X_15    569 non-null    float32
 16  X_16    569 non-null    float32
 17  X_17    569 non-null    float32
 18  X_18    569 non-null    float32
 19  X_19    569 non-null    float32
 20  X_20    569 non-null    float32
 21  X_21    569 non-null    float32
 22  X_22    569 non-null    float32
 23  X_23    569 non-null    float32
 24  X_24    569 non-null    float32
 25  X_25    569 non-null    float32
 26  X_26    569 non-null    float32
 27  X_27    569 non-null    float32
 28  X_28    569 non-null    float32
 29  X_29    569 non-null    float32
dtypes: float32(30)
memory usage: 71.1 KB
             X_0        X_1         X_2  ...    X_27    X_28     X_29
index                                    ...                         
0      17.990000  10.380000  122.800003  ...  0.2654  0.4601  0.11890
1      20.570000  17.770000  132.899994  ...  0.1860  0.2750  0.08902
2      19.690001  21.250000  130.000000  ...  0.2430  0.3613  0.08758
3      11.420000  20.379999   77.580002  ...  0.2575  0.6638  0.17300
4      20.290001  14.340000  135.100006  ...  0.1625  0.2364  0.07678
...          ...        ...         ...  ...     ...     ...      ...
564    21.559999  22.389999  142.000000  ...  0.2216  0.2060  0.07115
565    20.129999  28.250000  131.199997  ...  0.1628  0.2572  0.06637
566    16.600000  28.080000  108.300003  ...  0.1418  0.2218  0.07820
567    20.600000  29.330000  140.100006  ...  0.2650  0.4087  0.12400
568     7.760000  24.540001   47.919998  ...  0.0000  0.2871  0.07039

[569 rows x 30 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 569 entries, 0 to 568
Data columns (total 9 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          569 non-null    int64  
 1   Score_0        569 non-null    float64
 2   Proba_0        569 non-null    float64
 3   LogProba_0     569 non-null    float64
 4   Score_1        569 non-null    float64
 5   Proba_1        569 non-null    float64
 6   LogProba_1     569 non-null    float64
 7   Decision       569 non-null    int64  
 8   DecisionProba  569 non-null    float64
dtypes: float64(7), int64(2)
memory usage: 40.1 KB
     index   Score_0   Proba_0  ...  LogProba_1  Decision  DecisionProba
0        0  0.166162  0.582325  ...   -0.873052         0       0.582325
1        1  0.251958  0.623379  ...   -0.976516         0       0.623379
2        2  0.221835  0.609133  ...   -0.939389         0       0.609133
3        3 -0.017047  0.491477  ...   -0.676246         1       0.508523
4        4  0.252887  0.623815  ...   -0.977675         0       0.623815
..     ...       ...       ...  ...         ...       ...            ...
564    564  0.309433  0.649961  ...   -1.049710         0       0.649961
565    565  0.235015  0.615391  ...   -0.955528         0       0.615391
566    566  0.117044  0.558256  ...   -0.817026         0       0.558256
567    567  0.228951  0.612517  ...   -0.948082         0       0.612517
568    568 -0.074693  0.462723  ...   -0.621241         1       0.537277

[569 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
     index   Score_0  SQL_Proba_0  ...  Py_Proba_0  Py_Proba_1  Py_Decision
553    553 -0.048369     0.475834  ...    0.475827    0.524173            1
554    554  0.018150     0.509074  ...    0.509061    0.490939            0
555    555 -0.035658     0.482179  ...    0.482170    0.517830            1
556    556 -0.034568     0.482723  ...    0.482715    0.517285            1
557    557 -0.047801     0.476118  ...    0.476111    0.523889            1
558    558  0.060353     0.530140  ...    0.530123    0.469877            0
559    559 -0.014050     0.492976  ...    0.492966    0.507034            1
560    560  0.044649     0.522310  ...    0.522295    0.477705            0
561    561 -0.017565     0.491219  ...    0.491209    0.508791            1
562    562  0.069376     0.534632  ...    0.534613    0.465387            0
563    563  0.262815     0.628464  ...    0.628431    0.371569            0
564    564  0.309433     0.649961  ...    0.649927    0.350073            0
565    565  0.235015     0.615391  ...    0.615361    0.384639            0
566    566  0.117044     0.558256  ...    0.558234    0.441766            0
567    567  0.228951     0.612517  ...    0.612490    0.387510            0
568    568 -0.074693     0.462723  ...    0.462719    0.537281            1

[16 rows x 12 columns]
MLLITE_CLASS_SQL_ERROR ('BreastCancer_original', 'MLPClassifier', 'duckdb') ('Py_Proba_0', 'SQL_Proba_0') 1.5729780922730176e-05
     Py_Proba_0  SQL_Proba_0  SQL_Error_0
553    0.475827     0.475834    -0.000007
554    0.509061     0.509074    -0.000013
555    0.482170     0.482179    -0.000008
556    0.482715     0.482723    -0.000008
557    0.476111     0.476118    -0.000006
558    0.530123     0.530140    -0.000016
559    0.492966     0.492976    -0.000010
560    0.522295     0.522310    -0.000015
561    0.491209     0.491219    -0.000010
562    0.534613     0.534632    -0.000019
563    0.628431     0.628464    -0.000032
564    0.649927     0.649961    -0.000034
565    0.615361     0.615391    -0.000030
566    0.558234     0.558256    -0.000023
567    0.612490     0.612517    -0.000027
568    0.462719     0.462723    -0.000004
MLLITE_CLASS_SQL_ERROR ('BreastCancer_original', 'MLPClassifier', 'duckdb') ('Py_Proba_1', 'SQL_Proba_1') 1.5730068994387457e-05
     Py_Proba_1  SQL_Proba_1  SQL_Error_1
553    0.524173     0.524166     0.000007
554    0.490939     0.490926     0.000013
555    0.517830     0.517821     0.000008
556    0.517285     0.517277     0.000008
557    0.523889     0.523882     0.000006
558    0.469877     0.469860     0.000016
559    0.507034     0.507024     0.000010
560    0.477705     0.477690     0.000015
561    0.508791     0.508781     0.000010
562    0.465387     0.465368     0.000019
563    0.371569     0.371536     0.000032
564    0.350073     0.350039     0.000034
565    0.384639     0.384609     0.000030
566    0.441766     0.441744     0.000023
567    0.387510     0.387483     0.000027
568    0.537281     0.537277     0.000004
MLLITE_CLASS_SQL_EXECUTION_STATUS ('BreastCancer_original', 'MLPClassifier', 'duckdb', 'Success')
     Py_Decision  SQL_Decision
553            1             1
554            0             0
555            1             1
556            1             1
557            1             1
558            0             0
559            1             1
560            0             0
561            1             1
562            0             0
563            0             0
564            0             0
565            0             0
566            0             0
567            0             0
568            1             1
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/MLPClassifier/mllite.MLPClassifier_BreastCancer_original_option_1_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('BreastCancer_original', 'MLPClassifier', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('BreastCancer_original', 'MLPClassifier', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('BreastCancer_original', 'MLPClassifier', 'sqlite')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('BreastCancer_original', 'MLPClassifier', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 569 entries, 0 to 568
Data columns (total 30 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     569 non-null    float32
 1   X_1     569 non-null    float32
 2   X_2     569 non-null    float32
 3   X_3     569 non-null    float32
 4   X_4     569 non-null    float32
 5   X_5     569 non-null    float32
 6   X_6     569 non-null    float32
 7   X_7     569 non-null    float32
 8   X_8     569 non-null    float32
 9   X_9     569 non-null    float32
 10  X_10    569 non-null    float32
 11  X_11    569 non-null    float32
 12  X_12    569 non-null    float32
 13  X_13    569 non-null    float32
 14  X_14    569 non-null    float32
 15  X_15    569 non-null    float32
 16  X_16    569 non-null    float32
 17  X_17    569 non-null    float32
 18  X_18    569 non-null    float32
 19  X_19    569 non-null    float32
 20  X_20    569 non-null    float32
 21  X_21    569 non-null    float32
 22  X_22    569 non-null    float32
 23  X_23    569 non-null    float32
 24  X_24    569 non-null    float32
 25  X_25    569 non-null    float32
 26  X_26    569 non-null    float32
 27  X_27    569 non-null    float32
 28  X_28    569 non-null    float32
 29  X_29    569 non-null    float32
dtypes: float32(30)
memory usage: 71.1 KB
             X_0        X_1         X_2  ...    X_27    X_28     X_29
index                                    ...                         
0      17.990000  10.380000  122.800003  ...  0.2654  0.4601  0.11890
1      20.570000  17.770000  132.899994  ...  0.1860  0.2750  0.08902
2      19.690001  21.250000  130.000000  ...  0.2430  0.3613  0.08758
3      11.420000  20.379999   77.580002  ...  0.2575  0.6638  0.17300
4      20.290001  14.340000  135.100006  ...  0.1625  0.2364  0.07678
...          ...        ...         ...  ...     ...     ...      ...
564    21.559999  22.389999  142.000000  ...  0.2216  0.2060  0.07115
565    20.129999  28.250000  131.199997  ...  0.1628  0.2572  0.06637
566    16.600000  28.080000  108.300003  ...  0.1418  0.2218  0.07820
567    20.600000  29.330000  140.100006  ...  0.2650  0.4087  0.12400
568     7.760000  24.540001   47.919998  ...  0.0000  0.2871  0.07039

[569 rows x 30 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
MODEL_SQL_EXECUTION_FAILED ('BreastCancer_original', 'MLPClassifier', 'sqlite', '')
MLLITE_CLASS_SQL_EXECUTION_STATUS ('BreastCancer_original', 'MLPClassifier', 'sqlite', 'sql_execution_failed')
