READING_CSV BinaryClass_100_tiny ['data/tiny/BinaryClass_100_tiny.csv']
         X_0       X_1       X_2  ...      X_98      X_99  target
0  -0.001923 -2.371688 -1.181275  ... -0.370192  0.432550       0
1  -0.094974  0.975498  0.650450  ... -0.220261  0.222239       1
2   0.060564 -1.800755  0.053222  ...  0.793880 -0.469869       0
3  -0.113704  0.680545 -0.819322  ...  0.428237 -0.069851       1
4  -0.494085  0.103852  0.838905  ... -0.711862 -0.910029       1
5   2.239106  1.448612 -0.878695  ...  0.919640  0.114037       1
6   0.252664  2.266127  0.422848  ...  1.201113 -0.932854       1
7  -0.327352 -0.040865  0.968958  ... -0.948032  2.661918       1
8  -0.661706 -1.565012 -0.585348  ...  1.611045 -0.465551       0
9  -2.741096  0.449524  0.751320  ... -0.980678  0.721591       1
10  0.184385 -1.311599 -1.105879  ... -2.043269 -0.231095       0
11 -1.061671 -0.066355 -0.726231  ... -1.229235 -0.078846       1
12  0.018249 -0.155115  0.453700  ... -0.635292 -0.649317       0
13  0.132310  0.710105  0.299615  ... -0.695618  0.555943       1
14  1.230531 -1.368154 -0.960101  ...  0.720736 -1.447405       0
15 -1.279016 -0.352168 -0.152450  ...  0.677687  0.751591       0

[16 rows x 101 columns]
MLLITE_MODEL_SET_OPTIONS RidgeClassifier {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { "alpha" : 0.0000001,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
('OPERATION_START', 'TRAINING')
[[-1.92301034e-03 -2.37168813e+00 -1.18127453e+00 -8.41143429e-01
  -2.27833748e+00  5.56165516e-01 -4.33400422e-01  6.68530583e-01
  -4.45269734e-01  1.08730054e+00  9.94111359e-01  6.15174830e-01
  -1.42712057e-01 -5.43691695e-01  2.51998758e+00 -5.76757491e-01
  -4.96940762e-01 -1.37897694e+00 -1.15515006e+00 -5.45445085e-01
   9.39146876e-01  5.58746934e-01  6.42707646e-02  9.41048622e-01
   3.70287567e-01  3.05628687e-01  6.59754872e-01 -5.34938514e-01
   3.41925710e-01 -9.02376890e-01  2.64374584e-01  1.05001062e-01
   1.58149529e+00 -2.39867258e+00  3.65284145e-01 -1.43215582e-01
  -6.91276610e-01 -1.09551179e+00  6.00470424e-01 -1.27839279e+00
  -1.51853383e+00 -7.39996552e-01 -1.09941888e+00 -1.00493443e+00
   5.02316713e-01  5.94181597e-01 -4.22067046e-01  5.80759704e-01
  -9.45604265e-01 -8.63473296e-01  1.73380065e+00  4.05579746e-01
  -1.31068170e+00 -2.56809741e-01  2.29151353e-01  3.84321451e-01
  -5.51349640e-01  1.19658613e+00  3.84441763e-01 -3.77902836e-01
   6.52891636e-01 -1.64592862e+00  1.05294979e+00  8.23636234e-01
   1.37784421e+00 -7.36219212e-02  1.61197138e+00 -1.98621261e+00
   1.18670213e+00  1.34875977e+00 -3.60972047e-01 -2.41051650e+00
  -1.94886446e+00 -6.28324568e-01 -1.05058098e+00 -2.54030657e+00
   1.56220317e-01  1.23859513e+00 -8.52460384e-01 -1.03192151e+00
   7.05807090e-01  3.12049419e-01  1.97033249e-02 -1.49339557e+00
  -9.82222795e-01 -2.90390223e-01  9.48299840e-02 -1.34775198e+00
  -5.61226130e-01 -4.61151361e-01  6.03559203e-02  1.79786313e+00
   4.18422371e-01  1.31290972e+00 -5.27386606e-01  7.88664445e-02
  -4.97837096e-01 -1.82821357e+00 -3.70192051e-01  4.32550102e-01]
 [-9.49740633e-02  9.75498080e-01  6.50450408e-01 -1.63987532e-01
   1.19377956e-01 -8.87404203e-01 -9.85744298e-01 -1.57699615e-01
  -5.53503856e-02 -4.89691913e-01  3.95107746e-01 -1.86406958e+00
   2.06569105e-01  1.19034803e+00  9.08305228e-01 -6.49589598e-01
   8.17796350e-01 -5.65862536e-01 -1.62303770e+00  1.96794593e+00
  -9.01196182e-01  2.21370864e+00 -1.26184642e+00  7.29401052e-01
   1.97460622e-01  5.53488255e-01 -4.16989103e-02  2.21864507e-01
  -1.60427725e+00 -1.14986289e+00  7.22467899e-01 -1.29073668e+00
  -6.89864635e-01 -9.29718554e-01  5.53363264e-01  7.69885540e-01
   3.78352642e-01  9.23741400e-01  2.08281234e-01  3.80240083e-02
  -8.87683213e-01  3.33101004e-01  1.00212204e+00  1.69690156e+00
   2.44307727e-01 -1.86227322e+00 -4.06760365e-01 -6.38921678e-01
  -1.67613909e-01  1.53844684e-01  8.42663527e-01 -1.62592280e+00
  -1.59404182e+00  7.38830745e-01 -8.74506593e-01 -1.22548962e+00
  -5.25257468e-01 -4.70152795e-01 -1.15468964e-01  4.96193357e-02
  -8.19156051e-01  2.99073744e+00  4.35046047e-01 -7.59149939e-02
  -1.56339154e-01 -6.03336692e-01 -6.89302310e-02 -2.13743591e+00
   2.04948735e+00 -1.69878006e+00  1.88749945e+00  4.05677646e-01
  -5.13272583e-01 -5.22737443e-01  1.29273057e+00  1.05886006e+00
  -3.68327975e-01  5.86420834e-01  1.94629407e+00  3.96328539e-01
  -2.22653337e-02  1.84837833e-01  1.55221510e+00  7.67667949e-01
   4.12257463e-01 -4.74151075e-02 -8.58929634e-01 -3.77886832e-01
   8.46213162e-01  3.82268399e-01  4.52266574e-01  3.67907345e-01
  -1.74708021e+00  2.97413111e-01  1.39319599e-01  6.18183054e-02
  -1.14589304e-01 -4.91930753e-01 -2.20261484e-01  2.22238824e-01]
 [ 6.05639964e-02 -1.80075538e+00  5.32221198e-02  1.13705254e+00
  -1.11454320e+00 -6.12991691e-01  6.58748865e-01 -6.18573092e-02
  -1.36188239e-01 -6.56564057e-01 -3.13579798e-01  2.24243671e-01
   4.27837819e-01  1.69016683e+00  1.13053429e+00 -1.34645033e+00
   4.66799051e-01 -1.12207568e+00 -1.80836928e+00  2.61885583e-01
  -1.46927464e+00 -2.81107831e+00  4.71088886e-01 -9.81634736e-01
   1.54162824e-01 -9.45118725e-01 -7.67153800e-01  2.78682500e-01
  -3.97465616e-01 -3.84304225e-01 -2.76822597e-02 -9.13487732e-01
   5.98323822e-01  7.34539688e-01  1.80665767e+00 -1.05402780e+00
  -2.37955928e+00 -1.01849586e-01 -1.25161910e+00 -3.40773277e-02
  -5.89699388e-01  4.64297593e-01 -7.69342899e-01 -4.94058549e-01
   1.90302110e+00 -1.28648996e+00 -2.02911228e-01  1.30722094e+00
  -9.35619593e-01 -7.99053609e-01 -8.04178536e-01 -1.16746537e-01
   1.43000674e+00  5.87966681e-01 -7.76776969e-01  1.36388794e-01
  -1.52828979e+00  1.08090746e+00  1.06615996e+00  6.13719285e-01
  -1.56638134e+00 -2.99079442e+00 -9.23732638e-01  1.24830830e+00
  -3.28231335e-01 -7.79168904e-01 -2.46622109e+00  7.15086102e-01
  -1.71361104e-01  1.16359353e+00  4.88843828e-01  8.57221186e-01
  -1.30257130e+00  7.77815223e-01  1.57720637e+00  2.45493579e+00
   8.09955537e-01  2.80593574e-01  4.77433234e-01 -2.73493845e-02
   1.58274734e+00  1.18173122e+00  1.69938195e+00  1.51718628e+00
  -1.84085965e-01  6.12297058e-01 -1.40703619e-01  9.34502482e-01
   3.93216848e-01 -9.26083088e-01  7.44229436e-01  2.88019562e+00
   1.62651956e+00 -1.24643338e+00  1.11573339e-02  1.65077448e-01
   3.82369637e+00  1.63663363e+00  7.93880284e-01 -4.69868749e-01]
 [-1.13704078e-01  6.80544913e-01 -8.19322228e-01 -9.69877481e-01
   7.71628141e-01 -1.57383764e+00  2.48730704e-01  5.41360080e-01
  -1.59036744e+00 -3.12054634e-01 -1.64359498e+00  1.50122166e+00
  -1.00549912e+00 -1.26486790e+00 -2.33127594e+00  1.01962104e-01
   5.75607657e-01 -1.20477211e+00 -9.19741020e-02 -1.16153848e+00
   2.32242107e+00  1.63334921e-01  1.69249582e+00  2.74418384e-01
  -1.81126118e+00  8.80577981e-01  7.02414274e-01  1.03724468e+00
   1.05812097e+00  1.13643229e+00 -7.69474387e-01  5.84956825e-01
  -9.34404075e-01 -1.12673771e+00 -3.59424800e-01 -1.02582085e+00
  -9.53075886e-01 -8.06699455e-01 -2.95903623e-01  1.28596336e-01
  -2.09618449e+00  1.96716547e-01 -1.33443916e+00  6.67538345e-01
  -2.04303360e+00  6.56667471e-01 -1.87788701e+00 -7.45100915e-01
   3.34480464e-01  2.30912209e-01 -1.05614233e+00  1.71417046e+00
   1.68882191e+00  1.25794733e+00  7.77477682e-01 -1.20922111e-01
   1.01463521e+00  7.94170141e-01  8.18609297e-01  1.13752067e-01
   7.90019155e-01  1.38778999e-01  8.86305422e-02  1.08791220e+00
  -1.64308107e+00 -9.54914749e-01  2.37339306e+00  9.95790303e-01
  -1.40296519e-01 -4.31657374e-01 -3.15623283e-02 -1.30086195e+00
  -5.68930566e-01  5.63574135e-01 -8.70503426e-01  4.14068997e-01
  -8.70141163e-02 -1.51894724e+00 -1.23855531e+00  1.29880026e-01
  -5.59461713e-01 -1.26385403e+00  1.59277141e-01 -1.86286375e-01
   5.10727882e-01  1.43785611e-01 -1.63213980e+00  3.82019728e-01
  -1.09840834e+00 -1.70634732e-01 -4.41302881e-02 -3.41793835e-01
   3.30759794e-01  4.17531244e-02 -3.37710887e-01  1.44820738e+00
   1.34170282e+00 -7.92602599e-01  4.28236961e-01 -6.98510483e-02]
 [-4.94084507e-01  1.03852168e-01  8.38904679e-01 -7.35904038e-01
  -7.04967678e-02  5.73717237e-01  2.18849331e-01  1.05623102e+00
  -1.25785077e+00  1.13013601e+00 -1.55437517e+00  9.51525688e-01
  -1.67592776e+00 -3.48637164e-01  1.60759163e+00  6.90805376e-01
  -1.13699162e+00  9.32226717e-01 -8.86185884e-01  6.50337562e-02
  -6.33093655e-01 -4.60071653e-01 -3.17828417e-01 -6.01315439e-01
  -7.02504814e-02 -2.66349375e-01 -1.10489130e+00  1.07519376e+00
  -4.23042387e-01  3.45855922e-01 -5.60104251e-01  3.57963622e-01
   1.71203125e+00  1.49234402e+00 -1.28127527e+00  3.17688972e-01
   2.95880270e+00  8.53792131e-01 -2.06153846e+00 -3.91467154e-01
  -2.43756063e-02  1.67333499e-01  1.17837632e+00 -4.12473530e-01
   1.56250536e-01 -3.51341099e-01 -9.60100651e-01  1.04467452e+00
   1.08441925e+00  5.52181721e-01 -1.01620758e+00 -2.87865996e+00
   5.76726556e-01 -5.82755208e-01  6.56063616e-01 -1.08061683e+00
  -5.74857712e-01  7.20476925e-01 -1.94190967e+00 -5.61854243e-01
   6.89151466e-01  5.53826809e-01 -3.96725759e-02 -2.25085169e-01
   2.28897452e+00  6.30537391e-01  1.64857304e+00 -5.28170049e-01
   5.29594898e-01 -1.10107467e-01  1.42280829e+00  1.06736279e+00
  -2.18277469e-01 -2.87699342e-01  4.86762732e-01 -1.59002244e+00
   5.11812679e-02 -4.70185161e-01  1.38356775e-01  7.31057286e-01
  -1.03853390e-01  4.13611174e-01  4.17555958e-01  1.10078800e+00
   8.31761479e-01  1.25986600e+00  2.73322630e+00  1.30618227e+00
  -1.60953015e-01 -1.14850438e+00 -1.69689417e+00 -4.59983468e-01
   1.92816043e+00 -1.38011467e+00  1.83180821e+00  5.52028716e-01
   3.90167475e-01 -7.98744082e-01 -7.11862028e-01 -9.10029233e-01]] [0 1 0 1 1]
MLLITE_FIT_USING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 3 4
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 4 4
('OPERATION_END_ELAPSED', 0.017, 'TRAINING')
{ "alpha" : 0.0000001,   }
{ "alpha" : 0.0000001,   }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 100 },
	"classes" : [ 0, 1 ],
	"equations" : {
		"class_1" : {
			"intercept" : 0.154670,
			"coeffs" : [ -0.005868, 0.089192, 0.055874, -0.030014, 0.090535, -0.024405, -0.038394, -0.025705, -0.126667, 0.033712, 0.000490, 0.004745, 0.006084, -0.001013, -0.014745, 0.076705, 0.039677, -0.025757, 0.013003, -0.002729, -0.007545, 0.033040, 0.002493, -0.051446, 0.025780, -0.025676, 0.024332, -0.002847, 0.012015, 0.082876, 0.061209, -0.031776, -0.009069, 0.009377, -0.063330, 0.038593, 0.031629, -0.035344, -0.020288, 0.027825, -0.022924, -0.005091, -0.032601, 0.023441, -0.041191, -0.003616, -0.032761, -0.045570, 0.046724, 0.051940, -0.038970, -0.025184, -0.027044, 0.047335, -0.046364, -0.064127, -0.024134, -0.017188, -0.001111, 0.013717, 0.011953, 0.067809, -0.023080, 0.006583, 0.025411, 0.003853, 0.018548, -0.004572, 0.015767, -0.047142, -0.001089, -0.028192, 0.016798, -0.050675, 0.025715, 0.056234, 0.040206, -0.014641, -0.004126, -0.013184, 0.014198, -0.068698, 0.048243, 0.014566, 0.064057, 0.036290, 0.040827, 0.081842, -0.022126, -0.021120, 0.006527, -0.044892, -0.020741, 0.040063, 0.041776, 0.056669, -0.018728, -0.021117, -0.037148, 0.054435 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_100_tiny_option_1.json'

RELOADING_MODEL_FROM_JSON_START ('BinaryClass_100_tiny', 'RidgeClassifier')
MLLITE_MODEL_SET_OPTIONS RidgeClassifier {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { "alpha" : 0.0000001,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
MLLITE_RELOADING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 100 },
	"classes" : [ 0, 1 ],
	"equations" : {
		"class_1" : {
			"intercept" : 0.154670,
			"coeffs" : [ -0.005868, 0.089192, 0.055874, -0.030014, 0.090535, -0.024405, -0.038394, -0.025705, -0.126667, 0.033712, 0.000490, 0.004745, 0.006084, -0.001013, -0.014745, 0.076705, 0.039677, -0.025757, 0.013003, -0.002729, -0.007545, 0.033040, 0.002493, -0.051446, 0.025780, -0.025676, 0.024332, -0.002847, 0.012015, 0.082876, 0.061209, -0.031776, -0.009069, 0.009377, -0.063330, 0.038593, 0.031629, -0.035344, -0.020288, 0.027825, -0.022924, -0.005091, -0.032601, 0.023441, -0.041191, -0.003616, -0.032761, -0.045570, 0.046724, 0.051940, -0.038970, -0.025184, -0.027044, 0.047335, -0.046364, -0.064127, -0.024134, -0.017188, -0.001111, 0.013717, 0.011953, 0.067809, -0.023080, 0.006583, 0.025411, 0.003853, 0.018548, -0.004572, 0.015767, -0.047142, -0.001089, -0.028192, 0.016798, -0.050675, 0.025715, 0.056234, 0.040206, -0.014641, -0.004126, -0.013184, 0.014198, -0.068698, 0.048243, 0.014566, 0.064057, 0.036290, 0.040827, 0.081842, -0.022126, -0.021120, 0.006527, -0.044892, -0.020741, 0.040063, 0.041776, 0.056669, -0.018728, -0.021117, -0.037148, 0.054435 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1 ],
	"dataset" : 	{
		"dataset_features" : 100,
		"dataset_rows" : 16
	},
	"equations" : 	{
		"class_1" : 	{
			"coeffs" : [ -0.005868, 0.089192, 0.055874, -0.030014, 0.090535, -0.024405, -0.038394, -0.025705, -0.126667, 0.033712, 0.00049, 0.004745, 0.006084, -0.001013, -0.014745, 0.076705, 0.039677, -0.025757, 0.013003, -0.002729, -0.007545, 0.03304, 0.002493, -0.051446, 0.02578, -0.025676, 0.024332, -0.002847, 0.012015, 0.082876, 0.061209, -0.031776, -0.009069, 0.009377, -0.06333, 0.038593, 0.031629, -0.035344, -0.020288, 0.027825, -0.022924, -0.005091, -0.032601, 0.023441, -0.041191, -0.003616, -0.032761, -0.04557, 0.046724, 0.05194, -0.03897, -0.025184, -0.027044, 0.047335, -0.046364, -0.064127, -0.024134, -0.017188, -0.001111, 0.013717, 0.011953, 0.067809, -0.02308, 0.006583, 0.025411, 0.003853, 0.018548, -0.004572, 0.015767, -0.047142, -0.001089, -0.028192, 0.016798, -0.050675, 0.025715, 0.056234, 0.040206, -0.014641, -0.004126, -0.013184, 0.014198, -0.068698, 0.048243, 0.014566, 0.064057, 0.03629, 0.040827, 0.081842, -0.022126, -0.02112, 0.006527, -0.044892, -0.020741, 0.040063, 0.041776, 0.056669, -0.018728, -0.021117, -0.037148, 0.054435 ],
			"intercept" : 0.15467
		}
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_il8", "version" : "2024-W14" },
	"options" :  { "alpha" : 0.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
RELOADING_MODEL_FROM_JSON_END ('BinaryClass_100_tiny', 'RidgeClassifier')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0.7308 0.2692]
 [0.2698 0.7302]
 [0.7314 0.2686]
 [0.2676 0.7324]
 [0.2678 0.7322]
 [0.2677 0.7323]
 [0.2671 0.7329]
 [0.2717 0.7283]
 [0.7325 0.2675]
 [0.2692 0.7308]
 [0.7284 0.2716]
 [0.2685 0.7315]
 [0.7308 0.2692]
 [0.2708 0.7292]
 [0.7319 0.2681]
 [0.7318 0.2682]]
(16, 2)
(16,) float32
MODEL_PERFS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': '{"alpha" : 0.0000001}', 'dataset': 'BinaryClass_100_tiny', 'size': 16, 'accuracy': 1.0, 'auc': 1.0}
WRITING_PERF_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_100_tiny_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': '{"alpha" : 0.0000001}', 'dataset': 'BinaryClass_100_tiny', 'training_time_in_sec': 0.017, 'prediction_time_in_sec': 0.0}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 0 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 1 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 2 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 3 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 4 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 5 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 6 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 7 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 8 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 9 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 10 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 11 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 12 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 13 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 14 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 15 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 16 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 17 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 18 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 19 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 20 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 21 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 22 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 23 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 24 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 25 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 26 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 27 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 28 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 29 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 30 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 31 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 32 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 33 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 34 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 35 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 36 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 37 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 38 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 39 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 40 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 41 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 42 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 43 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 44 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 45 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 46 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 47 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 48 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 49 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 50 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 51 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 52 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 53 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 54 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 55 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 56 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 57 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 58 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 59 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 60 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 61 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 62 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 63 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 64 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 65 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 66 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 67 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 68 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 69 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 70 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 71 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 72 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 73 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 74 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 75 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 76 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 77 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 78 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 79 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 80 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 81 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 82 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 83 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 84 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 85 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 86 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 87 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 88 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 89 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 90 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 91 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 92 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 93 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 94 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 95 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 96 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 97 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 98 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 99 100
{
   "Contributions" : {
      "X_0" : [ -0.000140, 0.000140 ],
      "X_1" : [ -0.002403, 0.002403 ],
      "X_2" : [ 0.000459, -0.000459 ],
      "X_3" : [ -0.000454, 0.000454 ],
      "X_4" : [ 0.000091, -0.000091 ],
      "X_5" : [ -0.002118, 0.002118 ],
      "X_6" : [ 0.000050, -0.000050 ],
      "X_7" : [ -0.000500, 0.000500 ],
      "X_8" : [ 0.001533, -0.001533 ],
      "X_9" : [ -0.000481, 0.000481 ],
      "X_10" : [ 0.000003, -0.000003 ],
      "X_11" : [ -0.000114, 0.000114 ],
      "X_12" : [ -0.000239, 0.000239 ],
      "X_13" : [ -0.000026, 0.000026 ],
      "X_14" : [ 0.000017, -0.000017 ],
      "X_15" : [ -0.000155, 0.000155 ],
      "X_16" : [ -0.000466, 0.000466 ],
      "X_17" : [ 0.000033, -0.000033 ],
      "X_18" : [ 0.000094, -0.000094 ],
      "X_19" : [ 0.000029, -0.000029 ],
      "X_20" : [ 0.000039, -0.000039 ],
      "X_21" : [ 0.000012, -0.000012 ],
      "X_22" : [ 0.000042, -0.000042 ],
      "X_23" : [ -0.001680, 0.001680 ],
      "X_24" : [ -0.000504, 0.000504 ],
      "X_25" : [ -0.000396, 0.000396 ],
      "X_26" : [ 0.000022, -0.000022 ],
      "X_27" : [ -0.000086, 0.000086 ],
      "X_28" : [ 0.000188, -0.000188 ],
      "X_29" : [ 0.002994, -0.002994 ],
      "X_30" : [ -0.001245, 0.001245 ],
      "X_31" : [ -0.000555, 0.000555 ],
      "X_32" : [ -0.000335, 0.000335 ],
      "X_33" : [ -0.000320, 0.000320 ],
      "X_34" : [ -0.001696, 0.001696 ],
      "X_35" : [ -0.000201, 0.000201 ],
      "X_36" : [ -0.000975, 0.000975 ],
      "X_37" : [ -0.001181, 0.001181 ],
      "X_38" : [ -0.000223, 0.000223 ],
      "X_39" : [ 0.000111, -0.000111 ],
      "X_40" : [ 0.001097, -0.001097 ],
      "X_41" : [ -0.000083, 0.000083 ],
      "X_42" : [ 0.000590, -0.000590 ],
      "X_43" : [ -0.000148, 0.000148 ],
      "X_44" : [ -0.001101, 0.001101 ],
      "X_45" : [ 0.000012, -0.000012 ],
      "X_46" : [ 0.000405, -0.000405 ],
      "X_47" : [ -0.001777, 0.001777 ],
      "X_48" : [ -0.000029, 0.000029 ],
      "X_49" : [ -0.003074, 0.003074 ],
      "X_50" : [ 0.000170, -0.000170 ],
      "X_51" : [ 0.000783, -0.000783 ],
      "X_52" : [ -0.001810, 0.001810 ],
      "X_53" : [ -0.000817, 0.000817 ],
      "X_54" : [ -0.003011, 0.003011 ],
      "X_55" : [ -0.000538, 0.000538 ],
      "X_56" : [ -0.000612, 0.000612 ],
      "X_57" : [ -0.000631, 0.000631 ],
      "X_58" : [ 0.000038, -0.000038 ],
      "X_59" : [ -0.000101, 0.000101 ],
      "X_60" : [ 0.000467, -0.000467 ],
      "X_61" : [ -0.006458, 0.006458 ],
      "X_62" : [ -0.000863, 0.000863 ],
      "X_63" : [ -0.000019, 0.000019 ],
      "X_64" : [ 0.000216, -0.000216 ],
      "X_65" : [ 0.000093, -0.000093 ],
      "X_66" : [ 0.000269, -0.000269 ],
      "X_67" : [ -0.000343, 0.000343 ],
      "X_68" : [ -0.000678, 0.000678 ],
      "X_69" : [ -0.001421, 0.001421 ],
      "X_70" : [ 0.000043, -0.000043 ],
      "X_71" : [ -0.000036, 0.000036 ],
      "X_72" : [ 0.000455, -0.000455 ],
      "X_73" : [ 0.000133, -0.000133 ],
      "X_74" : [ -0.000738, 0.000738 ],
      "X_75" : [ -0.001703, 0.001703 ],
      "X_76" : [ 0.000504, -0.000504 ],
      "X_77" : [ 0.000134, -0.000134 ],
      "X_78" : [ -0.000082, 0.000082 ],
      "X_79" : [ -0.000099, 0.000099 ],
      "X_80" : [ -0.000509, 0.000509 ],
      "X_81" : [ -0.001054, 0.001054 ],
      "X_82" : [ 0.000001, -0.000001 ],
      "X_83" : [ -0.000129, 0.000129 ],
      "X_84" : [ -0.002918, 0.002918 ],
      "X_85" : [ -0.003191, 0.003191 ],
      "X_86" : [ -0.000187, 0.000187 ],
      "X_87" : [ -0.003083, 0.003083 ],
      "X_88" : [ 0.000331, -0.000331 ],
      "X_89" : [ 0.000008, -0.000008 ],
      "X_90" : [ -0.000297, 0.000297 ],
      "X_91" : [ -0.000090, 0.000090 ],
      "X_92" : [ -0.000435, 0.000435 ],
      "X_93" : [ -0.000232, 0.000232 ],
      "X_94" : [ -0.000248, 0.000248 ],
      "X_95" : [ -0.000439, 0.000439 ],
      "X_96" : [ -0.000442, 0.000442 ],
      "X_97" : [ 0.000946, -0.000946 ],
      "X_98" : [ -0.000363, 0.000363 ],
      "X_99" : [ -0.001130, 0.001130 ]   
   },
   "Most_Contributive_Features_By_Class" : {
      "class_0" : [ 61, 85, 87, 49, 54, 29, 84, 1, 5, 52 ],
      "class_1" : [ 61, 85, 87, 49, 54, 29, 84, 1, 5, 52 ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_100_tiny_option_1_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_100_tiny_option_1_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('BinaryClass_100_tiny', 'RidgeClassifier', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('BinaryClass_100_tiny', 'RidgeClassifier', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('BinaryClass_100_tiny', 'RidgeClassifier', 'duckdb')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('BinaryClass_100_tiny', 'RidgeClassifier', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 16 entries, 0 to 15
Data columns (total 100 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     16 non-null     float32
 1   X_1     16 non-null     float32
 2   X_2     16 non-null     float32
 3   X_3     16 non-null     float32
 4   X_4     16 non-null     float32
 5   X_5     16 non-null     float32
 6   X_6     16 non-null     float32
 7   X_7     16 non-null     float32
 8   X_8     16 non-null     float32
 9   X_9     16 non-null     float32
 10  X_10    16 non-null     float32
 11  X_11    16 non-null     float32
 12  X_12    16 non-null     float32
 13  X_13    16 non-null     float32
 14  X_14    16 non-null     float32
 15  X_15    16 non-null     float32
 16  X_16    16 non-null     float32
 17  X_17    16 non-null     float32
 18  X_18    16 non-null     float32
 19  X_19    16 non-null     float32
 20  X_20    16 non-null     float32
 21  X_21    16 non-null     float32
 22  X_22    16 non-null     float32
 23  X_23    16 non-null     float32
 24  X_24    16 non-null     float32
 25  X_25    16 non-null     float32
 26  X_26    16 non-null     float32
 27  X_27    16 non-null     float32
 28  X_28    16 non-null     float32
 29  X_29    16 non-null     float32
 30  X_30    16 non-null     float32
 31  X_31    16 non-null     float32
 32  X_32    16 non-null     float32
 33  X_33    16 non-null     float32
 34  X_34    16 non-null     float32
 35  X_35    16 non-null     float32
 36  X_36    16 non-null     float32
 37  X_37    16 non-null     float32
 38  X_38    16 non-null     float32
 39  X_39    16 non-null     float32
 40  X_40    16 non-null     float32
 41  X_41    16 non-null     float32
 42  X_42    16 non-null     float32
 43  X_43    16 non-null     float32
 44  X_44    16 non-null     float32
 45  X_45    16 non-null     float32
 46  X_46    16 non-null     float32
 47  X_47    16 non-null     float32
 48  X_48    16 non-null     float32
 49  X_49    16 non-null     float32
 50  X_50    16 non-null     float32
 51  X_51    16 non-null     float32
 52  X_52    16 non-null     float32
 53  X_53    16 non-null     float32
 54  X_54    16 non-null     float32
 55  X_55    16 non-null     float32
 56  X_56    16 non-null     float32
 57  X_57    16 non-null     float32
 58  X_58    16 non-null     float32
 59  X_59    16 non-null     float32
 60  X_60    16 non-null     float32
 61  X_61    16 non-null     float32
 62  X_62    16 non-null     float32
 63  X_63    16 non-null     float32
 64  X_64    16 non-null     float32
 65  X_65    16 non-null     float32
 66  X_66    16 non-null     float32
 67  X_67    16 non-null     float32
 68  X_68    16 non-null     float32
 69  X_69    16 non-null     float32
 70  X_70    16 non-null     float32
 71  X_71    16 non-null     float32
 72  X_72    16 non-null     float32
 73  X_73    16 non-null     float32
 74  X_74    16 non-null     float32
 75  X_75    16 non-null     float32
 76  X_76    16 non-null     float32
 77  X_77    16 non-null     float32
 78  X_78    16 non-null     float32
 79  X_79    16 non-null     float32
 80  X_80    16 non-null     float32
 81  X_81    16 non-null     float32
 82  X_82    16 non-null     float32
 83  X_83    16 non-null     float32
 84  X_84    16 non-null     float32
 85  X_85    16 non-null     float32
 86  X_86    16 non-null     float32
 87  X_87    16 non-null     float32
 88  X_88    16 non-null     float32
 89  X_89    16 non-null     float32
 90  X_90    16 non-null     float32
 91  X_91    16 non-null     float32
 92  X_92    16 non-null     float32
 93  X_93    16 non-null     float32
 94  X_94    16 non-null     float32
 95  X_95    16 non-null     float32
 96  X_96    16 non-null     float32
 97  X_97    16 non-null     float32
 98  X_98    16 non-null     float32
 99  X_99    16 non-null     float32
dtypes: float32(100)
memory usage: 6.4 KB
            X_0       X_1       X_2  ...      X_97      X_98      X_99
index                                ...                              
0     -0.001923 -2.371688 -1.181275  ... -1.828214 -0.370192  0.432550
1     -0.094974  0.975498  0.650450  ... -0.491931 -0.220261  0.222239
2      0.060564 -1.800755  0.053222  ...  1.636634  0.793880 -0.469869
3     -0.113704  0.680545 -0.819322  ... -0.792603  0.428237 -0.069851
4     -0.494085  0.103852  0.838905  ... -0.798744 -0.711862 -0.910029
5      2.239106  1.448612 -0.878695  ...  0.943060  0.919640  0.114037
6      0.252664  2.266127  0.422848  ...  0.449716  1.201113 -0.932854
7     -0.327352 -0.040865  0.968958  ... -0.805379 -0.948032  2.661918
8     -0.661706 -1.565012 -0.585348  ...  2.184445  1.611045 -0.465551
9     -2.741096  0.449524  0.751320  ...  0.167877 -0.980678  0.721591
10     0.184385 -1.311599 -1.105879  ... -0.067225 -2.043269 -0.231095
11    -1.061671 -0.066355 -0.726231  ...  0.154782 -1.229235 -0.078846
12     0.018249 -0.155115  0.453700  ... -0.157021 -0.635292 -0.649317
13     0.132310  0.710105  0.299615  ... -1.685779 -0.695617  0.555943
14     1.230531 -1.368154 -0.960101  ...  0.776138  0.720736 -1.447405
15    -1.279016 -0.352168 -0.152450  ... -1.965665  0.677687  0.751591

[16 rows x 100 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 16 entries, 0 to 15
Data columns (total 9 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          16 non-null     int64  
 1   Score_0        16 non-null     float64
 2   Proba_0        16 non-null     float64
 3   LogProba_0     16 non-null     float64
 4   Score_1        16 non-null     float64
 5   Proba_1        16 non-null     float64
 6   LogProba_1     16 non-null     float64
 7   Decision       16 non-null     int64  
 8   DecisionProba  16 non-null     float64
dtypes: float64(7), int64(2)
memory usage: 1.3 KB
    index   Score_0   Proba_0  ...  LogProba_1  Decision  DecisionProba
0       0  0.499379  0.730814  ...   -1.312355         0       0.730814
1       1 -0.497892  0.269771  ...   -0.314397         1       0.730229
2       2  0.500983  0.731445  ...   -1.314700         0       0.731445
3       3 -0.503328  0.267635  ...   -0.311476         1       0.732365
4       4 -0.502801  0.267842  ...   -0.311758         1       0.732158
5       5 -0.503051  0.267743  ...   -0.311624         1       0.732257
6       6 -0.504591  0.267140  ...   -0.310801         1       0.732860
7       7 -0.493124  0.271654  ...   -0.316979         1       0.728346
8       8  0.503675  0.732501  ...   -1.318640         0       0.732501
9       9 -0.499450  0.269158  ...   -0.313558         1       0.730842
10     10  0.493198  0.728376  ...   -1.303335         0       0.728376
11     11 -0.501042  0.268532  ...   -0.312701         1       0.731468
12     12  0.499283  0.730777  ...   -1.312214         0       0.730777
13     13 -0.495290  0.270798  ...   -0.315804         1       0.729202
14     14  0.502064  0.731869  ...   -1.316281         0       0.731869
15     15  0.501990  0.731840  ...   -1.316172         0       0.731840

[16 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
    index   Score_0  SQL_Proba_0  ...  Py_Proba_0  Py_Proba_1  Py_Decision
0       0  0.499379     0.730814  ...    0.730813    0.269187            0
1       1 -0.497892     0.269771  ...    0.269771    0.730229            1
2       2  0.500983     0.731445  ...    0.731446    0.268554            0
3       3 -0.503328     0.267635  ...    0.267635    0.732365            1
4       4 -0.502801     0.267842  ...    0.267841    0.732159            1
5       5 -0.503051     0.267743  ...    0.267744    0.732256            1
6       6 -0.504591     0.267140  ...    0.267141    0.732859            1
7       7 -0.493124     0.271654  ...    0.271653    0.728347            1
8       8  0.503675     0.732501  ...    0.732501    0.267499            0
9       9 -0.499450     0.269158  ...    0.269157    0.730843            1
10     10  0.493198     0.728376  ...    0.728376    0.271624            0
11     11 -0.501042     0.268532  ...    0.268531    0.731469            1
12     12  0.499283     0.730777  ...    0.730777    0.269223            0
13     13 -0.495290     0.270798  ...    0.270798    0.729202            1
14     14  0.502064     0.731869  ...    0.731870    0.268130            0
15     15  0.501990     0.731840  ...    0.731840    0.268160            0

[16 rows x 12 columns]
MLLITE_CLASS_SQL_ERROR ('BinaryClass_100_tiny', 'RidgeClassifier', 'duckdb') ('Py_Proba_0', 'SQL_Proba_0') 4.824152799072501e-07
    Py_Proba_0  SQL_Proba_0   SQL_Error_0
0     0.730813     0.730814 -1.231126e-06
1     0.269771     0.269771  1.703153e-07
2     0.731446     0.731445  6.834420e-07
3     0.267635     0.267635  5.564338e-08
4     0.267841     0.267842 -1.033412e-06
5     0.267744     0.267743  3.497803e-07
6     0.267141     0.267140  9.188392e-07
7     0.271653     0.271654 -3.764109e-07
8     0.732501     0.732501 -5.149084e-08
9     0.269157     0.269158 -6.854443e-07
10    0.728376     0.728376  2.178355e-07
11    0.268531     0.268532 -9.134356e-07
12    0.730777     0.730777  5.358924e-07
13    0.270798     0.270798  1.508119e-07
14    0.731870     0.731869  9.409584e-08
15    0.731840     0.731840 -2.506690e-07
MLLITE_CLASS_SQL_ERROR ('BinaryClass_100_tiny', 'RidgeClassifier', 'duckdb') ('Py_Proba_1', 'SQL_Proba_1') 4.690235017035249e-07
    Py_Proba_1  SQL_Proba_1   SQL_Error_1
0     0.269187     0.269186  1.171522e-06
1     0.730229     0.730229 -1.405130e-07
2     0.268554     0.268555 -6.834420e-07
3     0.732365     0.732365  3.961261e-09
4     0.732159     0.732158  9.440046e-07
5     0.732256     0.732257 -3.795826e-07
6     0.732859     0.732860 -9.188392e-07
7     0.728347     0.728346  4.360155e-07
8     0.267499     0.267499 -8.113803e-09
9     0.730843     0.730842  6.258397e-07
10    0.271624     0.271624 -2.178355e-07
11    0.731469     0.731468  9.730402e-07
12    0.269223     0.269223 -4.762878e-07
13    0.729202     0.729202 -1.806142e-07
14    0.268130     0.268131 -6.429352e-08
15    0.268160     0.268160  2.804713e-07
MLLITE_CLASS_SQL_EXECUTION_STATUS ('BinaryClass_100_tiny', 'RidgeClassifier', 'duckdb', 'Success')
    Py_Decision  SQL_Decision
0             0             0
1             1             1
2             0             0
3             1             1
4             1             1
5             1             1
6             1             1
7             1             1
8             0             0
9             1             1
10            0             0
11            1             1
12            0             0
13            1             1
14            0             0
15            0             0
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_100_tiny_option_1_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('BinaryClass_100_tiny', 'RidgeClassifier', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('BinaryClass_100_tiny', 'RidgeClassifier', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('BinaryClass_100_tiny', 'RidgeClassifier', 'sqlite')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('BinaryClass_100_tiny', 'RidgeClassifier', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 16 entries, 0 to 15
Data columns (total 100 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     16 non-null     float32
 1   X_1     16 non-null     float32
 2   X_2     16 non-null     float32
 3   X_3     16 non-null     float32
 4   X_4     16 non-null     float32
 5   X_5     16 non-null     float32
 6   X_6     16 non-null     float32
 7   X_7     16 non-null     float32
 8   X_8     16 non-null     float32
 9   X_9     16 non-null     float32
 10  X_10    16 non-null     float32
 11  X_11    16 non-null     float32
 12  X_12    16 non-null     float32
 13  X_13    16 non-null     float32
 14  X_14    16 non-null     float32
 15  X_15    16 non-null     float32
 16  X_16    16 non-null     float32
 17  X_17    16 non-null     float32
 18  X_18    16 non-null     float32
 19  X_19    16 non-null     float32
 20  X_20    16 non-null     float32
 21  X_21    16 non-null     float32
 22  X_22    16 non-null     float32
 23  X_23    16 non-null     float32
 24  X_24    16 non-null     float32
 25  X_25    16 non-null     float32
 26  X_26    16 non-null     float32
 27  X_27    16 non-null     float32
 28  X_28    16 non-null     float32
 29  X_29    16 non-null     float32
 30  X_30    16 non-null     float32
 31  X_31    16 non-null     float32
 32  X_32    16 non-null     float32
 33  X_33    16 non-null     float32
 34  X_34    16 non-null     float32
 35  X_35    16 non-null     float32
 36  X_36    16 non-null     float32
 37  X_37    16 non-null     float32
 38  X_38    16 non-null     float32
 39  X_39    16 non-null     float32
 40  X_40    16 non-null     float32
 41  X_41    16 non-null     float32
 42  X_42    16 non-null     float32
 43  X_43    16 non-null     float32
 44  X_44    16 non-null     float32
 45  X_45    16 non-null     float32
 46  X_46    16 non-null     float32
 47  X_47    16 non-null     float32
 48  X_48    16 non-null     float32
 49  X_49    16 non-null     float32
 50  X_50    16 non-null     float32
 51  X_51    16 non-null     float32
 52  X_52    16 non-null     float32
 53  X_53    16 non-null     float32
 54  X_54    16 non-null     float32
 55  X_55    16 non-null     float32
 56  X_56    16 non-null     float32
 57  X_57    16 non-null     float32
 58  X_58    16 non-null     float32
 59  X_59    16 non-null     float32
 60  X_60    16 non-null     float32
 61  X_61    16 non-null     float32
 62  X_62    16 non-null     float32
 63  X_63    16 non-null     float32
 64  X_64    16 non-null     float32
 65  X_65    16 non-null     float32
 66  X_66    16 non-null     float32
 67  X_67    16 non-null     float32
 68  X_68    16 non-null     float32
 69  X_69    16 non-null     float32
 70  X_70    16 non-null     float32
 71  X_71    16 non-null     float32
 72  X_72    16 non-null     float32
 73  X_73    16 non-null     float32
 74  X_74    16 non-null     float32
 75  X_75    16 non-null     float32
 76  X_76    16 non-null     float32
 77  X_77    16 non-null     float32
 78  X_78    16 non-null     float32
 79  X_79    16 non-null     float32
 80  X_80    16 non-null     float32
 81  X_81    16 non-null     float32
 82  X_82    16 non-null     float32
 83  X_83    16 non-null     float32
 84  X_84    16 non-null     float32
 85  X_85    16 non-null     float32
 86  X_86    16 non-null     float32
 87  X_87    16 non-null     float32
 88  X_88    16 non-null     float32
 89  X_89    16 non-null     float32
 90  X_90    16 non-null     float32
 91  X_91    16 non-null     float32
 92  X_92    16 non-null     float32
 93  X_93    16 non-null     float32
 94  X_94    16 non-null     float32
 95  X_95    16 non-null     float32
 96  X_96    16 non-null     float32
 97  X_97    16 non-null     float32
 98  X_98    16 non-null     float32
 99  X_99    16 non-null     float32
dtypes: float32(100)
memory usage: 6.4 KB
            X_0       X_1       X_2  ...      X_97      X_98      X_99
index                                ...                              
0     -0.001923 -2.371688 -1.181275  ... -1.828214 -0.370192  0.432550
1     -0.094974  0.975498  0.650450  ... -0.491931 -0.220261  0.222239
2      0.060564 -1.800755  0.053222  ...  1.636634  0.793880 -0.469869
3     -0.113704  0.680545 -0.819322  ... -0.792603  0.428237 -0.069851
4     -0.494085  0.103852  0.838905  ... -0.798744 -0.711862 -0.910029
5      2.239106  1.448612 -0.878695  ...  0.943060  0.919640  0.114037
6      0.252664  2.266127  0.422848  ...  0.449716  1.201113 -0.932854
7     -0.327352 -0.040865  0.968958  ... -0.805379 -0.948032  2.661918
8     -0.661706 -1.565012 -0.585348  ...  2.184445  1.611045 -0.465551
9     -2.741096  0.449524  0.751320  ...  0.167877 -0.980678  0.721591
10     0.184385 -1.311599 -1.105879  ... -0.067225 -2.043269 -0.231095
11    -1.061671 -0.066355 -0.726231  ...  0.154782 -1.229235 -0.078846
12     0.018249 -0.155115  0.453700  ... -0.157021 -0.635292 -0.649317
13     0.132310  0.710105  0.299615  ... -1.685779 -0.695617  0.555943
14     1.230531 -1.368154 -0.960101  ...  0.776138  0.720736 -1.447405
15    -1.279016 -0.352168 -0.152450  ... -1.965665  0.677687  0.751591

[16 rows x 100 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 16 entries, 0 to 15
Data columns (total 9 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          16 non-null     int64  
 1   Score_0        16 non-null     float64
 2   Proba_0        16 non-null     float64
 3   LogProba_0     16 non-null     float64
 4   Score_1        16 non-null     float64
 5   Proba_1        16 non-null     float64
 6   LogProba_1     16 non-null     float64
 7   Decision       16 non-null     int64  
 8   DecisionProba  16 non-null     float64
dtypes: float64(7), int64(2)
memory usage: 1.3 KB
    index   Score_0   Proba_0  ...  LogProba_1  Decision  DecisionProba
0       0  0.499379  0.730814  ...   -1.312354         0       0.730814
1       1 -0.497892  0.269771  ...   -0.314397         1       0.730229
2       2  0.500983  0.731445  ...   -1.314700         0       0.731445
3       3 -0.503328  0.267635  ...   -0.311476         1       0.732365
4       4 -0.502801  0.267842  ...   -0.311758         1       0.732158
5       5 -0.503051  0.267743  ...   -0.311624         1       0.732257
6       6 -0.504591  0.267140  ...   -0.310800         1       0.732860
7       7 -0.493124  0.271654  ...   -0.316979         1       0.728346
8       8  0.503675  0.732501  ...   -1.318641         0       0.732501
9       9 -0.499450  0.269158  ...   -0.313558         1       0.730842
10     10  0.493198  0.728376  ...   -1.303335         0       0.728376
11     11 -0.501042  0.268532  ...   -0.312701         1       0.731468
12     12  0.499283  0.730777  ...   -1.312214         0       0.730777
13     13 -0.495290  0.270798  ...   -0.315804         1       0.729202
14     14  0.502064  0.731869  ...   -1.316281         0       0.731869
15     15  0.501990  0.731840  ...   -1.316172         0       0.731840

[16 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
    index   Score_0  SQL_Proba_0  ...  Py_Proba_0  Py_Proba_1  Py_Decision
0       0  0.499379     0.730814  ...    0.730813    0.269187            0
1       1 -0.497892     0.269771  ...    0.269771    0.730229            1
2       2  0.500983     0.731445  ...    0.731446    0.268554            0
3       3 -0.503328     0.267635  ...    0.267635    0.732365            1
4       4 -0.502801     0.267842  ...    0.267841    0.732159            1
5       5 -0.503051     0.267743  ...    0.267744    0.732256            1
6       6 -0.504591     0.267140  ...    0.267141    0.732859            1
7       7 -0.493124     0.271654  ...    0.271653    0.728347            1
8       8  0.503675     0.732501  ...    0.732501    0.267499            0
9       9 -0.499450     0.269158  ...    0.269157    0.730843            1
10     10  0.493198     0.728376  ...    0.728376    0.271624            0
11     11 -0.501042     0.268532  ...    0.268531    0.731469            1
12     12  0.499283     0.730777  ...    0.730777    0.269223            0
13     13 -0.495290     0.270798  ...    0.270798    0.729202            1
14     14  0.502064     0.731869  ...    0.731870    0.268130            0
15     15  0.501990     0.731840  ...    0.731840    0.268160            0

[16 rows x 12 columns]
MLLITE_CLASS_SQL_ERROR ('BinaryClass_100_tiny', 'RidgeClassifier', 'sqlite') ('Py_Proba_0', 'SQL_Proba_0') 4.894528958764022e-07
    Py_Proba_0  SQL_Proba_0   SQL_Error_0
0     0.730813     0.730814 -1.193947e-06
1     0.269771     0.269771  1.921654e-07
2     0.731446     0.731445  6.810695e-07
3     0.267635     0.267635  3.468504e-08
4     0.267841     0.267842 -1.024931e-06
5     0.267744     0.267743  3.435989e-07
6     0.267141     0.267140  9.746833e-07
7     0.271653     0.271654 -3.325952e-07
8     0.732501     0.732501 -7.818858e-08
9     0.269157     0.269158 -6.936781e-07
10    0.728376     0.728376  2.855315e-07
11    0.268531     0.268532 -8.923537e-07
12    0.730777     0.730777  5.440280e-07
13    0.270798     0.270798  1.922850e-07
14    0.731870     0.731869  1.469529e-07
15    0.731840     0.731840 -2.205528e-07
MLLITE_CLASS_SQL_ERROR ('BinaryClass_100_tiny', 'RidgeClassifier', 'sqlite') ('Py_Proba_1', 'SQL_Proba_1') 4.776666857608802e-07
    Py_Proba_1  SQL_Proba_1   SQL_Error_1
0     0.269187     0.269186  1.134343e-06
1     0.730229     0.730229 -1.623631e-07
2     0.268554     0.268555 -6.810695e-07
3     0.732365     0.732365  2.491961e-08
4     0.732159     0.732158  9.355243e-07
5     0.732256     0.732257 -3.734012e-07
6     0.732859     0.732860 -9.746833e-07
7     0.728347     0.728346  3.921998e-07
8     0.267499     0.267499  1.858394e-08
9     0.730843     0.730842  6.340735e-07
10    0.271624     0.271624 -2.855315e-07
11    0.731469     0.731468  9.519583e-07
12    0.269223     0.269223 -4.844234e-07
13    0.729202     0.729202 -2.220873e-07
14    0.268130     0.268131 -1.171506e-07
15    0.268160     0.268160  2.503551e-07
MLLITE_CLASS_SQL_EXECUTION_STATUS ('BinaryClass_100_tiny', 'RidgeClassifier', 'sqlite', 'Success')
    Py_Decision  SQL_Decision
0             0             0
1             1             1
2             0             0
3             1             1
4             1             1
5             1             1
6             1             1
7             1             1
8             0             0
9             1             1
10            0             0
11            1             1
12            0             0
13            1             1
14            0             0
15            0             0
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
