READING_CSV census_one_hot_quantized ['data/quantized/census_one_hot_quantized.csv']
       age  workclass_Local-gov  ...  native-country_infrequent_sklearn  target
0        6                    0  ...                                  0   <=50K
1        7                    0  ...                                  0   <=50K
2        6                    0  ...                                  0   <=50K
3        7                    0  ...                                  0   <=50K
4        3                    0  ...                                 10   <=50K
...    ...                  ...  ...                                ...     ...
48837    6                    0  ...                                  0   <=50K
48838   10                    0  ...                                  0   <=50K
48839    6                    0  ...                                  0   <=50K
48840    6                    0  ...                                  0   <=50K
48841    3                    0  ...                                  0    >50K

[48842 rows x 54 columns]
MLLITE_MODEL_SET_OPTIONS MLPClassifier {"hidden_layer_sizes" : [4, 8, 6]}
MLLITE_MODEL_OPTIONS_DEFAULT MLPClassifier { "max_iter" : 32}
MLLITE_MODEL_OPTIONS_AFTER_SETTING MLPClassifier { "hidden_layer_sizes" : [4, 8, 6],  "max_iter" : 32 }
MLLITE_MODEL_JSON_AFTER_SETTING MLPClassifier None
('OPERATION_START', 'TRAINING')
[[ 6.  0.  0.  0.  0. 10.  0.  0.  1.  0.  0. 10.  0.  0.  0.  0.  8.  0.
   0.  0. 10.  0.  0.  0. 10.  0.  0.  0.  0.  0.  0.  0. 10.  0.  0.  0.
   0.  0.  0.  0.  0. 10. 10.  9.  0.  5.  0.  0.  0.  0. 10.  0.  0.]
 [ 7.  0.  0.  0. 10.  0.  0.  0.  1.  0.  0. 10.  0.  0.  0.  0.  8.  0.
  10.  0.  0.  0.  0.  0.  0.  0. 10.  0.  0.  0.  0. 10.  0.  0.  0.  0.
   0.  0.  0.  0.  0. 10. 10.  0.  0.  0.  0.  0.  0.  0. 10.  0.  0.]
 [ 6.  0. 10.  0.  0.  0.  0.  0.  6.  0.  0.  0. 10.  0.  0.  0.  3. 10.
   0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0. 10.  0. 10.  0.  0.  0.
   0.  0.  0.  0.  0. 10. 10.  0.  0.  5.  0.  0.  0.  0. 10.  0.  0.]
 [ 7.  0. 10.  0.  0.  0.  0.  0.  7. 10.  0.  0.  0.  0.  0.  0.  0.  0.
  10.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0. 10. 10.  0.  0.  0.  0.
   0.  0.  0. 10.  0.  0. 10.  0.  0.  5.  0.  0.  0.  0. 10.  0.  0.]
 [ 3.  0. 10.  0.  0.  0.  0.  0.  8.  0.  0. 10.  0.  0.  0.  0.  8.  0.
  10.  0.  0.  0.  0.  0.  0.  0.  0.  0. 10.  0.  0.  0.  0.  0.  0.  0.
  10.  0.  0. 10.  0.  0.  0.  0.  0.  5.  0.  0.  0.  0.  0.  0. 10.]] ['<=50K' '<=50K' '<=50K' '<=50K' '<=50K']
MLLITE_FIT_USING_MODEL mllite_mlp_class.MLPClassifier_ff4_OO8
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT' 1 3
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT' 2 3
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 3 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 6 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 9 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 12 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 15 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 18 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 21 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 24 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 27 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 30 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 32 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT' 3 3
('OPERATION_END_ELAPSED', 9.161, 'TRAINING')
{ "hidden_layer_sizes" : [4, 8, 6],  "max_iter" : 32 }
{ "hidden_layer_sizes" : [4, 8, 6],  "max_iter" : 32 }
{
	"metadata" : { "model" : "Rosenblatt_MLP", "version" : "2024-W14", "signature" : "ff4_OO8"},
	"options" : {  "hidden_layer_sizes" : [ 4, 8, 6 ], "activation" : "relu", "solver" : "adam", "alpha" : 0.000100, "batch_size" : null, "learning_rate" : "constant", "learning_rate_init" : 0.001000, "power_t" : 0.500000, "max_iter" : 32, "shuffle" : 1, "random_state" : 1789, "tol" : 0.000100, "verbose" : 0, "warm_start" : 0, "momentum" : 0.900000, "nesterovs_momentum" : 1, "early_stopping" : 0, "validation_fraction" : 0.100000, "beta_1" : 0.900000, "beta_2" : 0.999000, "epsilon" : 0.000000, "n_iter_no_change" : 10, "max_fun" : 15000 },
	"dataset" : { "dataset_rows" : 48842, "dataset_features" : 53 },
	"classes" : [ "<=50K", ">50K" ],
	"layers" : {
		"sizes" : [ 53, 4, 8, 6, 1 ],
		"Layer_0" : {
			"name" : "Input_Layer",
			"NbInputs" : 0,
			"NbOutputs" : 53 
		},
		"Layer_1" : {
			"name" : "Hidden_Layer_1",
			"NbInputs" : 53,
			"NbOutputs" : 4 ,
			"coeffs_00" : [ -0.244513, 0.230620, 0.041937, -0.169931 ],
			"coeffs_01" : [ -0.155584, -0.197152, -0.041820, 0.037976 ],
			"coeffs_02" : [ 0.299179, -0.058747, 0.181114, 0.175166 ],
			"coeffs_03" : [ 0.434165, -0.108860, 0.013643, 0.029449 ],
			"coeffs_04" : [ -0.165682, -0.499430, -0.248241, -0.152851 ],
			"coeffs_05" : [ 0.077284, -0.278945, -0.168561, 0.010607 ],
			"coeffs_06" : [ -0.054899, -0.200272, -0.160181, 0.201411 ],
			"coeffs_07" : [ 0.279021, -0.031873, -0.290512, 0.041835 ],
			"coeffs_08" : [ -0.139655, 0.215810, -0.371104, 0.163489 ],
			"coeffs_09" : [ -0.299459, 0.208672, -0.324533, 0.234193 ],
			"coeffs_10" : [ 0.024091, 0.037709, -0.254303, 0.317181 ],
			"coeffs_11" : [ -0.015302, -0.057291, -0.089281, 0.075497 ],
			"coeffs_12" : [ 0.132494, 0.015136, 0.177743, 0.072905 ],
			"coeffs_13" : [ 0.050718, 0.028153, -0.096903, 0.165705 ],
			"coeffs_14" : [ 0.195151, -0.012027, 0.089726, 0.179010 ],
			"coeffs_15" : [ -0.092912, 0.095177, 0.099147, 0.215631 ],
			"coeffs_16" : [ -0.315668, 0.413266, -0.285154, -0.474075 ],
			"coeffs_17" : [ 0.287941, 0.011394, -0.008906, 0.094481 ],
			"coeffs_18" : [ -0.091880, 0.373187, -0.336519, 0.020551 ],
			"coeffs_19" : [ 0.169574, -0.123406, 0.253415, -0.072174 ],
			"coeffs_20" : [ 0.227647, 0.049078, 0.157123, 0.235873 ],
			"coeffs_21" : [ -0.174983, 0.044676, -0.119558, 0.181872 ],
			"coeffs_22" : [ -0.239983, -0.008009, -0.151784, 0.061701 ],
			"coeffs_23" : [ 0.251438, 0.156491, 0.188723, -0.347705 ],
			"coeffs_24" : [ 0.292543, -0.054959, -0.260565, 0.191321 ],
			"coeffs_25" : [ -0.137199, -0.131657, -0.277354, 0.103180 ],
			"coeffs_26" : [ 0.000621, 0.185272, 0.075907, 0.235280 ],
			"coeffs_27" : [ -0.216162, -0.187688, -0.161448, 0.308606 ],
			"coeffs_28" : [ 0.170490, 0.043596, 0.352588, 0.126377 ],
			"coeffs_29" : [ 0.113852, -0.116604, -0.076893, 0.030909 ],
			"coeffs_30" : [ 0.308888, -0.040987, -0.250069, 0.252784 ],
			"coeffs_31" : [ -0.031867, -0.220658, -0.143528, 0.029302 ],
			"coeffs_32" : [ -0.088537, -0.231762, -0.332871, 0.080643 ],
			"coeffs_33" : [ 0.229620, -0.464978, -0.299826, -0.017064 ],
			"coeffs_34" : [ -0.234423, -0.286851, -0.119534, 0.234456 ],
			"coeffs_35" : [ -0.089579, -0.271082, -0.473755, 0.112498 ],
			"coeffs_36" : [ -0.313003, -0.076479, 0.182082, -0.118193 ],
			"coeffs_37" : [ -0.150258, -0.214880, -0.001841, 0.113496 ],
			"coeffs_38" : [ -0.121245, -0.045493, 0.195905, 0.097720 ],
			"coeffs_39" : [ -0.136465, -0.092111, -0.180403, 0.132570 ],
			"coeffs_40" : [ 0.142414, 0.082354, 0.340467, 0.193798 ],
			"coeffs_41" : [ -0.165322, 0.075452, -0.005498, 0.255111 ],
			"coeffs_42" : [ -0.207153, 0.049476, -0.052158, -0.122084 ],
			"coeffs_43" : [ -0.152735, 0.356457, 0.065539, -0.229751 ],
			"coeffs_44" : [ 0.141347, 0.350268, -0.207713, -0.034517 ],
			"coeffs_45" : [ 0.092316, 0.376012, -0.124675, -0.101657 ],
			"coeffs_46" : [ 0.104297, -0.112721, -0.433274, 0.207648 ],
			"coeffs_47" : [ 0.523087, -0.188063, -0.280188, 0.341794 ],
			"coeffs_48" : [ 0.052975, -0.017336, 0.081577, 0.272210 ],
			"coeffs_49" : [ -0.547939, -0.319328, -0.453114, 0.117861 ],
			"coeffs_50" : [ -0.053845, -0.034086, -0.417821, 0.301499 ],
			"coeffs_51" : [ 0.165345, -0.098320, -0.361336, 0.250524 ],
			"coeffs_52" : [ -0.070946, -0.096578, 0.027422, 0.271414 ],
			"intercepts" : [ 0.145442, -0.270508, -0.187615, -0.095527 ]
		},
		"Layer_2" : {
			"name" : "Hidden_Layer_2",
			"NbInputs" : 4,
			"NbOutputs" : 8 ,
			"coeffs_0" : [ -0.196906, -0.119459, 0.105650, -0.058220, 0.191570, -0.750756, 0.451687, -0.036164 ],
			"coeffs_1" : [ -0.021751, 0.271347, 0.324404, 0.248387, -0.631406, 0.396888, 0.559123, 0.593180 ],
			"coeffs_2" : [ 0.029557, 0.848071, 0.588695, 0.035696, -0.100280, 0.735490, -0.678095, -0.730957 ],
			"coeffs_3" : [ -0.054715, 0.003883, 0.172774, 0.603198, 0.220194, -0.236918, -0.538333, -0.327899 ],
			"intercepts" : [ 0.430511, 0.135836, -0.828048, 0.087317, 0.432832, -0.458272, 0.111746, -0.281636 ]
		},
		"Layer_3" : {
			"name" : "Hidden_Layer_3",
			"NbInputs" : 8,
			"NbOutputs" : 6 ,
			"coeffs_0" : [ 0.103509, -0.131484, -0.142023, 0.652425, 0.176164, 0.621956 ],
			"coeffs_1" : [ 0.417244, 0.492706, 0.165672, -0.411434, 0.016530, -0.414656 ],
			"coeffs_2" : [ 0.269600, 0.102586, 0.675021, 0.292638, 0.591119, -0.400874 ],
			"coeffs_3" : [ 0.138401, 0.375419, 0.236170, 0.594661, -0.431578, 0.416879 ],
			"coeffs_4" : [ 0.150660, 0.812548, -0.184947, 0.402004, 0.170310, 0.503402 ],
			"coeffs_5" : [ 0.421464, -0.667950, 0.256655, 0.548807, 0.090796, 0.488492 ],
			"coeffs_6" : [ -0.148973, 0.141720, -0.384859, 0.099195, -0.598420, 0.285143 ],
			"coeffs_7" : [ 0.049275, -0.027860, 0.350697, -0.619660, -0.438760, -0.245822 ],
			"intercepts" : [ -0.623734, 0.445974, -0.209186, -0.011814, -0.163896, 0.590567 ]
		},
		"Layer_4" : {
			"name" : "Output_Layer",
			"NbInputs" : 6,
			"NbOutputs" : 1 ,
			"coeffs_0" : [ 0.498875 ],
			"coeffs_1" : [ -0.411618 ],
			"coeffs_2" : [ 0.483308 ],
			"coeffs_3" : [ -0.748914 ],
			"coeffs_4" : [ 0.899171 ],
			"coeffs_5" : [ -0.186876 ],
			"intercepts" : [ 0.039039 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/MLPClassifier/mllite.MLPClassifier_census_one_hot_quantized_option_1.json'

RELOADING_MODEL_FROM_JSON_START ('census_one_hot_quantized', 'MLPClassifier')
MLLITE_MODEL_SET_OPTIONS MLPClassifier {"hidden_layer_sizes" : [4, 8, 6]}
MLLITE_MODEL_OPTIONS_DEFAULT MLPClassifier { "max_iter" : 32}
MLLITE_MODEL_OPTIONS_AFTER_SETTING MLPClassifier { "hidden_layer_sizes" : [4, 8, 6],  "max_iter" : 32 }
MLLITE_MODEL_JSON_AFTER_SETTING MLPClassifier None
MLLITE_RELOADING_MODEL mllite_mlp_class.MLPClassifier_ff4_OO8
{
	"metadata" : { "model" : "Rosenblatt_MLP", "version" : "2024-W14", "signature" : "ff4_OO8"},
	"options" : {  "hidden_layer_sizes" : [ 4, 8, 6 ], "activation" : "relu", "solver" : "adam", "alpha" : 0.000100, "batch_size" : null, "learning_rate" : "constant", "learning_rate_init" : 0.001000, "power_t" : 0.500000, "max_iter" : 32, "shuffle" : 1, "random_state" : 1789, "tol" : 0.000100, "verbose" : 0, "warm_start" : 0, "momentum" : 0.900000, "nesterovs_momentum" : 1, "early_stopping" : 0, "validation_fraction" : 0.100000, "beta_1" : 0.900000, "beta_2" : 0.999000, "epsilon" : 0.000000, "n_iter_no_change" : 10, "max_fun" : 15000 },
	"dataset" : { "dataset_rows" : 48842, "dataset_features" : 53 },
	"classes" : [ "<=50K", ">50K" ],
	"layers" : {
		"sizes" : [ 53, 4, 8, 6, 1 ],
		"Layer_0" : {
			"name" : "Input_Layer",
			"NbInputs" : 0,
			"NbOutputs" : 53 
		},
		"Layer_1" : {
			"name" : "Hidden_Layer_1",
			"NbInputs" : 53,
			"NbOutputs" : 4 ,
			"coeffs_00" : [ -0.244513, 0.230620, 0.041937, -0.169931 ],
			"coeffs_01" : [ -0.155584, -0.197152, -0.041820, 0.037976 ],
			"coeffs_02" : [ 0.299179, -0.058747, 0.181114, 0.175166 ],
			"coeffs_03" : [ 0.434165, -0.108860, 0.013643, 0.029449 ],
			"coeffs_04" : [ -0.165682, -0.499430, -0.248241, -0.152851 ],
			"coeffs_05" : [ 0.077284, -0.278945, -0.168561, 0.010607 ],
			"coeffs_06" : [ -0.054899, -0.200272, -0.160181, 0.201411 ],
			"coeffs_07" : [ 0.279021, -0.031873, -0.290512, 0.041835 ],
			"coeffs_08" : [ -0.139655, 0.215810, -0.371104, 0.163489 ],
			"coeffs_09" : [ -0.299459, 0.208672, -0.324533, 0.234193 ],
			"coeffs_10" : [ 0.024091, 0.037709, -0.254303, 0.317181 ],
			"coeffs_11" : [ -0.015302, -0.057291, -0.089281, 0.075497 ],
			"coeffs_12" : [ 0.132494, 0.015136, 0.177743, 0.072905 ],
			"coeffs_13" : [ 0.050718, 0.028153, -0.096903, 0.165705 ],
			"coeffs_14" : [ 0.195151, -0.012027, 0.089726, 0.179010 ],
			"coeffs_15" : [ -0.092912, 0.095177, 0.099147, 0.215631 ],
			"coeffs_16" : [ -0.315668, 0.413266, -0.285154, -0.474075 ],
			"coeffs_17" : [ 0.287941, 0.011394, -0.008906, 0.094481 ],
			"coeffs_18" : [ -0.091880, 0.373187, -0.336519, 0.020551 ],
			"coeffs_19" : [ 0.169574, -0.123406, 0.253415, -0.072174 ],
			"coeffs_20" : [ 0.227647, 0.049078, 0.157123, 0.235873 ],
			"coeffs_21" : [ -0.174983, 0.044676, -0.119558, 0.181872 ],
			"coeffs_22" : [ -0.239983, -0.008009, -0.151784, 0.061701 ],
			"coeffs_23" : [ 0.251438, 0.156491, 0.188723, -0.347705 ],
			"coeffs_24" : [ 0.292543, -0.054959, -0.260565, 0.191321 ],
			"coeffs_25" : [ -0.137199, -0.131657, -0.277354, 0.103180 ],
			"coeffs_26" : [ 0.000621, 0.185272, 0.075907, 0.235280 ],
			"coeffs_27" : [ -0.216162, -0.187688, -0.161448, 0.308606 ],
			"coeffs_28" : [ 0.170490, 0.043596, 0.352588, 0.126377 ],
			"coeffs_29" : [ 0.113852, -0.116604, -0.076893, 0.030909 ],
			"coeffs_30" : [ 0.308888, -0.040987, -0.250069, 0.252784 ],
			"coeffs_31" : [ -0.031867, -0.220658, -0.143528, 0.029302 ],
			"coeffs_32" : [ -0.088537, -0.231762, -0.332871, 0.080643 ],
			"coeffs_33" : [ 0.229620, -0.464978, -0.299826, -0.017064 ],
			"coeffs_34" : [ -0.234423, -0.286851, -0.119534, 0.234456 ],
			"coeffs_35" : [ -0.089579, -0.271082, -0.473755, 0.112498 ],
			"coeffs_36" : [ -0.313003, -0.076479, 0.182082, -0.118193 ],
			"coeffs_37" : [ -0.150258, -0.214880, -0.001841, 0.113496 ],
			"coeffs_38" : [ -0.121245, -0.045493, 0.195905, 0.097720 ],
			"coeffs_39" : [ -0.136465, -0.092111, -0.180403, 0.132570 ],
			"coeffs_40" : [ 0.142414, 0.082354, 0.340467, 0.193798 ],
			"coeffs_41" : [ -0.165322, 0.075452, -0.005498, 0.255111 ],
			"coeffs_42" : [ -0.207153, 0.049476, -0.052158, -0.122084 ],
			"coeffs_43" : [ -0.152735, 0.356457, 0.065539, -0.229751 ],
			"coeffs_44" : [ 0.141347, 0.350268, -0.207713, -0.034517 ],
			"coeffs_45" : [ 0.092316, 0.376012, -0.124675, -0.101657 ],
			"coeffs_46" : [ 0.104297, -0.112721, -0.433274, 0.207648 ],
			"coeffs_47" : [ 0.523087, -0.188063, -0.280188, 0.341794 ],
			"coeffs_48" : [ 0.052975, -0.017336, 0.081577, 0.272210 ],
			"coeffs_49" : [ -0.547939, -0.319328, -0.453114, 0.117861 ],
			"coeffs_50" : [ -0.053845, -0.034086, -0.417821, 0.301499 ],
			"coeffs_51" : [ 0.165345, -0.098320, -0.361336, 0.250524 ],
			"coeffs_52" : [ -0.070946, -0.096578, 0.027422, 0.271414 ],
			"intercepts" : [ 0.145442, -0.270508, -0.187615, -0.095527 ]
		},
		"Layer_2" : {
			"name" : "Hidden_Layer_2",
			"NbInputs" : 4,
			"NbOutputs" : 8 ,
			"coeffs_0" : [ -0.196906, -0.119459, 0.105650, -0.058220, 0.191570, -0.750756, 0.451687, -0.036164 ],
			"coeffs_1" : [ -0.021751, 0.271347, 0.324404, 0.248387, -0.631406, 0.396888, 0.559123, 0.593180 ],
			"coeffs_2" : [ 0.029557, 0.848071, 0.588695, 0.035696, -0.100280, 0.735490, -0.678095, -0.730957 ],
			"coeffs_3" : [ -0.054715, 0.003883, 0.172774, 0.603198, 0.220194, -0.236918, -0.538333, -0.327899 ],
			"intercepts" : [ 0.430511, 0.135836, -0.828048, 0.087317, 0.432832, -0.458272, 0.111746, -0.281636 ]
		},
		"Layer_3" : {
			"name" : "Hidden_Layer_3",
			"NbInputs" : 8,
			"NbOutputs" : 6 ,
			"coeffs_0" : [ 0.103509, -0.131484, -0.142023, 0.652425, 0.176164, 0.621956 ],
			"coeffs_1" : [ 0.417244, 0.492706, 0.165672, -0.411434, 0.016530, -0.414656 ],
			"coeffs_2" : [ 0.269600, 0.102586, 0.675021, 0.292638, 0.591119, -0.400874 ],
			"coeffs_3" : [ 0.138401, 0.375419, 0.236170, 0.594661, -0.431578, 0.416879 ],
			"coeffs_4" : [ 0.150660, 0.812548, -0.184947, 0.402004, 0.170310, 0.503402 ],
			"coeffs_5" : [ 0.421464, -0.667950, 0.256655, 0.548807, 0.090796, 0.488492 ],
			"coeffs_6" : [ -0.148973, 0.141720, -0.384859, 0.099195, -0.598420, 0.285143 ],
			"coeffs_7" : [ 0.049275, -0.027860, 0.350697, -0.619660, -0.438760, -0.245822 ],
			"intercepts" : [ -0.623734, 0.445974, -0.209186, -0.011814, -0.163896, 0.590567 ]
		},
		"Layer_4" : {
			"name" : "Output_Layer",
			"NbInputs" : 6,
			"NbOutputs" : 1 ,
			"coeffs_0" : [ 0.498875 ],
			"coeffs_1" : [ -0.411618 ],
			"coeffs_2" : [ 0.483308 ],
			"coeffs_3" : [ -0.748914 ],
			"coeffs_4" : [ 0.899171 ],
			"coeffs_5" : [ -0.186876 ],
			"intercepts" : [ 0.039039 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ "<=50K", ">50K" ],
	"dataset" : 	{
		"dataset_features" : 53,
		"dataset_rows" : 48842
	},
	"layers" : 	{
		"Layer_0" : 	{
			"NbInputs" : 0,
			"NbOutputs" : 53,
			"name" : "Input_Layer"
		},
		"Layer_1" : 	{
			"NbInputs" : 53,
			"NbOutputs" : 4,
			"coeffs_00" : [ -0.244513, 0.23062, 0.041937, -0.169931 ],
			"coeffs_01" : [ -0.155584, -0.197152, -0.04182, 0.037976 ],
			"coeffs_02" : [ 0.299179, -0.058747, 0.181114, 0.175166 ],
			"coeffs_03" : [ 0.434165, -0.10886, 0.013643, 0.029449 ],
			"coeffs_04" : [ -0.165682, -0.49943, -0.248241, -0.152851 ],
			"coeffs_05" : [ 0.077284, -0.278945, -0.168561, 0.010607 ],
			"coeffs_06" : [ -0.054899, -0.200272, -0.160181, 0.201411 ],
			"coeffs_07" : [ 0.279021, -0.031873, -0.290512, 0.041835 ],
			"coeffs_08" : [ -0.139655, 0.21581, -0.371104, 0.163489 ],
			"coeffs_09" : [ -0.299459, 0.208672, -0.324533, 0.234193 ],
			"coeffs_10" : [ 0.024091, 0.037709, -0.254303, 0.317181 ],
			"coeffs_11" : [ -0.015302, -0.057291, -0.089281, 0.075497 ],
			"coeffs_12" : [ 0.132494, 0.015136, 0.177743, 0.072905 ],
			"coeffs_13" : [ 0.050718, 0.028153, -0.096903, 0.165705 ],
			"coeffs_14" : [ 0.195151, -0.012027, 0.089726, 0.17901 ],
			"coeffs_15" : [ -0.092912, 0.095177, 0.099147, 0.215631 ],
			"coeffs_16" : [ -0.315668, 0.413266, -0.285154, -0.474075 ],
			"coeffs_17" : [ 0.287941, 0.011394, -0.008906, 0.094481 ],
			"coeffs_18" : [ -0.09188, 0.373187, -0.336519, 0.020551 ],
			"coeffs_19" : [ 0.169574, -0.123406, 0.253415, -0.072174 ],
			"coeffs_20" : [ 0.227647, 0.049078, 0.157123, 0.235873 ],
			"coeffs_21" : [ -0.174983, 0.044676, -0.119558, 0.181872 ],
			"coeffs_22" : [ -0.239983, -0.008009, -0.151784, 0.061701 ],
			"coeffs_23" : [ 0.251438, 0.156491, 0.188723, -0.347705 ],
			"coeffs_24" : [ 0.292543, -0.054959, -0.260565, 0.191321 ],
			"coeffs_25" : [ -0.137199, -0.131657, -0.277354, 0.10318 ],
			"coeffs_26" : [ 0.000621, 0.185272, 0.075907, 0.23528 ],
			"coeffs_27" : [ -0.216162, -0.187688, -0.161448, 0.308606 ],
			"coeffs_28" : [ 0.17049, 0.043596, 0.352588, 0.126377 ],
			"coeffs_29" : [ 0.113852, -0.116604, -0.076893, 0.030909 ],
			"coeffs_30" : [ 0.308888, -0.040987, -0.250069, 0.252784 ],
			"coeffs_31" : [ -0.031867, -0.220658, -0.143528, 0.029302 ],
			"coeffs_32" : [ -0.088537, -0.231762, -0.332871, 0.080643 ],
			"coeffs_33" : [ 0.22962, -0.464978, -0.299826, -0.017064 ],
			"coeffs_34" : [ -0.234423, -0.286851, -0.119534, 0.234456 ],
			"coeffs_35" : [ -0.089579, -0.271082, -0.473755, 0.112498 ],
			"coeffs_36" : [ -0.313003, -0.076479, 0.182082, -0.118193 ],
			"coeffs_37" : [ -0.150258, -0.21488, -0.001841, 0.113496 ],
			"coeffs_38" : [ -0.121245, -0.045493, 0.195905, 0.09772 ],
			"coeffs_39" : [ -0.136465, -0.092111, -0.180403, 0.13257 ],
			"coeffs_40" : [ 0.142414, 0.082354, 0.340467, 0.193798 ],
			"coeffs_41" : [ -0.165322, 0.075452, -0.005498, 0.255111 ],
			"coeffs_42" : [ -0.207153, 0.049476, -0.052158, -0.122084 ],
			"coeffs_43" : [ -0.152735, 0.356457, 0.065539, -0.229751 ],
			"coeffs_44" : [ 0.141347, 0.350268, -0.207713, -0.034517 ],
			"coeffs_45" : [ 0.092316, 0.376012, -0.124675, -0.101657 ],
			"coeffs_46" : [ 0.104297, -0.112721, -0.433274, 0.207648 ],
			"coeffs_47" : [ 0.523087, -0.188063, -0.280188, 0.341794 ],
			"coeffs_48" : [ 0.052975, -0.017336, 0.081577, 0.27221 ],
			"coeffs_49" : [ -0.547939, -0.319328, -0.453114, 0.117861 ],
			"coeffs_50" : [ -0.053845, -0.034086, -0.417821, 0.301499 ],
			"coeffs_51" : [ 0.165345, -0.09832, -0.361336, 0.250524 ],
			"coeffs_52" : [ -0.070946, -0.096578, 0.027422, 0.271414 ],
			"intercepts" : [ 0.145442, -0.270508, -0.187615, -0.095527 ],
			"name" : "Hidden_Layer_1"
		},
		"Layer_2" : 	{
			"NbInputs" : 4,
			"NbOutputs" : 8,
			"coeffs_0" : [ -0.196906, -0.119459, 0.10565, -0.05822, 0.19157, -0.750756, 0.451687, -0.036164 ],
			"coeffs_1" : [ -0.021751, 0.271347, 0.324404, 0.248387, -0.631406, 0.396888, 0.559123, 0.59318 ],
			"coeffs_2" : [ 0.029557, 0.848071, 0.588695, 0.035696, -0.10028, 0.73549, -0.678095, -0.730957 ],
			"coeffs_3" : [ -0.054715, 0.003883, 0.172774, 0.603198, 0.220194, -0.236918, -0.538333, -0.327899 ],
			"intercepts" : [ 0.430511, 0.135836, -0.828048, 0.087317, 0.432832, -0.458272, 0.111746, -0.281636 ],
			"name" : "Hidden_Layer_2"
		},
		"Layer_3" : 	{
			"NbInputs" : 8,
			"NbOutputs" : 6,
			"coeffs_0" : [ 0.103509, -0.131484, -0.142023, 0.652425, 0.176164, 0.621956 ],
			"coeffs_1" : [ 0.417244, 0.492706, 0.165672, -0.411434, 0.01653, -0.414656 ],
			"coeffs_2" : [ 0.2696, 0.102586, 0.675021, 0.292638, 0.591119, -0.400874 ],
			"coeffs_3" : [ 0.138401, 0.375419, 0.23617, 0.594661, -0.431578, 0.416879 ],
			"coeffs_4" : [ 0.15066, 0.812548, -0.184947, 0.402004, 0.17031, 0.503402 ],
			"coeffs_5" : [ 0.421464, -0.66795, 0.256655, 0.548807, 0.090796, 0.488492 ],
			"coeffs_6" : [ -0.148973, 0.14172, -0.384859, 0.099195, -0.59842, 0.285143 ],
			"coeffs_7" : [ 0.049275, -0.02786, 0.350697, -0.61966, -0.43876, -0.245822 ],
			"intercepts" : [ -0.623734, 0.445974, -0.209186, -0.011814, -0.163896, 0.590567 ],
			"name" : "Hidden_Layer_3"
		},
		"Layer_4" : 	{
			"NbInputs" : 6,
			"NbOutputs" : 1,
			"coeffs_0" : [ 0.498875 ],
			"coeffs_1" : [ -0.411618 ],
			"coeffs_2" : [ 0.483308 ],
			"coeffs_3" : [ -0.748914 ],
			"coeffs_4" : [ 0.899171 ],
			"coeffs_5" : [ -0.186876 ],
			"intercepts" : [ 0.039039 ],
			"name" : "Output_Layer"
		},
		"sizes" : [ 53, 4, 8, 6, 1 ]
	},
	"metadata" :  { "model" : "Rosenblatt_MLP", "signature" : "ff4_OO8", "version" : "2024-W14" },
	"options" :  { "activation" : "relu", "alpha" : 0.0001, "batch_size" : null, "beta_1" : 0.9, "beta_2" : 0.999, "early_stopping" : 0, "epsilon" : 0.0, "hidden_layer_sizes" : [ 4, 8, 6 ], "learning_rate" : "constant", "learning_rate_init" : 0.001, "max_fun" : 15000, "max_iter" : 32, "momentum" : 0.9, "n_iter_no_change" : 10, "nesterovs_momentum" : 1, "power_t" : 0.5, "random_state" : 1789, "shuffle" : 1, "solver" : "adam", "tol" : 0.0001, "validation_fraction" : 0.1, "verbose" : 0, "warm_start" : 0 }
}
BEAUTIFIED_JSON_END
RELOADING_MODEL_FROM_JSON_END ('census_one_hot_quantized', 'MLPClassifier')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.099, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.098, 'PREDICT')
[[0.6296 0.3704]
 [0.6475 0.3525]
 [0.9665 0.0335]
 ...
 [0.2521 0.7479]
 [0.6356 0.3644]
 [0.2593 0.7407]]
(48842, 2)
(48842,) float32
MODEL_PERFS {'class_name': 'mllite.MLPClassifier', 'model_name': 'MLPClassifier', 'options': '{"hidden_layer_sizes" : [4, 8, 6]}', 'dataset': 'census_one_hot_quantized', 'size': 48842, 'accuracy': 0.8443757421890995, 'auc': 0.9004527607038001}
WRITING_PERF_CODE 'logs/auto_tests/classification/MLPClassifier/mllite.MLPClassifier_census_one_hot_quantized_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.MLPClassifier', 'model_name': 'MLPClassifier', 'options': '{"hidden_layer_sizes" : [4, 8, 6]}', 'dataset': 'census_one_hot_quantized', 'training_time_in_sec': 9.16, 'prediction_time_in_sec': 0.098}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 0 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 1 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 2 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 3 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 4 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 5 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 6 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 7 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 8 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 9 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 10 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 11 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 12 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 13 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 14 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 15 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 16 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 17 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 18 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 19 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 20 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 21 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 22 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 23 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 24 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 25 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 26 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 27 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 28 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 29 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 30 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 31 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 32 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 33 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 34 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 35 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 36 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 37 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 38 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 39 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 40 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 41 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 42 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 43 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 44 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 45 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 46 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 47 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 48 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 49 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 50 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 51 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 52 53
{
   "Contributions" : {
      "X_0" : [ 0.002213, -0.002213 ],
      "X_1" : [ -0.003638, 0.003638 ],
      "X_2" : [ 0.010905, -0.010905 ],
      "X_3" : [ 0.003171, -0.003171 ],
      "X_4" : [ -0.001312, 0.001312 ],
      "X_5" : [ 0.000287, -0.000287 ],
      "X_6" : [ -0.002268, 0.002268 ],
      "X_7" : [ -0.003101, 0.003101 ],
      "X_8" : [ -0.002088, 0.002088 ],
      "X_9" : [ -0.000032, 0.000032 ],
      "X_10" : [ 0.004275, -0.004275 ],
      "X_11" : [ 0.002412, -0.002412 ],
      "X_12" : [ -0.000929, 0.000929 ],
      "X_13" : [ -0.005120, 0.005120 ],
      "X_14" : [ 0.003254, -0.003254 ],
      "X_15" : [ 0.003324, -0.003324 ],
      "X_16" : [ -0.001122, 0.001122 ],
      "X_17" : [ 0.001691, -0.001691 ],
      "X_18" : [ -0.021759, 0.021759 ],
      "X_19" : [ 0.000177, -0.000177 ],
      "X_20" : [ -0.014635, 0.014635 ],
      "X_21" : [ -0.000634, 0.000634 ],
      "X_22" : [ 0.000515, -0.000515 ],
      "X_23" : [ -0.000134, 0.000134 ],
      "X_24" : [ -0.006374, 0.006374 ],
      "X_25" : [ 0.007110, -0.007110 ],
      "X_26" : [ 0.000361, -0.000361 ],
      "X_27" : [ 0.007768, -0.007768 ],
      "X_28" : [ -0.001140, 0.001140 ],
      "X_29" : [ -0.002217, 0.002217 ],
      "X_30" : [ -0.000819, 0.000819 ],
      "X_31" : [ 0.012402, -0.012402 ],
      "X_32" : [ 0.001820, -0.001820 ],
      "X_33" : [ -0.005434, 0.005434 ],
      "X_34" : [ -0.015022, 0.015022 ],
      "X_35" : [ -0.000391, 0.000391 ],
      "X_36" : [ -0.000976, 0.000976 ],
      "X_37" : [ 0.000836, -0.000836 ],
      "X_38" : [ 0.001004, -0.001004 ],
      "X_39" : [ -0.001518, 0.001518 ],
      "X_40" : [ 0.000192, -0.000192 ],
      "X_41" : [ -0.000265, 0.000265 ],
      "X_42" : [ 0.006557, -0.006557 ],
      "X_43" : [ 0.014308, -0.014308 ],
      "X_44" : [ -0.002241, 0.002241 ],
      "X_45" : [ -0.019874, 0.019874 ],
      "X_46" : [ 0.000501, -0.000501 ],
      "X_47" : [ 0.002946, -0.002946 ],
      "X_48" : [ 0.000550, -0.000550 ],
      "X_49" : [ 0.000483, -0.000483 ],
      "X_50" : [ -0.007333, 0.007333 ],
      "X_51" : [ -0.000624, 0.000624 ],
      "X_52" : [ 0.005954, -0.005954 ]   
   },
   "Most_Contributive_Features_By_Class" : {
      "class_0" : [ 18, 45, 34, 20, 43, 31, 2, 27, 50, 25 ],
      "class_1" : [ 18, 45, 34, 20, 43, 31, 2, 27, 50, 25 ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/classification/MLPClassifier/mllite.MLPClassifier_census_one_hot_quantized_option_1_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/classification/MLPClassifier/mllite.MLPClassifier_census_one_hot_quantized_option_1_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('census_one_hot_quantized', 'MLPClassifier', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('census_one_hot_quantized', 'MLPClassifier', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('census_one_hot_quantized', 'MLPClassifier', 'duckdb')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('census_one_hot_quantized', 'MLPClassifier', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 48842 entries, 0 to 48841
Data columns (total 53 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     48842 non-null  float32
 1   X_1     48842 non-null  float32
 2   X_2     48842 non-null  float32
 3   X_3     48842 non-null  float32
 4   X_4     48842 non-null  float32
 5   X_5     48842 non-null  float32
 6   X_6     48842 non-null  float32
 7   X_7     48842 non-null  float32
 8   X_8     48842 non-null  float32
 9   X_9     48842 non-null  float32
 10  X_10    48842 non-null  float32
 11  X_11    48842 non-null  float32
 12  X_12    48842 non-null  float32
 13  X_13    48842 non-null  float32
 14  X_14    48842 non-null  float32
 15  X_15    48842 non-null  float32
 16  X_16    48842 non-null  float32
 17  X_17    48842 non-null  float32
 18  X_18    48842 non-null  float32
 19  X_19    48842 non-null  float32
 20  X_20    48842 non-null  float32
 21  X_21    48842 non-null  float32
 22  X_22    48842 non-null  float32
 23  X_23    48842 non-null  float32
 24  X_24    48842 non-null  float32
 25  X_25    48842 non-null  float32
 26  X_26    48842 non-null  float32
 27  X_27    48842 non-null  float32
 28  X_28    48842 non-null  float32
 29  X_29    48842 non-null  float32
 30  X_30    48842 non-null  float32
 31  X_31    48842 non-null  float32
 32  X_32    48842 non-null  float32
 33  X_33    48842 non-null  float32
 34  X_34    48842 non-null  float32
 35  X_35    48842 non-null  float32
 36  X_36    48842 non-null  float32
 37  X_37    48842 non-null  float32
 38  X_38    48842 non-null  float32
 39  X_39    48842 non-null  float32
 40  X_40    48842 non-null  float32
 41  X_41    48842 non-null  float32
 42  X_42    48842 non-null  float32
 43  X_43    48842 non-null  float32
 44  X_44    48842 non-null  float32
 45  X_45    48842 non-null  float32
 46  X_46    48842 non-null  float32
 47  X_47    48842 non-null  float32
 48  X_48    48842 non-null  float32
 49  X_49    48842 non-null  float32
 50  X_50    48842 non-null  float32
 51  X_51    48842 non-null  float32
 52  X_52    48842 non-null  float32
dtypes: float32(53)
memory usage: 10.2 MB
        X_0  X_1   X_2   X_3   X_4   X_5  ...  X_47  X_48  X_49  X_50  X_51  X_52
index                                     ...                                    
0       6.0  0.0   0.0   0.0   0.0  10.0  ...   0.0   0.0   0.0  10.0   0.0   0.0
1       7.0  0.0   0.0   0.0  10.0   0.0  ...   0.0   0.0   0.0  10.0   0.0   0.0
2       6.0  0.0  10.0   0.0   0.0   0.0  ...   0.0   0.0   0.0  10.0   0.0   0.0
3       7.0  0.0  10.0   0.0   0.0   0.0  ...   0.0   0.0   0.0  10.0   0.0   0.0
4       3.0  0.0  10.0   0.0   0.0   0.0  ...   0.0   0.0   0.0   0.0   0.0  10.0
...     ...  ...   ...   ...   ...   ...  ...   ...   ...   ...   ...   ...   ...
48837   6.0  0.0  10.0   0.0   0.0   0.0  ...   0.0   0.0   0.0  10.0   0.0   0.0
48838  10.0  0.0   0.0   0.0   0.0   0.0  ...   0.0   0.0   0.0  10.0   0.0   0.0
48839   6.0  0.0  10.0   0.0   0.0   0.0  ...   0.0   0.0   0.0  10.0   0.0   0.0
48840   6.0  0.0  10.0   0.0   0.0   0.0  ...   0.0   0.0   0.0  10.0   0.0   0.0
48841   3.0  0.0   0.0  10.0   0.0   0.0  ...   0.0   0.0   0.0  10.0   0.0   0.0

[48842 rows x 53 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 48842 entries, 0 to 48841
Data columns (total 9 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          48842 non-null  int64  
 1   Score_0        48842 non-null  float64
 2   Proba_0        48842 non-null  float64
 3   LogProba_0     48842 non-null  float64
 4   Score_1        48842 non-null  float64
 5   Proba_1        48842 non-null  float64
 6   LogProba_1     48842 non-null  float64
 7   Decision       48842 non-null  int64  
 8   DecisionProba  48842 non-null  float64
dtypes: float64(7), int64(2)
memory usage: 3.4 MB
       index   Score_0   Proba_0  ...  LogProba_1  Decision  DecisionProba
0          0  0.265311  0.629628  ...   -0.993248         0       0.629628
1          1  0.303930  0.647452  ...   -1.042569         0       0.647452
2          2  1.680999  0.966496  ...   -3.396076         0       0.966496
3          3  1.146871  0.908357  ...   -2.389859         0       0.908357
4          4 -0.155094  0.423069  ...   -0.550032         1       0.576931
...      ...       ...       ...  ...         ...       ...            ...
48837  48837  0.827039  0.839442  ...   -1.829097         0       0.839442
48838  48838  1.941181  0.979814  ...   -3.902754         0       0.979814
48839  48839 -0.543754  0.252088  ...   -0.290470         1       0.747912
48840  48840  0.278116  0.635580  ...   -1.009449         0       0.635580
48841  48841 -0.524697  0.259341  ...   -0.300216         1       0.740659

[48842 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
       index   Score_0  SQL_Proba_0  ...  Py_Proba_0  Py_Proba_1  Py_Decision
48826  48826 -0.548676     0.250236  ...    0.250238    0.749762         >50K
48827  48827  2.364119     0.991235  ...    0.991235    0.008764        <=50K
48828  48828  2.059088     0.983986  ...    0.983986    0.016014        <=50K
48829  48829  0.265859     0.629884  ...    0.629886    0.370114        <=50K
48830  48830  0.911133     0.860838  ...    0.860839    0.139161        <=50K
48831  48831  0.378912     0.680881  ...    0.680883    0.319117        <=50K
48832  48832 -0.033855     0.483079  ...    0.483081    0.516919         >50K
48833  48833  0.685055     0.797398  ...    0.797400    0.202600        <=50K
48834  48834  3.630291     0.999298  ...    0.999298    0.000702        <=50K
48835  48835  1.059053     0.892651  ...    0.892651    0.107349        <=50K
48836  48836  1.329199     0.934527  ...    0.934527    0.065473        <=50K
48837  48837  0.827039     0.839442  ...    0.839442    0.160558        <=50K
48838  48838  1.941181     0.979814  ...    0.979814    0.020186        <=50K
48839  48839 -0.543754     0.252088  ...    0.252090    0.747910         >50K
48840  48840  0.278116     0.635580  ...    0.635581    0.364419        <=50K
48841  48841 -0.524697     0.259341  ...    0.259343    0.740657         >50K

[16 rows x 12 columns]
MLLITE_CLASS_SQL_ERROR ('census_one_hot_quantized', 'MLPClassifier', 'duckdb') ('Py_Proba_0', 'SQL_Proba_0') 9.424403243405113e-07
       Py_Proba_0  SQL_Proba_0   SQL_Error_0
48826    0.250238     0.250236  1.702600e-06
48827    0.991235     0.991235  3.843643e-08
48828    0.983986     0.983986  1.570818e-09
48829    0.629886     0.629884  2.209058e-06
48830    0.860839     0.860838  1.471372e-06
48831    0.680883     0.680881  1.647273e-06
48832    0.483081     0.483079  2.126147e-06
48833    0.797400     0.797398  2.024750e-06
48834    0.999298     0.999298  3.876724e-09
48835    0.892651     0.892651  5.208943e-07
48836    0.934527     0.934527  5.255545e-07
48837    0.839442     0.839442  7.569729e-07
48838    0.979814     0.979814 -1.180729e-08
48839    0.252090     0.252088  1.918914e-06
48840    0.635581     0.635580  7.994840e-07
48841    0.259343     0.259341  1.961080e-06
MLLITE_CLASS_SQL_ERROR ('census_one_hot_quantized', 'MLPClassifier', 'duckdb') ('Py_Proba_1', 'SQL_Proba_1') 9.405683526153485e-07
       Py_Proba_1  SQL_Proba_1   SQL_Error_1
48826    0.749762     0.749764 -1.702600e-06
48827    0.008764     0.008765 -4.588701e-08
48828    0.016014     0.016014 -2.951050e-08
48829    0.370114     0.370116 -2.179255e-06
48830    0.139161     0.139162 -1.456471e-06
48831    0.319117     0.319119 -1.677075e-06
48832    0.516919     0.516921 -2.126147e-06
48833    0.202600     0.202602 -1.994947e-06
48834    0.000702     0.000702 -1.024549e-09
48835    0.107349     0.107349 -5.506966e-07
48836    0.065473     0.065473 -5.255545e-07
48837    0.160558     0.160558 -7.569729e-07
48838    0.020186     0.020186  4.356707e-09
48839    0.747910     0.747912 -1.918914e-06
48840    0.364419     0.364420 -7.696817e-07
48841    0.740657     0.740659 -1.961080e-06
MLLITE_CLASS_SQL_EXECUTION_STATUS ('census_one_hot_quantized', 'MLPClassifier', 'duckdb', 'Success')
      Py_Decision  SQL_Decision
48826        >50K             1
48827       <=50K             0
48828       <=50K             0
48829       <=50K             0
48830       <=50K             0
48831       <=50K             0
48832        >50K             1
48833       <=50K             0
48834       <=50K             0
48835       <=50K             0
48836       <=50K             0
48837       <=50K             0
48838       <=50K             0
48839        >50K             1
48840       <=50K             0
48841        >50K             1
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/MLPClassifier/mllite.MLPClassifier_census_one_hot_quantized_option_1_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('census_one_hot_quantized', 'MLPClassifier', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('census_one_hot_quantized', 'MLPClassifier', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('census_one_hot_quantized', 'MLPClassifier', 'sqlite')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('census_one_hot_quantized', 'MLPClassifier', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 48842 entries, 0 to 48841
Data columns (total 53 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     48842 non-null  float32
 1   X_1     48842 non-null  float32
 2   X_2     48842 non-null  float32
 3   X_3     48842 non-null  float32
 4   X_4     48842 non-null  float32
 5   X_5     48842 non-null  float32
 6   X_6     48842 non-null  float32
 7   X_7     48842 non-null  float32
 8   X_8     48842 non-null  float32
 9   X_9     48842 non-null  float32
 10  X_10    48842 non-null  float32
 11  X_11    48842 non-null  float32
 12  X_12    48842 non-null  float32
 13  X_13    48842 non-null  float32
 14  X_14    48842 non-null  float32
 15  X_15    48842 non-null  float32
 16  X_16    48842 non-null  float32
 17  X_17    48842 non-null  float32
 18  X_18    48842 non-null  float32
 19  X_19    48842 non-null  float32
 20  X_20    48842 non-null  float32
 21  X_21    48842 non-null  float32
 22  X_22    48842 non-null  float32
 23  X_23    48842 non-null  float32
 24  X_24    48842 non-null  float32
 25  X_25    48842 non-null  float32
 26  X_26    48842 non-null  float32
 27  X_27    48842 non-null  float32
 28  X_28    48842 non-null  float32
 29  X_29    48842 non-null  float32
 30  X_30    48842 non-null  float32
 31  X_31    48842 non-null  float32
 32  X_32    48842 non-null  float32
 33  X_33    48842 non-null  float32
 34  X_34    48842 non-null  float32
 35  X_35    48842 non-null  float32
 36  X_36    48842 non-null  float32
 37  X_37    48842 non-null  float32
 38  X_38    48842 non-null  float32
 39  X_39    48842 non-null  float32
 40  X_40    48842 non-null  float32
 41  X_41    48842 non-null  float32
 42  X_42    48842 non-null  float32
 43  X_43    48842 non-null  float32
 44  X_44    48842 non-null  float32
 45  X_45    48842 non-null  float32
 46  X_46    48842 non-null  float32
 47  X_47    48842 non-null  float32
 48  X_48    48842 non-null  float32
 49  X_49    48842 non-null  float32
 50  X_50    48842 non-null  float32
 51  X_51    48842 non-null  float32
 52  X_52    48842 non-null  float32
dtypes: float32(53)
memory usage: 10.2 MB
        X_0  X_1   X_2   X_3   X_4   X_5  ...  X_47  X_48  X_49  X_50  X_51  X_52
index                                     ...                                    
0       6.0  0.0   0.0   0.0   0.0  10.0  ...   0.0   0.0   0.0  10.0   0.0   0.0
1       7.0  0.0   0.0   0.0  10.0   0.0  ...   0.0   0.0   0.0  10.0   0.0   0.0
2       6.0  0.0  10.0   0.0   0.0   0.0  ...   0.0   0.0   0.0  10.0   0.0   0.0
3       7.0  0.0  10.0   0.0   0.0   0.0  ...   0.0   0.0   0.0  10.0   0.0   0.0
4       3.0  0.0  10.0   0.0   0.0   0.0  ...   0.0   0.0   0.0   0.0   0.0  10.0
...     ...  ...   ...   ...   ...   ...  ...   ...   ...   ...   ...   ...   ...
48837   6.0  0.0  10.0   0.0   0.0   0.0  ...   0.0   0.0   0.0  10.0   0.0   0.0
48838  10.0  0.0   0.0   0.0   0.0   0.0  ...   0.0   0.0   0.0  10.0   0.0   0.0
48839   6.0  0.0  10.0   0.0   0.0   0.0  ...   0.0   0.0   0.0  10.0   0.0   0.0
48840   6.0  0.0  10.0   0.0   0.0   0.0  ...   0.0   0.0   0.0  10.0   0.0   0.0
48841   3.0  0.0   0.0  10.0   0.0   0.0  ...   0.0   0.0   0.0  10.0   0.0   0.0

[48842 rows x 53 columns]
