READING_CSV BinaryClass_100_sampled ['data/sampled/BinaryClass_100_sampled.csv']
          X_0       X_1       X_2  ...      X_98      X_99  target
0   -0.001923 -2.371688 -1.181275  ... -0.370192  0.432550       0
1   -0.094974  0.975498  0.650450  ... -0.220261  0.222239       1
2    0.060564 -1.800755  0.053222  ...  0.793880 -0.469869       0
3   -0.113704  0.680545 -0.819322  ...  0.428237 -0.069851       1
4   -0.494085  0.103852  0.838905  ... -0.711862 -0.910029       1
..        ...       ...       ...  ...       ...       ...     ...
123 -1.641586 -1.435212 -1.466680  ...  1.768780  0.132030       0
124 -0.333624 -1.181805 -0.885047  ... -0.070404 -0.513488       0
125  0.378192  0.162965  0.389403  ... -0.939559 -1.597954       1
126 -0.067286  0.126249  0.403635  ...  1.155926  0.785249       1
127  0.956823 -0.959303  0.272337  ... -0.599084 -0.161305       0

[128 rows x 101 columns]
MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
('OPERATION_START', 'TRAINING')
[[-1.92301034e-03 -2.37168813e+00 -1.18127453e+00 -8.41143429e-01
  -2.27833748e+00  5.56165516e-01 -4.33400422e-01  6.68530583e-01
  -4.45269734e-01  1.08730054e+00  9.94111359e-01  6.15174830e-01
  -1.42712057e-01 -5.43691695e-01  2.51998758e+00 -5.76757491e-01
  -4.96940762e-01 -1.37897694e+00 -1.15515006e+00 -5.45445085e-01
   9.39146876e-01  5.58746934e-01  6.42707646e-02  9.41048622e-01
   3.70287567e-01  3.05628687e-01  6.59754872e-01 -5.34938514e-01
   3.41925710e-01 -9.02376890e-01  2.64374584e-01  1.05001062e-01
   1.58149529e+00 -2.39867258e+00  3.65284145e-01 -1.43215582e-01
  -6.91276610e-01 -1.09551179e+00  6.00470424e-01 -1.27839279e+00
  -1.51853383e+00 -7.39996552e-01 -1.09941888e+00 -1.00493443e+00
   5.02316713e-01  5.94181597e-01 -4.22067046e-01  5.80759704e-01
  -9.45604265e-01 -8.63473296e-01  1.73380065e+00  4.05579746e-01
  -1.31068170e+00 -2.56809741e-01  2.29151353e-01  3.84321451e-01
  -5.51349640e-01  1.19658613e+00  3.84441763e-01 -3.77902836e-01
   6.52891636e-01 -1.64592862e+00  1.05294979e+00  8.23636234e-01
   1.37784421e+00 -7.36219212e-02  1.61197138e+00 -1.98621261e+00
   1.18670213e+00  1.34875977e+00 -3.60972047e-01 -2.41051650e+00
  -1.94886446e+00 -6.28324568e-01 -1.05058098e+00 -2.54030657e+00
   1.56220317e-01  1.23859513e+00 -8.52460384e-01 -1.03192151e+00
   7.05807090e-01  3.12049419e-01  1.97033249e-02 -1.49339557e+00
  -9.82222795e-01 -2.90390223e-01  9.48299840e-02 -1.34775198e+00
  -5.61226130e-01 -4.61151361e-01  6.03559203e-02  1.79786313e+00
   4.18422371e-01  1.31290972e+00 -5.27386606e-01  7.88664445e-02
  -4.97837096e-01 -1.82821357e+00 -3.70192051e-01  4.32550102e-01]
 [-9.49740633e-02  9.75498080e-01  6.50450408e-01 -1.63987532e-01
   1.19377956e-01 -8.87404203e-01 -9.85744298e-01 -1.57699615e-01
  -5.53503856e-02 -4.89691913e-01  3.95107746e-01 -1.86406958e+00
   2.06569105e-01  1.19034803e+00  9.08305228e-01 -6.49589598e-01
   8.17796350e-01 -5.65862536e-01 -1.62303770e+00  1.96794593e+00
  -9.01196182e-01  2.21370864e+00 -1.26184642e+00  7.29401052e-01
   1.97460622e-01  5.53488255e-01 -4.16989103e-02  2.21864507e-01
  -1.60427725e+00 -1.14986289e+00  7.22467899e-01 -1.29073668e+00
  -6.89864635e-01 -9.29718554e-01  5.53363264e-01  7.69885540e-01
   3.78352642e-01  9.23741400e-01  2.08281234e-01  3.80240083e-02
  -8.87683213e-01  3.33101004e-01  1.00212204e+00  1.69690156e+00
   2.44307727e-01 -1.86227322e+00 -4.06760365e-01 -6.38921678e-01
  -1.67613909e-01  1.53844684e-01  8.42663527e-01 -1.62592280e+00
  -1.59404182e+00  7.38830745e-01 -8.74506593e-01 -1.22548962e+00
  -5.25257468e-01 -4.70152795e-01 -1.15468964e-01  4.96193357e-02
  -8.19156051e-01  2.99073744e+00  4.35046047e-01 -7.59149939e-02
  -1.56339154e-01 -6.03336692e-01 -6.89302310e-02 -2.13743591e+00
   2.04948735e+00 -1.69878006e+00  1.88749945e+00  4.05677646e-01
  -5.13272583e-01 -5.22737443e-01  1.29273057e+00  1.05886006e+00
  -3.68327975e-01  5.86420834e-01  1.94629407e+00  3.96328539e-01
  -2.22653337e-02  1.84837833e-01  1.55221510e+00  7.67667949e-01
   4.12257463e-01 -4.74151075e-02 -8.58929634e-01 -3.77886832e-01
   8.46213162e-01  3.82268399e-01  4.52266574e-01  3.67907345e-01
  -1.74708021e+00  2.97413111e-01  1.39319599e-01  6.18183054e-02
  -1.14589304e-01 -4.91930753e-01 -2.20261484e-01  2.22238824e-01]
 [ 6.05639964e-02 -1.80075538e+00  5.32221198e-02  1.13705254e+00
  -1.11454320e+00 -6.12991691e-01  6.58748865e-01 -6.18573092e-02
  -1.36188239e-01 -6.56564057e-01 -3.13579798e-01  2.24243671e-01
   4.27837819e-01  1.69016683e+00  1.13053429e+00 -1.34645033e+00
   4.66799051e-01 -1.12207568e+00 -1.80836928e+00  2.61885583e-01
  -1.46927464e+00 -2.81107831e+00  4.71088886e-01 -9.81634736e-01
   1.54162824e-01 -9.45118725e-01 -7.67153800e-01  2.78682500e-01
  -3.97465616e-01 -3.84304225e-01 -2.76822597e-02 -9.13487732e-01
   5.98323822e-01  7.34539688e-01  1.80665767e+00 -1.05402780e+00
  -2.37955928e+00 -1.01849586e-01 -1.25161910e+00 -3.40773277e-02
  -5.89699388e-01  4.64297593e-01 -7.69342899e-01 -4.94058549e-01
   1.90302110e+00 -1.28648996e+00 -2.02911228e-01  1.30722094e+00
  -9.35619593e-01 -7.99053609e-01 -8.04178536e-01 -1.16746537e-01
   1.43000674e+00  5.87966681e-01 -7.76776969e-01  1.36388794e-01
  -1.52828979e+00  1.08090746e+00  1.06615996e+00  6.13719285e-01
  -1.56638134e+00 -2.99079442e+00 -9.23732638e-01  1.24830830e+00
  -3.28231335e-01 -7.79168904e-01 -2.46622109e+00  7.15086102e-01
  -1.71361104e-01  1.16359353e+00  4.88843828e-01  8.57221186e-01
  -1.30257130e+00  7.77815223e-01  1.57720637e+00  2.45493579e+00
   8.09955537e-01  2.80593574e-01  4.77433234e-01 -2.73493845e-02
   1.58274734e+00  1.18173122e+00  1.69938195e+00  1.51718628e+00
  -1.84085965e-01  6.12297058e-01 -1.40703619e-01  9.34502482e-01
   3.93216848e-01 -9.26083088e-01  7.44229436e-01  2.88019562e+00
   1.62651956e+00 -1.24643338e+00  1.11573339e-02  1.65077448e-01
   3.82369637e+00  1.63663363e+00  7.93880284e-01 -4.69868749e-01]
 [-1.13704078e-01  6.80544913e-01 -8.19322228e-01 -9.69877481e-01
   7.71628141e-01 -1.57383764e+00  2.48730704e-01  5.41360080e-01
  -1.59036744e+00 -3.12054634e-01 -1.64359498e+00  1.50122166e+00
  -1.00549912e+00 -1.26486790e+00 -2.33127594e+00  1.01962104e-01
   5.75607657e-01 -1.20477211e+00 -9.19741020e-02 -1.16153848e+00
   2.32242107e+00  1.63334921e-01  1.69249582e+00  2.74418384e-01
  -1.81126118e+00  8.80577981e-01  7.02414274e-01  1.03724468e+00
   1.05812097e+00  1.13643229e+00 -7.69474387e-01  5.84956825e-01
  -9.34404075e-01 -1.12673771e+00 -3.59424800e-01 -1.02582085e+00
  -9.53075886e-01 -8.06699455e-01 -2.95903623e-01  1.28596336e-01
  -2.09618449e+00  1.96716547e-01 -1.33443916e+00  6.67538345e-01
  -2.04303360e+00  6.56667471e-01 -1.87788701e+00 -7.45100915e-01
   3.34480464e-01  2.30912209e-01 -1.05614233e+00  1.71417046e+00
   1.68882191e+00  1.25794733e+00  7.77477682e-01 -1.20922111e-01
   1.01463521e+00  7.94170141e-01  8.18609297e-01  1.13752067e-01
   7.90019155e-01  1.38778999e-01  8.86305422e-02  1.08791220e+00
  -1.64308107e+00 -9.54914749e-01  2.37339306e+00  9.95790303e-01
  -1.40296519e-01 -4.31657374e-01 -3.15623283e-02 -1.30086195e+00
  -5.68930566e-01  5.63574135e-01 -8.70503426e-01  4.14068997e-01
  -8.70141163e-02 -1.51894724e+00 -1.23855531e+00  1.29880026e-01
  -5.59461713e-01 -1.26385403e+00  1.59277141e-01 -1.86286375e-01
   5.10727882e-01  1.43785611e-01 -1.63213980e+00  3.82019728e-01
  -1.09840834e+00 -1.70634732e-01 -4.41302881e-02 -3.41793835e-01
   3.30759794e-01  4.17531244e-02 -3.37710887e-01  1.44820738e+00
   1.34170282e+00 -7.92602599e-01  4.28236961e-01 -6.98510483e-02]
 [-4.94084507e-01  1.03852168e-01  8.38904679e-01 -7.35904038e-01
  -7.04967678e-02  5.73717237e-01  2.18849331e-01  1.05623102e+00
  -1.25785077e+00  1.13013601e+00 -1.55437517e+00  9.51525688e-01
  -1.67592776e+00 -3.48637164e-01  1.60759163e+00  6.90805376e-01
  -1.13699162e+00  9.32226717e-01 -8.86185884e-01  6.50337562e-02
  -6.33093655e-01 -4.60071653e-01 -3.17828417e-01 -6.01315439e-01
  -7.02504814e-02 -2.66349375e-01 -1.10489130e+00  1.07519376e+00
  -4.23042387e-01  3.45855922e-01 -5.60104251e-01  3.57963622e-01
   1.71203125e+00  1.49234402e+00 -1.28127527e+00  3.17688972e-01
   2.95880270e+00  8.53792131e-01 -2.06153846e+00 -3.91467154e-01
  -2.43756063e-02  1.67333499e-01  1.17837632e+00 -4.12473530e-01
   1.56250536e-01 -3.51341099e-01 -9.60100651e-01  1.04467452e+00
   1.08441925e+00  5.52181721e-01 -1.01620758e+00 -2.87865996e+00
   5.76726556e-01 -5.82755208e-01  6.56063616e-01 -1.08061683e+00
  -5.74857712e-01  7.20476925e-01 -1.94190967e+00 -5.61854243e-01
   6.89151466e-01  5.53826809e-01 -3.96725759e-02 -2.25085169e-01
   2.28897452e+00  6.30537391e-01  1.64857304e+00 -5.28170049e-01
   5.29594898e-01 -1.10107467e-01  1.42280829e+00  1.06736279e+00
  -2.18277469e-01 -2.87699342e-01  4.86762732e-01 -1.59002244e+00
   5.11812679e-02 -4.70185161e-01  1.38356775e-01  7.31057286e-01
  -1.03853390e-01  4.13611174e-01  4.17555958e-01  1.10078800e+00
   8.31761479e-01  1.25986600e+00  2.73322630e+00  1.30618227e+00
  -1.60953015e-01 -1.14850438e+00 -1.69689417e+00 -4.59983468e-01
   1.92816043e+00 -1.38011467e+00  1.83180821e+00  5.52028716e-01
   3.90167475e-01 -7.98744082e-01 -7.11862028e-01 -9.10029233e-01]] [0 1 0 1 1]
MLLITE_FIT_USING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 3 4
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 4 4
('OPERATION_END_ELAPSED', 0.026, 'TRAINING')
{ ,   }
{ ,   }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 128, "dataset_features" : 100 },
	"classes" : [ 0, 1 ],
	"equations" : {
		"class_1" : {
			"intercept" : 0.038362,
			"coeffs" : [ -0.073748, 0.228744, -0.070090, 0.028804, 0.168785, 0.001840, 0.225843, 0.075476, 0.328168, 0.135243, 0.055961, 0.234490, 0.072948, 0.058892, 0.112548, -0.029707, -0.053799, -0.020351, 0.113909, -0.237878, 0.133464, 0.147590, 0.038335, -0.039097, -0.173382, 0.068684, -0.154462, -0.050356, 0.079655, 0.266076, -0.301711, -0.173692, 0.079383, -0.033891, 0.115295, 0.002996, 0.078167, 0.052174, -0.114298, -0.026623, -0.002559, -0.063404, -0.150328, 0.237200, -0.034634, 0.069844, 0.031534, -0.041839, -0.013614, 0.199184, 0.015530, -0.235643, -0.002571, 0.042058, 0.187806, -0.053614, -0.064493, 0.015394, -0.019014, -0.036778, -0.264961, 0.237059, -0.038155, -0.060635, -0.006773, 0.098113, -0.094034, -0.104989, 0.157557, 0.013491, -0.148940, -0.104137, 0.006065, -0.060237, 0.153080, -0.042222, -0.108045, 0.163922, -0.082724, -0.044751, 0.009609, -0.017578, 0.084780, 0.197540, 0.230821, -0.110080, -0.075927, 0.116725, 0.150097, -0.054207, 0.092055, 0.009950, 0.038457, 0.195098, 0.053969, 0.152865, 0.080101, -0.186556, -0.029183, -0.111686 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_100_sampled.json'

RELOADING_MODEL_FROM_JSON_START ('BinaryClass_100_sampled', 'RidgeClassifier')
MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
MLLITE_RELOADING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 128, "dataset_features" : 100 },
	"classes" : [ 0, 1 ],
	"equations" : {
		"class_1" : {
			"intercept" : 0.038362,
			"coeffs" : [ -0.073748, 0.228744, -0.070090, 0.028804, 0.168785, 0.001840, 0.225843, 0.075476, 0.328168, 0.135243, 0.055961, 0.234490, 0.072948, 0.058892, 0.112548, -0.029707, -0.053799, -0.020351, 0.113909, -0.237878, 0.133464, 0.147590, 0.038335, -0.039097, -0.173382, 0.068684, -0.154462, -0.050356, 0.079655, 0.266076, -0.301711, -0.173692, 0.079383, -0.033891, 0.115295, 0.002996, 0.078167, 0.052174, -0.114298, -0.026623, -0.002559, -0.063404, -0.150328, 0.237200, -0.034634, 0.069844, 0.031534, -0.041839, -0.013614, 0.199184, 0.015530, -0.235643, -0.002571, 0.042058, 0.187806, -0.053614, -0.064493, 0.015394, -0.019014, -0.036778, -0.264961, 0.237059, -0.038155, -0.060635, -0.006773, 0.098113, -0.094034, -0.104989, 0.157557, 0.013491, -0.148940, -0.104137, 0.006065, -0.060237, 0.153080, -0.042222, -0.108045, 0.163922, -0.082724, -0.044751, 0.009609, -0.017578, 0.084780, 0.197540, 0.230821, -0.110080, -0.075927, 0.116725, 0.150097, -0.054207, 0.092055, 0.009950, 0.038457, 0.195098, 0.053969, 0.152865, 0.080101, -0.186556, -0.029183, -0.111686 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1 ],
	"dataset" : 	{
		"dataset_features" : 100,
		"dataset_rows" : 128
	},
	"equations" : 	{
		"class_1" : 	{
			"coeffs" : [ -0.073748, 0.228744, -0.07009, 0.028804, 0.168785, 0.00184, 0.225843, 0.075476, 0.328168, 0.135243, 0.055961, 0.23449, 0.072948, 0.058892, 0.112548, -0.029707, -0.053799, -0.020351, 0.113909, -0.237878, 0.133464, 0.14759, 0.038335, -0.039097, -0.173382, 0.068684, -0.154462, -0.050356, 0.079655, 0.266076, -0.301711, -0.173692, 0.079383, -0.033891, 0.115295, 0.002996, 0.078167, 0.052174, -0.114298, -0.026623, -0.002559, -0.063404, -0.150328, 0.2372, -0.034634, 0.069844, 0.031534, -0.041839, -0.013614, 0.199184, 0.01553, -0.235643, -0.002571, 0.042058, 0.187806, -0.053614, -0.064493, 0.015394, -0.019014, -0.036778, -0.264961, 0.237059, -0.038155, -0.060635, -0.006773, 0.098113, -0.094034, -0.104989, 0.157557, 0.013491, -0.14894, -0.104137, 0.006065, -0.060237, 0.15308, -0.042222, -0.108045, 0.163922, -0.082724, -0.044751, 0.009609, -0.017578, 0.08478, 0.19754, 0.230821, -0.11008, -0.075927, 0.116725, 0.150097, -0.054207, 0.092055, 0.00995, 0.038457, 0.195098, 0.053969, 0.152865, 0.080101, -0.186556, -0.029183, -0.111686 ],
			"intercept" : 0.038362
		}
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_il8", "version" : "2024-W14" },
	"options" :  { "alpha" : 1.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
RELOADING_MODEL_FROM_JSON_END ('BinaryClass_100_sampled', 'RidgeClassifier')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0.6683 0.3317]
 [0.2407 0.7593]
 [0.7545 0.2455]
 [0.3013 0.6987]
 [0.2155 0.7845]
 [0.3224 0.6776]
 [0.2117 0.7883]
 [0.4407 0.5593]
 [0.725  0.275 ]
 [0.2974 0.7026]
 [0.8159 0.1841]
 [0.2804 0.7196]
 [0.7684 0.2316]
 [0.4025 0.5975]
 [0.7754 0.2246]
 [0.792  0.208 ]
 [0.5181 0.4819]
 [0.3057 0.6943]
 [0.2442 0.7558]
 [0.3895 0.6105]
 [0.7954 0.2046]
 [0.6822 0.3178]
 [0.7747 0.2253]
 [0.6569 0.3431]
 [0.7226 0.2774]
 [0.682  0.318 ]
 [0.7196 0.2804]
 [0.7176 0.2824]
 [0.6876 0.3124]
 [0.2582 0.7418]
 [0.275  0.725 ]
 [0.1728 0.8272]
 [0.7471 0.2529]
 [0.2431 0.7569]
 [0.6728 0.3272]
 [0.6961 0.3039]
 [0.2482 0.7518]
 [0.791  0.209 ]
 [0.6475 0.3525]
 [0.2488 0.7512]
 [0.438  0.562 ]
 [0.5983 0.4017]
 [0.3279 0.6721]
 [0.7346 0.2654]
 [0.182  0.818 ]
 [0.2429 0.7571]
 [0.792  0.208 ]
 [0.7096 0.2904]
 [0.6732 0.3268]
 [0.2809 0.7191]
 [0.6223 0.3777]
 [0.2919 0.7081]
 [0.2604 0.7396]
 [0.7472 0.2528]
 [0.3065 0.6935]
 [0.6939 0.3061]
 [0.7178 0.2822]
 [0.6204 0.3796]
 [0.7091 0.2909]
 [0.4628 0.5372]
 [0.7803 0.2197]
 [0.6928 0.3072]
 [0.2376 0.7624]
 [0.5726 0.4274]
 [0.6984 0.3016]
 [0.2777 0.7223]
 [0.2164 0.7836]
 [0.3731 0.6269]
 [0.6297 0.3703]
 [0.7426 0.2574]
 [0.5712 0.4288]
 [0.3407 0.6593]
 [0.6776 0.3224]
 [0.2912 0.7088]
 [0.2326 0.7674]
 [0.715  0.285 ]
 [0.675  0.325 ]
 [0.7277 0.2723]
 [0.6928 0.3072]
 [0.677  0.323 ]
 [0.7586 0.2414]
 [0.6963 0.3037]
 [0.3834 0.6166]
 [0.7845 0.2155]
 [0.3741 0.6259]
 [0.6311 0.3689]
 [0.2946 0.7054]
 [0.8338 0.1662]
 [0.6608 0.3392]
 [0.3616 0.6384]
 [0.7183 0.2817]
 [0.3241 0.6759]
 [0.3192 0.6808]
 [0.436  0.564 ]
 [0.6979 0.3021]
 [0.193  0.807 ]
 [0.7573 0.2427]
 [0.272  0.728 ]
 [0.7559 0.2441]
 [0.7479 0.2521]
 [0.7051 0.2949]
 [0.7892 0.2108]
 [0.3154 0.6846]
 [0.3277 0.6723]
 [0.3295 0.6705]
 [0.715  0.285 ]
 [0.2462 0.7538]
 [0.2784 0.7216]
 [0.6229 0.3771]
 [0.5353 0.4647]
 [0.76   0.24  ]
 [0.2547 0.7453]
 [0.2762 0.7238]
 [0.2557 0.7443]
 [0.3131 0.6869]
 [0.6381 0.3619]
 [0.2817 0.7183]
 [0.3331 0.6669]
 [0.2981 0.7019]
 [0.3681 0.6319]
 [0.477  0.523 ]
 [0.3208 0.6792]
 [0.7287 0.2713]
 [0.6687 0.3313]
 [0.5999 0.4001]
 [0.325  0.675 ]
 [0.2585 0.7415]
 [0.66   0.34  ]]
(128, 2)
(128,) float32
MODEL_PERFS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'BinaryClass_100_sampled', 'size': 128, 'accuracy': 1.0, 'auc': 1.0}
WRITING_PERF_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_100_sampled.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'BinaryClass_100_sampled', 'training_time_in_sec': 0.026, 'prediction_time_in_sec': 0.0}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 0 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 1 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 2 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 3 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 4 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 5 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 6 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 7 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 8 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 9 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 10 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 11 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 12 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 13 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 14 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 15 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 16 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 17 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 18 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 19 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 20 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 21 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 22 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 23 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 24 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 25 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 26 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 27 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 28 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 29 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 30 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 31 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 32 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 33 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 34 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 35 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 36 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 37 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 38 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 39 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 40 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 41 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 42 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 43 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 44 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 45 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 46 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 47 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 48 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 49 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 50 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 51 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 52 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 53 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 54 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 55 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 56 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 57 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 58 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 59 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 60 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 61 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 62 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 63 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 64 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 65 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 66 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 67 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 68 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 69 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 70 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 71 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 72 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 73 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 74 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 75 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 76 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 77 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 78 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 79 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 80 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 81 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 82 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 83 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 84 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 85 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 86 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 87 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 88 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 89 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 90 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 91 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 92 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 93 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 94 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 95 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 96 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 97 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 98 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 99 100
{
   "Contributions" : {
      "X_0" : [ 0.003540, -0.003540 ],
      "X_1" : [ -0.002482, 0.002482 ],
      "X_2" : [ -0.002292, 0.002292 ],
      "X_3" : [ 0.000663, -0.000663 ],
      "X_4" : [ -0.005204, 0.005204 ],
      "X_5" : [ -0.000069, 0.000069 ],
      "X_6" : [ 0.000966, -0.000966 ],
      "X_7" : [ -0.001208, 0.001208 ],
      "X_8" : [ -0.017613, 0.017613 ],
      "X_9" : [ 0.002658, -0.002658 ],
      "X_10" : [ -0.003678, 0.003678 ],
      "X_11" : [ -0.013188, 0.013188 ],
      "X_12" : [ -0.005155, 0.005155 ],
      "X_13" : [ -0.000779, 0.000779 ],
      "X_14" : [ 0.000132, -0.000132 ],
      "X_15" : [ -0.000767, 0.000767 ],
      "X_16" : [ -0.001697, 0.001697 ],
      "X_17" : [ -0.000322, 0.000322 ],
      "X_18" : [ 0.003901, -0.003901 ],
      "X_19" : [ -0.004530, 0.004530 ],
      "X_20" : [ 0.002065, -0.002065 ],
      "X_21" : [ -0.006137, 0.006137 ],
      "X_22" : [ 0.000627, -0.000627 ],
      "X_23" : [ -0.000988, 0.000988 ],
      "X_24" : [ 0.006876, -0.006876 ],
      "X_25" : [ 0.000912, -0.000912 ],
      "X_26" : [ -0.002398, 0.002398 ],
      "X_27" : [ 0.000096, -0.000096 ],
      "X_28" : [ 0.002279, -0.002279 ],
      "X_29" : [ 0.000914, -0.000914 ],
      "X_30" : [ 0.005866, -0.005866 ],
      "X_31" : [ -0.001582, 0.001582 ],
      "X_32" : [ -0.004189, 0.004189 ],
      "X_33" : [ 0.001048, -0.001048 ],
      "X_34" : [ -0.001169, 0.001169 ],
      "X_35" : [ 0.000020, -0.000020 ],
      "X_36" : [ -0.001856, 0.001856 ],
      "X_37" : [ 0.000278, -0.000278 ],
      "X_38" : [ 0.001330, -0.001330 ],
      "X_39" : [ -0.000932, 0.000932 ],
      "X_40" : [ -0.000105, 0.000105 ],
      "X_41" : [ 0.003559, -0.003559 ],
      "X_42" : [ -0.005746, 0.005746 ],
      "X_43" : [ 0.010546, -0.010546 ],
      "X_44" : [ 0.003876, -0.003876 ],
      "X_45" : [ -0.000012, 0.000012 ],
      "X_46" : [ 0.002655, -0.002655 ],
      "X_47" : [ 0.000110, -0.000110 ],
      "X_48" : [ 0.000571, -0.000571 ],
      "X_49" : [ -0.009733, 0.009733 ],
      "X_50" : [ 0.000822, -0.000822 ],
      "X_51" : [ 0.012093, -0.012093 ],
      "X_52" : [ 0.000163, -0.000163 ],
      "X_53" : [ 0.000460, -0.000460 ],
      "X_54" : [ 0.001320, -0.001320 ],
      "X_55" : [ -0.001717, 0.001717 ],
      "X_56" : [ 0.000261, -0.000261 ],
      "X_57" : [ -0.000072, 0.000072 ],
      "X_58" : [ 0.000215, -0.000215 ],
      "X_59" : [ -0.001116, 0.001116 ],
      "X_60" : [ 0.018088, -0.018088 ],
      "X_61" : [ 0.012111, -0.012111 ],
      "X_62" : [ 0.000122, -0.000122 ],
      "X_63" : [ 0.000170, -0.000170 ],
      "X_64" : [ -0.000052, 0.000052 ],
      "X_65" : [ -0.000188, 0.000188 ],
      "X_66" : [ -0.002104, 0.002104 ],
      "X_67" : [ 0.009198, -0.009198 ],
      "X_68" : [ 0.007604, -0.007604 ],
      "X_69" : [ -0.000075, 0.000075 ],
      "X_70" : [ -0.003335, 0.003335 ],
      "X_71" : [ 0.005011, -0.005011 ],
      "X_72" : [ 0.000156, -0.000156 ],
      "X_73" : [ 0.002390, -0.002390 ],
      "X_74" : [ 0.003829, -0.003829 ],
      "X_75" : [ -0.002054, 0.002054 ],
      "X_76" : [ -0.001491, 0.001491 ],
      "X_77" : [ -0.007439, 0.007439 ],
      "X_78" : [ -0.006207, 0.006207 ],
      "X_79" : [ -0.000363, 0.000363 ],
      "X_80" : [ 0.000273, -0.000273 ],
      "X_81" : [ 0.000121, -0.000121 ],
      "X_82" : [ -0.004363, 0.004363 ],
      "X_83" : [ 0.006622, -0.006622 ],
      "X_84" : [ -0.000463, 0.000463 ],
      "X_85" : [ 0.000964, -0.000964 ],
      "X_86" : [ 0.004296, -0.004296 ],
      "X_87" : [ 0.001362, -0.001362 ],
      "X_88" : [ 0.002935, -0.002935 ],
      "X_89" : [ -0.000615, 0.000615 ],
      "X_90" : [ -0.003367, 0.003367 ],
      "X_91" : [ -0.000019, 0.000019 ],
      "X_92" : [ -0.001522, 0.001522 ],
      "X_93" : [ -0.002023, 0.002023 ],
      "X_94" : [ -0.001101, 0.001101 ],
      "X_95" : [ 0.008508, -0.008508 ],
      "X_96" : [ 0.000424, -0.000424 ],
      "X_97" : [ -0.005392, 0.005392 ],
      "X_98" : [ 0.002478, -0.002478 ],
      "X_99" : [ 0.001676, -0.001676 ]   
   },
   "Most_Contributive_Features_By_Class" : {
      "class_0" : [ 60, 8, 11, 61, 51, 43, 49, 67, 95, 68 ],
      "class_1" : [ 60, 8, 11, 61, 51, 43, 49, 67, 95, 68 ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_100_sampled_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_100_sampled_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('BinaryClass_100_sampled', 'RidgeClassifier', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('BinaryClass_100_sampled', 'RidgeClassifier', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('BinaryClass_100_sampled', 'RidgeClassifier', 'duckdb')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('BinaryClass_100_sampled', 'RidgeClassifier', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 128 entries, 0 to 127
Data columns (total 100 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     128 non-null    float32
 1   X_1     128 non-null    float32
 2   X_2     128 non-null    float32
 3   X_3     128 non-null    float32
 4   X_4     128 non-null    float32
 5   X_5     128 non-null    float32
 6   X_6     128 non-null    float32
 7   X_7     128 non-null    float32
 8   X_8     128 non-null    float32
 9   X_9     128 non-null    float32
 10  X_10    128 non-null    float32
 11  X_11    128 non-null    float32
 12  X_12    128 non-null    float32
 13  X_13    128 non-null    float32
 14  X_14    128 non-null    float32
 15  X_15    128 non-null    float32
 16  X_16    128 non-null    float32
 17  X_17    128 non-null    float32
 18  X_18    128 non-null    float32
 19  X_19    128 non-null    float32
 20  X_20    128 non-null    float32
 21  X_21    128 non-null    float32
 22  X_22    128 non-null    float32
 23  X_23    128 non-null    float32
 24  X_24    128 non-null    float32
 25  X_25    128 non-null    float32
 26  X_26    128 non-null    float32
 27  X_27    128 non-null    float32
 28  X_28    128 non-null    float32
 29  X_29    128 non-null    float32
 30  X_30    128 non-null    float32
 31  X_31    128 non-null    float32
 32  X_32    128 non-null    float32
 33  X_33    128 non-null    float32
 34  X_34    128 non-null    float32
 35  X_35    128 non-null    float32
 36  X_36    128 non-null    float32
 37  X_37    128 non-null    float32
 38  X_38    128 non-null    float32
 39  X_39    128 non-null    float32
 40  X_40    128 non-null    float32
 41  X_41    128 non-null    float32
 42  X_42    128 non-null    float32
 43  X_43    128 non-null    float32
 44  X_44    128 non-null    float32
 45  X_45    128 non-null    float32
 46  X_46    128 non-null    float32
 47  X_47    128 non-null    float32
 48  X_48    128 non-null    float32
 49  X_49    128 non-null    float32
 50  X_50    128 non-null    float32
 51  X_51    128 non-null    float32
 52  X_52    128 non-null    float32
 53  X_53    128 non-null    float32
 54  X_54    128 non-null    float32
 55  X_55    128 non-null    float32
 56  X_56    128 non-null    float32
 57  X_57    128 non-null    float32
 58  X_58    128 non-null    float32
 59  X_59    128 non-null    float32
 60  X_60    128 non-null    float32
 61  X_61    128 non-null    float32
 62  X_62    128 non-null    float32
 63  X_63    128 non-null    float32
 64  X_64    128 non-null    float32
 65  X_65    128 non-null    float32
 66  X_66    128 non-null    float32
 67  X_67    128 non-null    float32
 68  X_68    128 non-null    float32
 69  X_69    128 non-null    float32
 70  X_70    128 non-null    float32
 71  X_71    128 non-null    float32
 72  X_72    128 non-null    float32
 73  X_73    128 non-null    float32
 74  X_74    128 non-null    float32
 75  X_75    128 non-null    float32
 76  X_76    128 non-null    float32
 77  X_77    128 non-null    float32
 78  X_78    128 non-null    float32
 79  X_79    128 non-null    float32
 80  X_80    128 non-null    float32
 81  X_81    128 non-null    float32
 82  X_82    128 non-null    float32
 83  X_83    128 non-null    float32
 84  X_84    128 non-null    float32
 85  X_85    128 non-null    float32
 86  X_86    128 non-null    float32
 87  X_87    128 non-null    float32
 88  X_88    128 non-null    float32
 89  X_89    128 non-null    float32
 90  X_90    128 non-null    float32
 91  X_91    128 non-null    float32
 92  X_92    128 non-null    float32
 93  X_93    128 non-null    float32
 94  X_94    128 non-null    float32
 95  X_95    128 non-null    float32
 96  X_96    128 non-null    float32
 97  X_97    128 non-null    float32
 98  X_98    128 non-null    float32
 99  X_99    128 non-null    float32
dtypes: float32(100)
memory usage: 51.0 KB
            X_0       X_1       X_2  ...      X_97      X_98      X_99
index                                ...                              
0     -0.001923 -2.371688 -1.181275  ... -1.828214 -0.370192  0.432550
1     -0.094974  0.975498  0.650450  ... -0.491931 -0.220261  0.222239
2      0.060564 -1.800755  0.053222  ...  1.636634  0.793880 -0.469869
3     -0.113704  0.680545 -0.819322  ... -0.792603  0.428237 -0.069851
4     -0.494085  0.103852  0.838905  ... -0.798744 -0.711862 -0.910029
...         ...       ...       ...  ...       ...       ...       ...
123   -1.641586 -1.435212 -1.466680  ... -0.564944  1.768780  0.132030
124   -0.333624 -1.181805 -0.885047  ...  1.335055 -0.070404 -0.513488
125    0.378192  0.162965  0.389403  ... -0.162535 -0.939559 -1.597954
126   -0.067286  0.126249  0.403635  ... -1.369467  1.155926  0.785249
127    0.956823 -0.959303  0.272337  ...  0.822936 -0.599084 -0.161305

[128 rows x 100 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 128 entries, 0 to 127
Data columns (total 9 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          128 non-null    int64  
 1   Score_0        128 non-null    float64
 2   Proba_0        128 non-null    float64
 3   LogProba_0     128 non-null    float64
 4   Score_1        128 non-null    float64
 5   Proba_1        128 non-null    float64
 6   LogProba_1     128 non-null    float64
 7   Decision       128 non-null    int64  
 8   DecisionProba  128 non-null    float64
dtypes: float64(7), int64(2)
memory usage: 9.1 KB
     index   Score_0   Proba_0  ...  LogProba_1  Decision  DecisionProba
0        0  0.350164  0.668260  ...   -1.103405         0       0.668260
1        1 -0.574532  0.240660  ...   -0.275306         1       0.759340
2        2  0.561442  0.754523  ...   -1.404553         0       0.754523
3        3 -0.420655  0.301259  ...   -0.358475         1       0.698741
4        4 -0.645986  0.215519  ...   -0.242733         1       0.784481
..     ...       ...       ...  ...         ...       ...            ...
123    123  0.351107  0.668679  ...   -1.104667         0       0.668679
124    124  0.202504  0.599890  ...   -0.916016         0       0.599890
125    125 -0.365364  0.325035  ...   -0.393095         1       0.674965
126    126 -0.526772  0.258545  ...   -0.299141         1       0.741455
127    127  0.331729  0.660037  ...   -1.078918         0       0.660037

[128 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
     index   Score_0  SQL_Proba_0  ...  Py_Proba_0  Py_Proba_1  Py_Decision
112    112 -0.481624     0.276229  ...    0.276229    0.723771            1
113    113 -0.534290     0.255673  ...    0.255673    0.744327            1
114    114 -0.392764     0.313130  ...    0.313129    0.686871            1
115    115  0.283544     0.638091  ...    0.638091    0.361909            0
116    116 -0.468034     0.281695  ...    0.281695    0.718305            1
117    117 -0.347185     0.333062  ...    0.333062    0.666938            1
118    118 -0.428195     0.298094  ...    0.298095    0.701905            1
119    119 -0.270213     0.368089  ...    0.368089    0.631911            1
120    120 -0.046050     0.476991  ...    0.476991    0.523009            1
121    121 -0.374950     0.320843  ...    0.320842    0.679158            1
122    122  0.494086     0.728727  ...    0.728726    0.271274            0
123    123  0.351107     0.668679  ...    0.668679    0.331321            0
124    124  0.202504     0.599890  ...    0.599889    0.400111            0
125    125 -0.365364     0.325035  ...    0.325036    0.674964            1
126    126 -0.526772     0.258545  ...    0.258545    0.741455            1
127    127  0.331729     0.660037  ...    0.660036    0.339964            0

[16 rows x 12 columns]
MLLITE_CLASS_SQL_ERROR ('BinaryClass_100_sampled', 'RidgeClassifier', 'duckdb') ('Py_Proba_0', 'SQL_Proba_0') 4.445250748282871e-07
     Py_Proba_0  SQL_Proba_0   SQL_Error_0
112    0.276229     0.276229  6.403651e-07
113    0.255673     0.255673  9.259618e-08
114    0.313129     0.313130 -7.895323e-07
115    0.638091     0.638091 -2.612064e-07
116    0.281695     0.281695 -2.639211e-08
117    0.333062     0.333062  8.754792e-07
118    0.298095     0.298094  7.597606e-07
119    0.368089     0.368089  2.406928e-07
120    0.476991     0.476991 -5.798669e-07
121    0.320842     0.320843 -7.396485e-07
122    0.728726     0.728727 -4.249272e-07
123    0.668679     0.668679  5.175518e-07
124    0.599889     0.599890 -7.026075e-07
125    0.325036     0.325035  6.393420e-07
126    0.258545     0.258545 -2.358696e-07
127    0.660036     0.660037 -4.836871e-07
MLLITE_CLASS_SQL_ERROR ('BinaryClass_100_sampled', 'RidgeClassifier', 'duckdb') ('Py_Proba_1', 'SQL_Proba_1') 4.421415969238767e-07
     Py_Proba_1  SQL_Proba_1   SQL_Error_1
112    0.723771     0.723771 -5.807605e-07
113    0.744327     0.744327 -9.259618e-08
114    0.686871     0.686870  7.895323e-07
115    0.361909     0.361909  3.506134e-07
116    0.718305     0.718305  2.639211e-08
117    0.666938     0.666938 -8.456768e-07
118    0.701905     0.701906 -7.597606e-07
119    0.631911     0.631911 -1.810882e-07
120    0.523009     0.523009  6.096692e-07
121    0.679158     0.679157  6.800439e-07
122    0.271274     0.271273  4.249272e-07
123    0.331321     0.331321 -4.877494e-07
124    0.400111     0.400110  6.430029e-07
125    0.674964     0.674965 -6.989467e-07
126    0.741455     0.741455  2.060673e-07
127    0.339964     0.339963  5.432917e-07
MLLITE_CLASS_SQL_EXECUTION_STATUS ('BinaryClass_100_sampled', 'RidgeClassifier', 'duckdb', 'Success')
     Py_Decision  SQL_Decision
112            1             1
113            1             1
114            1             1
115            0             0
116            1             1
117            1             1
118            1             1
119            1             1
120            1             1
121            1             1
122            0             0
123            0             0
124            0             0
125            1             1
126            1             1
127            0             0
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_100_sampled_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('BinaryClass_100_sampled', 'RidgeClassifier', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('BinaryClass_100_sampled', 'RidgeClassifier', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('BinaryClass_100_sampled', 'RidgeClassifier', 'sqlite')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('BinaryClass_100_sampled', 'RidgeClassifier', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 128 entries, 0 to 127
Data columns (total 100 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     128 non-null    float32
 1   X_1     128 non-null    float32
 2   X_2     128 non-null    float32
 3   X_3     128 non-null    float32
 4   X_4     128 non-null    float32
 5   X_5     128 non-null    float32
 6   X_6     128 non-null    float32
 7   X_7     128 non-null    float32
 8   X_8     128 non-null    float32
 9   X_9     128 non-null    float32
 10  X_10    128 non-null    float32
 11  X_11    128 non-null    float32
 12  X_12    128 non-null    float32
 13  X_13    128 non-null    float32
 14  X_14    128 non-null    float32
 15  X_15    128 non-null    float32
 16  X_16    128 non-null    float32
 17  X_17    128 non-null    float32
 18  X_18    128 non-null    float32
 19  X_19    128 non-null    float32
 20  X_20    128 non-null    float32
 21  X_21    128 non-null    float32
 22  X_22    128 non-null    float32
 23  X_23    128 non-null    float32
 24  X_24    128 non-null    float32
 25  X_25    128 non-null    float32
 26  X_26    128 non-null    float32
 27  X_27    128 non-null    float32
 28  X_28    128 non-null    float32
 29  X_29    128 non-null    float32
 30  X_30    128 non-null    float32
 31  X_31    128 non-null    float32
 32  X_32    128 non-null    float32
 33  X_33    128 non-null    float32
 34  X_34    128 non-null    float32
 35  X_35    128 non-null    float32
 36  X_36    128 non-null    float32
 37  X_37    128 non-null    float32
 38  X_38    128 non-null    float32
 39  X_39    128 non-null    float32
 40  X_40    128 non-null    float32
 41  X_41    128 non-null    float32
 42  X_42    128 non-null    float32
 43  X_43    128 non-null    float32
 44  X_44    128 non-null    float32
 45  X_45    128 non-null    float32
 46  X_46    128 non-null    float32
 47  X_47    128 non-null    float32
 48  X_48    128 non-null    float32
 49  X_49    128 non-null    float32
 50  X_50    128 non-null    float32
 51  X_51    128 non-null    float32
 52  X_52    128 non-null    float32
 53  X_53    128 non-null    float32
 54  X_54    128 non-null    float32
 55  X_55    128 non-null    float32
 56  X_56    128 non-null    float32
 57  X_57    128 non-null    float32
 58  X_58    128 non-null    float32
 59  X_59    128 non-null    float32
 60  X_60    128 non-null    float32
 61  X_61    128 non-null    float32
 62  X_62    128 non-null    float32
 63  X_63    128 non-null    float32
 64  X_64    128 non-null    float32
 65  X_65    128 non-null    float32
 66  X_66    128 non-null    float32
 67  X_67    128 non-null    float32
 68  X_68    128 non-null    float32
 69  X_69    128 non-null    float32
 70  X_70    128 non-null    float32
 71  X_71    128 non-null    float32
 72  X_72    128 non-null    float32
 73  X_73    128 non-null    float32
 74  X_74    128 non-null    float32
 75  X_75    128 non-null    float32
 76  X_76    128 non-null    float32
 77  X_77    128 non-null    float32
 78  X_78    128 non-null    float32
 79  X_79    128 non-null    float32
 80  X_80    128 non-null    float32
 81  X_81    128 non-null    float32
 82  X_82    128 non-null    float32
 83  X_83    128 non-null    float32
 84  X_84    128 non-null    float32
 85  X_85    128 non-null    float32
 86  X_86    128 non-null    float32
 87  X_87    128 non-null    float32
 88  X_88    128 non-null    float32
 89  X_89    128 non-null    float32
 90  X_90    128 non-null    float32
 91  X_91    128 non-null    float32
 92  X_92    128 non-null    float32
 93  X_93    128 non-null    float32
 94  X_94    128 non-null    float32
 95  X_95    128 non-null    float32
 96  X_96    128 non-null    float32
 97  X_97    128 non-null    float32
 98  X_98    128 non-null    float32
 99  X_99    128 non-null    float32
dtypes: float32(100)
memory usage: 51.0 KB
            X_0       X_1       X_2  ...      X_97      X_98      X_99
index                                ...                              
0     -0.001923 -2.371688 -1.181275  ... -1.828214 -0.370192  0.432550
1     -0.094974  0.975498  0.650450  ... -0.491931 -0.220261  0.222239
2      0.060564 -1.800755  0.053222  ...  1.636634  0.793880 -0.469869
3     -0.113704  0.680545 -0.819322  ... -0.792603  0.428237 -0.069851
4     -0.494085  0.103852  0.838905  ... -0.798744 -0.711862 -0.910029
...         ...       ...       ...  ...       ...       ...       ...
123   -1.641586 -1.435212 -1.466680  ... -0.564944  1.768780  0.132030
124   -0.333624 -1.181805 -0.885047  ...  1.335055 -0.070404 -0.513488
125    0.378192  0.162965  0.389403  ... -0.162535 -0.939559 -1.597954
126   -0.067286  0.126249  0.403635  ... -1.369467  1.155926  0.785249
127    0.956823 -0.959303  0.272337  ...  0.822936 -0.599084 -0.161305

[128 rows x 100 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 128 entries, 0 to 127
Data columns (total 9 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          128 non-null    int64  
 1   Score_0        128 non-null    float64
 2   Proba_0        128 non-null    float64
 3   LogProba_0     128 non-null    float64
 4   Score_1        128 non-null    float64
 5   Proba_1        128 non-null    float64
 6   LogProba_1     128 non-null    float64
 7   Decision       128 non-null    int64  
 8   DecisionProba  128 non-null    float64
dtypes: float64(7), int64(2)
memory usage: 9.1 KB
     index   Score_0   Proba_0  ...  LogProba_1  Decision  DecisionProba
0        0  0.350164  0.668260  ...   -1.103405         0       0.668260
1        1 -0.574532  0.240660  ...   -0.275306         1       0.759340
2        2  0.561442  0.754523  ...   -1.404553         0       0.754523
3        3 -0.420655  0.301259  ...   -0.358475         1       0.698741
4        4 -0.645986  0.215519  ...   -0.242733         1       0.784481
..     ...       ...       ...  ...         ...       ...            ...
123    123  0.351107  0.668679  ...   -1.104667         0       0.668679
124    124  0.202504  0.599890  ...   -0.916016         0       0.599890
125    125 -0.365364  0.325035  ...   -0.393095         1       0.674965
126    126 -0.526772  0.258545  ...   -0.299141         1       0.741455
127    127  0.331729  0.660037  ...   -1.078918         0       0.660037

[128 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
     index   Score_0  SQL_Proba_0  ...  Py_Proba_0  Py_Proba_1  Py_Decision
112    112 -0.481624     0.276228  ...    0.276229    0.723771            1
113    113 -0.534290     0.255673  ...    0.255673    0.744327            1
114    114 -0.392764     0.313130  ...    0.313129    0.686871            1
115    115  0.283544     0.638091  ...    0.638091    0.361909            0
116    116 -0.468034     0.281695  ...    0.281695    0.718305            1
117    117 -0.347185     0.333062  ...    0.333062    0.666938            1
118    118 -0.428195     0.298094  ...    0.298095    0.701905            1
119    119 -0.270213     0.368089  ...    0.368089    0.631911            1
120    120 -0.046050     0.476991  ...    0.476991    0.523009            1
121    121 -0.374950     0.320843  ...    0.320842    0.679158            1
122    122  0.494086     0.728727  ...    0.728726    0.271274            0
123    123  0.351107     0.668679  ...    0.668679    0.331321            0
124    124  0.202504     0.599890  ...    0.599889    0.400111            0
125    125 -0.365364     0.325035  ...    0.325036    0.674964            1
126    126 -0.526772     0.258545  ...    0.258545    0.741455            1
127    127  0.331729     0.660037  ...    0.660036    0.339964            0

[16 rows x 12 columns]
MLLITE_CLASS_SQL_ERROR ('BinaryClass_100_sampled', 'RidgeClassifier', 'sqlite') ('Py_Proba_0', 'SQL_Proba_0') 4.44923720276753e-07
     Py_Proba_0  SQL_Proba_0   SQL_Error_0
112    0.276229     0.276228  6.870255e-07
113    0.255673     0.255673  8.882350e-08
114    0.313129     0.313130 -7.308197e-07
115    0.638091     0.638091 -2.824449e-07
116    0.281695     0.281695 -9.618464e-08
117    0.333062     0.333062  8.950155e-07
118    0.298095     0.298094  7.206180e-07
119    0.368089     0.368089  1.841274e-07
120    0.476991     0.476991 -5.660763e-07
121    0.320842     0.320843 -7.472348e-07
122    0.728726     0.728727 -3.676205e-07
123    0.668679     0.668679  5.127927e-07
124    0.599889     0.599890 -6.810600e-07
125    0.325036     0.325035  6.438352e-07
126    0.258545     0.258545 -2.212517e-07
127    0.660036     0.660037 -4.284578e-07
MLLITE_CLASS_SQL_ERROR ('BinaryClass_100_sampled', 'RidgeClassifier', 'sqlite') ('Py_Proba_1', 'SQL_Proba_1') 4.419926750386365e-07
     Py_Proba_1  SQL_Proba_1   SQL_Error_1
112    0.723771     0.723772 -6.274209e-07
113    0.744327     0.744327 -8.882350e-08
114    0.686871     0.686870  7.308197e-07
115    0.361909     0.361909  3.718519e-07
116    0.718305     0.718305  9.618464e-08
117    0.666938     0.666938 -8.652132e-07
118    0.701905     0.701906 -7.206180e-07
119    0.631911     0.631911 -1.245228e-07
120    0.523009     0.523009  5.958786e-07
121    0.679158     0.679157  6.876301e-07
122    0.271274     0.271273  3.676205e-07
123    0.331321     0.331321 -4.829904e-07
124    0.400111     0.400110  6.214554e-07
125    0.674964     0.674965 -7.034399e-07
126    0.741455     0.741455  1.914494e-07
127    0.339964     0.339963  4.880624e-07
MLLITE_CLASS_SQL_EXECUTION_STATUS ('BinaryClass_100_sampled', 'RidgeClassifier', 'sqlite', 'Success')
     Py_Decision  SQL_Decision
112            1             1
113            1             1
114            1             1
115            0             0
116            1             1
117            1             1
118            1             1
119            1             1
120            1             1
121            1             1
122            0             0
123            0             0
124            0             0
125            1             1
126            1             1
127            0             0
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
