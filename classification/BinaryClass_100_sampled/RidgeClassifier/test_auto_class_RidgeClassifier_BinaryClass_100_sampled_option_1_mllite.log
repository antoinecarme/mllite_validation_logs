          X_0       X_1       X_2  ...      X_98      X_99  target
0   -0.001923 -2.371688 -1.181275  ... -0.370192  0.432550       0
1   -0.094974  0.975498  0.650450  ... -0.220261  0.222239       1
2    0.060564 -1.800755  0.053222  ...  0.793880 -0.469869       0
3   -0.113704  0.680545 -0.819322  ...  0.428237 -0.069851       1
4   -0.494085  0.103852  0.838905  ... -0.711862 -0.910029       1
..        ...       ...       ...  ...       ...       ...     ...
123 -1.641586 -1.435212 -1.466680  ...  1.768780  0.132030       0
124 -0.333624 -1.181805 -0.885047  ... -0.070404 -0.513488       0
125  0.378192  0.162965  0.389403  ... -0.939559 -1.597954       1
126 -0.067286  0.126249  0.403635  ...  1.155926  0.785249       1
127  0.956823 -0.959303  0.272337  ... -0.599084 -0.161305       0

[128 rows x 101 columns]
MLLITE_MODEL_SET_OPTIONS RidgeClassifier {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { "alpha" : 0.0000001,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
('OPERATION_START', 'TRAINING')
[[-1.92301034e-03 -2.37168813e+00 -1.18127453e+00 -8.41143429e-01
  -2.27833748e+00  5.56165516e-01 -4.33400422e-01  6.68530583e-01
  -4.45269734e-01  1.08730054e+00  9.94111359e-01  6.15174830e-01
  -1.42712057e-01 -5.43691695e-01  2.51998758e+00 -5.76757491e-01
  -4.96940762e-01 -1.37897694e+00 -1.15515006e+00 -5.45445085e-01
   9.39146876e-01  5.58746934e-01  6.42707646e-02  9.41048622e-01
   3.70287567e-01  3.05628687e-01  6.59754872e-01 -5.34938514e-01
   3.41925710e-01 -9.02376890e-01  2.64374584e-01  1.05001062e-01
   1.58149529e+00 -2.39867258e+00  3.65284145e-01 -1.43215582e-01
  -6.91276610e-01 -1.09551179e+00  6.00470424e-01 -1.27839279e+00
  -1.51853383e+00 -7.39996552e-01 -1.09941888e+00 -1.00493443e+00
   5.02316713e-01  5.94181597e-01 -4.22067046e-01  5.80759704e-01
  -9.45604265e-01 -8.63473296e-01  1.73380065e+00  4.05579746e-01
  -1.31068170e+00 -2.56809741e-01  2.29151353e-01  3.84321451e-01
  -5.51349640e-01  1.19658613e+00  3.84441763e-01 -3.77902836e-01
   6.52891636e-01 -1.64592862e+00  1.05294979e+00  8.23636234e-01
   1.37784421e+00 -7.36219212e-02  1.61197138e+00 -1.98621261e+00
   1.18670213e+00  1.34875977e+00 -3.60972047e-01 -2.41051650e+00
  -1.94886446e+00 -6.28324568e-01 -1.05058098e+00 -2.54030657e+00
   1.56220317e-01  1.23859513e+00 -8.52460384e-01 -1.03192151e+00
   7.05807090e-01  3.12049419e-01  1.97033249e-02 -1.49339557e+00
  -9.82222795e-01 -2.90390223e-01  9.48299840e-02 -1.34775198e+00
  -5.61226130e-01 -4.61151361e-01  6.03559203e-02  1.79786313e+00
   4.18422371e-01  1.31290972e+00 -5.27386606e-01  7.88664445e-02
  -4.97837096e-01 -1.82821357e+00 -3.70192051e-01  4.32550102e-01]
 [-9.49740633e-02  9.75498080e-01  6.50450408e-01 -1.63987532e-01
   1.19377956e-01 -8.87404203e-01 -9.85744298e-01 -1.57699615e-01
  -5.53503856e-02 -4.89691913e-01  3.95107746e-01 -1.86406958e+00
   2.06569105e-01  1.19034803e+00  9.08305228e-01 -6.49589598e-01
   8.17796350e-01 -5.65862536e-01 -1.62303770e+00  1.96794593e+00
  -9.01196182e-01  2.21370864e+00 -1.26184642e+00  7.29401052e-01
   1.97460622e-01  5.53488255e-01 -4.16989103e-02  2.21864507e-01
  -1.60427725e+00 -1.14986289e+00  7.22467899e-01 -1.29073668e+00
  -6.89864635e-01 -9.29718554e-01  5.53363264e-01  7.69885540e-01
   3.78352642e-01  9.23741400e-01  2.08281234e-01  3.80240083e-02
  -8.87683213e-01  3.33101004e-01  1.00212204e+00  1.69690156e+00
   2.44307727e-01 -1.86227322e+00 -4.06760365e-01 -6.38921678e-01
  -1.67613909e-01  1.53844684e-01  8.42663527e-01 -1.62592280e+00
  -1.59404182e+00  7.38830745e-01 -8.74506593e-01 -1.22548962e+00
  -5.25257468e-01 -4.70152795e-01 -1.15468964e-01  4.96193357e-02
  -8.19156051e-01  2.99073744e+00  4.35046047e-01 -7.59149939e-02
  -1.56339154e-01 -6.03336692e-01 -6.89302310e-02 -2.13743591e+00
   2.04948735e+00 -1.69878006e+00  1.88749945e+00  4.05677646e-01
  -5.13272583e-01 -5.22737443e-01  1.29273057e+00  1.05886006e+00
  -3.68327975e-01  5.86420834e-01  1.94629407e+00  3.96328539e-01
  -2.22653337e-02  1.84837833e-01  1.55221510e+00  7.67667949e-01
   4.12257463e-01 -4.74151075e-02 -8.58929634e-01 -3.77886832e-01
   8.46213162e-01  3.82268399e-01  4.52266574e-01  3.67907345e-01
  -1.74708021e+00  2.97413111e-01  1.39319599e-01  6.18183054e-02
  -1.14589304e-01 -4.91930753e-01 -2.20261484e-01  2.22238824e-01]
 [ 6.05639964e-02 -1.80075538e+00  5.32221198e-02  1.13705254e+00
  -1.11454320e+00 -6.12991691e-01  6.58748865e-01 -6.18573092e-02
  -1.36188239e-01 -6.56564057e-01 -3.13579798e-01  2.24243671e-01
   4.27837819e-01  1.69016683e+00  1.13053429e+00 -1.34645033e+00
   4.66799051e-01 -1.12207568e+00 -1.80836928e+00  2.61885583e-01
  -1.46927464e+00 -2.81107831e+00  4.71088886e-01 -9.81634736e-01
   1.54162824e-01 -9.45118725e-01 -7.67153800e-01  2.78682500e-01
  -3.97465616e-01 -3.84304225e-01 -2.76822597e-02 -9.13487732e-01
   5.98323822e-01  7.34539688e-01  1.80665767e+00 -1.05402780e+00
  -2.37955928e+00 -1.01849586e-01 -1.25161910e+00 -3.40773277e-02
  -5.89699388e-01  4.64297593e-01 -7.69342899e-01 -4.94058549e-01
   1.90302110e+00 -1.28648996e+00 -2.02911228e-01  1.30722094e+00
  -9.35619593e-01 -7.99053609e-01 -8.04178536e-01 -1.16746537e-01
   1.43000674e+00  5.87966681e-01 -7.76776969e-01  1.36388794e-01
  -1.52828979e+00  1.08090746e+00  1.06615996e+00  6.13719285e-01
  -1.56638134e+00 -2.99079442e+00 -9.23732638e-01  1.24830830e+00
  -3.28231335e-01 -7.79168904e-01 -2.46622109e+00  7.15086102e-01
  -1.71361104e-01  1.16359353e+00  4.88843828e-01  8.57221186e-01
  -1.30257130e+00  7.77815223e-01  1.57720637e+00  2.45493579e+00
   8.09955537e-01  2.80593574e-01  4.77433234e-01 -2.73493845e-02
   1.58274734e+00  1.18173122e+00  1.69938195e+00  1.51718628e+00
  -1.84085965e-01  6.12297058e-01 -1.40703619e-01  9.34502482e-01
   3.93216848e-01 -9.26083088e-01  7.44229436e-01  2.88019562e+00
   1.62651956e+00 -1.24643338e+00  1.11573339e-02  1.65077448e-01
   3.82369637e+00  1.63663363e+00  7.93880284e-01 -4.69868749e-01]
 [-1.13704078e-01  6.80544913e-01 -8.19322228e-01 -9.69877481e-01
   7.71628141e-01 -1.57383764e+00  2.48730704e-01  5.41360080e-01
  -1.59036744e+00 -3.12054634e-01 -1.64359498e+00  1.50122166e+00
  -1.00549912e+00 -1.26486790e+00 -2.33127594e+00  1.01962104e-01
   5.75607657e-01 -1.20477211e+00 -9.19741020e-02 -1.16153848e+00
   2.32242107e+00  1.63334921e-01  1.69249582e+00  2.74418384e-01
  -1.81126118e+00  8.80577981e-01  7.02414274e-01  1.03724468e+00
   1.05812097e+00  1.13643229e+00 -7.69474387e-01  5.84956825e-01
  -9.34404075e-01 -1.12673771e+00 -3.59424800e-01 -1.02582085e+00
  -9.53075886e-01 -8.06699455e-01 -2.95903623e-01  1.28596336e-01
  -2.09618449e+00  1.96716547e-01 -1.33443916e+00  6.67538345e-01
  -2.04303360e+00  6.56667471e-01 -1.87788701e+00 -7.45100915e-01
   3.34480464e-01  2.30912209e-01 -1.05614233e+00  1.71417046e+00
   1.68882191e+00  1.25794733e+00  7.77477682e-01 -1.20922111e-01
   1.01463521e+00  7.94170141e-01  8.18609297e-01  1.13752067e-01
   7.90019155e-01  1.38778999e-01  8.86305422e-02  1.08791220e+00
  -1.64308107e+00 -9.54914749e-01  2.37339306e+00  9.95790303e-01
  -1.40296519e-01 -4.31657374e-01 -3.15623283e-02 -1.30086195e+00
  -5.68930566e-01  5.63574135e-01 -8.70503426e-01  4.14068997e-01
  -8.70141163e-02 -1.51894724e+00 -1.23855531e+00  1.29880026e-01
  -5.59461713e-01 -1.26385403e+00  1.59277141e-01 -1.86286375e-01
   5.10727882e-01  1.43785611e-01 -1.63213980e+00  3.82019728e-01
  -1.09840834e+00 -1.70634732e-01 -4.41302881e-02 -3.41793835e-01
   3.30759794e-01  4.17531244e-02 -3.37710887e-01  1.44820738e+00
   1.34170282e+00 -7.92602599e-01  4.28236961e-01 -6.98510483e-02]
 [-4.94084507e-01  1.03852168e-01  8.38904679e-01 -7.35904038e-01
  -7.04967678e-02  5.73717237e-01  2.18849331e-01  1.05623102e+00
  -1.25785077e+00  1.13013601e+00 -1.55437517e+00  9.51525688e-01
  -1.67592776e+00 -3.48637164e-01  1.60759163e+00  6.90805376e-01
  -1.13699162e+00  9.32226717e-01 -8.86185884e-01  6.50337562e-02
  -6.33093655e-01 -4.60071653e-01 -3.17828417e-01 -6.01315439e-01
  -7.02504814e-02 -2.66349375e-01 -1.10489130e+00  1.07519376e+00
  -4.23042387e-01  3.45855922e-01 -5.60104251e-01  3.57963622e-01
   1.71203125e+00  1.49234402e+00 -1.28127527e+00  3.17688972e-01
   2.95880270e+00  8.53792131e-01 -2.06153846e+00 -3.91467154e-01
  -2.43756063e-02  1.67333499e-01  1.17837632e+00 -4.12473530e-01
   1.56250536e-01 -3.51341099e-01 -9.60100651e-01  1.04467452e+00
   1.08441925e+00  5.52181721e-01 -1.01620758e+00 -2.87865996e+00
   5.76726556e-01 -5.82755208e-01  6.56063616e-01 -1.08061683e+00
  -5.74857712e-01  7.20476925e-01 -1.94190967e+00 -5.61854243e-01
   6.89151466e-01  5.53826809e-01 -3.96725759e-02 -2.25085169e-01
   2.28897452e+00  6.30537391e-01  1.64857304e+00 -5.28170049e-01
   5.29594898e-01 -1.10107467e-01  1.42280829e+00  1.06736279e+00
  -2.18277469e-01 -2.87699342e-01  4.86762732e-01 -1.59002244e+00
   5.11812679e-02 -4.70185161e-01  1.38356775e-01  7.31057286e-01
  -1.03853390e-01  4.13611174e-01  4.17555958e-01  1.10078800e+00
   8.31761479e-01  1.25986600e+00  2.73322630e+00  1.30618227e+00
  -1.60953015e-01 -1.14850438e+00 -1.69689417e+00 -4.59983468e-01
   1.92816043e+00 -1.38011467e+00  1.83180821e+00  5.52028716e-01
   3.90167475e-01 -7.98744082e-01 -7.11862028e-01 -9.10029233e-01]] [0 1 0 1 1]
MLLITE_FIT_USING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 3 4
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 4 4
('OPERATION_END_ELAPSED', 0.037, 'TRAINING')
{ "alpha" : 0.0000001,   }
{ "alpha" : 0.0000001,   }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W13", "signature" : "ff4_il8"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 128, "dataset_features" : 100 },
	"classes" : [ 0, 1 ],
	"equations" : {
		"class_1" : {
			"intercept" : 0.046977,
			"coeffs" : [ -0.091726, 0.258166, -0.063287, 0.042200, 0.132079, 0.001155, 0.262497, 0.103323, 0.395632, 0.152949, 0.069377, 0.264652, 0.090860, 0.082919, 0.100351, -0.062719, -0.053960, -0.004135, 0.131335, -0.291210, 0.136688, 0.166088, 0.063809, -0.012930, -0.213238, 0.063221, -0.138693, -0.071621, 0.105726, 0.303203, -0.352157, -0.194048, 0.134539, -0.044370, 0.147506, 0.008124, 0.101006, 0.063281, -0.148060, -0.054146, 0.008510, -0.081608, -0.173011, 0.268942, -0.025052, 0.078709, 0.049402, -0.036131, -0.013304, 0.248381, 0.025134, -0.279088, 0.002943, 0.032254, 0.211865, -0.043028, -0.084238, 0.030329, 0.011722, -0.054497, -0.305778, 0.249182, -0.020488, -0.091660, -0.020716, 0.106050, -0.110236, -0.102131, 0.172389, -0.019017, -0.146147, -0.149484, 0.015508, -0.071588, 0.190296, -0.055993, -0.134726, 0.195643, -0.117722, -0.059334, 0.010577, -0.014207, 0.112825, 0.224457, 0.258585, -0.135786, -0.122692, 0.151789, 0.160981, -0.044851, 0.093330, -0.026133, 0.029651, 0.201193, 0.044612, 0.154883, 0.110507, -0.205241, -0.042992, -0.123671 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_100_sampled_option_1.json'

MLLITE_MODEL_SET_OPTIONS RidgeClassifier {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { "alpha" : 0.0000001,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
MLLITE_RELOADING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W13", "signature" : "ff4_il8"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 128, "dataset_features" : 100 },
	"classes" : [ 0, 1 ],
	"equations" : {
		"class_1" : {
			"intercept" : 0.046977,
			"coeffs" : [ -0.091726, 0.258166, -0.063287, 0.042200, 0.132079, 0.001155, 0.262497, 0.103323, 0.395632, 0.152949, 0.069377, 0.264652, 0.090860, 0.082919, 0.100351, -0.062719, -0.053960, -0.004135, 0.131335, -0.291210, 0.136688, 0.166088, 0.063809, -0.012930, -0.213238, 0.063221, -0.138693, -0.071621, 0.105726, 0.303203, -0.352157, -0.194048, 0.134539, -0.044370, 0.147506, 0.008124, 0.101006, 0.063281, -0.148060, -0.054146, 0.008510, -0.081608, -0.173011, 0.268942, -0.025052, 0.078709, 0.049402, -0.036131, -0.013304, 0.248381, 0.025134, -0.279088, 0.002943, 0.032254, 0.211865, -0.043028, -0.084238, 0.030329, 0.011722, -0.054497, -0.305778, 0.249182, -0.020488, -0.091660, -0.020716, 0.106050, -0.110236, -0.102131, 0.172389, -0.019017, -0.146147, -0.149484, 0.015508, -0.071588, 0.190296, -0.055993, -0.134726, 0.195643, -0.117722, -0.059334, 0.010577, -0.014207, 0.112825, 0.224457, 0.258585, -0.135786, -0.122692, 0.151789, 0.160981, -0.044851, 0.093330, -0.026133, 0.029651, 0.201193, 0.044612, 0.154883, 0.110507, -0.205241, -0.042992, -0.123671 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1 ],
	"dataset" : 	{
		"dataset_features" : 100,
		"dataset_rows" : 128
	},
	"equations" : 	{
		"class_1" : 	{
			"coeffs" : [ -0.091726, 0.258166, -0.063287, 0.0422, 0.132079, 0.001155, 0.262497, 0.103323, 0.395632, 0.152949, 0.069377, 0.264652, 0.09086, 0.082919, 0.100351, -0.062719, -0.05396, -0.004135, 0.131335, -0.29121, 0.136688, 0.166088, 0.063809, -0.01293, -0.213238, 0.063221, -0.138693, -0.071621, 0.105726, 0.303203, -0.352157, -0.194048, 0.134539, -0.04437, 0.147506, 0.008124, 0.101006, 0.063281, -0.14806, -0.054146, 0.00851, -0.081608, -0.173011, 0.268942, -0.025052, 0.078709, 0.049402, -0.036131, -0.013304, 0.248381, 0.025134, -0.279088, 0.002943, 0.032254, 0.211865, -0.043028, -0.084238, 0.030329, 0.011722, -0.054497, -0.305778, 0.249182, -0.020488, -0.09166, -0.020716, 0.10605, -0.110236, -0.102131, 0.172389, -0.019017, -0.146147, -0.149484, 0.015508, -0.071588, 0.190296, -0.055993, -0.134726, 0.195643, -0.117722, -0.059334, 0.010577, -0.014207, 0.112825, 0.224457, 0.258585, -0.135786, -0.122692, 0.151789, 0.160981, -0.044851, 0.09333, -0.026133, 0.029651, 0.201193, 0.044612, 0.154883, 0.110507, -0.205241, -0.042992, -0.123671 ],
			"intercept" : 0.046977
		}
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_il8", "version" : "2024-W13" },
	"options" :  { "alpha" : 0.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0.6704 0.3296]
 [0.2338 0.7662]
 [0.7574 0.2426]
 [0.2846 0.7154]
 [0.2153 0.7847]
 [0.3223 0.6777]
 [0.2089 0.7911]
 [0.4267 0.5733]
 [0.7303 0.2697]
 [0.2969 0.7031]
 [0.8164 0.1836]
 [0.2759 0.7241]
 [0.7793 0.2207]
 [0.4058 0.5942]
 [0.773  0.227 ]
 [0.7974 0.2026]
 [0.5264 0.4736]
 [0.3196 0.6804]
 [0.2348 0.7652]
 [0.3875 0.6125]
 [0.7988 0.2012]
 [0.6862 0.3138]
 [0.7761 0.2239]
 [0.6592 0.3408]
 [0.734  0.266 ]
 [0.6642 0.3358]
 [0.7368 0.2632]
 [0.7214 0.2786]
 [0.6901 0.3099]
 [0.2351 0.7649]
 [0.2625 0.7375]
 [0.1668 0.8332]
 [0.7535 0.2465]
 [0.2545 0.7455]
 [0.6548 0.3452]
 [0.69   0.31  ]
 [0.2427 0.7573]
 [0.7876 0.2124]
 [0.6538 0.3462]
 [0.2603 0.7397]
 [0.4237 0.5763]
 [0.5935 0.4065]
 [0.3107 0.6893]
 [0.7416 0.2584]
 [0.1784 0.8216]
 [0.2427 0.7573]
 [0.7864 0.2136]
 [0.7109 0.2891]
 [0.663  0.337 ]
 [0.2834 0.7166]
 [0.605  0.395 ]
 [0.2809 0.7191]
 [0.2541 0.7459]
 [0.7525 0.2475]
 [0.295  0.705 ]
 [0.6938 0.3062]
 [0.7278 0.2722]
 [0.6233 0.3767]
 [0.7119 0.2881]
 [0.4703 0.5297]
 [0.7789 0.2211]
 [0.6812 0.3188]
 [0.2337 0.7663]
 [0.5761 0.4239]
 [0.696  0.304 ]
 [0.2774 0.7226]
 [0.2227 0.7773]
 [0.3745 0.6255]
 [0.6368 0.3632]
 [0.7395 0.2605]
 [0.574  0.426 ]
 [0.3506 0.6494]
 [0.6786 0.3214]
 [0.2929 0.7071]
 [0.2283 0.7717]
 [0.7195 0.2805]
 [0.6911 0.3089]
 [0.7446 0.2554]
 [0.6952 0.3048]
 [0.6723 0.3277]
 [0.7678 0.2322]
 [0.6958 0.3042]
 [0.3764 0.6236]
 [0.797  0.203 ]
 [0.365  0.635 ]
 [0.6366 0.3634]
 [0.2845 0.7155]
 [0.8396 0.1604]
 [0.6646 0.3354]
 [0.3497 0.6503]
 [0.726  0.274 ]
 [0.3144 0.6856]
 [0.3097 0.6903]
 [0.4334 0.5666]
 [0.716  0.284 ]
 [0.1987 0.8013]
 [0.7566 0.2434]
 [0.2565 0.7435]
 [0.7532 0.2468]
 [0.7438 0.2562]
 [0.71   0.29  ]
 [0.7932 0.2068]
 [0.3256 0.6744]
 [0.3318 0.6682]
 [0.3513 0.6487]
 [0.7197 0.2803]
 [0.2359 0.7641]
 [0.2738 0.7262]
 [0.6197 0.3803]
 [0.5485 0.4515]
 [0.7549 0.2451]
 [0.25   0.75  ]
 [0.2784 0.7216]
 [0.2635 0.7365]
 [0.3191 0.6809]
 [0.6464 0.3536]
 [0.276  0.724 ]
 [0.3255 0.6745]
 [0.2992 0.7008]
 [0.362  0.638 ]
 [0.4547 0.5453]
 [0.3274 0.6726]
 [0.7354 0.2646]
 [0.6748 0.3252]
 [0.5996 0.4004]
 [0.3291 0.6709]
 [0.2594 0.7406]
 [0.6608 0.3392]]
(128, 2)
(128,) float32
MODEL_PERFS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': '{"alpha" : 0.0000001}', 'dataset': 'BinaryClass_100_sampled', 'size': 128, 'accuracy': 1.0, 'auc': 1.0}
WRITING_PERF_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_100_sampled_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': '{"alpha" : 0.0000001}', 'dataset': 'BinaryClass_100_sampled', 'training_time_in_sec': 0.037, 'prediction_time_in_sec': 0.0}
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_100_sampled_option_1_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('BinaryClass_100_sampled', 'RidgeClassifier', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('BinaryClass_100_sampled', 'RidgeClassifier', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('BinaryClass_100_sampled', 'RidgeClassifier', 'duckdb')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('BinaryClass_100_sampled', 'RidgeClassifier', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 128 entries, 0 to 127
Data columns (total 100 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     128 non-null    float32
 1   X_1     128 non-null    float32
 2   X_2     128 non-null    float32
 3   X_3     128 non-null    float32
 4   X_4     128 non-null    float32
 5   X_5     128 non-null    float32
 6   X_6     128 non-null    float32
 7   X_7     128 non-null    float32
 8   X_8     128 non-null    float32
 9   X_9     128 non-null    float32
 10  X_10    128 non-null    float32
 11  X_11    128 non-null    float32
 12  X_12    128 non-null    float32
 13  X_13    128 non-null    float32
 14  X_14    128 non-null    float32
 15  X_15    128 non-null    float32
 16  X_16    128 non-null    float32
 17  X_17    128 non-null    float32
 18  X_18    128 non-null    float32
 19  X_19    128 non-null    float32
 20  X_20    128 non-null    float32
 21  X_21    128 non-null    float32
 22  X_22    128 non-null    float32
 23  X_23    128 non-null    float32
 24  X_24    128 non-null    float32
 25  X_25    128 non-null    float32
 26  X_26    128 non-null    float32
 27  X_27    128 non-null    float32
 28  X_28    128 non-null    float32
 29  X_29    128 non-null    float32
 30  X_30    128 non-null    float32
 31  X_31    128 non-null    float32
 32  X_32    128 non-null    float32
 33  X_33    128 non-null    float32
 34  X_34    128 non-null    float32
 35  X_35    128 non-null    float32
 36  X_36    128 non-null    float32
 37  X_37    128 non-null    float32
 38  X_38    128 non-null    float32
 39  X_39    128 non-null    float32
 40  X_40    128 non-null    float32
 41  X_41    128 non-null    float32
 42  X_42    128 non-null    float32
 43  X_43    128 non-null    float32
 44  X_44    128 non-null    float32
 45  X_45    128 non-null    float32
 46  X_46    128 non-null    float32
 47  X_47    128 non-null    float32
 48  X_48    128 non-null    float32
 49  X_49    128 non-null    float32
 50  X_50    128 non-null    float32
 51  X_51    128 non-null    float32
 52  X_52    128 non-null    float32
 53  X_53    128 non-null    float32
 54  X_54    128 non-null    float32
 55  X_55    128 non-null    float32
 56  X_56    128 non-null    float32
 57  X_57    128 non-null    float32
 58  X_58    128 non-null    float32
 59  X_59    128 non-null    float32
 60  X_60    128 non-null    float32
 61  X_61    128 non-null    float32
 62  X_62    128 non-null    float32
 63  X_63    128 non-null    float32
 64  X_64    128 non-null    float32
 65  X_65    128 non-null    float32
 66  X_66    128 non-null    float32
 67  X_67    128 non-null    float32
 68  X_68    128 non-null    float32
 69  X_69    128 non-null    float32
 70  X_70    128 non-null    float32
 71  X_71    128 non-null    float32
 72  X_72    128 non-null    float32
 73  X_73    128 non-null    float32
 74  X_74    128 non-null    float32
 75  X_75    128 non-null    float32
 76  X_76    128 non-null    float32
 77  X_77    128 non-null    float32
 78  X_78    128 non-null    float32
 79  X_79    128 non-null    float32
 80  X_80    128 non-null    float32
 81  X_81    128 non-null    float32
 82  X_82    128 non-null    float32
 83  X_83    128 non-null    float32
 84  X_84    128 non-null    float32
 85  X_85    128 non-null    float32
 86  X_86    128 non-null    float32
 87  X_87    128 non-null    float32
 88  X_88    128 non-null    float32
 89  X_89    128 non-null    float32
 90  X_90    128 non-null    float32
 91  X_91    128 non-null    float32
 92  X_92    128 non-null    float32
 93  X_93    128 non-null    float32
 94  X_94    128 non-null    float32
 95  X_95    128 non-null    float32
 96  X_96    128 non-null    float32
 97  X_97    128 non-null    float32
 98  X_98    128 non-null    float32
 99  X_99    128 non-null    float32
dtypes: float32(100)
memory usage: 51.0 KB
            X_0       X_1       X_2  ...      X_97      X_98      X_99
index                                ...                              
0     -0.001923 -2.371688 -1.181275  ... -1.828214 -0.370192  0.432550
1     -0.094974  0.975498  0.650450  ... -0.491931 -0.220261  0.222239
2      0.060564 -1.800755  0.053222  ...  1.636634  0.793880 -0.469869
3     -0.113704  0.680545 -0.819322  ... -0.792603  0.428237 -0.069851
4     -0.494085  0.103852  0.838905  ... -0.798744 -0.711862 -0.910029
...         ...       ...       ...  ...       ...       ...       ...
123   -1.641586 -1.435212 -1.466680  ... -0.564944  1.768780  0.132030
124   -0.333624 -1.181805 -0.885047  ...  1.335055 -0.070404 -0.513488
125    0.378192  0.162965  0.389403  ... -0.162535 -0.939559 -1.597954
126   -0.067286  0.126249  0.403635  ... -1.369467  1.155926  0.785249
127    0.956823 -0.959303  0.272337  ...  0.822936 -0.599084 -0.161305

[128 rows x 100 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 128 entries, 0 to 127
Data columns (total 9 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          128 non-null    int64  
 1   Score_0        128 non-null    float64
 2   Proba_0        128 non-null    float64
 3   LogProba_0     128 non-null    float64
 4   Score_1        128 non-null    float64
 5   Proba_1        128 non-null    float64
 6   LogProba_1     128 non-null    float64
 7   Decision       128 non-null    int64  
 8   DecisionProba  128 non-null    float64
dtypes: float64(7), int64(2)
memory usage: 9.1 KB
     index   Score_0   Proba_0  ...  LogProba_1  Decision  DecisionProba
0        0  0.354914  0.670363  ...   -1.109763         0       0.670363
1        1 -0.593381  0.233839  ...   -0.266362         1       0.766161
2        2  0.569165  0.757373  ...   -1.416230         0       0.757373
3        3 -0.460817  0.284625  ...   -0.334949         1       0.715375
4        4 -0.646774  0.215253  ...   -0.242394         1       0.784747
..     ...       ...       ...  ...         ...       ...            ...
123    123  0.365072  0.674837  ...   -1.123428         0       0.674837
124    124  0.201859  0.599581  ...   -0.915243         0       0.599581
125    125 -0.356134  0.329098  ...   -0.399132         1       0.670902
126    126 -0.524509  0.259414  ...   -0.300313         1       0.740586
127    127  0.333485  0.660824  ...   -1.081237         0       0.660824

[128 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
     index   Score_0  SQL_Proba_0  ...  Py_Proba_0  Py_Proba_1  Py_Decision
112    112 -0.476288     0.278367  ...    0.278367    0.721633            1
113    113 -0.513818     0.263543  ...    0.263543    0.736457            1
114    114 -0.378893     0.319127  ...    0.319127    0.680873            1
115    115  0.301704     0.646435  ...    0.646435    0.353565            0
116    116 -0.482191     0.276002  ...    0.276001    0.723999            1
117    117 -0.364313     0.325496  ...    0.325497    0.674503            1
118    118 -0.425586     0.299187  ...    0.299188    0.700812            1
119    119 -0.283329     0.362009  ...    0.362009    0.637991            1
120    120 -0.090766     0.454741  ...    0.454740    0.545260            1
121    121 -0.359881     0.327445  ...    0.327446    0.672554            1
122    122  0.511204     0.735441  ...    0.735441    0.264559            0
123    123  0.365072     0.674837  ...    0.674836    0.325164            0
124    124  0.201859     0.599581  ...    0.599581    0.400419            0
125    125 -0.356134     0.329098  ...    0.329098    0.670902            1
126    126 -0.524509     0.259414  ...    0.259413    0.740587            1
127    127  0.333485     0.660824  ...    0.660824    0.339176            0

[16 rows x 12 columns]
MLLITE_CLASS_SQL_ERROR ('BinaryClass_100_sampled', 'RidgeClassifier', 'duckdb') ('Py_Proba_0', 'SQL_Proba_0') 4.4769728763582525e-07
     Py_Proba_0  SQL_Proba_0   SQL_Error_0
112    0.278367     0.278367 -6.683811e-07
113    0.263543     0.263543  4.972112e-07
114    0.319127     0.319127 -1.477205e-07
115    0.646435     0.646435 -5.847673e-07
116    0.276001     0.276002 -2.876556e-07
117    0.325497     0.325496  1.012333e-06
118    0.299188     0.299187  7.356640e-07
119    0.362009     0.362009  3.230374e-07
120    0.454740     0.454741 -7.632532e-07
121    0.327446     0.327445  5.586819e-07
122    0.735441     0.735441 -2.630243e-07
123    0.674836     0.674837 -5.349782e-07
124    0.599581     0.599581  4.073403e-07
125    0.329098     0.329098 -7.372724e-08
126    0.259413     0.259414 -7.602566e-07
127    0.660824     0.660824  2.152579e-07
MLLITE_CLASS_SQL_ERROR ('BinaryClass_100_sampled', 'RidgeClassifier', 'duckdb') ('Py_Proba_1', 'SQL_Proba_1') 4.5070187486197927e-07
     Py_Proba_1  SQL_Proba_1   SQL_Error_1
112    0.721633     0.721633  6.087764e-07
113    0.736457     0.736457 -4.674088e-07
114    0.680873     0.680873  1.477205e-07
115    0.353565     0.353565  5.847673e-07
116    0.723999     0.723998  3.472603e-07
117    0.674503     0.674504 -1.042135e-06
118    0.700812     0.700813 -7.058616e-07
119    0.637991     0.637991 -3.230374e-07
120    0.545260     0.545259  7.632532e-07
121    0.672554     0.672555 -5.884842e-07
122    0.264559     0.264559  2.332220e-07
123    0.325164     0.325163  5.647805e-07
124    0.400419     0.400419 -4.073403e-07
125    0.670902     0.670902  4.392492e-08
126    0.740587     0.740586  7.900589e-07
127    0.339176     0.339176 -1.258509e-07
MLLITE_CLASS_SQL_EXECUTION_STATUS ('BinaryClass_100_sampled', 'RidgeClassifier', 'duckdb', 'Success')
     Py_Decision  SQL_Decision
112            1             1
113            1             1
114            1             1
115            0             0
116            1             1
117            1             1
118            1             1
119            1             1
120            1             1
121            1             1
122            0             0
123            0             0
124            0             0
125            1             1
126            1             1
127            0             0
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_100_sampled_option_1_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('BinaryClass_100_sampled', 'RidgeClassifier', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('BinaryClass_100_sampled', 'RidgeClassifier', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('BinaryClass_100_sampled', 'RidgeClassifier', 'sqlite')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('BinaryClass_100_sampled', 'RidgeClassifier', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 128 entries, 0 to 127
Data columns (total 100 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     128 non-null    float32
 1   X_1     128 non-null    float32
 2   X_2     128 non-null    float32
 3   X_3     128 non-null    float32
 4   X_4     128 non-null    float32
 5   X_5     128 non-null    float32
 6   X_6     128 non-null    float32
 7   X_7     128 non-null    float32
 8   X_8     128 non-null    float32
 9   X_9     128 non-null    float32
 10  X_10    128 non-null    float32
 11  X_11    128 non-null    float32
 12  X_12    128 non-null    float32
 13  X_13    128 non-null    float32
 14  X_14    128 non-null    float32
 15  X_15    128 non-null    float32
 16  X_16    128 non-null    float32
 17  X_17    128 non-null    float32
 18  X_18    128 non-null    float32
 19  X_19    128 non-null    float32
 20  X_20    128 non-null    float32
 21  X_21    128 non-null    float32
 22  X_22    128 non-null    float32
 23  X_23    128 non-null    float32
 24  X_24    128 non-null    float32
 25  X_25    128 non-null    float32
 26  X_26    128 non-null    float32
 27  X_27    128 non-null    float32
 28  X_28    128 non-null    float32
 29  X_29    128 non-null    float32
 30  X_30    128 non-null    float32
 31  X_31    128 non-null    float32
 32  X_32    128 non-null    float32
 33  X_33    128 non-null    float32
 34  X_34    128 non-null    float32
 35  X_35    128 non-null    float32
 36  X_36    128 non-null    float32
 37  X_37    128 non-null    float32
 38  X_38    128 non-null    float32
 39  X_39    128 non-null    float32
 40  X_40    128 non-null    float32
 41  X_41    128 non-null    float32
 42  X_42    128 non-null    float32
 43  X_43    128 non-null    float32
 44  X_44    128 non-null    float32
 45  X_45    128 non-null    float32
 46  X_46    128 non-null    float32
 47  X_47    128 non-null    float32
 48  X_48    128 non-null    float32
 49  X_49    128 non-null    float32
 50  X_50    128 non-null    float32
 51  X_51    128 non-null    float32
 52  X_52    128 non-null    float32
 53  X_53    128 non-null    float32
 54  X_54    128 non-null    float32
 55  X_55    128 non-null    float32
 56  X_56    128 non-null    float32
 57  X_57    128 non-null    float32
 58  X_58    128 non-null    float32
 59  X_59    128 non-null    float32
 60  X_60    128 non-null    float32
 61  X_61    128 non-null    float32
 62  X_62    128 non-null    float32
 63  X_63    128 non-null    float32
 64  X_64    128 non-null    float32
 65  X_65    128 non-null    float32
 66  X_66    128 non-null    float32
 67  X_67    128 non-null    float32
 68  X_68    128 non-null    float32
 69  X_69    128 non-null    float32
 70  X_70    128 non-null    float32
 71  X_71    128 non-null    float32
 72  X_72    128 non-null    float32
 73  X_73    128 non-null    float32
 74  X_74    128 non-null    float32
 75  X_75    128 non-null    float32
 76  X_76    128 non-null    float32
 77  X_77    128 non-null    float32
 78  X_78    128 non-null    float32
 79  X_79    128 non-null    float32
 80  X_80    128 non-null    float32
 81  X_81    128 non-null    float32
 82  X_82    128 non-null    float32
 83  X_83    128 non-null    float32
 84  X_84    128 non-null    float32
 85  X_85    128 non-null    float32
 86  X_86    128 non-null    float32
 87  X_87    128 non-null    float32
 88  X_88    128 non-null    float32
 89  X_89    128 non-null    float32
 90  X_90    128 non-null    float32
 91  X_91    128 non-null    float32
 92  X_92    128 non-null    float32
 93  X_93    128 non-null    float32
 94  X_94    128 non-null    float32
 95  X_95    128 non-null    float32
 96  X_96    128 non-null    float32
 97  X_97    128 non-null    float32
 98  X_98    128 non-null    float32
 99  X_99    128 non-null    float32
dtypes: float32(100)
memory usage: 51.0 KB
            X_0       X_1       X_2  ...      X_97      X_98      X_99
index                                ...                              
0     -0.001923 -2.371688 -1.181275  ... -1.828214 -0.370192  0.432550
1     -0.094974  0.975498  0.650450  ... -0.491931 -0.220261  0.222239
2      0.060564 -1.800755  0.053222  ...  1.636634  0.793880 -0.469869
3     -0.113704  0.680545 -0.819322  ... -0.792603  0.428237 -0.069851
4     -0.494085  0.103852  0.838905  ... -0.798744 -0.711862 -0.910029
...         ...       ...       ...  ...       ...       ...       ...
123   -1.641586 -1.435212 -1.466680  ... -0.564944  1.768780  0.132030
124   -0.333624 -1.181805 -0.885047  ...  1.335055 -0.070404 -0.513488
125    0.378192  0.162965  0.389403  ... -0.162535 -0.939559 -1.597954
126   -0.067286  0.126249  0.403635  ... -1.369467  1.155926  0.785249
127    0.956823 -0.959303  0.272337  ...  0.822936 -0.599084 -0.161305

[128 rows x 100 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 128 entries, 0 to 127
Data columns (total 9 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          128 non-null    int64  
 1   Score_0        128 non-null    float64
 2   Proba_0        128 non-null    float64
 3   LogProba_0     128 non-null    float64
 4   Score_1        128 non-null    float64
 5   Proba_1        128 non-null    float64
 6   LogProba_1     128 non-null    float64
 7   Decision       128 non-null    int64  
 8   DecisionProba  128 non-null    float64
dtypes: float64(7), int64(2)
memory usage: 9.1 KB
     index   Score_0   Proba_0  ...  LogProba_1  Decision  DecisionProba
0        0  0.354913  0.670363  ...   -1.109763         0       0.670363
1        1 -0.593381  0.233839  ...   -0.266362         1       0.766161
2        2  0.569165  0.757373  ...   -1.416230         0       0.757373
3        3 -0.460817  0.284625  ...   -0.334949         1       0.715375
4        4 -0.646774  0.215253  ...   -0.242394         1       0.784747
..     ...       ...       ...  ...         ...       ...            ...
123    123  0.365072  0.674837  ...   -1.123428         0       0.674837
124    124  0.201860  0.599581  ...   -0.915243         0       0.599581
125    125 -0.356134  0.329098  ...   -0.399132         1       0.670902
126    126 -0.524509  0.259414  ...   -0.300313         1       0.740586
127    127  0.333485  0.660824  ...   -1.081237         0       0.660824

[128 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
     index   Score_0  SQL_Proba_0  ...  Py_Proba_0  Py_Proba_1  Py_Decision
112    112 -0.476288     0.278367  ...    0.278367    0.721633            1
113    113 -0.513818     0.263543  ...    0.263543    0.736457            1
114    114 -0.378893     0.319127  ...    0.319127    0.680873            1
115    115  0.301704     0.646436  ...    0.646435    0.353565            0
116    116 -0.482191     0.276002  ...    0.276001    0.723999            1
117    117 -0.364314     0.325496  ...    0.325497    0.674503            1
118    118 -0.425586     0.299187  ...    0.299188    0.700812            1
119    119 -0.283328     0.362009  ...    0.362009    0.637991            1
120    120 -0.090766     0.454741  ...    0.454740    0.545260            1
121    121 -0.359881     0.327445  ...    0.327446    0.672554            1
122    122  0.511204     0.735441  ...    0.735441    0.264559            0
123    123  0.365072     0.674837  ...    0.674836    0.325164            0
124    124  0.201860     0.599581  ...    0.599581    0.400419            0
125    125 -0.356134     0.329098  ...    0.329098    0.670902            1
126    126 -0.524509     0.259414  ...    0.259413    0.740587            1
127    127  0.333485     0.660824  ...    0.660824    0.339176            0

[16 rows x 12 columns]
MLLITE_CLASS_SQL_ERROR ('BinaryClass_100_sampled', 'RidgeClassifier', 'sqlite') ('Py_Proba_0', 'SQL_Proba_0') 4.4326249295872054e-07
     Py_Proba_0  SQL_Proba_0   SQL_Error_0
112    0.278367     0.278367 -6.596529e-07
113    0.263543     0.263543  4.670689e-07
114    0.319127     0.319127 -1.690278e-07
115    0.646435     0.646436 -6.193883e-07
116    0.276001     0.276002 -2.695137e-07
117    0.325497     0.325496  1.102797e-06
118    0.299188     0.299187  6.946635e-07
119    0.362009     0.362009  2.871105e-07
120    0.454740     0.454741 -7.467250e-07
121    0.327446     0.327445  5.252802e-07
122    0.735441     0.735441 -1.905768e-07
123    0.674836     0.674837 -5.795446e-07
124    0.599581     0.599581  3.568471e-07
125    0.329098     0.329098 -1.382599e-07
126    0.259413     0.259414 -7.523240e-07
127    0.660824     0.660824  8.355745e-08
MLLITE_CLASS_SQL_ERROR ('BinaryClass_100_sampled', 'RidgeClassifier', 'sqlite') ('Py_Proba_1', 'SQL_Proba_1') 4.4735291874608424e-07
     Py_Proba_1  SQL_Proba_1   SQL_Error_1
112    0.721633     0.721633  6.000482e-07
113    0.736457     0.736457 -4.372665e-07
114    0.680873     0.680873  1.690278e-07
115    0.353565     0.353564  6.193883e-07
116    0.723999     0.723998  3.291183e-07
117    0.674503     0.674504 -1.132599e-06
118    0.700812     0.700813 -6.648612e-07
119    0.637991     0.637991 -2.871105e-07
120    0.545260     0.545259  7.467250e-07
121    0.672554     0.672555 -5.550825e-07
122    0.264559     0.264559  1.607745e-07
123    0.325164     0.325163  6.093470e-07
124    0.400419     0.400419 -3.568471e-07
125    0.670902     0.670902  1.084576e-07
126    0.740587     0.740586  7.821263e-07
127    0.339176     0.339176  5.849516e-09
MLLITE_CLASS_SQL_EXECUTION_STATUS ('BinaryClass_100_sampled', 'RidgeClassifier', 'sqlite', 'Success')
     Py_Decision  SQL_Decision
112            1             1
113            1             1
114            1             1
115            0             0
116            1             1
117            1             1
118            1             1
119            1             1
120            1             1
121            1             1
122            0             0
123            0             0
124            0             0
125            1             1
126            1             1
127            0             0
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_100_sampled_option_1_pgsql.sql'



SQL_OUT_PUT_FIRST_LINES_START ('BinaryClass_100_sampled', 'RidgeClassifier', 'pgsql')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('BinaryClass_100_sampled', 'RidgeClassifier', 'pgsql')
SQL_OUT_PUT_LAST_LINES_START ('BinaryClass_100_sampled', 'RidgeClassifier', 'pgsql')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('BinaryClass_100_sampled', 'RidgeClassifier', 'pgsql') 




COPY_TRAINING_DATA_TO_SQLITE_START
