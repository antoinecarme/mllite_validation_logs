READING_CSV FourClass_100_medium ['data/medium/FourClass_100_medium.csv']
          X_0       X_1       X_2  ...      X_98      X_99  target
0    0.347323 -2.297366 -1.081557  ...  0.031633 -1.175074       0
1   -1.647107 -0.559376 -0.366788  ...  0.392754 -0.657531       3
2   -0.676853  0.831335  0.609240  ... -1.881113 -0.604552       2
3   -0.400441 -0.019876  0.319522  ...  0.876870 -1.741137       1
4    1.218101 -1.685854 -0.494455  ... -0.986428  0.346336       0
..        ...       ...       ...  ...       ...       ...     ...
507  0.932348  0.404271  0.206503  ...  0.009033 -0.105569       1
508  0.457539 -0.123089  0.454953  ...  0.274791  0.024370       1
509 -0.504601  0.356219 -1.493893  ... -0.473036  0.162089       1
510  0.242723 -0.868103 -0.558886  ... -0.330591  1.131969       2
511  0.286521  0.616795  0.205188  ...  1.054260 -0.489766       1

[512 rows x 101 columns]
MLLITE_MODEL_SET_OPTIONS RidgeClassifier {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { "alpha" : 0.0000001,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
('OPERATION_START', 'TRAINING')
[[ 3.47322851e-01 -2.29736614e+00 -1.08155704e+00  3.06962669e-01
   1.17223673e-01 -8.46890509e-01 -1.30827630e+00  3.56966645e-01
  -2.26500702e+00  1.98961234e+00 -3.64491016e-01 -7.81223834e-01
   1.12828290e+00  3.05001885e-02  1.57965565e+00 -4.79938537e-02
  -7.71460235e-01  2.34245420e+00 -2.00933918e-01  1.06918919e+00
   5.23902252e-02 -6.66218221e-01 -3.19027960e-01 -1.97683656e+00
  -1.34364021e+00  1.56124711e-01 -1.03716075e+00 -1.06576002e+00
   8.01060438e-01 -1.34693539e+00  7.82479703e-01  1.55243635e+00
  -1.47245720e-01 -2.54727340e+00  8.05771112e-01  1.99437127e-01
   1.20345557e+00  1.82078683e+00  6.30875885e-01 -5.35030723e-01
  -2.81642646e-01 -2.71547168e-01 -1.73750925e+00  1.25594699e+00
  -7.77856648e-01  1.10130405e+00  1.26066729e-01  3.77204061e-01
   1.35884070e+00 -2.81735063e-01  1.34374237e+00  4.35596377e-01
  -5.45593441e-01  1.75204539e+00  8.20154622e-02  5.43783545e-01
  -3.83647352e-01 -2.16804886e+00 -3.02134693e-01  1.59483075e+00
  -6.84051812e-01 -2.43183589e+00  1.94443178e+00  5.89336395e-01
  -1.39149642e+00  1.20014977e+00  1.17357194e+00  5.18620074e-01
  -3.10887218e-01  2.22402021e-01 -3.74236912e-01  6.74080968e-01
  -1.78206533e-01 -1.26708579e+00  2.96590030e-01  2.01676369e+00
   2.95390368e-01 -9.42186594e-01  8.08057964e-01  8.01191747e-01
  -4.61870432e-02  6.24929965e-01 -1.37570429e+00  2.53457665e-01
   1.06697547e+00  1.65379655e+00 -2.17532143e-01  1.95535019e-01
   1.17710185e+00  8.93618345e-01 -5.67537665e-01  6.84378684e-01
   7.98551321e-01  7.05120265e-01  1.51104951e+00 -6.19782388e-01
   7.67882943e-01 -1.72001648e+00  3.16334032e-02 -1.17507362e+00]
 [-1.64710665e+00 -5.59376478e-01 -3.66788208e-01 -4.84843940e-01
  -1.92904782e+00 -6.54485762e-01  2.93523222e-01  2.35673580e-02
  -5.36363304e-01 -9.09328938e-01 -2.02112243e-01  2.82230806e+00
  -2.50319034e-01  8.14891219e-01 -2.42998195e+00  6.13404334e-01
   8.81351292e-01 -1.94341803e+00 -1.09773338e+00 -4.86826569e-01
  -2.98090434e+00  2.58214712e+00  5.55466533e-01 -1.14088702e+00
   1.52509356e+00 -7.51894057e-01 -1.82697427e+00  2.02072692e+00
  -5.59185684e-01 -3.15121472e-01 -2.92145401e-01 -4.99537325e+00
  -4.20271397e-01  9.08659458e-01  1.39671397e+00  4.12232542e+00
  -1.46387076e+00 -1.30286634e+00  6.43772304e-01 -5.56667328e-01
  -1.74427176e+00 -1.10641830e-01  1.53107941e+00  2.26066992e-01
   1.50356865e+00  2.50417858e-01  2.25866055e+00  1.08732367e+00
   6.56378984e-01 -2.21400499e+00 -6.71550810e-01  5.32379031e-01
   1.50281322e+00  5.98462462e-01  8.08542669e-01  1.00185990e+00
  -7.26945460e-01  5.79589792e-03  1.01587546e+00  8.58362734e-01
  -1.15887272e+00 -7.03131258e-01  7.18528688e-01  1.52275538e+00
  -4.20707047e-01  1.06377028e-01 -8.13656807e-01  5.86826444e-01
   5.11575997e-01  3.57694328e-01  1.54340863e-01 -2.17063795e-03
   1.57960832e-01  8.99749339e-01  3.04069132e-01 -6.45013213e-01
   1.54316461e+00 -1.22146189e+00  1.93475515e-01  1.16132879e+00
  -3.75677019e-01 -4.94781524e-01 -5.32985210e-01  9.74455714e-01
   2.55910866e-02 -3.95585656e-01  2.26190120e-01 -1.84775621e-01
  -7.32691169e-01 -9.42172766e-01 -2.00377434e-01 -4.28262830e-01
   1.22579134e+00  9.21110511e-01 -5.67833148e-02  6.08430207e-01
   5.61827064e-01 -8.99677515e-01  3.92753810e-01 -6.57531381e-01]
 [-6.76853240e-01  8.31335187e-01  6.09239936e-01 -3.98119241e-01
  -1.03613138e+00  1.86545348e+00 -2.99921948e-02  1.23699188e+00
  -3.10400069e-01 -1.66578853e+00  2.82906651e-01 -1.58725366e-01
   2.20662093e+00 -4.93292689e-01 -1.76793829e-01 -1.38015771e+00
   6.54061317e-01  1.66178632e+00 -4.23623212e-02  7.33923540e-02
  -1.28974462e+00 -6.08807206e-01 -5.37915416e-02 -1.06266201e+00
  -6.12586856e-01  1.02035415e+00 -8.65059793e-01  2.31099033e+00
   7.26519465e-01 -5.17112792e-01 -4.91910011e-01 -5.71883917e-01
   8.89418960e-01  1.33230197e+00  2.22920492e-01 -1.50337029e+00
  -8.69769871e-01 -5.54722905e-01  3.37273270e-01  2.58407855e+00
   6.08922802e-02  4.44354296e-01 -1.30670202e+00  1.54146194e+00
  -9.92423296e-01  8.96399975e-01  5.98113596e-01 -2.72305942e+00
   1.12555838e+00  1.15843654e+00 -8.20712984e-01  4.21623468e-01
  -8.62778962e-01 -3.75429320e+00 -7.63869584e-01 -2.06098700e+00
   1.26129067e+00 -8.62655282e-01 -3.53125423e-01  1.87429354e-01
   2.40926409e+00  1.03870296e+00  2.94107723e+00 -6.68464899e-01
  -1.05689490e+00 -9.77571607e-01 -1.04054523e+00  9.69231367e-01
  -1.00295410e-01  6.52887344e-01  6.17550194e-01  4.99298990e-01
   1.26067770e+00  7.07293212e-01 -2.47717813e-01 -4.45781797e-01
  -1.04054236e+00 -1.99657369e+00  6.79951072e-01 -5.93423319e+00
   9.02048707e-01  5.37436426e-01  2.73002256e-02 -1.91943955e+00
  -8.76833081e-01 -4.31168526e-01  7.10626900e-01 -5.69873333e-01
   4.01930600e-01  1.42096341e+00  1.82980871e+00 -1.86199975e+00
  -3.90694022e-01  6.39520347e-01  5.25764823e-01  1.24543273e+00
  -1.53520733e-01  1.03520393e+00 -1.88111317e+00 -6.04552388e-01]
 [-4.00441319e-01 -1.98757872e-02  3.19521725e-01  1.14345104e-02
   4.44668829e-01 -5.44643104e-01 -5.67534864e-01 -1.11695506e-01
   9.17346597e-01  2.17633176e+00  5.77383995e-01 -5.60203028e+00
  -1.42889488e+00  1.97952077e-01  7.21799016e-01  3.61139551e-02
   1.14052773e-01 -6.52566433e-01 -2.09493661e+00 -9.77385521e-01
  -1.26332545e+00  1.01208007e+00  2.11924180e-01  4.55015242e-01
  -1.00735426e+00  6.66458547e-01 -5.66618264e-01 -1.88953769e+00
  -1.37321591e+00  9.06147480e-01 -4.09562230e-01 -6.32287979e-01
   1.49663556e+00  5.65571010e-01  5.07283330e-01 -1.23427284e+00
  -7.21220016e-01 -8.81612778e-01  4.21643108e-01 -1.44344091e+00
  -1.03373341e-01  3.90902668e-01  5.75945795e-01 -1.17322549e-01
   2.67432690e-01 -5.80830336e-01  3.01645517e+00 -1.71445802e-01
   9.16514099e-01 -1.83500373e+00  8.19151282e-01  4.82676893e-01
  -1.04324055e+00 -8.17846417e-01 -5.99715769e-01 -1.66075468e-01
   6.59403354e-02  6.82892680e-01 -9.62234616e-01 -1.99732578e+00
   2.53703523e+00 -1.37351826e-01  1.07769120e+00 -1.38365710e+00
   1.10983276e+00  4.23772955e+00  7.09234619e+00 -1.57042241e+00
   1.09542477e+00 -1.83895707e+00 -8.40235353e-01  1.01329279e+00
   3.54738742e-01 -1.09836936e+00  1.10655773e+00 -8.24851692e-01
  -7.89767146e-01 -3.98110330e-01  6.03429861e-02 -6.23909140e+00
   7.30880380e-01  1.18361145e-01 -1.11915288e-03 -4.08917695e-01
  -1.39013410e+00  3.42981100e-01 -9.26245093e-01  1.67330444e-01
   2.18653727e+00  8.47398266e-02 -7.97351718e-01  6.32606626e-01
  -1.49796498e+00 -1.13130498e+00  1.43576074e+00  6.52661562e-01
   1.63416207e-01 -9.04832542e-01  8.76869738e-01 -1.74113703e+00]
 [ 1.21810114e+00 -1.68585432e+00 -4.94454563e-01  2.87022322e-01
  -3.53320628e-01 -4.50579852e-01  9.93732661e-02  9.25006628e-01
  -7.56314933e-01 -5.39256871e-01 -1.20916855e+00  1.02539611e+00
  -1.09747291e+00 -1.45594823e+00  1.19270973e-01  1.86173356e+00
  -9.82656538e-01  6.64736927e-02 -2.05938607e-01  1.05654478e+00
   9.22646046e-01  1.12333155e+00  1.17571425e+00 -6.29412234e-01
   1.61132610e+00 -1.91391003e+00 -4.59565043e-01 -1.16102064e+00
  -1.39079845e+00 -8.81523669e-01 -9.03242469e-01  1.82114768e+00
   4.87996578e-01 -1.37382641e-01 -2.34781474e-01  7.26142824e-01
   3.07820827e-01  1.50837407e-01  1.53998506e+00 -2.02279663e+00
  -1.57325840e+00  2.62957501e+00  2.09398955e-01 -6.84048891e-01
  -3.10046107e-01  1.48395896e+00  3.09137630e+00 -5.55506527e-01
   3.85253340e-01 -1.30145824e+00  1.53714919e+00  2.41403729e-02
  -6.21745646e-01  1.45647573e+00 -7.22888231e-01  1.73712566e-01
   1.41454911e+00  4.77731675e-01  4.00165826e-01 -2.17149496e-01
  -1.04079318e+00 -1.31315351e+00 -9.61484730e-01 -1.62114716e+00
   2.46012235e+00  2.77045429e-01  2.74489689e+00 -3.11465472e-01
   3.73400897e-01  1.05177593e+00  8.95944595e-01 -8.24351490e-01
  -7.43535459e-01  4.91173297e-01 -2.78651386e-01  9.27095354e-01
   8.15894365e-01  4.56068516e-02  9.10023570e-01  4.47624683e+00
  -1.49312541e-01 -2.58909672e-01  2.28618336e+00 -5.51266074e-01
  -7.33416498e-01  6.06952071e-01  1.21200502e+00 -1.65898681e-01
  -2.18560517e-01  1.86267841e+00 -2.62171984e-01 -6.22047484e-01
  -7.95441329e-01 -6.91370070e-01 -1.14353561e+00  7.35229015e-01
   5.01660764e-01  5.73215961e-01 -9.86428082e-01  3.46335888e-01]] [0 3 2 1 0]
MLLITE_FIT_USING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 6 6
('OPERATION_END_ELAPSED', 0.199, 'TRAINING')
{ "alpha" : 0.0000001,   }
{ "alpha" : 0.0000001,   }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 512, "dataset_features" : 100 },
	"classes" : [ 0, 1, 2, 3 ],
	"equations" : {
		"class_0" : {
			"intercept" : -0.601790,
			"coeffs" : [ -0.005324, -0.010539, -0.022921, -0.018191, -0.026031, -0.001844, -0.016072, 0.043345, 0.024643, 0.007773, 0.025368, -0.021858, 0.003691, 0.034971, -0.006145, 0.009035, 0.021533, 0.003009, 0.023265, -0.035629, -0.028112, 0.009374, -0.032341, 0.048793, 0.056890, 0.001192, -0.006544, 0.030861, -0.003206, -0.049011, -0.024414, 0.125422, -0.073826, -0.028990, -0.014190, 0.009147, -0.026521, 0.041357, -0.069038, -0.055270, -0.000940, 0.007062, -0.025882, -0.011032, -0.013162, -0.035348, 0.064914, -0.106282, -0.008198, -0.110257, 0.025485, 0.009321, 0.024417, 0.099202, 0.000842, 0.061019, -0.016280, -0.050886, -0.028251, -0.048848, -0.072379, 0.001585, 0.130092, 0.009901, 0.015618, 0.002375, 0.013349, 0.054694, -0.035628, 0.040920, 0.092112, 0.000886, -0.030633, 0.005857, -0.009628, 0.037174, -0.048702, -0.030514, 0.058527, 0.013443, 0.005320, -0.052824, 0.009763, -0.080728, 0.029083, -0.003306, -0.021514, -0.083087, -0.004148, -0.094027, 0.003071, -0.020573, 0.021383, 0.039289, 0.051648, -0.029810, 0.037563, -0.006288, -0.012505, -0.020990 ]
		},
		"class_1" : {
			"intercept" : -0.436952,
			"coeffs" : [ 0.034032, 0.007603, 0.044650, -0.039371, 0.011215, 0.034232, -0.035082, 0.035184, -0.009488, 0.054971, -0.047602, 0.007870, -0.084385, -0.035669, 0.094269, 0.030969, -0.028692, 0.005340, -0.010927, 0.058121, 0.065597, 0.006289, 0.081619, -0.020072, 0.003631, -0.043705, 0.037451, -0.011402, -0.018590, -0.019763, -0.006628, 0.048370, -0.005152, 0.053656, 0.038371, -0.020167, 0.012871, -0.067396, -0.016961, -0.032518, 0.080744, -0.033817, 0.020926, 0.019584, 0.035250, 0.027478, -0.053807, 0.047236, 0.019857, 0.043025, 0.024061, 0.039375, 0.072724, -0.046333, -0.041455, -0.023615, 0.028600, 0.093525, -0.005520, 0.041425, 0.050394, -0.036653, 0.063341, 0.015025, -0.004457, 0.009589, 0.002653, 0.052660, 0.010823, -0.081501, 0.010120, 0.021871, 0.030783, -0.015300, -0.023896, -0.044046, 0.028220, 0.027941, 0.021742, -0.003361, -0.009293, -0.025440, 0.051679, 0.103391, 0.005023, -0.003858, -0.043780, 0.036946, -0.002127, 0.027898, 0.016119, -0.058314, 0.049459, -0.005280, 0.011009, 0.097603, -0.058398, 0.046037, 0.094455, -0.054271 ]
		},
		"class_2" : {
			"intercept" : -0.435640,
			"coeffs" : [ -0.034930, -0.010589, -0.068333, -0.052446, 0.031465, -0.034632, 0.080992, -0.042011, 0.002406, -0.047070, 0.011769, -0.021342, 0.039029, 0.043260, -0.032285, -0.024069, 0.034158, -0.059689, -0.009752, -0.019810, -0.015658, -0.014323, -0.073313, 0.045391, -0.054397, 0.008985, -0.045795, 0.024220, -0.023890, -0.021749, 0.008560, -0.041865, 0.013201, -0.049720, -0.028201, -0.016640, -0.041367, 0.029482, 0.001724, 0.022620, -0.056006, 0.030201, 0.043612, 0.021150, -0.051276, -0.005742, -0.078265, -0.040945, -0.041511, 0.059288, 0.017191, -0.031672, -0.028123, -0.039241, -0.025912, -0.089360, 0.033256, -0.022473, 0.007005, 0.006697, 0.117308, 0.009898, -0.037747, -0.021390, 0.055055, -0.015716, -0.024192, -0.015184, 0.010298, 0.040711, -0.054818, 0.052639, 0.016242, -0.032788, 0.022885, 0.037867, -0.019188, -0.052165, -0.048599, 0.005361, 0.044863, 0.035805, -0.012117, -0.030388, -0.042227, -0.008580, 0.032161, -0.024907, 0.017759, 0.001940, -0.017472, 0.006728, -0.008830, -0.045597, 0.020703, -0.102778, -0.024424, -0.057825, -0.067428, 0.035152 ]
		},
		"class_3" : {
			"intercept" : -0.530651,
			"coeffs" : [ 0.006223, 0.013524, 0.046604, 0.110009, -0.016649, 0.002244, -0.029838, -0.036518, -0.017561, -0.015674, 0.010465, 0.030215, 0.041665, -0.042563, -0.055838, -0.015935, -0.026999, 0.051339, -0.002586, -0.002682, -0.021827, -0.001340, 0.024035, -0.074112, -0.006125, 0.033528, 0.014888, -0.028437, 0.045687, 0.090523, 0.022483, -0.133470, 0.065776, 0.025054, 0.004020, 0.029800, 0.055016, -0.003442, 0.084274, 0.065169, -0.023799, -0.003445, -0.038656, -0.029702, 0.029188, 0.013611, 0.062651, 0.099991, 0.029852, 0.007598, -0.066737, -0.017024, -0.069018, -0.019295, 0.066525, 0.051956, -0.045576, -0.020166, 0.026766, 0.000726, -0.096165, 0.025169, -0.154378, -0.003536, -0.066215, 0.005882, 0.009465, -0.092170, 0.014507, -0.000129, -0.047413, -0.075396, -0.016393, 0.042231, 0.010638, -0.030995, 0.039670, 0.054738, -0.031669, -0.004479, -0.040890, 0.042459, -0.049324, 0.007725, 0.008121, 0.015743, 0.033132, 0.071048, -0.011484, 0.064190, -0.001718, 0.072158, -0.062011, 0.011589, -0.083360, 0.034985, 0.045259, 0.018077, -0.014522, 0.040109 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_100_medium_option_1.json'

RELOADING_MODEL_FROM_JSON_START ('FourClass_100_medium', 'RidgeClassifier')
MLLITE_MODEL_SET_OPTIONS RidgeClassifier {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { "alpha" : 0.0000001,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
MLLITE_RELOADING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 512, "dataset_features" : 100 },
	"classes" : [ 0, 1, 2, 3 ],
	"equations" : {
		"class_0" : {
			"intercept" : -0.601790,
			"coeffs" : [ -0.005324, -0.010539, -0.022921, -0.018191, -0.026031, -0.001844, -0.016072, 0.043345, 0.024643, 0.007773, 0.025368, -0.021858, 0.003691, 0.034971, -0.006145, 0.009035, 0.021533, 0.003009, 0.023265, -0.035629, -0.028112, 0.009374, -0.032341, 0.048793, 0.056890, 0.001192, -0.006544, 0.030861, -0.003206, -0.049011, -0.024414, 0.125422, -0.073826, -0.028990, -0.014190, 0.009147, -0.026521, 0.041357, -0.069038, -0.055270, -0.000940, 0.007062, -0.025882, -0.011032, -0.013162, -0.035348, 0.064914, -0.106282, -0.008198, -0.110257, 0.025485, 0.009321, 0.024417, 0.099202, 0.000842, 0.061019, -0.016280, -0.050886, -0.028251, -0.048848, -0.072379, 0.001585, 0.130092, 0.009901, 0.015618, 0.002375, 0.013349, 0.054694, -0.035628, 0.040920, 0.092112, 0.000886, -0.030633, 0.005857, -0.009628, 0.037174, -0.048702, -0.030514, 0.058527, 0.013443, 0.005320, -0.052824, 0.009763, -0.080728, 0.029083, -0.003306, -0.021514, -0.083087, -0.004148, -0.094027, 0.003071, -0.020573, 0.021383, 0.039289, 0.051648, -0.029810, 0.037563, -0.006288, -0.012505, -0.020990 ]
		},
		"class_1" : {
			"intercept" : -0.436952,
			"coeffs" : [ 0.034032, 0.007603, 0.044650, -0.039371, 0.011215, 0.034232, -0.035082, 0.035184, -0.009488, 0.054971, -0.047602, 0.007870, -0.084385, -0.035669, 0.094269, 0.030969, -0.028692, 0.005340, -0.010927, 0.058121, 0.065597, 0.006289, 0.081619, -0.020072, 0.003631, -0.043705, 0.037451, -0.011402, -0.018590, -0.019763, -0.006628, 0.048370, -0.005152, 0.053656, 0.038371, -0.020167, 0.012871, -0.067396, -0.016961, -0.032518, 0.080744, -0.033817, 0.020926, 0.019584, 0.035250, 0.027478, -0.053807, 0.047236, 0.019857, 0.043025, 0.024061, 0.039375, 0.072724, -0.046333, -0.041455, -0.023615, 0.028600, 0.093525, -0.005520, 0.041425, 0.050394, -0.036653, 0.063341, 0.015025, -0.004457, 0.009589, 0.002653, 0.052660, 0.010823, -0.081501, 0.010120, 0.021871, 0.030783, -0.015300, -0.023896, -0.044046, 0.028220, 0.027941, 0.021742, -0.003361, -0.009293, -0.025440, 0.051679, 0.103391, 0.005023, -0.003858, -0.043780, 0.036946, -0.002127, 0.027898, 0.016119, -0.058314, 0.049459, -0.005280, 0.011009, 0.097603, -0.058398, 0.046037, 0.094455, -0.054271 ]
		},
		"class_2" : {
			"intercept" : -0.435640,
			"coeffs" : [ -0.034930, -0.010589, -0.068333, -0.052446, 0.031465, -0.034632, 0.080992, -0.042011, 0.002406, -0.047070, 0.011769, -0.021342, 0.039029, 0.043260, -0.032285, -0.024069, 0.034158, -0.059689, -0.009752, -0.019810, -0.015658, -0.014323, -0.073313, 0.045391, -0.054397, 0.008985, -0.045795, 0.024220, -0.023890, -0.021749, 0.008560, -0.041865, 0.013201, -0.049720, -0.028201, -0.016640, -0.041367, 0.029482, 0.001724, 0.022620, -0.056006, 0.030201, 0.043612, 0.021150, -0.051276, -0.005742, -0.078265, -0.040945, -0.041511, 0.059288, 0.017191, -0.031672, -0.028123, -0.039241, -0.025912, -0.089360, 0.033256, -0.022473, 0.007005, 0.006697, 0.117308, 0.009898, -0.037747, -0.021390, 0.055055, -0.015716, -0.024192, -0.015184, 0.010298, 0.040711, -0.054818, 0.052639, 0.016242, -0.032788, 0.022885, 0.037867, -0.019188, -0.052165, -0.048599, 0.005361, 0.044863, 0.035805, -0.012117, -0.030388, -0.042227, -0.008580, 0.032161, -0.024907, 0.017759, 0.001940, -0.017472, 0.006728, -0.008830, -0.045597, 0.020703, -0.102778, -0.024424, -0.057825, -0.067428, 0.035152 ]
		},
		"class_3" : {
			"intercept" : -0.530651,
			"coeffs" : [ 0.006223, 0.013524, 0.046604, 0.110009, -0.016649, 0.002244, -0.029838, -0.036518, -0.017561, -0.015674, 0.010465, 0.030215, 0.041665, -0.042563, -0.055838, -0.015935, -0.026999, 0.051339, -0.002586, -0.002682, -0.021827, -0.001340, 0.024035, -0.074112, -0.006125, 0.033528, 0.014888, -0.028437, 0.045687, 0.090523, 0.022483, -0.133470, 0.065776, 0.025054, 0.004020, 0.029800, 0.055016, -0.003442, 0.084274, 0.065169, -0.023799, -0.003445, -0.038656, -0.029702, 0.029188, 0.013611, 0.062651, 0.099991, 0.029852, 0.007598, -0.066737, -0.017024, -0.069018, -0.019295, 0.066525, 0.051956, -0.045576, -0.020166, 0.026766, 0.000726, -0.096165, 0.025169, -0.154378, -0.003536, -0.066215, 0.005882, 0.009465, -0.092170, 0.014507, -0.000129, -0.047413, -0.075396, -0.016393, 0.042231, 0.010638, -0.030995, 0.039670, 0.054738, -0.031669, -0.004479, -0.040890, 0.042459, -0.049324, 0.007725, 0.008121, 0.015743, 0.033132, 0.071048, -0.011484, 0.064190, -0.001718, 0.072158, -0.062011, 0.011589, -0.083360, 0.034985, 0.045259, 0.018077, -0.014522, 0.040109 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1, 2, 3 ],
	"dataset" : 	{
		"dataset_features" : 100,
		"dataset_rows" : 512
	},
	"equations" : 	{
		"class_0" : 	{
			"coeffs" : [ -0.005324, -0.010539, -0.022921, -0.018191, -0.026031, -0.001844, -0.016072, 0.043345, 0.024643, 0.007773, 0.025368, -0.021858, 0.003691, 0.034971, -0.006145, 0.009035, 0.021533, 0.003009, 0.023265, -0.035629, -0.028112, 0.009374, -0.032341, 0.048793, 0.05689, 0.001192, -0.006544, 0.030861, -0.003206, -0.049011, -0.024414, 0.125422, -0.073826, -0.02899, -0.01419, 0.009147, -0.026521, 0.041357, -0.069038, -0.05527, -0.00094, 0.007062, -0.025882, -0.011032, -0.013162, -0.035348, 0.064914, -0.106282, -0.008198, -0.110257, 0.025485, 0.009321, 0.024417, 0.099202, 0.000842, 0.061019, -0.01628, -0.050886, -0.028251, -0.048848, -0.072379, 0.001585, 0.130092, 0.009901, 0.015618, 0.002375, 0.013349, 0.054694, -0.035628, 0.04092, 0.092112, 0.000886, -0.030633, 0.005857, -0.009628, 0.037174, -0.048702, -0.030514, 0.058527, 0.013443, 0.00532, -0.052824, 0.009763, -0.080728, 0.029083, -0.003306, -0.021514, -0.083087, -0.004148, -0.094027, 0.003071, -0.020573, 0.021383, 0.039289, 0.051648, -0.02981, 0.037563, -0.006288, -0.012505, -0.02099 ],
			"intercept" : -0.60179
		},
		"class_1" : 	{
			"coeffs" : [ 0.034032, 0.007603, 0.04465, -0.039371, 0.011215, 0.034232, -0.035082, 0.035184, -0.009488, 0.054971, -0.047602, 0.00787, -0.084385, -0.035669, 0.094269, 0.030969, -0.028692, 0.00534, -0.010927, 0.058121, 0.065597, 0.006289, 0.081619, -0.020072, 0.003631, -0.043705, 0.037451, -0.011402, -0.01859, -0.019763, -0.006628, 0.04837, -0.005152, 0.053656, 0.038371, -0.020167, 0.012871, -0.067396, -0.016961, -0.032518, 0.080744, -0.033817, 0.020926, 0.019584, 0.03525, 0.027478, -0.053807, 0.047236, 0.019857, 0.043025, 0.024061, 0.039375, 0.072724, -0.046333, -0.041455, -0.023615, 0.0286, 0.093525, -0.00552, 0.041425, 0.050394, -0.036653, 0.063341, 0.015025, -0.004457, 0.009589, 0.002653, 0.05266, 0.010823, -0.081501, 0.01012, 0.021871, 0.030783, -0.0153, -0.023896, -0.044046, 0.02822, 0.027941, 0.021742, -0.003361, -0.009293, -0.02544, 0.051679, 0.103391, 0.005023, -0.003858, -0.04378, 0.036946, -0.002127, 0.027898, 0.016119, -0.058314, 0.049459, -0.00528, 0.011009, 0.097603, -0.058398, 0.046037, 0.094455, -0.054271 ],
			"intercept" : -0.436952
		},
		"class_2" : 	{
			"coeffs" : [ -0.03493, -0.010589, -0.068333, -0.052446, 0.031465, -0.034632, 0.080992, -0.042011, 0.002406, -0.04707, 0.011769, -0.021342, 0.039029, 0.04326, -0.032285, -0.024069, 0.034158, -0.059689, -0.009752, -0.01981, -0.015658, -0.014323, -0.073313, 0.045391, -0.054397, 0.008985, -0.045795, 0.02422, -0.02389, -0.021749, 0.00856, -0.041865, 0.013201, -0.04972, -0.028201, -0.01664, -0.041367, 0.029482, 0.001724, 0.02262, -0.056006, 0.030201, 0.043612, 0.02115, -0.051276, -0.005742, -0.078265, -0.040945, -0.041511, 0.059288, 0.017191, -0.031672, -0.028123, -0.039241, -0.025912, -0.08936, 0.033256, -0.022473, 0.007005, 0.006697, 0.117308, 0.009898, -0.037747, -0.02139, 0.055055, -0.015716, -0.024192, -0.015184, 0.010298, 0.040711, -0.054818, 0.052639, 0.016242, -0.032788, 0.022885, 0.037867, -0.019188, -0.052165, -0.048599, 0.005361, 0.044863, 0.035805, -0.012117, -0.030388, -0.042227, -0.00858, 0.032161, -0.024907, 0.017759, 0.00194, -0.017472, 0.006728, -0.00883, -0.045597, 0.020703, -0.102778, -0.024424, -0.057825, -0.067428, 0.035152 ],
			"intercept" : -0.43564
		},
		"class_3" : 	{
			"coeffs" : [ 0.006223, 0.013524, 0.046604, 0.110009, -0.016649, 0.002244, -0.029838, -0.036518, -0.017561, -0.015674, 0.010465, 0.030215, 0.041665, -0.042563, -0.055838, -0.015935, -0.026999, 0.051339, -0.002586, -0.002682, -0.021827, -0.00134, 0.024035, -0.074112, -0.006125, 0.033528, 0.014888, -0.028437, 0.045687, 0.090523, 0.022483, -0.13347, 0.065776, 0.025054, 0.00402, 0.0298, 0.055016, -0.003442, 0.084274, 0.065169, -0.023799, -0.003445, -0.038656, -0.029702, 0.029188, 0.013611, 0.062651, 0.099991, 0.029852, 0.007598, -0.066737, -0.017024, -0.069018, -0.019295, 0.066525, 0.051956, -0.045576, -0.020166, 0.026766, 0.000726, -0.096165, 0.025169, -0.154378, -0.003536, -0.066215, 0.005882, 0.009465, -0.09217, 0.014507, -0.000129, -0.047413, -0.075396, -0.016393, 0.042231, 0.010638, -0.030995, 0.03967, 0.054738, -0.031669, -0.004479, -0.04089, 0.042459, -0.049324, 0.007725, 0.008121, 0.015743, 0.033132, 0.071048, -0.011484, 0.06419, -0.001718, 0.072158, -0.062011, 0.011589, -0.08336, 0.034985, 0.045259, 0.018077, -0.014522, 0.040109 ],
			"intercept" : -0.530651
		}
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_il8", "version" : "2024-W14" },
	"options" :  { "alpha" : 0.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
RELOADING_MODEL_FROM_JSON_END ('FourClass_100_medium', 'RidgeClassifier')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
[[0.4922 0.2068 0.1554 0.1455]
 [0.2355 0.123  0.129  0.5125]
 [0.1566 0.1876 0.5542 0.1016]
 ...
 [0.2685 0.3452 0.2157 0.1706]
 [0.2156 0.261  0.3805 0.1429]
 [0.1801 0.3991 0.2427 0.1781]]
(512, 4)
(512, 4) float32
MODEL_PERFS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': '{"alpha" : 0.0000001}', 'dataset': 'FourClass_100_medium', 'size': 512, 'accuracy': 0.763671875, 'auc': 0.92557814656503}
WRITING_PERF_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_100_medium_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': '{"alpha" : 0.0000001}', 'dataset': 'FourClass_100_medium', 'training_time_in_sec': 0.199, 'prediction_time_in_sec': 0.001}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 0 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 1 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 2 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 3 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 4 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 5 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 6 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 7 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 8 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 9 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 10 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 11 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 12 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 13 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 14 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 15 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 16 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 17 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 18 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 19 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 20 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 21 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 22 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 23 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 24 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 25 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 26 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 27 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 28 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 29 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 30 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 31 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 32 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 33 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 34 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 35 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 36 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 37 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 38 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 39 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 40 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 41 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 42 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 43 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 44 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 45 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 46 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 47 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 48 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 49 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 50 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 51 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 52 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 53 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 54 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 55 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 56 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 57 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 58 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 59 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 60 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 61 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 62 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 63 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 64 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 65 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 66 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 67 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 68 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 69 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 70 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 71 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 72 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 73 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 74 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 75 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 76 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 77 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 78 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 79 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 80 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 81 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 82 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 83 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 84 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 85 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 86 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 87 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 88 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 89 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 90 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 91 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 92 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 93 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 94 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 95 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 96 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 97 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 98 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 99 100
{
   "Contributions" : {
      "X_0" : [ 0.000495, -0.001019, 0.000606, -0.000082 ],
      "X_1" : [ -0.000334, 0.000426, -0.000217, 0.000125 ],
      "X_2" : [ -0.001503, 0.002524, -0.003362, 0.002341 ],
      "X_3" : [ 0.000637, 0.002155, 0.002518, -0.005310 ],
      "X_4" : [ -0.000801, 0.000376, -0.000195, 0.000619 ],
      "X_5" : [ 0.000474, -0.001028, 0.000385, 0.000169 ],
      "X_6" : [ -0.000312, -0.000038, 0.000302, 0.000047 ],
      "X_7" : [ 0.000472, 0.001036, -0.000999, -0.000509 ],
      "X_8" : [ 0.000305, -0.000244, 0.000016, -0.000077 ],
      "X_9" : [ -0.000524, -0.002853, 0.002541, 0.000836 ],
      "X_10" : [ -0.000231, -0.000370, 0.000325, 0.000276 ],
      "X_11" : [ -0.001351, 0.000768, 0.000525, 0.000058 ],
      "X_12" : [ 0.000401, -0.001021, 0.000403, 0.000217 ],
      "X_13" : [ 0.001404, -0.001028, 0.000598, -0.000973 ],
      "X_14" : [ 0.000085, -0.001856, 0.000306, 0.001465 ],
      "X_15" : [ 0.000282, 0.000994, -0.000677, -0.000598 ],
      "X_16" : [ 0.001784, -0.001810, 0.001656, -0.001630 ],
      "X_17" : [ 0.000083, 0.000288, -0.000781, 0.000410 ],
      "X_18" : [ -0.000758, 0.000399, 0.000246, 0.000113 ],
      "X_19" : [ -0.001587, 0.002979, -0.000961, -0.000431 ],
      "X_20" : [ -0.002064, 0.004028, -0.000964, -0.000999 ],
      "X_21" : [ 0.000043, 0.000225, -0.000335, 0.000067 ],
      "X_22" : [ -0.002032, 0.003562, -0.002507, 0.000977 ],
      "X_23" : [ -0.000766, 0.000335, -0.000322, 0.000754 ],
      "X_24" : [ 0.000245, 0.000296, -0.000744, 0.000203 ],
      "X_25" : [ -0.000019, -0.000355, 0.000039, 0.000335 ],
      "X_26" : [ 0.000417, -0.002777, 0.003579, -0.001220 ],
      "X_27" : [ -0.001384, 0.001041, -0.000473, 0.000817 ],
      "X_28" : [ -0.000029, 0.000133, -0.000336, 0.000232 ],
      "X_29" : [ 0.004534, 0.001971, 0.001882, -0.008387 ],
      "X_30" : [ 0.000732, 0.000286, -0.000242, -0.000776 ],
      "X_31" : [ 0.011098, 0.000780, -0.002485, -0.009393 ],
      "X_32" : [ -0.005755, -0.000014, 0.000867, 0.004903 ],
      "X_33" : [ 0.001569, -0.002538, 0.002197, -0.001228 ],
      "X_34" : [ -0.001055, 0.001838, -0.001074, 0.000291 ],
      "X_35" : [ -0.000764, 0.002159, 0.000794, -0.002189 ],
      "X_36" : [ -0.000259, -0.000181, 0.000178, 0.000262 ],
      "X_37" : [ -0.003201, 0.004207, -0.001319, 0.000313 ],
      "X_38" : [ -0.001521, -0.000442, -0.000040, 0.002004 ],
      "X_39" : [ -0.000609, -0.000590, -0.000037, 0.001235 ],
      "X_40" : [ 0.000160, -0.001535, 0.000641, 0.000735 ],
      "X_41" : [ 0.000525, -0.001749, 0.001139, 0.000085 ],
      "X_42" : [ 0.000610, -0.000742, -0.000339, 0.000471 ],
      "X_43" : [ 0.000373, -0.000776, -0.000506, 0.000909 ],
      "X_44" : [ 0.000583, -0.000595, 0.001096, -0.001084 ],
      "X_45" : [ 0.002205, -0.001658, 0.000055, -0.000602 ],
      "X_46" : [ -0.003954, 0.002389, 0.000940, 0.000625 ],
      "X_47" : [ 0.003953, -0.001655, 0.001194, -0.003491 ],
      "X_48" : [ 0.000558, -0.000471, 0.001278, -0.001365 ],
      "X_49" : [ 0.001077, -0.000335, 0.000314, -0.001056 ],
      "X_50" : [ 0.001435, 0.001569, 0.000977, -0.003981 ],
      "X_51" : [ 0.000330, 0.001359, -0.001122, -0.000567 ],
      "X_52" : [ -0.002013, -0.004996, 0.002937, 0.004072 ],
      "X_53" : [ 0.004765, -0.001350, -0.001798, -0.001618 ],
      "X_54" : [ -0.000092, -0.001764, -0.001007, 0.002863 ],
      "X_55" : [ -0.001343, 0.000114, 0.001117, 0.000111 ],
      "X_56" : [ 0.000569, -0.001320, -0.001213, 0.001965 ],
      "X_57" : [ 0.001161, -0.002314, 0.000423, 0.000730 ],
      "X_58" : [ -0.000135, -0.000009, 0.000206, -0.000062 ],
      "X_59" : [ -0.000321, 0.000384, 0.000021, -0.000084 ],
      "X_60" : [ -0.002668, 0.002267, 0.002957, -0.002556 ],
      "X_61" : [ -0.000125, -0.000270, -0.000133, 0.000528 ],
      "X_62" : [ -0.025294, -0.007681, 0.004675, 0.028301 ],
      "X_63" : [ 0.000246, 0.000616, -0.000746, -0.000116 ],
      "X_64" : [ -0.000336, -0.000266, -0.000136, 0.000737 ],
      "X_65" : [ 0.000380, 0.001821, -0.003088, 0.000887 ],
      "X_66" : [ -0.002624, -0.000418, 0.003991, -0.000948 ],
      "X_67" : [ -0.000560, -0.000512, 0.000248, 0.000823 ],
      "X_68" : [ -0.005039, 0.001727, 0.001562, 0.001749 ],
      "X_69" : [ -0.003176, 0.004681, -0.001764, 0.000259 ],
      "X_70" : [ -0.003601, -0.000263, 0.001964, 0.001901 ],
      "X_71" : [ 0.000504, 0.001085, 0.000890, -0.002479 ],
      "X_72" : [ -0.000935, 0.000377, 0.000359, 0.000199 ],
      "X_73" : [ 0.000278, -0.000035, -0.000569, 0.000327 ],
      "X_74" : [ 0.000126, 0.000735, -0.000556, -0.000305 ],
      "X_75" : [ -0.001089, 0.001565, -0.001488, 0.001012 ],
      "X_76" : [ -0.003863, 0.002312, -0.000696, 0.002247 ],
      "X_77" : [ 0.001048, -0.000170, 0.000870, -0.001749 ],
      "X_78" : [ 0.000868, 0.000157, -0.001358, 0.000333 ],
      "X_79" : [ -0.000795, 0.000718, -0.000154, 0.000231 ],
      "X_80" : [ -0.000641, 0.000655, -0.003968, 0.003954 ],
      "X_81" : [ -0.001485, -0.000213, 0.000223, 0.001475 ],
      "X_82" : [ -0.000128, 0.002102, -0.000420, -0.001554 ],
      "X_83" : [ 0.002481, -0.002768, 0.000343, -0.000057 ],
      "X_84" : [ -0.000072, -0.000174, 0.000358, -0.000112 ],
      "X_85" : [ 0.000063, 0.000094, 0.000020, -0.000177 ],
      "X_86" : [ 0.000220, -0.000640, -0.000206, 0.000626 ],
      "X_87" : [ 0.000023, -0.000724, -0.000069, 0.000769 ],
      "X_88" : [ -0.000096, 0.000015, 0.000574, -0.000493 ],
      "X_89" : [ -0.001041, 0.000798, 0.000314, -0.000071 ],
      "X_90" : [ -0.000155, -0.000805, 0.000851, 0.000109 ],
      "X_91" : [ -0.000300, 0.000362, -0.000375, 0.000313 ],
      "X_92" : [ -0.001011, -0.002687, 0.000464, 0.003233 ],
      "X_93" : [ 0.000308, 0.000111, -0.000388, -0.000031 ],
      "X_94" : [ -0.002304, -0.000630, -0.000936, 0.003869 ],
      "X_95" : [ -0.000378, 0.003076, -0.002952, 0.000254 ],
      "X_96" : [ -0.000908, 0.001200, 0.000389, -0.000681 ],
      "X_97" : [ -0.000176, -0.000179, 0.000212, 0.000143 ],
      "X_98" : [ 0.000229, 0.000599, -0.000753, -0.000075 ],
      "X_99" : [ -0.000181, -0.000126, 0.000330, -0.000023 ]   
   },
   "Most_Contributive_Features_By_Class" : {
      "class_0" : [ 62, 31, 32, 68, 53, 29, 46, 47, 76, 70 ],
      "class_1" : [ 62, 52, 69, 37, 20, 22, 95, 19, 9, 26 ],
      "class_2" : [ 62, 66, 80, 26, 2, 65, 60, 95, 52, 9 ],
      "class_3" : [ 62, 31, 29, 3, 32, 52, 50, 80, 94, 47 ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_100_medium_option_1_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_100_medium_option_1_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('FourClass_100_medium', 'RidgeClassifier', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('FourClass_100_medium', 'RidgeClassifier', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('FourClass_100_medium', 'RidgeClassifier', 'duckdb')
ore_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."Score_3" AS "Score_3",
  arg_max_cte."Proba_3" AS "Proba_3",
  CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN LN( arg_max_cte."Proba_3" ) ELSE -1.79769313486231e+308 END AS "LogProba_3",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('FourClass_100_medium', 'RidgeClassifier', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 512 entries, 0 to 511
Data columns (total 100 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     512 non-null    float32
 1   X_1     512 non-null    float32
 2   X_2     512 non-null    float32
 3   X_3     512 non-null    float32
 4   X_4     512 non-null    float32
 5   X_5     512 non-null    float32
 6   X_6     512 non-null    float32
 7   X_7     512 non-null    float32
 8   X_8     512 non-null    float32
 9   X_9     512 non-null    float32
 10  X_10    512 non-null    float32
 11  X_11    512 non-null    float32
 12  X_12    512 non-null    float32
 13  X_13    512 non-null    float32
 14  X_14    512 non-null    float32
 15  X_15    512 non-null    float32
 16  X_16    512 non-null    float32
 17  X_17    512 non-null    float32
 18  X_18    512 non-null    float32
 19  X_19    512 non-null    float32
 20  X_20    512 non-null    float32
 21  X_21    512 non-null    float32
 22  X_22    512 non-null    float32
 23  X_23    512 non-null    float32
 24  X_24    512 non-null    float32
 25  X_25    512 non-null    float32
 26  X_26    512 non-null    float32
 27  X_27    512 non-null    float32
 28  X_28    512 non-null    float32
 29  X_29    512 non-null    float32
 30  X_30    512 non-null    float32
 31  X_31    512 non-null    float32
 32  X_32    512 non-null    float32
 33  X_33    512 non-null    float32
 34  X_34    512 non-null    float32
 35  X_35    512 non-null    float32
 36  X_36    512 non-null    float32
 37  X_37    512 non-null    float32
 38  X_38    512 non-null    float32
 39  X_39    512 non-null    float32
 40  X_40    512 non-null    float32
 41  X_41    512 non-null    float32
 42  X_42    512 non-null    float32
 43  X_43    512 non-null    float32
 44  X_44    512 non-null    float32
 45  X_45    512 non-null    float32
 46  X_46    512 non-null    float32
 47  X_47    512 non-null    float32
 48  X_48    512 non-null    float32
 49  X_49    512 non-null    float32
 50  X_50    512 non-null    float32
 51  X_51    512 non-null    float32
 52  X_52    512 non-null    float32
 53  X_53    512 non-null    float32
 54  X_54    512 non-null    float32
 55  X_55    512 non-null    float32
 56  X_56    512 non-null    float32
 57  X_57    512 non-null    float32
 58  X_58    512 non-null    float32
 59  X_59    512 non-null    float32
 60  X_60    512 non-null    float32
 61  X_61    512 non-null    float32
 62  X_62    512 non-null    float32
 63  X_63    512 non-null    float32
 64  X_64    512 non-null    float32
 65  X_65    512 non-null    float32
 66  X_66    512 non-null    float32
 67  X_67    512 non-null    float32
 68  X_68    512 non-null    float32
 69  X_69    512 non-null    float32
 70  X_70    512 non-null    float32
 71  X_71    512 non-null    float32
 72  X_72    512 non-null    float32
 73  X_73    512 non-null    float32
 74  X_74    512 non-null    float32
 75  X_75    512 non-null    float32
 76  X_76    512 non-null    float32
 77  X_77    512 non-null    float32
 78  X_78    512 non-null    float32
 79  X_79    512 non-null    float32
 80  X_80    512 non-null    float32
 81  X_81    512 non-null    float32
 82  X_82    512 non-null    float32
 83  X_83    512 non-null    float32
 84  X_84    512 non-null    float32
 85  X_85    512 non-null    float32
 86  X_86    512 non-null    float32
 87  X_87    512 non-null    float32
 88  X_88    512 non-null    float32
 89  X_89    512 non-null    float32
 90  X_90    512 non-null    float32
 91  X_91    512 non-null    float32
 92  X_92    512 non-null    float32
 93  X_93    512 non-null    float32
 94  X_94    512 non-null    float32
 95  X_95    512 non-null    float32
 96  X_96    512 non-null    float32
 97  X_97    512 non-null    float32
 98  X_98    512 non-null    float32
 99  X_99    512 non-null    float32
dtypes: float32(100)
memory usage: 204.0 KB
            X_0       X_1       X_2  ...      X_97      X_98      X_99
index                                ...                              
0      0.347323 -2.297366 -1.081557  ... -1.720016  0.031633 -1.175074
1     -1.647107 -0.559376 -0.366788  ... -0.899678  0.392754 -0.657531
2     -0.676853  0.831335  0.609240  ...  1.035204 -1.881113 -0.604552
3     -0.400441 -0.019876  0.319522  ... -0.904833  0.876870 -1.741137
4      1.218101 -1.685854 -0.494455  ...  0.573216 -0.986428  0.346336
...         ...       ...       ...  ...       ...       ...       ...
507    0.932348  0.404271  0.206503  ...  1.674384  0.009033 -0.105569
508    0.457539 -0.123089  0.454953  ...  0.017761  0.274791  0.024370
509   -0.504601  0.356219 -1.493893  ... -0.429433 -0.473036  0.162089
510    0.242723 -0.868103 -0.558886  ... -1.624536 -0.330591  1.131969
511    0.286521  0.616795  0.205188  ...  0.208089  1.054260 -0.489766

[512 rows x 100 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 512 entries, 0 to 511
Data columns (total 15 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          512 non-null    int64  
 1   Score_0        512 non-null    float64
 2   Proba_0        512 non-null    float64
 3   LogProba_0     512 non-null    float64
 4   Score_1        512 non-null    float64
 5   Proba_1        512 non-null    float64
 6   LogProba_1     512 non-null    float64
 7   Score_2        512 non-null    float64
 8   Proba_2        512 non-null    float64
 9   LogProba_2     512 non-null    float64
 10  Score_3        512 non-null    float64
 11  Proba_3        512 non-null    float64
 12  LogProba_3     512 non-null    float64
 13  Decision       512 non-null    int64  
 14  DecisionProba  512 non-null    float64
dtypes: float64(13), int64(2)
memory usage: 60.1 KB
     index   Score_0   Proba_0  ...  LogProba_3  Decision  DecisionProba
0        0  0.306226  0.492245  ...   -1.927280         0       0.492245
1        1 -0.374498  0.235456  ...   -0.668384         3       0.512536
2        2 -0.758115  0.156579  ...   -2.286237         2       0.554163
3        3 -0.634564  0.207452  ...   -1.987429         1       0.382320
4        4  0.056918  0.396323  ...   -1.502786         0       0.396323
..     ...       ...       ...  ...         ...       ...            ...
507    507 -0.215960  0.322376  ...   -1.612853         0       0.322376
508    508 -0.640730  0.210314  ...   -1.219394         1       0.335442
509    509 -0.397691  0.268452  ...   -1.768168         1       0.345214
510    510 -0.583901  0.215602  ...   -1.945470         2       0.380458
511    511 -0.778708  0.180059  ...   -1.725246         1       0.399100

[512 rows x 15 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Score_3', 'Proba_3',
       'LogProba_3', 'Decision', 'DecisionProba'],
      dtype='object')
     index   Score_0  SQL_Proba_0  ...  Py_Proba_2  Py_Proba_3  Py_Decision
496    496 -1.067617     0.114585  ...    0.182659    0.562831            3
497    497  0.032818     0.400133  ...    0.168542    0.237491            0
498    498  0.203205     0.404839  ...    0.134057    0.381002            0
499    499 -0.505286     0.224190  ...    0.112652    0.438559            3
500    500 -1.163339     0.113715  ...    0.185616    0.479430            3
501    501 -0.322197     0.273357  ...    0.146664    0.399617            3
502    502  0.452044     0.521492  ...    0.244508    0.146374            0
503    503 -1.579075     0.066932  ...    0.447624    0.147178            2
504    504 -0.612456     0.174882  ...    0.131642    0.582434            3
505    505 -0.778690     0.179987  ...    0.227347    0.385588            3
506    506 -1.208404     0.091340  ...    0.257516    0.560257            3
507    507 -0.215960     0.322376  ...    0.272303    0.199317            0
508    508 -0.640730     0.210314  ...    0.158835    0.295410            1
509    509 -0.397691     0.268452  ...    0.215689    0.170646            1
510    510 -0.583901     0.215602  ...    0.380459    0.142919            2
511    511 -0.778708     0.180059  ...    0.242713    0.178129            1

[16 rows x 20 columns]
MLLITE_CLASS_SQL_ERROR ('FourClass_100_medium', 'RidgeClassifier', 'duckdb') ('Py_Proba_0', 'SQL_Proba_0') 6.180276778239269e-07
     Py_Proba_0  SQL_Proba_0   SQL_Error_0
496    0.114585     0.114585  6.241920e-07
497    0.400132     0.400133 -1.607976e-07
498    0.404839     0.404839 -2.632199e-07
499    0.224190     0.224190 -6.082526e-07
500    0.113715     0.113715 -1.582504e-07
501    0.273357     0.273357  2.646818e-09
502    0.521492     0.521492  1.065175e-07
503    0.066933     0.066932  1.696320e-07
504    0.174881     0.174882 -1.125655e-06
505    0.179986     0.179987 -1.107578e-06
506    0.091341     0.091340  1.802847e-07
507    0.322376     0.322376 -1.670808e-08
508    0.210314     0.210314 -9.290067e-08
509    0.268452     0.268452  2.308432e-07
510    0.215602     0.215602 -3.512196e-07
511    0.180058     0.180059 -8.044570e-07
MLLITE_CLASS_SQL_ERROR ('FourClass_100_medium', 'RidgeClassifier', 'duckdb') ('Py_Proba_1', 'SQL_Proba_1') 4.763084194908744e-07
     Py_Proba_1  SQL_Proba_1   SQL_Error_1
496    0.139924     0.139924  3.700788e-07
497    0.193835     0.193835 -9.318578e-08
498    0.080102     0.080102 -1.327247e-07
499    0.224600     0.224600 -5.302739e-08
500    0.221240     0.221240 -1.713998e-07
501    0.180362     0.180362  3.690011e-07
502    0.087625     0.087626 -3.761967e-07
503    0.338266     0.338266 -6.762579e-07
504    0.111043     0.111044 -3.254493e-07
505    0.207080     0.207079  4.603144e-07
506    0.090887     0.090886  8.437999e-07
507    0.206003     0.206003  4.986834e-07
508    0.335441     0.335442 -5.025704e-07
509    0.345214     0.345214  1.573994e-07
510    0.261020     0.261020  5.795407e-07
511    0.399100     0.399100  3.422120e-07
MLLITE_CLASS_SQL_ERROR ('FourClass_100_medium', 'RidgeClassifier', 'duckdb') ('Py_Proba_2', 'SQL_Proba_2') 5.630962398032508e-07
     Py_Proba_2  SQL_Proba_2   SQL_Error_2
496    0.182659     0.182660 -2.132984e-07
497    0.168542     0.168541  7.517939e-07
498    0.134057     0.134057  1.275156e-07
499    0.112652     0.112653 -8.410998e-07
500    0.185616     0.185616 -9.770732e-08
501    0.146664     0.146663  1.016899e-06
502    0.244508     0.244507  8.255943e-07
503    0.447624     0.447623  9.587855e-07
504    0.131642     0.131642 -7.679152e-08
505    0.227347     0.227347 -6.631814e-07
506    0.257516     0.257515  8.138595e-07
507    0.272303     0.272303  4.217442e-07
508    0.158835     0.158835  1.481374e-08
509    0.215689     0.215689 -5.346528e-07
510    0.380459     0.380458  1.020135e-06
511    0.242713     0.242712  9.894642e-07
MLLITE_CLASS_SQL_ERROR ('FourClass_100_medium', 'RidgeClassifier', 'duckdb') ('Py_Proba_3', 'SQL_Proba_3') 6.973994136668781e-07
     Py_Proba_3  SQL_Proba_3   SQL_Error_3
496    0.562831     0.562832 -8.629287e-07
497    0.237491     0.237491 -5.276129e-07
498    0.381002     0.381001  3.652865e-07
499    0.438559     0.438557  1.442775e-06
500    0.479430     0.479430  3.677529e-07
501    0.399617     0.399618 -1.328942e-06
502    0.146374     0.146375 -4.665081e-07
503    0.147178     0.147179 -4.298078e-07
504    0.582434     0.582433  1.557698e-06
505    0.385588     0.385587  1.250840e-06
506    0.560257     0.560259 -1.882648e-06
507    0.199317     0.199318 -9.037195e-07
508    0.295410     0.295409  6.253608e-07
509    0.170646     0.170645  2.358172e-07
510    0.142919     0.142920 -1.203752e-06
511    0.178129     0.178129 -4.974169e-07
MLLITE_CLASS_SQL_EXECUTION_STATUS ('FourClass_100_medium', 'RidgeClassifier', 'duckdb', 'Success')
     Py_Decision  SQL_Decision
496            3             3
497            0             0
498            0             0
499            3             3
500            3             3
501            3             3
502            0             0
503            2             2
504            3             3
505            3             3
506            3             3
507            0             0
508            1             1
509            1             1
510            2             2
511            1             1
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_100_medium_option_1_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('FourClass_100_medium', 'RidgeClassifier', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('FourClass_100_medium', 'RidgeClassifier', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('FourClass_100_medium', 'RidgeClassifier', 'sqlite')
ore_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."Score_3" AS "Score_3",
  arg_max_cte."Proba_3" AS "Proba_3",
  CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN LN( arg_max_cte."Proba_3" ) ELSE -1.79769313486231e+308 END AS "LogProba_3",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('FourClass_100_medium', 'RidgeClassifier', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 512 entries, 0 to 511
Data columns (total 100 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     512 non-null    float32
 1   X_1     512 non-null    float32
 2   X_2     512 non-null    float32
 3   X_3     512 non-null    float32
 4   X_4     512 non-null    float32
 5   X_5     512 non-null    float32
 6   X_6     512 non-null    float32
 7   X_7     512 non-null    float32
 8   X_8     512 non-null    float32
 9   X_9     512 non-null    float32
 10  X_10    512 non-null    float32
 11  X_11    512 non-null    float32
 12  X_12    512 non-null    float32
 13  X_13    512 non-null    float32
 14  X_14    512 non-null    float32
 15  X_15    512 non-null    float32
 16  X_16    512 non-null    float32
 17  X_17    512 non-null    float32
 18  X_18    512 non-null    float32
 19  X_19    512 non-null    float32
 20  X_20    512 non-null    float32
 21  X_21    512 non-null    float32
 22  X_22    512 non-null    float32
 23  X_23    512 non-null    float32
 24  X_24    512 non-null    float32
 25  X_25    512 non-null    float32
 26  X_26    512 non-null    float32
 27  X_27    512 non-null    float32
 28  X_28    512 non-null    float32
 29  X_29    512 non-null    float32
 30  X_30    512 non-null    float32
 31  X_31    512 non-null    float32
 32  X_32    512 non-null    float32
 33  X_33    512 non-null    float32
 34  X_34    512 non-null    float32
 35  X_35    512 non-null    float32
 36  X_36    512 non-null    float32
 37  X_37    512 non-null    float32
 38  X_38    512 non-null    float32
 39  X_39    512 non-null    float32
 40  X_40    512 non-null    float32
 41  X_41    512 non-null    float32
 42  X_42    512 non-null    float32
 43  X_43    512 non-null    float32
 44  X_44    512 non-null    float32
 45  X_45    512 non-null    float32
 46  X_46    512 non-null    float32
 47  X_47    512 non-null    float32
 48  X_48    512 non-null    float32
 49  X_49    512 non-null    float32
 50  X_50    512 non-null    float32
 51  X_51    512 non-null    float32
 52  X_52    512 non-null    float32
 53  X_53    512 non-null    float32
 54  X_54    512 non-null    float32
 55  X_55    512 non-null    float32
 56  X_56    512 non-null    float32
 57  X_57    512 non-null    float32
 58  X_58    512 non-null    float32
 59  X_59    512 non-null    float32
 60  X_60    512 non-null    float32
 61  X_61    512 non-null    float32
 62  X_62    512 non-null    float32
 63  X_63    512 non-null    float32
 64  X_64    512 non-null    float32
 65  X_65    512 non-null    float32
 66  X_66    512 non-null    float32
 67  X_67    512 non-null    float32
 68  X_68    512 non-null    float32
 69  X_69    512 non-null    float32
 70  X_70    512 non-null    float32
 71  X_71    512 non-null    float32
 72  X_72    512 non-null    float32
 73  X_73    512 non-null    float32
 74  X_74    512 non-null    float32
 75  X_75    512 non-null    float32
 76  X_76    512 non-null    float32
 77  X_77    512 non-null    float32
 78  X_78    512 non-null    float32
 79  X_79    512 non-null    float32
 80  X_80    512 non-null    float32
 81  X_81    512 non-null    float32
 82  X_82    512 non-null    float32
 83  X_83    512 non-null    float32
 84  X_84    512 non-null    float32
 85  X_85    512 non-null    float32
 86  X_86    512 non-null    float32
 87  X_87    512 non-null    float32
 88  X_88    512 non-null    float32
 89  X_89    512 non-null    float32
 90  X_90    512 non-null    float32
 91  X_91    512 non-null    float32
 92  X_92    512 non-null    float32
 93  X_93    512 non-null    float32
 94  X_94    512 non-null    float32
 95  X_95    512 non-null    float32
 96  X_96    512 non-null    float32
 97  X_97    512 non-null    float32
 98  X_98    512 non-null    float32
 99  X_99    512 non-null    float32
dtypes: float32(100)
memory usage: 204.0 KB
            X_0       X_1       X_2  ...      X_97      X_98      X_99
index                                ...                              
0      0.347323 -2.297366 -1.081557  ... -1.720016  0.031633 -1.175074
1     -1.647107 -0.559376 -0.366788  ... -0.899678  0.392754 -0.657531
2     -0.676853  0.831335  0.609240  ...  1.035204 -1.881113 -0.604552
3     -0.400441 -0.019876  0.319522  ... -0.904833  0.876870 -1.741137
4      1.218101 -1.685854 -0.494455  ...  0.573216 -0.986428  0.346336
...         ...       ...       ...  ...       ...       ...       ...
507    0.932348  0.404271  0.206503  ...  1.674384  0.009033 -0.105569
508    0.457539 -0.123089  0.454953  ...  0.017761  0.274791  0.024370
509   -0.504601  0.356219 -1.493893  ... -0.429433 -0.473036  0.162089
510    0.242723 -0.868103 -0.558886  ... -1.624536 -0.330591  1.131969
511    0.286521  0.616795  0.205188  ...  0.208089  1.054260 -0.489766

[512 rows x 100 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 512 entries, 0 to 511
Data columns (total 15 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          512 non-null    int64  
 1   Score_0        512 non-null    float64
 2   Proba_0        512 non-null    float64
 3   LogProba_0     512 non-null    float64
 4   Score_1        512 non-null    float64
 5   Proba_1        512 non-null    float64
 6   LogProba_1     512 non-null    float64
 7   Score_2        512 non-null    float64
 8   Proba_2        512 non-null    float64
 9   LogProba_2     512 non-null    float64
 10  Score_3        512 non-null    float64
 11  Proba_3        512 non-null    float64
 12  LogProba_3     512 non-null    float64
 13  Decision       512 non-null    int64  
 14  DecisionProba  512 non-null    float64
dtypes: float64(13), int64(2)
memory usage: 60.1 KB
     index   Score_0   Proba_0  ...  LogProba_3  Decision  DecisionProba
0        0  0.306226  0.492245  ...   -1.927280         0       0.492245
1        1 -0.374498  0.235456  ...   -0.668384         3       0.512536
2        2 -0.758115  0.156579  ...   -2.286237         2       0.554162
3        3 -0.634564  0.207452  ...   -1.987429         1       0.382320
4        4  0.056918  0.396323  ...   -1.502785         0       0.396323
..     ...       ...       ...  ...         ...       ...            ...
507    507 -0.215960  0.322376  ...   -1.612853         0       0.322376
508    508 -0.640730  0.210314  ...   -1.219394         1       0.335442
509    509 -0.397691  0.268452  ...   -1.768167         1       0.345214
510    510 -0.583901  0.215602  ...   -1.945470         2       0.380458
511    511 -0.778707  0.180059  ...   -1.725246         1       0.399100

[512 rows x 15 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Score_3', 'Proba_3',
       'LogProba_3', 'Decision', 'DecisionProba'],
      dtype='object')
     index   Score_0  SQL_Proba_0  ...  Py_Proba_2  Py_Proba_3  Py_Decision
496    496 -1.067617     0.114585  ...    0.182659    0.562831            3
497    497  0.032818     0.400133  ...    0.168542    0.237491            0
498    498  0.203204     0.404839  ...    0.134057    0.381002            0
499    499 -0.505287     0.224190  ...    0.112652    0.438559            3
500    500 -1.163339     0.113715  ...    0.185616    0.479430            3
501    501 -0.322197     0.273357  ...    0.146664    0.399617            3
502    502  0.452044     0.521492  ...    0.244508    0.146374            0
503    503 -1.579075     0.066932  ...    0.447624    0.147178            2
504    504 -0.612456     0.174882  ...    0.131642    0.582434            3
505    505 -0.778690     0.179987  ...    0.227347    0.385588            3
506    506 -1.208404     0.091340  ...    0.257516    0.560257            3
507    507 -0.215960     0.322376  ...    0.272303    0.199317            0
508    508 -0.640730     0.210314  ...    0.158835    0.295410            1
509    509 -0.397691     0.268452  ...    0.215689    0.170646            1
510    510 -0.583901     0.215602  ...    0.380459    0.142919            2
511    511 -0.778707     0.180059  ...    0.242713    0.178129            1

[16 rows x 20 columns]
MLLITE_CLASS_SQL_ERROR ('FourClass_100_medium', 'RidgeClassifier', 'sqlite') ('Py_Proba_0', 'SQL_Proba_0') 6.163059519562973e-07
     Py_Proba_0  SQL_Proba_0   SQL_Error_0
496    0.114585     0.114585  6.361093e-07
497    0.400132     0.400133 -1.251095e-07
498    0.404839     0.404839 -2.238345e-07
499    0.224190     0.224190 -6.050720e-07
500    0.113715     0.113715 -1.477288e-07
501    0.273357     0.273357  1.370643e-08
502    0.521492     0.521492  7.825807e-08
503    0.066933     0.066932  1.610560e-07
504    0.174881     0.174882 -1.095658e-06
505    0.179986     0.179987 -1.117714e-06
506    0.091341     0.091340  1.620879e-07
507    0.322376     0.322376 -3.861663e-08
508    0.210314     0.210314 -7.854700e-08
509    0.268452     0.268452  2.445843e-07
510    0.215602     0.215602 -3.292663e-07
511    0.180058     0.180059 -8.474420e-07
MLLITE_CLASS_SQL_ERROR ('FourClass_100_medium', 'RidgeClassifier', 'sqlite') ('Py_Proba_1', 'SQL_Proba_1') 4.77424591864884e-07
     Py_Proba_1  SQL_Proba_1   SQL_Error_1
496    0.139924     0.139924  3.483266e-07
497    0.193835     0.193835 -1.290322e-07
498    0.080102     0.080102 -1.590246e-07
499    0.224600     0.224600 -2.158325e-08
500    0.221240     0.221240 -1.538140e-07
501    0.180362     0.180362  3.871930e-07
502    0.087625     0.087626 -3.686215e-07
503    0.338266     0.338266 -6.711009e-07
504    0.111043     0.111044 -3.243445e-07
505    0.207080     0.207079  4.859314e-07
506    0.090887     0.090886  8.857630e-07
507    0.206003     0.206003  5.074565e-07
508    0.335441     0.335442 -5.653795e-07
509    0.345214     0.345214  1.281002e-07
510    0.261020     0.261020  5.551049e-07
511    0.399100     0.399100  3.458589e-07
MLLITE_CLASS_SQL_ERROR ('FourClass_100_medium', 'RidgeClassifier', 'sqlite') ('Py_Proba_2', 'SQL_Proba_2') 5.63937063163746e-07
     Py_Proba_2  SQL_Proba_2   SQL_Error_2
496    0.182659     0.182660 -2.487590e-07
497    0.168542     0.168541  7.307370e-07
498    0.134057     0.134057  1.424749e-07
499    0.112652     0.112653 -8.625119e-07
500    0.185616     0.185616 -9.848846e-08
501    0.146664     0.146663  1.021026e-06
502    0.244508     0.244507  8.269160e-07
503    0.447624     0.447623  9.521609e-07
504    0.131642     0.131642 -6.208936e-08
505    0.227347     0.227347 -6.384785e-07
506    0.257516     0.257515  8.435885e-07
507    0.272303     0.272303  4.594914e-07
508    0.158835     0.158835  3.818084e-08
509    0.215689     0.215689 -5.003323e-07
510    0.380459     0.380458  1.042179e-06
511    0.242713     0.242712  1.008560e-06
MLLITE_CLASS_SQL_ERROR ('FourClass_100_medium', 'RidgeClassifier', 'sqlite') ('Py_Proba_3', 'SQL_Proba_3') 6.972200223826749e-07
     Py_Proba_3  SQL_Proba_3   SQL_Error_3
496    0.562831     0.562832 -8.176333e-07
497    0.237491     0.237491 -5.063976e-07
498    0.381002     0.381001  3.372417e-07
499    0.438559     0.438557  1.429563e-06
500    0.479430     0.479430  3.404266e-07
501    0.399617     0.399618 -1.362320e-06
502    0.146374     0.146375 -4.471456e-07
503    0.147178     0.147179 -4.197643e-07
504    0.582434     0.582433  1.511895e-06
505    0.385588     0.385587  1.210657e-06
506    0.560257     0.560259 -1.936143e-06
507    0.199317     0.199318 -9.283312e-07
508    0.295410     0.295409  6.504491e-07
509    0.170646     0.170645  2.170547e-07
510    0.142919     0.142920 -1.223314e-06
511    0.178129     0.178129 -4.771750e-07
MLLITE_CLASS_SQL_EXECUTION_STATUS ('FourClass_100_medium', 'RidgeClassifier', 'sqlite', 'Success')
     Py_Decision  SQL_Decision
496            3             3
497            0             0
498            0             0
499            3             3
500            3             3
501            3             3
502            0             0
503            2             2
504            3             3
505            3             3
506            3             3
507            0             0
508            1             1
509            1             1
510            2             2
511            1             1
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
