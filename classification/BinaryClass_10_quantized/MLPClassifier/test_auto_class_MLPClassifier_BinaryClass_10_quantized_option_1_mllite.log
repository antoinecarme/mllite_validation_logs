      X_0  X_1  X_2  X_3  X_4  X_5  X_6  X_7  X_8  X_9  target
0       4    8    7    5    7    5    7    6    5    8       0
1       2    9    6    5    6    3    4    5    8    3       1
2       5    7    3    9    9    0    2    6    4    6       0
3       8    2    8    4    6    6    8    5    5    1       1
4       7    5    3    1    3    5    4    8    1    6       1
...   ...  ...  ...  ...  ...  ...  ...  ...  ...  ...     ...
1019    4    0    3    1    3    5    4    6    4    1       0
1020    8    5    6    8    6    4    6    7    6    1       1
1021    4    9    9    1    8    9    9    2    9    6       1
1022    5    8    4    4    9    0    2    0    5    7       0
1023    2    3    1    9    2    1    1    2    8    5       0

[1024 rows x 11 columns]
MLLITE_MODEL_SET_OPTIONS MLPClassifier {"hidden_layer_sizes" : [4, 8, 6]}
MLLITE_MODEL_OPTIONS_DEFAULT MLPClassifier { "max_iter" : 32}
MLLITE_MODEL_OPTIONS_AFTER_SETTING MLPClassifier { "hidden_layer_sizes" : [4, 8, 6],  "max_iter" : 32 }
MLLITE_MODEL_JSON_AFTER_SETTING MLPClassifier None
('OPERATION_START', 'TRAINING')
[[4. 8. 7. 5. 7. 5. 7. 6. 5. 8.]
 [2. 9. 6. 5. 6. 3. 4. 5. 8. 3.]
 [5. 7. 3. 9. 9. 0. 2. 6. 4. 6.]
 [8. 2. 8. 4. 6. 6. 8. 5. 5. 1.]
 [7. 5. 3. 1. 3. 5. 4. 8. 1. 6.]] [0 1 0 1 1]
MLLITE_FIT_USING_MODEL mllite_mlp_class.MLPClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT' 1 3
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT' 2 3
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 3 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 6 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 9 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 12 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 15 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 18 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 21 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 24 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 27 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 30 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT_BACK_PROP_ITERATION' 32 32
PROGRESS_REPORT_ELAPSED_TOTAL 'MLP_MODEL_FIT' 3 3
('OPERATION_END_ELAPSED', 0.095, 'TRAINING')
{ "hidden_layer_sizes" : [4, 8, 6],  "max_iter" : 32 }
{ "hidden_layer_sizes" : [4, 8, 6],  "max_iter" : 32 }
{
	"metadata" : { "model" : "Rosenblatt_MLP", "version" : "2024-W12", "signature" : "ff4_il8"},
	"options" : {  "hidden_layer_sizes" : [ 4, 8, 6 ], "activation" : "relu", "solver" : "adam", "alpha" : 0.000100, "batch_size" : null, "learning_rate" : "constant", "learning_rate_init" : 0.001000, "power_t" : 0.500000, "max_iter" : 32, "shuffle" : 1, "random_state" : 1789, "tol" : 0.000100, "verbose" : 0, "warm_start" : 0, "momentum" : 0.900000, "nesterovs_momentum" : 1, "early_stopping" : 0, "validation_fraction" : 0.100000, "beta_1" : 0.900000, "beta_2" : 0.999000, "epsilon" : 0.000000, "n_iter_no_change" : 10, "max_fun" : 15000 },
	"dataset" : { "dataset_rows" : 1024, "dataset_features" : 10 },
	"classes" : [ 0, 1 ],
	"layers" : {
		"sizes" : [ 10, 4, 8, 6, 1 ],
		"Layer_0" : {
			"name" : "Input_Layer",
			"NbInputs" : 0,
			"NbOutputs" : 10 
		},
		"Layer_1" : {
			"name" : "Hidden_Layer_1",
			"NbInputs" : 10,
			"NbOutputs" : 4 ,
			"coeffs_0" : [ -0.144747, 0.509034, -0.267199, -0.136897 ],
			"coeffs_1" : [ 0.034247, -0.266639, 0.189754, -0.045878 ],
			"coeffs_2" : [ 0.462114, 0.123729, 0.432310, -0.165866 ],
			"coeffs_3" : [ 0.563720, -0.334385, -0.274252, 0.188968 ],
			"coeffs_4" : [ 0.249009, -0.118607, -0.227494, -0.491784 ],
			"coeffs_5" : [ 0.187918, -0.767165, -0.104379, -0.062305 ],
			"coeffs_6" : [ -0.226360, -0.715461, -0.229559, 0.453204 ],
			"coeffs_7" : [ -0.132662, 0.153583, -0.473423, -0.053663 ],
			"coeffs_8" : [ -0.286898, 0.426143, -0.131723, 0.186874 ],
			"coeffs_9" : [ -0.518751, 0.708803, -0.368752, 0.253615 ],
			"intercepts" : [ -0.560230, 0.548032, 0.154196, 0.517866 ]
		},
		"Layer_2" : {
			"name" : "Hidden_Layer_2",
			"NbInputs" : 4,
			"NbOutputs" : 8 ,
			"coeffs_0" : [ -0.337587, -0.629055, 0.302460, 0.198297, 0.563984, 0.520223, 0.436620, -0.469468 ],
			"coeffs_1" : [ 0.502116, 0.741878, -0.521973, 0.529561, 0.406179, 0.227100, -0.044600, 0.598942 ],
			"coeffs_2" : [ -0.493326, 0.089234, 0.178371, 0.298335, -0.490508, 0.379297, -0.285663, -0.540104 ],
			"coeffs_3" : [ 0.767750, 0.556505, 0.000481, -0.571140, 0.007168, 0.590459, -0.614007, 0.261487 ],
			"intercepts" : [ 0.428424, 0.279099, 0.733442, -0.335508, 0.405320, 0.389240, 0.384688, -0.024174 ]
		},
		"Layer_3" : {
			"name" : "Hidden_Layer_3",
			"NbInputs" : 8,
			"NbOutputs" : 6 ,
			"coeffs_0" : [ -0.668703, 0.192978, -0.040933, 0.015546, -0.370162, -0.506065 ],
			"coeffs_1" : [ -0.288080, 0.476218, -0.009198, -0.016370, -0.151607, -0.473633 ],
			"coeffs_2" : [ 0.101868, -0.325158, -0.302074, -0.210320, 0.269611, -0.352417 ],
			"coeffs_3" : [ -0.320800, 0.352628, 0.652682, 0.481822, 0.365210, 0.264556 ],
			"coeffs_4" : [ -0.382655, -0.041187, 0.172518, 0.375825, 0.216036, -0.001604 ],
			"coeffs_5" : [ 0.287849, 0.353984, 0.064967, -0.283682, -0.178974, -0.218781 ],
			"coeffs_6" : [ 0.244209, 0.275073, -0.456378, 0.143584, -0.308396, -0.001729 ],
			"coeffs_7" : [ 0.119984, -0.368080, 0.309230, -0.450079, -0.475751, 0.377295 ],
			"intercepts" : [ 0.477368, -0.565105, -0.279579, -0.565613, -0.500519, -0.502640 ]
		},
		"Layer_4" : {
			"name" : "Output_Layer",
			"NbInputs" : 6,
			"NbOutputs" : 1 ,
			"coeffs_0" : [ -0.222386 ],
			"coeffs_1" : [ -0.111124 ],
			"coeffs_2" : [ -0.616468 ],
			"coeffs_3" : [ -0.623632 ],
			"coeffs_4" : [ -0.703981 ],
			"coeffs_5" : [ 0.178692 ],
			"intercepts" : [ -0.448431 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/MLPClassifier/mllite.MLPClassifier_BinaryClass_10_quantized_option_1.json'

MLLITE_MODEL_SET_OPTIONS MLPClassifier {"hidden_layer_sizes" : [4, 8, 6]}
MLLITE_MODEL_OPTIONS_DEFAULT MLPClassifier { "max_iter" : 32}
MLLITE_MODEL_OPTIONS_AFTER_SETTING MLPClassifier { "hidden_layer_sizes" : [4, 8, 6],  "max_iter" : 32 }
MLLITE_MODEL_JSON_AFTER_SETTING MLPClassifier None
MLLITE_RELOADING_MODEL mllite_mlp_class.MLPClassifier_ff4_il8
{
	"metadata" : { "model" : "Rosenblatt_MLP", "version" : "2024-W12", "signature" : "ff4_il8"},
	"options" : {  "hidden_layer_sizes" : [ 4, 8, 6 ], "activation" : "relu", "solver" : "adam", "alpha" : 0.000100, "batch_size" : null, "learning_rate" : "constant", "learning_rate_init" : 0.001000, "power_t" : 0.500000, "max_iter" : 32, "shuffle" : 1, "random_state" : 1789, "tol" : 0.000100, "verbose" : 0, "warm_start" : 0, "momentum" : 0.900000, "nesterovs_momentum" : 1, "early_stopping" : 0, "validation_fraction" : 0.100000, "beta_1" : 0.900000, "beta_2" : 0.999000, "epsilon" : 0.000000, "n_iter_no_change" : 10, "max_fun" : 15000 },
	"dataset" : { "dataset_rows" : 1024, "dataset_features" : 10 },
	"classes" : [ 0, 1 ],
	"layers" : {
		"sizes" : [ 10, 4, 8, 6, 1 ],
		"Layer_0" : {
			"name" : "Input_Layer",
			"NbInputs" : 0,
			"NbOutputs" : 10 
		},
		"Layer_1" : {
			"name" : "Hidden_Layer_1",
			"NbInputs" : 10,
			"NbOutputs" : 4 ,
			"coeffs_0" : [ -0.144747, 0.509034, -0.267199, -0.136897 ],
			"coeffs_1" : [ 0.034247, -0.266639, 0.189754, -0.045878 ],
			"coeffs_2" : [ 0.462114, 0.123729, 0.432310, -0.165866 ],
			"coeffs_3" : [ 0.563720, -0.334385, -0.274252, 0.188968 ],
			"coeffs_4" : [ 0.249009, -0.118607, -0.227494, -0.491784 ],
			"coeffs_5" : [ 0.187918, -0.767165, -0.104379, -0.062305 ],
			"coeffs_6" : [ -0.226360, -0.715461, -0.229559, 0.453204 ],
			"coeffs_7" : [ -0.132662, 0.153583, -0.473423, -0.053663 ],
			"coeffs_8" : [ -0.286898, 0.426143, -0.131723, 0.186874 ],
			"coeffs_9" : [ -0.518751, 0.708803, -0.368752, 0.253615 ],
			"intercepts" : [ -0.560230, 0.548032, 0.154196, 0.517866 ]
		},
		"Layer_2" : {
			"name" : "Hidden_Layer_2",
			"NbInputs" : 4,
			"NbOutputs" : 8 ,
			"coeffs_0" : [ -0.337587, -0.629055, 0.302460, 0.198297, 0.563984, 0.520223, 0.436620, -0.469468 ],
			"coeffs_1" : [ 0.502116, 0.741878, -0.521973, 0.529561, 0.406179, 0.227100, -0.044600, 0.598942 ],
			"coeffs_2" : [ -0.493326, 0.089234, 0.178371, 0.298335, -0.490508, 0.379297, -0.285663, -0.540104 ],
			"coeffs_3" : [ 0.767750, 0.556505, 0.000481, -0.571140, 0.007168, 0.590459, -0.614007, 0.261487 ],
			"intercepts" : [ 0.428424, 0.279099, 0.733442, -0.335508, 0.405320, 0.389240, 0.384688, -0.024174 ]
		},
		"Layer_3" : {
			"name" : "Hidden_Layer_3",
			"NbInputs" : 8,
			"NbOutputs" : 6 ,
			"coeffs_0" : [ -0.668703, 0.192978, -0.040933, 0.015546, -0.370162, -0.506065 ],
			"coeffs_1" : [ -0.288080, 0.476218, -0.009198, -0.016370, -0.151607, -0.473633 ],
			"coeffs_2" : [ 0.101868, -0.325158, -0.302074, -0.210320, 0.269611, -0.352417 ],
			"coeffs_3" : [ -0.320800, 0.352628, 0.652682, 0.481822, 0.365210, 0.264556 ],
			"coeffs_4" : [ -0.382655, -0.041187, 0.172518, 0.375825, 0.216036, -0.001604 ],
			"coeffs_5" : [ 0.287849, 0.353984, 0.064967, -0.283682, -0.178974, -0.218781 ],
			"coeffs_6" : [ 0.244209, 0.275073, -0.456378, 0.143584, -0.308396, -0.001729 ],
			"coeffs_7" : [ 0.119984, -0.368080, 0.309230, -0.450079, -0.475751, 0.377295 ],
			"intercepts" : [ 0.477368, -0.565105, -0.279579, -0.565613, -0.500519, -0.502640 ]
		},
		"Layer_4" : {
			"name" : "Output_Layer",
			"NbInputs" : 6,
			"NbOutputs" : 1 ,
			"coeffs_0" : [ -0.222386 ],
			"coeffs_1" : [ -0.111124 ],
			"coeffs_2" : [ -0.616468 ],
			"coeffs_3" : [ -0.623632 ],
			"coeffs_4" : [ -0.703981 ],
			"coeffs_5" : [ 0.178692 ],
			"intercepts" : [ -0.448431 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1 ],
	"dataset" : 	{
		"dataset_features" : 10,
		"dataset_rows" : 1024
	},
	"layers" : 	{
		"Layer_0" : 	{
			"NbInputs" : 0,
			"NbOutputs" : 10,
			"name" : "Input_Layer"
		},
		"Layer_1" : 	{
			"NbInputs" : 10,
			"NbOutputs" : 4,
			"coeffs_0" : [ -0.144747, 0.509034, -0.267199, -0.136897 ],
			"coeffs_1" : [ 0.034247, -0.266639, 0.189754, -0.045878 ],
			"coeffs_2" : [ 0.462114, 0.123729, 0.43231, -0.165866 ],
			"coeffs_3" : [ 0.56372, -0.334385, -0.274252, 0.188968 ],
			"coeffs_4" : [ 0.249009, -0.118607, -0.227494, -0.491784 ],
			"coeffs_5" : [ 0.187918, -0.767165, -0.104379, -0.062305 ],
			"coeffs_6" : [ -0.22636, -0.715461, -0.229559, 0.453204 ],
			"coeffs_7" : [ -0.132662, 0.153583, -0.473423, -0.053663 ],
			"coeffs_8" : [ -0.286898, 0.426143, -0.131723, 0.186874 ],
			"coeffs_9" : [ -0.518751, 0.708803, -0.368752, 0.253615 ],
			"intercepts" : [ -0.56023, 0.548032, 0.154196, 0.517866 ],
			"name" : "Hidden_Layer_1"
		},
		"Layer_2" : 	{
			"NbInputs" : 4,
			"NbOutputs" : 8,
			"coeffs_0" : [ -0.337587, -0.629055, 0.30246, 0.198297, 0.563984, 0.520223, 0.43662, -0.469468 ],
			"coeffs_1" : [ 0.502116, 0.741878, -0.521973, 0.529561, 0.406179, 0.2271, -0.0446, 0.598942 ],
			"coeffs_2" : [ -0.493326, 0.089234, 0.178371, 0.298335, -0.490508, 0.379297, -0.285663, -0.540104 ],
			"coeffs_3" : [ 0.76775, 0.556505, 0.000481, -0.57114, 0.007168, 0.590459, -0.614007, 0.261487 ],
			"intercepts" : [ 0.428424, 0.279099, 0.733442, -0.335508, 0.40532, 0.38924, 0.384688, -0.024174 ],
			"name" : "Hidden_Layer_2"
		},
		"Layer_3" : 	{
			"NbInputs" : 8,
			"NbOutputs" : 6,
			"coeffs_0" : [ -0.668703, 0.192978, -0.040933, 0.015546, -0.370162, -0.506065 ],
			"coeffs_1" : [ -0.28808, 0.476218, -0.009198, -0.01637, -0.151607, -0.473633 ],
			"coeffs_2" : [ 0.101868, -0.325158, -0.302074, -0.21032, 0.269611, -0.352417 ],
			"coeffs_3" : [ -0.3208, 0.352628, 0.652682, 0.481822, 0.36521, 0.264556 ],
			"coeffs_4" : [ -0.382655, -0.041187, 0.172518, 0.375825, 0.216036, -0.001604 ],
			"coeffs_5" : [ 0.287849, 0.353984, 0.064967, -0.283682, -0.178974, -0.218781 ],
			"coeffs_6" : [ 0.244209, 0.275073, -0.456378, 0.143584, -0.308396, -0.001729 ],
			"coeffs_7" : [ 0.119984, -0.36808, 0.30923, -0.450079, -0.475751, 0.377295 ],
			"intercepts" : [ 0.477368, -0.565105, -0.279579, -0.565613, -0.500519, -0.50264 ],
			"name" : "Hidden_Layer_3"
		},
		"Layer_4" : 	{
			"NbInputs" : 6,
			"NbOutputs" : 1,
			"coeffs_0" : [ -0.222386 ],
			"coeffs_1" : [ -0.111124 ],
			"coeffs_2" : [ -0.616468 ],
			"coeffs_3" : [ -0.623632 ],
			"coeffs_4" : [ -0.703981 ],
			"coeffs_5" : [ 0.178692 ],
			"intercepts" : [ -0.448431 ],
			"name" : "Output_Layer"
		},
		"sizes" : [ 10, 4, 8, 6, 1 ]
	},
	"metadata" :  { "model" : "Rosenblatt_MLP", "signature" : "ff4_il8", "version" : "2024-W12" },
	"options" :  { "activation" : "relu", "alpha" : 0.0001, "batch_size" : null, "beta_1" : 0.9, "beta_2" : 0.999, "early_stopping" : 0, "epsilon" : 0.0, "hidden_layer_sizes" : [ 4, 8, 6 ], "learning_rate" : "constant", "learning_rate_init" : 0.001, "max_fun" : 15000, "max_iter" : 32, "momentum" : 0.9, "n_iter_no_change" : 10, "nesterovs_momentum" : 1, "power_t" : 0.5, "random_state" : 1789, "shuffle" : 1, "solver" : "adam", "tol" : 0.0001, "validation_fraction" : 0.1, "verbose" : 0, "warm_start" : 0 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.001, 'PREDICT')
[[0.6182 0.3818]
 [0.6414 0.3586]
 [0.8306 0.1694]
 ...
 [0.6111 0.3889]
 [0.8871 0.1129]
 [0.79   0.21  ]]
(1024, 2)
(1024,) float32
MODEL_PERFS {'class_name': 'mllite.MLPClassifier', 'model_name': 'MLPClassifier', 'options': '{"hidden_layer_sizes" : [4, 8, 6]}', 'dataset': 'BinaryClass_10_quantized', 'size': 1024, 'accuracy': 0.505859375, 'auc': 0.7395863537167885}
WRITING_PERF_CODE 'logs/auto_tests/classification/MLPClassifier/mllite.MLPClassifier_BinaryClass_10_quantized_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.MLPClassifier', 'model_name': 'MLPClassifier', 'options': '{"hidden_layer_sizes" : [4, 8, 6]}', 'dataset': 'BinaryClass_10_quantized', 'training_time_in_sec': 0.094, 'prediction_time_in_sec': 0.001}
WRITING_SQL_CODE 'logs/auto_tests/classification/MLPClassifier/mllite.MLPClassifier_BinaryClass_10_quantized_option_1.sql'



SQL_OUT_PUT_FIRST_LINES_START
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 )
,
"Input_Layer_BA" AS
 ( SELECT t."index" as "index",
    X_0 AS OUT_0,
    X_1 AS OUT_1,
    X_2 AS OUT_2,
    X_3 AS OUT_3,
    X_4 AS OUT_4,
    X_5 AS OUT_5,
    X_6 AS OUT_6,
    X_7 AS OUT_7,
    X_8 AS OUT_8,
    X_9 AS OUT_9
 FROM model_input AS t
)
,
"Hidden_Layer_1_BA" AS
 ( SELECT t."index" as "index",
    -0.560230 + -0.144747 * t.OUT_0  + 0.034247 * t.OUT_1  + 0.462114 * t.OUT_2  + 0.563720 * t.OUT_3  + 0.249009 * t.OUT_4  + 0.187918 * t.OUT_5  + -0.226360 * t.OUT_6  + -0.132662 * t.OUT_7  + -0.286898 * t.OUT_8  + -0.518751 * t.OUT_9 A
SQL_OUT_PUT_FIRST_LINES_END
SQL_OUT_PUT_LAST_LINES_START
S t
),
arg_max_cte_with_max_proba_idx AS 
( SELECT t.*,
   CASE WHEN(t."Proba_0" = t."Max_Proba") THEN 0 else NULL END AS "max_idx_0",
   CASE WHEN(t."Proba_1" = t."Max_Proba") THEN 1 else NULL END AS "max_idx_1"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
 (SELECT t.*,
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 1024 entries, 0 to 1023
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     1024 non-null   float32
 1   X_1     1024 non-null   float32
 2   X_2     1024 non-null   float32
 3   X_3     1024 non-null   float32
 4   X_4     1024 non-null   float32
 5   X_5     1024 non-null   float32
 6   X_6     1024 non-null   float32
 7   X_7     1024 non-null   float32
 8   X_8     1024 non-null   float32
 9   X_9     1024 non-null   float32
dtypes: float32(10)
memory usage: 48.0 KB
       X_0  X_1  X_2  X_3  X_4  X_5  X_6  X_7  X_8  X_9
index                                                  
0      4.0  8.0  7.0  5.0  7.0  5.0  7.0  6.0  5.0  8.0
1      2.0  9.0  6.0  5.0  6.0  3.0  4.0  5.0  8.0  3.0
2      5.0  7.0  3.0  9.0  9.0  0.0  2.0  6.0  4.0  6.0
3      8.0  2.0  8.0  4.0  6.0  6.0  8.0  5.0  5.0  1.0
4      7.0  5.0  3.0  1.0  3.0  5.0  4.0  8.0  1.0  6.0
...    ...  ...  ...  ...  ...  ...  ...  ...  ...  ...
1019   4.0  0.0  3.0  1.0  3.0  5.0  4.0  6.0  4.0  1.0
1020   8.0  5.0  6.0  8.0  6.0  4.0  6.0  7.0  6.0  1.0
1021   4.0  9.0  9.0  1.0  8.0  9.0  9.0  2.0  9.0  6.0
1022   5.0  8.0  4.0  4.0  9.0  0.0  2.0  0.0  5.0  7.0
1023   2.0  3.0  1.0  9.0  2.0  1.0  1.0  2.0  8.0  5.0

[1024 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
