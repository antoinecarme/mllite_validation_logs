READING_CSV BinaryClass_100_quantized ['data/quantized/BinaryClass_100_quantized.csv']
      X_0  X_1  X_2  X_3  X_4  X_5  ...  X_95  X_96  X_97  X_98  X_99  target
0       5    3    0    8    4    4  ...     6     6     5     5     4       1
1       7    3    7    3    5    7  ...     9     1     2     5     1       0
2       8    5    5    8    7    8  ...     2     8     7     1     0       0
3       0    9    5    2    9    3  ...     0     7     5     0     2       1
4       6    3    9    5    4    1  ...     9     9     5     1     7       0
...   ...  ...  ...  ...  ...  ...  ...   ...   ...   ...   ...   ...     ...
1019    5    2    5    3    3    1  ...     6     0     6     5     6       0
1020    4    5    8    6    6    7  ...     1     3     5     8     4       0
1021    3    1    8    1    2    5  ...     1     4     5     3     9       0
1022    7    1    0    5    2    2  ...     2     4     6     0     5       0
1023    6    4    5    7    4    1  ...     4     3     6     0     6       1

[1024 rows x 101 columns]
MLLITE_MODEL_SET_OPTIONS DecisionTreeClassifier {"max_depth" : 6, "max_leaf_nodes" : 32}
MLLITE_MODEL_OPTIONS_DEFAULT DecisionTreeClassifier { "max_leaf_nodes" : 64}
MLLITE_MODEL_OPTIONS_AFTER_SETTING DecisionTreeClassifier { "max_depth" : 6, "max_leaf_nodes" : 32,  "max_leaf_nodes" : 64 }
MLLITE_MODEL_JSON_AFTER_SETTING DecisionTreeClassifier None
('OPERATION_START', 'TRAINING')
[[5. 3. 0. 8. 4. 4. 9. 4. 5. 1. 8. 3. 2. 7. 9. 1. 2. 7. 1. 3. 2. 0. 5. 6.
  0. 4. 5. 3. 5. 9. 0. 4. 7. 4. 8. 5. 3. 0. 3. 9. 3. 9. 7. 7. 0. 7. 2. 1.
  5. 5. 7. 5. 7. 7. 7. 1. 3. 4. 4. 3. 5. 3. 5. 1. 9. 6. 7. 4. 9. 4. 1. 5.
  6. 9. 0. 8. 5. 7. 2. 6. 4. 2. 5. 2. 4. 6. 6. 5. 8. 7. 5. 0. 5. 3. 8. 6.
  6. 5. 5. 4.]
 [7. 3. 7. 3. 5. 7. 1. 8. 0. 8. 2. 1. 3. 2. 9. 2. 6. 9. 4. 4. 2. 7. 3. 1.
  6. 5. 9. 7. 3. 4. 5. 6. 9. 5. 6. 5. 0. 6. 1. 3. 1. 1. 3. 2. 9. 5. 5. 6.
  5. 8. 8. 8. 6. 6. 8. 2. 3. 4. 3. 3. 4. 2. 6. 2. 3. 3. 6. 6. 1. 3. 8. 8.
  2. 2. 0. 4. 7. 3. 5. 8. 8. 4. 9. 9. 5. 2. 2. 6. 7. 9. 5. 7. 8. 6. 3. 9.
  1. 2. 5. 1.]
 [8. 5. 5. 8. 7. 8. 8. 3. 8. 4. 2. 0. 5. 6. 0. 7. 2. 6. 8. 2. 4. 4. 1. 0.
  3. 2. 2. 8. 0. 6. 4. 0. 9. 4. 6. 6. 5. 6. 3. 1. 3. 6. 4. 1. 2. 2. 7. 1.
  6. 4. 2. 2. 7. 4. 6. 1. 8. 0. 1. 1. 9. 2. 8. 3. 3. 5. 6. 9. 7. 2. 0. 4.
  1. 2. 1. 7. 2. 7. 3. 6. 7. 7. 7. 8. 3. 0. 4. 8. 6. 1. 5. 7. 7. 2. 3. 2.
  8. 7. 1. 0.]
 [0. 9. 5. 2. 9. 3. 7. 1. 8. 8. 6. 3. 1. 9. 6. 6. 8. 4. 8. 6. 9. 2. 8. 8.
  1. 1. 2. 5. 6. 1. 5. 2. 8. 2. 5. 9. 2. 3. 8. 7. 6. 1. 1. 4. 2. 6. 1. 1.
  5. 9. 9. 3. 6. 4. 3. 4. 9. 7. 3. 8. 2. 8. 1. 4. 4. 0. 5. 8. 1. 4. 8. 0.
  1. 3. 1. 8. 8. 7. 0. 3. 0. 1. 0. 0. 6. 8. 8. 8. 1. 2. 6. 5. 0. 9. 1. 0.
  7. 5. 0. 2.]
 [6. 3. 9. 5. 4. 1. 5. 4. 8. 0. 1. 2. 7. 4. 4. 0. 0. 7. 4. 2. 1. 8. 1. 1.
  1. 2. 2. 3. 4. 3. 8. 8. 8. 3. 3. 1. 4. 9. 1. 3. 6. 4. 1. 2. 1. 5. 1. 2.
  6. 7. 8. 1. 6. 8. 2. 8. 9. 1. 1. 6. 9. 2. 2. 5. 8. 8. 2. 5. 0. 6. 5. 8.
  6. 5. 3. 1. 2. 6. 5. 0. 5. 8. 7. 2. 1. 8. 6. 3. 4. 7. 2. 6. 3. 9. 7. 9.
  9. 5. 1. 7.]] [1 0 0 1 0]
MLLITE_FIT_USING_MODEL mllite_decision_tree_class.DecisionTreeClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_CLASSIFIER_FIT' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 0 6
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_BEST_FIRST_BUILDER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_CLASSIFIER_FIT' 2 4
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_CLASSIFIER_FIT' 3 4
PROGRESS_REPORT_ELAPSED_TOTAL 'DECISION_TREE_CLASSIFIER_FIT' 4 4
('OPERATION_END_ELAPSED', 0.051, 'TRAINING')
{ "max_depth" : 6, "max_leaf_nodes" : 32,  "max_leaf_nodes" : 64 }
{ "max_depth" : 6, "max_leaf_nodes" : 32,  "max_leaf_nodes" : 64 }
{
	"metadata" : { "model" : "Breiman_CART", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : { "ccp_alpha" : 0.000000, "criterion" : "", "max_depth" : 6, "max_features" : null, "max_leaf_nodes" : 32, "min_impurity_decrease" : 0.000000, "min_samples_leaf" : 1, "min_samples_split" : 2, "min_weight_fraction_leaf" : 0.000000, "random_state" : 1789, "splitter" : "best" },
	"dataset" : { "dataset_rows" : 1024, "dataset_features" : 100 },
	"classes" : [ 0, 1 ],
	"tree" : {
	"features" : 100,
	"outputs" : 2,
	"max_depth" : 5,
	"node_count" : 53,
	"nodes" : {
		"node_00" : {"left" : 1, "right" : 2, "feature" : 61, "threshold" : 5.500000, "impurity" : 0.500000, "n_samples" : 1024, "w_samples" : 1024.000000, "value" : [0.500000, 0.500000]},
		"node_01" : {"left" : 3, "right" : 4, "feature" : 61, "threshold" : 3.500000, "impurity" : 0.336068, "n_samples" : 613, "w_samples" : 613.000000, "value" : [0.786297, 0.213703]},
		"node_02" : {"left" : 31, "right" : 32, "feature" : 1, "threshold" : 3.500000, "impurity" : 0.135330, "n_samples" : 411, "w_samples" : 411.000000, "value" : [0.072993, 0.927007]},
		"node_03" : {"left" : 21, "right" : 22, "feature" : 4, "threshold" : 1.500000, "impurity" : 0.194587, "n_samples" : 412, "w_samples" : 412.000000, "value" : [0.890777, 0.109223]},
		"node_04" : {"left" : 5, "right" : 6, "feature" : 4, "threshold" : 2.500000, "impurity" : 0.489592, "n_samples" : 201, "w_samples" : 201.000000, "value" : [0.572139, 0.427861]},
		"node_05" : {"left" : 15, "right" : 16, "feature" : 0, "threshold" : 8.500000, "impurity" : 0.132653, "n_samples" : 42, "w_samples" : 42.000000, "value" : [0.928571, 0.071429]},
		"node_06" : {"left" : 7, "right" : 8, "feature" : 67, "threshold" : 7.500000, "impurity" : 0.499031, "n_samples" : 159, "w_samples" : 159.000000, "value" : [0.477987, 0.522013]},
		"node_07" : {"left" : 9, "right" : 10, "feature" : 67, "threshold" : 5.500000, "impurity" : 0.481135, "n_samples" : 139, "w_samples" : 139.000000, "value" : [0.402878, 0.597122]},
		"node_08" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 20, "w_samples" : 20.000000, "value" : [1.000000, 0.000000]},
		"node_09" : {"left" : 11, "right" : 12, "feature" : 67, "threshold" : 4.500000, "impurity" : 0.497041, "n_samples" : 78, "w_samples" : 78.000000, "value" : [0.538462, 0.461538]},
		"node_10" : {"left" : 13, "right" : 14, "feature" : 82, "threshold" : 3.500000, "impurity" : 0.353668, "n_samples" : 61, "w_samples" : 61.000000, "value" : [0.229508, 0.770492]},
		"node_11" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.466392, "n_samples" : 54, "w_samples" : 54.000000, "value" : [0.370370, 0.629630]},
		"node_12" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.152778, "n_samples" : 24, "w_samples" : 24.000000, "value" : [0.916667, 0.083333]},
		"node_13" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.488166, "n_samples" : 26, "w_samples" : 26.000000, "value" : [0.423077, 0.576923]},
		"node_14" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.156735, "n_samples" : 35, "w_samples" : 35.000000, "value" : [0.085714, 0.914286]},
		"node_15" : {"left" : 17, "right" : 18, "feature" : 3, "threshold" : 0.500000, "impurity" : 0.092802, "n_samples" : 41, "w_samples" : 41.000000, "value" : [0.951219, 0.048780]},
		"node_16" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 1.000000]},
		"node_17" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 1.000000]},
		"node_18" : {"left" : 19, "right" : 20, "feature" : 80, "threshold" : 0.500000, "impurity" : 0.048750, "n_samples" : 40, "w_samples" : 40.000000, "value" : [0.975000, 0.025000]},
		"node_19" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.500000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [0.500000, 0.500000]},
		"node_20" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 38, "w_samples" : 38.000000, "value" : [1.000000, 0.000000]},
		"node_21" : {"left" : 47, "right" : 48, "feature" : 39, "threshold" : 8.500000, "impurity" : 0.022854, "n_samples" : 173, "w_samples" : 173.000000, "value" : [0.988439, 0.011561]},
		"node_22" : {"left" : 23, "right" : 24, "feature" : 67, "threshold" : 7.500000, "impurity" : 0.295093, "n_samples" : 239, "w_samples" : 239.000000, "value" : [0.820084, 0.179916]},
		"node_23" : {"left" : 25, "right" : 26, "feature" : 4, "threshold" : 5.500000, "impurity" : 0.404847, "n_samples" : 149, "w_samples" : 149.000000, "value" : [0.718121, 0.281879]},
		"node_24" : {"left" : 37, "right" : 38, "feature" : 96, "threshold" : 8.500000, "impurity" : 0.021975, "n_samples" : 90, "w_samples" : 90.000000, "value" : [0.988889, 0.011111]},
		"node_25" : {"left" : 29, "right" : 30, "feature" : 16, "threshold" : 8.500000, "impurity" : 0.352409, "n_samples" : 127, "w_samples" : 127.000000, "value" : [0.771654, 0.228346]},
		"node_26" : {"left" : 27, "right" : 28, "feature" : 16, "threshold" : 3.500000, "impurity" : 0.483471, "n_samples" : 22, "w_samples" : 22.000000, "value" : [0.409091, 0.590909]},
		"node_27" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.180000, "n_samples" : 10, "w_samples" : 10.000000, "value" : [0.100000, 0.900000]},
		"node_28" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.444444, "n_samples" : 12, "w_samples" : 12.000000, "value" : [0.666667, 0.333333]},
		"node_29" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.305355, "n_samples" : 117, "w_samples" : 117.000000, "value" : [0.811966, 0.188034]},
		"node_30" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.420000, "n_samples" : 10, "w_samples" : 10.000000, "value" : [0.300000, 0.700000]},
		"node_31" : {"left" : 33, "right" : 34, "feature" : 75, "threshold" : 3.500000, "impurity" : 0.375000, "n_samples" : 4, "w_samples" : 4.000000, "value" : [0.750000, 0.250000]},
		"node_32" : {"left" : 35, "right" : 36, "feature" : 67, "threshold" : 8.500000, "impurity" : 0.123876, "n_samples" : 407, "w_samples" : 407.000000, "value" : [0.066339, 0.933661]},
		"node_33" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 1.000000]},
		"node_34" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 3, "w_samples" : 3.000000, "value" : [1.000000, 0.000000]},
		"node_35" : {"left" : 41, "right" : 42, "feature" : 77, "threshold" : 9.500000, "impurity" : 0.115836, "n_samples" : 405, "w_samples" : 405.000000, "value" : [0.061728, 0.938272]},
		"node_36" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [1.000000, 0.000000]},
		"node_37" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 87, "w_samples" : 87.000000, "value" : [1.000000, 0.000000]},
		"node_38" : {"left" : 39, "right" : 40, "feature" : 42, "threshold" : 5.500000, "impurity" : 0.444444, "n_samples" : 3, "w_samples" : 3.000000, "value" : [0.666667, 0.333333]},
		"node_39" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [1.000000, 0.000000]},
		"node_40" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 1.000000]},
		"node_41" : {"left" : 43, "right" : 44, "feature" : 46, "threshold" : 9.500000, "impurity" : 0.111754, "n_samples" : 404, "w_samples" : 404.000000, "value" : [0.059406, 0.940594]},
		"node_42" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.000000, 0.000000]},
		"node_43" : {"left" : 45, "right" : 46, "feature" : 61, "threshold" : 6.500000, "impurity" : 0.107629, "n_samples" : 403, "w_samples" : 403.000000, "value" : [0.057072, 0.942928]},
		"node_44" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.000000, 0.000000]},
		"node_45" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.232118, "n_samples" : 97, "w_samples" : 97.000000, "value" : [0.134021, 0.865979]},
		"node_46" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.063224, "n_samples" : 306, "w_samples" : 306.000000, "value" : [0.032680, 0.967320]},
		"node_47" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 158, "w_samples" : 158.000000, "value" : [1.000000, 0.000000]},
		"node_48" : {"left" : 49, "right" : 50, "feature" : 73, "threshold" : 2.000000, "impurity" : 0.231111, "n_samples" : 15, "w_samples" : 15.000000, "value" : [0.866667, 0.133333]},
		"node_49" : {"left" : 51, "right" : 52, "feature" : 88, "threshold" : 1.500000, "impurity" : 0.444444, "n_samples" : 3, "w_samples" : 3.000000, "value" : [0.333333, 0.666667]},
		"node_50" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 12, "w_samples" : 12.000000, "value" : [1.000000, 0.000000]},
		"node_51" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.000000, 0.000000]},
		"node_52" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [0.000000, 1.000000]}
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/DecisionTreeClassifier/mllite.DecisionTreeClassifier_BinaryClass_100_quantized_option_1.json'

RELOADING_MODEL_FROM_JSON_START ('BinaryClass_100_quantized', 'DecisionTreeClassifier')
MLLITE_MODEL_SET_OPTIONS DecisionTreeClassifier {"max_depth" : 6, "max_leaf_nodes" : 32}
MLLITE_MODEL_OPTIONS_DEFAULT DecisionTreeClassifier { "max_leaf_nodes" : 64}
MLLITE_MODEL_OPTIONS_AFTER_SETTING DecisionTreeClassifier { "max_depth" : 6, "max_leaf_nodes" : 32,  "max_leaf_nodes" : 64 }
MLLITE_MODEL_JSON_AFTER_SETTING DecisionTreeClassifier None
MLLITE_RELOADING_MODEL mllite_decision_tree_class.DecisionTreeClassifier_ff4_il8
{
	"metadata" : { "model" : "Breiman_CART", "version" : "2024-W14", "signature" : "ff4_il8"},
	"options" : { "ccp_alpha" : 0.000000, "criterion" : "", "max_depth" : 6, "max_features" : null, "max_leaf_nodes" : 32, "min_impurity_decrease" : 0.000000, "min_samples_leaf" : 1, "min_samples_split" : 2, "min_weight_fraction_leaf" : 0.000000, "random_state" : 1789, "splitter" : "best" },
	"dataset" : { "dataset_rows" : 1024, "dataset_features" : 100 },
	"classes" : [ 0, 1 ],
	"tree" : {
	"features" : 100,
	"outputs" : 2,
	"max_depth" : 5,
	"node_count" : 53,
	"nodes" : {
		"node_00" : {"left" : 1, "right" : 2, "feature" : 61, "threshold" : 5.500000, "impurity" : 0.500000, "n_samples" : 1024, "w_samples" : 1024.000000, "value" : [0.500000, 0.500000]},
		"node_01" : {"left" : 3, "right" : 4, "feature" : 61, "threshold" : 3.500000, "impurity" : 0.336068, "n_samples" : 613, "w_samples" : 613.000000, "value" : [0.786297, 0.213703]},
		"node_02" : {"left" : 31, "right" : 32, "feature" : 1, "threshold" : 3.500000, "impurity" : 0.135330, "n_samples" : 411, "w_samples" : 411.000000, "value" : [0.072993, 0.927007]},
		"node_03" : {"left" : 21, "right" : 22, "feature" : 4, "threshold" : 1.500000, "impurity" : 0.194587, "n_samples" : 412, "w_samples" : 412.000000, "value" : [0.890777, 0.109223]},
		"node_04" : {"left" : 5, "right" : 6, "feature" : 4, "threshold" : 2.500000, "impurity" : 0.489592, "n_samples" : 201, "w_samples" : 201.000000, "value" : [0.572139, 0.427861]},
		"node_05" : {"left" : 15, "right" : 16, "feature" : 0, "threshold" : 8.500000, "impurity" : 0.132653, "n_samples" : 42, "w_samples" : 42.000000, "value" : [0.928571, 0.071429]},
		"node_06" : {"left" : 7, "right" : 8, "feature" : 67, "threshold" : 7.500000, "impurity" : 0.499031, "n_samples" : 159, "w_samples" : 159.000000, "value" : [0.477987, 0.522013]},
		"node_07" : {"left" : 9, "right" : 10, "feature" : 67, "threshold" : 5.500000, "impurity" : 0.481135, "n_samples" : 139, "w_samples" : 139.000000, "value" : [0.402878, 0.597122]},
		"node_08" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 20, "w_samples" : 20.000000, "value" : [1.000000, 0.000000]},
		"node_09" : {"left" : 11, "right" : 12, "feature" : 67, "threshold" : 4.500000, "impurity" : 0.497041, "n_samples" : 78, "w_samples" : 78.000000, "value" : [0.538462, 0.461538]},
		"node_10" : {"left" : 13, "right" : 14, "feature" : 82, "threshold" : 3.500000, "impurity" : 0.353668, "n_samples" : 61, "w_samples" : 61.000000, "value" : [0.229508, 0.770492]},
		"node_11" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.466392, "n_samples" : 54, "w_samples" : 54.000000, "value" : [0.370370, 0.629630]},
		"node_12" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.152778, "n_samples" : 24, "w_samples" : 24.000000, "value" : [0.916667, 0.083333]},
		"node_13" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.488166, "n_samples" : 26, "w_samples" : 26.000000, "value" : [0.423077, 0.576923]},
		"node_14" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.156735, "n_samples" : 35, "w_samples" : 35.000000, "value" : [0.085714, 0.914286]},
		"node_15" : {"left" : 17, "right" : 18, "feature" : 3, "threshold" : 0.500000, "impurity" : 0.092802, "n_samples" : 41, "w_samples" : 41.000000, "value" : [0.951219, 0.048780]},
		"node_16" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 1.000000]},
		"node_17" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 1.000000]},
		"node_18" : {"left" : 19, "right" : 20, "feature" : 80, "threshold" : 0.500000, "impurity" : 0.048750, "n_samples" : 40, "w_samples" : 40.000000, "value" : [0.975000, 0.025000]},
		"node_19" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.500000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [0.500000, 0.500000]},
		"node_20" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 38, "w_samples" : 38.000000, "value" : [1.000000, 0.000000]},
		"node_21" : {"left" : 47, "right" : 48, "feature" : 39, "threshold" : 8.500000, "impurity" : 0.022854, "n_samples" : 173, "w_samples" : 173.000000, "value" : [0.988439, 0.011561]},
		"node_22" : {"left" : 23, "right" : 24, "feature" : 67, "threshold" : 7.500000, "impurity" : 0.295093, "n_samples" : 239, "w_samples" : 239.000000, "value" : [0.820084, 0.179916]},
		"node_23" : {"left" : 25, "right" : 26, "feature" : 4, "threshold" : 5.500000, "impurity" : 0.404847, "n_samples" : 149, "w_samples" : 149.000000, "value" : [0.718121, 0.281879]},
		"node_24" : {"left" : 37, "right" : 38, "feature" : 96, "threshold" : 8.500000, "impurity" : 0.021975, "n_samples" : 90, "w_samples" : 90.000000, "value" : [0.988889, 0.011111]},
		"node_25" : {"left" : 29, "right" : 30, "feature" : 16, "threshold" : 8.500000, "impurity" : 0.352409, "n_samples" : 127, "w_samples" : 127.000000, "value" : [0.771654, 0.228346]},
		"node_26" : {"left" : 27, "right" : 28, "feature" : 16, "threshold" : 3.500000, "impurity" : 0.483471, "n_samples" : 22, "w_samples" : 22.000000, "value" : [0.409091, 0.590909]},
		"node_27" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.180000, "n_samples" : 10, "w_samples" : 10.000000, "value" : [0.100000, 0.900000]},
		"node_28" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.444444, "n_samples" : 12, "w_samples" : 12.000000, "value" : [0.666667, 0.333333]},
		"node_29" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.305355, "n_samples" : 117, "w_samples" : 117.000000, "value" : [0.811966, 0.188034]},
		"node_30" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.420000, "n_samples" : 10, "w_samples" : 10.000000, "value" : [0.300000, 0.700000]},
		"node_31" : {"left" : 33, "right" : 34, "feature" : 75, "threshold" : 3.500000, "impurity" : 0.375000, "n_samples" : 4, "w_samples" : 4.000000, "value" : [0.750000, 0.250000]},
		"node_32" : {"left" : 35, "right" : 36, "feature" : 67, "threshold" : 8.500000, "impurity" : 0.123876, "n_samples" : 407, "w_samples" : 407.000000, "value" : [0.066339, 0.933661]},
		"node_33" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 1.000000]},
		"node_34" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 3, "w_samples" : 3.000000, "value" : [1.000000, 0.000000]},
		"node_35" : {"left" : 41, "right" : 42, "feature" : 77, "threshold" : 9.500000, "impurity" : 0.115836, "n_samples" : 405, "w_samples" : 405.000000, "value" : [0.061728, 0.938272]},
		"node_36" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [1.000000, 0.000000]},
		"node_37" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 87, "w_samples" : 87.000000, "value" : [1.000000, 0.000000]},
		"node_38" : {"left" : 39, "right" : 40, "feature" : 42, "threshold" : 5.500000, "impurity" : 0.444444, "n_samples" : 3, "w_samples" : 3.000000, "value" : [0.666667, 0.333333]},
		"node_39" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [1.000000, 0.000000]},
		"node_40" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [0.000000, 1.000000]},
		"node_41" : {"left" : 43, "right" : 44, "feature" : 46, "threshold" : 9.500000, "impurity" : 0.111754, "n_samples" : 404, "w_samples" : 404.000000, "value" : [0.059406, 0.940594]},
		"node_42" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.000000, 0.000000]},
		"node_43" : {"left" : 45, "right" : 46, "feature" : 61, "threshold" : 6.500000, "impurity" : 0.107629, "n_samples" : 403, "w_samples" : 403.000000, "value" : [0.057072, 0.942928]},
		"node_44" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.000000, 0.000000]},
		"node_45" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.232118, "n_samples" : 97, "w_samples" : 97.000000, "value" : [0.134021, 0.865979]},
		"node_46" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.063224, "n_samples" : 306, "w_samples" : 306.000000, "value" : [0.032680, 0.967320]},
		"node_47" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 158, "w_samples" : 158.000000, "value" : [1.000000, 0.000000]},
		"node_48" : {"left" : 49, "right" : 50, "feature" : 73, "threshold" : 2.000000, "impurity" : 0.231111, "n_samples" : 15, "w_samples" : 15.000000, "value" : [0.866667, 0.133333]},
		"node_49" : {"left" : 51, "right" : 52, "feature" : 88, "threshold" : 1.500000, "impurity" : 0.444444, "n_samples" : 3, "w_samples" : 3.000000, "value" : [0.333333, 0.666667]},
		"node_50" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 12, "w_samples" : 12.000000, "value" : [1.000000, 0.000000]},
		"node_51" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 1, "w_samples" : 1.000000, "value" : [1.000000, 0.000000]},
		"node_52" : {"left" : null, "right" : null, "feature" : null, "threshold" : null, "impurity" : 0.000000, "n_samples" : 2, "w_samples" : 2.000000, "value" : [0.000000, 1.000000]}
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1 ],
	"dataset" : 	{
		"dataset_features" : 100,
		"dataset_rows" : 1024
	},
	"metadata" :  { "model" : "Breiman_CART", "signature" : "ff4_il8", "version" : "2024-W14" },
	"options" :  { "ccp_alpha" : 0.0, "criterion" : "", "max_depth" : 6, "max_features" : null, "max_leaf_nodes" : 32, "min_impurity_decrease" : 0.0, "min_samples_leaf" : 1, "min_samples_split" : 2, "min_weight_fraction_leaf" : 0.0, "random_state" : 1789, "splitter" : "best" },
	"tree" : 	{
		"features" : 100,
		"max_depth" : 5,
		"node_count" : 53,
		"nodes" : 	{
			"node_00" :  { "feature" : 61, "impurity" : 0.5, "left" : 1, "n_samples" : 1024, "right" : 2, "threshold" : 5.5, "value" : [ 0.5, 0.5 ], "w_samples" : 1024.0 },
			"node_01" :  { "feature" : 61, "impurity" : 0.336068, "left" : 3, "n_samples" : 613, "right" : 4, "threshold" : 3.5, "value" : [ 0.786297, 0.213703 ], "w_samples" : 613.0 },
			"node_02" :  { "feature" : 1, "impurity" : 0.13533, "left" : 31, "n_samples" : 411, "right" : 32, "threshold" : 3.5, "value" : [ 0.072993, 0.927007 ], "w_samples" : 411.0 },
			"node_03" :  { "feature" : 4, "impurity" : 0.194587, "left" : 21, "n_samples" : 412, "right" : 22, "threshold" : 1.5, "value" : [ 0.890777, 0.109223 ], "w_samples" : 412.0 },
			"node_04" :  { "feature" : 4, "impurity" : 0.489592, "left" : 5, "n_samples" : 201, "right" : 6, "threshold" : 2.5, "value" : [ 0.572139, 0.427861 ], "w_samples" : 201.0 },
			"node_05" :  { "feature" : 0, "impurity" : 0.132653, "left" : 15, "n_samples" : 42, "right" : 16, "threshold" : 8.5, "value" : [ 0.928571, 0.071429 ], "w_samples" : 42.0 },
			"node_06" :  { "feature" : 67, "impurity" : 0.499031, "left" : 7, "n_samples" : 159, "right" : 8, "threshold" : 7.5, "value" : [ 0.477987, 0.522013 ], "w_samples" : 159.0 },
			"node_07" :  { "feature" : 67, "impurity" : 0.481135, "left" : 9, "n_samples" : 139, "right" : 10, "threshold" : 5.5, "value" : [ 0.402878, 0.597122 ], "w_samples" : 139.0 },
			"node_08" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 20, "right" : null, "threshold" : null, "value" : [ 1.0, 0.0 ], "w_samples" : 20.0 },
			"node_09" :  { "feature" : 67, "impurity" : 0.497041, "left" : 11, "n_samples" : 78, "right" : 12, "threshold" : 4.5, "value" : [ 0.538462, 0.461538 ], "w_samples" : 78.0 },
			"node_10" :  { "feature" : 82, "impurity" : 0.353668, "left" : 13, "n_samples" : 61, "right" : 14, "threshold" : 3.5, "value" : [ 0.229508, 0.770492 ], "w_samples" : 61.0 },
			"node_11" :  { "feature" : null, "impurity" : 0.466392, "left" : null, "n_samples" : 54, "right" : null, "threshold" : null, "value" : [ 0.37037, 0.62963 ], "w_samples" : 54.0 },
			"node_12" :  { "feature" : null, "impurity" : 0.152778, "left" : null, "n_samples" : 24, "right" : null, "threshold" : null, "value" : [ 0.916667, 0.083333 ], "w_samples" : 24.0 },
			"node_13" :  { "feature" : null, "impurity" : 0.488166, "left" : null, "n_samples" : 26, "right" : null, "threshold" : null, "value" : [ 0.423077, 0.576923 ], "w_samples" : 26.0 },
			"node_14" :  { "feature" : null, "impurity" : 0.156735, "left" : null, "n_samples" : 35, "right" : null, "threshold" : null, "value" : [ 0.085714, 0.914286 ], "w_samples" : 35.0 },
			"node_15" :  { "feature" : 3, "impurity" : 0.092802, "left" : 17, "n_samples" : 41, "right" : 18, "threshold" : 0.5, "value" : [ 0.951219, 0.04878 ], "w_samples" : 41.0 },
			"node_16" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 0.0, 1.0 ], "w_samples" : 1.0 },
			"node_17" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 0.0, 1.0 ], "w_samples" : 1.0 },
			"node_18" :  { "feature" : 80, "impurity" : 0.04875, "left" : 19, "n_samples" : 40, "right" : 20, "threshold" : 0.5, "value" : [ 0.975, 0.025 ], "w_samples" : 40.0 },
			"node_19" :  { "feature" : null, "impurity" : 0.5, "left" : null, "n_samples" : 2, "right" : null, "threshold" : null, "value" : [ 0.5, 0.5 ], "w_samples" : 2.0 },
			"node_20" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 38, "right" : null, "threshold" : null, "value" : [ 1.0, 0.0 ], "w_samples" : 38.0 },
			"node_21" :  { "feature" : 39, "impurity" : 0.022854, "left" : 47, "n_samples" : 173, "right" : 48, "threshold" : 8.5, "value" : [ 0.988439, 0.011561 ], "w_samples" : 173.0 },
			"node_22" :  { "feature" : 67, "impurity" : 0.295093, "left" : 23, "n_samples" : 239, "right" : 24, "threshold" : 7.5, "value" : [ 0.820084, 0.179916 ], "w_samples" : 239.0 },
			"node_23" :  { "feature" : 4, "impurity" : 0.404847, "left" : 25, "n_samples" : 149, "right" : 26, "threshold" : 5.5, "value" : [ 0.718121, 0.281879 ], "w_samples" : 149.0 },
			"node_24" :  { "feature" : 96, "impurity" : 0.021975, "left" : 37, "n_samples" : 90, "right" : 38, "threshold" : 8.5, "value" : [ 0.988889, 0.011111 ], "w_samples" : 90.0 },
			"node_25" :  { "feature" : 16, "impurity" : 0.352409, "left" : 29, "n_samples" : 127, "right" : 30, "threshold" : 8.5, "value" : [ 0.771654, 0.228346 ], "w_samples" : 127.0 },
			"node_26" :  { "feature" : 16, "impurity" : 0.483471, "left" : 27, "n_samples" : 22, "right" : 28, "threshold" : 3.5, "value" : [ 0.409091, 0.590909 ], "w_samples" : 22.0 },
			"node_27" :  { "feature" : null, "impurity" : 0.18, "left" : null, "n_samples" : 10, "right" : null, "threshold" : null, "value" : [ 0.1, 0.9 ], "w_samples" : 10.0 },
			"node_28" :  { "feature" : null, "impurity" : 0.444444, "left" : null, "n_samples" : 12, "right" : null, "threshold" : null, "value" : [ 0.666667, 0.333333 ], "w_samples" : 12.0 },
			"node_29" :  { "feature" : null, "impurity" : 0.305355, "left" : null, "n_samples" : 117, "right" : null, "threshold" : null, "value" : [ 0.811966, 0.188034 ], "w_samples" : 117.0 },
			"node_30" :  { "feature" : null, "impurity" : 0.42, "left" : null, "n_samples" : 10, "right" : null, "threshold" : null, "value" : [ 0.3, 0.7 ], "w_samples" : 10.0 },
			"node_31" :  { "feature" : 75, "impurity" : 0.375, "left" : 33, "n_samples" : 4, "right" : 34, "threshold" : 3.5, "value" : [ 0.75, 0.25 ], "w_samples" : 4.0 },
			"node_32" :  { "feature" : 67, "impurity" : 0.123876, "left" : 35, "n_samples" : 407, "right" : 36, "threshold" : 8.5, "value" : [ 0.066339, 0.933661 ], "w_samples" : 407.0 },
			"node_33" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 0.0, 1.0 ], "w_samples" : 1.0 },
			"node_34" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 3, "right" : null, "threshold" : null, "value" : [ 1.0, 0.0 ], "w_samples" : 3.0 },
			"node_35" :  { "feature" : 77, "impurity" : 0.115836, "left" : 41, "n_samples" : 405, "right" : 42, "threshold" : 9.5, "value" : [ 0.061728, 0.938272 ], "w_samples" : 405.0 },
			"node_36" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 2, "right" : null, "threshold" : null, "value" : [ 1.0, 0.0 ], "w_samples" : 2.0 },
			"node_37" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 87, "right" : null, "threshold" : null, "value" : [ 1.0, 0.0 ], "w_samples" : 87.0 },
			"node_38" :  { "feature" : 42, "impurity" : 0.444444, "left" : 39, "n_samples" : 3, "right" : 40, "threshold" : 5.5, "value" : [ 0.666667, 0.333333 ], "w_samples" : 3.0 },
			"node_39" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 2, "right" : null, "threshold" : null, "value" : [ 1.0, 0.0 ], "w_samples" : 2.0 },
			"node_40" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 0.0, 1.0 ], "w_samples" : 1.0 },
			"node_41" :  { "feature" : 46, "impurity" : 0.111754, "left" : 43, "n_samples" : 404, "right" : 44, "threshold" : 9.5, "value" : [ 0.059406, 0.940594 ], "w_samples" : 404.0 },
			"node_42" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 1.0, 0.0 ], "w_samples" : 1.0 },
			"node_43" :  { "feature" : 61, "impurity" : 0.107629, "left" : 45, "n_samples" : 403, "right" : 46, "threshold" : 6.5, "value" : [ 0.057072, 0.942928 ], "w_samples" : 403.0 },
			"node_44" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 1.0, 0.0 ], "w_samples" : 1.0 },
			"node_45" :  { "feature" : null, "impurity" : 0.232118, "left" : null, "n_samples" : 97, "right" : null, "threshold" : null, "value" : [ 0.134021, 0.865979 ], "w_samples" : 97.0 },
			"node_46" :  { "feature" : null, "impurity" : 0.063224, "left" : null, "n_samples" : 306, "right" : null, "threshold" : null, "value" : [ 0.03268, 0.96732 ], "w_samples" : 306.0 },
			"node_47" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 158, "right" : null, "threshold" : null, "value" : [ 1.0, 0.0 ], "w_samples" : 158.0 },
			"node_48" :  { "feature" : 73, "impurity" : 0.231111, "left" : 49, "n_samples" : 15, "right" : 50, "threshold" : 2.0, "value" : [ 0.866667, 0.133333 ], "w_samples" : 15.0 },
			"node_49" :  { "feature" : 88, "impurity" : 0.444444, "left" : 51, "n_samples" : 3, "right" : 52, "threshold" : 1.5, "value" : [ 0.333333, 0.666667 ], "w_samples" : 3.0 },
			"node_50" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 12, "right" : null, "threshold" : null, "value" : [ 1.0, 0.0 ], "w_samples" : 12.0 },
			"node_51" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 1, "right" : null, "threshold" : null, "value" : [ 1.0, 0.0 ], "w_samples" : 1.0 },
			"node_52" :  { "feature" : null, "impurity" : 0.0, "left" : null, "n_samples" : 2, "right" : null, "threshold" : null, "value" : [ 0.0, 1.0 ], "w_samples" : 2.0 }
		},
		"outputs" : 2
	}
}
BEAUTIFIED_JSON_END
RELOADING_MODEL_FROM_JSON_END ('BinaryClass_100_quantized', 'DecisionTreeClassifier')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0.812  0.188 ]
 [0.812  0.188 ]
 [1.     0.    ]
 ...
 [1.     0.    ]
 [0.812  0.188 ]
 [0.3704 0.6296]]
(1024, 2)
(1024,) float32
MODEL_PERFS {'class_name': 'mllite.DecisionTreeClassifier', 'model_name': 'DecisionTreeClassifier', 'options': '{"max_depth" : 6, "max_leaf_nodes" : 32}', 'dataset': 'BinaryClass_100_quantized', 'size': 1024, 'accuracy': 0.912109375, 'auc': 0.9643478393554688}
WRITING_PERF_CODE 'logs/auto_tests/classification/DecisionTreeClassifier/mllite.DecisionTreeClassifier_BinaryClass_100_quantized_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.DecisionTreeClassifier', 'model_name': 'DecisionTreeClassifier', 'options': '{"max_depth" : 6, "max_leaf_nodes" : 32}', 'dataset': 'BinaryClass_100_quantized', 'training_time_in_sec': 0.051, 'prediction_time_in_sec': 0.0}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 0 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 1 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 2 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 3 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 4 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 5 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 6 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 7 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 8 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 9 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 10 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 11 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 12 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 13 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 14 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 15 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 16 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 17 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 18 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 19 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 20 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 21 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 22 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 23 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 24 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 25 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 26 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 27 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 28 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 29 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 30 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 31 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 32 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 33 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 34 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 35 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 36 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 37 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 38 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 39 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 40 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 41 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 42 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 43 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 44 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 45 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 46 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 47 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 48 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 49 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 50 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 51 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 52 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 53 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 54 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 55 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 56 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 57 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 58 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 59 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 60 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 61 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 62 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 63 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 64 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 65 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 66 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 67 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 68 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 69 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 70 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 71 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 72 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 73 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 74 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 75 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 76 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 77 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 78 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 79 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 80 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 81 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 82 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 83 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 84 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 85 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 86 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 87 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 88 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 89 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 90 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 91 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 92 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 93 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 94 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 95 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 96 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 97 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 98 100
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 99 100
{
   "Contributions" : {
      "X_0" : [ -0.002762, 0.002762 ],
      "X_1" : [ -0.057268, 0.057268 ],
      "X_2" : [ 0.000000, 0.000000 ],
      "X_3" : [ 0.001022, -0.001022 ],
      "X_4" : [ -0.025725, 0.025725 ],
      "X_5" : [ 0.000000, 0.000000 ],
      "X_6" : [ 0.000000, 0.000000 ],
      "X_7" : [ 0.000000, 0.000000 ],
      "X_8" : [ 0.000000, 0.000000 ],
      "X_9" : [ 0.000000, 0.000000 ],
      "X_10" : [ 0.000000, 0.000000 ],
      "X_11" : [ 0.000000, 0.000000 ],
      "X_12" : [ 0.000000, 0.000000 ],
      "X_13" : [ 0.000000, 0.000000 ],
      "X_14" : [ 0.000000, 0.000000 ],
      "X_15" : [ 0.000000, 0.000000 ],
      "X_16" : [ -0.005588, 0.005588 ],
      "X_17" : [ 0.000000, 0.000000 ],
      "X_18" : [ 0.000000, 0.000000 ],
      "X_19" : [ 0.000000, 0.000000 ],
      "X_20" : [ 0.000000, 0.000000 ],
      "X_21" : [ 0.000000, 0.000000 ],
      "X_22" : [ 0.000000, 0.000000 ],
      "X_23" : [ 0.000000, 0.000000 ],
      "X_24" : [ 0.000000, 0.000000 ],
      "X_25" : [ 0.000000, 0.000000 ],
      "X_26" : [ 0.000000, 0.000000 ],
      "X_27" : [ 0.000000, 0.000000 ],
      "X_28" : [ 0.000000, 0.000000 ],
      "X_29" : [ 0.000000, 0.000000 ],
      "X_30" : [ 0.000000, 0.000000 ],
      "X_31" : [ 0.000000, 0.000000 ],
      "X_32" : [ 0.000000, 0.000000 ],
      "X_33" : [ 0.000000, 0.000000 ],
      "X_34" : [ 0.000000, 0.000000 ],
      "X_35" : [ 0.000000, 0.000000 ],
      "X_36" : [ 0.000000, 0.000000 ],
      "X_37" : [ 0.000000, 0.000000 ],
      "X_38" : [ 0.000000, 0.000000 ],
      "X_39" : [ -0.003052, 0.003052 ],
      "X_40" : [ 0.000000, 0.000000 ],
      "X_41" : [ 0.000000, 0.000000 ],
      "X_42" : [ -0.000031, 0.000031 ],
      "X_43" : [ 0.000000, 0.000000 ],
      "X_44" : [ 0.000000, 0.000000 ],
      "X_45" : [ 0.000000, 0.000000 ],
      "X_46" : [ 0.000617, -0.000617 ],
      "X_47" : [ 0.000000, 0.000000 ],
      "X_48" : [ 0.000000, 0.000000 ],
      "X_49" : [ 0.000000, 0.000000 ],
      "X_50" : [ 0.000000, 0.000000 ],
      "X_51" : [ 0.000000, 0.000000 ],
      "X_52" : [ 0.000000, 0.000000 ],
      "X_53" : [ 0.000000, 0.000000 ],
      "X_54" : [ 0.000000, 0.000000 ],
      "X_55" : [ 0.000000, 0.000000 ],
      "X_56" : [ 0.000000, 0.000000 ],
      "X_57" : [ 0.000000, 0.000000 ],
      "X_58" : [ 0.000000, 0.000000 ],
      "X_59" : [ 0.000000, 0.000000 ],
      "X_60" : [ 0.000000, 0.000000 ],
      "X_61" : [ -0.042549, 0.042549 ],
      "X_62" : [ 0.000000, 0.000000 ],
      "X_63" : [ 0.000000, 0.000000 ],
      "X_64" : [ 0.000000, 0.000000 ],
      "X_65" : [ 0.000000, 0.000000 ],
      "X_66" : [ 0.000000, 0.000000 ],
      "X_67" : [ 0.014002, -0.014002 ],
      "X_68" : [ 0.000000, 0.000000 ],
      "X_69" : [ 0.000000, 0.000000 ],
      "X_70" : [ 0.000000, 0.000000 ],
      "X_71" : [ 0.000000, 0.000000 ],
      "X_72" : [ 0.000000, 0.000000 ],
      "X_73" : [ 0.000763, -0.000763 ],
      "X_74" : [ 0.000000, 0.000000 ],
      "X_75" : [ 0.012848, -0.012848 ],
      "X_76" : [ 0.000000, 0.000000 ],
      "X_77" : [ 0.000679, -0.000679 ],
      "X_78" : [ 0.000000, 0.000000 ],
      "X_79" : [ 0.000000, 0.000000 ],
      "X_80" : [ -0.000717, 0.000717 ],
      "X_81" : [ 0.000000, 0.000000 ],
      "X_82" : [ 0.000731, -0.000731 ],
      "X_83" : [ 0.000000, 0.000000 ],
      "X_84" : [ 0.000000, 0.000000 ],
      "X_85" : [ 0.000000, 0.000000 ],
      "X_86" : [ 0.000000, 0.000000 ],
      "X_87" : [ 0.000000, 0.000000 ],
      "X_88" : [ 0.000397, -0.000397 ],
      "X_89" : [ 0.000000, 0.000000 ],
      "X_90" : [ 0.000000, 0.000000 ],
      "X_91" : [ 0.000000, 0.000000 ],
      "X_92" : [ 0.000000, 0.000000 ],
      "X_93" : [ 0.000000, 0.000000 ],
      "X_94" : [ 0.000000, 0.000000 ],
      "X_95" : [ 0.000000, 0.000000 ],
      "X_96" : [ -0.000671, 0.000671 ],
      "X_97" : [ 0.000000, 0.000000 ],
      "X_98" : [ 0.000000, 0.000000 ],
      "X_99" : [ 0.000000, 0.000000 ]   
   },
   "Most_Contributive_Features_By_Class" : {
      "class_0" : [ 1, 61, 4, 67, 75, 16, 39, 0, 3, 73 ],
      "class_1" : [ 1, 61, 4, 67, 75, 16, 39, 0, 3, 73 ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/classification/DecisionTreeClassifier/mllite.DecisionTreeClassifier_BinaryClass_100_quantized_option_1_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/classification/DecisionTreeClassifier/mllite.DecisionTreeClassifier_BinaryClass_100_quantized_option_1_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('BinaryClass_100_quantized', 'DecisionTreeClassifier', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('BinaryClass_100_quantized', 'DecisionTreeClassifier', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('BinaryClass_100_quantized', 'DecisionTreeClassifier', 'duckdb')
S "P_0", 0.000000 AS "P_1", 0 AS "D", 1.000000 AS "DP"
    UNION ALL
    SELECT 52 AS nid,  0.000000 AS "P_0", 1.000000 AS "P_1", 1 AS "D", 1.000000 AS "DP"
  ) AS "Values"),
"DT_Output" AS 
 (SELECT
   t1."index" AS "index",
   t1.node_id AS node_id,
   t2.nid AS nid,
   t2."P_0" AS "P_0", t2."P_1" AS "P_1", 
   t2."D" AS "D", 
   t2."DP" AS "DP"
  FROM
   "DT_node_lookup" AS t1
   LEFT OUTER JOIN
   "DT_node_data" AS t2
   ON t1.node_id = t2.nid
 )
SELECT
   "DT_Output"."index" AS "index",
   CAST(NULL AS FLOAT)  AS "Score_0",
   "DT_Output"."P_0" AS "Proba_0",
   CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN LN( "DT_Output"."P_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
   CAST(NULL AS FLOAT)  AS "Score_1",
   "DT_Output"."P_1" AS "Proba_1",
   CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN LN( "DT_Output"."P_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
   "DT_Output"."D" AS "Decision",
   "DT_Output"."DP" AS "DecisionProba"
FROM "DT_Output"
SQL_OUT_PUT_LAST_LINES_END ('BinaryClass_100_quantized', 'DecisionTreeClassifier', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 1024 entries, 0 to 1023
Data columns (total 100 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     1024 non-null   float32
 1   X_1     1024 non-null   float32
 2   X_2     1024 non-null   float32
 3   X_3     1024 non-null   float32
 4   X_4     1024 non-null   float32
 5   X_5     1024 non-null   float32
 6   X_6     1024 non-null   float32
 7   X_7     1024 non-null   float32
 8   X_8     1024 non-null   float32
 9   X_9     1024 non-null   float32
 10  X_10    1024 non-null   float32
 11  X_11    1024 non-null   float32
 12  X_12    1024 non-null   float32
 13  X_13    1024 non-null   float32
 14  X_14    1024 non-null   float32
 15  X_15    1024 non-null   float32
 16  X_16    1024 non-null   float32
 17  X_17    1024 non-null   float32
 18  X_18    1024 non-null   float32
 19  X_19    1024 non-null   float32
 20  X_20    1024 non-null   float32
 21  X_21    1024 non-null   float32
 22  X_22    1024 non-null   float32
 23  X_23    1024 non-null   float32
 24  X_24    1024 non-null   float32
 25  X_25    1024 non-null   float32
 26  X_26    1024 non-null   float32
 27  X_27    1024 non-null   float32
 28  X_28    1024 non-null   float32
 29  X_29    1024 non-null   float32
 30  X_30    1024 non-null   float32
 31  X_31    1024 non-null   float32
 32  X_32    1024 non-null   float32
 33  X_33    1024 non-null   float32
 34  X_34    1024 non-null   float32
 35  X_35    1024 non-null   float32
 36  X_36    1024 non-null   float32
 37  X_37    1024 non-null   float32
 38  X_38    1024 non-null   float32
 39  X_39    1024 non-null   float32
 40  X_40    1024 non-null   float32
 41  X_41    1024 non-null   float32
 42  X_42    1024 non-null   float32
 43  X_43    1024 non-null   float32
 44  X_44    1024 non-null   float32
 45  X_45    1024 non-null   float32
 46  X_46    1024 non-null   float32
 47  X_47    1024 non-null   float32
 48  X_48    1024 non-null   float32
 49  X_49    1024 non-null   float32
 50  X_50    1024 non-null   float32
 51  X_51    1024 non-null   float32
 52  X_52    1024 non-null   float32
 53  X_53    1024 non-null   float32
 54  X_54    1024 non-null   float32
 55  X_55    1024 non-null   float32
 56  X_56    1024 non-null   float32
 57  X_57    1024 non-null   float32
 58  X_58    1024 non-null   float32
 59  X_59    1024 non-null   float32
 60  X_60    1024 non-null   float32
 61  X_61    1024 non-null   float32
 62  X_62    1024 non-null   float32
 63  X_63    1024 non-null   float32
 64  X_64    1024 non-null   float32
 65  X_65    1024 non-null   float32
 66  X_66    1024 non-null   float32
 67  X_67    1024 non-null   float32
 68  X_68    1024 non-null   float32
 69  X_69    1024 non-null   float32
 70  X_70    1024 non-null   float32
 71  X_71    1024 non-null   float32
 72  X_72    1024 non-null   float32
 73  X_73    1024 non-null   float32
 74  X_74    1024 non-null   float32
 75  X_75    1024 non-null   float32
 76  X_76    1024 non-null   float32
 77  X_77    1024 non-null   float32
 78  X_78    1024 non-null   float32
 79  X_79    1024 non-null   float32
 80  X_80    1024 non-null   float32
 81  X_81    1024 non-null   float32
 82  X_82    1024 non-null   float32
 83  X_83    1024 non-null   float32
 84  X_84    1024 non-null   float32
 85  X_85    1024 non-null   float32
 86  X_86    1024 non-null   float32
 87  X_87    1024 non-null   float32
 88  X_88    1024 non-null   float32
 89  X_89    1024 non-null   float32
 90  X_90    1024 non-null   float32
 91  X_91    1024 non-null   float32
 92  X_92    1024 non-null   float32
 93  X_93    1024 non-null   float32
 94  X_94    1024 non-null   float32
 95  X_95    1024 non-null   float32
 96  X_96    1024 non-null   float32
 97  X_97    1024 non-null   float32
 98  X_98    1024 non-null   float32
 99  X_99    1024 non-null   float32
dtypes: float32(100)
memory usage: 408.0 KB
       X_0  X_1  X_2  X_3  X_4  X_5  ...  X_94  X_95  X_96  X_97  X_98  X_99
index                                ...                                    
0      5.0  3.0  0.0  8.0  4.0  4.0  ...   8.0   6.0   6.0   5.0   5.0   4.0
1      7.0  3.0  7.0  3.0  5.0  7.0  ...   3.0   9.0   1.0   2.0   5.0   1.0
2      8.0  5.0  5.0  8.0  7.0  8.0  ...   3.0   2.0   8.0   7.0   1.0   0.0
3      0.0  9.0  5.0  2.0  9.0  3.0  ...   1.0   0.0   7.0   5.0   0.0   2.0
4      6.0  3.0  9.0  5.0  4.0  1.0  ...   7.0   9.0   9.0   5.0   1.0   7.0
...    ...  ...  ...  ...  ...  ...  ...   ...   ...   ...   ...   ...   ...
1019   5.0  2.0  5.0  3.0  3.0  1.0  ...   7.0   6.0   0.0   6.0   5.0   6.0
1020   4.0  5.0  8.0  6.0  6.0  7.0  ...   8.0   1.0   3.0   5.0   8.0   4.0
1021   3.0  1.0  8.0  1.0  2.0  5.0  ...   8.0   1.0   4.0   5.0   3.0   9.0
1022   7.0  1.0  0.0  5.0  2.0  2.0  ...   2.0   2.0   4.0   6.0   0.0   5.0
1023   6.0  4.0  5.0  7.0  4.0  1.0  ...   8.0   4.0   3.0   6.0   0.0   6.0

[1024 rows x 100 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 1024 entries, 0 to 1023
Data columns (total 9 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          1024 non-null   int64  
 1   Score_0        0 non-null      object 
 2   Proba_0        1024 non-null   float64
 3   LogProba_0     1024 non-null   float64
 4   Score_1        0 non-null      object 
 5   Proba_1        1024 non-null   float64
 6   LogProba_1     1024 non-null   float64
 7   Decision       1024 non-null   int64  
 8   DecisionProba  1024 non-null   float64
dtypes: float64(5), int64(2), object(2)
memory usage: 72.1+ KB
      index Score_0   Proba_0  ...     LogProba_1 Decision  DecisionProba
0         0    None  0.811966  ...  -1.671132e+00        0       0.811966
1         1    None  0.811966  ...  -1.671132e+00        0       0.811966
2         2    None  1.000000  ... -1.797693e+308        0       1.000000
3         3    None  0.032680  ...  -3.322592e-02        1       0.967320
4         4    None  0.811966  ...  -1.671132e+00        0       0.811966
...     ...     ...       ...  ...            ...      ...            ...
1019   1019    None  0.811966  ...  -1.671132e+00        0       0.811966
1020   1020    None  0.916667  ...  -2.484911e+00        0       0.916667
1021   1021    None  1.000000  ... -1.797693e+308        0       1.000000
1022   1022    None  0.811966  ...  -1.671132e+00        0       0.811966
1023   1023    None  0.370370  ...  -4.626229e-01        1       0.629630

[1024 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
      index Score_0  SQL_Proba_0  ...  Py_Proba_0 Py_Proba_1  Py_Decision
1008   1008    None     0.032680  ...    0.032680   0.967320            1
1009   1009    None     0.134021  ...    0.134021   0.865979            1
1010   1010    None     0.300000  ...    0.300000   0.700000            1
1011   1011    None     0.085714  ...    0.085714   0.914286            1
1012   1012    None     1.000000  ...    1.000000   0.000000            0
1013   1013    None     0.811966  ...    0.811966   0.188034            0
1014   1014    None     1.000000  ...    1.000000   0.000000            0
1015   1015    None     0.032680  ...    0.032680   0.967320            1
1016   1016    None     0.370370  ...    0.370370   0.629630            1
1017   1017    None     1.000000  ...    1.000000   0.000000            0
1018   1018    None     0.032680  ...    0.032680   0.967320            1
1019   1019    None     0.811966  ...    0.811966   0.188034            0
1020   1020    None     0.916667  ...    0.916667   0.083333            0
1021   1021    None     1.000000  ...    1.000000   0.000000            0
1022   1022    None     0.811966  ...    0.811966   0.188034            0
1023   1023    None     0.370370  ...    0.370370   0.629630            1

[16 rows x 12 columns]
MLLITE_CLASS_SQL_ERROR ('BinaryClass_100_quantized', 'DecisionTreeClassifier', 'duckdb') ('Py_Proba_0', 'SQL_Proba_0') 1.7630987148488256e-07
      Py_Proba_0  SQL_Proba_0   SQL_Error_0
1008    0.032680     0.032680 -2.596605e-07
1009    0.134021     0.134021 -3.883562e-07
1010    0.300000     0.300000  1.192093e-08
1011    0.085714     0.085714  2.880559e-07
1012    1.000000     1.000000  0.000000e+00
1013    0.811966     0.811966 -1.768265e-07
1014    1.000000     1.000000  0.000000e+00
1015    0.032680     0.032680 -2.596605e-07
1016    0.370370     0.370370  3.582287e-07
1017    1.000000     1.000000  0.000000e+00
1018    0.032680     0.032680 -2.596605e-07
1019    0.811966     0.811966 -1.768265e-07
1020    0.916667     0.916667 -3.134651e-07
1021    1.000000     1.000000  0.000000e+00
1022    0.811966     0.811966 -1.768265e-07
1023    0.370370     0.370370  3.582287e-07
MLLITE_CLASS_SQL_ERROR ('BinaryClass_100_quantized', 'DecisionTreeClassifier', 'duckdb') ('Py_Proba_1', 'SQL_Proba_1') 1.8012247328730497e-07
      Py_Proba_1  SQL_Proba_1   SQL_Error_1
1008    0.967320     0.967320  2.633858e-07
1009    0.865979     0.865979  3.734550e-07
1010    0.700000     0.700000 -1.192093e-08
1011    0.914286     0.914286 -2.806053e-07
1012    0.000000     0.000000  0.000000e+00
1013    0.188034     0.188034  1.917276e-07
1014    0.000000     0.000000  0.000000e+00
1015    0.967320     0.967320  2.633858e-07
1016    0.629630     0.629630 -3.880310e-07
1017    0.000000     0.000000  0.000000e+00
1018    0.967320     0.967320  2.633858e-07
1019    0.188034     0.188034  1.917276e-07
1020    0.083333     0.083333  3.358169e-07
1021    0.000000     0.000000  0.000000e+00
1022    0.188034     0.188034  1.917276e-07
1023    0.629630     0.629630 -3.880310e-07
MLLITE_CLASS_SQL_EXECUTION_STATUS ('BinaryClass_100_quantized', 'DecisionTreeClassifier', 'duckdb', 'Success')
      Py_Decision  SQL_Decision
1008            1             1
1009            1             1
1010            1             1
1011            1             1
1012            0             0
1013            0             0
1014            0             0
1015            1             1
1016            1             1
1017            0             0
1018            1             1
1019            0             0
1020            0             0
1021            0             0
1022            0             0
1023            1             1
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/DecisionTreeClassifier/mllite.DecisionTreeClassifier_BinaryClass_100_quantized_option_1_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('BinaryClass_100_quantized', 'DecisionTreeClassifier', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('BinaryClass_100_quantized', 'DecisionTreeClassifier', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('BinaryClass_100_quantized', 'DecisionTreeClassifier', 'sqlite')
S "P_0", 0.000000 AS "P_1", 0 AS "D", 1.000000 AS "DP"
    UNION ALL
    SELECT 52 AS nid,  0.000000 AS "P_0", 1.000000 AS "P_1", 1 AS "D", 1.000000 AS "DP"
  ) AS "Values"),
"DT_Output" AS 
 (SELECT
   t1."index" AS "index",
   t1.node_id AS node_id,
   t2.nid AS nid,
   t2."P_0" AS "P_0", t2."P_1" AS "P_1", 
   t2."D" AS "D", 
   t2."DP" AS "DP"
  FROM
   "DT_node_lookup" AS t1
   LEFT OUTER JOIN
   "DT_node_data" AS t2
   ON t1.node_id = t2.nid
 )
SELECT
   "DT_Output"."index" AS "index",
   CAST(NULL AS FLOAT)  AS "Score_0",
   "DT_Output"."P_0" AS "Proba_0",
   CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN LN( "DT_Output"."P_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
   CAST(NULL AS FLOAT)  AS "Score_1",
   "DT_Output"."P_1" AS "Proba_1",
   CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN LN( "DT_Output"."P_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
   "DT_Output"."D" AS "Decision",
   "DT_Output"."DP" AS "DecisionProba"
FROM "DT_Output"
SQL_OUT_PUT_LAST_LINES_END ('BinaryClass_100_quantized', 'DecisionTreeClassifier', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 1024 entries, 0 to 1023
Data columns (total 100 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     1024 non-null   float32
 1   X_1     1024 non-null   float32
 2   X_2     1024 non-null   float32
 3   X_3     1024 non-null   float32
 4   X_4     1024 non-null   float32
 5   X_5     1024 non-null   float32
 6   X_6     1024 non-null   float32
 7   X_7     1024 non-null   float32
 8   X_8     1024 non-null   float32
 9   X_9     1024 non-null   float32
 10  X_10    1024 non-null   float32
 11  X_11    1024 non-null   float32
 12  X_12    1024 non-null   float32
 13  X_13    1024 non-null   float32
 14  X_14    1024 non-null   float32
 15  X_15    1024 non-null   float32
 16  X_16    1024 non-null   float32
 17  X_17    1024 non-null   float32
 18  X_18    1024 non-null   float32
 19  X_19    1024 non-null   float32
 20  X_20    1024 non-null   float32
 21  X_21    1024 non-null   float32
 22  X_22    1024 non-null   float32
 23  X_23    1024 non-null   float32
 24  X_24    1024 non-null   float32
 25  X_25    1024 non-null   float32
 26  X_26    1024 non-null   float32
 27  X_27    1024 non-null   float32
 28  X_28    1024 non-null   float32
 29  X_29    1024 non-null   float32
 30  X_30    1024 non-null   float32
 31  X_31    1024 non-null   float32
 32  X_32    1024 non-null   float32
 33  X_33    1024 non-null   float32
 34  X_34    1024 non-null   float32
 35  X_35    1024 non-null   float32
 36  X_36    1024 non-null   float32
 37  X_37    1024 non-null   float32
 38  X_38    1024 non-null   float32
 39  X_39    1024 non-null   float32
 40  X_40    1024 non-null   float32
 41  X_41    1024 non-null   float32
 42  X_42    1024 non-null   float32
 43  X_43    1024 non-null   float32
 44  X_44    1024 non-null   float32
 45  X_45    1024 non-null   float32
 46  X_46    1024 non-null   float32
 47  X_47    1024 non-null   float32
 48  X_48    1024 non-null   float32
 49  X_49    1024 non-null   float32
 50  X_50    1024 non-null   float32
 51  X_51    1024 non-null   float32
 52  X_52    1024 non-null   float32
 53  X_53    1024 non-null   float32
 54  X_54    1024 non-null   float32
 55  X_55    1024 non-null   float32
 56  X_56    1024 non-null   float32
 57  X_57    1024 non-null   float32
 58  X_58    1024 non-null   float32
 59  X_59    1024 non-null   float32
 60  X_60    1024 non-null   float32
 61  X_61    1024 non-null   float32
 62  X_62    1024 non-null   float32
 63  X_63    1024 non-null   float32
 64  X_64    1024 non-null   float32
 65  X_65    1024 non-null   float32
 66  X_66    1024 non-null   float32
 67  X_67    1024 non-null   float32
 68  X_68    1024 non-null   float32
 69  X_69    1024 non-null   float32
 70  X_70    1024 non-null   float32
 71  X_71    1024 non-null   float32
 72  X_72    1024 non-null   float32
 73  X_73    1024 non-null   float32
 74  X_74    1024 non-null   float32
 75  X_75    1024 non-null   float32
 76  X_76    1024 non-null   float32
 77  X_77    1024 non-null   float32
 78  X_78    1024 non-null   float32
 79  X_79    1024 non-null   float32
 80  X_80    1024 non-null   float32
 81  X_81    1024 non-null   float32
 82  X_82    1024 non-null   float32
 83  X_83    1024 non-null   float32
 84  X_84    1024 non-null   float32
 85  X_85    1024 non-null   float32
 86  X_86    1024 non-null   float32
 87  X_87    1024 non-null   float32
 88  X_88    1024 non-null   float32
 89  X_89    1024 non-null   float32
 90  X_90    1024 non-null   float32
 91  X_91    1024 non-null   float32
 92  X_92    1024 non-null   float32
 93  X_93    1024 non-null   float32
 94  X_94    1024 non-null   float32
 95  X_95    1024 non-null   float32
 96  X_96    1024 non-null   float32
 97  X_97    1024 non-null   float32
 98  X_98    1024 non-null   float32
 99  X_99    1024 non-null   float32
dtypes: float32(100)
memory usage: 408.0 KB
       X_0  X_1  X_2  X_3  X_4  X_5  ...  X_94  X_95  X_96  X_97  X_98  X_99
index                                ...                                    
0      5.0  3.0  0.0  8.0  4.0  4.0  ...   8.0   6.0   6.0   5.0   5.0   4.0
1      7.0  3.0  7.0  3.0  5.0  7.0  ...   3.0   9.0   1.0   2.0   5.0   1.0
2      8.0  5.0  5.0  8.0  7.0  8.0  ...   3.0   2.0   8.0   7.0   1.0   0.0
3      0.0  9.0  5.0  2.0  9.0  3.0  ...   1.0   0.0   7.0   5.0   0.0   2.0
4      6.0  3.0  9.0  5.0  4.0  1.0  ...   7.0   9.0   9.0   5.0   1.0   7.0
...    ...  ...  ...  ...  ...  ...  ...   ...   ...   ...   ...   ...   ...
1019   5.0  2.0  5.0  3.0  3.0  1.0  ...   7.0   6.0   0.0   6.0   5.0   6.0
1020   4.0  5.0  8.0  6.0  6.0  7.0  ...   8.0   1.0   3.0   5.0   8.0   4.0
1021   3.0  1.0  8.0  1.0  2.0  5.0  ...   8.0   1.0   4.0   5.0   3.0   9.0
1022   7.0  1.0  0.0  5.0  2.0  2.0  ...   2.0   2.0   4.0   6.0   0.0   5.0
1023   6.0  4.0  5.0  7.0  4.0  1.0  ...   8.0   4.0   3.0   6.0   0.0   6.0

[1024 rows x 100 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 1024 entries, 0 to 1023
Data columns (total 9 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          1024 non-null   int64  
 1   Score_0        0 non-null      object 
 2   Proba_0        1024 non-null   float64
 3   LogProba_0     1024 non-null   float64
 4   Score_1        0 non-null      object 
 5   Proba_1        1024 non-null   float64
 6   LogProba_1     1024 non-null   float64
 7   Decision       1024 non-null   int64  
 8   DecisionProba  1024 non-null   float64
dtypes: float64(5), int64(2), object(2)
memory usage: 72.1+ KB
      index Score_0   Proba_0  ...     LogProba_1 Decision  DecisionProba
0         0    None  0.811966  ...  -1.671132e+00        0       0.811966
1         1    None  0.811966  ...  -1.671132e+00        0       0.811966
2         2    None  1.000000  ... -1.797693e+308        0       1.000000
3         3    None  0.032680  ...  -3.322592e-02        1       0.967320
4         4    None  0.811966  ...  -1.671132e+00        0       0.811966
...     ...     ...       ...  ...            ...      ...            ...
1019   1019    None  0.811966  ...  -1.671132e+00        0       0.811966
1020   1020    None  0.916667  ...  -2.484911e+00        0       0.916667
1021   1021    None  1.000000  ... -1.797693e+308        0       1.000000
1022   1022    None  0.811966  ...  -1.671132e+00        0       0.811966
1023   1023    None  0.370370  ...  -4.626229e-01        1       0.629630

[1024 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
      index Score_0  SQL_Proba_0  ...  Py_Proba_0 Py_Proba_1  Py_Decision
1008   1008    None     0.032680  ...    0.032680   0.967320            1
1009   1009    None     0.134021  ...    0.134021   0.865979            1
1010   1010    None     0.300000  ...    0.300000   0.700000            1
1011   1011    None     0.085714  ...    0.085714   0.914286            1
1012   1012    None     1.000000  ...    1.000000   0.000000            0
1013   1013    None     0.811966  ...    0.811966   0.188034            0
1014   1014    None     1.000000  ...    1.000000   0.000000            0
1015   1015    None     0.032680  ...    0.032680   0.967320            1
1016   1016    None     0.370370  ...    0.370370   0.629630            1
1017   1017    None     1.000000  ...    1.000000   0.000000            0
1018   1018    None     0.032680  ...    0.032680   0.967320            1
1019   1019    None     0.811966  ...    0.811966   0.188034            0
1020   1020    None     0.916667  ...    0.916667   0.083333            0
1021   1021    None     1.000000  ...    1.000000   0.000000            0
1022   1022    None     0.811966  ...    0.811966   0.188034            0
1023   1023    None     0.370370  ...    0.370370   0.629630            1

[16 rows x 12 columns]
MLLITE_CLASS_SQL_ERROR ('BinaryClass_100_quantized', 'DecisionTreeClassifier', 'sqlite') ('Py_Proba_0', 'SQL_Proba_0') 1.7630987148488256e-07
      Py_Proba_0  SQL_Proba_0   SQL_Error_0
1008    0.032680     0.032680 -2.596605e-07
1009    0.134021     0.134021 -3.883562e-07
1010    0.300000     0.300000  1.192093e-08
1011    0.085714     0.085714  2.880559e-07
1012    1.000000     1.000000  0.000000e+00
1013    0.811966     0.811966 -1.768265e-07
1014    1.000000     1.000000  0.000000e+00
1015    0.032680     0.032680 -2.596605e-07
1016    0.370370     0.370370  3.582287e-07
1017    1.000000     1.000000  0.000000e+00
1018    0.032680     0.032680 -2.596605e-07
1019    0.811966     0.811966 -1.768265e-07
1020    0.916667     0.916667 -3.134651e-07
1021    1.000000     1.000000  0.000000e+00
1022    0.811966     0.811966 -1.768265e-07
1023    0.370370     0.370370  3.582287e-07
MLLITE_CLASS_SQL_ERROR ('BinaryClass_100_quantized', 'DecisionTreeClassifier', 'sqlite') ('Py_Proba_1', 'SQL_Proba_1') 1.8012247328730497e-07
      Py_Proba_1  SQL_Proba_1   SQL_Error_1
1008    0.967320     0.967320  2.633858e-07
1009    0.865979     0.865979  3.734550e-07
1010    0.700000     0.700000 -1.192093e-08
1011    0.914286     0.914286 -2.806053e-07
1012    0.000000     0.000000  0.000000e+00
1013    0.188034     0.188034  1.917276e-07
1014    0.000000     0.000000  0.000000e+00
1015    0.967320     0.967320  2.633858e-07
1016    0.629630     0.629630 -3.880310e-07
1017    0.000000     0.000000  0.000000e+00
1018    0.967320     0.967320  2.633858e-07
1019    0.188034     0.188034  1.917276e-07
1020    0.083333     0.083333  3.358169e-07
1021    0.000000     0.000000  0.000000e+00
1022    0.188034     0.188034  1.917276e-07
1023    0.629630     0.629630 -3.880310e-07
MLLITE_CLASS_SQL_EXECUTION_STATUS ('BinaryClass_100_quantized', 'DecisionTreeClassifier', 'sqlite', 'Success')
      Py_Decision  SQL_Decision
1008            1             1
1009            1             1
1010            1             1
1011            1             1
1012            0             0
1013            0             0
1014            0             0
1015            1             1
1016            1             1
1017            0             0
1018            1             1
1019            0             0
1020            0             0
1021            0             0
1022            0             0
1023            1             1
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
