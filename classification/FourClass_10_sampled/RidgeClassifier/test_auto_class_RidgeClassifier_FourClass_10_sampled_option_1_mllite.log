          X_0       X_1       X_2  ...       X_8       X_9  target
0   -1.050659  0.920640 -0.455125  ... -0.010797 -1.586949       2
1    1.869880 -2.312190 -1.153852  ... -1.648043  2.109906       3
2   -0.124049  0.768644 -1.040184  ...  1.247335 -1.413962       1
3    0.928858 -1.177375  0.542731  ...  0.485529  1.106564       0
4   -1.598324  1.482463  1.664691  ...  1.816533  0.637000       3
..        ...       ...       ...  ...       ...       ...     ...
123 -0.598158  0.629641  1.754569  ... -0.570026  1.113417       0
124 -1.067863  0.728836  1.338623  ... -0.770565  0.644973       2
125 -1.123043  1.342440  0.659906  ... -1.312702  0.946601       2
126  0.795537 -0.282125 -0.219283  ... -1.614865  0.927883       2
127  1.126231 -0.791891 -0.032095  ...  0.796760  0.714492       1

[128 rows x 11 columns]
MLLITE_MODEL_SET_OPTIONS RidgeClassifier {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { "alpha" : 0.0000001,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
('OPERATION_START', 'TRAINING')
[[-1.0506592   0.92064023 -0.4551253  -0.05012989 -0.19162714  0.5843286
   0.9430313   1.0213077  -0.01079692 -1.5869486 ]
 [ 1.86988    -2.3121896  -1.1538523   1.292078   -1.061729    2.0429258
   1.284271   -1.3353989  -1.6480426   2.1099062 ]
 [-0.1240493   0.7686444  -1.040184   -1.0419097  -0.5159428   1.4802165
  -1.7200696   0.34235197  1.2473352  -1.4139622 ]
 [ 0.9288579  -1.1773754   0.5427306   1.248167   -0.7323589   0.6922126
   0.362028   -0.05373104  0.48552942  1.1065644 ]
 [-1.5983242   1.4824632   1.6646907  -0.7911312  -0.3269162  -0.07355959
  -3.3526254  -1.3474813   1.8165325   0.6370003 ]] [2 3 1 0 3]
MLLITE_FIT_USING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 6 6
('OPERATION_END_ELAPSED', 0.013, 'TRAINING')
{ "alpha" : 0.0000001,   }
{ "alpha" : 0.0000001,   }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_il8"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 128, "dataset_features" : 10 },
	"classes" : [ 0, 1, 2, 3 ],
	"equations" : {
		"class_0" : {
			"intercept" : -0.516672,
			"coeffs" : [ -0.062459, -0.022066, 0.033807, 0.129162, -0.050296, -0.011845, -0.013472, -0.107670, 0.034990, -0.036521 ]
		},
		"class_1" : {
			"intercept" : -0.438023,
			"coeffs" : [ 0.095179, 0.037015, -0.012612, -0.048854, -0.021067, -0.067181, -0.009068, 0.266793, 0.191589, 0.027138 ]
		},
		"class_2" : {
			"intercept" : -0.495196,
			"coeffs" : [ 0.048662, 0.018958, -0.052142, -0.176423, -0.036897, 0.005759, 0.042509, 0.003855, -0.216087, -0.075775 ]
		},
		"class_3" : {
			"intercept" : -0.550525,
			"coeffs" : [ -0.074677, -0.023817, 0.030947, 0.099062, 0.108260, 0.073266, -0.018631, -0.165733, -0.011875, 0.085158 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_10_sampled_option_1.json'

MLLITE_MODEL_SET_OPTIONS RidgeClassifier {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { "alpha" : 0.0000001,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
MLLITE_RELOADING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_il8"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 128, "dataset_features" : 10 },
	"classes" : [ 0, 1, 2, 3 ],
	"equations" : {
		"class_0" : {
			"intercept" : -0.516672,
			"coeffs" : [ -0.062459, -0.022066, 0.033807, 0.129162, -0.050296, -0.011845, -0.013472, -0.107670, 0.034990, -0.036521 ]
		},
		"class_1" : {
			"intercept" : -0.438023,
			"coeffs" : [ 0.095179, 0.037015, -0.012612, -0.048854, -0.021067, -0.067181, -0.009068, 0.266793, 0.191589, 0.027138 ]
		},
		"class_2" : {
			"intercept" : -0.495196,
			"coeffs" : [ 0.048662, 0.018958, -0.052142, -0.176423, -0.036897, 0.005759, 0.042509, 0.003855, -0.216087, -0.075775 ]
		},
		"class_3" : {
			"intercept" : -0.550525,
			"coeffs" : [ -0.074677, -0.023817, 0.030947, 0.099062, 0.108260, 0.073266, -0.018631, -0.165733, -0.011875, 0.085158 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1, 2, 3 ],
	"dataset" : 	{
		"dataset_features" : 10,
		"dataset_rows" : 128
	},
	"equations" : 	{
		"class_0" : 	{
			"coeffs" : [ -0.062459, -0.022066, 0.033807, 0.129162, -0.050296, -0.011845, -0.013472, -0.10767, 0.03499, -0.036521 ],
			"intercept" : -0.516672
		},
		"class_1" : 	{
			"coeffs" : [ 0.095179, 0.037015, -0.012612, -0.048854, -0.021067, -0.067181, -0.009068, 0.266793, 0.191589, 0.027138 ],
			"intercept" : -0.438023
		},
		"class_2" : 	{
			"coeffs" : [ 0.048662, 0.018958, -0.052142, -0.176423, -0.036897, 0.005759, 0.042509, 0.003855, -0.216087, -0.075775 ],
			"intercept" : -0.495196
		},
		"class_3" : 	{
			"coeffs" : [ -0.074677, -0.023817, 0.030947, 0.099062, 0.10826, 0.073266, -0.018631, -0.165733, -0.011875, 0.085158 ],
			"intercept" : -0.550525
		}
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_il8", "version" : "2024-W12" },
	"options" :  { "alpha" : 0.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0.2317 0.2956 0.2935 0.1792]
 [0.2502 0.124  0.2805 0.3453]
 [0.2184 0.3484 0.2538 0.1794]
 [0.2811 0.2746 0.1705 0.2738]
 [0.3055 0.2447 0.1344 0.3154]
 [0.2021 0.1194 0.4381 0.2405]
 [0.1869 0.3966 0.2219 0.1946]
 [0.168  0.3693 0.2615 0.2012]
 [0.2042 0.2388 0.3346 0.2224]
 [0.2552 0.2008 0.2659 0.2781]
 [0.2633 0.3299 0.1395 0.2672]
 [0.2718 0.2788 0.1312 0.3181]
 [0.2498 0.1396 0.2609 0.3498]
 [0.1479 0.4845 0.2639 0.1037]
 [0.1414 0.2459 0.4122 0.2004]
 [0.209  0.3189 0.253  0.2191]
 [0.141  0.2127 0.4979 0.1485]
 [0.2442 0.4164 0.1449 0.1945]
 [0.2559 0.0558 0.4185 0.2699]
 [0.2643 0.2062 0.2012 0.3283]
 [0.1871 0.1658 0.4536 0.1935]
 [0.216  0.2062 0.3135 0.2643]
 [0.3741 0.2032 0.1071 0.3156]
 [0.225  0.1818 0.3568 0.2365]
 [0.2908 0.1765 0.2038 0.3289]
 [0.2329 0.2209 0.3195 0.2266]
 [0.3588 0.2132 0.1258 0.3022]
 [0.1054 0.5381 0.2518 0.1047]
 [0.2431 0.1921 0.3785 0.1863]
 [0.319  0.2781 0.198  0.2049]
 [0.3078 0.0488 0.2111 0.4322]
 [0.1268 0.4896 0.2042 0.1793]
 [0.2517 0.0999 0.3205 0.3278]
 [0.1724 0.5009 0.2214 0.1052]
 [0.3055 0.2126 0.1907 0.2912]
 [0.1568 0.2487 0.4121 0.1824]
 [0.1381 0.3319 0.4058 0.1242]
 [0.2368 0.2587 0.2598 0.2447]
 [0.1991 0.146  0.3989 0.256 ]
 [0.3222 0.1791 0.0949 0.4038]
 [0.2309 0.2583 0.2336 0.2772]
 [0.1638 0.4629 0.1982 0.1751]
 [0.1616 0.512  0.2365 0.0899]
 [0.2483 0.3833 0.1358 0.2326]
 [0.314  0.305  0.0807 0.3003]
 [0.3032 0.2385 0.165  0.2933]
 [0.1577 0.3174 0.3345 0.1904]
 [0.2739 0.2375 0.1942 0.2944]
 [0.3252 0.2566 0.1108 0.3074]
 [0.1649 0.4322 0.1907 0.2121]
 [0.3732 0.2048 0.0778 0.3442]
 [0.2236 0.4453 0.1422 0.1888]
 [0.2232 0.035  0.4329 0.3088]
 [0.22   0.341  0.1576 0.2813]
 [0.1536 0.4229 0.2856 0.1379]
 [0.0588 0.0891 0.769  0.0832]
 [0.2143 0.1211 0.2994 0.3652]
 [0.1995 0.3109 0.2249 0.2647]
 [0.2425 0.1205 0.2971 0.3399]
 [0.221  0.418  0.219  0.142 ]
 [0.1622 0.2974 0.3105 0.2299]
 [0.2854 0.2492 0.2364 0.229 ]
 [0.181  0.1431 0.4759 0.2   ]
 [0.2629 0.2143 0.1891 0.3337]
 [0.3795 0.1999 0.0995 0.3212]
 [0.3713 0.263  0.1877 0.1781]
 [0.1998 0.152  0.4677 0.1805]
 [0.1637 0.3266 0.3175 0.1922]
 [0.3104 0.1594 0.1641 0.3661]
 [0.157  0.5327 0.1869 0.1234]
 [0.2925 0.1291 0.3065 0.2718]
 [0.2067 0.2014 0.3761 0.2158]
 [0.3414 0.1815 0.2285 0.2486]
 [0.1626 0.1253 0.4499 0.2622]
 [0.3178 0.2288 0.1499 0.3036]
 [0.2362 0.3817 0.1121 0.2701]
 [0.2136 0.3322 0.2455 0.2087]
 [0.3193 0.2028 0.0917 0.3861]
 [0.2167 0.2353 0.332  0.2159]
 [0.2001 0.3233 0.2667 0.2099]
 [0.3016 0.1883 0.244  0.2661]
 [0.2662 0.2876 0.2577 0.1885]
 [0.1874 0.3922 0.2545 0.166 ]
 [0.3801 0.2025 0.1235 0.2939]
 [0.3024 0.1506 0.2741 0.2728]
 [0.2173 0.2649 0.2786 0.2392]
 [0.1547 0.4104 0.271  0.1639]
 [0.2424 0.094  0.2791 0.3845]
 [0.1707 0.4313 0.2604 0.1376]
 [0.2603 0.1535 0.2393 0.347 ]
 [0.2281 0.3106 0.2641 0.1972]
 [0.2879 0.2793 0.2051 0.2278]
 [0.2257 0.2484 0.2353 0.2905]
 [0.221  0.2893 0.3197 0.17  ]
 [0.0589 0.319  0.5645 0.0576]
 [0.1162 0.1831 0.5904 0.1103]
 [0.251  0.203  0.215  0.3309]
 [0.2208 0.3625 0.2394 0.1773]
 [0.2415 0.3543 0.1109 0.2933]
 [0.2834 0.2169 0.3008 0.1989]
 [0.2563 0.1815 0.1892 0.3729]
 [0.1138 0.4067 0.3554 0.1241]
 [0.1892 0.1316 0.4593 0.22  ]
 [0.2437 0.0718 0.3197 0.3648]
 [0.2784 0.249  0.1599 0.3127]
 [0.1932 0.1828 0.3673 0.2566]
 [0.1524 0.428  0.294  0.1256]
 [0.2536 0.1242 0.2761 0.3461]
 [0.131  0.379  0.3465 0.1435]
 [0.0844 0.6751 0.1578 0.0828]
 [0.2675 0.1908 0.2687 0.2731]
 [0.1893 0.1593 0.4396 0.2118]
 [0.2929 0.0977 0.3424 0.267 ]
 [0.2389 0.2283 0.2574 0.2754]
 [0.1231 0.5773 0.1605 0.139 ]
 [0.187  0.1391 0.4312 0.2427]
 [0.2595 0.1762 0.2565 0.3078]
 [0.2923 0.3148 0.1264 0.2665]
 [0.2847 0.1516 0.3144 0.2493]
 [0.2769 0.1493 0.285  0.2888]
 [0.3869 0.2049 0.1381 0.2702]
 [0.1988 0.3359 0.3187 0.1466]
 [0.2887 0.1136 0.3263 0.2714]
 [0.2368 0.2592 0.2628 0.2413]
 [0.2189 0.3075 0.2587 0.2149]
 [0.2089 0.13   0.3799 0.2812]
 [0.1864 0.1663 0.4165 0.2308]
 [0.2199 0.3087 0.1768 0.2947]]
(128, 4)
(128, 4) float32
MODEL_PERFS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': '{"alpha" : 0.0000001}', 'dataset': 'FourClass_10_sampled', 'size': 128, 'accuracy': 0.6015625, 'auc': 0.818897995124445}
WRITING_PERF_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_10_sampled_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': '{"alpha" : 0.0000001}', 'dataset': 'FourClass_10_sampled', 'training_time_in_sec': 0.013, 'prediction_time_in_sec': 0.0}
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_10_sampled_option_1.sql'



SQL_OUT_PUT_FIRST_LINES_START
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT model_input."index" AS "index",
   -0.516672 + -0.062459 * X_0 + -0.022066 * X_1 + 0.033807 * X_2 + 0.129162 * X_3 + -0.050296 * X_4 + -0.011845 * X_5 + -0.013472 * X_6 + -0.107670 * X_7 + 0.034990 * X_8 + -0.036521 * X_9 AS "Score_0", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "LogProba_0",
   -0.438023 + 0.095179 * X_0 + 0.037015 * X_1 + -0.012612 * X_2 + -0.048854 * X_3 + -0.021067 * X_4 + -0.067181 * X_5 + -0.009068 * X_6 + 0.266793 * X_7 + 0.191589 * X_8 + 0.027138 * X_9 AS "Score_1", CAST(NULL AS F
SQL_OUT_PUT_FIRST_LINES_END
SQL_OUT_PUT_LAST_LINES_START
ore_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."Score_3" AS "Score_3",
  arg_max_cte."Proba_3" AS "Proba_3",
  CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN LN( arg_max_cte."Proba_3" ) ELSE -1.79769313486231e+308 END AS "LogProba_3",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 128 entries, 0 to 127
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     128 non-null    float32
 1   X_1     128 non-null    float32
 2   X_2     128 non-null    float32
 3   X_3     128 non-null    float32
 4   X_4     128 non-null    float32
 5   X_5     128 non-null    float32
 6   X_6     128 non-null    float32
 7   X_7     128 non-null    float32
 8   X_8     128 non-null    float32
 9   X_9     128 non-null    float32
dtypes: float32(10)
memory usage: 6.0 KB
            X_0       X_1       X_2  ...       X_7       X_8       X_9
index                                ...                              
0     -1.050659  0.920640 -0.455125  ...  1.021308 -0.010797 -1.586949
1      1.869880 -2.312190 -1.153852  ... -1.335399 -1.648043  2.109906
2     -0.124049  0.768644 -1.040184  ...  0.342352  1.247335 -1.413962
3      0.928858 -1.177375  0.542731  ... -0.053731  0.485529  1.106564
4     -1.598324  1.482463  1.664691  ... -1.347481  1.816532  0.637000
...         ...       ...       ...  ...       ...       ...       ...
123   -0.598158  0.629641  1.754569  ...  0.046530 -0.570026  1.113417
124   -1.067863  0.728836  1.338623  ...  1.442460 -0.770565  0.644973
125   -1.123043  1.342440  0.659906  ... -1.324783 -1.312703  0.946601
126    0.795537 -0.282125 -0.219283  ... -0.631660 -1.614865  0.927883
127    1.126231 -0.791891 -0.032095  ... -0.283264  0.796760  0.714492

[128 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 128 entries, 0 to 127
Data columns (total 15 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          128 non-null    int64  
 1   Score_0        128 non-null    float64
 2   Proba_0        128 non-null    float64
 3   LogProba_0     128 non-null    float64
 4   Score_1        128 non-null    float64
 5   Proba_1        128 non-null    float64
 6   LogProba_1     128 non-null    float64
 7   Score_2        128 non-null    float64
 8   Proba_2        128 non-null    float64
 9   LogProba_2     128 non-null    float64
 10  Score_3        128 non-null    float64
 11  Proba_3        128 non-null    float64
 12  LogProba_3     128 non-null    float64
 13  Decision       128 non-null    int64  
 14  DecisionProba  128 non-null    float64
dtypes: float64(13), int64(2)
memory usage: 15.1 KB
     index   Score_0   Proba_0  ...  LogProba_3  Decision  DecisionProba
0        0 -0.555598  0.231728  ...   -1.719417         1       0.295591
1        1 -0.433601  0.250190  ...   -1.063367         3       0.345291
2        2 -0.605614  0.218375  ...   -1.718222         1       0.348429
3        3 -0.363024  0.281138  ...   -1.295232         0       0.281138
4        4 -0.247600  0.305509  ...   -1.153828         3       0.315427
..     ...       ...       ...  ...         ...       ...            ...
123    123 -0.552984  0.236796  ...   -1.421911         2       0.262801
124    124 -0.621861  0.218900  ...   -1.537563         1       0.307508
125    125 -0.604491  0.208873  ...   -1.268602         2       0.379906
126    126 -0.725437  0.186365  ...   -1.466046         2       0.416523
127    127 -0.604039  0.219873  ...   -1.221875         1       0.308666

[128 rows x 15 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Score_3', 'Proba_3',
       'LogProba_3', 'Decision', 'DecisionProba'],
      dtype='object')
     index   Score_0  SQL_Proba_0  ...  Py_Proba_2  Py_Proba_3  Py_Decision
112    112 -0.241015     0.292946  ...    0.342351    0.266973            2
113    113 -0.542562     0.238898  ...    0.257392    0.275398            3
114    114 -0.983666     0.123144  ...    0.160513    0.139007            1
115    115 -0.699641     0.186963  ...    0.431228    0.242739            2
116    116 -0.442999     0.259493  ...    0.256490    0.307803            3
117    117 -0.287009     0.292279  ...    0.126408    0.266506            1
118    118 -0.333710     0.284748  ...    0.314390    0.249263            2
119    119 -0.363123     0.276851  ...    0.285022    0.288827            3
120    120  0.005421     0.386924  ...    0.138056    0.270152            0
121    121 -0.672700     0.198824  ...    0.318703    0.146587            1
122    122 -0.281712     0.288706  ...    0.326256    0.271404            2
123    123 -0.552984     0.236796  ...    0.262800    0.241253            2
124    124 -0.621861     0.218900  ...    0.258687    0.214904            1
125    125 -0.604491     0.208873  ...    0.379905    0.281225            2
126    126 -0.725437     0.186365  ...    0.416523    0.230836            2
127    127 -0.604039     0.219873  ...    0.176784    0.294677            1

[16 rows x 20 columns]
MLLITE_SQL_ERROR ('Py_Proba_0', 'SQL_Proba_0') 6.040435616410745e-07
     Py_Proba_0  SQL_Proba_0
112    0.292946     0.292946
113    0.238898     0.238898
114    0.123144     0.123144
115    0.186963     0.186963
116    0.259493     0.259493
117    0.292279     0.292279
118    0.284748     0.284748
119    0.276852     0.276851
120    0.386924     0.386924
121    0.198824     0.198824
122    0.288706     0.288706
123    0.236796     0.236796
124    0.218900     0.218900
125    0.208873     0.208873
126    0.186366     0.186365
127    0.219873     0.219873
MLLITE_SQL_ERROR ('Py_Proba_1', 'SQL_Proba_1') 1.143965854080734e-06
     Py_Proba_1  SQL_Proba_1
112    0.097730     0.097730
113    0.228312     0.228312
114    0.577337     0.577337
115    0.139069     0.139069
116    0.176214     0.176214
117    0.314807     0.314807
118    0.151599     0.151599
119    0.149299     0.149299
120    0.204869     0.204869
121    0.335886     0.335886
122    0.113633     0.113633
123    0.259151     0.259151
124    0.307508     0.307508
125    0.129997     0.129997
126    0.166275     0.166275
127    0.308666     0.308666
MLLITE_SQL_ERROR ('Py_Proba_2', 'SQL_Proba_2') 1.0989149772292374e-06
     Py_Proba_2  SQL_Proba_2
112    0.342351     0.342351
113    0.257392     0.257393
114    0.160513     0.160512
115    0.431228     0.431229
116    0.256490     0.256490
117    0.126408     0.126408
118    0.314390     0.314390
119    0.285022     0.285022
120    0.138056     0.138055
121    0.318703     0.318703
122    0.326256     0.326256
123    0.262800     0.262801
124    0.258687     0.258688
125    0.379905     0.379906
126    0.416523     0.416523
127    0.176784     0.176784
MLLITE_SQL_ERROR ('Py_Proba_3', 'SQL_Proba_3') 1.1867069618352545e-06
     Py_Proba_3  SQL_Proba_3
112    0.266973     0.266973
113    0.275398     0.275398
114    0.139007     0.139007
115    0.242739     0.242739
116    0.307803     0.307803
117    0.266506     0.266506
118    0.249263     0.249264
119    0.288827     0.288827
120    0.270152     0.270151
121    0.146587     0.146587
122    0.271404     0.271405
123    0.241253     0.241252
124    0.214904     0.214904
125    0.281225     0.281224
126    0.230836     0.230836
127    0.294677     0.294677
     Py_Decision  SQL_Decision
112            2             2
113            3             3
114            1             1
115            2             2
116            3             3
117            1             1
118            2             2
119            3             3
120            0             0
121            1             1
122            2             2
123            2             2
124            1             1
125            2             2
126            2             2
127            1             1
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
