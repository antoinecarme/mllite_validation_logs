          X_0       X_1       X_2  ...       X_8       X_9  target
0   -1.050659  0.920640 -0.455125  ... -0.010797 -1.586949       2
1    1.869880 -2.312190 -1.153852  ... -1.648043  2.109906       3
2   -0.124049  0.768644 -1.040184  ...  1.247335 -1.413962       1
3    0.928858 -1.177375  0.542731  ...  0.485529  1.106564       0
4   -1.598324  1.482463  1.664691  ...  1.816533  0.637000       3
..        ...       ...       ...  ...       ...       ...     ...
123 -0.598158  0.629641  1.754569  ... -0.570026  1.113417       0
124 -1.067863  0.728836  1.338623  ... -0.770565  0.644973       2
125 -1.123043  1.342440  0.659906  ... -1.312702  0.946601       2
126  0.795537 -0.282125 -0.219283  ... -1.614865  0.927883       2
127  1.126231 -0.791891 -0.032095  ...  0.796760  0.714492       1

[128 rows x 11 columns]
MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
('OPERATION_START', 'TRAINING')
[[-1.0506592   0.92064023 -0.4551253  -0.05012989 -0.19162714  0.5843286
   0.9430313   1.0213077  -0.01079692 -1.5869486 ]
 [ 1.86988    -2.3121896  -1.1538523   1.292078   -1.061729    2.0429258
   1.284271   -1.3353989  -1.6480426   2.1099062 ]
 [-0.1240493   0.7686444  -1.040184   -1.0419097  -0.5159428   1.4802165
  -1.7200696   0.34235197  1.2473352  -1.4139622 ]
 [ 0.9288579  -1.1773754   0.5427306   1.248167   -0.7323589   0.6922126
   0.362028   -0.05373104  0.48552942  1.1065644 ]
 [-1.5983242   1.4824632   1.6646907  -0.7911312  -0.3269162  -0.07355959
  -3.3526254  -1.3474813   1.8165325   0.6370003 ]] [2 3 1 0 3]
MLLITE_FIT_USING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 6 6
('OPERATION_END_ELAPSED', 0.013, 'TRAINING')
{ ,   }
{ ,   }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_il8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 128, "dataset_features" : 10 },
	"classes" : [ 0, 1, 2, 3 ],
	"equations" : {
		"class_0" : {
			"intercept" : -0.516689,
			"coeffs" : [ -0.064034, -0.027439, 0.033680, 0.124114, -0.050137, -0.011638, -0.011217, -0.107510, 0.037688, -0.036323 ]
		},
		"class_1" : {
			"intercept" : -0.438851,
			"coeffs" : [ 0.088268, 0.030572, -0.012781, -0.047125, -0.020493, -0.066424, -0.014806, 0.269957, 0.185014, 0.026507 ]
		},
		"class_2" : {
			"intercept" : -0.494137,
			"coeffs" : [ 0.048941, 0.021380, -0.051914, -0.174052, -0.036364, 0.005610, 0.043891, 0.002786, -0.212383, -0.074606 ]
		},
		"class_3" : {
			"intercept" : -0.550323,
			"coeffs" : [ -0.073168, -0.024504, 0.031015, 0.097065, 0.106994, 0.072451, -0.017866, -0.165237, -0.010318, 0.084422 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_10_sampled.json'

MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
MLLITE_RELOADING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_il8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 128, "dataset_features" : 10 },
	"classes" : [ 0, 1, 2, 3 ],
	"equations" : {
		"class_0" : {
			"intercept" : -0.516689,
			"coeffs" : [ -0.064034, -0.027439, 0.033680, 0.124114, -0.050137, -0.011638, -0.011217, -0.107510, 0.037688, -0.036323 ]
		},
		"class_1" : {
			"intercept" : -0.438851,
			"coeffs" : [ 0.088268, 0.030572, -0.012781, -0.047125, -0.020493, -0.066424, -0.014806, 0.269957, 0.185014, 0.026507 ]
		},
		"class_2" : {
			"intercept" : -0.494137,
			"coeffs" : [ 0.048941, 0.021380, -0.051914, -0.174052, -0.036364, 0.005610, 0.043891, 0.002786, -0.212383, -0.074606 ]
		},
		"class_3" : {
			"intercept" : -0.550323,
			"coeffs" : [ -0.073168, -0.024504, 0.031015, 0.097065, 0.106994, 0.072451, -0.017866, -0.165237, -0.010318, 0.084422 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1, 2, 3 ],
	"dataset" : 	{
		"dataset_features" : 10,
		"dataset_rows" : 128
	},
	"equations" : 	{
		"class_0" : 	{
			"coeffs" : [ -0.064034, -0.027439, 0.03368, 0.124114, -0.050137, -0.011638, -0.011217, -0.10751, 0.037688, -0.036323 ],
			"intercept" : -0.516689
		},
		"class_1" : 	{
			"coeffs" : [ 0.088268, 0.030572, -0.012781, -0.047125, -0.020493, -0.066424, -0.014806, 0.269957, 0.185014, 0.026507 ],
			"intercept" : -0.438851
		},
		"class_2" : 	{
			"coeffs" : [ 0.048941, 0.02138, -0.051914, -0.174052, -0.036364, 0.00561, 0.043891, 0.002786, -0.212383, -0.074606 ],
			"intercept" : -0.494137
		},
		"class_3" : 	{
			"coeffs" : [ -0.073168, -0.024504, 0.031015, 0.097065, 0.106994, 0.072451, -0.017866, -0.165237, -0.010318, 0.084422 ],
			"intercept" : -0.550323
		}
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_il8", "version" : "2024-W12" },
	"options" :  { "alpha" : 1.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0.2315 0.2955 0.2938 0.1792]
 [0.2509 0.1244 0.28   0.3448]
 [0.2186 0.3477 0.2538 0.1799]
 [0.2813 0.2735 0.1712 0.2739]
 [0.3044 0.2452 0.1354 0.315 ]
 [0.202  0.1206 0.4369 0.2404]
 [0.1876 0.3948 0.2222 0.1954]
 [0.1685 0.3683 0.2616 0.2016]
 [0.2043 0.2393 0.334  0.2225]
 [0.2553 0.2011 0.265  0.2786]
 [0.2623 0.3301 0.1405 0.267 ]
 [0.2714 0.2788 0.1327 0.3172]
 [0.2503 0.1401 0.2609 0.3488]
 [0.1483 0.4823 0.2651 0.1043]
 [0.142  0.2466 0.4107 0.2007]
 [0.2094 0.318  0.2527 0.2199]
 [0.1412 0.2134 0.497  0.1484]
 [0.2441 0.4147 0.1463 0.1949]
 [0.256  0.0568 0.4171 0.2701]
 [0.2637 0.2069 0.2019 0.3275]
 [0.1876 0.1672 0.4509 0.1942]
 [0.2155 0.2074 0.3131 0.264 ]
 [0.3735 0.2029 0.1079 0.3158]
 [0.2262 0.182  0.354  0.2378]
 [0.2904 0.1769 0.2041 0.3286]
 [0.2329 0.2213 0.3194 0.2264]
 [0.3582 0.2131 0.1266 0.302 ]
 [0.1065 0.5353 0.2524 0.1058]
 [0.2441 0.1922 0.3763 0.1875]
 [0.3194 0.2766 0.1986 0.2054]
 [0.3071 0.0498 0.2118 0.4313]
 [0.1277 0.4873 0.2049 0.1801]
 [0.2523 0.1008 0.3186 0.3283]
 [0.174  0.4974 0.2219 0.1067]
 [0.304  0.2137 0.1912 0.2911]
 [0.1574 0.2491 0.411  0.1825]
 [0.1385 0.3312 0.4058 0.1245]
 [0.2369 0.2584 0.2599 0.2448]
 [0.2    0.1468 0.3963 0.2569]
 [0.3219 0.1794 0.0957 0.403 ]
 [0.2308 0.2583 0.2345 0.2764]
 [0.1645 0.4606 0.199  0.1759]
 [0.1628 0.5091 0.237  0.0911]
 [0.249  0.381  0.1363 0.2336]
 [0.3135 0.3042 0.0817 0.3005]
 [0.3018 0.2394 0.166  0.2928]
 [0.1579 0.3175 0.334  0.1906]
 [0.2743 0.2367 0.1942 0.2949]
 [0.325  0.2558 0.1119 0.3072]
 [0.1655 0.4304 0.1914 0.2126]
 [0.372  0.2052 0.0788 0.344 ]
 [0.2232 0.4442 0.1443 0.1883]
 [0.2249 0.0355 0.4301 0.3095]
 [0.22   0.3404 0.1581 0.2815]
 [0.154  0.4217 0.286  0.1383]
 [0.0595 0.0908 0.7658 0.0839]
 [0.2147 0.122  0.2996 0.3637]
 [0.1997 0.3109 0.2244 0.265 ]
 [0.2431 0.121  0.297  0.3389]
 [0.2221 0.4154 0.2193 0.1432]
 [0.1621 0.2979 0.3106 0.2293]
 [0.2851 0.249  0.2375 0.2284]
 [0.1819 0.144  0.4737 0.2005]
 [0.2627 0.2146 0.1898 0.3329]
 [0.379  0.1999 0.1005 0.3206]
 [0.371  0.262  0.1882 0.1789]
 [0.2008 0.1527 0.4649 0.1816]
 [0.1645 0.3255 0.3174 0.1926]
 [0.3091 0.1607 0.1654 0.3648]
 [0.157  0.5308 0.1885 0.1237]
 [0.2916 0.1302 0.3067 0.2714]
 [0.2064 0.2023 0.3767 0.2147]
 [0.3398 0.1827 0.2288 0.2488]
 [0.1633 0.1265 0.448  0.2623]
 [0.3179 0.2282 0.1508 0.303 ]
 [0.2356 0.3813 0.1132 0.2699]
 [0.2132 0.332  0.2465 0.2084]
 [0.3188 0.2029 0.0926 0.3857]
 [0.2175 0.2351 0.3306 0.2168]
 [0.2004 0.3226 0.267  0.21  ]
 [0.301  0.1889 0.2441 0.2661]
 [0.2659 0.2875 0.2576 0.189 ]
 [0.1879 0.3908 0.2547 0.1666]
 [0.379  0.2028 0.1245 0.2937]
 [0.3026 0.1508 0.2739 0.2727]
 [0.2176 0.2647 0.2779 0.2398]
 [0.1552 0.4092 0.2712 0.1644]
 [0.243  0.0948 0.2773 0.3848]
 [0.1716 0.4293 0.2605 0.1386]
 [0.2603 0.1542 0.2394 0.3461]
 [0.2275 0.3106 0.2648 0.1972]
 [0.2878 0.2785 0.2051 0.2286]
 [0.226  0.2478 0.2354 0.2908]
 [0.2222 0.2883 0.3184 0.1712]
 [0.0595 0.319  0.5636 0.0579]
 [0.1167 0.1846 0.5878 0.1109]
 [0.2512 0.203  0.2157 0.3301]
 [0.2206 0.3617 0.2401 0.1776]
 [0.2412 0.3533 0.1117 0.2938]
 [0.2834 0.2169 0.3005 0.1991]
 [0.256  0.1824 0.1899 0.3717]
 [0.1142 0.4058 0.3556 0.1243]
 [0.1897 0.1329 0.4571 0.2203]
 [0.2436 0.073  0.3196 0.3638]
 [0.2775 0.2497 0.1604 0.3124]
 [0.1934 0.1838 0.3666 0.2562]
 [0.1522 0.4272 0.2952 0.1255]
 [0.2543 0.1245 0.2753 0.3459]
 [0.1313 0.3785 0.3465 0.1437]
 [0.0858 0.6708 0.1592 0.0842]
 [0.2667 0.1915 0.2694 0.2724]
 [0.1899 0.1604 0.4375 0.2122]
 [0.2934 0.0985 0.3407 0.2675]
 [0.2384 0.2289 0.2578 0.2748]
 [0.1249 0.5727 0.1615 0.1409]
 [0.1878 0.1401 0.4287 0.2433]
 [0.2595 0.1766 0.2569 0.307 ]
 [0.2921 0.3139 0.1269 0.2671]
 [0.285  0.1518 0.3138 0.2494]
 [0.2763 0.1501 0.2852 0.2883]
 [0.3858 0.2051 0.1386 0.2706]
 [0.1991 0.3354 0.3183 0.1472]
 [0.2893 0.114  0.325  0.2716]
 [0.2367 0.259  0.2631 0.2413]
 [0.2188 0.3069 0.2597 0.2146]
 [0.209  0.1312 0.3787 0.2811]
 [0.1872 0.167  0.4144 0.2314]
 [0.2203 0.3077 0.1774 0.2946]]
(128, 4)
(128, 4) float32
MODEL_PERFS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'FourClass_10_sampled', 'size': 128, 'accuracy': 0.6015625, 'auc': 0.8186579924827879}
WRITING_PERF_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_10_sampled.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'FourClass_10_sampled', 'training_time_in_sec': 0.012, 'prediction_time_in_sec': 0.0}
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_FourClass_10_sampled.sql'



SQL_OUT_PUT_FIRST_LINES_START
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT model_input."index" AS "index",
   -0.516689 + -0.064034 * X_0 + -0.027439 * X_1 + 0.033680 * X_2 + 0.124114 * X_3 + -0.050137 * X_4 + -0.011638 * X_5 + -0.011217 * X_6 + -0.107510 * X_7 + 0.037688 * X_8 + -0.036323 * X_9 AS "Score_0", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "LogProba_0",
   -0.438851 + 0.088268 * X_0 + 0.030572 * X_1 + -0.012781 * X_2 + -0.047125 * X_3 + -0.020493 * X_4 + -0.066424 * X_5 + -0.014806 * X_6 + 0.269957 * X_7 + 0.185014 * X_8 + 0.026507 * X_9 AS "Score_1", CAST(NULL AS F
SQL_OUT_PUT_FIRST_LINES_END
SQL_OUT_PUT_LAST_LINES_START
ore_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."Score_2" AS "Score_2",
  arg_max_cte."Proba_2" AS "Proba_2",
  CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN LN( arg_max_cte."Proba_2" ) ELSE -1.79769313486231e+308 END AS "LogProba_2",
  arg_max_cte."Score_3" AS "Score_3",
  arg_max_cte."Proba_3" AS "Proba_3",
  CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN LN( arg_max_cte."Proba_3" ) ELSE -1.79769313486231e+308 END AS "LogProba_3",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 128 entries, 0 to 127
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     128 non-null    float32
 1   X_1     128 non-null    float32
 2   X_2     128 non-null    float32
 3   X_3     128 non-null    float32
 4   X_4     128 non-null    float32
 5   X_5     128 non-null    float32
 6   X_6     128 non-null    float32
 7   X_7     128 non-null    float32
 8   X_8     128 non-null    float32
 9   X_9     128 non-null    float32
dtypes: float32(10)
memory usage: 6.0 KB
            X_0       X_1       X_2  ...       X_7       X_8       X_9
index                                ...                              
0     -1.050659  0.920640 -0.455125  ...  1.021308 -0.010797 -1.586949
1      1.869880 -2.312190 -1.153852  ... -1.335399 -1.648043  2.109906
2     -0.124049  0.768644 -1.040184  ...  0.342352  1.247335 -1.413962
3      0.928858 -1.177375  0.542731  ... -0.053731  0.485529  1.106564
4     -1.598324  1.482463  1.664691  ... -1.347481  1.816532  0.637000
...         ...       ...       ...  ...       ...       ...       ...
123   -0.598158  0.629641  1.754569  ...  0.046530 -0.570026  1.113417
124   -1.067863  0.728836  1.338623  ...  1.442460 -0.770565  0.644973
125   -1.123043  1.342440  0.659906  ... -1.324783 -1.312703  0.946601
126    0.795537 -0.282125 -0.219283  ... -0.631660 -1.614865  0.927883
127    1.126231 -0.791891 -0.032095  ... -0.283264  0.796760  0.714492

[128 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 128 entries, 0 to 127
Data columns (total 15 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          128 non-null    int64  
 1   Score_0        128 non-null    float64
 2   Proba_0        128 non-null    float64
 3   LogProba_0     128 non-null    float64
 4   Score_1        128 non-null    float64
 5   Proba_1        128 non-null    float64
 6   LogProba_1     128 non-null    float64
 7   Score_2        128 non-null    float64
 8   Proba_2        128 non-null    float64
 9   LogProba_2     128 non-null    float64
 10  Score_3        128 non-null    float64
 11  Proba_3        128 non-null    float64
 12  LogProba_3     128 non-null    float64
 13  Decision       128 non-null    int64  
 14  DecisionProba  128 non-null    float64
dtypes: float64(13), int64(2)
memory usage: 15.1 KB
     index   Score_0   Proba_0  ...  LogProba_3  Decision  DecisionProba
0        0 -0.556559  0.231507  ...   -1.719212         1       0.295509
1        1 -0.431608  0.250853  ...   -1.064879         3       0.344770
2        2 -0.604688  0.218587  ...   -1.715396         1       0.347721
3        3 -0.362184  0.281322  ...   -1.294906         0       0.281322
4        4 -0.252098  0.304356  ...   -1.155046         3       0.315043
..     ...       ...       ...  ...         ...       ...            ...
123    123 -0.553815  0.236661  ...   -1.421896         2       0.263091
124    124 -0.622519  0.218817  ...   -1.538876         1       0.306899
125    125 -0.606190  0.209023  ...   -1.269216         2       0.378723
126    126 -0.723098  0.187200  ...   -1.463545         2       0.414408
127    127 -0.602033  0.220303  ...   -1.222020         1       0.307667

[128 rows x 15 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Score_2', 'Proba_2', 'LogProba_2', 'Score_3', 'Proba_3',
       'LogProba_3', 'Decision', 'DecisionProba'],
      dtype='object')
     index   Score_0  SQL_Proba_0  ...  Py_Proba_2  Py_Proba_3  Py_Decision
112    112 -0.241127     0.293432  ...    0.340653    0.267458            2
113    113 -0.545046     0.238392  ...    0.257821    0.274850            3
114    114 -0.974861     0.124934  ...    0.161547    0.140852            1
115    115 -0.697751     0.187834  ...    0.428740    0.243307            2
116    116 -0.443203     0.259521  ...    0.256871    0.307011            3
117    117 -0.287410     0.292053  ...    0.126942    0.267098            1
118    118 -0.333107     0.285032  ...    0.313782    0.249400            2
119    119 -0.366102     0.276307  ...    0.285244    0.288311            3
120    120  0.002611     0.385775  ...    0.138570    0.270582            0
121    121 -0.672022     0.199129  ...    0.318290    0.147179            1
122    122 -0.280386     0.289345  ...    0.325047    0.271635            2
123    123 -0.553815     0.236661  ...    0.263091    0.241257            2
124    124 -0.622519     0.218817  ...    0.259662    0.214622            1
125    125 -0.606190     0.209023  ...    0.378723    0.281052            2
126    126 -0.723098     0.187200  ...    0.414408    0.231414            2
127    127 -0.602033     0.220303  ...    0.177396    0.294635            1

[16 rows x 20 columns]
MLLITE_SQL_ERROR ('Py_Proba_0', 'SQL_Proba_0') 1.1105861473112726e-06
     Py_Proba_0  SQL_Proba_0
112    0.293432     0.293432
113    0.238392     0.238392
114    0.124934     0.124934
115    0.187833     0.187834
116    0.259521     0.259521
117    0.292053     0.292053
118    0.285031     0.285032
119    0.276307     0.276307
120    0.385774     0.385775
121    0.199129     0.199129
122    0.289344     0.289345
123    0.236661     0.236661
124    0.218817     0.218817
125    0.209023     0.209023
126    0.187200     0.187200
127    0.220302     0.220303
MLLITE_SQL_ERROR ('Py_Proba_1', 'SQL_Proba_1') 1.5619815335133675e-06
     Py_Proba_1  SQL_Proba_1
112    0.098457     0.098457
113    0.228937     0.228938
114    0.572666     0.572665
115    0.140120     0.140120
116    0.176596     0.176596
117    0.313906     0.313907
118    0.151786     0.151786
119    0.150138     0.150138
120    0.205074     0.205074
121    0.335403     0.335403
122    0.113975     0.113974
123    0.258991     0.258991
124    0.306899     0.306899
125    0.131202     0.131203
126    0.166977     0.166977
127    0.307667     0.307667
MLLITE_SQL_ERROR ('Py_Proba_2', 'SQL_Proba_2') 6.58482997941225e-07
     Py_Proba_2  SQL_Proba_2
112    0.340653     0.340653
113    0.257821     0.257821
114    0.161547     0.161548
115    0.428740     0.428740
116    0.256871     0.256871
117    0.126942     0.126943
118    0.313782     0.313782
119    0.285244     0.285244
120    0.138570     0.138570
121    0.318290     0.318290
122    0.325047     0.325046
123    0.263091     0.263091
124    0.259662     0.259662
125    0.378723     0.378723
126    0.414408     0.414408
127    0.177396     0.177397
MLLITE_SQL_ERROR ('Py_Proba_3', 'SQL_Proba_3') 1.2412490236426237e-06
     Py_Proba_3  SQL_Proba_3
112    0.267458     0.267458
113    0.274850     0.274849
114    0.140852     0.140853
115    0.243307     0.243307
116    0.307011     0.307011
117    0.267098     0.267098
118    0.249400     0.249400
119    0.288311     0.288311
120    0.270582     0.270581
121    0.147179     0.147179
122    0.271635     0.271635
123    0.241257     0.241256
124    0.214622     0.214622
125    0.281052     0.281052
126    0.231414     0.231414
127    0.294635     0.294634
     Py_Decision  SQL_Decision
112            2             2
113            3             3
114            1             1
115            2             2
116            3             3
117            1             1
118            2             2
119            3             3
120            0             0
121            1             1
122            2             2
123            2             2
124            1             1
125            2             2
126            2             2
127            1             1
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
