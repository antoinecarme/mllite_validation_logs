READING_CSV census_sampled ['data/sampled/census_sampled.csv']
      age  workclass     fnlwgt  ...  hoursperweek  native-country  target
0     2.0        0.0   188950.0  ...           3.0             0.0    >50K
1     1.0        0.0  1033222.0  ...           2.0             0.0   <=50K
2     1.0        0.0   129707.0  ...           1.0             0.0    >50K
3     1.0        0.0    78530.0  ...           4.0             0.0    >50K
4     1.0        0.0   159537.0  ...           2.0             0.0   <=50K
...   ...        ...        ...  ...           ...             ...     ...
6100  2.0        0.0   102576.0  ...           3.0             0.0   <=50K
6101  2.0        0.0   314963.0  ...           2.0             0.0   <=50K
6102  3.0        0.0   109421.0  ...           3.0             0.0   <=50K
6103  1.0        0.0    36201.0  ...           3.0             0.0   <=50K
6104  4.0        0.0   584259.0  ...           2.0             0.0   <=50K

[6105 rows x 15 columns]
MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
('OPERATION_START', 'TRAINING')
[[2.000000e+00 0.000000e+00 1.889500e+05 0.000000e+00 1.400000e+01
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 3.000000e+00 0.000000e+00]
 [1.000000e+00 0.000000e+00 1.033222e+06 0.000000e+00 1.000000e+01
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 2.000000e+00 0.000000e+00]
 [1.000000e+00 0.000000e+00 1.297070e+05 0.000000e+00 1.300000e+01
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  4.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00]
 [1.000000e+00 0.000000e+00 7.853000e+04 0.000000e+00 9.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 4.000000e+00 0.000000e+00]
 [1.000000e+00 0.000000e+00 1.595370e+05 0.000000e+00 1.200000e+01
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 2.000000e+00 0.000000e+00]] ['>50K' '<=50K' '>50K' '>50K' '<=50K']
MLLITE_FIT_USING_MODEL mllite_ridge_class.RidgeClassifier_ff4_OO8
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 3 4
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 4 4
('OPERATION_END_ELAPSED', 0.061, 'TRAINING')
{ ,   }
{ ,   }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_OO8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 6105, "dataset_features" : 14 },
	"classes" : [ "<=50K", ">50K" ],
	"equations" : {
		"class_1" : {
			"intercept" : 576.569092,
			"coeffs" : [ -17.053410, 0.000000, -0.002656, 0.000000, -3.340088, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.691264, 5.022571, -3.528587, 0.000000 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_census_sampled.json'

RELOADING_MODEL_FROM_JSON_START ('census_sampled', 'RidgeClassifier')
MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
MLLITE_RELOADING_MODEL mllite_ridge_class.RidgeClassifier_ff4_OO8
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W14", "signature" : "ff4_OO8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 6105, "dataset_features" : 14 },
	"classes" : [ "<=50K", ">50K" ],
	"equations" : {
		"class_1" : {
			"intercept" : 576.569092,
			"coeffs" : [ -17.053410, 0.000000, -0.002656, 0.000000, -3.340088, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.691264, 5.022571, -3.528587, 0.000000 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ "<=50K", ">50K" ],
	"dataset" : 	{
		"dataset_features" : 14,
		"dataset_rows" : 6105
	},
	"equations" : 	{
		"class_1" : 	{
			"coeffs" : [ -17.05341, 0.0, -0.002656, 0.0, -3.340088, 0.0, 0.0, 0.0, 0.0, 0.0, 2.691264, 5.022571, -3.528587, 0.0 ],
			"intercept" : 576.569092
		}
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_OO8", "version" : "2024-W14" },
	"options" :  { "alpha" : 1.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
RELOADING_MODEL_FROM_JSON_END ('census_sampled', 'RidgeClassifier')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.004, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.004, 'PREDICT')
[[1. 0.]
 [1. 0.]
 [0. 1.]
 ...
 [0. 1.]
 [0. 1.]
 [1. 0.]]
(6105, 2)
(6105,) float32
MODEL_PERFS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'census_sampled', 'size': 6105, 'accuracy': 0.4507780507780508, 'auc': 0.4868062257267271}
WRITING_PERF_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_census_sampled.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'census_sampled', 'training_time_in_sec': 0.061, 'prediction_time_in_sec': 0.004}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 0 14
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 1 14
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 2 14
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 3 14
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 4 14
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 5 14
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 6 14
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 7 14
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 8 14
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 9 14
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 10 14
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 11 14
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 12 14
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 13 14
{
   "Contributions" : {
      "X_0" : [ -0.005815, 0.005815 ],
      "X_1" : [ 0.000000, 0.000000 ],
      "X_2" : [ 0.098212, -0.098212 ],
      "X_3" : [ 0.000000, 0.000000 ],
      "X_4" : [ 0.002534, -0.002534 ],
      "X_5" : [ 0.000000, 0.000000 ],
      "X_6" : [ 0.000000, 0.000000 ],
      "X_7" : [ 0.000000, 0.000000 ],
      "X_8" : [ 0.000000, 0.000000 ],
      "X_9" : [ 0.000000, 0.000000 ],
      "X_10" : [ 0.002460, -0.002460 ],
      "X_11" : [ -0.001311, 0.001311 ],
      "X_12" : [ 0.000133, -0.000133 ],
      "X_13" : [ 0.000000, 0.000000 ]   
   },
   "Most_Contributive_Features_By_Class" : {
      "class_0" : [ 2, 0, 4, 10, 11, 12 ],
      "class_1" : [ 2, 0, 4, 10, 11, 12 ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_census_sampled_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_census_sampled_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('census_sampled', 'RidgeClassifier', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13"
  FROM "census_sampled" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT t."index" AS "index",
   -0.5 * ( 576.569092 + -17.053410 * t."X_0" + 0.000000 * t."X_1" + -0.002656 * t."X_2" + 0.000000 * t."X_3" + -3.340088 * t."X_4" + 0.000000 * t."X_5" + 0.000000 * t."X_6" + 0.000000 * t."X_7" + 0.000000 * t."X_8" + 0.000000 * t."X_9" + 2.691264 * t."X_10" + 5.022571 * t."X_11" + -3.528587 * t."X_12" + 0.000000 * t."X_13" ) AS "Score_0",
   CAST
SQL_OUT_PUT_FIRST_LINES_END ('census_sampled', 'RidgeClassifier', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('census_sampled', 'RidgeClassifier', 'duckdb')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('census_sampled', 'RidgeClassifier', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 6105 entries, 0 to 6104
Data columns (total 14 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     6105 non-null   float32
 1   X_1     6105 non-null   float32
 2   X_2     6105 non-null   float32
 3   X_3     6105 non-null   float32
 4   X_4     6105 non-null   float32
 5   X_5     6105 non-null   float32
 6   X_6     6105 non-null   float32
 7   X_7     6105 non-null   float32
 8   X_8     6105 non-null   float32
 9   X_9     6105 non-null   float32
 10  X_10    6105 non-null   float32
 11  X_11    6105 non-null   float32
 12  X_12    6105 non-null   float32
 13  X_13    6105 non-null   float32
dtypes: float32(14)
memory usage: 381.6 KB
       X_0  X_1        X_2  X_3   X_4  X_5  ...  X_8  X_9  X_10  X_11  X_12  X_13
index                                       ...                                  
0      2.0  0.0   188950.0  0.0  14.0  0.0  ...  0.0  0.0   0.0   0.0   3.0   0.0
1      1.0  0.0  1033222.0  0.0  10.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
2      1.0  0.0   129707.0  0.0  13.0  0.0  ...  0.0  0.0   4.0   0.0   1.0   0.0
3      1.0  0.0    78530.0  0.0   9.0  0.0  ...  0.0  0.0   0.0   0.0   4.0   0.0
4      1.0  0.0   159537.0  0.0  12.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
...    ...  ...        ...  ...   ...  ...  ...  ...  ...   ...   ...   ...   ...
6100   2.0  0.0   102576.0  0.0  14.0  0.0  ...  0.0  0.0   0.0   0.0   3.0   0.0
6101   2.0  0.0   314963.0  0.0  10.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
6102   3.0  0.0   109421.0  0.0  13.0  0.0  ...  0.0  0.0   0.0   0.0   3.0   0.0
6103   1.0  0.0    36201.0  0.0  13.0  0.0  ...  0.0  0.0   0.0   0.0   3.0   0.0
6104   4.0  0.0   584259.0  0.0   9.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0

[6105 rows x 14 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 6105 entries, 0 to 6104
Data columns (total 9 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          6105 non-null   int64  
 1   Score_0        6105 non-null   float64
 2   Proba_0        6105 non-null   float64
 3   LogProba_0     6105 non-null   float64
 4   Score_1        6105 non-null   float64
 5   Proba_1        6105 non-null   float64
 6   LogProba_1     6105 non-null   float64
 7   Decision       6105 non-null   int64  
 8   DecisionProba  6105 non-null   float64
dtypes: float64(7), int64(2)
memory usage: 429.4 KB
      index      Score_0        Proba_0  ...     LogProba_1  Decision  DecisionProba
0         0     8.367954   9.999999e-01  ...  -1.673591e+01         0            1.0
1         1  1112.589966   1.000000e+00  ... -1.797693e+308         0            1.0
2         2   -89.414612   2.164985e-78  ...   0.000000e+00         1            1.0
3         3  -153.382431  5.938998e-134  ...   0.000000e+00         1            1.0
4         4   -44.323601   3.169637e-39  ...   0.000000e+00         1            1.0
...     ...          ...            ...  ...            ...       ...            ...
6100   6100  -106.336716   4.336130e-93  ...   0.000000e+00         1            1.0
6101   6101   167.268753   1.000000e+00  ...  -3.345375e+02         0            1.0
6102   6102   -90.389908   3.078390e-79  ...   0.000000e+00         1            1.0
6103   6103  -204.679474  1.650699e-178  ...   0.000000e+00         1            1.0
6104   6104   540.277161   1.000000e+00  ... -1.797693e+308         0            1.0

[6105 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
      index     Score_0    SQL_Proba_0  ...    Py_Proba_0    Py_Proba_1  Py_Decision
6089   6089   14.125828   1.000000e+00  ...  1.000000e+00  5.858814e-13        <=50K
6090   6090   71.258537   1.000000e+00  ...  1.000000e+00  0.000000e+00        <=50K
6091   6091 -183.669312  2.929969e-160  ...  0.000000e+00  1.000000e+00         >50K
6092   6092  -80.151299   2.406948e-70  ...  0.000000e+00  1.000000e+00         >50K
6093   6093 -107.465881   4.532330e-94  ...  0.000000e+00  1.000000e+00         >50K
6094   6094  -10.779873   4.332328e-10  ...  3.989933e-10  1.000000e+00         >50K
6095   6095 -171.250107  1.794929e-149  ...  0.000000e+00  1.000000e+00         >50K
6096   6096   29.095215   1.000000e+00  ...  1.000000e+00  0.000000e+00        <=50K
6097   6097    0.856315   8.471772e-01  ...  8.361518e-01  1.638482e-01        <=50K
6098   6098  -37.804604   1.456594e-33  ...  0.000000e+00  1.000000e+00         >50K
6099   6099  117.884285   1.000000e+00  ...  1.000000e+00  0.000000e+00        <=50K
6100   6100 -106.336716   4.336130e-93  ...  0.000000e+00  1.000000e+00         >50K
6101   6101  167.268753   1.000000e+00  ...  1.000000e+00  0.000000e+00        <=50K
6102   6102  -90.389908   3.078390e-79  ...  0.000000e+00  1.000000e+00         >50K
6103   6103 -204.679474  1.650699e-178  ...  0.000000e+00  1.000000e+00         >50K
6104   6104  540.277161   1.000000e+00  ...  1.000000e+00  0.000000e+00        <=50K

[16 rows x 12 columns]
MLLITE_CLASS_SQL_ERROR ('census_sampled', 'RidgeClassifier', 'duckdb') ('Py_Proba_0', 'SQL_Proba_0') 0.0001686328527865025
        Py_Proba_0    SQL_Proba_0    SQL_Error_0
6089  1.000000e+00   1.000000e+00   5.375700e-13
6090  1.000000e+00   1.000000e+00   0.000000e+00
6091  0.000000e+00  2.929969e-160 -2.929969e-160
6092  0.000000e+00   2.406948e-70  -2.406948e-70
6093  0.000000e+00   4.532330e-94  -4.532330e-94
6094  3.989933e-10   4.332328e-10  -3.423953e-11
6095  0.000000e+00  1.794929e-149 -1.794929e-149
6096  1.000000e+00   1.000000e+00   0.000000e+00
6097  8.361518e-01   8.471772e-01  -1.102535e-02
6098  0.000000e+00   1.456594e-33  -1.456594e-33
6099  1.000000e+00   1.000000e+00   0.000000e+00
6100  0.000000e+00   4.336130e-93  -4.336130e-93
6101  1.000000e+00   1.000000e+00   0.000000e+00
6102  0.000000e+00   3.078390e-79  -3.078390e-79
6103  0.000000e+00  1.650699e-178 -1.650699e-178
6104  1.000000e+00   1.000000e+00   0.000000e+00
MLLITE_CLASS_SQL_ERROR ('census_sampled', 'RidgeClassifier', 'duckdb') ('Py_Proba_1', 'SQL_Proba_1') 0.00016863501573318772
        Py_Proba_1    SQL_Proba_1    SQL_Error_1
6089  5.858814e-13   5.376032e-13   4.827820e-14
6090  0.000000e+00   1.275325e-62  -1.275325e-62
6091  1.000000e+00   1.000000e+00   0.000000e+00
6092  1.000000e+00   1.000000e+00   0.000000e+00
6093  1.000000e+00   1.000000e+00   0.000000e+00
6094  1.000000e+00   1.000000e+00   4.332328e-10
6095  1.000000e+00   1.000000e+00   0.000000e+00
6096  0.000000e+00   5.348321e-26  -5.348321e-26
6097  1.638482e-01   1.528228e-01   1.102537e-02
6098  1.000000e+00   1.000000e+00   0.000000e+00
6099  0.000000e+00  4.045862e-103 -4.045862e-103
6100  1.000000e+00   1.000000e+00   0.000000e+00
6101  0.000000e+00  5.154744e-146 -5.154744e-146
6102  1.000000e+00   1.000000e+00   0.000000e+00
6103  1.000000e+00   1.000000e+00   0.000000e+00
6104  0.000000e+00   0.000000e+00   0.000000e+00
MLLITE_CLASS_SQL_EXECUTION_STATUS ('census_sampled', 'RidgeClassifier', 'duckdb', 'Success')
     Py_Decision  SQL_Decision
6089       <=50K             0
6090       <=50K             0
6091        >50K             1
6092        >50K             1
6093        >50K             1
6094        >50K             1
6095        >50K             1
6096       <=50K             0
6097       <=50K             0
6098        >50K             1
6099       <=50K             0
6100        >50K             1
6101       <=50K             0
6102        >50K             1
6103        >50K             1
6104       <=50K             0
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_census_sampled_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('census_sampled', 'RidgeClassifier', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13"
  FROM "census_sampled" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT t."index" AS "index",
   -0.5 * ( 576.569092 + -17.053410 * t."X_0" + 0.000000 * t."X_1" + -0.002656 * t."X_2" + 0.000000 * t."X_3" + -3.340088 * t."X_4" + 0.000000 * t."X_5" + 0.000000 * t."X_6" + 0.000000 * t."X_7" + 0.000000 * t."X_8" + 0.000000 * t."X_9" + 2.691264 * t."X_10" + 5.022571 * t."X_11" + -3.528587 * t."X_12" + 0.000000 * t."X_13" ) AS "Score_0",
   CAST
SQL_OUT_PUT_FIRST_LINES_END ('census_sampled', 'RidgeClassifier', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('census_sampled', 'RidgeClassifier', 'sqlite')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('census_sampled', 'RidgeClassifier', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 6105 entries, 0 to 6104
Data columns (total 14 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     6105 non-null   float32
 1   X_1     6105 non-null   float32
 2   X_2     6105 non-null   float32
 3   X_3     6105 non-null   float32
 4   X_4     6105 non-null   float32
 5   X_5     6105 non-null   float32
 6   X_6     6105 non-null   float32
 7   X_7     6105 non-null   float32
 8   X_8     6105 non-null   float32
 9   X_9     6105 non-null   float32
 10  X_10    6105 non-null   float32
 11  X_11    6105 non-null   float32
 12  X_12    6105 non-null   float32
 13  X_13    6105 non-null   float32
dtypes: float32(14)
memory usage: 381.6 KB
       X_0  X_1        X_2  X_3   X_4  X_5  ...  X_8  X_9  X_10  X_11  X_12  X_13
index                                       ...                                  
0      2.0  0.0   188950.0  0.0  14.0  0.0  ...  0.0  0.0   0.0   0.0   3.0   0.0
1      1.0  0.0  1033222.0  0.0  10.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
2      1.0  0.0   129707.0  0.0  13.0  0.0  ...  0.0  0.0   4.0   0.0   1.0   0.0
3      1.0  0.0    78530.0  0.0   9.0  0.0  ...  0.0  0.0   0.0   0.0   4.0   0.0
4      1.0  0.0   159537.0  0.0  12.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
...    ...  ...        ...  ...   ...  ...  ...  ...  ...   ...   ...   ...   ...
6100   2.0  0.0   102576.0  0.0  14.0  0.0  ...  0.0  0.0   0.0   0.0   3.0   0.0
6101   2.0  0.0   314963.0  0.0  10.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0
6102   3.0  0.0   109421.0  0.0  13.0  0.0  ...  0.0  0.0   0.0   0.0   3.0   0.0
6103   1.0  0.0    36201.0  0.0  13.0  0.0  ...  0.0  0.0   0.0   0.0   3.0   0.0
6104   4.0  0.0   584259.0  0.0   9.0  0.0  ...  0.0  0.0   0.0   0.0   2.0   0.0

[6105 rows x 14 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 6105 entries, 0 to 6104
Data columns (total 9 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          6105 non-null   int64  
 1   Score_0        6105 non-null   float64
 2   Proba_0        6105 non-null   float64
 3   LogProba_0     6105 non-null   float64
 4   Score_1        6105 non-null   float64
 5   Proba_1        6105 non-null   float64
 6   LogProba_1     6105 non-null   float64
 7   Decision       6105 non-null   int64  
 8   DecisionProba  6105 non-null   float64
dtypes: float64(7), int64(2)
memory usage: 429.4 KB
      index      Score_0        Proba_0  ...     LogProba_1  Decision  DecisionProba
0         0     8.367961   9.999999e-01  ...  -1.673592e+01         0            1.0
1         1  1112.590002   1.000000e+00  ... -1.797693e+308         0            1.0
2         2   -89.414608   2.165004e-78  ...   0.000000e+00         1            1.0
3         3  -153.382431  5.938998e-134  ...   0.000000e+00         1            1.0
4         4   -44.323590   3.169705e-39  ...   0.000000e+00         1            1.0
...     ...          ...            ...  ...            ...       ...            ...
6100   6100  -106.336712   4.336166e-93  ...   0.000000e+00         1            1.0
6101   6101   167.268755   1.000000e+00  ...  -3.345375e+02         0            1.0
6102   6102   -90.389891   3.078497e-79  ...   0.000000e+00         1            1.0
6103   6103  -204.679460  1.650743e-178  ...   0.000000e+00         1            1.0
6104   6104   540.277209   1.000000e+00  ... -1.797693e+308         0            1.0

[6105 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
      index     Score_0    SQL_Proba_0  ...    Py_Proba_0    Py_Proba_1  Py_Decision
6089   6089   14.125833   1.000000e+00  ...  1.000000e+00  5.858814e-13        <=50K
6090   6090   71.258536   1.000000e+00  ...  1.000000e+00  0.000000e+00        <=50K
6091   6091 -183.669302  2.930025e-160  ...  0.000000e+00  1.000000e+00         >50K
6092   6092  -80.151290   2.406989e-70  ...  0.000000e+00  1.000000e+00         >50K
6093   6093 -107.465876   4.532373e-94  ...  0.000000e+00  1.000000e+00         >50K
6094   6094  -10.779873   4.332323e-10  ...  3.989933e-10  1.000000e+00         >50K
6095   6095 -171.250100  1.794955e-149  ...  0.000000e+00  1.000000e+00         >50K
6096   6096   29.095211   1.000000e+00  ...  1.000000e+00  0.000000e+00        <=50K
6097   6097    0.856327   8.471802e-01  ...  8.361518e-01  1.638482e-01        <=50K
6098   6098  -37.804606   1.456587e-33  ...  0.000000e+00  1.000000e+00         >50K
6099   6099  117.884290   1.000000e+00  ...  1.000000e+00  0.000000e+00        <=50K
6100   6100 -106.336712   4.336166e-93  ...  0.000000e+00  1.000000e+00         >50K
6101   6101  167.268755   1.000000e+00  ...  1.000000e+00  0.000000e+00        <=50K
6102   6102  -90.389891   3.078497e-79  ...  0.000000e+00  1.000000e+00         >50K
6103   6103 -204.679460  1.650743e-178  ...  0.000000e+00  1.000000e+00         >50K
6104   6104  540.277209   1.000000e+00  ...  1.000000e+00  0.000000e+00        <=50K

[16 rows x 12 columns]
MLLITE_CLASS_SQL_ERROR ('census_sampled', 'RidgeClassifier', 'sqlite') ('Py_Proba_0', 'SQL_Proba_0') 0.0001686600243885229
        Py_Proba_0    SQL_Proba_0    SQL_Error_0
6089  1.000000e+00   1.000000e+00   5.375700e-13
6090  1.000000e+00   1.000000e+00   0.000000e+00
6091  0.000000e+00  2.930025e-160 -2.930025e-160
6092  0.000000e+00   2.406989e-70  -2.406989e-70
6093  0.000000e+00   4.532373e-94  -4.532373e-94
6094  3.989933e-10   4.332323e-10  -3.423901e-11
6095  0.000000e+00  1.794955e-149 -1.794955e-149
6096  1.000000e+00   1.000000e+00   0.000000e+00
6097  8.361518e-01   8.471802e-01  -1.102837e-02
6098  0.000000e+00   1.456587e-33  -1.456587e-33
6099  1.000000e+00   1.000000e+00   0.000000e+00
6100  0.000000e+00   4.336166e-93  -4.336166e-93
6101  1.000000e+00   1.000000e+00   0.000000e+00
6102  0.000000e+00   3.078497e-79  -3.078497e-79
6103  0.000000e+00  1.650743e-178 -1.650743e-178
6104  1.000000e+00   1.000000e+00   0.000000e+00
MLLITE_CLASS_SQL_ERROR ('census_sampled', 'RidgeClassifier', 'sqlite') ('Py_Proba_1', 'SQL_Proba_1') 0.00016866218739733501
        Py_Proba_1    SQL_Proba_1    SQL_Error_1
6089  5.858814e-13   5.375982e-13   4.828327e-14
6090  0.000000e+00   1.275328e-62  -1.275328e-62
6091  1.000000e+00   1.000000e+00   0.000000e+00
6092  1.000000e+00   1.000000e+00   0.000000e+00
6093  1.000000e+00   1.000000e+00   0.000000e+00
6094  1.000000e+00   1.000000e+00   4.332323e-10
6095  1.000000e+00   1.000000e+00   0.000000e+00
6096  0.000000e+00   5.348362e-26  -5.348362e-26
6097  1.638482e-01   1.528198e-01   1.102838e-02
6098  1.000000e+00   1.000000e+00   0.000000e+00
6099  0.000000e+00  4.045825e-103 -4.045825e-103
6100  1.000000e+00   1.000000e+00   0.000000e+00
6101  0.000000e+00  5.154724e-146 -5.154724e-146
6102  1.000000e+00   1.000000e+00   0.000000e+00
6103  1.000000e+00   1.000000e+00   0.000000e+00
6104  0.000000e+00   0.000000e+00   0.000000e+00
MLLITE_CLASS_SQL_EXECUTION_STATUS ('census_sampled', 'RidgeClassifier', 'sqlite', 'Success')
     Py_Decision  SQL_Decision
6089       <=50K             0
6090       <=50K             0
6091        >50K             1
6092        >50K             1
6093        >50K             1
6094        >50K             1
6095        >50K             1
6096       <=50K             0
6097       <=50K             0
6098        >50K             1
6099       <=50K             0
6100        >50K             1
6101       <=50K             0
6102        >50K             1
6103        >50K             1
6104       <=50K             0
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
