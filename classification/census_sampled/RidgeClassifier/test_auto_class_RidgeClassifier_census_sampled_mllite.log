      age  workclass     fnlwgt  ...  hoursperweek  native-country  target
0     2.0        0.0   188950.0  ...           3.0             0.0    >50K
1     1.0        0.0  1033222.0  ...           2.0             0.0   <=50K
2     1.0        0.0   129707.0  ...           1.0             0.0    >50K
3     1.0        0.0    78530.0  ...           4.0             0.0    >50K
4     1.0        0.0   159537.0  ...           2.0             0.0   <=50K
...   ...        ...        ...  ...           ...             ...     ...
6100  2.0        0.0   102576.0  ...           3.0             0.0   <=50K
6101  2.0        0.0   314963.0  ...           2.0             0.0   <=50K
6102  3.0        0.0   109421.0  ...           3.0             0.0   <=50K
6103  1.0        0.0    36201.0  ...           3.0             0.0   <=50K
6104  4.0        0.0   584259.0  ...           2.0             0.0   <=50K

[6105 rows x 15 columns]
MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
('OPERATION_START', 'TRAINING')
[[2.000000e+00 0.000000e+00 1.889500e+05 0.000000e+00 1.400000e+01
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 3.000000e+00 0.000000e+00]
 [1.000000e+00 0.000000e+00 1.033222e+06 0.000000e+00 1.000000e+01
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 2.000000e+00 0.000000e+00]
 [1.000000e+00 0.000000e+00 1.297070e+05 0.000000e+00 1.300000e+01
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  4.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00]
 [1.000000e+00 0.000000e+00 7.853000e+04 0.000000e+00 9.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 4.000000e+00 0.000000e+00]
 [1.000000e+00 0.000000e+00 1.595370e+05 0.000000e+00 1.200000e+01
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 2.000000e+00 0.000000e+00]] ['>50K' '<=50K' '>50K' '>50K' '<=50K']
MLLITE_FIT_USING_MODEL mllite_ridge_class.RidgeClassifier_ff4_OO8
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 3 4
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 4 4
('OPERATION_END_ELAPSED', 0.059, 'TRAINING')
{ ,   }
{ ,   }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_OO8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 6105, "dataset_features" : 14 },
	"classes" : [ "<=50K", ">50K" ],
	"equations" : {
		"class_1" : {
			"intercept" : 576.569092,
			"coeffs" : [ -17.053410, 0.000000, -0.002656, 0.000000, -3.340088, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.691264, 5.022571, -3.528587, 0.000000 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_census_sampled.json'

MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
MLLITE_RELOADING_MODEL mllite_ridge_class.RidgeClassifier_ff4_OO8
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W12", "signature" : "ff4_OO8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 6105, "dataset_features" : 14 },
	"classes" : [ "<=50K", ">50K" ],
	"equations" : {
		"class_1" : {
			"intercept" : 576.569092,
			"coeffs" : [ -17.053410, 0.000000, -0.002656, 0.000000, -3.340088, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.691264, 5.022571, -3.528587, 0.000000 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ "<=50K", ">50K" ],
	"dataset" : 	{
		"dataset_features" : 14,
		"dataset_rows" : 6105
	},
	"equations" : 	{
		"class_1" : 	{
			"coeffs" : [ -17.05341, 0.0, -0.002656, 0.0, -3.340088, 0.0, 0.0, 0.0, 0.0, 0.0, 2.691264, 5.022571, -3.528587, 0.0 ],
			"intercept" : 576.569092
		}
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_OO8", "version" : "2024-W12" },
	"options" :  { "alpha" : 1.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.004, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.004, 'PREDICT')
[[1. 0.]
 [1. 0.]
 [0. 1.]
 ...
 [0. 1.]
 [0. 1.]
 [1. 0.]]
(6105, 2)
(6105,) float32
MODEL_PERFS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'census_sampled', 'size': 6105, 'accuracy': 0.4507780507780508, 'auc': 0.4866527156643521}
WRITING_PERF_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_census_sampled.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'census_sampled', 'training_time_in_sec': 0.059, 'prediction_time_in_sec': 0.004}
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_census_sampled.sql'



SQL_OUT_PUT_FIRST_LINES_START
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT model_input."index" AS "index",
   576.569092 + -17.053410 * X_0 + 0.000000 * X_1 + -0.002656 * X_2 + 0.000000 * X_3 + -3.340088 * X_4 + 0.000000 * X_5 + 0.000000 * X_6 + 0.000000 * X_7 + 0.000000 * X_8 + 0.000000 * X_9 + 2.691264 * X_10 + 5.022571 * X_11 + -3.528587 * X_12 + 0.000000 * X_13 AS "Score_1", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "Lo
SQL_OUT_PUT_FIRST_LINES_END
SQL_OUT_PUT_LAST_LINES_START
ax."index" AS "index_Score",
     max(union_with_max.class) AS "arg_max_Score"
    FROM union_with_max
    WHERE union_with_max."max_Score" <= union_with_max."Score"
    GROUP BY union_with_max."index"
   ) AS "arg_max_t_Score"
   ON score_max."index" = "arg_max_t_Score"."index_Score"
 )
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."arg_max_Score" AS "Decision",
  CASE
   WHEN (arg_max_cte."arg_max_Score" = 0) THEN arg_max_cte."Proba_0"
   WHEN (arg_max_cte."arg_max_Score" = 1) THEN arg_max_cte."Proba_1"
 END AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END




COPY_TRAINING_DATA_TO_SQLITE_START
      X_0  X_1        X_2  X_3   X_4  X_5  ...  X_9  X_10  X_11  X_12  X_13   KEY
0     2.0  0.0   188950.0  0.0  14.0  0.0  ...  0.0   0.0   0.0   3.0   0.0     0
1     1.0  0.0  1033222.0  0.0  10.0  0.0  ...  0.0   0.0   0.0   2.0   0.0     1
2     1.0  0.0   129707.0  0.0  13.0  0.0  ...  0.0   4.0   0.0   1.0   0.0     2
3     1.0  0.0    78530.0  0.0   9.0  0.0  ...  0.0   0.0   0.0   4.0   0.0     3
4     1.0  0.0   159537.0  0.0  12.0  0.0  ...  0.0   0.0   0.0   2.0   0.0     4
...   ...  ...        ...  ...   ...  ...  ...  ...   ...   ...   ...   ...   ...
6100  2.0  0.0   102576.0  0.0  14.0  0.0  ...  0.0   0.0   0.0   3.0   0.0  6100
6101  2.0  0.0   314963.0  0.0  10.0  0.0  ...  0.0   0.0   0.0   2.0   0.0  6101
6102  3.0  0.0   109421.0  0.0  13.0  0.0  ...  0.0   0.0   0.0   3.0   0.0  6102
6103  1.0  0.0    36201.0  0.0  13.0  0.0  ...  0.0   0.0   0.0   3.0   0.0  6103
6104  4.0  0.0   584259.0  0.0   9.0  0.0  ...  0.0   0.0   0.0   2.0   0.0  6104

[6105 rows x 15 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
      index      Score_0       Proba_0  ...    LogProba_1  Decision  DecisionProba
0         0    16.735921  1.000000e+00  ... -3.200000e+01         0            1.0
1         1  2225.180004  1.000000e+00  ... -3.200000e+01         0            1.0
2         2  -178.829215  1.266417e-14  ... -1.265654e-14         1            1.0
3         3  -306.764862  1.266417e-14  ... -1.265654e-14         1            1.0
4         4   -88.647180  1.266417e-14  ... -1.265654e-14         1            1.0
...     ...          ...           ...  ...           ...       ...            ...
6100   6100  -212.673423  1.266417e-14  ... -1.265654e-14         1            1.0
6101   6101   334.537510  1.000000e+00  ... -3.200000e+01         0            1.0
6102   6102  -180.779781  1.266417e-14  ... -1.265654e-14         1            1.0
6103   6103  -409.358921  1.266417e-14  ... -1.265654e-14         1            1.0
6104   6104  1080.554418  1.000000e+00  ... -3.200000e+01         0            1.0

[6105 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
      index      Score_0   SQL_Proba_0  ...  Py_Proba_0  Py_Proba_1  Py_Decision
6089   6089    28.251665  1.000000e+00  ...    1.000000    0.000000        <=50K
6090   6090   142.517072  1.000000e+00  ...    1.000000    0.000000        <=50K
6091   6091  -367.338604  1.266417e-14  ...    0.000000    1.000000         >50K
6092   6092  -160.302580  1.266417e-14  ...    0.000000    1.000000         >50K
6093   6093  -214.931753  1.266417e-14  ...    0.000000    1.000000         >50K
6094   6094   -21.559747  1.266417e-14  ...    0.000000    1.000000         >50K
6095   6095  -342.500199  1.266417e-14  ...    0.000000    1.000000         >50K
6096   6096    58.190422  1.000000e+00  ...    1.000000    0.000000        <=50K
6097   6097     1.712654  9.684862e-01  ...    0.963022    0.036978        <=50K
6098   6098   -75.609212  1.266417e-14  ...    0.000000    1.000000         >50K
6099   6099   235.768579  1.000000e+00  ...    1.000000    0.000000        <=50K
6100   6100  -212.673423  1.266417e-14  ...    0.000000    1.000000         >50K
6101   6101   334.537510  1.000000e+00  ...    1.000000    0.000000        <=50K
6102   6102  -180.779781  1.266417e-14  ...    0.000000    1.000000         >50K
6103   6103  -409.358921  1.266417e-14  ...    0.000000    1.000000         >50K
6104   6104  1080.554418  1.000000e+00  ...    1.000000    0.000000        <=50K

[16 rows x 12 columns]
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
