         X_0       X_1       X_2  ...       X_8       X_9  target
0  -1.064559 -0.820872 -0.723270  ... -0.319080 -0.383915       0
1  -0.960957 -1.294560 -0.778172  ...  0.207019 -0.945521       0
2  -1.406136 -0.242116  1.301289  ... -1.426875  1.876952       1
3  -1.954561 -1.845000  0.508844  ... -1.374292  2.746056       0
4  -0.098659 -1.731538  2.272469  ...  1.740497  0.199837       1
..       ...       ...       ...  ...       ...       ...     ...
59  1.123207  0.820741  0.307790  ... -2.114189  0.674955       0
60  0.648423 -0.244695 -0.012258  ...  1.591133  0.415493       0
61 -1.537976 -0.863574 -0.339109  ... -0.932955 -0.606641       0
62  1.719474 -0.751864 -1.224318  ... -0.611486  0.366529       0
63 -0.263412  1.788292  0.201192  ...  1.138708 -1.061928       0

[64 rows x 11 columns]
MLLITE_MODEL_SET_OPTIONS RidgeClassifier {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { "alpha" : 0.0000001,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
('OPERATION_START', 'TRAINING')
[[-1.0645586  -0.8208718  -0.72327    -0.09642018 -0.40463343 -0.81522477
  -0.8386918   0.65200984 -0.31908    -0.3839149 ]
 [-0.9609572  -1.2945602  -0.77817184  0.8359748  -1.0189681  -0.12086504
  -0.68072116 -0.5189585   0.20701888 -0.9455213 ]
 [-1.4061359  -0.24211647  1.301289   -0.49436462  1.0264262   1.0800456
   1.3956257  -1.0432675  -1.426875    1.8769516 ]
 [-1.9545612  -1.8449999   0.5088439  -0.224022    0.66320896  0.0830382
   0.446295    0.53221494 -1.3742915   2.7460556 ]
 [-0.09865901 -1.7315376   2.2724695   0.11809641  1.0834117   2.8048902
   2.7064822   0.84583855  1.7404972   0.19983661]] [0 0 1 0 1]
MLLITE_FIT_USING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 3 4
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 4 4
('OPERATION_END_ELAPSED', 0.012, 'TRAINING')
{ "alpha" : 0.0000001,   }
{ "alpha" : 0.0000001,   }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W13", "signature" : "ff4_il8"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 10 },
	"classes" : [ 0, 1 ],
	"equations" : {
		"class_1" : {
			"intercept" : 0.008188,
			"coeffs" : [ 0.045327, 0.040248, 0.139798, -0.093510, -0.208380, 0.294959, 0.232158, -0.013181, -0.045770, -0.023052 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_10_small_option_1.json'

MLLITE_MODEL_SET_OPTIONS RidgeClassifier {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { "alpha" : 0.0000001,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
MLLITE_RELOADING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W13", "signature" : "ff4_il8"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 10 },
	"classes" : [ 0, 1 ],
	"equations" : {
		"class_1" : {
			"intercept" : 0.008188,
			"coeffs" : [ 0.045327, 0.040248, 0.139798, -0.093510, -0.208380, 0.294959, 0.232158, -0.013181, -0.045770, -0.023052 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1 ],
	"dataset" : 	{
		"dataset_features" : 10,
		"dataset_rows" : 64
	},
	"equations" : 	{
		"class_1" : 	{
			"coeffs" : [ 0.045327, 0.040248, 0.139798, -0.09351, -0.20838, 0.294959, 0.232158, -0.013181, -0.04577, -0.023052 ],
			"intercept" : 0.008188
		}
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_il8", "version" : "2024-W13" },
	"options" :  { "alpha" : 0.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0.6227 0.3773]
 [0.5589 0.4411]
 [0.3481 0.6519]
 [0.52   0.48  ]
 [0.2018 0.7982]
 [0.585  0.415 ]
 [0.4446 0.5554]
 [0.2075 0.7925]
 [0.7717 0.2283]
 [0.6747 0.3253]
 [0.6691 0.3309]
 [0.3825 0.6175]
 [0.6407 0.3593]
 [0.2395 0.7605]
 [0.5006 0.4994]
 [0.3693 0.6307]
 [0.1962 0.8038]
 [0.4267 0.5733]
 [0.3694 0.6306]
 [0.1906 0.8094]
 [0.4071 0.5929]
 [0.6574 0.3426]
 [0.2519 0.7481]
 [0.425  0.575 ]
 [0.457  0.543 ]
 [0.5526 0.4474]
 [0.3639 0.6361]
 [0.7004 0.2996]
 [0.3    0.7   ]
 [0.4159 0.5841]
 [0.2618 0.7382]
 [0.4994 0.5006]
 [0.3784 0.6216]
 [0.3089 0.6911]
 [0.3817 0.6183]
 [0.4143 0.5857]
 [0.2014 0.7986]
 [0.6937 0.3063]
 [0.5639 0.4361]
 [0.6856 0.3144]
 [0.5448 0.4552]
 [0.6298 0.3702]
 [0.5192 0.4808]
 [0.8292 0.1708]
 [0.6763 0.3237]
 [0.5898 0.4102]
 [0.4272 0.5728]
 [0.7539 0.2461]
 [0.3514 0.6486]
 [0.623  0.377 ]
 [0.6966 0.3034]
 [0.6454 0.3546]
 [0.7329 0.2671]
 [0.7624 0.2376]
 [0.5432 0.4568]
 [0.4262 0.5738]
 [0.58   0.42  ]
 [0.5376 0.4624]
 [0.6254 0.3746]
 [0.5922 0.4078]
 [0.5297 0.4703]
 [0.4769 0.5231]
 [0.5323 0.4677]
 [0.6257 0.3743]]
(64, 2)
(64,) float32
MODEL_PERFS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': '{"alpha" : 0.0000001}', 'dataset': 'BinaryClass_10_small', 'size': 64, 'accuracy': 0.890625, 'auc': 0.923828125}
WRITING_PERF_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_10_small_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': '{"alpha" : 0.0000001}', 'dataset': 'BinaryClass_10_small', 'training_time_in_sec': 0.012, 'prediction_time_in_sec': 0.0}
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_10_small_option_1_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('BinaryClass_10_small', 'RidgeClassifier', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT t."index" AS "index",
   -0.5 * ( 0.008188 + 0.045327 * t."X_0" + 0.040248 * t."X_1" + 0.139798 * t."X_2" + -0.093510 * t."X_3" + -0.208380 * t."X_4" + 0.294959 * t."X_5" + 0.232158 * t."X_6" + -0.013181 * t."X_7" + -0.045770 * t."X_8" + -0.023052 * t."X_9" ) AS "Score_0",
   CAST(NULL AS FLOAT) AS "Proba_0",
   CAST(NULL AS FLOAT) AS "LogProba_0",
   0.5 * ( 0.008188 + 0.045327 * t."X_0" + 0.040248 * t."X_1" + 0.139798 * t."X_2" + -0.093510 * t."X_3" + -0.208380 * t."X_4" + 0.294959 * t."X_5" + 0.232158 * t."X_6" + -
SQL_OUT_PUT_FIRST_LINES_END ('BinaryClass_10_small', 'RidgeClassifier', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('BinaryClass_10_small', 'RidgeClassifier', 'duckdb')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('BinaryClass_10_small', 'RidgeClassifier', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 64 entries, 0 to 63
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     64 non-null     float32
 1   X_1     64 non-null     float32
 2   X_2     64 non-null     float32
 3   X_3     64 non-null     float32
 4   X_4     64 non-null     float32
 5   X_5     64 non-null     float32
 6   X_6     64 non-null     float32
 7   X_7     64 non-null     float32
 8   X_8     64 non-null     float32
 9   X_9     64 non-null     float32
dtypes: float32(10)
memory usage: 3.0 KB
            X_0       X_1       X_2  ...       X_7       X_8       X_9
index                                ...                              
0     -1.064559 -0.820872 -0.723270  ...  0.652010 -0.319080 -0.383915
1     -0.960957 -1.294560 -0.778172  ... -0.518959  0.207019 -0.945521
2     -1.406136 -0.242116  1.301289  ... -1.043267 -1.426875  1.876952
3     -1.954561 -1.845000  0.508844  ...  0.532215 -1.374292  2.746056
4     -0.098659 -1.731538  2.272470  ...  0.845839  1.740497  0.199837
...         ...       ...       ...  ...       ...       ...       ...
59     1.123207  0.820741  0.307790  ... -0.348400 -2.114189  0.674955
60     0.648423 -0.244695 -0.012258  ...  0.520360  1.591133  0.415493
61    -1.537976 -0.863574 -0.339109  ... -1.807600 -0.932955 -0.606641
62     1.719474 -0.751864 -1.224318  ...  0.148196 -0.611486  0.366529
63    -0.263412  1.788292  0.201192  ... -0.413903  1.138708 -1.061929

[64 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 64 entries, 0 to 63
Data columns (total 9 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          64 non-null     int64  
 1   Score_0        64 non-null     float64
 2   Proba_0        64 non-null     float64
 3   LogProba_0     64 non-null     float64
 4   Score_1        64 non-null     float64
 5   Proba_1        64 non-null     float64
 6   LogProba_1     64 non-null     float64
 7   Decision       64 non-null     int64  
 8   DecisionProba  64 non-null     float64
dtypes: float64(7), int64(2)
memory usage: 4.6 KB
    index   Score_0   Proba_0  ...  LogProba_1  Decision  DecisionProba
0       0  0.250594  0.622739  ...   -0.974817         0       0.622739
1       1  0.118311  0.558881  ...   -0.818441         0       0.558881
2       2 -0.313667  0.348115  ...   -0.427888         1       0.651885
3       3  0.040046  0.520012  ...   -0.733995         0       0.520012
4       4 -0.687574  0.201789  ...   -0.225383         1       0.798211
..    ...       ...       ...  ...         ...       ...            ...
59     59  0.186536  0.592201  ...   -0.896981         0       0.592201
60     60  0.059483  0.529706  ...   -0.754398         0       0.529706
61     61 -0.046263  0.476885  ...   -0.647954         1       0.523115
62     62  0.064758  0.532334  ...   -0.760000         0       0.532334
63     63  0.256888  0.625691  ...   -0.982674         0       0.625691

[64 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
    index   Score_0  SQL_Proba_0  ...  Py_Proba_0  Py_Proba_1  Py_Decision
48     48 -0.306352     0.351443  ...    0.351442    0.648558            1
49     49  0.251164     0.623006  ...    0.623006    0.376994            0
50     50  0.415515     0.696573  ...    0.696573    0.303427            0
51     51  0.299532     0.645442  ...    0.645442    0.354558            0
52     52  0.504578     0.732855  ...    0.732855    0.267145            0
53     53  0.582956     0.762405  ...    0.762405    0.237595            0
54     54  0.086529     0.543157  ...    0.543157    0.456843            0
55     55 -0.148628     0.426228  ...    0.426228    0.573772            1
56     56  0.161285     0.579950  ...    0.579950    0.420050            0
57     57  0.075395     0.537626  ...    0.537626    0.462374            0
58     58  0.256253     0.625394  ...    0.625394    0.374606            0
59     59  0.186536     0.592201  ...    0.592201    0.407799            0
60     60  0.059483     0.529706  ...    0.529706    0.470294            0
61     61 -0.046263     0.476885  ...    0.476885    0.523115            1
62     62  0.064758     0.532334  ...    0.532334    0.467666            0
63     63  0.256888     0.625691  ...    0.625691    0.374309            0

[16 rows x 12 columns]
MLLITE_CLASS_SQL_ERROR ('BinaryClass_10_small', 'RidgeClassifier', 'duckdb') ('Py_Proba_0', 'SQL_Proba_0') 1.996479663383434e-07
    Py_Proba_0  SQL_Proba_0   SQL_Error_0
48    0.351442     0.351443 -3.340606e-07
49    0.623006     0.623006  1.831859e-07
50    0.696573     0.696573  3.520274e-07
51    0.645442     0.645442  8.534314e-08
52    0.732855     0.732855  9.552185e-09
53    0.762405     0.762405 -7.974508e-08
54    0.543157     0.543157  2.255336e-07
55    0.426228     0.426228 -2.958897e-08
56    0.579950     0.579950 -7.873902e-08
57    0.537626     0.537626  2.586981e-08
58    0.625394     0.625394 -6.861023e-08
59    0.592201     0.592201 -3.080694e-07
60    0.529706     0.529706 -3.661101e-07
61    0.476885     0.476885  1.949017e-07
62    0.532334     0.532334  2.055993e-07
63    0.625691     0.625691 -4.780171e-07
MLLITE_CLASS_SQL_ERROR ('BinaryClass_10_small', 'RidgeClassifier', 'duckdb') ('Py_Proba_1', 'SQL_Proba_1') 1.9631889931022092e-07
    Py_Proba_1  SQL_Proba_1   SQL_Error_1
48    0.648558     0.648557  3.042583e-07
49    0.376994     0.376994 -1.533836e-07
50    0.303427     0.303427 -2.924228e-07
51    0.354558     0.354558 -5.554082e-08
52    0.267145     0.267145 -6.915683e-08
53    0.237595     0.237595  4.994275e-08
54    0.456843     0.456843 -2.851382e-07
55    0.573772     0.573772  8.919361e-08
56    0.420050     0.420050 -1.066795e-08
57    0.462374     0.462374 -5.567213e-08
58    0.374606     0.374606  3.880791e-08
59    0.407799     0.407799  3.080694e-07
60    0.470294     0.470294  3.661101e-07
61    0.523115     0.523115 -1.650993e-07
62    0.467666     0.467666 -2.354017e-07
63    0.374309     0.374309  5.078194e-07
MLLITE_CLASS_SQL_EXECUTION_STATUS ('BinaryClass_10_small', 'RidgeClassifier', 'duckdb', 'Success')
    Py_Decision  SQL_Decision
48            1             1
49            0             0
50            0             0
51            0             0
52            0             0
53            0             0
54            0             0
55            1             1
56            0             0
57            0             0
58            0             0
59            0             0
60            0             0
61            1             1
62            0             0
63            0             0
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_10_small_option_1_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('BinaryClass_10_small', 'RidgeClassifier', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT t."index" AS "index",
   -0.5 * ( 0.008188 + 0.045327 * t."X_0" + 0.040248 * t."X_1" + 0.139798 * t."X_2" + -0.093510 * t."X_3" + -0.208380 * t."X_4" + 0.294959 * t."X_5" + 0.232158 * t."X_6" + -0.013181 * t."X_7" + -0.045770 * t."X_8" + -0.023052 * t."X_9" ) AS "Score_0",
   CAST(NULL AS FLOAT) AS "Proba_0",
   CAST(NULL AS FLOAT) AS "LogProba_0",
   0.5 * ( 0.008188 + 0.045327 * t."X_0" + 0.040248 * t."X_1" + 0.139798 * t."X_2" + -0.093510 * t."X_3" + -0.208380 * t."X_4" + 0.294959 * t."X_5" + 0.232158 * t."X_6" + -
SQL_OUT_PUT_FIRST_LINES_END ('BinaryClass_10_small', 'RidgeClassifier', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('BinaryClass_10_small', 'RidgeClassifier', 'sqlite')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('BinaryClass_10_small', 'RidgeClassifier', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 64 entries, 0 to 63
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     64 non-null     float32
 1   X_1     64 non-null     float32
 2   X_2     64 non-null     float32
 3   X_3     64 non-null     float32
 4   X_4     64 non-null     float32
 5   X_5     64 non-null     float32
 6   X_6     64 non-null     float32
 7   X_7     64 non-null     float32
 8   X_8     64 non-null     float32
 9   X_9     64 non-null     float32
dtypes: float32(10)
memory usage: 3.0 KB
            X_0       X_1       X_2  ...       X_7       X_8       X_9
index                                ...                              
0     -1.064559 -0.820872 -0.723270  ...  0.652010 -0.319080 -0.383915
1     -0.960957 -1.294560 -0.778172  ... -0.518959  0.207019 -0.945521
2     -1.406136 -0.242116  1.301289  ... -1.043267 -1.426875  1.876952
3     -1.954561 -1.845000  0.508844  ...  0.532215 -1.374292  2.746056
4     -0.098659 -1.731538  2.272470  ...  0.845839  1.740497  0.199837
...         ...       ...       ...  ...       ...       ...       ...
59     1.123207  0.820741  0.307790  ... -0.348400 -2.114189  0.674955
60     0.648423 -0.244695 -0.012258  ...  0.520360  1.591133  0.415493
61    -1.537976 -0.863574 -0.339109  ... -1.807600 -0.932955 -0.606641
62     1.719474 -0.751864 -1.224318  ...  0.148196 -0.611486  0.366529
63    -0.263412  1.788292  0.201192  ... -0.413903  1.138708 -1.061929

[64 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 64 entries, 0 to 63
Data columns (total 9 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          64 non-null     int64  
 1   Score_0        64 non-null     float64
 2   Proba_0        64 non-null     float64
 3   LogProba_0     64 non-null     float64
 4   Score_1        64 non-null     float64
 5   Proba_1        64 non-null     float64
 6   LogProba_1     64 non-null     float64
 7   Decision       64 non-null     int64  
 8   DecisionProba  64 non-null     float64
dtypes: float64(7), int64(2)
memory usage: 4.6 KB
    index   Score_0   Proba_0  ...  LogProba_1  Decision  DecisionProba
0       0  0.250594  0.622739  ...   -0.974817         0       0.622739
1       1  0.118311  0.558881  ...   -0.818441         0       0.558881
2       2 -0.313667  0.348116  ...   -0.427888         1       0.651884
3       3  0.040046  0.520012  ...   -0.733995         0       0.520012
4       4 -0.687574  0.201789  ...   -0.225383         1       0.798211
..    ...       ...       ...  ...         ...       ...            ...
59     59  0.186536  0.592201  ...   -0.896981         0       0.592201
60     60  0.059483  0.529706  ...   -0.754398         0       0.529706
61     61 -0.046263  0.476885  ...   -0.647954         1       0.523115
62     62  0.064758  0.532334  ...   -0.760000         0       0.532334
63     63  0.256888  0.625691  ...   -0.982674         0       0.625691

[64 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
    index   Score_0  SQL_Proba_0  ...  Py_Proba_0  Py_Proba_1  Py_Decision
48     48 -0.306352     0.351443  ...    0.351442    0.648558            1
49     49  0.251164     0.623006  ...    0.623006    0.376994            0
50     50  0.415515     0.696573  ...    0.696573    0.303427            0
51     51  0.299532     0.645442  ...    0.645442    0.354558            0
52     52  0.504578     0.732855  ...    0.732855    0.267145            0
53     53  0.582956     0.762405  ...    0.762405    0.237595            0
54     54  0.086529     0.543157  ...    0.543157    0.456843            0
55     55 -0.148628     0.426228  ...    0.426228    0.573772            1
56     56  0.161285     0.579950  ...    0.579950    0.420050            0
57     57  0.075395     0.537626  ...    0.537626    0.462374            0
58     58  0.256253     0.625394  ...    0.625394    0.374606            0
59     59  0.186536     0.592201  ...    0.592201    0.407799            0
60     60  0.059483     0.529706  ...    0.529706    0.470294            0
61     61 -0.046263     0.476885  ...    0.476885    0.523115            1
62     62  0.064758     0.532334  ...    0.532334    0.467666            0
63     63  0.256888     0.625691  ...    0.625691    0.374309            0

[16 rows x 12 columns]
MLLITE_CLASS_SQL_ERROR ('BinaryClass_10_small', 'RidgeClassifier', 'sqlite') ('Py_Proba_0', 'SQL_Proba_0') 1.9994082946098515e-07
    Py_Proba_0  SQL_Proba_0   SQL_Error_0
48    0.351442     0.351443 -3.487117e-07
49    0.623006     0.623006  1.924167e-07
50    0.696573     0.696573  3.435612e-07
51    0.645442     0.645442  8.752772e-08
52    0.732855     0.732855  4.427321e-08
53    0.762405     0.762405 -6.458675e-08
54    0.543157     0.543157  2.264076e-07
55    0.426228     0.426228 -3.160319e-08
56    0.579950     0.579950 -7.166620e-08
57    0.537626     0.537626  2.881123e-08
58    0.625394     0.625394 -5.130065e-08
59    0.592201     0.592201 -3.128658e-07
60    0.529706     0.529706 -3.669158e-07
61    0.476885     0.476885  1.942726e-07
62    0.532334     0.532334  2.027960e-07
63    0.625691     0.625691 -4.783334e-07
MLLITE_CLASS_SQL_ERROR ('BinaryClass_10_small', 'RidgeClassifier', 'sqlite') ('Py_Proba_1', 'SQL_Proba_1') 1.973090788440733e-07
    Py_Proba_1  SQL_Proba_1   SQL_Error_1
48    0.648558     0.648557  3.189094e-07
49    0.376994     0.376994 -1.626144e-07
50    0.303427     0.303427 -2.839565e-07
51    0.354558     0.354558 -5.772540e-08
52    0.267145     0.267145 -1.038779e-07
53    0.237595     0.237595  3.478443e-08
54    0.456843     0.456843 -2.860122e-07
55    0.573772     0.573772  9.120783e-08
56    0.420050     0.420050 -1.774077e-08
57    0.462374     0.462374 -5.861355e-08
58    0.374606     0.374606  2.149833e-08
59    0.407799     0.407799  3.128658e-07
60    0.470294     0.470294  3.669158e-07
61    0.523115     0.523115 -1.644702e-07
62    0.467666     0.467666 -2.325983e-07
63    0.374309     0.374309  5.081357e-07
MLLITE_CLASS_SQL_EXECUTION_STATUS ('BinaryClass_10_small', 'RidgeClassifier', 'sqlite', 'Success')
    Py_Decision  SQL_Decision
48            1             1
49            0             0
50            0             0
51            0             0
52            0             0
53            0             0
54            0             0
55            1             1
56            0             0
57            0             0
58            0             0
59            0             0
60            0             0
61            1             1
62            0             0
63            0             0
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_10_small_option_1_pgsql.sql'



SQL_OUT_PUT_FIRST_LINES_START ('BinaryClass_10_small', 'RidgeClassifier', 'pgsql')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT t."index" AS "index",
   -0.5 * ( 0.008188 + 0.045327 * t."X_0" + 0.040248 * t."X_1" + 0.139798 * t."X_2" + -0.093510 * t."X_3" + -0.208380 * t."X_4" + 0.294959 * t."X_5" + 0.232158 * t."X_6" + -0.013181 * t."X_7" + -0.045770 * t."X_8" + -0.023052 * t."X_9" ) AS "Score_0",
   CAST(NULL AS FLOAT) AS "Proba_0",
   CAST(NULL AS FLOAT) AS "LogProba_0",
   0.5 * ( 0.008188 + 0.045327 * t."X_0" + 0.040248 * t."X_1" + 0.139798 * t."X_2" + -0.093510 * t."X_3" + -0.208380 * t."X_4" + 0.294959 * t."X_5" + 0.232158 * t."X_6" + -
SQL_OUT_PUT_FIRST_LINES_END ('BinaryClass_10_small', 'RidgeClassifier', 'pgsql')
SQL_OUT_PUT_LAST_LINES_START ('BinaryClass_10_small', 'RidgeClassifier', 'pgsql')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('BinaryClass_10_small', 'RidgeClassifier', 'pgsql') 




COPY_TRAINING_DATA_TO_SQLITE_START
