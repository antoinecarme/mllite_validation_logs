         X_0       X_1       X_2  ...       X_8       X_9  target
0  -1.064559 -0.820872 -0.723270  ... -0.319080 -0.383915       0
1  -0.960957 -1.294560 -0.778172  ...  0.207019 -0.945521       0
2  -1.406136 -0.242116  1.301289  ... -1.426875  1.876952       1
3  -1.954561 -1.845000  0.508844  ... -1.374292  2.746056       0
4  -0.098659 -1.731538  2.272469  ...  1.740497  0.199837       1
..       ...       ...       ...  ...       ...       ...     ...
59  1.123207  0.820741  0.307790  ... -2.114189  0.674955       0
60  0.648423 -0.244695 -0.012258  ...  1.591133  0.415493       0
61 -1.537976 -0.863574 -0.339109  ... -0.932955 -0.606641       0
62  1.719474 -0.751864 -1.224318  ... -0.611486  0.366529       0
63 -0.263412  1.788292  0.201192  ...  1.138708 -1.061928       0

[64 rows x 11 columns]
MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
('OPERATION_START', 'TRAINING')
[[-1.0645586  -0.8208718  -0.72327    -0.09642018 -0.40463343 -0.81522477
  -0.8386918   0.65200984 -0.31908    -0.3839149 ]
 [-0.9609572  -1.2945602  -0.77817184  0.8359748  -1.0189681  -0.12086504
  -0.68072116 -0.5189585   0.20701888 -0.9455213 ]
 [-1.4061359  -0.24211647  1.301289   -0.49436462  1.0264262   1.0800456
   1.3956257  -1.0432675  -1.426875    1.8769516 ]
 [-1.9545612  -1.8449999   0.5088439  -0.224022    0.66320896  0.0830382
   0.446295    0.53221494 -1.3742915   2.7460556 ]
 [-0.09865901 -1.7315376   2.2724695   0.11809641  1.0834117   2.8048902
   2.7064822   0.84583855  1.7404972   0.19983661]] [0 0 1 0 1]
MLLITE_FIT_USING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 3 4
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 4 4
('OPERATION_END_ELAPSED', 0.007, 'TRAINING')
{ ,   }
{ ,   }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W13", "signature" : "ff4_il8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 10 },
	"classes" : [ 0, 1 ],
	"equations" : {
		"class_1" : {
			"intercept" : 0.007230,
			"coeffs" : [ 0.044161, 0.038447, 0.138790, -0.093395, -0.204561, 0.291774, 0.228267, -0.013539, -0.041317, -0.021006 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_10_small.json'

MLLITE_MODEL_SET_OPTIONS RidgeClassifier None
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { ,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
MLLITE_RELOADING_MODEL mllite_ridge_class.RidgeClassifier_ff4_il8
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W13", "signature" : "ff4_il8"},
	"options" : { "alpha" : 1.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 64, "dataset_features" : 10 },
	"classes" : [ 0, 1 ],
	"equations" : {
		"class_1" : {
			"intercept" : 0.007230,
			"coeffs" : [ 0.044161, 0.038447, 0.138790, -0.093395, -0.204561, 0.291774, 0.228267, -0.013539, -0.041317, -0.021006 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ 0, 1 ],
	"dataset" : 	{
		"dataset_features" : 10,
		"dataset_rows" : 64
	},
	"equations" : 	{
		"class_1" : 	{
			"coeffs" : [ 0.044161, 0.038447, 0.13879, -0.093395, -0.204561, 0.291774, 0.228267, -0.013539, -0.041317, -0.021006 ],
			"intercept" : 0.00723
		}
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_il8", "version" : "2024-W13" },
	"options" :  { "alpha" : 1.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[0.6217 0.3783]
 [0.5585 0.4415]
 [0.3498 0.6502]
 [0.519  0.481 ]
 [0.203  0.797 ]
 [0.5827 0.4173]
 [0.4457 0.5543]
 [0.2089 0.7911]
 [0.7692 0.2308]
 [0.6721 0.3279]
 [0.6683 0.3317]
 [0.3829 0.6171]
 [0.6385 0.3615]
 [0.2425 0.7575]
 [0.5003 0.4997]
 [0.37   0.63  ]
 [0.1984 0.8016]
 [0.4276 0.5724]
 [0.37   0.63  ]
 [0.1938 0.8062]
 [0.4084 0.5916]
 [0.6558 0.3442]
 [0.256  0.744 ]
 [0.427  0.573 ]
 [0.4585 0.5415]
 [0.5521 0.4479]
 [0.3648 0.6352]
 [0.6995 0.3005]
 [0.3012 0.6988]
 [0.4167 0.5833]
 [0.2643 0.7357]
 [0.4998 0.5002]
 [0.3787 0.6213]
 [0.3105 0.6895]
 [0.3827 0.6173]
 [0.4147 0.5853]
 [0.2024 0.7976]
 [0.6925 0.3075]
 [0.5641 0.4359]
 [0.6828 0.3172]
 [0.5444 0.4556]
 [0.6294 0.3706]
 [0.5177 0.4823]
 [0.8267 0.1733]
 [0.6751 0.3249]
 [0.5872 0.4128]
 [0.4275 0.5725]
 [0.7521 0.2479]
 [0.3535 0.6465]
 [0.6207 0.3793]
 [0.6955 0.3045]
 [0.6444 0.3556]
 [0.7312 0.2688]
 [0.7599 0.2401]
 [0.5419 0.4581]
 [0.4291 0.5709]
 [0.5794 0.4206]
 [0.5363 0.4637]
 [0.6252 0.3748]
 [0.5932 0.4068]
 [0.5284 0.4716]
 [0.4781 0.5219]
 [0.5328 0.4672]
 [0.6239 0.3761]]
(64, 2)
(64,) float32
MODEL_PERFS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'BinaryClass_10_small', 'size': 64, 'accuracy': 0.890625, 'auc': 0.923828125}
WRITING_PERF_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_10_small.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': None, 'dataset': 'BinaryClass_10_small', 'training_time_in_sec': 0.007, 'prediction_time_in_sec': 0.0}
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_10_small_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('BinaryClass_10_small', 'RidgeClassifier', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT t."index" AS "index",
   -0.5 * ( 0.007230 + 0.044161 * t."X_0" + 0.038447 * t."X_1" + 0.138790 * t."X_2" + -0.093395 * t."X_3" + -0.204561 * t."X_4" + 0.291774 * t."X_5" + 0.228267 * t."X_6" + -0.013539 * t."X_7" + -0.041317 * t."X_8" + -0.021006 * t."X_9" ) AS "Score_0",
   CAST(NULL AS FLOAT) AS "Proba_0",
   CAST(NULL AS FLOAT) AS "LogProba_0",
   0.5 * ( 0.007230 + 0.044161 * t."X_0" + 0.038447 * t."X_1" + 0.138790 * t."X_2" + -0.093395 * t."X_3" + -0.204561 * t."X_4" + 0.291774 * t."X_5" + 0.228267 * t."X_6" + -
SQL_OUT_PUT_FIRST_LINES_END ('BinaryClass_10_small', 'RidgeClassifier', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('BinaryClass_10_small', 'RidgeClassifier', 'duckdb')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('BinaryClass_10_small', 'RidgeClassifier', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 64 entries, 0 to 63
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     64 non-null     float32
 1   X_1     64 non-null     float32
 2   X_2     64 non-null     float32
 3   X_3     64 non-null     float32
 4   X_4     64 non-null     float32
 5   X_5     64 non-null     float32
 6   X_6     64 non-null     float32
 7   X_7     64 non-null     float32
 8   X_8     64 non-null     float32
 9   X_9     64 non-null     float32
dtypes: float32(10)
memory usage: 3.0 KB
            X_0       X_1       X_2  ...       X_7       X_8       X_9
index                                ...                              
0     -1.064559 -0.820872 -0.723270  ...  0.652010 -0.319080 -0.383915
1     -0.960957 -1.294560 -0.778172  ... -0.518959  0.207019 -0.945521
2     -1.406136 -0.242116  1.301289  ... -1.043267 -1.426875  1.876952
3     -1.954561 -1.845000  0.508844  ...  0.532215 -1.374292  2.746056
4     -0.098659 -1.731538  2.272470  ...  0.845839  1.740497  0.199837
...         ...       ...       ...  ...       ...       ...       ...
59     1.123207  0.820741  0.307790  ... -0.348400 -2.114189  0.674955
60     0.648423 -0.244695 -0.012258  ...  0.520360  1.591133  0.415493
61    -1.537976 -0.863574 -0.339109  ... -1.807600 -0.932955 -0.606641
62     1.719474 -0.751864 -1.224318  ...  0.148196 -0.611486  0.366529
63    -0.263412  1.788292  0.201192  ... -0.413903  1.138708 -1.061929

[64 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 64 entries, 0 to 63
Data columns (total 9 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          64 non-null     int64  
 1   Score_0        64 non-null     float64
 2   Proba_0        64 non-null     float64
 3   LogProba_0     64 non-null     float64
 4   Score_1        64 non-null     float64
 5   Proba_1        64 non-null     float64
 6   LogProba_1     64 non-null     float64
 7   Decision       64 non-null     int64  
 8   DecisionProba  64 non-null     float64
dtypes: float64(7), int64(2)
memory usage: 4.6 KB
    index   Score_0   Proba_0  ...  LogProba_1  Decision  DecisionProba
0       0  0.248417  0.621715  ...   -0.972107         0       0.621715
1       1  0.117467  0.558465  ...   -0.817497         0       0.558465
2       2 -0.309996  0.349783  ...   -0.430450         1       0.650217
3       3  0.038073  0.519027  ...   -0.731945         0       0.519027
4       4 -0.683838  0.202996  ...   -0.226895         1       0.797004
..    ...       ...       ...  ...         ...       ...            ...
59     59  0.188614  0.593204  ...   -0.899444         0       0.593204
60     60  0.056799  0.528369  ...   -0.751559         0       0.528369
61     61 -0.043798  0.478115  ...   -0.650308         1       0.521885
62     62  0.065728  0.532817  ...   -0.761034         0       0.532817
63     63  0.253042  0.623888  ...   -0.977869         0       0.623888

[64 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
    index   Score_0  SQL_Proba_0  ...  Py_Proba_0  Py_Proba_1  Py_Decision
48     48 -0.301876     0.353486  ...    0.353486    0.646514            1
49     49  0.246319     0.620728  ...    0.620728    0.379272            0
50     50  0.412920     0.695475  ...    0.695475    0.304525            0
51     51  0.297200     0.644374  ...    0.644374    0.355626            0
52     52  0.500377     0.731207  ...    0.731207    0.268793            0
53     53  0.576150     0.759931  ...    0.759931    0.240069            0
54     54  0.083984     0.541893  ...    0.541893    0.458107            0
55     55 -0.142724     0.429119  ...    0.429119    0.570881            1
56     56  0.160242     0.579442  ...    0.579442    0.420558            0
57     57  0.072648     0.536260  ...    0.536260    0.463740            0
58     58  0.255829     0.625195  ...    0.625195    0.374805            0
59     59  0.188614     0.593204  ...    0.593204    0.406796            0
60     60  0.056799     0.528369  ...    0.528369    0.471631            0
61     61 -0.043798     0.478115  ...    0.478115    0.521885            1
62     62  0.065728     0.532817  ...    0.532817    0.467183            0
63     63  0.253042     0.623888  ...    0.623888    0.376112            0

[16 rows x 12 columns]
MLLITE_CLASS_SQL_ERROR ('BinaryClass_10_small', 'RidgeClassifier', 'duckdb') ('Py_Proba_0', 'SQL_Proba_0') 9.319398230596757e-08
    Py_Proba_0  SQL_Proba_0   SQL_Error_0
48    0.353486     0.353486  1.465126e-07
49    0.620728     0.620728 -1.221223e-07
50    0.695475     0.695475  7.961583e-08
51    0.644374     0.644374  1.447663e-07
52    0.731207     0.731207  1.293277e-08
53    0.759931     0.759931  4.062692e-08
54    0.541893     0.541893 -1.074521e-07
55    0.429119     0.429119 -1.141848e-07
56    0.579442     0.579442 -7.923429e-08
57    0.536260     0.536260  1.663108e-08
58    0.625195     0.625195 -1.143244e-07
59    0.593204     0.593204 -4.958193e-08
60    0.528369     0.528369 -6.499739e-08
61    0.478115     0.478115  1.773592e-07
62    0.532817     0.532817  1.269294e-07
63    0.623888     0.623888 -3.935286e-08
MLLITE_CLASS_SQL_ERROR ('BinaryClass_10_small', 'RidgeClassifier', 'duckdb') ('Py_Proba_1', 'SQL_Proba_1') 9.348821631421922e-08
    Py_Proba_1  SQL_Proba_1   SQL_Error_1
48    0.646514     0.646514 -1.465126e-07
49    0.379272     0.379272  1.221223e-07
50    0.304525     0.304525 -1.094182e-07
51    0.355626     0.355626 -1.149640e-07
52    0.268793     0.268793  1.686955e-08
53    0.240069     0.240069 -4.062692e-08
54    0.458107     0.458107  1.372544e-07
55    0.570881     0.570881  1.141848e-07
56    0.420558     0.420558  7.923429e-08
57    0.463740     0.463740 -7.623573e-08
58    0.374805     0.374805  1.441267e-07
59    0.406796     0.406796  7.938425e-08
60    0.471631     0.471631  6.499739e-08
61    0.521885     0.521885 -1.177546e-07
62    0.467183     0.467183 -1.567318e-07
63    0.376112     0.376112  9.895751e-08
MLLITE_CLASS_SQL_EXECUTION_STATUS ('BinaryClass_10_small', 'RidgeClassifier', 'duckdb', 'Success')
    Py_Decision  SQL_Decision
48            1             1
49            0             0
50            0             0
51            0             0
52            0             0
53            0             0
54            0             0
55            1             1
56            0             0
57            0             0
58            0             0
59            0             0
60            0             0
61            1             1
62            0             0
63            0             0
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_10_small_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('BinaryClass_10_small', 'RidgeClassifier', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT t."index" AS "index",
   -0.5 * ( 0.007230 + 0.044161 * t."X_0" + 0.038447 * t."X_1" + 0.138790 * t."X_2" + -0.093395 * t."X_3" + -0.204561 * t."X_4" + 0.291774 * t."X_5" + 0.228267 * t."X_6" + -0.013539 * t."X_7" + -0.041317 * t."X_8" + -0.021006 * t."X_9" ) AS "Score_0",
   CAST(NULL AS FLOAT) AS "Proba_0",
   CAST(NULL AS FLOAT) AS "LogProba_0",
   0.5 * ( 0.007230 + 0.044161 * t."X_0" + 0.038447 * t."X_1" + 0.138790 * t."X_2" + -0.093395 * t."X_3" + -0.204561 * t."X_4" + 0.291774 * t."X_5" + 0.228267 * t."X_6" + -
SQL_OUT_PUT_FIRST_LINES_END ('BinaryClass_10_small', 'RidgeClassifier', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('BinaryClass_10_small', 'RidgeClassifier', 'sqlite')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('BinaryClass_10_small', 'RidgeClassifier', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 64 entries, 0 to 63
Data columns (total 10 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     64 non-null     float32
 1   X_1     64 non-null     float32
 2   X_2     64 non-null     float32
 3   X_3     64 non-null     float32
 4   X_4     64 non-null     float32
 5   X_5     64 non-null     float32
 6   X_6     64 non-null     float32
 7   X_7     64 non-null     float32
 8   X_8     64 non-null     float32
 9   X_9     64 non-null     float32
dtypes: float32(10)
memory usage: 3.0 KB
            X_0       X_1       X_2  ...       X_7       X_8       X_9
index                                ...                              
0     -1.064559 -0.820872 -0.723270  ...  0.652010 -0.319080 -0.383915
1     -0.960957 -1.294560 -0.778172  ... -0.518959  0.207019 -0.945521
2     -1.406136 -0.242116  1.301289  ... -1.043267 -1.426875  1.876952
3     -1.954561 -1.845000  0.508844  ...  0.532215 -1.374292  2.746056
4     -0.098659 -1.731538  2.272470  ...  0.845839  1.740497  0.199837
...         ...       ...       ...  ...       ...       ...       ...
59     1.123207  0.820741  0.307790  ... -0.348400 -2.114189  0.674955
60     0.648423 -0.244695 -0.012258  ...  0.520360  1.591133  0.415493
61    -1.537976 -0.863574 -0.339109  ... -1.807600 -0.932955 -0.606641
62     1.719474 -0.751864 -1.224318  ...  0.148196 -0.611486  0.366529
63    -0.263412  1.788292  0.201192  ... -0.413903  1.138708 -1.061929

[64 rows x 10 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 64 entries, 0 to 63
Data columns (total 9 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          64 non-null     int64  
 1   Score_0        64 non-null     float64
 2   Proba_0        64 non-null     float64
 3   LogProba_0     64 non-null     float64
 4   Score_1        64 non-null     float64
 5   Proba_1        64 non-null     float64
 6   LogProba_1     64 non-null     float64
 7   Decision       64 non-null     int64  
 8   DecisionProba  64 non-null     float64
dtypes: float64(7), int64(2)
memory usage: 4.6 KB
    index   Score_0   Proba_0  ...  LogProba_1  Decision  DecisionProba
0       0  0.248417  0.621715  ...   -0.972107         0       0.621715
1       1  0.117467  0.558465  ...   -0.817497         0       0.558465
2       2 -0.309996  0.349783  ...   -0.430450         1       0.650217
3       3  0.038073  0.519027  ...   -0.731945         0       0.519027
4       4 -0.683838  0.202996  ...   -0.226895         1       0.797004
..    ...       ...       ...  ...         ...       ...            ...
59     59  0.188614  0.593204  ...   -0.899444         0       0.593204
60     60  0.056799  0.528369  ...   -0.751559         0       0.528369
61     61 -0.043798  0.478115  ...   -0.650308         1       0.521885
62     62  0.065728  0.532817  ...   -0.761034         0       0.532817
63     63  0.253042  0.623888  ...   -0.977869         0       0.623888

[64 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
    index   Score_0  SQL_Proba_0  ...  Py_Proba_0  Py_Proba_1  Py_Decision
48     48 -0.301876     0.353486  ...    0.353486    0.646514            1
49     49  0.246319     0.620728  ...    0.620728    0.379272            0
50     50  0.412920     0.695475  ...    0.695475    0.304525            0
51     51  0.297200     0.644374  ...    0.644374    0.355626            0
52     52  0.500377     0.731207  ...    0.731207    0.268793            0
53     53  0.576150     0.759931  ...    0.759931    0.240069            0
54     54  0.083984     0.541893  ...    0.541893    0.458107            0
55     55 -0.142724     0.429119  ...    0.429119    0.570881            1
56     56  0.160242     0.579442  ...    0.579442    0.420558            0
57     57  0.072648     0.536260  ...    0.536260    0.463740            0
58     58  0.255829     0.625195  ...    0.625195    0.374805            0
59     59  0.188614     0.593204  ...    0.593204    0.406796            0
60     60  0.056799     0.528369  ...    0.528369    0.471631            0
61     61 -0.043798     0.478115  ...    0.478115    0.521885            1
62     62  0.065728     0.532817  ...    0.532817    0.467183            0
63     63  0.253042     0.623888  ...    0.623888    0.376112            0

[16 rows x 12 columns]
MLLITE_CLASS_SQL_ERROR ('BinaryClass_10_small', 'RidgeClassifier', 'sqlite') ('Py_Proba_0', 'SQL_Proba_0') 9.253558998440284e-08
    Py_Proba_0  SQL_Proba_0   SQL_Error_0
48    0.353486     0.353486  1.477368e-07
49    0.620728     0.620728 -1.230675e-07
50    0.695475     0.695475  8.201846e-08
51    0.644374     0.644374  1.411300e-07
52    0.731207     0.731207  2.673093e-08
53    0.759931     0.759931  1.904029e-08
54    0.541893     0.541893 -1.104049e-07
55    0.429119     0.429119 -1.170022e-07
56    0.579442     0.579442 -7.384742e-08
57    0.536260     0.536260  1.639001e-08
58    0.625195     0.625195 -1.156818e-07
59    0.593204     0.593204 -5.271864e-08
60    0.528369     0.528369 -6.649238e-08
61    0.478115     0.478115  1.780491e-07
62    0.532817     0.532817  1.273058e-07
63    0.623888     0.623888 -3.489839e-08
MLLITE_CLASS_SQL_ERROR ('BinaryClass_10_small', 'RidgeClassifier', 'sqlite') ('Py_Proba_1', 'SQL_Proba_1') 9.242750886179207e-08
    Py_Proba_1  SQL_Proba_1   SQL_Error_1
48    0.646514     0.646514 -1.477368e-07
49    0.379272     0.379272  1.230675e-07
50    0.304525     0.304525 -1.118208e-07
51    0.355626     0.355626 -1.113277e-07
52    0.268793     0.268793  3.071392e-09
53    0.240069     0.240069 -1.904029e-08
54    0.458107     0.458107  1.402072e-07
55    0.570881     0.570881  1.170022e-07
56    0.420558     0.420558  7.384742e-08
57    0.463740     0.463740 -7.599466e-08
58    0.374805     0.374805  1.454841e-07
59    0.406796     0.406796  8.252096e-08
60    0.471631     0.471631  6.649238e-08
61    0.521885     0.521885 -1.184444e-07
62    0.467183     0.467183 -1.571082e-07
63    0.376112     0.376112  9.450304e-08
MLLITE_CLASS_SQL_EXECUTION_STATUS ('BinaryClass_10_small', 'RidgeClassifier', 'sqlite', 'Success')
    Py_Decision  SQL_Decision
48            1             1
49            0             0
50            0             0
51            0             0
52            0             0
53            0             0
54            0             0
55            1             1
56            0             0
57            0             0
58            0             0
59            0             0
60            0             0
61            1             1
62            0             0
63            0             0
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_BinaryClass_10_small_pgsql.sql'



SQL_OUT_PUT_FIRST_LINES_START ('BinaryClass_10_small', 'RidgeClassifier', 'pgsql')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9"
  FROM "MLLITE_INPUT_TABLE" AS "ADS" 
 ),
model_scores_cte AS 
 (SELECT t."index" AS "index",
   -0.5 * ( 0.007230 + 0.044161 * t."X_0" + 0.038447 * t."X_1" + 0.138790 * t."X_2" + -0.093395 * t."X_3" + -0.204561 * t."X_4" + 0.291774 * t."X_5" + 0.228267 * t."X_6" + -0.013539 * t."X_7" + -0.041317 * t."X_8" + -0.021006 * t."X_9" ) AS "Score_0",
   CAST(NULL AS FLOAT) AS "Proba_0",
   CAST(NULL AS FLOAT) AS "LogProba_0",
   0.5 * ( 0.007230 + 0.044161 * t."X_0" + 0.038447 * t."X_1" + 0.138790 * t."X_2" + -0.093395 * t."X_3" + -0.204561 * t."X_4" + 0.291774 * t."X_5" + 0.228267 * t."X_6" + -
SQL_OUT_PUT_FIRST_LINES_END ('BinaryClass_10_small', 'RidgeClassifier', 'pgsql')
SQL_OUT_PUT_LAST_LINES_START ('BinaryClass_10_small', 'RidgeClassifier', 'pgsql')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('BinaryClass_10_small', 'RidgeClassifier', 'pgsql') 




COPY_TRAINING_DATA_TO_SQLITE_START
