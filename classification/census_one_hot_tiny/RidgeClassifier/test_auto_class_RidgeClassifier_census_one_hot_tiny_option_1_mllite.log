    age  workclass_Local-gov  ...  native-country_infrequent_sklearn  target
0     2                  0.0  ...                                0.0    >50K
1     1                  0.0  ...                                0.0   <=50K
2     1                  0.0  ...                                0.0    >50K
3     1                  0.0  ...                                1.0    >50K
4     1                  0.0  ...                                0.0   <=50K
5     3                  0.0  ...                                0.0    >50K
6     2                  0.0  ...                                0.0   <=50K
7     1                  0.0  ...                                0.0   <=50K
8     4                  0.0  ...                                0.0   <=50K
9     1                  1.0  ...                                0.0    >50K
10    2                  0.0  ...                                1.0   <=50K
11    0                  0.0  ...                                0.0   <=50K
12    4                  0.0  ...                                0.0   <=50K
13    1                  0.0  ...                                0.0   <=50K
14    3                  0.0  ...                                0.0   <=50K
15    2                  1.0  ...                                0.0   <=50K

[16 rows x 54 columns]
MLLITE_MODEL_SET_OPTIONS RidgeClassifier {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { "alpha" : 0.0000001,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
('OPERATION_START', 'TRAINING')
[[2.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 1.889500e+05 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 1.400000e+01 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  3.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00]
 [1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00 1.033222e+06 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 1.000000e+00
  0.000000e+00 1.000000e+01 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  2.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00]
 [1.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 1.297070e+05 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.300000e+01 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 1.000000e+00 4.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00]
 [1.000000e+00 0.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 7.853000e+04 0.000000e+00
  0.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 9.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  4.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 1.000000e+00]
 [1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00 1.595370e+05 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 1.200000e+01 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  2.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00]] ['>50K' '<=50K' '>50K' '>50K' '<=50K']
MLLITE_FIT_USING_MODEL mllite_ridge_class.RidgeClassifier_ff4_OO8
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 1 4
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 3 4
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 1 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 2 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 3 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 4 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 5 6
PROGRESS_REPORT_ELAPSED_TOTAL 'CHOLESKY_SOLVER' 6 6
PROGRESS_REPORT_ELAPSED_TOTAL 'RIDGE_CLASSIFIER_FIT' 4 4
('OPERATION_END_ELAPSED', 0.016, 'TRAINING')
{ "alpha" : 0.0000001,   }
{ "alpha" : 0.0000001,   }
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W13", "signature" : "ff4_OO8"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 53 },
	"classes" : [ "<=50K", ">50K" ],
	"equations" : {
		"class_1" : {
			"intercept" : 224751872.000000,
			"coeffs" : [ -76244448.000000, -75609576.000000, -149445952.000000, -71811480.000000, -10879233.000000, 335863648.000000, 0.000000, 0.000000, -681.079529, 0.000000, 0.000000, 51657236.000000, -27420832.000000, 60937392.000000, 69755840.000000, -191573200.000000, -1552902.750000, -30919284.000000, 13131115.000000, 0.000000, 7720271.000000, 0.000000, 0.000000, 0.000000, 0.000000, -298225376.000000, 39033864.000000, 109236968.000000, -49553640.000000, 0.000000, 32298986.000000, 38353372.000000, -35597856.000000, 0.000000, 18257646.000000, 23671786.000000, -105836344.000000, -35982152.000000, -61423776.000000, 0.000000, 0.000000, 52521908.000000, -32744946.000000, -7619904.500000, -16000704.000000, -5107696.000000, 0.000000, 0.000000, 0.000000, 0.000000, 71691056.000000, 0.000000, -71674136.000000 ]
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_census_one_hot_tiny_option_1.json'

MLLITE_MODEL_SET_OPTIONS RidgeClassifier {"alpha" : 0.0000001}
MLLITE_MODEL_OPTIONS_DEFAULT RidgeClassifier { }
MLLITE_MODEL_OPTIONS_AFTER_SETTING RidgeClassifier { "alpha" : 0.0000001,   }
MLLITE_MODEL_JSON_AFTER_SETTING RidgeClassifier None
MLLITE_RELOADING_MODEL mllite_ridge_class.RidgeClassifier_ff4_OO8
{
	"metadata" : { "model" : "Tikhonov_Ridge", "version" : "2024-W13", "signature" : "ff4_OO8"},
	"options" : { "alpha" : 0.000000, "random_state" : 1789 },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 53 },
	"classes" : [ "<=50K", ">50K" ],
	"equations" : {
		"class_1" : {
			"intercept" : 224751872.000000,
			"coeffs" : [ -76244448.000000, -75609576.000000, -149445952.000000, -71811480.000000, -10879233.000000, 335863648.000000, 0.000000, 0.000000, -681.079529, 0.000000, 0.000000, 51657236.000000, -27420832.000000, 60937392.000000, 69755840.000000, -191573200.000000, -1552902.750000, -30919284.000000, 13131115.000000, 0.000000, 7720271.000000, 0.000000, 0.000000, 0.000000, 0.000000, -298225376.000000, 39033864.000000, 109236968.000000, -49553640.000000, 0.000000, 32298986.000000, 38353372.000000, -35597856.000000, 0.000000, 18257646.000000, 23671786.000000, -105836344.000000, -35982152.000000, -61423776.000000, 0.000000, 0.000000, 52521908.000000, -32744946.000000, -7619904.500000, -16000704.000000, -5107696.000000, 0.000000, 0.000000, 0.000000, 0.000000, 71691056.000000, 0.000000, -71674136.000000 ]
		}
	}
}
BEAUTIFIED_JSON_START
{
	"classes" : [ "<=50K", ">50K" ],
	"dataset" : 	{
		"dataset_features" : 53,
		"dataset_rows" : 16
	},
	"equations" : 	{
		"class_1" : 	{
			"coeffs" : [ -76244448.0, -75609576.0, -149445952.0, -71811480.0, -10879233.0, 335863648.0, 0.0, 0.0, -681.079529, 0.0, 0.0, 51657236.0, -27420832.0, 60937392.0, 69755840.0, -191573200.0, -1552902.75, -30919284.0, 13131115.0, 0.0, 7720271.0, 0.0, 0.0, 0.0, 0.0, -298225376.0, 39033864.0, 109236968.0, -49553640.0, 0.0, 32298986.0, 38353372.0, -35597856.0, 0.0, 18257646.0, 23671786.0, -105836344.0, -35982152.0, -61423776.0, 0.0, 0.0, 52521908.0, -32744946.0, -7619904.5, -16000704.0, -5107696.0, 0.0, 0.0, 0.0, 0.0, 71691056.0, 0.0, -71674136.0 ],
			"intercept" : 224751872.0
		}
	},
	"metadata" :  { "model" : "Tikhonov_Ridge", "signature" : "ff4_OO8", "version" : "2024-W13" },
	"options" :  { "alpha" : 0.0, "random_state" : 1789 }
}
BEAUTIFIED_JSON_END
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[1. 0.]
 [1. 0.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [0. 1.]
 [0. 1.]
 [1. 0.]
 [1. 0.]
 [0. 1.]
 [0. 1.]
 [0. 1.]]
(16, 2)
(16,) float32
MODEL_PERFS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': '{"alpha" : 0.0000001}', 'dataset': 'census_one_hot_tiny', 'size': 16, 'accuracy': 0.625, 'auc': 0.6727272727272727}
WRITING_PERF_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_census_one_hot_tiny_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.RidgeClassifier', 'model_name': 'RidgeClassifier', 'options': '{"alpha" : 0.0000001}', 'dataset': 'census_one_hot_tiny', 'training_time_in_sec': 0.016, 'prediction_time_in_sec': 0.0}
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_census_one_hot_tiny_option_1_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('census_one_hot_tiny', 'RidgeClassifier', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('census_one_hot_tiny', 'RidgeClassifier', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('census_one_hot_tiny', 'RidgeClassifier', 'duckdb')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('census_one_hot_tiny', 'RidgeClassifier', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 16 entries, 0 to 15
Data columns (total 53 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     16 non-null     float32
 1   X_1     16 non-null     float32
 2   X_2     16 non-null     float32
 3   X_3     16 non-null     float32
 4   X_4     16 non-null     float32
 5   X_5     16 non-null     float32
 6   X_6     16 non-null     float32
 7   X_7     16 non-null     float32
 8   X_8     16 non-null     float32
 9   X_9     16 non-null     float32
 10  X_10    16 non-null     float32
 11  X_11    16 non-null     float32
 12  X_12    16 non-null     float32
 13  X_13    16 non-null     float32
 14  X_14    16 non-null     float32
 15  X_15    16 non-null     float32
 16  X_16    16 non-null     float32
 17  X_17    16 non-null     float32
 18  X_18    16 non-null     float32
 19  X_19    16 non-null     float32
 20  X_20    16 non-null     float32
 21  X_21    16 non-null     float32
 22  X_22    16 non-null     float32
 23  X_23    16 non-null     float32
 24  X_24    16 non-null     float32
 25  X_25    16 non-null     float32
 26  X_26    16 non-null     float32
 27  X_27    16 non-null     float32
 28  X_28    16 non-null     float32
 29  X_29    16 non-null     float32
 30  X_30    16 non-null     float32
 31  X_31    16 non-null     float32
 32  X_32    16 non-null     float32
 33  X_33    16 non-null     float32
 34  X_34    16 non-null     float32
 35  X_35    16 non-null     float32
 36  X_36    16 non-null     float32
 37  X_37    16 non-null     float32
 38  X_38    16 non-null     float32
 39  X_39    16 non-null     float32
 40  X_40    16 non-null     float32
 41  X_41    16 non-null     float32
 42  X_42    16 non-null     float32
 43  X_43    16 non-null     float32
 44  X_44    16 non-null     float32
 45  X_45    16 non-null     float32
 46  X_46    16 non-null     float32
 47  X_47    16 non-null     float32
 48  X_48    16 non-null     float32
 49  X_49    16 non-null     float32
 50  X_50    16 non-null     float32
 51  X_51    16 non-null     float32
 52  X_52    16 non-null     float32
dtypes: float32(53)
memory usage: 3.4 KB
       X_0  X_1  X_2  X_3  X_4  X_5  ...  X_47  X_48  X_49  X_50  X_51  X_52
index                                ...                                    
0      2.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
1      1.0  0.0  0.0  0.0  0.0  1.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
2      1.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
3      1.0  0.0  0.0  1.0  0.0  0.0  ...   0.0   0.0   0.0   0.0   0.0   1.0
4      1.0  0.0  0.0  0.0  0.0  1.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
5      3.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
6      2.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
7      1.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
8      4.0  0.0  0.0  0.0  1.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
9      1.0  1.0  0.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
10     2.0  0.0  0.0  0.0  0.0  1.0  ...   0.0   0.0   0.0   0.0   0.0   1.0
11     0.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
12     4.0  0.0  0.0  0.0  1.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
13     1.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
14     3.0  0.0  0.0  0.0  1.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
15     2.0  1.0  0.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0

[16 rows x 53 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 16 entries, 0 to 15
Data columns (total 9 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          16 non-null     int64  
 1   Score_0        16 non-null     float64
 2   Proba_0        16 non-null     float64
 3   LogProba_0     16 non-null     float64
 4   Score_1        16 non-null     float64
 5   Proba_1        16 non-null     float64
 6   LogProba_1     16 non-null     float64
 7   Decision       16 non-null     int64  
 8   DecisionProba  16 non-null     float64
dtypes: float64(7), int64(2)
memory usage: 1.3 KB
    index  Score_0  Proba_0  ...     LogProba_1  Decision  DecisionProba
0       0   6464.0      1.0  ... -1.797693e+308         0            1.0
1       1  36192.0      1.0  ... -1.797693e+308         0            1.0
2       2   -872.0      0.0  ...   0.000000e+00         1            1.0
3       3  -2100.0      0.0  ...   0.000000e+00         1            1.0
4       4  -8704.0      0.0  ...   0.000000e+00         1            1.0
5       5 -26376.0      0.0  ...   0.000000e+00         1            1.0
6       6    696.0      1.0  ... -1.797693e+308         0            1.0
7       7   2092.0      1.0  ... -1.797693e+308         0            1.0
8       8   3200.0      1.0  ... -1.797693e+308         0            1.0
9       9  -3048.0      0.0  ...   0.000000e+00         1            1.0
10     10  -1820.0      0.0  ...   0.000000e+00         1            1.0
11     11   3808.0      1.0  ... -1.797693e+308         0            1.0
12     12   2200.0      1.0  ... -1.797693e+308         0            1.0
13     13  -3988.0      0.0  ...   0.000000e+00         1            1.0
14     14  -6232.0      0.0  ...   0.000000e+00         1            1.0
15     15  -1024.0      0.0  ...   0.000000e+00         1            1.0

[16 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
    index  Score_0  SQL_Proba_0  ...  Py_Proba_0  Py_Proba_1  Py_Decision
0       0   6464.0          1.0  ...         1.0         0.0        <=50K
1       1  36192.0          1.0  ...         1.0         0.0        <=50K
2       2   -872.0          0.0  ...         0.0         1.0         >50K
3       3  -2100.0          0.0  ...         0.0         1.0         >50K
4       4  -8704.0          0.0  ...         0.0         1.0         >50K
5       5 -26376.0          0.0  ...         0.0         1.0         >50K
6       6    696.0          1.0  ...         1.0         0.0        <=50K
7       7   2092.0          1.0  ...         1.0         0.0        <=50K
8       8   3200.0          1.0  ...         1.0         0.0        <=50K
9       9  -3048.0          0.0  ...         0.0         1.0         >50K
10     10  -1820.0          0.0  ...         0.0         1.0         >50K
11     11   3808.0          1.0  ...         1.0         0.0        <=50K
12     12   2200.0          1.0  ...         1.0         0.0        <=50K
13     13  -3988.0          0.0  ...         0.0         1.0         >50K
14     14  -6232.0          0.0  ...         0.0         1.0         >50K
15     15  -1024.0          0.0  ...         0.0         1.0         >50K

[16 rows x 12 columns]
MLLITE_CLASS_SQL_ERROR ('census_one_hot_tiny', 'RidgeClassifier', 'duckdb') ('Py_Proba_0', 'SQL_Proba_0') 0.0
    Py_Proba_0  SQL_Proba_0  SQL_Error_0
0          1.0          1.0          0.0
1          1.0          1.0          0.0
2          0.0          0.0          0.0
3          0.0          0.0          0.0
4          0.0          0.0          0.0
5          0.0          0.0          0.0
6          1.0          1.0          0.0
7          1.0          1.0          0.0
8          1.0          1.0          0.0
9          0.0          0.0          0.0
10         0.0          0.0          0.0
11         1.0          1.0          0.0
12         1.0          1.0          0.0
13         0.0          0.0          0.0
14         0.0          0.0          0.0
15         0.0          0.0          0.0
MLLITE_CLASS_SQL_ERROR ('census_one_hot_tiny', 'RidgeClassifier', 'duckdb') ('Py_Proba_1', 'SQL_Proba_1') 0.0
    Py_Proba_1  SQL_Proba_1  SQL_Error_1
0          0.0          0.0          0.0
1          0.0          0.0          0.0
2          1.0          1.0          0.0
3          1.0          1.0          0.0
4          1.0          1.0          0.0
5          1.0          1.0          0.0
6          0.0          0.0          0.0
7          0.0          0.0          0.0
8          0.0          0.0          0.0
9          1.0          1.0          0.0
10         1.0          1.0          0.0
11         0.0          0.0          0.0
12         0.0          0.0          0.0
13         1.0          1.0          0.0
14         1.0          1.0          0.0
15         1.0          1.0          0.0
MLLITE_CLASS_SQL_EXECUTION_STATUS ('census_one_hot_tiny', 'RidgeClassifier', 'duckdb', 'Success')
   Py_Decision  SQL_Decision
0        <=50K             0
1        <=50K             0
2         >50K             1
3         >50K             1
4         >50K             1
5         >50K             1
6        <=50K             0
7        <=50K             0
8        <=50K             0
9         >50K             1
10        >50K             1
11       <=50K             0
12       <=50K             0
13        >50K             1
14        >50K             1
15        >50K             1
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_census_one_hot_tiny_option_1_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('census_one_hot_tiny', 'RidgeClassifier', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('census_one_hot_tiny', 'RidgeClassifier', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('census_one_hot_tiny', 'RidgeClassifier', 'sqlite')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('census_one_hot_tiny', 'RidgeClassifier', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 16 entries, 0 to 15
Data columns (total 53 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     16 non-null     float32
 1   X_1     16 non-null     float32
 2   X_2     16 non-null     float32
 3   X_3     16 non-null     float32
 4   X_4     16 non-null     float32
 5   X_5     16 non-null     float32
 6   X_6     16 non-null     float32
 7   X_7     16 non-null     float32
 8   X_8     16 non-null     float32
 9   X_9     16 non-null     float32
 10  X_10    16 non-null     float32
 11  X_11    16 non-null     float32
 12  X_12    16 non-null     float32
 13  X_13    16 non-null     float32
 14  X_14    16 non-null     float32
 15  X_15    16 non-null     float32
 16  X_16    16 non-null     float32
 17  X_17    16 non-null     float32
 18  X_18    16 non-null     float32
 19  X_19    16 non-null     float32
 20  X_20    16 non-null     float32
 21  X_21    16 non-null     float32
 22  X_22    16 non-null     float32
 23  X_23    16 non-null     float32
 24  X_24    16 non-null     float32
 25  X_25    16 non-null     float32
 26  X_26    16 non-null     float32
 27  X_27    16 non-null     float32
 28  X_28    16 non-null     float32
 29  X_29    16 non-null     float32
 30  X_30    16 non-null     float32
 31  X_31    16 non-null     float32
 32  X_32    16 non-null     float32
 33  X_33    16 non-null     float32
 34  X_34    16 non-null     float32
 35  X_35    16 non-null     float32
 36  X_36    16 non-null     float32
 37  X_37    16 non-null     float32
 38  X_38    16 non-null     float32
 39  X_39    16 non-null     float32
 40  X_40    16 non-null     float32
 41  X_41    16 non-null     float32
 42  X_42    16 non-null     float32
 43  X_43    16 non-null     float32
 44  X_44    16 non-null     float32
 45  X_45    16 non-null     float32
 46  X_46    16 non-null     float32
 47  X_47    16 non-null     float32
 48  X_48    16 non-null     float32
 49  X_49    16 non-null     float32
 50  X_50    16 non-null     float32
 51  X_51    16 non-null     float32
 52  X_52    16 non-null     float32
dtypes: float32(53)
memory usage: 3.4 KB
       X_0  X_1  X_2  X_3  X_4  X_5  ...  X_47  X_48  X_49  X_50  X_51  X_52
index                                ...                                    
0      2.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
1      1.0  0.0  0.0  0.0  0.0  1.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
2      1.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
3      1.0  0.0  0.0  1.0  0.0  0.0  ...   0.0   0.0   0.0   0.0   0.0   1.0
4      1.0  0.0  0.0  0.0  0.0  1.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
5      3.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
6      2.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
7      1.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
8      4.0  0.0  0.0  0.0  1.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
9      1.0  1.0  0.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
10     2.0  0.0  0.0  0.0  0.0  1.0  ...   0.0   0.0   0.0   0.0   0.0   1.0
11     0.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
12     4.0  0.0  0.0  0.0  1.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
13     1.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
14     3.0  0.0  0.0  0.0  1.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
15     2.0  1.0  0.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0

[16 rows x 53 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 16 entries, 0 to 15
Data columns (total 9 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          16 non-null     int64  
 1   Score_0        16 non-null     float64
 2   Proba_0        16 non-null     float64
 3   LogProba_0     16 non-null     float64
 4   Score_1        16 non-null     float64
 5   Proba_1        16 non-null     float64
 6   LogProba_1     16 non-null     float64
 7   Decision       16 non-null     int64  
 8   DecisionProba  16 non-null     float64
dtypes: float64(7), int64(2)
memory usage: 1.3 KB
    index       Score_0  Proba_0  ...     LogProba_1  Decision  DecisionProba
0       0   6459.252275      1.0  ... -1.797693e+308         0            1.0
1       1  36184.806219      1.0  ... -1.797693e+308         0            1.0
2       2   -870.390998      0.0  ...   0.000000e+00         1            1.0
3       3  -2102.418815      0.0  ...   0.000000e+00         1            1.0
4       4  -8695.590964      0.0  ...   0.000000e+00         1            1.0
5       5 -26370.056003      0.0  ...   0.000000e+00         1            1.0
6       6    696.651017      1.0  ... -1.797693e+308         0            1.0
7       7   2088.746324      1.0  ... -1.797693e+308         0            1.0
8       8   3209.370478      1.0  ... -1.797693e+308         0            1.0
9       9  -3052.093988      0.0  ...   0.000000e+00         1            1.0
10     10  -1819.337313      0.0  ...   0.000000e+00         1            1.0
11     11   3797.397124      1.0  ... -1.797693e+308         0            1.0
12     12   2203.630574      1.0  ... -1.797693e+308         0            1.0
13     13  -3991.001495      0.0  ...   0.000000e+00         1            1.0
14     14  -6226.020820      0.0  ...   0.000000e+00         1            1.0
15     15  -1022.967539      0.0  ...   0.000000e+00         1            1.0

[16 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
    index       Score_0  SQL_Proba_0  ...  Py_Proba_0  Py_Proba_1  Py_Decision
0       0   6459.252275          1.0  ...         1.0         0.0        <=50K
1       1  36184.806219          1.0  ...         1.0         0.0        <=50K
2       2   -870.390998          0.0  ...         0.0         1.0         >50K
3       3  -2102.418815          0.0  ...         0.0         1.0         >50K
4       4  -8695.590964          0.0  ...         0.0         1.0         >50K
5       5 -26370.056003          0.0  ...         0.0         1.0         >50K
6       6    696.651017          1.0  ...         1.0         0.0        <=50K
7       7   2088.746324          1.0  ...         1.0         0.0        <=50K
8       8   3209.370478          1.0  ...         1.0         0.0        <=50K
9       9  -3052.093988          0.0  ...         0.0         1.0         >50K
10     10  -1819.337313          0.0  ...         0.0         1.0         >50K
11     11   3797.397124          1.0  ...         1.0         0.0        <=50K
12     12   2203.630574          1.0  ...         1.0         0.0        <=50K
13     13  -3991.001495          0.0  ...         0.0         1.0         >50K
14     14  -6226.020820          0.0  ...         0.0         1.0         >50K
15     15  -1022.967539          0.0  ...         0.0         1.0         >50K

[16 rows x 12 columns]
MLLITE_CLASS_SQL_ERROR ('census_one_hot_tiny', 'RidgeClassifier', 'sqlite') ('Py_Proba_0', 'SQL_Proba_0') 0.0
    Py_Proba_0  SQL_Proba_0  SQL_Error_0
0          1.0          1.0          0.0
1          1.0          1.0          0.0
2          0.0          0.0          0.0
3          0.0          0.0          0.0
4          0.0          0.0          0.0
5          0.0          0.0          0.0
6          1.0          1.0          0.0
7          1.0          1.0          0.0
8          1.0          1.0          0.0
9          0.0          0.0          0.0
10         0.0          0.0          0.0
11         1.0          1.0          0.0
12         1.0          1.0          0.0
13         0.0          0.0          0.0
14         0.0          0.0          0.0
15         0.0          0.0          0.0
MLLITE_CLASS_SQL_ERROR ('census_one_hot_tiny', 'RidgeClassifier', 'sqlite') ('Py_Proba_1', 'SQL_Proba_1') 0.0
    Py_Proba_1  SQL_Proba_1  SQL_Error_1
0          0.0          0.0          0.0
1          0.0          0.0          0.0
2          1.0          1.0          0.0
3          1.0          1.0          0.0
4          1.0          1.0          0.0
5          1.0          1.0          0.0
6          0.0          0.0          0.0
7          0.0          0.0          0.0
8          0.0          0.0          0.0
9          1.0          1.0          0.0
10         1.0          1.0          0.0
11         0.0          0.0          0.0
12         0.0          0.0          0.0
13         1.0          1.0          0.0
14         1.0          1.0          0.0
15         1.0          1.0          0.0
MLLITE_CLASS_SQL_EXECUTION_STATUS ('census_one_hot_tiny', 'RidgeClassifier', 'sqlite', 'Success')
   Py_Decision  SQL_Decision
0        <=50K             0
1        <=50K             0
2         >50K             1
3         >50K             1
4         >50K             1
5         >50K             1
6        <=50K             0
7        <=50K             0
8        <=50K             0
9         >50K             1
10        >50K             1
11       <=50K             0
12       <=50K             0
13        >50K             1
14        >50K             1
15        >50K             1
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/RidgeClassifier/mllite.RidgeClassifier_census_one_hot_tiny_option_1_pgsql.sql'



SQL_OUT_PUT_FIRST_LINES_START ('census_one_hot_tiny', 'RidgeClassifier', 'pgsql')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('census_one_hot_tiny', 'RidgeClassifier', 'pgsql')
SQL_OUT_PUT_LAST_LINES_START ('census_one_hot_tiny', 'RidgeClassifier', 'pgsql')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('census_one_hot_tiny', 'RidgeClassifier', 'pgsql') 




COPY_TRAINING_DATA_TO_SQLITE_START
