READING_CSV census_one_hot_tiny ['data/tiny/census_one_hot_tiny.csv']
    age  workclass_Local-gov  ...  native-country_infrequent_sklearn  target
0     2                  0.0  ...                                0.0    >50K
1     1                  0.0  ...                                0.0   <=50K
2     1                  0.0  ...                                0.0    >50K
3     1                  0.0  ...                                1.0    >50K
4     1                  0.0  ...                                0.0   <=50K
5     3                  0.0  ...                                0.0    >50K
6     2                  0.0  ...                                0.0   <=50K
7     1                  0.0  ...                                0.0   <=50K
8     4                  0.0  ...                                0.0   <=50K
9     1                  1.0  ...                                0.0    >50K
10    2                  0.0  ...                                1.0   <=50K
11    0                  0.0  ...                                0.0   <=50K
12    4                  0.0  ...                                0.0   <=50K
13    1                  0.0  ...                                0.0   <=50K
14    3                  0.0  ...                                0.0   <=50K
15    2                  1.0  ...                                0.0   <=50K

[16 rows x 54 columns]
MLLITE_MODEL_SET_OPTIONS XGBClassifier {"max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 }
MLLITE_MODEL_OPTIONS_DEFAULT XGBClassifier { "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING XGBClassifier { "max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 ,  "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32  }
MLLITE_MODEL_JSON_AFTER_SETTING XGBClassifier None
('OPERATION_START', 'TRAINING')
[[2.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 1.889500e+05 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 1.400000e+01 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  3.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00]
 [1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00 1.033222e+06 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 1.000000e+00
  0.000000e+00 1.000000e+01 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  2.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00]
 [1.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 1.297070e+05 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.300000e+01 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 1.000000e+00 4.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00]
 [1.000000e+00 0.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 7.853000e+04 0.000000e+00
  0.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 9.000000e+00 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  4.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 1.000000e+00]
 [1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00 1.595370e+05 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 1.200000e+01 0.000000e+00 1.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  0.000000e+00 1.000000e+00 1.000000e+00 0.000000e+00 0.000000e+00
  2.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
  1.000000e+00 0.000000e+00 0.000000e+00]] ['>50K' '<=50K' '>50K' '>50K' '<=50K']
MLLITE_FIT_USING_MODEL mllite_xgb_class.XGBClassifier_ff4_OO8
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_CLASSIFIER_FIT' 1 3
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_CLASSIFIER_FIT' 2 3
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 1 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 2 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 3 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 4 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 5 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 6 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_MODEL_FIT' 7 7
PROGRESS_REPORT_ELAPSED_TOTAL 'XGB_CLASSIFIER_FIT' 3 3
('OPERATION_END_ELAPSED', 0.018, 'TRAINING')
{ "max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 ,  "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32  }
{ "max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 ,  "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32  }
{
	"metadata" : { "model" : "Friedman_XGB", "version" : "2024-W14", "signature" : "ff4_OO8"},
	"options" : { "base_score" : [ ], "early_stopping_rounds" : 0, "eval_metric" : "", "gamma" : 0.000000, "grow_policy" : 0, "learning_rate" : 0.300000, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 32, "min_child_weight" : 5.000000, "n_estimators" : 5, "objective" : "reg:squarederror", "reg_alpha" : 0.000000, "reg_lambda" : 1.000000, "tree_method" : "auto" },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 53 },
	"classes" : [ "<=50K", ">50K" ],
	"booster" : {
		"BaseScore" : [ 0.687500, 0.312500 ],
		"Trees" : 5,
		"Tree_0" : {
			"Node_0" : { "leaf_value" : [ 0.687500, 0.312500 ], "parent" : null, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_1" : {
			"Node_0" : { "leaf_value" : [ 1.375000, 0.625000 ], "parent" : null, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_2" : {
			"Node_0" : { "leaf_value" : [ 2.750000, 1.250000 ], "parent" : null, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_3" : {
			"Node_0" : { "leaf_value" : [ 5.500000, 2.500000 ], "parent" : null, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_4" : {
			"Node_0" : { "leaf_value" : [ 11.000000, 5.000000 ], "parent" : null, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		}
	}
}
WRITING_JSON_CODE 'logs/auto_tests/classification/XGBClassifier/mllite.XGBClassifier_census_one_hot_tiny_option_1.json'

RELOADING_MODEL_FROM_JSON_START ('census_one_hot_tiny', 'XGBClassifier')
MLLITE_MODEL_SET_OPTIONS XGBClassifier {"max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 }
MLLITE_MODEL_OPTIONS_DEFAULT XGBClassifier { "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32 }
MLLITE_MODEL_OPTIONS_AFTER_SETTING XGBClassifier { "max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 ,  "nthread" : 1, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 64, "n_estimators" : 32  }
MLLITE_MODEL_JSON_AFTER_SETTING XGBClassifier None
MLLITE_RELOADING_MODEL mllite_xgb_class.XGBClassifier_ff4_OO8
{
	"metadata" : { "model" : "Friedman_XGB", "version" : "2024-W14", "signature" : "ff4_OO8"},
	"options" : { "base_score" : [ ], "early_stopping_rounds" : 0, "eval_metric" : "", "gamma" : 0.000000, "grow_policy" : 0, "learning_rate" : 0.300000, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 32, "min_child_weight" : 5.000000, "n_estimators" : 5, "objective" : "reg:squarederror", "reg_alpha" : 0.000000, "reg_lambda" : 1.000000, "tree_method" : "auto" },
	"dataset" : { "dataset_rows" : 16, "dataset_features" : 53 },
	"classes" : [ "<=50K", ">50K" ],
	"booster" : {
		"BaseScore" : [ 0.687500, 0.312500 ],
		"Trees" : 5,
		"Tree_0" : {
			"Node_0" : { "leaf_value" : [ 0.687500, 0.312500 ], "parent" : null, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_1" : {
			"Node_0" : { "leaf_value" : [ 1.375000, 0.625000 ], "parent" : null, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_2" : {
			"Node_0" : { "leaf_value" : [ 2.750000, 1.250000 ], "parent" : null, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_3" : {
			"Node_0" : { "leaf_value" : [ 5.500000, 2.500000 ], "parent" : null, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		},
		"Tree_4" : {
			"Node_0" : { "leaf_value" : [ 11.000000, 5.000000 ], "parent" : null, "left" : null, "right" : null, "svalue" : 0.000000, "sindex" : 0 }
		}
	}
}
BEAUTIFIED_JSON_START
{
	"booster" : 	{
		"BaseScore" : [ 0.6875, 0.3125 ],
		"Tree_0" : 	{
			"Node_0" : 	{
				"leaf_value" : [ 0.6875, 0.3125 ],
				"left" : null,
				"parent" : null,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			}
		},
		"Tree_1" : 	{
			"Node_0" : 	{
				"leaf_value" : [ 1.375, 0.625 ],
				"left" : null,
				"parent" : null,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			}
		},
		"Tree_2" : 	{
			"Node_0" : 	{
				"leaf_value" : [ 2.75, 1.25 ],
				"left" : null,
				"parent" : null,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			}
		},
		"Tree_3" : 	{
			"Node_0" : 	{
				"leaf_value" : [ 5.5, 2.5 ],
				"left" : null,
				"parent" : null,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			}
		},
		"Tree_4" : 	{
			"Node_0" : 	{
				"leaf_value" : [ 11.0, 5.0 ],
				"left" : null,
				"parent" : null,
				"right" : null,
				"sindex" : 0,
				"svalue" : 0.0
			}
		},
		"Trees" : 5
	},
	"classes" : [ "<=50K", ">50K" ],
	"dataset" : 	{
		"dataset_features" : 53,
		"dataset_rows" : 16
	},
	"metadata" :  { "model" : "Friedman_XGB", "signature" : "ff4_OO8", "version" : "2024-W14" },
	"options" :  { "base_score" : [ ], "early_stopping_rounds" : 0, "eval_metric" : "", "gamma" : 0.0, "grow_policy" : 0, "learning_rate" : 0.3, "max_bin" : 10, "max_depth" : 6, "max_leaves" : 32, "min_child_weight" : 5.0, "n_estimators" : 5, "objective" : "reg:squarederror", "reg_alpha" : 0.0, "reg_lambda" : 1.0, "tree_method" : "auto" }
}
BEAUTIFIED_JSON_END
RELOADING_MODEL_FROM_JSON_END ('census_one_hot_tiny', 'XGBClassifier')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
('OPERATION_START', 'PREDICT')
('OPERATION_END_ELAPSED', 0.0, 'PREDICT')
[[1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]
 [1. 0.]]
(16, 2)
(16,) float32
MODEL_PERFS {'class_name': 'mllite.XGBClassifier', 'model_name': 'XGBClassifier', 'options': '{"max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 }', 'dataset': 'census_one_hot_tiny', 'size': 16, 'accuracy': 0.6875, 'auc': 0.5}
WRITING_PERF_CODE 'logs/auto_tests/classification/XGBClassifier/mllite.XGBClassifier_census_one_hot_tiny_option_1.perf'

MODEL_PERFS_TIMINGS {'class_name': 'mllite.XGBClassifier', 'model_name': 'XGBClassifier', 'options': '{"max_depth" : 6, "n_estimators" : 5, "max_bin" : 10, "min_child_weight" : 5, "max_leaves" : 32 }', 'dataset': 'census_one_hot_tiny', 'training_time_in_sec': 0.018, 'prediction_time_in_sec': 0.0}

MODEL_EXPLANATION_START
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 0 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 1 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 2 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 3 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 4 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 5 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 6 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 7 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 8 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 9 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 10 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 11 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 12 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 13 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 14 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 15 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 16 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 17 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 18 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 19 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 20 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 21 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 22 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 23 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 24 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 25 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 26 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 27 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 28 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 29 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 30 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 31 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 32 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 33 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 34 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 35 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 36 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 37 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 38 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 39 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 40 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 41 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 42 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 43 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 44 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 45 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 46 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 47 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 48 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 49 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 50 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 51 53
PROGRESS_REPORT_ELAPSED_TOTAL 'MONTE_CARLO_CLASSIFICATION_EXPLAINER' 52 53
{
   "Contributions" : {
      "X_0" : [ 0.000000, 0.000000 ],
      "X_1" : [ 0.000000, 0.000000 ],
      "X_2" : [ 0.000000, 0.000000 ],
      "X_3" : [ 0.000000, 0.000000 ],
      "X_4" : [ 0.000000, 0.000000 ],
      "X_5" : [ 0.000000, 0.000000 ],
      "X_6" : [ 0.000000, 0.000000 ],
      "X_7" : [ 0.000000, 0.000000 ],
      "X_8" : [ 0.000000, 0.000000 ],
      "X_9" : [ 0.000000, 0.000000 ],
      "X_10" : [ 0.000000, 0.000000 ],
      "X_11" : [ 0.000000, 0.000000 ],
      "X_12" : [ 0.000000, 0.000000 ],
      "X_13" : [ 0.000000, 0.000000 ],
      "X_14" : [ 0.000000, 0.000000 ],
      "X_15" : [ 0.000000, 0.000000 ],
      "X_16" : [ 0.000000, 0.000000 ],
      "X_17" : [ 0.000000, 0.000000 ],
      "X_18" : [ 0.000000, 0.000000 ],
      "X_19" : [ 0.000000, 0.000000 ],
      "X_20" : [ 0.000000, 0.000000 ],
      "X_21" : [ 0.000000, 0.000000 ],
      "X_22" : [ 0.000000, 0.000000 ],
      "X_23" : [ 0.000000, 0.000000 ],
      "X_24" : [ 0.000000, 0.000000 ],
      "X_25" : [ 0.000000, 0.000000 ],
      "X_26" : [ 0.000000, 0.000000 ],
      "X_27" : [ 0.000000, 0.000000 ],
      "X_28" : [ 0.000000, 0.000000 ],
      "X_29" : [ 0.000000, 0.000000 ],
      "X_30" : [ 0.000000, 0.000000 ],
      "X_31" : [ 0.000000, 0.000000 ],
      "X_32" : [ 0.000000, 0.000000 ],
      "X_33" : [ 0.000000, 0.000000 ],
      "X_34" : [ 0.000000, 0.000000 ],
      "X_35" : [ 0.000000, 0.000000 ],
      "X_36" : [ 0.000000, 0.000000 ],
      "X_37" : [ 0.000000, 0.000000 ],
      "X_38" : [ 0.000000, 0.000000 ],
      "X_39" : [ 0.000000, 0.000000 ],
      "X_40" : [ 0.000000, 0.000000 ],
      "X_41" : [ 0.000000, 0.000000 ],
      "X_42" : [ 0.000000, 0.000000 ],
      "X_43" : [ 0.000000, 0.000000 ],
      "X_44" : [ 0.000000, 0.000000 ],
      "X_45" : [ 0.000000, 0.000000 ],
      "X_46" : [ 0.000000, 0.000000 ],
      "X_47" : [ 0.000000, 0.000000 ],
      "X_48" : [ 0.000000, 0.000000 ],
      "X_49" : [ 0.000000, 0.000000 ],
      "X_50" : [ 0.000000, 0.000000 ],
      "X_51" : [ 0.000000, 0.000000 ],
      "X_52" : [ 0.000000, 0.000000 ]   
   },
   "Most_Contributive_Features_By_Class" : {
      "class_0" : [ ],
      "class_1" : [ ]
   }
}
WRITING_EXPLAIN_CODE 'logs/auto_tests/classification/XGBClassifier/mllite.XGBClassifier_census_one_hot_tiny_option_1_explain.json'

MODEL_EXPLANATION_END
WRITING_SQL_CODE 'logs/auto_tests/classification/XGBClassifier/mllite.XGBClassifier_census_one_hot_tiny_option_1_duckdb.sql'



SQL_OUT_PUT_FIRST_LINES_START ('census_one_hot_tiny', 'XGBClassifier', 'duckdb')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('census_one_hot_tiny', 'XGBClassifier', 'duckdb')
SQL_OUT_PUT_LAST_LINES_START ('census_one_hot_tiny', 'XGBClassifier', 'duckdb')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('census_one_hot_tiny', 'XGBClassifier', 'duckdb') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 16 entries, 0 to 15
Data columns (total 53 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     16 non-null     float32
 1   X_1     16 non-null     float32
 2   X_2     16 non-null     float32
 3   X_3     16 non-null     float32
 4   X_4     16 non-null     float32
 5   X_5     16 non-null     float32
 6   X_6     16 non-null     float32
 7   X_7     16 non-null     float32
 8   X_8     16 non-null     float32
 9   X_9     16 non-null     float32
 10  X_10    16 non-null     float32
 11  X_11    16 non-null     float32
 12  X_12    16 non-null     float32
 13  X_13    16 non-null     float32
 14  X_14    16 non-null     float32
 15  X_15    16 non-null     float32
 16  X_16    16 non-null     float32
 17  X_17    16 non-null     float32
 18  X_18    16 non-null     float32
 19  X_19    16 non-null     float32
 20  X_20    16 non-null     float32
 21  X_21    16 non-null     float32
 22  X_22    16 non-null     float32
 23  X_23    16 non-null     float32
 24  X_24    16 non-null     float32
 25  X_25    16 non-null     float32
 26  X_26    16 non-null     float32
 27  X_27    16 non-null     float32
 28  X_28    16 non-null     float32
 29  X_29    16 non-null     float32
 30  X_30    16 non-null     float32
 31  X_31    16 non-null     float32
 32  X_32    16 non-null     float32
 33  X_33    16 non-null     float32
 34  X_34    16 non-null     float32
 35  X_35    16 non-null     float32
 36  X_36    16 non-null     float32
 37  X_37    16 non-null     float32
 38  X_38    16 non-null     float32
 39  X_39    16 non-null     float32
 40  X_40    16 non-null     float32
 41  X_41    16 non-null     float32
 42  X_42    16 non-null     float32
 43  X_43    16 non-null     float32
 44  X_44    16 non-null     float32
 45  X_45    16 non-null     float32
 46  X_46    16 non-null     float32
 47  X_47    16 non-null     float32
 48  X_48    16 non-null     float32
 49  X_49    16 non-null     float32
 50  X_50    16 non-null     float32
 51  X_51    16 non-null     float32
 52  X_52    16 non-null     float32
dtypes: float32(53)
memory usage: 3.4 KB
       X_0  X_1  X_2  X_3  X_4  X_5  ...  X_47  X_48  X_49  X_50  X_51  X_52
index                                ...                                    
0      2.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
1      1.0  0.0  0.0  0.0  0.0  1.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
2      1.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
3      1.0  0.0  0.0  1.0  0.0  0.0  ...   0.0   0.0   0.0   0.0   0.0   1.0
4      1.0  0.0  0.0  0.0  0.0  1.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
5      3.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
6      2.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
7      1.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
8      4.0  0.0  0.0  0.0  1.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
9      1.0  1.0  0.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
10     2.0  0.0  0.0  0.0  0.0  1.0  ...   0.0   0.0   0.0   0.0   0.0   1.0
11     0.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
12     4.0  0.0  0.0  0.0  1.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
13     1.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
14     3.0  0.0  0.0  0.0  1.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
15     2.0  1.0  0.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0

[16 rows x 53 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 16 entries, 0 to 15
Data columns (total 9 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          16 non-null     int64  
 1   Score_0        16 non-null     float64
 2   Proba_0        16 non-null     float64
 3   LogProba_0     16 non-null     float64
 4   Score_1        16 non-null     float64
 5   Proba_1        16 non-null     float64
 6   LogProba_1     16 non-null     float64
 7   Decision       16 non-null     int64  
 8   DecisionProba  16 non-null     float64
dtypes: float64(7), int64(2)
memory usage: 1.3 KB
    index  Score_0   Proba_0  ...  LogProba_1  Decision  DecisionProba
0       0     22.0  0.999994  ...  -12.000006         0       0.999994
1       1     22.0  0.999994  ...  -12.000006         0       0.999994
2       2     22.0  0.999994  ...  -12.000006         0       0.999994
3       3     22.0  0.999994  ...  -12.000006         0       0.999994
4       4     22.0  0.999994  ...  -12.000006         0       0.999994
5       5     22.0  0.999994  ...  -12.000006         0       0.999994
6       6     22.0  0.999994  ...  -12.000006         0       0.999994
7       7     22.0  0.999994  ...  -12.000006         0       0.999994
8       8     22.0  0.999994  ...  -12.000006         0       0.999994
9       9     22.0  0.999994  ...  -12.000006         0       0.999994
10     10     22.0  0.999994  ...  -12.000006         0       0.999994
11     11     22.0  0.999994  ...  -12.000006         0       0.999994
12     12     22.0  0.999994  ...  -12.000006         0       0.999994
13     13     22.0  0.999994  ...  -12.000006         0       0.999994
14     14     22.0  0.999994  ...  -12.000006         0       0.999994
15     15     22.0  0.999994  ...  -12.000006         0       0.999994

[16 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
    index  Score_0  SQL_Proba_0  ...  Py_Proba_0  Py_Proba_1  Py_Decision
0       0     22.0     0.999994  ...    0.999994    0.000006        <=50K
1       1     22.0     0.999994  ...    0.999994    0.000006        <=50K
2       2     22.0     0.999994  ...    0.999994    0.000006        <=50K
3       3     22.0     0.999994  ...    0.999994    0.000006        <=50K
4       4     22.0     0.999994  ...    0.999994    0.000006        <=50K
5       5     22.0     0.999994  ...    0.999994    0.000006        <=50K
6       6     22.0     0.999994  ...    0.999994    0.000006        <=50K
7       7     22.0     0.999994  ...    0.999994    0.000006        <=50K
8       8     22.0     0.999994  ...    0.999994    0.000006        <=50K
9       9     22.0     0.999994  ...    0.999994    0.000006        <=50K
10     10     22.0     0.999994  ...    0.999994    0.000006        <=50K
11     11     22.0     0.999994  ...    0.999994    0.000006        <=50K
12     12     22.0     0.999994  ...    0.999994    0.000006        <=50K
13     13     22.0     0.999994  ...    0.999994    0.000006        <=50K
14     14     22.0     0.999994  ...    0.999994    0.000006        <=50K
15     15     22.0     0.999994  ...    0.999994    0.000006        <=50K

[16 rows x 12 columns]
MLLITE_CLASS_SQL_ERROR ('census_one_hot_tiny', 'XGBClassifier', 'duckdb') ('Py_Proba_0', 'SQL_Proba_0') 4.221287037697863e-07
    Py_Proba_0  SQL_Proba_0   SQL_Error_0
0     0.999994     0.999994  4.221287e-07
1     0.999994     0.999994  4.221287e-07
2     0.999994     0.999994  4.221287e-07
3     0.999994     0.999994  4.221287e-07
4     0.999994     0.999994  4.221287e-07
5     0.999994     0.999994  4.221287e-07
6     0.999994     0.999994  4.221287e-07
7     0.999994     0.999994  4.221287e-07
8     0.999994     0.999994  4.221287e-07
9     0.999994     0.999994  4.221287e-07
10    0.999994     0.999994  4.221287e-07
11    0.999994     0.999994  4.221287e-07
12    0.999994     0.999994  4.221287e-07
13    0.999994     0.999994  4.221287e-07
14    0.999994     0.999994  4.221287e-07
15    0.999994     0.999994  4.221287e-07
MLLITE_CLASS_SQL_ERROR ('census_one_hot_tiny', 'XGBClassifier', 'duckdb') ('Py_Proba_1', 'SQL_Proba_1') 2.802861616101591e-12
    Py_Proba_1  SQL_Proba_1   SQL_Error_1
0     0.000006     0.000006  2.802862e-12
1     0.000006     0.000006  2.802862e-12
2     0.000006     0.000006  2.802862e-12
3     0.000006     0.000006  2.802862e-12
4     0.000006     0.000006  2.802862e-12
5     0.000006     0.000006  2.802862e-12
6     0.000006     0.000006  2.802862e-12
7     0.000006     0.000006  2.802862e-12
8     0.000006     0.000006  2.802862e-12
9     0.000006     0.000006  2.802862e-12
10    0.000006     0.000006  2.802862e-12
11    0.000006     0.000006  2.802862e-12
12    0.000006     0.000006  2.802862e-12
13    0.000006     0.000006  2.802862e-12
14    0.000006     0.000006  2.802862e-12
15    0.000006     0.000006  2.802862e-12
MLLITE_CLASS_SQL_EXECUTION_STATUS ('census_one_hot_tiny', 'XGBClassifier', 'duckdb', 'Success')
   Py_Decision  SQL_Decision
0        <=50K             0
1        <=50K             0
2        <=50K             0
3        <=50K             0
4        <=50K             0
5        <=50K             0
6        <=50K             0
7        <=50K             0
8        <=50K             0
9        <=50K             0
10       <=50K             0
11       <=50K             0
12       <=50K             0
13       <=50K             0
14       <=50K             0
15       <=50K             0
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
WRITING_SQL_CODE 'logs/auto_tests/classification/XGBClassifier/mllite.XGBClassifier_census_one_hot_tiny_option_1_sqlite.sql'



SQL_OUT_PUT_FIRST_LINES_START ('census_one_hot_tiny', 'XGBClassifier', 'sqlite')
WITH model_input AS 
 (SELECT "ADS"."index" AS "index",
    CAST("ADS"."X_0" AS FLOAT) AS "X_0", CAST("ADS"."X_1" AS FLOAT) AS "X_1", CAST("ADS"."X_2" AS FLOAT) AS "X_2", CAST("ADS"."X_3" AS FLOAT) AS "X_3", CAST("ADS"."X_4" AS FLOAT) AS "X_4", CAST("ADS"."X_5" AS FLOAT) AS "X_5", CAST("ADS"."X_6" AS FLOAT) AS "X_6", CAST("ADS"."X_7" AS FLOAT) AS "X_7", CAST("ADS"."X_8" AS FLOAT) AS "X_8", CAST("ADS"."X_9" AS FLOAT) AS "X_9", CAST("ADS"."X_10" AS FLOAT) AS "X_10", CAST("ADS"."X_11" AS FLOAT) AS "X_11", CAST("ADS"."X_12" AS FLOAT) AS "X_12", CAST("ADS"."X_13" AS FLOAT) AS "X_13", CAST("ADS"."X_14" AS FLOAT) AS "X_14", CAST("ADS"."X_15" AS FLOAT) AS "X_15", CAST("ADS"."X_16" AS FLOAT) AS "X_16", CAST("ADS"."X_17" AS FLOAT) AS "X_17", CAST("ADS"."X_18" AS FLOAT) AS "X_18", CAST("ADS"."X_19" AS FLOAT) AS "X_19", CAST("ADS"."X_20" AS FLOAT) AS "X_20", CAST("ADS"."X_21" AS FLOAT) AS "X_21", CAST("ADS"."X_22" AS FLOAT) AS "X_22", CAST("ADS"."X_23" AS FLOAT) AS "X_23", CAST("ADS"."X_24" AS FLOAT) AS "X_24", CAST("ADS
SQL_OUT_PUT_FIRST_LINES_END ('census_one_hot_tiny', 'XGBClassifier', 'sqlite')
SQL_OUT_PUT_LAST_LINES_START ('census_one_hot_tiny', 'XGBClassifier', 'sqlite')
"
  FROM
   "arg_max_cte_with_max_proba" AS t
),
arg_max_cte AS 
( SELECT t."index" as "index",
     t."Proba_0" AS "Proba_0",
     t."Score_0" AS "Score_0",
     t."Proba_1" AS "Proba_1",
     t."Score_1" AS "Score_1",
     t."Max_Proba" AS "Max_Proba",
     t."Max_Score" AS "Max_Score",
     COALESCE(  t."max_idx_0", t."max_idx_1" ) AS argmax_class_idx
   FROM
     "arg_max_cte_with_max_proba_idx" AS t
)
SELECT arg_max_cte."index" AS "index",
  arg_max_cte."Score_0" AS "Score_0",
  arg_max_cte."Proba_0" AS "Proba_0",
  CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN LN( arg_max_cte."Proba_0" ) ELSE -1.79769313486231e+308 END AS "LogProba_0",
  arg_max_cte."Score_1" AS "Score_1",
  arg_max_cte."Proba_1" AS "Proba_1",
  CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN LN( arg_max_cte."Proba_1" ) ELSE -1.79769313486231e+308 END AS "LogProba_1",
  arg_max_cte."argmax_class_idx" AS "Decision",
  arg_max_cte."Max_Proba" AS "DecisionProba"
FROM arg_max_cte
SQL_OUT_PUT_LAST_LINES_END ('census_one_hot_tiny', 'XGBClassifier', 'sqlite') 




COPY_TRAINING_DATA_TO_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
Index: 16 entries, 0 to 15
Data columns (total 53 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   X_0     16 non-null     float32
 1   X_1     16 non-null     float32
 2   X_2     16 non-null     float32
 3   X_3     16 non-null     float32
 4   X_4     16 non-null     float32
 5   X_5     16 non-null     float32
 6   X_6     16 non-null     float32
 7   X_7     16 non-null     float32
 8   X_8     16 non-null     float32
 9   X_9     16 non-null     float32
 10  X_10    16 non-null     float32
 11  X_11    16 non-null     float32
 12  X_12    16 non-null     float32
 13  X_13    16 non-null     float32
 14  X_14    16 non-null     float32
 15  X_15    16 non-null     float32
 16  X_16    16 non-null     float32
 17  X_17    16 non-null     float32
 18  X_18    16 non-null     float32
 19  X_19    16 non-null     float32
 20  X_20    16 non-null     float32
 21  X_21    16 non-null     float32
 22  X_22    16 non-null     float32
 23  X_23    16 non-null     float32
 24  X_24    16 non-null     float32
 25  X_25    16 non-null     float32
 26  X_26    16 non-null     float32
 27  X_27    16 non-null     float32
 28  X_28    16 non-null     float32
 29  X_29    16 non-null     float32
 30  X_30    16 non-null     float32
 31  X_31    16 non-null     float32
 32  X_32    16 non-null     float32
 33  X_33    16 non-null     float32
 34  X_34    16 non-null     float32
 35  X_35    16 non-null     float32
 36  X_36    16 non-null     float32
 37  X_37    16 non-null     float32
 38  X_38    16 non-null     float32
 39  X_39    16 non-null     float32
 40  X_40    16 non-null     float32
 41  X_41    16 non-null     float32
 42  X_42    16 non-null     float32
 43  X_43    16 non-null     float32
 44  X_44    16 non-null     float32
 45  X_45    16 non-null     float32
 46  X_46    16 non-null     float32
 47  X_47    16 non-null     float32
 48  X_48    16 non-null     float32
 49  X_49    16 non-null     float32
 50  X_50    16 non-null     float32
 51  X_51    16 non-null     float32
 52  X_52    16 non-null     float32
dtypes: float32(53)
memory usage: 3.4 KB
       X_0  X_1  X_2  X_3  X_4  X_5  ...  X_47  X_48  X_49  X_50  X_51  X_52
index                                ...                                    
0      2.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
1      1.0  0.0  0.0  0.0  0.0  1.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
2      1.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
3      1.0  0.0  0.0  1.0  0.0  0.0  ...   0.0   0.0   0.0   0.0   0.0   1.0
4      1.0  0.0  0.0  0.0  0.0  1.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
5      3.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
6      2.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
7      1.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
8      4.0  0.0  0.0  0.0  1.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
9      1.0  1.0  0.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
10     2.0  0.0  0.0  0.0  0.0  1.0  ...   0.0   0.0   0.0   0.0   0.0   1.0
11     0.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
12     4.0  0.0  0.0  0.0  1.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
13     1.0  0.0  1.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
14     3.0  0.0  0.0  0.0  1.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0
15     2.0  1.0  0.0  0.0  0.0  0.0  ...   0.0   0.0   0.0   1.0   0.0   0.0

[16 rows x 53 columns]
COPY_TRAINING_DATA_TO_SQLITE_END


PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_START
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 16 entries, 0 to 15
Data columns (total 9 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   index          16 non-null     int64  
 1   Score_0        16 non-null     float64
 2   Proba_0        16 non-null     float64
 3   LogProba_0     16 non-null     float64
 4   Score_1        16 non-null     float64
 5   Proba_1        16 non-null     float64
 6   LogProba_1     16 non-null     float64
 7   Decision       16 non-null     int64  
 8   DecisionProba  16 non-null     float64
dtypes: float64(7), int64(2)
memory usage: 1.3 KB
    index  Score_0   Proba_0  ...  LogProba_1  Decision  DecisionProba
0       0     22.0  0.999994  ...  -12.000006         0       0.999994
1       1     22.0  0.999994  ...  -12.000006         0       0.999994
2       2     22.0  0.999994  ...  -12.000006         0       0.999994
3       3     22.0  0.999994  ...  -12.000006         0       0.999994
4       4     22.0  0.999994  ...  -12.000006         0       0.999994
5       5     22.0  0.999994  ...  -12.000006         0       0.999994
6       6     22.0  0.999994  ...  -12.000006         0       0.999994
7       7     22.0  0.999994  ...  -12.000006         0       0.999994
8       8     22.0  0.999994  ...  -12.000006         0       0.999994
9       9     22.0  0.999994  ...  -12.000006         0       0.999994
10     10     22.0  0.999994  ...  -12.000006         0       0.999994
11     11     22.0  0.999994  ...  -12.000006         0       0.999994
12     12     22.0  0.999994  ...  -12.000006         0       0.999994
13     13     22.0  0.999994  ...  -12.000006         0       0.999994
14     14     22.0  0.999994  ...  -12.000006         0       0.999994
15     15     22.0  0.999994  ...  -12.000006         0       0.999994

[16 rows x 9 columns]
PREDICT_MODEL_ON_TRAINING_DATA_INSIDE_SQLITE_END


COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_START
Index(['index', 'Score_0', 'Proba_0', 'LogProba_0', 'Score_1', 'Proba_1',
       'LogProba_1', 'Decision', 'DecisionProba'],
      dtype='object')
    index  Score_0  SQL_Proba_0  ...  Py_Proba_0  Py_Proba_1  Py_Decision
0       0     22.0     0.999994  ...    0.999994    0.000006        <=50K
1       1     22.0     0.999994  ...    0.999994    0.000006        <=50K
2       2     22.0     0.999994  ...    0.999994    0.000006        <=50K
3       3     22.0     0.999994  ...    0.999994    0.000006        <=50K
4       4     22.0     0.999994  ...    0.999994    0.000006        <=50K
5       5     22.0     0.999994  ...    0.999994    0.000006        <=50K
6       6     22.0     0.999994  ...    0.999994    0.000006        <=50K
7       7     22.0     0.999994  ...    0.999994    0.000006        <=50K
8       8     22.0     0.999994  ...    0.999994    0.000006        <=50K
9       9     22.0     0.999994  ...    0.999994    0.000006        <=50K
10     10     22.0     0.999994  ...    0.999994    0.000006        <=50K
11     11     22.0     0.999994  ...    0.999994    0.000006        <=50K
12     12     22.0     0.999994  ...    0.999994    0.000006        <=50K
13     13     22.0     0.999994  ...    0.999994    0.000006        <=50K
14     14     22.0     0.999994  ...    0.999994    0.000006        <=50K
15     15     22.0     0.999994  ...    0.999994    0.000006        <=50K

[16 rows x 12 columns]
MLLITE_CLASS_SQL_ERROR ('census_one_hot_tiny', 'XGBClassifier', 'sqlite') ('Py_Proba_0', 'SQL_Proba_0') 4.221287037697863e-07
    Py_Proba_0  SQL_Proba_0   SQL_Error_0
0     0.999994     0.999994  4.221287e-07
1     0.999994     0.999994  4.221287e-07
2     0.999994     0.999994  4.221287e-07
3     0.999994     0.999994  4.221287e-07
4     0.999994     0.999994  4.221287e-07
5     0.999994     0.999994  4.221287e-07
6     0.999994     0.999994  4.221287e-07
7     0.999994     0.999994  4.221287e-07
8     0.999994     0.999994  4.221287e-07
9     0.999994     0.999994  4.221287e-07
10    0.999994     0.999994  4.221287e-07
11    0.999994     0.999994  4.221287e-07
12    0.999994     0.999994  4.221287e-07
13    0.999994     0.999994  4.221287e-07
14    0.999994     0.999994  4.221287e-07
15    0.999994     0.999994  4.221287e-07
MLLITE_CLASS_SQL_ERROR ('census_one_hot_tiny', 'XGBClassifier', 'sqlite') ('Py_Proba_1', 'SQL_Proba_1') 2.802861616101591e-12
    Py_Proba_1  SQL_Proba_1   SQL_Error_1
0     0.000006     0.000006  2.802862e-12
1     0.000006     0.000006  2.802862e-12
2     0.000006     0.000006  2.802862e-12
3     0.000006     0.000006  2.802862e-12
4     0.000006     0.000006  2.802862e-12
5     0.000006     0.000006  2.802862e-12
6     0.000006     0.000006  2.802862e-12
7     0.000006     0.000006  2.802862e-12
8     0.000006     0.000006  2.802862e-12
9     0.000006     0.000006  2.802862e-12
10    0.000006     0.000006  2.802862e-12
11    0.000006     0.000006  2.802862e-12
12    0.000006     0.000006  2.802862e-12
13    0.000006     0.000006  2.802862e-12
14    0.000006     0.000006  2.802862e-12
15    0.000006     0.000006  2.802862e-12
MLLITE_CLASS_SQL_EXECUTION_STATUS ('census_one_hot_tiny', 'XGBClassifier', 'sqlite', 'Success')
   Py_Decision  SQL_Decision
0        <=50K             0
1        <=50K             0
2        <=50K             0
3        <=50K             0
4        <=50K             0
5        <=50K             0
6        <=50K             0
7        <=50K             0
8        <=50K             0
9        <=50K             0
10       <=50K             0
11       <=50K             0
12       <=50K             0
13       <=50K             0
14       <=50K             0
15       <=50K             0
COMPARE_SQL_OUTPUT_AND_PYTHON_OUTPUT_END
